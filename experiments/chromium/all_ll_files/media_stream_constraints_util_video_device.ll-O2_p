; ModuleID = '../../third_party/blink/renderer/modules/mediastream/media_stream_constraints_util_video_device.cc'
source_filename = "../../third_party/blink/renderer/modules/mediastream/media_stream_constraints_util_video_device.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.media::VideoCaptureParams" = type <{ %"struct.media::VideoCaptureFormat", i32, i32, i32, i8, [3 x i8] }>
%"struct.media::VideoCaptureFormat" = type { %"class.gfx::Size", float, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.10 }
%union.anon.10 = type { i8 }
%union.anon.17 = type { %"class.gfx::Size" }
%union.anon.22 = type { double }
%"class.blink::media_constraints::ResolutionSet" = type { i32, i32, i32, i32, double, double }
%union.anon.43 = type { i32 }
%"class.WTF::Vector.44" = type { %"class.WTF::VectorBuffer.45" }
%"class.WTF::VectorBuffer.45" = type { %"class.WTF::VectorBufferBase.46" }
%"class.WTF::VectorBufferBase.46" = type { i8*, i32, i32 }
%"class.blink::DoubleConstraint" = type <{ %"class.blink::BaseConstraint.base", [7 x i8], double, double, double, double, i8, [7 x i8] }>
%"class.blink::BaseConstraint.base" = type <{ i32 (...)**, i8*, i8 }>
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33" }
%"class.WTF::VectorBufferBase.33" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::BooleanConstraint" = type { %"class.blink::BaseConstraint.base", i8, [6 x i8] }
%"class.blink::LongConstraint" = type <{ %"class.blink::BaseConstraint.base", [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.blink::VideoInputDeviceCapabilities" = type <{ %"class.WTF::String", %"class.WTF::String", %"struct.media::VideoCaptureControlSupport", [5 x i8], %"class.WTF::Vector", i32, [4 x i8] }>
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.media::VideoCaptureFormat"*, i32, i32 }
%"struct.blink::VideoDeviceCaptureCapabilities" = type { %"class.WTF::Vector.2", %"class.WTF::Vector.7" }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"struct.blink::VideoInputDeviceCapabilities"*, i32, i32 }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { %"class.absl::optional"*, i32, i32 }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::VideoCaptureSettings" = type { i8*, %"class.std::__1::basic_string", %"struct.media::VideoCaptureParams", %"class.absl::optional", %"class.blink::VideoTrackAdapterSettings", %"class.absl::optional.18", %"class.absl::optional.18", %"class.absl::optional.18", %"class.absl::optional.18", %"class.absl::optional.18" }
%"class.blink::VideoTrackAdapterSettings" = type { %"class.absl::optional.13", double, double, double }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%"class.blink::MediaConstraints" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::media_constraints::ResolutionSet::Point" = type { double, double }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.blink::MediaTrackConstraintSetPlatform" = type { %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::StringConstraint", %"class.blink::StringConstraint", %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::StringConstraint", %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", %"class.blink::StringConstraint", %"class.blink::BooleanConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::StringConstraint", %"class.blink::StringConstraint", %"class.blink::StringConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint" }
%"class.blink::StringConstraint" = type { %"class.blink::BaseConstraint.base", %"class.WTF::Vector.31", %"class.WTF::Vector.31" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { double*, double*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { double* }
%"class.blink::(anonymous namespace)::PTZDeviceState" = type { %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet" }
%"class.blink::media_constraints::NumericRangeSet" = type { %"class.absl::optional.18", %"class.absl::optional.18" }
%"class.blink::(anonymous namespace)::CandidateFormat" = type { %"struct.media::VideoCaptureFormat", %"class.blink::media_constraints::ResolutionSet", %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet.38", %"class.blink::media_constraints::NumericRangeSet.38", %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::DiscreteSet" }
%"class.blink::media_constraints::NumericRangeSet.38" = type { %"class.absl::optional.39", %"class.absl::optional.39" }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%"class.blink::media_constraints::DiscreteSet" = type { i8, %"class.WTF::Vector.44" }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30" }
%"class.WTF::VectorBufferBase.30" = type { %"struct.blink::MediaTrackConstraintSetPlatform"*, i32, i32 }
%"class.blink::BaseConstraint" = type <{ i32 (...)**, i8*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink31MediaTrackConstraintSetPlatformD2Ev = comdat any

$_ZN5blink16StringConstraintD2Ev = comdat any

$_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_ = comdat any

$_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_dd = comdat any

$_ZN5blink17media_constraints15NumericRangeSetIiE14FromConstraintINS_14LongConstraintEEES2_T_ii = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKbEEvOT_ = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZNK3WTF6VectorIN5blink28VideoInputDeviceCapabilitiesELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@_ZN5blink12_GLOBAL__N_115kVideoKindDepthE = internal unnamed_addr constant [6 x i8] c"depth\00", align 1
@_ZN5blink12_GLOBAL__N_115kVideoKindColorE = internal unnamed_addr constant [6 x i8] c"color\00", align 1
@__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.result = private unnamed_addr constant { i8*, %"class.std::__1::basic_string", %"struct.media::VideoCaptureParams", %"class.absl::optional", [6 x i8], { { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double }, { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } { i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.media::VideoCaptureParams" <{ %"struct.media::VideoCaptureFormat" { %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766 }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.absl::optional" { %"class.absl::optional_internal::optional_data" { %"class.absl::optional_internal::optional_data_base" { %"class.absl::optional_internal::optional_data_dtor_base" { i8 -86, %union.anon.10 { i8 -86 } } } } }, [6 x i8] c"\AA\AA\AA\AA\AA\AA", { { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double } { { { { { i8, [3 x i8], %union.anon.17 } } } } { { { { i8, [3 x i8], %union.anon.17 } } } { { { i8, [3 x i8], %union.anon.17 } } { { i8, [3 x i8], %union.anon.17 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.17 { %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } } } } } }, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } } }, align 8
@__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.candidate_format = private unnamed_addr constant { %"struct.media::VideoCaptureFormat", %"class.blink::media_constraints::ResolutionSet", { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [3 x i8], %union.anon.43 } } } }, { { { { i8, [3 x i8], %union.anon.43 } } } } }, { { { { { i8, [3 x i8], %union.anon.43 } } } }, { { { { i8, [3 x i8], %union.anon.43 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { i8, [7 x i8], %"class.WTF::Vector.44" } } { %"struct.media::VideoCaptureFormat" { %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %"class.blink::media_constraints::ResolutionSet" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } { { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } } }, { { { { { i8, [3 x i8], %union.anon.43 } } } }, { { { { i8, [3 x i8], %union.anon.43 } } } } } { { { { { i8, [3 x i8], %union.anon.43 } } } } { { { { i8, [3 x i8], %union.anon.43 } } } { { { i8, [3 x i8], %union.anon.43 } } { { i8, [3 x i8], %union.anon.43 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.43 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.43 } } } } { { { { i8, [3 x i8], %union.anon.43 } } } { { { i8, [3 x i8], %union.anon.43 } } { { i8, [3 x i8], %union.anon.43 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.43 { i32 -1431655766 } } } } } }, { { { { { i8, [3 x i8], %union.anon.43 } } } }, { { { { i8, [3 x i8], %union.anon.43 } } } } } { { { { { i8, [3 x i8], %union.anon.43 } } } } { { { { i8, [3 x i8], %union.anon.43 } } } { { { i8, [3 x i8], %union.anon.43 } } { { i8, [3 x i8], %union.anon.43 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.43 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.43 } } } } { { { { i8, [3 x i8], %union.anon.43 } } } { { { i8, [3 x i8], %union.anon.43 } } { { i8, [3 x i8], %union.anon.43 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.43 { i32 -1431655766 } } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } { { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } } }, { i8, [7 x i8], %"class.WTF::Vector.44" } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.44" { %"class.WTF::VectorBuffer.45" { %"class.WTF::VectorBufferBase.46" { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 } } } } }, align 8
@__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state = private unnamed_addr constant { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } } { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } { { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } { { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } { { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } } } }, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"environment\00", align 1
@_ZTVN5blink16DoubleConstraintE = external unnamed_addr constant { [9 x i8*] }, align 8
@__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState20FailedConstraintNameEv.dummy = private unnamed_addr constant { %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::BooleanConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint" } { %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::DoubleConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.blink::DoubleConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" } { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } } }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" } { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } } }, %"class.blink::DoubleConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" } { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } } }, %"class.blink::DoubleConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" } { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } } }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::DoubleConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.blink::DoubleConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"class.blink::DoubleConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" } { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } } }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" } { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } } }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" } { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.31" { %"class.WTF::VectorBuffer.32" { %"class.WTF::VectorBufferBase.33" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } } }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::BooleanConstraint" { %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, %"class.blink::LongConstraint" <{ %"class.blink::BaseConstraint.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86 }>, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 8
@_ZTVN5blink16StringConstraintE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = bool]\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink16DoubleConstraint18kConstraintEpsilonE = external local_unnamed_addr constant double, align 8
@_ZN5blink26kMinDeviceCaptureFrameRateE = external local_unnamed_addr constant double, align 8
@_ZTVN5blink14LongConstraintE = external unnamed_addr constant { [9 x i8*] }, align 8
@__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE.zoom_intersection = private unnamed_addr constant { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } { { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } { { { { i8, [7 x i8], %union.anon.22 } } } { { { i8, [7 x i8], %union.anon.22 } } { { i8, [7 x i8], %union.anon.22 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.22 { double 0xFFFFFFFFFFFFFFFF } } } } } }, align 8
@__const._ZNK5blink12_GLOBAL__N_115CandidateFormat7FitnessERKNS_31MediaTrackConstraintSetPlatformEPNS_25VideoTrackAdapterSettingsE.track_settings_without_rescale = private unnamed_addr constant { { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double } { { { { { i8, [3 x i8], %union.anon.17 } } } } { { { { i8, [3 x i8], %union.anon.17 } } } { { { i8, [3 x i8], %union.anon.17 } } { { i8, [3 x i8], %union.anon.17 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.17 { %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } } } } } }, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF }, align 8
@_ZN5blink19WebMediaStreamTrack15kResizeModeNoneE = external constant [0 x i8], align 1
@_ZN5blink19WebMediaStreamTrack18kResizeModeRescaleE = external constant [0 x i8], align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink28VideoInputDeviceCapabilitiesC1Ev = hidden unnamed_addr alias void (%"struct.blink::VideoInputDeviceCapabilities"*), void (%"struct.blink::VideoInputDeviceCapabilities"*)* @_ZN5blink28VideoInputDeviceCapabilitiesC2Ev
@_ZN5blink28VideoInputDeviceCapabilitiesC1EN3WTF6StringES2_RKN5media26VideoCaptureControlSupportENS1_6VectorINS3_18VideoCaptureFormatELj0ENS1_18PartitionAllocatorEEENS_5mojom10FacingModeE = hidden unnamed_addr alias void (%"struct.blink::VideoInputDeviceCapabilities"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"struct.media::VideoCaptureControlSupport"*, %"class.WTF::Vector"*, i32), void (%"struct.blink::VideoInputDeviceCapabilities"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"struct.media::VideoCaptureControlSupport"*, %"class.WTF::Vector"*, i32)* @_ZN5blink28VideoInputDeviceCapabilitiesC2EN3WTF6StringES2_RKN5media26VideoCaptureControlSupportENS1_6VectorINS3_18VideoCaptureFormatELj0ENS1_18PartitionAllocatorEEENS_5mojom10FacingModeE
@_ZN5blink28VideoInputDeviceCapabilitiesC1EOS0_ = hidden unnamed_addr alias void (%"struct.blink::VideoInputDeviceCapabilities"*, %"struct.blink::VideoInputDeviceCapabilities"*), void (%"struct.blink::VideoInputDeviceCapabilities"*, %"struct.blink::VideoInputDeviceCapabilities"*)* @_ZN5blink28VideoInputDeviceCapabilitiesC2EOS0_
@_ZN5blink28VideoInputDeviceCapabilitiesD1Ev = hidden unnamed_addr alias void (%"struct.blink::VideoInputDeviceCapabilities"*), void (%"struct.blink::VideoInputDeviceCapabilities"*)* @_ZN5blink28VideoInputDeviceCapabilitiesD2Ev
@_ZN5blink30VideoDeviceCaptureCapabilitiesC1Ev = hidden unnamed_addr alias void (%"struct.blink::VideoDeviceCaptureCapabilities"*), void (%"struct.blink::VideoDeviceCaptureCapabilities"*)* @_ZN5blink30VideoDeviceCaptureCapabilitiesC2Ev
@_ZN5blink30VideoDeviceCaptureCapabilitiesC1EOS0_ = hidden unnamed_addr alias void (%"struct.blink::VideoDeviceCaptureCapabilities"*, %"struct.blink::VideoDeviceCaptureCapabilities"*), void (%"struct.blink::VideoDeviceCaptureCapabilities"*, %"struct.blink::VideoDeviceCaptureCapabilities"*)* @_ZN5blink30VideoDeviceCaptureCapabilitiesC2EOS0_
@_ZN5blink30VideoDeviceCaptureCapabilitiesD1Ev = hidden unnamed_addr alias void (%"struct.blink::VideoDeviceCaptureCapabilities"*), void (%"struct.blink::VideoDeviceCaptureCapabilities"*)* @_ZN5blink30VideoDeviceCaptureCapabilitiesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28VideoInputDeviceCapabilitiesC2Ev(%"struct.blink::VideoInputDeviceCapabilities"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4
  %3 = bitcast %"class.WTF::Vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #14
  %4 = bitcast %"struct.blink::VideoInputDeviceCapabilities"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 19, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28VideoInputDeviceCapabilitiesC2EN3WTF6StringES2_RKN5media26VideoCaptureControlSupportENS1_6VectorINS3_18VideoCaptureFormatELj0ENS1_18PartitionAllocatorEEENS_5mojom10FacingModeE(%"struct.blink::VideoInputDeviceCapabilities"* nocapture, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"struct.media::VideoCaptureControlSupport"* nocapture readonly dereferenceable(3), %"class.WTF::Vector"* nocapture, i32) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %8 = ptrtoint %"class.WTF::StringImpl"* %2 to i64
  %9 = bitcast %"struct.blink::VideoInputDeviceCapabilities"* %0 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 1
  %11 = bitcast %"class.WTF::String"* %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"struct.media::VideoCaptureControlSupport", %"struct.media::VideoCaptureControlSupport"* %3, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 %13, i64 3, i1 false)
  %14 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %17 = bitcast %"class.WTF::Vector"* %4 to i64*
  %18 = bitcast %"class.WTF::Vector"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #14
  %19 = load i64, i64* %17, align 8
  %20 = bitcast %"class.WTF::Vector"* %14 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %15, align 4
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %15, align 4
  store i32 %22, i32* %21, align 4
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %16, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %16, align 4
  store i32 %25, i32* %24, align 4
  %27 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 5
  store i32 %5, i32* %27, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28VideoInputDeviceCapabilitiesC2EOS0_(%"struct.blink::VideoInputDeviceCapabilities"* nocapture, %"struct.blink::VideoInputDeviceCapabilities"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.blink::VideoInputDeviceCapabilities"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.blink::VideoInputDeviceCapabilities"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %7 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.WTF::String"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 3, i1 false)
  %15 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 4
  %17 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %19 = bitcast %"class.WTF::Vector"* %16 to i64*
  %20 = bitcast %"class.WTF::Vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #14
  %21 = load i64, i64* %19, align 8
  %22 = bitcast %"class.WTF::Vector"* %15 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %24 = load i32, i32* %17, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %17, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %27 = load i32, i32* %18, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %18, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 5
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.blink::VideoInputDeviceCapabilities"* @_ZN5blink28VideoInputDeviceCapabilitiesaSEOS0_(%"struct.blink::VideoInputDeviceCapabilities"* returned, %"struct.blink::VideoInputDeviceCapabilities"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.blink::VideoInputDeviceCapabilities"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %6 = bitcast %"struct.blink::VideoInputDeviceCapabilities"* %0 to i64*
  %7 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %2, %19, %22
  %24 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::String"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  %29 = bitcast %"class.WTF::String"* %24 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #14
  br label %46

46:                                               ; preds = %23, %42, %45
  %47 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 2, i32 0
  %48 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 3, i1 false)
  %49 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4
  %50 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 4
  %51 = bitcast %"class.WTF::Vector"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.WTF::Vector"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  store atomic i64 %54, i64* %51 monotonic, align 8
  store atomic i64 %52, i64* %53 monotonic, align 8
  %55 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %57 = load i32, i32* %55, align 4
  %58 = load i32, i32* %56, align 4
  store i32 %58, i32* %55, align 4
  store i32 %57, i32* %56, align 4
  %59 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %60 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %61 = load i32, i32* %59, align 4
  %62 = load i32, i32* %60, align 4
  store i32 %62, i32* %59, align 4
  store i32 %61, i32* %60, align 4
  %63 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1, i64 0, i32 5
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 5
  store i32 %64, i32* %65, align 8
  ret %"struct.blink::VideoInputDeviceCapabilities"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28VideoInputDeviceCapabilitiesD2Ev(%"struct.blink::VideoInputDeviceCapabilities"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"struct.media::VideoCaptureFormat"*, %"struct.media::VideoCaptureFormat"** %2, align 8
  %4 = icmp eq %"struct.media::VideoCaptureFormat"* %3, null
  %5 = bitcast %"struct.media::VideoCaptureFormat"* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #14
  store %"struct.media::VideoCaptureFormat"* null, %"struct.media::VideoCaptureFormat"** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #14
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #14
  br label %46

46:                                               ; preds = %29, %42, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21GetVideoKindForFormatERKN5media18VideoCaptureFormatE(%"class.blink::WebString"* noalias sret, %"struct.media::VideoCaptureFormat"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 26
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 5, i8* %11, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_115kVideoKindDepthE, i64 0, i64 0), i64 5, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %9, i64 5
  store i8 0, i8* %12, align 1
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %13 = load i8, i8* %11, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %25, label %28

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 5, i8* %18, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_115kVideoKindColorE, i64 0, i64 0), i64 5, i1 false) #14
  %19 = getelementptr inbounds i8, i8* %16, i64 5
  store i8 0, i8* %19, align 1
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %20 = load i8, i8* %18, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #15
  br label %28

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %25, %8, %15, %22
  %29 = phi i8* [ %16, %22 ], [ %16, %15 ], [ %9, %8 ], [ %9, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  ret void
}

declare void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink20ToPlatformFacingModeENS_5mojom10FacingModeE(i32) local_unnamed_addr #3 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30VideoDeviceCaptureCapabilitiesC2Ev(%"struct.blink::VideoDeviceCaptureCapabilities"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.blink::VideoDeviceCaptureCapabilities"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30VideoDeviceCaptureCapabilitiesC2EOS0_(%"struct.blink::VideoDeviceCaptureCapabilities"* nocapture, %"struct.blink::VideoDeviceCaptureCapabilities"* nocapture dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast %"struct.blink::VideoDeviceCaptureCapabilities"* %1 to i64*
  %6 = bitcast %"struct.blink::VideoDeviceCaptureCapabilities"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #14
  %7 = load i64, i64* %5, align 8
  %8 = bitcast %"struct.blink::VideoDeviceCaptureCapabilities"* %0 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %3, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %3, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %4, align 4
  store i32 %13, i32* %12, align 4
  %15 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %19 = bitcast %"class.WTF::Vector.7"* %16 to i64*
  %20 = bitcast %"class.WTF::Vector.7"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #14
  %21 = load i64, i64* %19, align 8
  %22 = bitcast %"class.WTF::Vector.7"* %15 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %24 = load i32, i32* %17, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %17, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %27 = load i32, i32* %18, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %18, align 4
  store i32 %27, i32* %26, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30VideoDeviceCaptureCapabilitiesD2Ev(%"struct.blink::VideoDeviceCaptureCapabilities"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.absl::optional"*, %"class.absl::optional"** %2, align 8
  %4 = icmp eq %"class.absl::optional"* %3, null
  br i1 %4, label %12, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %5
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %11) #14
  store %"class.absl::optional"* null, %"class.absl::optional"** %2, align 8
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.blink::VideoInputDeviceCapabilities"*, %"struct.blink::VideoInputDeviceCapabilities"** %13, align 8
  %15 = icmp eq %"struct.blink::VideoInputDeviceCapabilities"* %14, null
  br i1 %15, label %33, label %16, !prof !2

16:                                               ; preds = %12
  %17 = bitcast %"struct.blink::VideoInputDeviceCapabilities"* %14 to i8*
  %18 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %31, label %21, !prof !3

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %14, i64 %22
  br label %24

24:                                               ; preds = %24, %21
  %25 = phi %"struct.blink::VideoInputDeviceCapabilities"* [ %26, %24 ], [ %14, %21 ]
  tail call void @_ZN5blink28VideoInputDeviceCapabilitiesD2Ev(%"struct.blink::VideoInputDeviceCapabilities"* %25) #14
  %26 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %25, i64 1
  %27 = icmp eq %"struct.blink::VideoInputDeviceCapabilities"* %26, %23
  br i1 %27, label %28, label %24

28:                                               ; preds = %24
  store i32 0, i32* %18, align 4
  %29 = bitcast %"struct.blink::VideoDeviceCaptureCapabilities"* %0 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %16
  %32 = phi i8* [ %30, %28 ], [ %17, %16 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #14
  store %"struct.blink::VideoInputDeviceCapabilities"* null, %"struct.blink::VideoInputDeviceCapabilities"** %13, align 8
  br label %33

33:                                               ; preds = %12, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.blink::VideoDeviceCaptureCapabilities"* @_ZN5blink30VideoDeviceCaptureCapabilitiesaSEOS0_(%"struct.blink::VideoDeviceCaptureCapabilities"* returned, %"struct.blink::VideoDeviceCaptureCapabilities"* nocapture dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.blink::VideoDeviceCaptureCapabilities"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"struct.blink::VideoDeviceCaptureCapabilities"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  store atomic i64 %6, i64* %3 monotonic, align 8
  store atomic i64 %4, i64* %5 monotonic, align 8
  %7 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %7, align 4
  %10 = load i32, i32* %8, align 4
  store i32 %10, i32* %7, align 4
  store i32 %9, i32* %8, align 4
  %11 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %11, align 4
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %11, align 4
  store i32 %13, i32* %12, align 4
  %15 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 1
  %17 = bitcast %"class.WTF::Vector.7"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.WTF::Vector.7"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  store atomic i64 %20, i64* %17 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %21 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %21, align 4
  store i32 %23, i32* %22, align 4
  %25 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %27 = load i32, i32* %25, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %25, align 4
  store i32 %27, i32* %26, align 4
  ret %"struct.blink::VideoDeviceCaptureCapabilities"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid(%"class.blink::VideoCaptureSettings"* noalias sret, %"struct.blink::VideoDeviceCaptureCapabilities"* dereferenceable(32), %"class.blink::MediaConstraints"* dereferenceable(8), i32, i32, double) local_unnamed_addr #0 {
  %7 = alloca %"class.blink::DoubleConstraint", align 8
  %8 = alloca %"class.blink::DoubleConstraint", align 8
  %9 = alloca %"class.blink::DoubleConstraint", align 8
  %10 = alloca %"class.blink::media_constraints::ResolutionSet::Point", align 8
  %11 = alloca %"class.blink::media_constraints::ResolutionSet::Point", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.blink::VideoTrackAdapterSettings", align 8
  %19 = alloca %"class.blink::VideoTrackAdapterSettings", align 8
  %20 = alloca %"class.blink::VideoTrackAdapterSettings", align 8
  %21 = alloca %"class.blink::VideoTrackAdapterSettings", align 8
  %22 = alloca %"class.blink::WebString", align 8
  %23 = alloca %"class.blink::WebString", align 8
  %24 = alloca %"class.blink::WebString", align 8
  %25 = alloca %"class.blink::WebString", align 8
  %26 = alloca %"struct.blink::MediaTrackConstraintSetPlatform", align 8
  %27 = alloca %"class.blink::DoubleConstraint", align 8
  %28 = alloca %"class.blink::DoubleConstraint", align 8
  %29 = alloca %"class.blink::DoubleConstraint", align 8
  %30 = alloca %"class.std::__1::vector", align 8
  %31 = alloca %"class.blink::VideoCaptureSettings", align 8
  %32 = alloca i8*, align 8
  %33 = alloca %"class.blink::(anonymous namespace)::PTZDeviceState", align 8
  %34 = alloca %"class.blink::(anonymous namespace)::CandidateFormat", align 8
  %35 = alloca %"class.std::__1::vector", align 8
  %36 = alloca [7 x i8], align 1
  %37 = alloca [7 x i8], align 1
  %38 = alloca [7 x i8], align 1
  %39 = alloca [7 x i8], align 1
  %40 = alloca [7 x i8], align 1
  %41 = alloca [7 x i8], align 1
  %42 = alloca %"class.blink::VideoTrackAdapterSettings", align 8
  %43 = alloca %"struct.media::VideoCaptureParams", align 4
  %44 = alloca %"class.blink::VideoCaptureSettings", align 8
  %45 = alloca %"class.std::__1::basic_string", align 8
  %46 = alloca %"struct.media::VideoCaptureParams", align 8
  %47 = alloca %"class.absl::optional.18", align 8
  %48 = alloca %"class.absl::optional.18", align 8
  %49 = alloca %"class.absl::optional.18", align 8
  %50 = bitcast %"class.std::__1::vector"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #14
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::vector"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  %54 = tail call dereferenceable(16) %"class.WTF::Vector.28"* @_ZNK5blink16MediaConstraints8AdvancedEv(%"class.blink::MediaConstraints"* %2) #14
  %55 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %54, i64 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 6
  %58 = zext i32 %57 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #14
  %59 = icmp eq i32 %57, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %6
  %61 = bitcast double** %52 to i64*
  br label %78

62:                                               ; preds = %6
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = shl nuw nsw i64 %58, 3
  %65 = tail call i8* @_Znwm(i64 %64) #15
  %66 = bitcast i8* %65 to double*
  %67 = bitcast %"class.std::__1::vector"* %30 to i8**
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds double, double* %66, i64 %58
  store double* %68, double** %63, align 8
  %69 = bitcast double** %52 to i64*
  %70 = ptrtoint i8* %65 to i64
  %71 = add nsw i64 %58, -1
  %72 = getelementptr double, double* %66, i64 %71
  %73 = ptrtoint double* %72 to i64
  %74 = sub i64 8, %70
  %75 = add i64 %74, %73
  %76 = and i64 %75, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 %76, i1 false) #14
  %77 = ptrtoint double* %68 to i64
  store i64 %77, i64* %69, align 8
  br label %78

78:                                               ; preds = %60, %62
  %79 = phi i64* [ %61, %60 ], [ %69, %62 ]
  %80 = phi i64 [ 0, %60 ], [ %77, %62 ]
  %81 = phi double* [ null, %60 ], [ %66, %62 ]
  %82 = ptrtoint double* %81 to i64
  %83 = sub i64 %80, %82
  %84 = icmp sgt i64 %83, 0
  br i1 %84, label %85, label %173

85:                                               ; preds = %78
  %86 = lshr exact i64 %83, 3
  %87 = lshr i64 %83, 3
  %88 = icmp eq i64 %87, 0
  %89 = zext i1 %88 to i64
  %90 = add nuw nsw i64 %87, %89
  %91 = icmp ult i64 %90, 4
  br i1 %91, label %163, label %92

92:                                               ; preds = %85
  %93 = and i64 %90, 4611686018427387900
  %94 = sub nsw i64 %86, %93
  %95 = getelementptr double, double* %81, i64 %93
  %96 = add nsw i64 %93, -4
  %97 = lshr exact i64 %96, 2
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp ult i64 %96, 28
  br i1 %100, label %148, label %101

101:                                              ; preds = %92
  %102 = sub nsw i64 %98, %99
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi i64 [ 0, %101 ], [ %145, %103 ]
  %105 = phi i64 [ %102, %101 ], [ %146, %103 ]
  %106 = getelementptr double, double* %81, i64 %104
  %107 = bitcast double* %106 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %107, align 8
  %108 = getelementptr double, double* %106, i64 2
  %109 = bitcast double* %108 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %109, align 8
  %110 = or i64 %104, 4
  %111 = getelementptr double, double* %81, i64 %110
  %112 = bitcast double* %111 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %112, align 8
  %113 = getelementptr double, double* %111, i64 2
  %114 = bitcast double* %113 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %114, align 8
  %115 = or i64 %104, 8
  %116 = getelementptr double, double* %81, i64 %115
  %117 = bitcast double* %116 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %117, align 8
  %118 = getelementptr double, double* %116, i64 2
  %119 = bitcast double* %118 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %119, align 8
  %120 = or i64 %104, 12
  %121 = getelementptr double, double* %81, i64 %120
  %122 = bitcast double* %121 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %122, align 8
  %123 = getelementptr double, double* %121, i64 2
  %124 = bitcast double* %123 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %124, align 8
  %125 = or i64 %104, 16
  %126 = getelementptr double, double* %81, i64 %125
  %127 = bitcast double* %126 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %127, align 8
  %128 = getelementptr double, double* %126, i64 2
  %129 = bitcast double* %128 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %129, align 8
  %130 = or i64 %104, 20
  %131 = getelementptr double, double* %81, i64 %130
  %132 = bitcast double* %131 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %132, align 8
  %133 = getelementptr double, double* %131, i64 2
  %134 = bitcast double* %133 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %134, align 8
  %135 = or i64 %104, 24
  %136 = getelementptr double, double* %81, i64 %135
  %137 = bitcast double* %136 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %137, align 8
  %138 = getelementptr double, double* %136, i64 2
  %139 = bitcast double* %138 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %139, align 8
  %140 = or i64 %104, 28
  %141 = getelementptr double, double* %81, i64 %140
  %142 = bitcast double* %141 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %142, align 8
  %143 = getelementptr double, double* %141, i64 2
  %144 = bitcast double* %143 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %144, align 8
  %145 = add i64 %104, 32
  %146 = add i64 %105, -8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %103, !llvm.loop !4

148:                                              ; preds = %103, %92
  %149 = phi i64 [ 0, %92 ], [ %145, %103 ]
  %150 = icmp eq i64 %99, 0
  br i1 %150, label %161, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %158, %151 ], [ %149, %148 ]
  %153 = phi i64 [ %159, %151 ], [ %99, %148 ]
  %154 = getelementptr double, double* %81, i64 %152
  %155 = bitcast double* %154 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %155, align 8
  %156 = getelementptr double, double* %154, i64 2
  %157 = bitcast double* %156 to <2 x i64>*
  store <2 x i64> <i64 9218868437227405312, i64 9218868437227405312>, <2 x i64>* %157, align 8
  %158 = add i64 %152, 4
  %159 = add i64 %153, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %151, !llvm.loop !6

161:                                              ; preds = %151, %148
  %162 = icmp eq i64 %90, %93
  br i1 %162, label %173, label %163

163:                                              ; preds = %161, %85
  %164 = phi i64 [ %86, %85 ], [ %94, %161 ]
  %165 = phi double* [ %81, %85 ], [ %95, %161 ]
  br label %166

166:                                              ; preds = %163, %166
  %167 = phi i64 [ %171, %166 ], [ %164, %163 ]
  %168 = phi double* [ %170, %166 ], [ %165, %163 ]
  %169 = bitcast double* %168 to i64*
  store i64 9218868437227405312, i64* %169, align 8
  %170 = getelementptr inbounds double, double* %168, i64 1
  %171 = add nsw i64 %167, -1
  %172 = icmp sgt i64 %171, 0
  br i1 %172, label %166, label %173, !llvm.loop !8

173:                                              ; preds = %166, %161, %78
  %174 = bitcast %"class.blink::VideoCaptureSettings"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %174) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %174, i8* align 8 bitcast ({ i8*, %"class.std::__1::basic_string", %"struct.media::VideoCaptureParams", %"class.absl::optional", [6 x i8], { { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double }, { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.result to i8*), i64 192, i1 false)
  call void @_ZN5blink20VideoCaptureSettingsC1Ev(%"class.blink::VideoCaptureSettings"* nonnull %31) #14
  %175 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #14
  %176 = getelementptr inbounds %"class.blink::VideoCaptureSettings", %"class.blink::VideoCaptureSettings"* %31, i64 0, i32 0
  %177 = bitcast %"class.blink::VideoCaptureSettings"* %31 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast i8** %32 to i64*
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 0
  %181 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %182 = load %"struct.blink::VideoInputDeviceCapabilities"*, %"struct.blink::VideoInputDeviceCapabilities"** %181, align 8
  %183 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %182, i64 %185
  %187 = icmp eq i32 %184, 0
  %188 = inttoptr i64 %178 to i8*
  br i1 %187, label %417, label %189

189:                                              ; preds = %173
  %190 = bitcast %"class.blink::DoubleConstraint"* %27 to i8*
  %191 = bitcast %"class.blink::DoubleConstraint"* %28 to i8*
  %192 = bitcast %"class.blink::DoubleConstraint"* %29 to i8*
  %193 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %27, i64 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %27, i64 0, i32 0, i32 1
  %195 = bitcast i8** %194 to i8*
  %196 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %27, i64 0, i32 2
  %197 = bitcast double* %196 to i8*
  %198 = bitcast %"class.blink::DoubleConstraint"* %27 to i1 (%"class.blink::DoubleConstraint"*)***
  %199 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 5) to i1 (%"class.blink::DoubleConstraint"*)**), align 8
  %200 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %27, i64 0, i32 4
  %201 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %27, i64 0, i32 3
  %202 = bitcast %"class.blink::DoubleConstraint"* %27 to %"class.blink::BaseConstraint"*
  %203 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %28, i64 0, i32 0, i32 0
  %204 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %28, i64 0, i32 0, i32 1
  %205 = bitcast i8** %204 to i8*
  %206 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %28, i64 0, i32 2
  %207 = bitcast double* %206 to i8*
  %208 = bitcast %"class.blink::DoubleConstraint"* %28 to i1 (%"class.blink::DoubleConstraint"*)***
  %209 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %28, i64 0, i32 4
  %210 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %28, i64 0, i32 3
  %211 = bitcast %"class.blink::DoubleConstraint"* %28 to %"class.blink::BaseConstraint"*
  %212 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %29, i64 0, i32 0, i32 0
  %213 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %29, i64 0, i32 0, i32 1
  %214 = bitcast i8** %213 to i8*
  %215 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %29, i64 0, i32 2
  %216 = bitcast double* %215 to i8*
  %217 = bitcast %"class.blink::DoubleConstraint"* %29 to i1 (%"class.blink::DoubleConstraint"*)***
  %218 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %29, i64 0, i32 4
  %219 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %29, i64 0, i32 3
  %220 = bitcast %"class.blink::DoubleConstraint"* %29 to %"class.blink::BaseConstraint"*
  %221 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = getelementptr inbounds i8, i8* %221, i64 1
  %223 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %224 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %225 = getelementptr inbounds i8, i8* %221, i64 17
  %226 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %227 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = getelementptr inbounds i8, i8* %221, i64 33
  %229 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %230 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds i8, i8* %221, i64 49
  %232 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %233 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds i8, i8* %221, i64 65
  %235 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %236 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %237 = getelementptr inbounds i8, i8* %221, i64 81
  %238 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %239 = bitcast %"class.blink::(anonymous namespace)::CandidateFormat"* %34 to i8*
  %240 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 1
  %241 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %243 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0
  %245 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0
  %249 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 6, i32 0
  %250 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 6, i32 1
  %251 = bitcast %"class.WTF::Vector.44"* %250 to i8*
  %252 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 6, i32 1, i32 0, i32 0, i32 0
  %253 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 6, i32 1, i32 0, i32 0, i32 2
  %254 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.blink::VideoDeviceCaptureCapabilities", %"struct.blink::VideoDeviceCaptureCapabilities"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %256 = bitcast %"class.std::__1::vector"* %35 to i8*
  %257 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %258 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 1
  %259 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 2, i32 0, i32 0
  %260 = getelementptr inbounds [7 x i8], [7 x i8]* %36, i64 0, i64 0
  %261 = getelementptr inbounds [7 x i8], [7 x i8]* %37, i64 0, i64 0
  %262 = getelementptr inbounds [7 x i8], [7 x i8]* %38, i64 0, i64 0
  %263 = getelementptr inbounds [7 x i8], [7 x i8]* %39, i64 0, i64 0
  %264 = getelementptr inbounds [7 x i8], [7 x i8]* %40, i64 0, i64 0
  %265 = getelementptr inbounds [7 x i8], [7 x i8]* %41, i64 0, i64 0
  %266 = bitcast %"class.blink::DoubleConstraint"* %7 to i8*
  %267 = bitcast %"class.blink::DoubleConstraint"* %8 to i8*
  %268 = bitcast %"class.blink::DoubleConstraint"* %9 to i8*
  %269 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %7, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %7, i64 0, i32 0, i32 1
  %271 = bitcast i8** %270 to i8*
  %272 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %7, i64 0, i32 2
  %273 = bitcast double* %272 to i8*
  %274 = bitcast %"class.blink::DoubleConstraint"* %7 to i1 (%"class.blink::DoubleConstraint"*)***
  %275 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %7, i64 0, i32 4
  %276 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %7, i64 0, i32 3
  %277 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %278 = bitcast %union.anon.22* %277 to i64*
  %279 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %280 = bitcast %union.anon.22* %279 to i64*
  %281 = bitcast %"class.blink::DoubleConstraint"* %7 to %"class.blink::BaseConstraint"*
  %282 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %8, i64 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %8, i64 0, i32 0, i32 1
  %284 = bitcast i8** %283 to i8*
  %285 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %8, i64 0, i32 2
  %286 = bitcast double* %285 to i8*
  %287 = bitcast %"class.blink::DoubleConstraint"* %8 to i1 (%"class.blink::DoubleConstraint"*)***
  %288 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %8, i64 0, i32 4
  %289 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %8, i64 0, i32 3
  %290 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %291 = bitcast %union.anon.22* %290 to i64*
  %292 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1
  %293 = bitcast %union.anon.22* %292 to i64*
  %294 = bitcast %"class.blink::DoubleConstraint"* %8 to %"class.blink::BaseConstraint"*
  %295 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %9, i64 0, i32 0, i32 0
  %296 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %9, i64 0, i32 0, i32 1
  %297 = bitcast i8** %296 to i8*
  %298 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %9, i64 0, i32 2
  %299 = bitcast double* %298 to i8*
  %300 = bitcast %"class.blink::DoubleConstraint"* %9 to i1 (%"class.blink::DoubleConstraint"*)***
  %301 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %9, i64 0, i32 4
  %302 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %9, i64 0, i32 3
  %303 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %304 = bitcast %union.anon.22* %303 to i64*
  %305 = getelementptr inbounds %"class.blink::(anonymous namespace)::PTZDeviceState", %"class.blink::(anonymous namespace)::PTZDeviceState"* %33, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1
  %306 = bitcast %union.anon.22* %305 to i64*
  %307 = bitcast %"class.blink::DoubleConstraint"* %9 to %"class.blink::BaseConstraint"*
  %308 = bitcast double** %258 to i64*
  %309 = bitcast %"class.std::__1::vector"* %35 to i64*
  %310 = bitcast double** %259 to i64*
  %311 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.blink::WebString"* %23 to i8*
  %313 = bitcast %"class.blink::WebString"* %24 to i8*
  %314 = bitcast %"class.blink::WebString"* %25 to i8*
  %315 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 2
  %318 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 0
  %319 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %320 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %321 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %18, i64 0, i32 3
  %322 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 0, i32 1
  %323 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %326 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %327 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 0, i32 0, i32 1
  %328 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %329 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %330 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %331 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %332 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %20, i64 0, i32 3
  %334 = bitcast %"class.WTF::StringView"* %12 to i8*
  %335 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  %336 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %337 = bitcast i8** %336 to %"class.WTF::StringImpl"**
  %338 = bitcast %"class.WTF::StringView"* %12 to i64*
  %339 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %340 = bitcast %"class.WTF::StringView"* %13 to i8*
  %341 = bitcast %"class.WTF::StringView"* %13 to i64*
  %342 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %343 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  %344 = bitcast %"class.WTF::StringView"* %14 to i8*
  %345 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %347 = bitcast i8** %346 to %"class.WTF::StringImpl"**
  %348 = bitcast %"class.WTF::StringView"* %14 to i64*
  %349 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  %350 = bitcast %"class.WTF::StringView"* %15 to i8*
  %351 = bitcast %"class.WTF::StringView"* %15 to i64*
  %352 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %353 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  %354 = bitcast %"class.blink::WebString"* %22 to i8*
  %355 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 0, i32 2
  %356 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %357 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %358 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %357, i64 0, i32 1, i32 0
  %359 = getelementptr inbounds i8, i8* %356, i64 5
  %360 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %362 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %363 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %362, i64 0, i32 1, i32 0
  %364 = getelementptr inbounds i8, i8* %361, i64 5
  %365 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 1, i32 2
  %367 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 1, i32 3
  %368 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 1, i32 0
  %369 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 1, i32 1
  %370 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %371 = load double, double* @_ZN5blink26kMinDeviceCaptureFrameRateE, align 8
  %372 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %34, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %373 = bitcast %"class.blink::media_constraints::ResolutionSet::Point"* %10 to i8*
  %374 = bitcast %"class.blink::media_constraints::ResolutionSet::Point"* %11 to i8*
  %375 = sitofp i32 %4 to double
  %376 = sitofp i32 %3 to double
  %377 = bitcast %"struct.media::VideoCaptureParams"* %43 to i8*
  %378 = getelementptr inbounds %"struct.media::VideoCaptureParams", %"struct.media::VideoCaptureParams"* %43, i64 0, i32 0, i32 0, i32 0
  %379 = getelementptr inbounds %"struct.media::VideoCaptureParams", %"struct.media::VideoCaptureParams"* %43, i64 0, i32 0, i32 0, i32 1
  %380 = getelementptr inbounds %"struct.media::VideoCaptureParams", %"struct.media::VideoCaptureParams"* %43, i64 0, i32 0, i32 1
  %381 = getelementptr inbounds %"struct.media::VideoCaptureParams", %"struct.media::VideoCaptureParams"* %43, i64 0, i32 0, i32 2
  %382 = bitcast %"class.blink::VideoCaptureSettings"* %44 to i8*
  %383 = bitcast %"struct.media::VideoCaptureParams"* %46 to i8*
  %384 = getelementptr inbounds i8, i8* %221, i64 8
  %385 = bitcast i8* %384 to double*
  %386 = getelementptr inbounds i8, i8* %221, i64 16
  %387 = getelementptr inbounds i8, i8* %221, i64 24
  %388 = bitcast i8* %387 to double*
  %389 = getelementptr inbounds %"class.absl::optional.18", %"class.absl::optional.18"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %390 = getelementptr inbounds %"class.absl::optional.18", %"class.absl::optional.18"* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %391 = getelementptr inbounds i8, i8* %221, i64 32
  %392 = getelementptr inbounds i8, i8* %221, i64 40
  %393 = bitcast i8* %392 to double*
  %394 = getelementptr inbounds i8, i8* %221, i64 48
  %395 = getelementptr inbounds i8, i8* %221, i64 56
  %396 = bitcast i8* %395 to double*
  %397 = getelementptr inbounds %"class.absl::optional.18", %"class.absl::optional.18"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %398 = getelementptr inbounds %"class.absl::optional.18", %"class.absl::optional.18"* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %399 = getelementptr inbounds i8, i8* %221, i64 64
  %400 = getelementptr inbounds i8, i8* %221, i64 72
  %401 = bitcast i8* %400 to double*
  %402 = getelementptr inbounds i8, i8* %221, i64 80
  %403 = getelementptr inbounds i8, i8* %221, i64 88
  %404 = bitcast i8* %403 to double*
  %405 = getelementptr inbounds %"class.absl::optional.18", %"class.absl::optional.18"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %406 = getelementptr inbounds %"class.absl::optional.18", %"class.absl::optional.18"* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %407 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %408 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %407, i64 0, i32 1, i32 0
  %409 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = bitcast %"struct.blink::MediaTrackConstraintSetPlatform"* %26 to i8*
  %411 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %26, i64 0, i32 17, i32 0, i32 1
  %412 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %26, i64 0, i32 16, i32 0, i32 1
  %413 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %26, i64 0, i32 15, i32 0, i32 1
  %414 = bitcast i32* %381 to i8*
  br label %420

415:                                              ; preds = %2017
  %416 = load i8*, i8** %176, align 8
  br label %417

417:                                              ; preds = %415, %173
  %418 = phi i8* [ %416, %415 ], [ %188, %173 ]
  %419 = icmp eq i8* %418, null
  br i1 %419, label %2022, label %2020

420:                                              ; preds = %189, %2017
  %421 = phi %"struct.blink::VideoInputDeviceCapabilities"* [ %182, %189 ], [ %2018, %2017 ]
  %422 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  %423 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_128DeviceSatisfiesConstraintSetERKNS_28VideoInputDeviceCapabilitiesERKNS_31MediaTrackConstraintSetPlatformEPPKc(%"struct.blink::VideoInputDeviceCapabilities"* dereferenceable(48) %421, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %422, i8** nonnull %32)
  br i1 %423, label %424, label %2017

424:                                              ; preds = %420
  %425 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %190)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %191)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %192)
  %426 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %425, i64 0, i32 15, i32 0, i32 1
  %427 = bitcast i8** %426 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %427, i64 9, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %428 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %425, i64 0, i32 15, i32 2
  %429 = bitcast double* %428 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %429, i64 33, i1 false) #14
  %430 = call zeroext i1 %199(%"class.blink::DoubleConstraint"* nonnull %27) #14, !noalias !10
  br i1 %430, label %436, label %431

431:                                              ; preds = %424
  %432 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %198, align 8, !noalias !10
  %433 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %432, i64 5
  %434 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %433, align 8, !noalias !10
  %435 = call zeroext i1 %434(%"class.blink::DoubleConstraint"* nonnull %27) #14, !noalias !10
  br i1 %435, label %436, label %444

436:                                              ; preds = %431, %424
  %437 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %198, align 8, !noalias !10
  %438 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %437, i64 5
  %439 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %438, align 8, !noalias !10
  %440 = call zeroext i1 %439(%"class.blink::DoubleConstraint"* nonnull %27) #14, !noalias !10
  %441 = load double, double* %200, align 8
  %442 = load double, double* %196, align 8
  %443 = select i1 %440, double %441, double %442
  br label %444

444:                                              ; preds = %436, %431
  %445 = phi i8 [ 1, %436 ], [ 0, %431 ]
  %446 = phi double [ %443, %436 ], [ undef, %431 ]
  %447 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %198, align 8, !noalias !10
  %448 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %447, i64 4
  %449 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %448, align 8, !noalias !10
  %450 = call zeroext i1 %449(%"class.blink::DoubleConstraint"* nonnull %27) #14, !noalias !10
  br i1 %450, label %456, label %451

451:                                              ; preds = %444
  %452 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %198, align 8, !noalias !10
  %453 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %452, i64 5
  %454 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %453, align 8, !noalias !10
  %455 = call zeroext i1 %454(%"class.blink::DoubleConstraint"* nonnull %27) #14, !noalias !10
  br i1 %455, label %456, label %464

456:                                              ; preds = %451, %444
  %457 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %198, align 8, !noalias !10
  %458 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %457, i64 5
  %459 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %458, align 8, !noalias !10
  %460 = call zeroext i1 %459(%"class.blink::DoubleConstraint"* nonnull %27) #14, !noalias !10
  %461 = load double, double* %200, align 8
  %462 = load double, double* %201, align 8
  %463 = select i1 %460, double %461, double %462
  br label %464

464:                                              ; preds = %456, %451
  %465 = phi double [ %463, %456 ], [ undef, %451 ]
  %466 = phi i8 [ 1, %456 ], [ 0, %451 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %202) #14
  %467 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %425, i64 0, i32 16, i32 0, i32 1
  %468 = bitcast i8** %467 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %468, i64 9, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %203, align 8
  %469 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %425, i64 0, i32 16, i32 2
  %470 = bitcast double* %469 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %470, i64 33, i1 false) #14
  %471 = call zeroext i1 %199(%"class.blink::DoubleConstraint"* nonnull %28) #14, !noalias !13
  br i1 %471, label %477, label %472

472:                                              ; preds = %464
  %473 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %208, align 8, !noalias !13
  %474 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %473, i64 5
  %475 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %474, align 8, !noalias !13
  %476 = call zeroext i1 %475(%"class.blink::DoubleConstraint"* nonnull %28) #14, !noalias !13
  br i1 %476, label %477, label %485

477:                                              ; preds = %472, %464
  %478 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %208, align 8, !noalias !13
  %479 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %478, i64 5
  %480 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %479, align 8, !noalias !13
  %481 = call zeroext i1 %480(%"class.blink::DoubleConstraint"* nonnull %28) #14, !noalias !13
  %482 = load double, double* %209, align 8
  %483 = load double, double* %206, align 8
  %484 = select i1 %481, double %482, double %483
  br label %485

485:                                              ; preds = %477, %472
  %486 = phi i8 [ 1, %477 ], [ 0, %472 ]
  %487 = phi double [ %484, %477 ], [ undef, %472 ]
  %488 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %208, align 8, !noalias !13
  %489 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %488, i64 4
  %490 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %489, align 8, !noalias !13
  %491 = call zeroext i1 %490(%"class.blink::DoubleConstraint"* nonnull %28) #14, !noalias !13
  br i1 %491, label %497, label %492

492:                                              ; preds = %485
  %493 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %208, align 8, !noalias !13
  %494 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %493, i64 5
  %495 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %494, align 8, !noalias !13
  %496 = call zeroext i1 %495(%"class.blink::DoubleConstraint"* nonnull %28) #14, !noalias !13
  br i1 %496, label %497, label %505

497:                                              ; preds = %492, %485
  %498 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %208, align 8, !noalias !13
  %499 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %498, i64 5
  %500 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %499, align 8, !noalias !13
  %501 = call zeroext i1 %500(%"class.blink::DoubleConstraint"* nonnull %28) #14, !noalias !13
  %502 = load double, double* %209, align 8
  %503 = load double, double* %210, align 8
  %504 = select i1 %501, double %502, double %503
  br label %505

505:                                              ; preds = %497, %492
  %506 = phi double [ %504, %497 ], [ undef, %492 ]
  %507 = phi i8 [ 1, %497 ], [ 0, %492 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %211) #14
  %508 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %425, i64 0, i32 17, i32 0, i32 1
  %509 = bitcast i8** %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* align 8 %509, i64 9, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %510 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %425, i64 0, i32 17, i32 2
  %511 = bitcast double* %510 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %511, i64 33, i1 false) #14
  %512 = call zeroext i1 %199(%"class.blink::DoubleConstraint"* nonnull %29) #14, !noalias !16
  br i1 %512, label %518, label %513

513:                                              ; preds = %505
  %514 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %217, align 8, !noalias !16
  %515 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %514, i64 5
  %516 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %515, align 8, !noalias !16
  %517 = call zeroext i1 %516(%"class.blink::DoubleConstraint"* nonnull %29) #14, !noalias !16
  br i1 %517, label %518, label %526

518:                                              ; preds = %513, %505
  %519 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %217, align 8, !noalias !16
  %520 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %519, i64 5
  %521 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %520, align 8, !noalias !16
  %522 = call zeroext i1 %521(%"class.blink::DoubleConstraint"* nonnull %29) #14, !noalias !16
  %523 = load double, double* %218, align 8
  %524 = load double, double* %215, align 8
  %525 = select i1 %522, double %523, double %524
  br label %526

526:                                              ; preds = %518, %513
  %527 = phi i8 [ 1, %518 ], [ 0, %513 ]
  %528 = phi double [ %525, %518 ], [ undef, %513 ]
  %529 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %217, align 8, !noalias !16
  %530 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %529, i64 4
  %531 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %530, align 8, !noalias !16
  %532 = call zeroext i1 %531(%"class.blink::DoubleConstraint"* nonnull %29) #14, !noalias !16
  br i1 %532, label %538, label %533

533:                                              ; preds = %526
  %534 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %217, align 8, !noalias !16
  %535 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %534, i64 5
  %536 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %535, align 8, !noalias !16
  %537 = call zeroext i1 %536(%"class.blink::DoubleConstraint"* nonnull %29) #14, !noalias !16
  br i1 %537, label %538, label %546

538:                                              ; preds = %533, %526
  %539 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %217, align 8, !noalias !16
  %540 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %539, i64 5
  %541 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %540, align 8, !noalias !16
  %542 = call zeroext i1 %541(%"class.blink::DoubleConstraint"* nonnull %29) #14, !noalias !16
  %543 = load double, double* %218, align 8
  %544 = load double, double* %219, align 8
  %545 = select i1 %542, double %543, double %544
  br label %546

546:                                              ; preds = %533, %538
  %547 = phi double [ %545, %538 ], [ undef, %533 ]
  %548 = phi i8 [ 1, %538 ], [ 0, %533 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %220) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %190)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %191)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %192)
  %549 = icmp ne i8 %466, 0
  %550 = icmp ne i8 %445, 0
  %551 = and i1 %549, %550
  %552 = fcmp olt double %465, %446
  %553 = and i1 %552, %551
  br i1 %553, label %567, label %554

554:                                              ; preds = %546
  %555 = icmp ne i8 %507, 0
  %556 = icmp ne i8 %486, 0
  %557 = and i1 %556, %555
  %558 = fcmp olt double %506, %487
  %559 = and i1 %558, %557
  br i1 %559, label %566, label %560

560:                                              ; preds = %554
  %561 = icmp ne i8 %548, 0
  %562 = icmp ne i8 %527, 0
  %563 = and i1 %562, %561
  %564 = fcmp olt double %547, %528
  %565 = and i1 %564, %563
  br i1 %565, label %566, label %588

566:                                              ; preds = %560, %554
  call void @llvm.lifetime.start.p0i8(i64 1856, i8* nonnull %410) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %410, i8* align 8 bitcast ({ %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::BooleanConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint" }* @__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState20FailedConstraintNameEv.dummy to i8*), i64 1856, i1 false) #14
  call void @_ZN5blink31MediaTrackConstraintSetPlatformC1Ev(%"struct.blink::MediaTrackConstraintSetPlatform"* nonnull %26) #14
  br i1 %553, label %568, label %570

567:                                              ; preds = %546
  call void @llvm.lifetime.start.p0i8(i64 1856, i8* nonnull %410) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %410, i8* align 8 bitcast ({ %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::BooleanConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, { %"class.blink::BaseConstraint.base", [7 x i8], %"class.WTF::Vector.31", %"class.WTF::Vector.31" }, %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint" }* @__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState20FailedConstraintNameEv.dummy to i8*), i64 1856, i1 false) #14
  call void @_ZN5blink31MediaTrackConstraintSetPlatformC1Ev(%"struct.blink::MediaTrackConstraintSetPlatform"* nonnull %26) #14
  br label %568

568:                                              ; preds = %567, %566
  %569 = load i8*, i8** %413, align 8
  br label %586

570:                                              ; preds = %566
  %571 = icmp ne i8 %507, 0
  %572 = icmp ne i8 %486, 0
  %573 = and i1 %572, %571
  %574 = fcmp olt double %506, %487
  %575 = and i1 %574, %573
  br i1 %575, label %576, label %578

576:                                              ; preds = %570
  %577 = load i8*, i8** %412, align 8
  br label %586

578:                                              ; preds = %570
  %579 = icmp ne i8 %548, 0
  %580 = icmp ne i8 %527, 0
  %581 = and i1 %580, %579
  %582 = fcmp olt double %547, %528
  %583 = and i1 %582, %581
  %584 = load i8*, i8** %411, align 8
  %585 = select i1 %583, i8* %584, i8* null
  br label %586

586:                                              ; preds = %578, %568, %576
  %587 = phi i8* [ %569, %568 ], [ %577, %576 ], [ %585, %578 ]
  call void @_ZN5blink31MediaTrackConstraintSetPlatformD2Ev(%"struct.blink::MediaTrackConstraintSetPlatform"* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 1856, i8* nonnull %410) #14
  store i8* %587, i8** %32, align 8
  br label %2017

588:                                              ; preds = %560
  %589 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 4, i32 0, i32 0, i32 0
  %590 = load %"struct.media::VideoCaptureFormat"*, %"struct.media::VideoCaptureFormat"** %589, align 8
  %591 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 4, i32 0, i32 0, i32 2
  %592 = load i32, i32* %591, align 4
  %593 = zext i32 %592 to i64
  %594 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %590, i64 %593
  %595 = icmp eq i32 %592, 0
  br i1 %595, label %2017, label %596

596:                                              ; preds = %588
  %597 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 0
  %598 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 1
  %599 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 5
  %600 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 2, i32 0
  %601 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 2, i32 1
  %602 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 2, i32 2
  %603 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 0, i32 0, i32 0, i32 0
  br label %604

604:                                              ; preds = %596, %2014
  %605 = phi %"struct.media::VideoCaptureFormat"* [ %590, %596 ], [ %2015, %2014 ]
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %221) #14
  store i8 %445, i8* %221, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %222, i8* nonnull align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  store double %446, double* %223, align 8
  store i8 %466, i8* %224, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %225, i8* nonnull align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  store double %465, double* %226, align 8
  store i8 %486, i8* %227, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %228, i8* nonnull align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  store double %487, double* %229, align 8
  store i8 %507, i8* %230, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %231, i8* nonnull align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  store double %506, double* %232, align 8
  store i8 %527, i8* %233, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %234, i8* nonnull align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  store double %528, double* %235, align 8
  store i8 %548, i8* %236, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* nonnull align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  store double %547, double* %238, align 8
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %239) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %239, i8* align 8 bitcast ({ %"struct.media::VideoCaptureFormat", %"class.blink::media_constraints::ResolutionSet", { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [3 x i8], %union.anon.43 } } } }, { { { { i8, [3 x i8], %union.anon.43 } } } } }, { { { { { i8, [3 x i8], %union.anon.43 } } } }, { { { { i8, [3 x i8], %union.anon.43 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { i8, [7 x i8], %"class.WTF::Vector.44" } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.candidate_format to i8*), i64 168, i1 false)
  %606 = bitcast %"struct.media::VideoCaptureFormat"* %605 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %239, i8* align 4 %606, i64 16, i1 false) #14
  %607 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %605, i64 0, i32 0, i32 1
  %608 = load i32, i32* %607, align 4
  %609 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %605, i64 0, i32 0, i32 0
  %610 = load i32, i32* %609, align 4
  call void @_ZN5blink17media_constraints13ResolutionSetC1Eiiiidd(%"class.blink::media_constraints::ResolutionSet"* %240, i32 1, i32 %608, i32 1, i32 %610, double 0.000000e+00, double 0x7FF0000000000000) #14
  store i8 0, i8* %241, align 8
  store i8 0, i8* %242, align 8
  store i8 0, i8* %243, align 8
  store i8 0, i8* %244, align 8
  store i8 0, i8* %245, align 8
  store i8 0, i8* %246, align 8
  store i8 0, i8* %247, align 8
  store i8 0, i8* %248, align 8
  store i8 1, i8* %249, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %251, i8 0, i64 16, i1 false) #14
  %611 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  %612 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115CandidateFormat18ApplyConstraintSetERKNS_31MediaTrackConstraintSetPlatformEPPKc(%"class.blink::(anonymous namespace)::CandidateFormat"* nonnull %34, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %611, i8** nonnull %32)
  br i1 %612, label %613, label %2006

613:                                              ; preds = %604
  %614 = load %"class.absl::optional"*, %"class.absl::optional"** %254, align 8
  %615 = load i32, i32* %255, align 4
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %614, i64 %616
  %618 = icmp eq i32 %615, 0
  br i1 %618, label %1998, label %619

619:                                              ; preds = %613, %1995
  %620 = phi %"class.absl::optional"* [ %1996, %1995 ], [ %614, %613 ]
  %621 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  %622 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %621, i64 0, i32 31
  %623 = bitcast %"class.blink::BooleanConstraint"* %622 to i1 (%"class.blink::BooleanConstraint"*)***
  %624 = load i1 (%"class.blink::BooleanConstraint"*)**, i1 (%"class.blink::BooleanConstraint"*)*** %623, align 8
  %625 = getelementptr inbounds i1 (%"class.blink::BooleanConstraint"*)*, i1 (%"class.blink::BooleanConstraint"*)** %624, i64 5
  %626 = load i1 (%"class.blink::BooleanConstraint"*)*, i1 (%"class.blink::BooleanConstraint"*)** %625, align 8
  %627 = call zeroext i1 %626(%"class.blink::BooleanConstraint"* %622) #14
  br i1 %627, label %628, label %644

628:                                              ; preds = %619
  %629 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %620, i64 0, i32 0, i32 0, i32 0, i32 0
  %630 = load i8, i8* %629, align 1, !range !19
  %631 = icmp eq i8 %630, 0
  br i1 %631, label %640, label %632

632:                                              ; preds = %628
  %633 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %620, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %634 = load i8, i8* %633, align 1, !range !19
  %635 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %621, i64 0, i32 31, i32 1
  %636 = load i8, i8* %635, align 1
  %637 = lshr i8 %636, 1
  %638 = and i8 %637, 1
  %639 = icmp eq i8 %634, %638
  br i1 %639, label %644, label %640

640:                                              ; preds = %628, %632
  %641 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %621, i64 0, i32 31, i32 0, i32 1
  %642 = bitcast i8** %641 to i64*
  %643 = load i64, i64* %642, align 8
  store i64 %643, i64* %179, align 8
  br label %1995

644:                                              ; preds = %619, %632
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %256) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %256, i8 0, i64 24, i1 false) #14
  %645 = call dereferenceable(16) %"class.WTF::Vector.28"* @_ZNK5blink16MediaConstraints8AdvancedEv(%"class.blink::MediaConstraints"* %2) #14
  %646 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %645, i64 0, i32 0, i32 0, i32 0
  %647 = load %"struct.blink::MediaTrackConstraintSetPlatform"*, %"struct.blink::MediaTrackConstraintSetPlatform"** %646, align 8
  %648 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %645, i64 0, i32 0, i32 0, i32 2
  %649 = load i32, i32* %648, align 4
  %650 = zext i32 %649 to i64
  %651 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %647, i64 %650
  %652 = icmp eq i32 %649, 0
  br i1 %652, label %656, label %653

653:                                              ; preds = %644
  %654 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %620, i64 0, i32 0, i32 0, i32 0, i32 0
  %655 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %620, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %1577

656:                                              ; preds = %1879, %644
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %311) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %311, i8* align 8 getelementptr inbounds ({ { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double }, { { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double }* @__const._ZNK5blink12_GLOBAL__N_115CandidateFormat7FitnessERKNS_31MediaTrackConstraintSetPlatformEPNS_25VideoTrackAdapterSettingsE.track_settings_without_rescale, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 40, i1 false)
  call void @_ZN5blink25VideoTrackAdapterSettingsC1Ev(%"class.blink::VideoTrackAdapterSettings"* nonnull %42) #14
  %657 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %312) #14
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %23, %"class.WTF::String"* dereferenceable(8) %597) #14
  %658 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 13
  %659 = call double @_ZN5blink31StringConstraintFitnessDistanceERKNS_9WebStringERKNS_16StringConstraintE(%"class.blink::WebString"* nonnull dereferenceable(8) %23, %"class.blink::StringConstraint"* dereferenceable(56) %658) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #14
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %24, %"class.WTF::String"* dereferenceable(8) %598) #14
  %660 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 18
  %661 = call double @_ZN5blink31StringConstraintFitnessDistanceERKNS_9WebStringERKNS_16StringConstraintE(%"class.blink::WebString"* nonnull dereferenceable(8) %24, %"class.blink::StringConstraint"* dereferenceable(56) %660) #14
  %662 = fadd double %659, %661
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #14
  %663 = load i32, i32* %599, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_111ToWebStringENS_5mojom10FacingModeE(%"class.blink::WebString"* nonnull sret %25, i32 %663) #14
  %664 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 4
  %665 = call double @_ZN5blink31StringConstraintFitnessDistanceERKNS_9WebStringERKNS_16StringConstraintE(%"class.blink::WebString"* nonnull dereferenceable(8) %25, %"class.blink::StringConstraint"* dereferenceable(56) %664) #14
  %666 = fadd double %662, %665
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %312) #14
  %667 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 15
  %668 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 15, i32 0, i32 2
  %669 = load i8, i8* %668, align 8, !range !19
  %670 = icmp eq i8 %669, 0
  br i1 %670, label %671, label %678

671:                                              ; preds = %656
  %672 = bitcast %"class.blink::DoubleConstraint"* %667 to %"class.blink::BaseConstraint"*
  %673 = bitcast %"class.blink::DoubleConstraint"* %667 to i1 (%"class.blink::BaseConstraint"*)***
  %674 = load i1 (%"class.blink::BaseConstraint"*)**, i1 (%"class.blink::BaseConstraint"*)*** %673, align 8
  %675 = getelementptr inbounds i1 (%"class.blink::BaseConstraint"*)*, i1 (%"class.blink::BaseConstraint"*)** %674, i64 2
  %676 = load i1 (%"class.blink::BaseConstraint"*)*, i1 (%"class.blink::BaseConstraint"*)** %675, align 8
  %677 = call zeroext i1 %676(%"class.blink::BaseConstraint"* %672) #14
  br label %678

678:                                              ; preds = %671, %656
  %679 = phi i1 [ false, %656 ], [ %677, %671 ]
  %680 = load i8, i8* %600, align 1, !range !19
  %681 = icmp ne i8 %680, 0
  %682 = or i1 %679, %681
  br i1 %682, label %683, label %706

683:                                              ; preds = %678
  %684 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 15, i32 6
  %685 = load i8, i8* %684, align 8
  %686 = and i8 %685, 8
  %687 = icmp eq i8 %686, 0
  br i1 %687, label %706, label %688

688:                                              ; preds = %683
  %689 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 15, i32 5
  %690 = load double, double* %689, align 8
  %691 = load i8, i8* %224, align 8, !range !19
  %692 = icmp eq i8 %691, 0
  br i1 %692, label %698, label %693

693:                                              ; preds = %688
  %694 = load double, double* %226, align 8
  %695 = fcmp ogt double %690, %694
  br i1 %695, label %696, label %698

696:                                              ; preds = %693
  %697 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %690, double %694) #14
  br label %706

698:                                              ; preds = %693, %688
  %699 = load i8, i8* %221, align 8, !range !19
  %700 = icmp eq i8 %699, 0
  br i1 %700, label %706, label %701

701:                                              ; preds = %698
  %702 = load double, double* %223, align 8
  %703 = fcmp olt double %690, %702
  br i1 %703, label %704, label %706

704:                                              ; preds = %701
  %705 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %690, double %702) #14
  br label %706

706:                                              ; preds = %704, %701, %698, %696, %683, %678
  %707 = phi double [ 1.000000e+00, %678 ], [ 0.000000e+00, %683 ], [ %697, %696 ], [ %705, %704 ], [ 0.000000e+00, %698 ], [ 0.000000e+00, %701 ]
  %708 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 16
  %709 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 16, i32 0, i32 2
  %710 = load i8, i8* %709, align 8, !range !19
  %711 = icmp eq i8 %710, 0
  br i1 %711, label %712, label %719

712:                                              ; preds = %706
  %713 = bitcast %"class.blink::DoubleConstraint"* %708 to %"class.blink::BaseConstraint"*
  %714 = bitcast %"class.blink::DoubleConstraint"* %708 to i1 (%"class.blink::BaseConstraint"*)***
  %715 = load i1 (%"class.blink::BaseConstraint"*)**, i1 (%"class.blink::BaseConstraint"*)*** %714, align 8
  %716 = getelementptr inbounds i1 (%"class.blink::BaseConstraint"*)*, i1 (%"class.blink::BaseConstraint"*)** %715, i64 2
  %717 = load i1 (%"class.blink::BaseConstraint"*)*, i1 (%"class.blink::BaseConstraint"*)** %716, align 8
  %718 = call zeroext i1 %717(%"class.blink::BaseConstraint"* %713) #14
  br label %719

719:                                              ; preds = %712, %706
  %720 = phi i1 [ false, %706 ], [ %718, %712 ]
  %721 = load i8, i8* %601, align 1, !range !19
  %722 = icmp ne i8 %721, 0
  %723 = or i1 %720, %722
  br i1 %723, label %724, label %747

724:                                              ; preds = %719
  %725 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 16, i32 6
  %726 = load i8, i8* %725, align 8
  %727 = and i8 %726, 8
  %728 = icmp eq i8 %727, 0
  br i1 %728, label %747, label %729

729:                                              ; preds = %724
  %730 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 16, i32 5
  %731 = load double, double* %730, align 8
  %732 = load i8, i8* %230, align 8, !range !19
  %733 = icmp eq i8 %732, 0
  br i1 %733, label %739, label %734

734:                                              ; preds = %729
  %735 = load double, double* %232, align 8
  %736 = fcmp ogt double %731, %735
  br i1 %736, label %737, label %739

737:                                              ; preds = %734
  %738 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %731, double %735) #14
  br label %747

739:                                              ; preds = %734, %729
  %740 = load i8, i8* %227, align 8, !range !19
  %741 = icmp eq i8 %740, 0
  br i1 %741, label %747, label %742

742:                                              ; preds = %739
  %743 = load double, double* %229, align 8
  %744 = fcmp olt double %731, %743
  br i1 %744, label %745, label %747

745:                                              ; preds = %742
  %746 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %731, double %743) #14
  br label %747

747:                                              ; preds = %745, %742, %739, %737, %724, %719
  %748 = phi double [ 1.000000e+00, %719 ], [ 0.000000e+00, %724 ], [ %738, %737 ], [ %746, %745 ], [ 0.000000e+00, %739 ], [ 0.000000e+00, %742 ]
  %749 = fadd double %707, %748
  %750 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 17
  %751 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 17, i32 0, i32 2
  %752 = load i8, i8* %751, align 8, !range !19
  %753 = icmp eq i8 %752, 0
  br i1 %753, label %754, label %761

754:                                              ; preds = %747
  %755 = bitcast %"class.blink::DoubleConstraint"* %750 to %"class.blink::BaseConstraint"*
  %756 = bitcast %"class.blink::DoubleConstraint"* %750 to i1 (%"class.blink::BaseConstraint"*)***
  %757 = load i1 (%"class.blink::BaseConstraint"*)**, i1 (%"class.blink::BaseConstraint"*)*** %756, align 8
  %758 = getelementptr inbounds i1 (%"class.blink::BaseConstraint"*)*, i1 (%"class.blink::BaseConstraint"*)** %757, i64 2
  %759 = load i1 (%"class.blink::BaseConstraint"*)*, i1 (%"class.blink::BaseConstraint"*)** %758, align 8
  %760 = call zeroext i1 %759(%"class.blink::BaseConstraint"* %755) #14
  br label %761

761:                                              ; preds = %754, %747
  %762 = phi i1 [ false, %747 ], [ %760, %754 ]
  %763 = load i8, i8* %602, align 1, !range !19
  %764 = icmp ne i8 %763, 0
  %765 = or i1 %762, %764
  br i1 %765, label %766, label %789

766:                                              ; preds = %761
  %767 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 17, i32 6
  %768 = load i8, i8* %767, align 8
  %769 = and i8 %768, 8
  %770 = icmp eq i8 %769, 0
  br i1 %770, label %789, label %771

771:                                              ; preds = %766
  %772 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 17, i32 5
  %773 = load double, double* %772, align 8
  %774 = load i8, i8* %236, align 8, !range !19
  %775 = icmp eq i8 %774, 0
  br i1 %775, label %781, label %776

776:                                              ; preds = %771
  %777 = load double, double* %238, align 8
  %778 = fcmp ogt double %773, %777
  br i1 %778, label %779, label %781

779:                                              ; preds = %776
  %780 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %773, double %777) #14
  br label %789

781:                                              ; preds = %776, %771
  %782 = load i8, i8* %233, align 8, !range !19
  %783 = icmp eq i8 %782, 0
  br i1 %783, label %789, label %784

784:                                              ; preds = %781
  %785 = load double, double* %235, align 8
  %786 = fcmp olt double %773, %785
  br i1 %786, label %787, label %789

787:                                              ; preds = %784
  %788 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %773, double %785) #14
  br label %789

789:                                              ; preds = %787, %784, %781, %779, %766, %761
  %790 = phi double [ 1.000000e+00, %761 ], [ 0.000000e+00, %766 ], [ %780, %779 ], [ %788, %787 ], [ 0.000000e+00, %781 ], [ 0.000000e+00, %784 ]
  %791 = fadd double %749, %790
  %792 = fadd double %666, %791
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %315) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %315, i8* align 8 getelementptr inbounds ({ { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double }, { { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double }* @__const._ZNK5blink12_GLOBAL__N_115CandidateFormat7FitnessERKNS_31MediaTrackConstraintSetPlatformEPNS_25VideoTrackAdapterSettingsE.track_settings_without_rescale, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 40, i1 false) #14
  call void @_ZN5blink25VideoTrackAdapterSettingsC1Ev(%"class.blink::VideoTrackAdapterSettings"* nonnull %18) #14
  %793 = load i8, i8* %249, align 8, !range !19
  %794 = icmp eq i8 %793, 0
  br i1 %794, label %795, label %811

795:                                              ; preds = %789
  %796 = load i8*, i8** %252, align 8
  %797 = load i32, i32* %253, align 4
  %798 = zext i32 %797 to i64
  %799 = getelementptr inbounds i8, i8* %796, i64 %798
  %800 = icmp eq i32 %797, 0
  br i1 %800, label %808, label %801

801:                                              ; preds = %795, %805
  %802 = phi i8* [ %806, %805 ], [ %796, %795 ]
  %803 = load i8, i8* %802, align 1, !range !19
  %804 = icmp eq i8 %803, 1
  br i1 %804, label %808, label %805

805:                                              ; preds = %801
  %806 = getelementptr inbounds i8, i8* %802, i64 1
  %807 = icmp eq i8* %806, %799
  br i1 %807, label %886, label %801

808:                                              ; preds = %801, %795
  %809 = phi i8* [ %796, %795 ], [ %802, %801 ]
  %810 = icmp eq i8* %809, %799
  br i1 %810, label %886, label %811

811:                                              ; preds = %808, %789
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %316) #14
  call void @_ZN5blink31SelectVideoTrackAdapterSettingsERKNS_31MediaTrackConstraintSetPlatformERKNS_17media_constraints13ResolutionSetERKNS3_15NumericRangeSetIdEERKN5media18VideoCaptureFormatEb(%"class.blink::VideoTrackAdapterSettings"* nonnull sret %19, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %657, %"class.blink::media_constraints::ResolutionSet"* dereferenceable(32) %240, %"class.blink::media_constraints::NumericRangeSet"* dereferenceable(32) %317, %"struct.media::VideoCaptureFormat"* nonnull dereferenceable(16) %318, i1 zeroext true) #14
  %812 = call dereferenceable(40) %"class.blink::VideoTrackAdapterSettings"* @_ZN5blink25VideoTrackAdapterSettingsaSERKS0_(%"class.blink::VideoTrackAdapterSettings"* nonnull %18, %"class.blink::VideoTrackAdapterSettings"* nonnull dereferenceable(40) %19) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %316) #14
  %813 = load i8, i8* %315, align 8, !range !19
  %814 = icmp eq i8 %813, 0
  br i1 %814, label %815, label %816, !prof !3

815:                                              ; preds = %811
  call void @llvm.trap() #14
  unreachable

816:                                              ; preds = %811
  %817 = load double, double* %321, align 8
  %818 = fcmp oeq double %817, 0.000000e+00
  %819 = load float, float* %322, align 8
  %820 = fpext float %819 to double
  %821 = fcmp ogt double %817, %820
  %822 = or i1 %818, %821
  %823 = select i1 %822, double %820, double %817
  %824 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 2, i32 6
  %825 = load i8, i8* %824, align 8
  %826 = and i8 %825, 8
  %827 = icmp eq i8 %826, 0
  br i1 %827, label %840, label %828

828:                                              ; preds = %816
  %829 = load i32, i32* %319, align 4
  %830 = sitofp i32 %829 to double
  %831 = load i32, i32* %320, align 4
  %832 = sitofp i32 %831 to double
  %833 = fdiv double %830, %832
  %834 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 2, i32 5
  %835 = load double, double* %834, align 8
  %836 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %833, double %835) #14
  %837 = load i8, i8* %315, align 8, !range !19
  %838 = icmp eq i8 %837, 0
  br i1 %838, label %839, label %840, !prof !3

839:                                              ; preds = %828
  call void @llvm.trap() #14
  unreachable

840:                                              ; preds = %828, %816
  %841 = phi double [ %836, %828 ], [ 0.000000e+00, %816 ]
  %842 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 1, i32 6
  %843 = load i8, i8* %842, align 4
  %844 = and i8 %843, 8
  %845 = icmp eq i8 %844, 0
  br i1 %845, label %846, label %848

846:                                              ; preds = %840
  %847 = fadd double %841, 0.000000e+00
  br label %859

848:                                              ; preds = %840
  %849 = load i32, i32* %320, align 4
  %850 = sitofp i32 %849 to double
  %851 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 1, i32 5
  %852 = load i32, i32* %851, align 8
  %853 = sitofp i32 %852 to double
  %854 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %850, double %853) #14
  %855 = load i8, i8* %315, align 8, !range !19
  %856 = fadd double %841, %854
  %857 = icmp eq i8 %855, 0
  br i1 %857, label %858, label %859, !prof !3

858:                                              ; preds = %848
  call void @llvm.trap() #14
  unreachable

859:                                              ; preds = %848, %846
  %860 = phi double [ %847, %846 ], [ %856, %848 ]
  %861 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 0, i32 6
  %862 = load i8, i8* %861, align 4
  %863 = and i8 %862, 8
  %864 = icmp eq i8 %863, 0
  br i1 %864, label %872, label %865

865:                                              ; preds = %859
  %866 = load i32, i32* %319, align 4
  %867 = sitofp i32 %866 to double
  %868 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 0, i32 5
  %869 = load i32, i32* %868, align 8
  %870 = sitofp i32 %869 to double
  %871 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %867, double %870) #14
  br label %872

872:                                              ; preds = %865, %859
  %873 = phi double [ %871, %865 ], [ 0.000000e+00, %859 ]
  %874 = fadd double %860, %873
  %875 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 3, i32 6
  %876 = load i8, i8* %875, align 8
  %877 = and i8 %876, 8
  %878 = icmp eq i8 %877, 0
  br i1 %878, label %883, label %879

879:                                              ; preds = %872
  %880 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 3, i32 5
  %881 = load double, double* %880, align 8
  %882 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %823, double %881) #14
  br label %883

883:                                              ; preds = %879, %872
  %884 = phi double [ %882, %879 ], [ 0.000000e+00, %872 ]
  %885 = fadd double %874, %884
  br label %886

886:                                              ; preds = %805, %883, %808
  %887 = phi double [ %885, %883 ], [ 0x7FF0000000000000, %808 ], [ 0x7FF0000000000000, %805 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %323) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %323, i8* align 8 getelementptr inbounds ({ { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double }, { { { { { i8, [3 x i8], %union.anon.17 } } } }, [4 x i8], double, double, double }* @__const._ZNK5blink12_GLOBAL__N_115CandidateFormat7FitnessERKNS_31MediaTrackConstraintSetPlatformEPNS_25VideoTrackAdapterSettingsE.track_settings_without_rescale, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 40, i1 false) #14
  call void @_ZN5blink25VideoTrackAdapterSettingsC1Ev(%"class.blink::VideoTrackAdapterSettings"* nonnull %20) #14
  %888 = load i8, i8* %249, align 8, !range !19
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %890, label %906

890:                                              ; preds = %886
  %891 = load i8*, i8** %252, align 8
  %892 = load i32, i32* %253, align 4
  %893 = zext i32 %892 to i64
  %894 = getelementptr inbounds i8, i8* %891, i64 %893
  %895 = icmp eq i32 %892, 0
  br i1 %895, label %903, label %896

896:                                              ; preds = %890, %900
  %897 = phi i8* [ %901, %900 ], [ %891, %890 ]
  %898 = load i8, i8* %897, align 1, !range !19
  %899 = icmp eq i8 %898, 0
  br i1 %899, label %903, label %900

900:                                              ; preds = %896
  %901 = getelementptr inbounds i8, i8* %897, i64 1
  %902 = icmp eq i8* %901, %894
  br i1 %902, label %1010, label %896

903:                                              ; preds = %896, %890
  %904 = phi i8* [ %891, %890 ], [ %897, %896 ]
  %905 = icmp eq i8* %904, %894
  br i1 %905, label %1010, label %906

906:                                              ; preds = %903, %886
  %907 = load i32, i32* %324, align 8
  %908 = load i8, i8* %243, align 8, !range !19
  %909 = icmp ne i8 %908, 0
  %910 = load i32, i32* %325, align 4
  %911 = icmp sgt i32 %910, %907
  %912 = and i1 %909, %911
  br i1 %912, label %1010, label %913

913:                                              ; preds = %906
  %914 = load i8, i8* %244, align 8, !range !19
  %915 = icmp ne i8 %914, 0
  %916 = load i32, i32* %326, align 4
  %917 = icmp slt i32 %916, %907
  %918 = and i1 %915, %917
  br i1 %918, label %1010, label %919

919:                                              ; preds = %913
  %920 = load i32, i32* %327, align 4
  %921 = load i8, i8* %245, align 8, !range !19
  %922 = icmp ne i8 %921, 0
  %923 = load i32, i32* %328, align 4
  %924 = icmp sgt i32 %923, %920
  %925 = and i1 %922, %924
  br i1 %925, label %1010, label %926

926:                                              ; preds = %919
  %927 = load i8, i8* %246, align 8, !range !19
  %928 = icmp ne i8 %927, 0
  %929 = load i32, i32* %329, align 4
  %930 = icmp slt i32 %929, %920
  %931 = and i1 %928, %930
  br i1 %931, label %1010, label %932

932:                                              ; preds = %926
  %933 = sitofp i32 %907 to double
  %934 = sitofp i32 %920 to double
  %935 = fdiv double %933, %934
  %936 = load i8, i8* %247, align 8, !range !19
  %937 = icmp ne i8 %936, 0
  %938 = load double, double* %330, align 8
  %939 = fcmp ugt double %938, %935
  %940 = and i1 %937, %939
  br i1 %940, label %1010, label %941

941:                                              ; preds = %932
  %942 = load i8, i8* %248, align 8, !range !19
  %943 = icmp ne i8 %942, 0
  %944 = load double, double* %331, align 8
  %945 = fcmp ult double %944, %935
  %946 = and i1 %943, %945
  br i1 %946, label %1010, label %947

947:                                              ; preds = %941
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %332) #14
  call void @_ZN5blink31SelectVideoTrackAdapterSettingsERKNS_31MediaTrackConstraintSetPlatformERKNS_17media_constraints13ResolutionSetERKNS3_15NumericRangeSetIdEERKN5media18VideoCaptureFormatEb(%"class.blink::VideoTrackAdapterSettings"* nonnull sret %21, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %657, %"class.blink::media_constraints::ResolutionSet"* dereferenceable(32) %240, %"class.blink::media_constraints::NumericRangeSet"* dereferenceable(32) %317, %"struct.media::VideoCaptureFormat"* nonnull dereferenceable(16) %318, i1 zeroext false) #14
  %948 = call dereferenceable(40) %"class.blink::VideoTrackAdapterSettings"* @_ZN5blink25VideoTrackAdapterSettingsaSERKS0_(%"class.blink::VideoTrackAdapterSettings"* nonnull %20, %"class.blink::VideoTrackAdapterSettings"* nonnull dereferenceable(40) %21) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %332) #14
  %949 = load double, double* %333, align 8
  %950 = fcmp oeq double %949, 0.000000e+00
  %951 = load float, float* %322, align 8
  %952 = fpext float %951 to double
  %953 = fcmp ogt double %949, %952
  %954 = or i1 %950, %953
  %955 = select i1 %954, double %952, double %949
  %956 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 2, i32 6
  %957 = load i8, i8* %956, align 8
  %958 = and i8 %957, 8
  %959 = icmp eq i8 %958, 0
  br i1 %959, label %969, label %960

960:                                              ; preds = %947
  %961 = load i32, i32* %324, align 8
  %962 = sitofp i32 %961 to double
  %963 = load i32, i32* %327, align 4
  %964 = sitofp i32 %963 to double
  %965 = fdiv double %962, %964
  %966 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 2, i32 5
  %967 = load double, double* %966, align 8
  %968 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %965, double %967) #14
  br label %969

969:                                              ; preds = %960, %947
  %970 = phi double [ %968, %960 ], [ 0.000000e+00, %947 ]
  %971 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 1, i32 6
  %972 = load i8, i8* %971, align 4
  %973 = and i8 %972, 8
  %974 = icmp eq i8 %973, 0
  br i1 %974, label %982, label %975

975:                                              ; preds = %969
  %976 = load i32, i32* %327, align 4
  %977 = sitofp i32 %976 to double
  %978 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 1, i32 5
  %979 = load i32, i32* %978, align 8
  %980 = sitofp i32 %979 to double
  %981 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %977, double %980) #14
  br label %982

982:                                              ; preds = %975, %969
  %983 = phi double [ %981, %975 ], [ 0.000000e+00, %969 ]
  %984 = fadd double %970, %983
  %985 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 0, i32 6
  %986 = load i8, i8* %985, align 4
  %987 = and i8 %986, 8
  %988 = icmp eq i8 %987, 0
  br i1 %988, label %996, label %989

989:                                              ; preds = %982
  %990 = load i32, i32* %324, align 8
  %991 = sitofp i32 %990 to double
  %992 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 0, i32 5
  %993 = load i32, i32* %992, align 8
  %994 = sitofp i32 %993 to double
  %995 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %991, double %994) #14
  br label %996

996:                                              ; preds = %989, %982
  %997 = phi double [ %995, %989 ], [ 0.000000e+00, %982 ]
  %998 = fadd double %984, %997
  %999 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 3, i32 6
  %1000 = load i8, i8* %999, align 8
  %1001 = and i8 %1000, 8
  %1002 = icmp eq i8 %1001, 0
  br i1 %1002, label %1007, label %1003

1003:                                             ; preds = %996
  %1004 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 3, i32 5
  %1005 = load double, double* %1004, align 8
  %1006 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %955, double %1005) #14
  br label %1007

1007:                                             ; preds = %1003, %996
  %1008 = phi double [ %1006, %1003 ], [ 0.000000e+00, %996 ]
  %1009 = fadd double %998, %1008
  br label %1010

1010:                                             ; preds = %900, %941, %932, %926, %919, %913, %906, %1007, %903
  %1011 = phi double [ 0x7FF0000000000000, %903 ], [ %1009, %1007 ], [ 0x7FF0000000000000, %906 ], [ 0x7FF0000000000000, %913 ], [ 0x7FF0000000000000, %919 ], [ 0x7FF0000000000000, %926 ], [ 0x7FF0000000000000, %932 ], [ 0x7FF0000000000000, %941 ], [ 0x7FF0000000000000, %900 ]
  %1012 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 5
  %1013 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 5, i32 2, i32 0, i32 0, i32 2
  %1014 = load i32, i32* %1013, align 4
  %1015 = icmp eq i32 %1014, 0
  br i1 %1015, label %1105, label %1016

1016:                                             ; preds = %1010
  %1017 = call dereferenceable(16) %"class.WTF::Vector.31"* @_ZNK5blink16StringConstraint5IdealEv(%"class.blink::StringConstraint"* %1012) #14
  %1018 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1017, i64 0, i32 0, i32 0, i32 0
  %1019 = load %"class.WTF::String"*, %"class.WTF::String"** %1018, align 8
  %1020 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1017, i64 0, i32 0, i32 0, i32 2
  %1021 = load i32, i32* %1020, align 4
  %1022 = zext i32 %1021 to i64
  %1023 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1019, i64 %1022
  %1024 = icmp eq i32 %1021, 0
  br i1 %1024, label %1053, label %1025

1025:                                             ; preds = %1016, %1045
  %1026 = phi %"class.WTF::String"* [ %1046, %1045 ], [ %1019, %1016 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #14
  %1027 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1026, i64 0, i32 0, i32 0
  %1028 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1027, align 8
  %1029 = icmp eq %"class.WTF::StringImpl"* %1028, null
  br i1 %1029, label %1030, label %1032

1030:                                             ; preds = %1025
  store i8* null, i8** %336, align 8
  %1031 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1031, i64* %338, align 8
  br label %1036

1032:                                             ; preds = %1025
  store %"class.WTF::StringImpl"* %1028, %"class.WTF::StringImpl"** %335, align 8
  %1033 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1028, i64 0, i32 1
  %1034 = load i32, i32* %1033, align 4
  %1035 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1028, i64 1
  store %"class.WTF::StringImpl"* %1035, %"class.WTF::StringImpl"** %337, align 8
  br label %1036

1036:                                             ; preds = %1032, %1030
  %1037 = phi i32 [ %1034, %1032 ], [ 0, %1030 ]
  store i32 %1037, i32* %339, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %340) #14
  %1038 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19WebMediaStreamTrack15kResizeModeNoneE, i64 0, i64 0)) #16
  %1039 = icmp ult i64 %1038, 4294967296
  br i1 %1039, label %1041, label %1040, !prof !2

1040:                                             ; preds = %1036
  call void @llvm.trap() #14
  unreachable

1041:                                             ; preds = %1036
  %1042 = trunc i64 %1038 to i32
  %1043 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1043, i64* %341, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19WebMediaStreamTrack15kResizeModeNoneE, i64 0, i64 0), i8** %342, align 8
  store i32 %1042, i32* %343, align 8
  %1044 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %340) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #14
  br i1 %1044, label %1048, label %1045

1045:                                             ; preds = %1041
  %1046 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1026, i64 1
  %1047 = icmp eq %"class.WTF::String"* %1046, %1023
  br i1 %1047, label %1048, label %1025

1048:                                             ; preds = %1045, %1041
  %1049 = phi %"class.WTF::String"* [ %1026, %1041 ], [ %1023, %1045 ]
  %1050 = load %"class.WTF::String"*, %"class.WTF::String"** %1018, align 8
  %1051 = load i32, i32* %1020, align 4
  %1052 = zext i32 %1051 to i64
  br label %1053

1053:                                             ; preds = %1048, %1016
  %1054 = phi i64 [ 0, %1016 ], [ %1052, %1048 ]
  %1055 = phi %"class.WTF::String"* [ %1019, %1016 ], [ %1050, %1048 ]
  %1056 = phi %"class.WTF::String"* [ %1019, %1016 ], [ %1049, %1048 ]
  %1057 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1055, i64 %1054
  %1058 = icmp eq %"class.WTF::String"* %1056, %1057
  %1059 = fadd double %1011, 1.000000e+00
  %1060 = select i1 %1058, double %1059, double %1011
  %1061 = call dereferenceable(16) %"class.WTF::Vector.31"* @_ZNK5blink16StringConstraint5IdealEv(%"class.blink::StringConstraint"* %1012) #14
  %1062 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1061, i64 0, i32 0, i32 0, i32 0
  %1063 = load %"class.WTF::String"*, %"class.WTF::String"** %1062, align 8
  %1064 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1061, i64 0, i32 0, i32 0, i32 2
  %1065 = load i32, i32* %1064, align 4
  %1066 = zext i32 %1065 to i64
  %1067 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1063, i64 %1066
  %1068 = icmp eq i32 %1065, 0
  br i1 %1068, label %1097, label %1069

1069:                                             ; preds = %1053, %1089
  %1070 = phi %"class.WTF::String"* [ %1090, %1089 ], [ %1063, %1053 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %344) #14
  %1071 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1070, i64 0, i32 0, i32 0
  %1072 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1071, align 8
  %1073 = icmp eq %"class.WTF::StringImpl"* %1072, null
  br i1 %1073, label %1074, label %1076

1074:                                             ; preds = %1069
  store i8* null, i8** %346, align 8
  %1075 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1075, i64* %348, align 8
  br label %1080

1076:                                             ; preds = %1069
  store %"class.WTF::StringImpl"* %1072, %"class.WTF::StringImpl"** %345, align 8
  %1077 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1072, i64 0, i32 1
  %1078 = load i32, i32* %1077, align 4
  %1079 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1072, i64 1
  store %"class.WTF::StringImpl"* %1079, %"class.WTF::StringImpl"** %347, align 8
  br label %1080

1080:                                             ; preds = %1076, %1074
  %1081 = phi i32 [ %1078, %1076 ], [ 0, %1074 ]
  store i32 %1081, i32* %349, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %350) #14
  %1082 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19WebMediaStreamTrack18kResizeModeRescaleE, i64 0, i64 0)) #16
  %1083 = icmp ult i64 %1082, 4294967296
  br i1 %1083, label %1085, label %1084, !prof !2

1084:                                             ; preds = %1080
  call void @llvm.trap() #14
  unreachable

1085:                                             ; preds = %1080
  %1086 = trunc i64 %1082 to i32
  %1087 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1087, i64* %351, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19WebMediaStreamTrack18kResizeModeRescaleE, i64 0, i64 0), i8** %352, align 8
  store i32 %1086, i32* %353, align 8
  %1088 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %350) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %344) #14
  br i1 %1088, label %1092, label %1089

1089:                                             ; preds = %1085
  %1090 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1070, i64 1
  %1091 = icmp eq %"class.WTF::String"* %1090, %1067
  br i1 %1091, label %1092, label %1069

1092:                                             ; preds = %1089, %1085
  %1093 = phi %"class.WTF::String"* [ %1070, %1085 ], [ %1067, %1089 ]
  %1094 = load %"class.WTF::String"*, %"class.WTF::String"** %1062, align 8
  %1095 = load i32, i32* %1064, align 4
  %1096 = zext i32 %1095 to i64
  br label %1097

1097:                                             ; preds = %1092, %1053
  %1098 = phi i64 [ 0, %1053 ], [ %1096, %1092 ]
  %1099 = phi %"class.WTF::String"* [ %1063, %1053 ], [ %1094, %1092 ]
  %1100 = phi %"class.WTF::String"* [ %1063, %1053 ], [ %1093, %1092 ]
  %1101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1099, i64 %1098
  %1102 = icmp eq %"class.WTF::String"* %1100, %1101
  %1103 = fadd double %887, 1.000000e+00
  %1104 = select i1 %1102, double %1103, double %887
  br label %1105

1105:                                             ; preds = %1097, %1010
  %1106 = phi double [ %887, %1010 ], [ %1104, %1097 ]
  %1107 = phi double [ %1011, %1010 ], [ %1060, %1097 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %354) #14
  %1108 = load i32, i32* %355, align 4, !noalias !20
  %1109 = icmp eq i32 %1108, 26
  br i1 %1109, label %1110, label %1113

1110:                                             ; preds = %1105
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #14, !noalias !20
  store i8 5, i8* %363, align 1, !noalias !20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %361, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_115kVideoKindDepthE, i64 0, i64 0), i64 5, i1 false) #14
  store i8 0, i8* %364, align 1, !noalias !20
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* nonnull sret %22, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #14
  %1111 = load i8, i8* %363, align 1, !noalias !20
  %1112 = icmp slt i8 %1111, 0
  br i1 %1112, label %1118, label %1120

1113:                                             ; preds = %1105
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %356) #14, !noalias !20
  store i8 5, i8* %358, align 1, !noalias !20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %356, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_115kVideoKindColorE, i64 0, i64 0), i64 5, i1 false) #14
  store i8 0, i8* %359, align 1, !noalias !20
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* nonnull sret %22, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17) #14
  %1114 = load i8, i8* %358, align 1, !noalias !20
  %1115 = icmp slt i8 %1114, 0
  br i1 %1115, label %1116, label %1120

1116:                                             ; preds = %1113
  %1117 = load i8*, i8** %360, align 8, !noalias !20
  call void @_ZdlPv(i8* %1117) #15
  br label %1120

1118:                                             ; preds = %1110
  %1119 = load i8*, i8** %365, align 8, !noalias !20
  call void @_ZdlPv(i8* %1119) #15
  br label %1120

1120:                                             ; preds = %1110, %1118, %1113, %1116
  %1121 = phi i8* [ %356, %1116 ], [ %356, %1113 ], [ %361, %1118 ], [ %361, %1110 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1121) #14, !noalias !20
  %1122 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 19
  %1123 = call double @_ZN5blink31StringConstraintFitnessDistanceERKNS_9WebStringERKNS_16StringConstraintE(%"class.blink::WebString"* nonnull dereferenceable(8) %22, %"class.blink::StringConstraint"* dereferenceable(56) %1122) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %354) #14
  %1124 = fcmp ugt double %1107, %1106
  %1125 = select i1 %1124, %"class.blink::VideoTrackAdapterSettings"* %18, %"class.blink::VideoTrackAdapterSettings"* %20
  %1126 = select i1 %1124, double %1106, double %1107
  %1127 = call dereferenceable(40) %"class.blink::VideoTrackAdapterSettings"* @_ZN5blink25VideoTrackAdapterSettingsaSERKS0_(%"class.blink::VideoTrackAdapterSettings"* nonnull %42, %"class.blink::VideoTrackAdapterSettings"* nonnull dereferenceable(40) %1125) #14
  %1128 = fadd double %1123, %1126
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %323) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %315) #14
  %1129 = fadd double %792, %1128
  %1130 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %657, i64 0, i32 31, i32 1
  %1131 = load i8, i8* %1130, align 1
  %1132 = and i8 %1131, 4
  %1133 = icmp eq i8 %1132, 0
  br i1 %1133, label %1144, label %1134

1134:                                             ; preds = %1120
  %1135 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %620, i64 0, i32 0, i32 0, i32 0, i32 0
  %1136 = load i8, i8* %1135, align 1, !range !19
  %1137 = icmp eq i8 %1136, 0
  br i1 %1137, label %1144, label %1138

1138:                                             ; preds = %1134
  %1139 = and i8 %1131, 1
  %1140 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %620, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1141 = load i8, i8* %1140, align 1, !range !19
  %1142 = icmp eq i8 %1141, %1139
  %1143 = select i1 %1142, double 0.000000e+00, double 1.000000e+00
  br label %1144

1144:                                             ; preds = %1120, %1134, %1138
  %1145 = phi double [ 0.000000e+00, %1120 ], [ 1.000000e+00, %1134 ], [ %1143, %1138 ]
  %1146 = fadd double %1129, %1145
  %1147 = load double*, double** %258, align 8
  %1148 = load double*, double** %259, align 8
  %1149 = icmp ult double* %1147, %1148
  %1150 = ptrtoint double* %1148 to i64
  br i1 %1149, label %1151, label %1154

1151:                                             ; preds = %1144
  store double %1146, double* %1147, align 8
  %1152 = getelementptr inbounds double, double* %1147, i64 1
  %1153 = ptrtoint double* %1152 to i64
  store i64 %1153, i64* %308, align 8
  br label %1197

1154:                                             ; preds = %1144
  %1155 = ptrtoint double* %1147 to i64
  %1156 = load i64, i64* %309, align 8
  %1157 = sub i64 %1155, %1156
  %1158 = ashr exact i64 %1157, 3
  %1159 = add nsw i64 %1158, 1
  %1160 = icmp ugt i64 %1159, 2305843009213693951
  br i1 %1160, label %1161, label %1163

1161:                                             ; preds = %1154
  %1162 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1162) #17
  unreachable

1163:                                             ; preds = %1154
  %1164 = sub i64 %1150, %1156
  %1165 = ashr exact i64 %1164, 3
  %1166 = icmp ult i64 %1165, 1152921504606846975
  br i1 %1166, label %1167, label %1175

1167:                                             ; preds = %1163
  %1168 = ashr exact i64 %1164, 2
  %1169 = icmp ult i64 %1168, %1159
  %1170 = select i1 %1169, i64 %1159, i64 %1168
  %1171 = icmp eq i64 %1170, 0
  br i1 %1171, label %1180, label %1172

1172:                                             ; preds = %1167
  %1173 = icmp ugt i64 %1170, 2305843009213693951
  br i1 %1173, label %1174, label %1175

1174:                                             ; preds = %1172
  call void @abort() #17
  unreachable

1175:                                             ; preds = %1172, %1163
  %1176 = phi i64 [ %1170, %1172 ], [ 2305843009213693951, %1163 ]
  %1177 = shl i64 %1176, 3
  %1178 = call i8* @_Znwm(i64 %1177) #15
  %1179 = bitcast i8* %1178 to double*
  br label %1180

1180:                                             ; preds = %1175, %1167
  %1181 = phi i64 [ %1176, %1175 ], [ 0, %1167 ]
  %1182 = phi i8* [ %1178, %1175 ], [ null, %1167 ]
  %1183 = phi double* [ %1179, %1175 ], [ null, %1167 ]
  %1184 = getelementptr inbounds double, double* %1183, i64 %1158
  %1185 = getelementptr inbounds double, double* %1183, i64 %1181
  %1186 = ptrtoint double* %1185 to i64
  store double %1146, double* %1184, align 8
  %1187 = getelementptr inbounds double, double* %1184, i64 1
  %1188 = ptrtoint double* %1187 to i64
  %1189 = ptrtoint double* %1183 to i64
  %1190 = icmp sgt i64 %1157, 0
  br i1 %1190, label %1191, label %1193

1191:                                             ; preds = %1180
  %1192 = inttoptr i64 %1156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1182, i8* align 8 %1192, i64 %1157, i1 false) #14
  br label %1193

1193:                                             ; preds = %1191, %1180
  store i64 %1189, i64* %309, align 8
  store i64 %1188, i64* %308, align 8
  store i64 %1186, i64* %310, align 8
  %1194 = icmp eq i64 %1156, 0
  br i1 %1194, label %1197, label %1195

1195:                                             ; preds = %1193
  %1196 = inttoptr i64 %1156 to i8*
  call void @_ZdlPv(i8* %1196) #15
  br label %1197

1197:                                             ; preds = %1151, %1193, %1195
  %1198 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  %1199 = load i32, i32* %366, align 8
  %1200 = load i32, i32* %367, align 4
  %1201 = load i32, i32* %324, align 8
  %1202 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1198, i64 0, i32 0, i32 6
  %1203 = load i8, i8* %1202, align 4
  %1204 = and i8 %1203, 8
  %1205 = icmp eq i8 %1204, 0
  br i1 %1205, label %1213, label %1206

1206:                                             ; preds = %1197
  %1207 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1198, i64 0, i32 0, i32 5
  %1208 = load i32, i32* %1207, align 8
  %1209 = icmp sgt i32 %1208, %1200
  %1210 = select i1 %1209, i32 %1200, i32 %1208
  %1211 = icmp slt i32 %1210, %1199
  %1212 = select i1 %1211, i32 %1199, i32 %1210
  br label %1213

1213:                                             ; preds = %1206, %1197
  %1214 = phi i32 [ %1212, %1206 ], [ %1200, %1197 ]
  %1215 = sitofp i32 %1201 to double
  %1216 = sitofp i32 %1214 to double
  %1217 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1215, double %1216) #14
  %1218 = load i32, i32* %368, align 8
  %1219 = load i32, i32* %369, align 4
  %1220 = load i32, i32* %327, align 4
  %1221 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1198, i64 0, i32 1, i32 6
  %1222 = load i8, i8* %1221, align 4
  %1223 = and i8 %1222, 8
  %1224 = icmp eq i8 %1223, 0
  br i1 %1224, label %1232, label %1225

1225:                                             ; preds = %1213
  %1226 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1198, i64 0, i32 1, i32 5
  %1227 = load i32, i32* %1226, align 8
  %1228 = icmp sgt i32 %1227, %1219
  %1229 = select i1 %1228, i32 %1219, i32 %1227
  %1230 = icmp slt i32 %1229, %1218
  %1231 = select i1 %1230, i32 %1218, i32 %1229
  br label %1232

1232:                                             ; preds = %1225, %1213
  %1233 = phi i32 [ %1231, %1225 ], [ %1219, %1213 ]
  %1234 = sitofp i32 %1220 to double
  %1235 = sitofp i32 %1233 to double
  %1236 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1234, double %1235) #14
  %1237 = fadd double %1217, %1236
  %1238 = load i8, i8* %241, align 8, !range !19
  %1239 = icmp eq i8 %1238, 0
  br i1 %1239, label %1244, label %1240

1240:                                             ; preds = %1232
  %1241 = load double, double* %370, align 8
  %1242 = fcmp olt double %1241, %371
  %1243 = select i1 %1242, double* @_ZN5blink26kMinDeviceCaptureFrameRateE, double* %370
  br label %1244

1244:                                             ; preds = %1240, %1232
  %1245 = phi double* [ %1243, %1240 ], [ @_ZN5blink26kMinDeviceCaptureFrameRateE, %1232 ]
  %1246 = load double, double* %1245, align 8
  %1247 = load i8, i8* %242, align 8, !range !19
  %1248 = icmp eq i8 %1247, 0
  %1249 = load float, float* %322, align 8
  %1250 = fpext float %1249 to double
  br i1 %1248, label %1255, label %1251

1251:                                             ; preds = %1244
  %1252 = load double, double* %372, align 8
  %1253 = fcmp ogt double %1252, %1250
  %1254 = select i1 %1253, double %1250, double %1252
  br label %1255

1255:                                             ; preds = %1244, %1251
  %1256 = phi double [ %1254, %1251 ], [ %1250, %1244 ]
  %1257 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1198, i64 0, i32 3, i32 6
  %1258 = load i8, i8* %1257, align 8
  %1259 = and i8 %1258, 8
  %1260 = icmp eq i8 %1259, 0
  br i1 %1260, label %1268, label %1261

1261:                                             ; preds = %1255
  %1262 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1198, i64 0, i32 3, i32 5
  %1263 = load double, double* %1262, align 8
  %1264 = fcmp ogt double %1263, %1256
  %1265 = select i1 %1264, double %1256, double %1263
  %1266 = fcmp olt double %1265, %1246
  %1267 = select i1 %1266, double %1246, double %1265
  br label %1268

1268:                                             ; preds = %1255, %1261
  %1269 = phi double [ %1267, %1261 ], [ %1256, %1255 ]
  %1270 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1250, double %1269) #14
  %1271 = fadd double %1237, %1270
  %1272 = load double*, double** %258, align 8
  %1273 = load double*, double** %259, align 8
  %1274 = icmp ult double* %1272, %1273
  %1275 = ptrtoint double* %1273 to i64
  br i1 %1274, label %1276, label %1279

1276:                                             ; preds = %1268
  store double %1271, double* %1272, align 8
  %1277 = getelementptr inbounds double, double* %1272, i64 1
  %1278 = ptrtoint double* %1277 to i64
  store i64 %1278, i64* %308, align 8
  br label %1322

1279:                                             ; preds = %1268
  %1280 = ptrtoint double* %1272 to i64
  %1281 = load i64, i64* %309, align 8
  %1282 = sub i64 %1280, %1281
  %1283 = ashr exact i64 %1282, 3
  %1284 = add nsw i64 %1283, 1
  %1285 = icmp ugt i64 %1284, 2305843009213693951
  br i1 %1285, label %1286, label %1288

1286:                                             ; preds = %1279
  %1287 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1287) #17
  unreachable

1288:                                             ; preds = %1279
  %1289 = sub i64 %1275, %1281
  %1290 = ashr exact i64 %1289, 3
  %1291 = icmp ult i64 %1290, 1152921504606846975
  br i1 %1291, label %1292, label %1300

1292:                                             ; preds = %1288
  %1293 = ashr exact i64 %1289, 2
  %1294 = icmp ult i64 %1293, %1284
  %1295 = select i1 %1294, i64 %1284, i64 %1293
  %1296 = icmp eq i64 %1295, 0
  br i1 %1296, label %1305, label %1297

1297:                                             ; preds = %1292
  %1298 = icmp ugt i64 %1295, 2305843009213693951
  br i1 %1298, label %1299, label %1300

1299:                                             ; preds = %1297
  call void @abort() #17
  unreachable

1300:                                             ; preds = %1297, %1288
  %1301 = phi i64 [ %1295, %1297 ], [ 2305843009213693951, %1288 ]
  %1302 = shl i64 %1301, 3
  %1303 = call i8* @_Znwm(i64 %1302) #15
  %1304 = bitcast i8* %1303 to double*
  br label %1305

1305:                                             ; preds = %1300, %1292
  %1306 = phi i64 [ %1301, %1300 ], [ 0, %1292 ]
  %1307 = phi i8* [ %1303, %1300 ], [ null, %1292 ]
  %1308 = phi double* [ %1304, %1300 ], [ null, %1292 ]
  %1309 = getelementptr inbounds double, double* %1308, i64 %1283
  %1310 = getelementptr inbounds double, double* %1308, i64 %1306
  %1311 = ptrtoint double* %1310 to i64
  store double %1271, double* %1309, align 8
  %1312 = getelementptr inbounds double, double* %1309, i64 1
  %1313 = ptrtoint double* %1312 to i64
  %1314 = ptrtoint double* %1308 to i64
  %1315 = icmp sgt i64 %1282, 0
  br i1 %1315, label %1316, label %1318

1316:                                             ; preds = %1305
  %1317 = inttoptr i64 %1281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1307, i8* align 8 %1317, i64 %1282, i1 false) #14
  br label %1318

1318:                                             ; preds = %1316, %1305
  store i64 %1314, i64* %309, align 8
  store i64 %1313, i64* %308, align 8
  store i64 %1311, i64* %310, align 8
  %1319 = icmp eq i64 %1281, 0
  br i1 %1319, label %1322, label %1320

1320:                                             ; preds = %1318
  %1321 = inttoptr i64 %1281 to i8*
  call void @_ZdlPv(i8* %1321) #15
  br label %1322

1322:                                             ; preds = %1276, %1318, %1320
  %1323 = load i32, i32* %183, align 4
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1388, label %1325

1325:                                             ; preds = %1322, %1384
  %1326 = phi i32 [ %1385, %1384 ], [ 0, %1322 ]
  %1327 = call dereferenceable(48) %"struct.blink::VideoInputDeviceCapabilities"* @_ZNK3WTF6VectorIN5blink28VideoInputDeviceCapabilitiesELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2"* %180, i32 %1326) #14
  %1328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %603, align 8
  %1329 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %1327, i64 0, i32 0, i32 0, i32 0
  %1330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1329, align 8
  %1331 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %1328, %"class.WTF::StringImpl"* %1330) #14
  br i1 %1331, label %1332, label %1384

1332:                                             ; preds = %1325
  %1333 = uitofp i32 %1326 to double
  %1334 = load double*, double** %258, align 8
  %1335 = load double*, double** %259, align 8
  %1336 = icmp ult double* %1334, %1335
  %1337 = ptrtoint double* %1335 to i64
  br i1 %1336, label %1338, label %1341

1338:                                             ; preds = %1332
  store double %1333, double* %1334, align 8
  %1339 = getelementptr inbounds double, double* %1334, i64 1
  %1340 = ptrtoint double* %1339 to i64
  store i64 %1340, i64* %308, align 8
  br label %1388

1341:                                             ; preds = %1332
  %1342 = ptrtoint double* %1334 to i64
  %1343 = load i64, i64* %309, align 8
  %1344 = sub i64 %1342, %1343
  %1345 = ashr exact i64 %1344, 3
  %1346 = add nsw i64 %1345, 1
  %1347 = icmp ugt i64 %1346, 2305843009213693951
  br i1 %1347, label %1348, label %1350

1348:                                             ; preds = %1341
  %1349 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1349) #17
  unreachable

1350:                                             ; preds = %1341
  %1351 = sub i64 %1337, %1343
  %1352 = ashr exact i64 %1351, 3
  %1353 = icmp ult i64 %1352, 1152921504606846975
  br i1 %1353, label %1354, label %1362

1354:                                             ; preds = %1350
  %1355 = ashr exact i64 %1351, 2
  %1356 = icmp ult i64 %1355, %1346
  %1357 = select i1 %1356, i64 %1346, i64 %1355
  %1358 = icmp eq i64 %1357, 0
  br i1 %1358, label %1367, label %1359

1359:                                             ; preds = %1354
  %1360 = icmp ugt i64 %1357, 2305843009213693951
  br i1 %1360, label %1361, label %1362

1361:                                             ; preds = %1359
  call void @abort() #17
  unreachable

1362:                                             ; preds = %1359, %1350
  %1363 = phi i64 [ %1357, %1359 ], [ 2305843009213693951, %1350 ]
  %1364 = shl i64 %1363, 3
  %1365 = call i8* @_Znwm(i64 %1364) #15
  %1366 = bitcast i8* %1365 to double*
  br label %1367

1367:                                             ; preds = %1362, %1354
  %1368 = phi i64 [ %1363, %1362 ], [ 0, %1354 ]
  %1369 = phi i8* [ %1365, %1362 ], [ null, %1354 ]
  %1370 = phi double* [ %1366, %1362 ], [ null, %1354 ]
  %1371 = getelementptr inbounds double, double* %1370, i64 %1345
  %1372 = getelementptr inbounds double, double* %1370, i64 %1368
  %1373 = ptrtoint double* %1372 to i64
  store double %1333, double* %1371, align 8
  %1374 = getelementptr inbounds double, double* %1371, i64 1
  %1375 = ptrtoint double* %1374 to i64
  %1376 = ptrtoint double* %1370 to i64
  %1377 = icmp sgt i64 %1344, 0
  br i1 %1377, label %1378, label %1380

1378:                                             ; preds = %1367
  %1379 = inttoptr i64 %1343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1369, i8* align 8 %1379, i64 %1344, i1 false) #14
  br label %1380

1380:                                             ; preds = %1378, %1367
  store i64 %1376, i64* %309, align 8
  store i64 %1375, i64* %308, align 8
  store i64 %1373, i64* %310, align 8
  %1381 = icmp eq i64 %1343, 0
  br i1 %1381, label %1388, label %1382

1382:                                             ; preds = %1380
  %1383 = inttoptr i64 %1343 to i8*
  call void @_ZdlPv(i8* %1383) #15
  br label %1388

1384:                                             ; preds = %1325
  %1385 = add nuw i32 %1326, 1
  %1386 = load i32, i32* %183, align 4
  %1387 = icmp ult i32 %1385, %1386
  br i1 %1387, label %1325, label %1388

1388:                                             ; preds = %1384, %1382, %1380, %1338, %1322
  %1389 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %620, i64 0, i32 0, i32 0, i32 0, i32 0
  %1390 = load i8, i8* %1389, align 1, !range !19
  %1391 = icmp eq i8 %1390, 0
  %1392 = select i1 %1391, i64 0, i64 9218868437227405312
  %1393 = load double*, double** %258, align 8
  %1394 = load double*, double** %259, align 8
  %1395 = icmp eq double* %1393, %1394
  %1396 = ptrtoint double* %1394 to i64
  br i1 %1395, label %1401, label %1397

1397:                                             ; preds = %1388
  %1398 = bitcast double* %1393 to i64*
  store i64 %1392, i64* %1398, align 8
  %1399 = getelementptr inbounds double, double* %1393, i64 1
  %1400 = ptrtoint double* %1399 to i64
  store i64 %1400, i64* %308, align 8
  br label %1445

1401:                                             ; preds = %1388
  %1402 = ptrtoint double* %1393 to i64
  %1403 = load i64, i64* %309, align 8
  %1404 = sub i64 %1402, %1403
  %1405 = ashr exact i64 %1404, 3
  %1406 = add nsw i64 %1405, 1
  %1407 = icmp ugt i64 %1406, 2305843009213693951
  br i1 %1407, label %1408, label %1410

1408:                                             ; preds = %1401
  %1409 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1409) #17
  unreachable

1410:                                             ; preds = %1401
  %1411 = sub i64 %1396, %1403
  %1412 = ashr exact i64 %1411, 3
  %1413 = icmp ult i64 %1412, 1152921504606846975
  br i1 %1413, label %1414, label %1422

1414:                                             ; preds = %1410
  %1415 = ashr exact i64 %1411, 2
  %1416 = icmp ult i64 %1415, %1406
  %1417 = select i1 %1416, i64 %1406, i64 %1415
  %1418 = icmp eq i64 %1417, 0
  br i1 %1418, label %1427, label %1419

1419:                                             ; preds = %1414
  %1420 = icmp ugt i64 %1417, 2305843009213693951
  br i1 %1420, label %1421, label %1422

1421:                                             ; preds = %1419
  call void @abort() #17
  unreachable

1422:                                             ; preds = %1419, %1410
  %1423 = phi i64 [ %1417, %1419 ], [ 2305843009213693951, %1410 ]
  %1424 = shl i64 %1423, 3
  %1425 = call i8* @_Znwm(i64 %1424) #15
  %1426 = bitcast i8* %1425 to double*
  br label %1427

1427:                                             ; preds = %1422, %1414
  %1428 = phi i64 [ %1423, %1422 ], [ 0, %1414 ]
  %1429 = phi i8* [ %1425, %1422 ], [ null, %1414 ]
  %1430 = phi double* [ %1426, %1422 ], [ null, %1414 ]
  %1431 = getelementptr inbounds double, double* %1430, i64 %1405
  %1432 = getelementptr inbounds double, double* %1430, i64 %1428
  %1433 = ptrtoint double* %1432 to i64
  %1434 = bitcast double* %1431 to i64*
  store i64 %1392, i64* %1434, align 8
  %1435 = getelementptr inbounds double, double* %1431, i64 1
  %1436 = ptrtoint double* %1435 to i64
  %1437 = ptrtoint double* %1430 to i64
  %1438 = icmp sgt i64 %1404, 0
  br i1 %1438, label %1439, label %1441

1439:                                             ; preds = %1427
  %1440 = inttoptr i64 %1403 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1429, i8* align 8 %1440, i64 %1404, i1 false) #14
  br label %1441

1441:                                             ; preds = %1439, %1427
  store i64 %1437, i64* %309, align 8
  store i64 %1436, i64* %308, align 8
  store i64 %1433, i64* %310, align 8
  %1442 = icmp eq i64 %1403, 0
  br i1 %1442, label %1445, label %1443

1443:                                             ; preds = %1441
  %1444 = inttoptr i64 %1403 to i8*
  call void @_ZdlPv(i8* %1444) #15
  br label %1445

1445:                                             ; preds = %1443, %1441, %1397
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %373) #14
  %1446 = load i32, i32* %327, align 4
  %1447 = sitofp i32 %1446 to double
  %1448 = load i32, i32* %324, align 8
  %1449 = sitofp i32 %1448 to double
  call void @_ZN5blink17media_constraints13ResolutionSet5PointC1Edd(%"class.blink::media_constraints::ResolutionSet::Point"* nonnull %10, double %1447, double %1449) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %374) #14
  call void @_ZN5blink17media_constraints13ResolutionSet5PointC1Edd(%"class.blink::media_constraints::ResolutionSet::Point"* nonnull %11, double %375, double %376) #14
  %1450 = call double @_ZN5blink17media_constraints13ResolutionSet5Point23SquareEuclideanDistanceERKS2_S4_(%"class.blink::media_constraints::ResolutionSet::Point"* nonnull dereferenceable(16) %10, %"class.blink::media_constraints::ResolutionSet::Point"* nonnull dereferenceable(16) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %374) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %373) #14
  %1451 = load double*, double** %258, align 8
  %1452 = load double*, double** %259, align 8
  %1453 = icmp eq double* %1451, %1452
  %1454 = ptrtoint double* %1452 to i64
  br i1 %1453, label %1458, label %1455

1455:                                             ; preds = %1445
  store double %1450, double* %1451, align 8
  %1456 = getelementptr inbounds double, double* %1451, i64 1
  %1457 = ptrtoint double* %1456 to i64
  store i64 %1457, i64* %308, align 8
  br label %1501

1458:                                             ; preds = %1445
  %1459 = ptrtoint double* %1451 to i64
  %1460 = load i64, i64* %309, align 8
  %1461 = sub i64 %1459, %1460
  %1462 = ashr exact i64 %1461, 3
  %1463 = add nsw i64 %1462, 1
  %1464 = icmp ugt i64 %1463, 2305843009213693951
  br i1 %1464, label %1465, label %1467

1465:                                             ; preds = %1458
  %1466 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1466) #17
  unreachable

1467:                                             ; preds = %1458
  %1468 = sub i64 %1454, %1460
  %1469 = ashr exact i64 %1468, 3
  %1470 = icmp ult i64 %1469, 1152921504606846975
  br i1 %1470, label %1471, label %1479

1471:                                             ; preds = %1467
  %1472 = ashr exact i64 %1468, 2
  %1473 = icmp ult i64 %1472, %1463
  %1474 = select i1 %1473, i64 %1463, i64 %1472
  %1475 = icmp eq i64 %1474, 0
  br i1 %1475, label %1484, label %1476

1476:                                             ; preds = %1471
  %1477 = icmp ugt i64 %1474, 2305843009213693951
  br i1 %1477, label %1478, label %1479

1478:                                             ; preds = %1476
  call void @abort() #17
  unreachable

1479:                                             ; preds = %1476, %1467
  %1480 = phi i64 [ %1474, %1476 ], [ 2305843009213693951, %1467 ]
  %1481 = shl i64 %1480, 3
  %1482 = call i8* @_Znwm(i64 %1481) #15
  %1483 = bitcast i8* %1482 to double*
  br label %1484

1484:                                             ; preds = %1479, %1471
  %1485 = phi i64 [ %1480, %1479 ], [ 0, %1471 ]
  %1486 = phi i8* [ %1482, %1479 ], [ null, %1471 ]
  %1487 = phi double* [ %1483, %1479 ], [ null, %1471 ]
  %1488 = getelementptr inbounds double, double* %1487, i64 %1462
  %1489 = getelementptr inbounds double, double* %1487, i64 %1485
  %1490 = ptrtoint double* %1489 to i64
  store double %1450, double* %1488, align 8
  %1491 = getelementptr inbounds double, double* %1488, i64 1
  %1492 = ptrtoint double* %1491 to i64
  %1493 = ptrtoint double* %1487 to i64
  %1494 = icmp sgt i64 %1461, 0
  br i1 %1494, label %1495, label %1497

1495:                                             ; preds = %1484
  %1496 = inttoptr i64 %1460 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1486, i8* align 8 %1496, i64 %1461, i1 false) #14
  br label %1497

1497:                                             ; preds = %1495, %1484
  store i64 %1493, i64* %309, align 8
  store i64 %1492, i64* %308, align 8
  store i64 %1490, i64* %310, align 8
  %1498 = icmp eq i64 %1460, 0
  br i1 %1498, label %1501, label %1499

1499:                                             ; preds = %1497
  %1500 = inttoptr i64 %1460 to i8*
  call void @_ZdlPv(i8* %1500) #15
  br label %1501

1501:                                             ; preds = %1499, %1497, %1455
  %1502 = load float, float* %322, align 8
  %1503 = fpext float %1502 to double
  %1504 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1503, double %5) #14
  %1505 = load double*, double** %258, align 8
  %1506 = load double*, double** %259, align 8
  %1507 = icmp eq double* %1505, %1506
  %1508 = ptrtoint double* %1506 to i64
  br i1 %1507, label %1512, label %1509

1509:                                             ; preds = %1501
  store double %1504, double* %1505, align 8
  %1510 = getelementptr inbounds double, double* %1505, i64 1
  %1511 = ptrtoint double* %1510 to i64
  store i64 %1511, i64* %308, align 8
  br label %1556

1512:                                             ; preds = %1501
  %1513 = ptrtoint double* %1505 to i64
  %1514 = load i64, i64* %309, align 8
  %1515 = sub i64 %1513, %1514
  %1516 = ashr exact i64 %1515, 3
  %1517 = add nsw i64 %1516, 1
  %1518 = icmp ugt i64 %1517, 2305843009213693951
  br i1 %1518, label %1519, label %1521

1519:                                             ; preds = %1512
  %1520 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1520) #17
  unreachable

1521:                                             ; preds = %1512
  %1522 = sub i64 %1508, %1514
  %1523 = ashr exact i64 %1522, 3
  %1524 = icmp ult i64 %1523, 1152921504606846975
  br i1 %1524, label %1525, label %1533

1525:                                             ; preds = %1521
  %1526 = ashr exact i64 %1522, 2
  %1527 = icmp ult i64 %1526, %1517
  %1528 = select i1 %1527, i64 %1517, i64 %1526
  %1529 = icmp eq i64 %1528, 0
  br i1 %1529, label %1538, label %1530

1530:                                             ; preds = %1525
  %1531 = icmp ugt i64 %1528, 2305843009213693951
  br i1 %1531, label %1532, label %1533

1532:                                             ; preds = %1530
  call void @abort() #17
  unreachable

1533:                                             ; preds = %1530, %1521
  %1534 = phi i64 [ %1528, %1530 ], [ 2305843009213693951, %1521 ]
  %1535 = shl i64 %1534, 3
  %1536 = call i8* @_Znwm(i64 %1535) #15
  %1537 = bitcast i8* %1536 to double*
  br label %1538

1538:                                             ; preds = %1533, %1525
  %1539 = phi i64 [ %1534, %1533 ], [ 0, %1525 ]
  %1540 = phi i8* [ %1536, %1533 ], [ null, %1525 ]
  %1541 = phi double* [ %1537, %1533 ], [ null, %1525 ]
  %1542 = getelementptr inbounds double, double* %1541, i64 %1516
  %1543 = getelementptr inbounds double, double* %1541, i64 %1539
  %1544 = ptrtoint double* %1543 to i64
  store double %1504, double* %1542, align 8
  %1545 = getelementptr inbounds double, double* %1542, i64 1
  %1546 = ptrtoint double* %1545 to i64
  %1547 = ptrtoint double* %1541 to i64
  %1548 = icmp sgt i64 %1515, 0
  br i1 %1548, label %1549, label %1551

1549:                                             ; preds = %1538
  %1550 = inttoptr i64 %1514 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1540, i8* align 8 %1550, i64 %1515, i1 false) #14
  br label %1551

1551:                                             ; preds = %1549, %1538
  store i64 %1547, i64* %309, align 8
  store i64 %1546, i64* %308, align 8
  store i64 %1544, i64* %310, align 8
  %1552 = icmp eq i64 %1514, 0
  br i1 %1552, label %1556, label %1553

1553:                                             ; preds = %1551
  %1554 = inttoptr i64 %1514 to i8*
  call void @_ZdlPv(i8* %1554) #15
  %1555 = load double*, double** %258, align 8
  br label %1556

1556:                                             ; preds = %1509, %1551, %1553
  %1557 = phi double* [ %1510, %1509 ], [ %1545, %1551 ], [ %1555, %1553 ]
  %1558 = load double*, double** %51, align 8
  %1559 = load double*, double** %52, align 8
  %1560 = icmp eq double* %1558, %1559
  br i1 %1560, label %1988, label %1561

1561:                                             ; preds = %1556
  %1562 = load double*, double** %257, align 8
  br label %1563

1563:                                             ; preds = %1573, %1561
  %1564 = phi double* [ %1574, %1573 ], [ %1562, %1561 ]
  %1565 = phi double* [ %1575, %1573 ], [ %1558, %1561 ]
  %1566 = icmp eq double* %1564, %1557
  br i1 %1566, label %1882, label %1567

1567:                                             ; preds = %1563
  %1568 = load double, double* %1564, align 8
  %1569 = load double, double* %1565, align 8
  %1570 = fcmp olt double %1568, %1569
  br i1 %1570, label %1882, label %1571

1571:                                             ; preds = %1567
  %1572 = fcmp olt double %1569, %1568
  br i1 %1572, label %1988, label %1573

1573:                                             ; preds = %1571
  %1574 = getelementptr inbounds double, double* %1564, i64 1
  %1575 = getelementptr inbounds double, double* %1565, i64 1
  %1576 = icmp eq double* %1575, %1559
  br i1 %1576, label %1988, label %1563

1577:                                             ; preds = %653, %1879
  %1578 = phi %"struct.blink::MediaTrackConstraintSetPlatform"* [ %647, %653 ], [ %1880, %1879 ]
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %260)
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %261)
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %262)
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %263)
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %264)
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %265)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %260, i8* align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %261, i8* align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %262, i8* align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %263, i8* align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %264, i8* align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %265, i8* align 1 getelementptr inbounds ({ { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }, { { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } } }* @__const._ZN5blink32SelectSettingsVideoDeviceCaptureERKNS_30VideoDeviceCaptureCapabilitiesERKNS_16MediaConstraintsEiid.ptz_advanced_state, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %266)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %267)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %268)
  %1579 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 0, i32 15, i32 0, i32 1
  %1580 = bitcast i8** %1579 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %1580, i64 9, i1 false) #14, !noalias !25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %269, align 8, !noalias !25
  %1581 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 0, i32 15, i32 2
  %1582 = bitcast double* %1581 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %273, i8* align 8 %1582, i64 33, i1 false) #14, !noalias !25
  %1583 = call zeroext i1 %199(%"class.blink::DoubleConstraint"* nonnull %7) #14, !noalias !28
  br i1 %1583, label %1589, label %1584

1584:                                             ; preds = %1577
  %1585 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %274, align 8, !noalias !28
  %1586 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1585, i64 5
  %1587 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1586, align 8, !noalias !28
  %1588 = call zeroext i1 %1587(%"class.blink::DoubleConstraint"* nonnull %7) #14, !noalias !28
  br i1 %1588, label %1589, label %1597

1589:                                             ; preds = %1584, %1577
  %1590 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %274, align 8, !noalias !28
  %1591 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1590, i64 5
  %1592 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1591, align 8, !noalias !28
  %1593 = call zeroext i1 %1592(%"class.blink::DoubleConstraint"* nonnull %7) #14, !noalias !28
  %1594 = load double, double* %275, align 8, !noalias !25
  %1595 = load double, double* %272, align 8, !noalias !25
  %1596 = select i1 %1593, double %1594, double %1595
  br label %1597

1597:                                             ; preds = %1589, %1584
  %1598 = phi i8 [ 1, %1589 ], [ 0, %1584 ]
  %1599 = phi double [ %1596, %1589 ], [ undef, %1584 ]
  %1600 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %274, align 8, !noalias !28
  %1601 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1600, i64 4
  %1602 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1601, align 8, !noalias !28
  %1603 = call zeroext i1 %1602(%"class.blink::DoubleConstraint"* nonnull %7) #14, !noalias !28
  br i1 %1603, label %1609, label %1604

1604:                                             ; preds = %1597
  %1605 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %274, align 8, !noalias !28
  %1606 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1605, i64 5
  %1607 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1606, align 8, !noalias !28
  %1608 = call zeroext i1 %1607(%"class.blink::DoubleConstraint"* nonnull %7) #14, !noalias !28
  br i1 %1608, label %1609, label %1617

1609:                                             ; preds = %1604, %1597
  %1610 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %274, align 8, !noalias !28
  %1611 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1610, i64 5
  %1612 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1611, align 8, !noalias !28
  %1613 = call zeroext i1 %1612(%"class.blink::DoubleConstraint"* nonnull %7) #14, !noalias !28
  %1614 = load double, double* %275, align 8, !noalias !25
  %1615 = load double, double* %276, align 8, !noalias !25
  %1616 = select i1 %1613, double %1614, double %1615
  br label %1617

1617:                                             ; preds = %1609, %1604
  %1618 = phi double [ %1616, %1609 ], [ undef, %1604 ]
  %1619 = phi i8 [ 1, %1609 ], [ 0, %1604 ]
  %1620 = bitcast double %1599 to i64
  %1621 = bitcast double %1618 to i64
  %1622 = load i8, i8* %221, align 8, !noalias !31
  %1623 = load i64, i64* %278, align 8, !noalias !31
  %1624 = icmp eq i8 %1598, 0
  br i1 %1624, label %1631, label %1625

1625:                                             ; preds = %1617
  %1626 = icmp eq i8 %1622, 0
  br i1 %1626, label %1631, label %1627

1627:                                             ; preds = %1625
  %1628 = bitcast i64 %1623 to double
  %1629 = fcmp ogt double %1599, %1628
  %1630 = select i1 %1629, i64 %1620, i64 %1623
  br label %1631

1631:                                             ; preds = %1625, %1627, %1617
  %1632 = phi i64 [ %1623, %1617 ], [ %1630, %1627 ], [ %1620, %1625 ]
  %1633 = phi i8 [ %1622, %1617 ], [ 1, %1627 ], [ 1, %1625 ]
  %1634 = load i8, i8* %224, align 8, !noalias !31
  %1635 = load i64, i64* %280, align 8, !noalias !31
  %1636 = icmp eq i8 %1619, 0
  br i1 %1636, label %1643, label %1637

1637:                                             ; preds = %1631
  %1638 = icmp eq i8 %1634, 0
  br i1 %1638, label %1643, label %1639

1639:                                             ; preds = %1637
  %1640 = bitcast i64 %1635 to double
  %1641 = fcmp olt double %1618, %1640
  %1642 = select i1 %1641, i64 %1621, i64 %1635
  br label %1643

1643:                                             ; preds = %1637, %1639, %1631
  %1644 = phi i64 [ %1635, %1631 ], [ %1642, %1639 ], [ %1621, %1637 ]
  %1645 = phi i8 [ %1634, %1631 ], [ 1, %1639 ], [ 1, %1637 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %281) #14, !noalias !25
  %1646 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 0, i32 16, i32 0, i32 1
  %1647 = bitcast i8** %1646 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %1647, i64 9, i1 false) #14, !noalias !25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %282, align 8, !noalias !25
  %1648 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 0, i32 16, i32 2
  %1649 = bitcast double* %1648 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 8 %1649, i64 33, i1 false) #14, !noalias !25
  %1650 = call zeroext i1 %199(%"class.blink::DoubleConstraint"* nonnull %8) #14, !noalias !34
  br i1 %1650, label %1656, label %1651

1651:                                             ; preds = %1643
  %1652 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %287, align 8, !noalias !34
  %1653 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1652, i64 5
  %1654 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1653, align 8, !noalias !34
  %1655 = call zeroext i1 %1654(%"class.blink::DoubleConstraint"* nonnull %8) #14, !noalias !34
  br i1 %1655, label %1656, label %1664

1656:                                             ; preds = %1651, %1643
  %1657 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %287, align 8, !noalias !34
  %1658 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1657, i64 5
  %1659 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1658, align 8, !noalias !34
  %1660 = call zeroext i1 %1659(%"class.blink::DoubleConstraint"* nonnull %8) #14, !noalias !34
  %1661 = load double, double* %288, align 8, !noalias !25
  %1662 = load double, double* %285, align 8, !noalias !25
  %1663 = select i1 %1660, double %1661, double %1662
  br label %1664

1664:                                             ; preds = %1656, %1651
  %1665 = phi i8 [ 1, %1656 ], [ 0, %1651 ]
  %1666 = phi double [ %1663, %1656 ], [ undef, %1651 ]
  %1667 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %287, align 8, !noalias !34
  %1668 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1667, i64 4
  %1669 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1668, align 8, !noalias !34
  %1670 = call zeroext i1 %1669(%"class.blink::DoubleConstraint"* nonnull %8) #14, !noalias !34
  br i1 %1670, label %1676, label %1671

1671:                                             ; preds = %1664
  %1672 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %287, align 8, !noalias !34
  %1673 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1672, i64 5
  %1674 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1673, align 8, !noalias !34
  %1675 = call zeroext i1 %1674(%"class.blink::DoubleConstraint"* nonnull %8) #14, !noalias !34
  br i1 %1675, label %1676, label %1684

1676:                                             ; preds = %1671, %1664
  %1677 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %287, align 8, !noalias !34
  %1678 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1677, i64 5
  %1679 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1678, align 8, !noalias !34
  %1680 = call zeroext i1 %1679(%"class.blink::DoubleConstraint"* nonnull %8) #14, !noalias !34
  %1681 = load double, double* %288, align 8, !noalias !25
  %1682 = load double, double* %289, align 8, !noalias !25
  %1683 = select i1 %1680, double %1681, double %1682
  br label %1684

1684:                                             ; preds = %1676, %1671
  %1685 = phi double [ %1683, %1676 ], [ undef, %1671 ]
  %1686 = phi i8 [ 1, %1676 ], [ 0, %1671 ]
  %1687 = bitcast double %1666 to i64
  %1688 = bitcast double %1685 to i64
  %1689 = load i8, i8* %227, align 8, !noalias !37
  %1690 = load i64, i64* %291, align 8, !noalias !37
  %1691 = icmp eq i8 %1665, 0
  br i1 %1691, label %1698, label %1692

1692:                                             ; preds = %1684
  %1693 = icmp eq i8 %1689, 0
  br i1 %1693, label %1698, label %1694

1694:                                             ; preds = %1692
  %1695 = bitcast i64 %1690 to double
  %1696 = fcmp ogt double %1666, %1695
  %1697 = select i1 %1696, i64 %1687, i64 %1690
  br label %1698

1698:                                             ; preds = %1692, %1694, %1684
  %1699 = phi i64 [ %1690, %1684 ], [ %1697, %1694 ], [ %1687, %1692 ]
  %1700 = phi i8 [ %1689, %1684 ], [ 1, %1694 ], [ 1, %1692 ]
  %1701 = load i8, i8* %230, align 8, !noalias !37
  %1702 = load i64, i64* %293, align 8, !noalias !37
  %1703 = icmp eq i8 %1686, 0
  br i1 %1703, label %1710, label %1704

1704:                                             ; preds = %1698
  %1705 = icmp eq i8 %1701, 0
  br i1 %1705, label %1710, label %1706

1706:                                             ; preds = %1704
  %1707 = bitcast i64 %1702 to double
  %1708 = fcmp olt double %1685, %1707
  %1709 = select i1 %1708, i64 %1688, i64 %1702
  br label %1710

1710:                                             ; preds = %1704, %1706, %1698
  %1711 = phi i64 [ %1702, %1698 ], [ %1709, %1706 ], [ %1688, %1704 ]
  %1712 = phi i8 [ %1701, %1698 ], [ 1, %1706 ], [ 1, %1704 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %294) #14, !noalias !25
  %1713 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 0, i32 17, i32 0, i32 1
  %1714 = bitcast i8** %1713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %297, i8* align 8 %1714, i64 9, i1 false) #14, !noalias !25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %295, align 8, !noalias !25
  %1715 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 0, i32 17, i32 2
  %1716 = bitcast double* %1715 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %299, i8* align 8 %1716, i64 33, i1 false) #14, !noalias !25
  %1717 = call zeroext i1 %199(%"class.blink::DoubleConstraint"* nonnull %9) #14, !noalias !40
  br i1 %1717, label %1723, label %1718

1718:                                             ; preds = %1710
  %1719 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %300, align 8, !noalias !40
  %1720 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1719, i64 5
  %1721 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1720, align 8, !noalias !40
  %1722 = call zeroext i1 %1721(%"class.blink::DoubleConstraint"* nonnull %9) #14, !noalias !40
  br i1 %1722, label %1723, label %1731

1723:                                             ; preds = %1718, %1710
  %1724 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %300, align 8, !noalias !40
  %1725 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1724, i64 5
  %1726 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1725, align 8, !noalias !40
  %1727 = call zeroext i1 %1726(%"class.blink::DoubleConstraint"* nonnull %9) #14, !noalias !40
  %1728 = load double, double* %301, align 8, !noalias !25
  %1729 = load double, double* %298, align 8, !noalias !25
  %1730 = select i1 %1727, double %1728, double %1729
  br label %1731

1731:                                             ; preds = %1723, %1718
  %1732 = phi i8 [ 1, %1723 ], [ 0, %1718 ]
  %1733 = phi double [ %1730, %1723 ], [ undef, %1718 ]
  %1734 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %300, align 8, !noalias !40
  %1735 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1734, i64 4
  %1736 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1735, align 8, !noalias !40
  %1737 = call zeroext i1 %1736(%"class.blink::DoubleConstraint"* nonnull %9) #14, !noalias !40
  br i1 %1737, label %1743, label %1738

1738:                                             ; preds = %1731
  %1739 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %300, align 8, !noalias !40
  %1740 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1739, i64 5
  %1741 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1740, align 8, !noalias !40
  %1742 = call zeroext i1 %1741(%"class.blink::DoubleConstraint"* nonnull %9) #14, !noalias !40
  br i1 %1742, label %1743, label %1751

1743:                                             ; preds = %1738, %1731
  %1744 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %300, align 8, !noalias !40
  %1745 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1744, i64 5
  %1746 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %1745, align 8, !noalias !40
  %1747 = call zeroext i1 %1746(%"class.blink::DoubleConstraint"* nonnull %9) #14, !noalias !40
  %1748 = load double, double* %301, align 8, !noalias !25
  %1749 = load double, double* %302, align 8, !noalias !25
  %1750 = select i1 %1747, double %1748, double %1749
  br label %1751

1751:                                             ; preds = %1743, %1738
  %1752 = phi double [ %1750, %1743 ], [ undef, %1738 ]
  %1753 = phi i8 [ 1, %1743 ], [ 0, %1738 ]
  %1754 = bitcast double %1733 to i64
  %1755 = bitcast double %1752 to i64
  %1756 = load i8, i8* %233, align 8, !noalias !43
  %1757 = load i64, i64* %304, align 8, !noalias !43
  %1758 = icmp eq i8 %1732, 0
  br i1 %1758, label %1765, label %1759

1759:                                             ; preds = %1751
  %1760 = icmp eq i8 %1756, 0
  br i1 %1760, label %1765, label %1761

1761:                                             ; preds = %1759
  %1762 = bitcast i64 %1757 to double
  %1763 = fcmp ogt double %1733, %1762
  %1764 = select i1 %1763, i64 %1754, i64 %1757
  br label %1765

1765:                                             ; preds = %1759, %1761, %1751
  %1766 = phi i64 [ %1757, %1751 ], [ %1764, %1761 ], [ %1754, %1759 ]
  %1767 = phi i8 [ %1756, %1751 ], [ 1, %1761 ], [ 1, %1759 ]
  %1768 = load i8, i8* %236, align 8, !noalias !43
  %1769 = load i64, i64* %306, align 8, !noalias !43
  %1770 = icmp eq i8 %1753, 0
  br i1 %1770, label %1777, label %1771

1771:                                             ; preds = %1765
  %1772 = icmp eq i8 %1768, 0
  br i1 %1772, label %1777, label %1773

1773:                                             ; preds = %1771
  %1774 = bitcast i64 %1769 to double
  %1775 = fcmp olt double %1752, %1774
  %1776 = select i1 %1775, i64 %1755, i64 %1769
  br label %1777

1777:                                             ; preds = %1771, %1773, %1765
  %1778 = phi i64 [ %1769, %1765 ], [ %1776, %1773 ], [ %1755, %1771 ]
  %1779 = phi i8 [ %1768, %1765 ], [ 1, %1773 ], [ 1, %1771 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %307) #14, !noalias !25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %260, i8* align 1 getelementptr inbounds ({ { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }* @__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE.zoom_intersection, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %261, i8* align 1 getelementptr inbounds ({ { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }* @__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE.zoom_intersection, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %262, i8* align 1 getelementptr inbounds ({ { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }* @__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE.zoom_intersection, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %263, i8* align 1 getelementptr inbounds ({ { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }* @__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE.zoom_intersection, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %264, i8* align 1 getelementptr inbounds ({ { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }* @__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE.zoom_intersection, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %265, i8* align 1 getelementptr inbounds ({ { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }, { { { { { i8, [7 x i8], %union.anon.22 } } } }, { { { { i8, [7 x i8], %union.anon.22 } } } } }* @__const._ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE.zoom_intersection, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %266)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %267)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %268)
  %1780 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_128DeviceSatisfiesConstraintSetERKNS_28VideoInputDeviceCapabilitiesERKNS_31MediaTrackConstraintSetPlatformEPPKc(%"struct.blink::VideoInputDeviceCapabilities"* dereferenceable(48) %421, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %1578, i8** null)
  br i1 %1780, label %1781, label %1825

1781:                                             ; preds = %1777
  %1782 = icmp eq i8 %1645, 0
  %1783 = icmp eq i8 %1633, 0
  %1784 = or i1 %1783, %1782
  br i1 %1784, label %1789, label %1785

1785:                                             ; preds = %1781
  %1786 = bitcast i64 %1644 to double
  %1787 = bitcast i64 %1632 to double
  %1788 = fcmp olt double %1786, %1787
  br i1 %1788, label %1825, label %1789

1789:                                             ; preds = %1785, %1781
  %1790 = icmp eq i8 %1712, 0
  %1791 = icmp eq i8 %1700, 0
  %1792 = or i1 %1791, %1790
  br i1 %1792, label %1797, label %1793

1793:                                             ; preds = %1789
  %1794 = bitcast i64 %1711 to double
  %1795 = bitcast i64 %1699 to double
  %1796 = fcmp olt double %1794, %1795
  br i1 %1796, label %1825, label %1797

1797:                                             ; preds = %1793, %1789
  %1798 = icmp eq i8 %1779, 0
  %1799 = icmp eq i8 %1767, 0
  %1800 = or i1 %1799, %1798
  br i1 %1800, label %1805, label %1801

1801:                                             ; preds = %1797
  %1802 = bitcast i64 %1778 to double
  %1803 = bitcast i64 %1766 to double
  %1804 = fcmp olt double %1802, %1803
  br i1 %1804, label %1825, label %1805

1805:                                             ; preds = %1797, %1801
  %1806 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 0, i32 31
  %1807 = bitcast %"class.blink::BooleanConstraint"* %1806 to i1 (%"class.blink::BooleanConstraint"*)***
  %1808 = load i1 (%"class.blink::BooleanConstraint"*)**, i1 (%"class.blink::BooleanConstraint"*)*** %1807, align 8
  %1809 = getelementptr inbounds i1 (%"class.blink::BooleanConstraint"*)*, i1 (%"class.blink::BooleanConstraint"*)** %1808, i64 5
  %1810 = load i1 (%"class.blink::BooleanConstraint"*)*, i1 (%"class.blink::BooleanConstraint"*)** %1809, align 8
  %1811 = call zeroext i1 %1810(%"class.blink::BooleanConstraint"* %1806) #14
  br i1 %1811, label %1812, label %1822

1812:                                             ; preds = %1805
  %1813 = load i8, i8* %654, align 1, !range !19
  %1814 = icmp eq i8 %1813, 0
  br i1 %1814, label %1825, label %1815

1815:                                             ; preds = %1812
  %1816 = load i8, i8* %655, align 1, !range !19
  %1817 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 0, i32 31, i32 1
  %1818 = load i8, i8* %1817, align 1
  %1819 = lshr i8 %1818, 1
  %1820 = and i8 %1819, 1
  %1821 = icmp eq i8 %1816, %1820
  br i1 %1821, label %1822, label %1825

1822:                                             ; preds = %1815, %1805
  %1823 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115CandidateFormat18ApplyConstraintSetERKNS_31MediaTrackConstraintSetPlatformEPPKc(%"class.blink::(anonymous namespace)::CandidateFormat"* nonnull %34, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %1578, i8** null)
  br i1 %1823, label %1824, label %1825

1824:                                             ; preds = %1822
  store i8 %1633, i8* %221, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %222, i8* nonnull align 1 %260, i64 7, i1 false)
  store i64 %1632, i64* %278, align 8
  store i8 %1645, i8* %224, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %225, i8* nonnull align 1 %261, i64 7, i1 false)
  store i64 %1644, i64* %280, align 8
  store i8 %1700, i8* %227, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %228, i8* nonnull align 1 %262, i64 7, i1 false)
  store i64 %1699, i64* %291, align 8
  store i8 %1712, i8* %230, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %231, i8* nonnull align 1 %263, i64 7, i1 false)
  store i64 %1711, i64* %293, align 8
  store i8 %1767, i8* %233, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %234, i8* nonnull align 1 %264, i64 7, i1 false)
  store i64 %1766, i64* %304, align 8
  store i8 %1779, i8* %236, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* nonnull align 1 %265, i64 7, i1 false)
  store i64 %1778, i64* %306, align 8
  br label %1825

1825:                                             ; preds = %1785, %1793, %1815, %1812, %1777, %1801, %1822, %1824
  %1826 = phi i64 [ 0, %1824 ], [ 9218868437227405312, %1822 ], [ 9218868437227405312, %1801 ], [ 9218868437227405312, %1777 ], [ 9218868437227405312, %1812 ], [ 9218868437227405312, %1815 ], [ 9218868437227405312, %1793 ], [ 9218868437227405312, %1785 ]
  %1827 = load double*, double** %258, align 8
  %1828 = load double*, double** %259, align 8
  %1829 = icmp ult double* %1827, %1828
  %1830 = ptrtoint double* %1828 to i64
  br i1 %1829, label %1831, label %1835

1831:                                             ; preds = %1825
  %1832 = bitcast double* %1827 to i64*
  store i64 %1826, i64* %1832, align 8
  %1833 = getelementptr inbounds double, double* %1827, i64 1
  %1834 = ptrtoint double* %1833 to i64
  store i64 %1834, i64* %308, align 8
  br label %1879

1835:                                             ; preds = %1825
  %1836 = ptrtoint double* %1827 to i64
  %1837 = load i64, i64* %309, align 8
  %1838 = sub i64 %1836, %1837
  %1839 = ashr exact i64 %1838, 3
  %1840 = add nsw i64 %1839, 1
  %1841 = icmp ugt i64 %1840, 2305843009213693951
  br i1 %1841, label %1842, label %1844

1842:                                             ; preds = %1835
  %1843 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1843) #17
  unreachable

1844:                                             ; preds = %1835
  %1845 = sub i64 %1830, %1837
  %1846 = ashr exact i64 %1845, 3
  %1847 = icmp ult i64 %1846, 1152921504606846975
  br i1 %1847, label %1848, label %1856

1848:                                             ; preds = %1844
  %1849 = ashr exact i64 %1845, 2
  %1850 = icmp ult i64 %1849, %1840
  %1851 = select i1 %1850, i64 %1840, i64 %1849
  %1852 = icmp eq i64 %1851, 0
  br i1 %1852, label %1861, label %1853

1853:                                             ; preds = %1848
  %1854 = icmp ugt i64 %1851, 2305843009213693951
  br i1 %1854, label %1855, label %1856

1855:                                             ; preds = %1853
  call void @abort() #17
  unreachable

1856:                                             ; preds = %1853, %1844
  %1857 = phi i64 [ %1851, %1853 ], [ 2305843009213693951, %1844 ]
  %1858 = shl i64 %1857, 3
  %1859 = call i8* @_Znwm(i64 %1858) #15
  %1860 = bitcast i8* %1859 to double*
  br label %1861

1861:                                             ; preds = %1856, %1848
  %1862 = phi i64 [ %1857, %1856 ], [ 0, %1848 ]
  %1863 = phi i8* [ %1859, %1856 ], [ null, %1848 ]
  %1864 = phi double* [ %1860, %1856 ], [ null, %1848 ]
  %1865 = getelementptr inbounds double, double* %1864, i64 %1839
  %1866 = getelementptr inbounds double, double* %1864, i64 %1862
  %1867 = ptrtoint double* %1866 to i64
  %1868 = bitcast double* %1865 to i64*
  store i64 %1826, i64* %1868, align 8
  %1869 = getelementptr inbounds double, double* %1865, i64 1
  %1870 = ptrtoint double* %1869 to i64
  %1871 = ptrtoint double* %1864 to i64
  %1872 = icmp sgt i64 %1838, 0
  br i1 %1872, label %1873, label %1875

1873:                                             ; preds = %1861
  %1874 = inttoptr i64 %1837 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1863, i8* align 8 %1874, i64 %1838, i1 false) #14
  br label %1875

1875:                                             ; preds = %1873, %1861
  store i64 %1871, i64* %309, align 8
  store i64 %1870, i64* %308, align 8
  store i64 %1867, i64* %310, align 8
  %1876 = icmp eq i64 %1837, 0
  br i1 %1876, label %1879, label %1877

1877:                                             ; preds = %1875
  %1878 = inttoptr i64 %1837 to i8*
  call void @_ZdlPv(i8* %1878) #15
  br label %1879

1879:                                             ; preds = %1831, %1875, %1877
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %260)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %261)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %262)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %263)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %264)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %265)
  %1880 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1578, i64 1
  %1881 = icmp eq %"struct.blink::MediaTrackConstraintSetPlatform"* %1880, %651
  br i1 %1881, label %656, label %1577

1882:                                             ; preds = %1567, %1563
  call void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* nonnull %30, double* %1562, double* %1557) #14
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %377) #14
  store i32 -1431655766, i32* %378, align 4
  store i32 -1431655766, i32* %379, align 4
  store float 0xFFFFFFFFE0000000, float* %380, align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %414, i8 -86, i64 20, i1 false)
  call void @_ZN5media18VideoCaptureParamsC1Ev(%"struct.media::VideoCaptureParams"* nonnull %43) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %377, i8* nonnull align 8 %239, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %382) #14
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %45, %"class.WTF::String"* %597, i32 0) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %383, i8* nonnull align 4 %377, i64 32, i1 false)
  %1883 = bitcast %"class.absl::optional"* %620 to i16*
  %1884 = load i16, i16* %1883, align 1
  %1885 = load i8, i8* %241, align 8
  %1886 = load double, double* %370, align 8
  %1887 = load i8, i8* %242, align 8
  %1888 = load double, double* %372, align 8
  %1889 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  %1890 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1889, i64 0, i32 15, i32 6
  %1891 = load i8, i8* %1890, align 8
  %1892 = and i8 %1891, 8
  %1893 = icmp eq i8 %1892, 0
  br i1 %1893, label %1894, label %1902

1894:                                             ; preds = %1882
  %1895 = load i8, i8* %221, align 8, !range !19
  %1896 = icmp eq i8 %1895, 0
  %1897 = select i1 %1896, i8* %386, i8* %221
  %1898 = load i8, i8* %1897, align 8
  %1899 = getelementptr inbounds i8, i8* %1897, i64 8
  %1900 = bitcast i8* %1899 to double*
  %1901 = load double, double* %1900, align 8
  br label %1917

1902:                                             ; preds = %1882
  %1903 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1889, i64 0, i32 15, i32 5
  %1904 = load double, double* %1903, align 8
  %1905 = load i8, i8* %221, align 8, !range !19
  %1906 = icmp eq i8 %1905, 0
  br i1 %1906, label %1910, label %1907

1907:                                             ; preds = %1902
  %1908 = load double, double* %385, align 8
  %1909 = fcmp olt double %1904, %1908
  br i1 %1909, label %1917, label %1910

1910:                                             ; preds = %1907, %1902
  %1911 = load i8, i8* %386, align 8, !range !19
  %1912 = icmp eq i8 %1911, 0
  br i1 %1912, label %1917, label %1913

1913:                                             ; preds = %1910
  %1914 = load double, double* %388, align 8
  %1915 = fcmp ogt double %1904, %1914
  br i1 %1915, label %1916, label %1917

1916:                                             ; preds = %1913
  br label %1917

1917:                                             ; preds = %1894, %1907, %1910, %1913, %1916
  %1918 = phi double [ %1901, %1894 ], [ %1914, %1916 ], [ %1904, %1913 ], [ %1904, %1910 ], [ %1908, %1907 ]
  %1919 = phi i8 [ %1898, %1894 ], [ 1, %1916 ], [ 1, %1913 ], [ 1, %1910 ], [ 1, %1907 ]
  store i8 %1919, i8* %389, align 8
  store double %1918, double* %390, align 8
  %1920 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  %1921 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1920, i64 0, i32 16, i32 6
  %1922 = load i8, i8* %1921, align 8
  %1923 = and i8 %1922, 8
  %1924 = icmp eq i8 %1923, 0
  br i1 %1924, label %1925, label %1933

1925:                                             ; preds = %1917
  %1926 = load i8, i8* %391, align 8, !range !19
  %1927 = icmp eq i8 %1926, 0
  %1928 = select i1 %1927, i8* %394, i8* %391
  %1929 = load i8, i8* %1928, align 8
  %1930 = getelementptr inbounds i8, i8* %1928, i64 8
  %1931 = bitcast i8* %1930 to double*
  %1932 = load double, double* %1931, align 8
  br label %1948

1933:                                             ; preds = %1917
  %1934 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1920, i64 0, i32 16, i32 5
  %1935 = load double, double* %1934, align 8
  %1936 = load i8, i8* %391, align 8, !range !19
  %1937 = icmp eq i8 %1936, 0
  br i1 %1937, label %1941, label %1938

1938:                                             ; preds = %1933
  %1939 = load double, double* %393, align 8
  %1940 = fcmp olt double %1935, %1939
  br i1 %1940, label %1948, label %1941

1941:                                             ; preds = %1938, %1933
  %1942 = load i8, i8* %394, align 8, !range !19
  %1943 = icmp eq i8 %1942, 0
  br i1 %1943, label %1948, label %1944

1944:                                             ; preds = %1941
  %1945 = load double, double* %396, align 8
  %1946 = fcmp ogt double %1935, %1945
  br i1 %1946, label %1947, label %1948

1947:                                             ; preds = %1944
  br label %1948

1948:                                             ; preds = %1925, %1938, %1941, %1944, %1947
  %1949 = phi double [ %1932, %1925 ], [ %1945, %1947 ], [ %1935, %1944 ], [ %1935, %1941 ], [ %1939, %1938 ]
  %1950 = phi i8 [ %1929, %1925 ], [ 1, %1947 ], [ 1, %1944 ], [ 1, %1941 ], [ 1, %1938 ]
  store i8 %1950, i8* %397, align 8
  store double %1949, double* %398, align 8
  %1951 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #14
  %1952 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1951, i64 0, i32 17, i32 6
  %1953 = load i8, i8* %1952, align 8
  %1954 = and i8 %1953, 8
  %1955 = icmp eq i8 %1954, 0
  br i1 %1955, label %1956, label %1964

1956:                                             ; preds = %1948
  %1957 = load i8, i8* %399, align 8, !range !19
  %1958 = icmp eq i8 %1957, 0
  %1959 = select i1 %1958, i8* %402, i8* %399
  %1960 = load i8, i8* %1959, align 8
  %1961 = getelementptr inbounds i8, i8* %1959, i64 8
  %1962 = bitcast i8* %1961 to double*
  %1963 = load double, double* %1962, align 8
  br label %1979

1964:                                             ; preds = %1948
  %1965 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1951, i64 0, i32 17, i32 5
  %1966 = load double, double* %1965, align 8
  %1967 = load i8, i8* %399, align 8, !range !19
  %1968 = icmp eq i8 %1967, 0
  br i1 %1968, label %1972, label %1969

1969:                                             ; preds = %1964
  %1970 = load double, double* %401, align 8
  %1971 = fcmp olt double %1966, %1970
  br i1 %1971, label %1979, label %1972

1972:                                             ; preds = %1969, %1964
  %1973 = load i8, i8* %402, align 8, !range !19
  %1974 = icmp eq i8 %1973, 0
  br i1 %1974, label %1979, label %1975

1975:                                             ; preds = %1972
  %1976 = load double, double* %404, align 8
  %1977 = fcmp ogt double %1966, %1976
  br i1 %1977, label %1978, label %1979

1978:                                             ; preds = %1975
  br label %1979

1979:                                             ; preds = %1956, %1969, %1972, %1975, %1978
  %1980 = phi double [ %1963, %1956 ], [ %1976, %1978 ], [ %1966, %1975 ], [ %1966, %1972 ], [ %1970, %1969 ]
  %1981 = phi i8 [ %1960, %1956 ], [ 1, %1978 ], [ 1, %1975 ], [ 1, %1972 ], [ 1, %1969 ]
  store i8 %1981, i8* %405, align 8
  store double %1980, double* %406, align 8
  call void @_ZN5blink20VideoCaptureSettingsC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN5media18VideoCaptureParamsEN4absl8optionalIbEERKNS_25VideoTrackAdapterSettingsENSB_IdEESG_SG_SG_SG_(%"class.blink::VideoCaptureSettings"* nonnull %44, %"class.std::__1::basic_string"* nonnull %45, %"struct.media::VideoCaptureParams"* nonnull byval(%"struct.media::VideoCaptureParams") align 8 %46, i16 %1884, %"class.blink::VideoTrackAdapterSettings"* nonnull dereferenceable(40) %42, i8 %1885, double %1886, i8 %1887, double %1888, %"class.absl::optional.18"* nonnull byval(%"class.absl::optional.18") align 8 %47, %"class.absl::optional.18"* nonnull byval(%"class.absl::optional.18") align 8 %48, %"class.absl::optional.18"* nonnull byval(%"class.absl::optional.18") align 8 %49) #14
  %1982 = call dereferenceable(192) %"class.blink::VideoCaptureSettings"* @_ZN5blink20VideoCaptureSettingsaSEOS0_(%"class.blink::VideoCaptureSettings"* nonnull %31, %"class.blink::VideoCaptureSettings"* nonnull dereferenceable(192) %44) #14
  call void @_ZN5blink20VideoCaptureSettingsD1Ev(%"class.blink::VideoCaptureSettings"* nonnull %44) #14
  %1983 = load i8, i8* %408, align 1
  %1984 = icmp slt i8 %1983, 0
  br i1 %1984, label %1985, label %1987

1985:                                             ; preds = %1979
  %1986 = load i8*, i8** %409, align 8
  call void @_ZdlPv(i8* %1986) #15
  br label %1987

1987:                                             ; preds = %1979, %1985
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %382) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %377) #14
  br label %1988

1988:                                             ; preds = %1573, %1571, %1556, %1987
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %311) #14
  %1989 = load double*, double** %257, align 8
  %1990 = icmp eq double* %1989, null
  br i1 %1990, label %1994, label %1991

1991:                                             ; preds = %1988
  %1992 = ptrtoint double* %1989 to i64
  store i64 %1992, i64* %308, align 8
  %1993 = bitcast double* %1989 to i8*
  call void @_ZdlPv(i8* %1993) #15
  br label %1994

1994:                                             ; preds = %1988, %1991
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %256) #14
  br label %1995

1995:                                             ; preds = %640, %1994
  %1996 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %620, i64 1
  %1997 = icmp eq %"class.absl::optional"* %1996, %617
  br i1 %1997, label %1998, label %619

1998:                                             ; preds = %1995, %613
  %1999 = load i8*, i8** %252, align 8
  %2000 = icmp eq i8* %1999, null
  br i1 %2000, label %2014, label %2001, !prof !2

2001:                                             ; preds = %1998
  %2002 = load i32, i32* %253, align 4
  %2003 = icmp eq i32 %2002, 0
  br i1 %2003, label %2005, label %2004, !prof !3

2004:                                             ; preds = %2001
  store i32 0, i32* %253, align 4
  br label %2005

2005:                                             ; preds = %2004, %2001
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1999) #14
  store i8* null, i8** %252, align 8
  br label %2014

2006:                                             ; preds = %604
  %2007 = load i8*, i8** %252, align 8
  %2008 = icmp eq i8* %2007, null
  br i1 %2008, label %2014, label %2009, !prof !2

2009:                                             ; preds = %2006
  %2010 = load i32, i32* %253, align 4
  %2011 = icmp eq i32 %2010, 0
  br i1 %2011, label %2013, label %2012, !prof !3

2012:                                             ; preds = %2009
  store i32 0, i32* %253, align 4
  br label %2013

2013:                                             ; preds = %2012, %2009
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %2007) #14
  store i8* null, i8** %252, align 8
  br label %2014

2014:                                             ; preds = %2013, %2006, %2005, %1998
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %239) #14
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %221) #14
  %2015 = getelementptr inbounds %"struct.media::VideoCaptureFormat", %"struct.media::VideoCaptureFormat"* %605, i64 1
  %2016 = icmp eq %"struct.media::VideoCaptureFormat"* %2015, %594
  br i1 %2016, label %2017, label %604

2017:                                             ; preds = %2014, %588, %586, %420
  %2018 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %421, i64 1
  %2019 = icmp eq %"struct.blink::VideoInputDeviceCapabilities"* %2018, %186
  br i1 %2019, label %415, label %420

2020:                                             ; preds = %417
  %2021 = load i8*, i8** %32, align 8
  call void @_ZN5blink20VideoCaptureSettingsC1EPKc(%"class.blink::VideoCaptureSettings"* %0, i8* %2021) #14
  br label %2023

2022:                                             ; preds = %417
  call void @_ZN5blink20VideoCaptureSettingsC1EOS0_(%"class.blink::VideoCaptureSettings"* %0, %"class.blink::VideoCaptureSettings"* nonnull dereferenceable(192) %31) #14
  br label %2023

2023:                                             ; preds = %2022, %2020
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #14
  call void @_ZN5blink20VideoCaptureSettingsD1Ev(%"class.blink::VideoCaptureSettings"* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %174) #14
  %2024 = load double*, double** %51, align 8
  %2025 = icmp eq double* %2024, null
  br i1 %2025, label %2029, label %2026

2026:                                             ; preds = %2023
  %2027 = ptrtoint double* %2024 to i64
  store i64 %2027, i64* %79, align 8
  %2028 = bitcast double* %2024 to i8*
  call void @_ZdlPv(i8* %2028) #15
  br label %2029

2029:                                             ; preds = %2023, %2026
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #14
  ret void
}

declare dereferenceable(16) %"class.WTF::Vector.28"* @_ZNK5blink16MediaConstraints8AdvancedEv(%"class.blink::MediaConstraints"*) local_unnamed_addr #2

declare void @_ZN5blink20VideoCaptureSettingsC1Ev(%"class.blink::VideoCaptureSettings"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_128DeviceSatisfiesConstraintSetERKNS_28VideoInputDeviceCapabilitiesERKNS_31MediaTrackConstraintSetPlatformEPPKc(%"struct.blink::VideoInputDeviceCapabilities"* dereferenceable(48), %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856), i8**) unnamed_addr #0 {
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 13
  %8 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %9) #14
  %10 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %5) #14
  %11 = call zeroext i1 @_ZNK5blink16StringConstraint7MatchesEN3WTF6StringE(%"class.blink::StringConstraint"* %7, %"class.WTF::StringImpl"* %10) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = icmp eq i8** %2, null
  br i1 %13, label %100, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 13, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8** %2 to i64*
  store i64 %17, i64* %18, align 8
  br label %100

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 18
  %21 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 1
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %22) #14
  %23 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %6) #14
  %24 = call zeroext i1 @_ZNK5blink16StringConstraint7MatchesEN3WTF6StringE(%"class.blink::StringConstraint"* %20, %"class.WTF::StringImpl"* %23) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br i1 %24, label %32, label %25

25:                                               ; preds = %19
  %26 = icmp eq i8** %2, null
  br i1 %26, label %100, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 18, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8** %2 to i64*
  store i64 %30, i64* %31, align 8
  br label %100

32:                                               ; preds = %19
  %33 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 4
  %36 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  %37 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %37, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_111ToWebStringENS_5mojom10FacingModeE(%"class.blink::WebString"* nonnull sret %4, i32 %34) #14
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %45

40:                                               ; preds = %32
  %41 = call dereferenceable(16) %"class.WTF::Vector.31"* @_ZNK5blink16StringConstraint5ExactEv(%"class.blink::StringConstraint"* %35) #14
  %42 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %41, i64 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br i1 %44, label %55, label %48

45:                                               ; preds = %32
  %46 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %4) #14
  %47 = call zeroext i1 @_ZNK5blink16StringConstraint7MatchesEN3WTF6StringE(%"class.blink::StringConstraint"* %35, %"class.WTF::StringImpl"* %46) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br i1 %47, label %55, label %48

48:                                               ; preds = %40, %45
  %49 = icmp eq i8** %2, null
  br i1 %49, label %100, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 4, i32 0, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast i8** %2 to i64*
  store i64 %53, i64* %54, align 8
  br label %100

55:                                               ; preds = %40, %45
  %56 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 15
  %57 = bitcast %"class.blink::DoubleConstraint"* %56 to %"class.blink::BaseConstraint"*
  %58 = call zeroext i1 @_ZNK5blink14BaseConstraint12HasMandatoryEv(%"class.blink::BaseConstraint"* %57) #14
  br i1 %58, label %59, label %70

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 2, i32 0
  %61 = load i8, i8* %60, align 8, !range !19
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %70

63:                                               ; preds = %59
  %64 = icmp eq i8** %2, null
  br i1 %64, label %100, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 15, i32 0, i32 1
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast i8** %2 to i64*
  store i64 %68, i64* %69, align 8
  br label %100

70:                                               ; preds = %59, %55
  %71 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 16
  %72 = bitcast %"class.blink::DoubleConstraint"* %71 to %"class.blink::BaseConstraint"*
  %73 = call zeroext i1 @_ZNK5blink14BaseConstraint12HasMandatoryEv(%"class.blink::BaseConstraint"* %72) #14
  br i1 %73, label %74, label %85

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 2, i32 1
  %76 = load i8, i8* %75, align 1, !range !19
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %74
  %79 = icmp eq i8** %2, null
  br i1 %79, label %100, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 16, i32 0, i32 1
  %82 = bitcast i8** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast i8** %2 to i64*
  store i64 %83, i64* %84, align 8
  br label %100

85:                                               ; preds = %74, %70
  %86 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 17
  %87 = bitcast %"class.blink::DoubleConstraint"* %86 to %"class.blink::BaseConstraint"*
  %88 = call zeroext i1 @_ZNK5blink14BaseConstraint12HasMandatoryEv(%"class.blink::BaseConstraint"* %87) #14
  br i1 %88, label %89, label %100

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %0, i64 0, i32 2, i32 2
  %91 = load i8, i8* %90, align 2, !range !19
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %100

93:                                               ; preds = %89
  %94 = icmp eq i8** %2, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 17, i32 0, i32 1
  %97 = bitcast i8** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i8** %2 to i64*
  store i64 %98, i64* %99, align 8
  br label %100

100:                                              ; preds = %95, %93, %80, %78, %65, %63, %50, %48, %27, %25, %14, %12, %85, %89
  %101 = phi i1 [ true, %89 ], [ true, %85 ], [ false, %12 ], [ false, %14 ], [ false, %25 ], [ false, %27 ], [ false, %48 ], [ false, %50 ], [ false, %63 ], [ false, %65 ], [ false, %78 ], [ false, %80 ], [ false, %93 ], [ false, %95 ]
  ret i1 %101
}

declare dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115CandidateFormat18ApplyConstraintSetERKNS_31MediaTrackConstraintSetPlatformEPPKc(%"class.blink::(anonymous namespace)::CandidateFormat"*, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856), i8**) unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.blink::media_constraints::DiscreteSet", align 8
  %12 = alloca %"class.blink::media_constraints::DiscreteSet", align 8
  %13 = alloca %"class.blink::media_constraints::ResolutionSet", align 8
  %14 = alloca %"class.blink::media_constraints::ResolutionSet", align 8
  %15 = alloca %"class.blink::media_constraints::ResolutionSet", align 8
  %16 = alloca %"class.blink::media_constraints::ResolutionSet", align 8
  %17 = alloca %"class.blink::WebString", align 8
  %18 = alloca [7 x i8], align 1
  %19 = alloca [7 x i8], align 1
  %20 = alloca %"class.blink::media_constraints::NumericRangeSet", align 8
  %21 = alloca %"class.blink::DoubleConstraint", align 8
  %22 = alloca %"class.blink::LongConstraint", align 8
  %23 = alloca %"class.blink::LongConstraint", align 8
  %24 = alloca [7 x i8], align 1
  %25 = alloca [7 x i8], align 1
  %26 = alloca %"class.blink::media_constraints::NumericRangeSet", align 8
  %27 = alloca %"class.blink::DoubleConstraint", align 8
  %28 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 6
  %30 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #14
  %31 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 5
  call void @_ZN5blink17media_constraints24RescaleSetFromConstraintERKNS_16StringConstraintE(%"class.blink::media_constraints::DiscreteSet"* nonnull sret %12, %"class.blink::StringConstraint"* dereferenceable(56) %31) #14
  call void @_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_(%"class.blink::media_constraints::DiscreteSet"* nonnull sret %11, %"class.blink::media_constraints::DiscreteSet"* %29, %"class.blink::media_constraints::DiscreteSet"* nonnull dereferenceable(24) %12)
  %32 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %41, label %35, !prof !2

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %12, i64 0, i32 1, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39, !prof !3

39:                                               ; preds = %35
  store i32 0, i32* %36, align 4
  br label %40

40:                                               ; preds = %39, %35
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #14
  store i8* null, i8** %32, align 8
  br label %41

41:                                               ; preds = %3, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #14
  %42 = load i8, i8* %28, align 8, !range !19
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %55

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %44
  %49 = icmp eq i8** %2, null
  br i1 %49, label %514, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 5, i32 0, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast i8** %2 to i64*
  store i64 %53, i64* %54, align 8
  br label %514

55:                                               ; preds = %41, %44
  %56 = bitcast %"class.blink::media_constraints::ResolutionSet"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #14
  %57 = getelementptr inbounds %"class.blink::media_constraints::ResolutionSet", %"class.blink::media_constraints::ResolutionSet"* %13, i64 0, i32 4
  %58 = bitcast %"class.blink::media_constraints::ResolutionSet"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false)
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 1
  %60 = bitcast %"class.blink::media_constraints::ResolutionSet"* %14 to i8*
  %61 = bitcast double* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #14
  call void @_ZN5blink17media_constraints13ResolutionSet17FromConstraintSetERKNS_31MediaTrackConstraintSetPlatformE(%"class.blink::media_constraints::ResolutionSet"* nonnull sret %14, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %1) #14
  call void @_ZNK5blink17media_constraints13ResolutionSet12IntersectionERKS1_(%"class.blink::media_constraints::ResolutionSet"* nonnull sret %13, %"class.blink::media_constraints::ResolutionSet"* %59, %"class.blink::media_constraints::ResolutionSet"* nonnull dereferenceable(32) %14) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #14
  %62 = load i8, i8* %28, align 8, !range !19
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %90

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %79, label %72

72:                                               ; preds = %64, %76
  %73 = phi i8* [ %77, %76 ], [ %66, %64 ]
  %74 = load i8, i8* %73, align 1, !range !19
  %75 = icmp eq i8 %74, 1
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds i8, i8* %73, i64 1
  %78 = icmp eq i8* %77, %70
  br i1 %78, label %82, label %72

79:                                               ; preds = %72, %64
  %80 = phi i8* [ %66, %64 ], [ %73, %72 ]
  %81 = icmp eq i8* %80, %70
  br i1 %81, label %82, label %90

82:                                               ; preds = %76, %79
  %83 = bitcast %"class.blink::media_constraints::ResolutionSet"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #14
  %84 = bitcast %"class.blink::media_constraints::ResolutionSet"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #14
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  call void @_ZN5blink17media_constraints13ResolutionSet19FromExactResolutionEii(%"class.blink::media_constraints::ResolutionSet"* nonnull sret %16, i32 %86, i32 %88) #14
  call void @_ZNK5blink17media_constraints13ResolutionSet12IntersectionERKS1_(%"class.blink::media_constraints::ResolutionSet"* nonnull sret %15, %"class.blink::media_constraints::ResolutionSet"* nonnull %13, %"class.blink::media_constraints::ResolutionSet"* nonnull dereferenceable(32) %16) #14
  %89 = call dereferenceable(32) %"class.blink::media_constraints::ResolutionSet"* @_ZN5blink17media_constraints13ResolutionSetaSERKS1_(%"class.blink::media_constraints::ResolutionSet"* nonnull %13, %"class.blink::media_constraints::ResolutionSet"* nonnull dereferenceable(32) %15) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #14
  br label %90

90:                                               ; preds = %79, %55, %82
  %91 = call zeroext i1 @_ZNK5blink17media_constraints13ResolutionSet12IsWidthEmptyEv(%"class.blink::media_constraints::ResolutionSet"* nonnull %13) #14
  br i1 %91, label %92, label %99

92:                                               ; preds = %90
  %93 = icmp eq i8** %2, null
  br i1 %93, label %512, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast i8** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast i8** %2 to i64*
  store i64 %97, i64* %98, align 8
  br label %512

99:                                               ; preds = %90
  %100 = call zeroext i1 @_ZNK5blink17media_constraints13ResolutionSet13IsHeightEmptyEv(%"class.blink::media_constraints::ResolutionSet"* nonnull %13) #14
  br i1 %100, label %101, label %108

101:                                              ; preds = %99
  %102 = icmp eq i8** %2, null
  br i1 %102, label %512, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 1, i32 0, i32 1
  %105 = bitcast i8** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8** %2 to i64*
  store i64 %106, i64* %107, align 8
  br label %512

108:                                              ; preds = %99
  %109 = call zeroext i1 @_ZNK5blink17media_constraints13ResolutionSet18IsAspectRatioEmptyEv(%"class.blink::media_constraints::ResolutionSet"* nonnull %13) #14
  br i1 %109, label %110, label %117

110:                                              ; preds = %108
  %111 = icmp eq i8** %2, null
  br i1 %111, label %512, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 2, i32 0, i32 1
  %114 = bitcast i8** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast i8** %2 to i64*
  store i64 %115, i64* %116, align 8
  br label %512

117:                                              ; preds = %108
  %118 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 3
  %119 = bitcast %"class.blink::DoubleConstraint"* %118 to i1 (%"class.blink::DoubleConstraint"*)***
  %120 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %119, align 8
  %121 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %120, i64 3
  %122 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %121, align 8
  %123 = call zeroext i1 %122(%"class.blink::DoubleConstraint"* %118) #14
  br i1 %123, label %129, label %124

124:                                              ; preds = %117
  %125 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %119, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %125, i64 5
  %127 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %126, align 8
  %128 = call zeroext i1 %127(%"class.blink::DoubleConstraint"* %118) #14
  br i1 %128, label %129, label %139

129:                                              ; preds = %124, %117
  %130 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %119, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %130, i64 5
  %132 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %131, align 8
  %133 = call zeroext i1 %132(%"class.blink::DoubleConstraint"* %118) #14
  %134 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 3, i32 4
  %135 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 3, i32 2
  %136 = load double, double* %134, align 8
  %137 = load double, double* %135, align 8
  %138 = select i1 %133, double %136, double %137
  br label %139

139:                                              ; preds = %129, %124
  %140 = phi double [ %138, %129 ], [ -1.000000e+00, %124 ]
  %141 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %119, align 8
  %142 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %141, i64 4
  %143 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %142, align 8
  %144 = call zeroext i1 %143(%"class.blink::DoubleConstraint"* %118) #14
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %119, align 8
  %147 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %146, i64 5
  %148 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %147, align 8
  %149 = call zeroext i1 %148(%"class.blink::DoubleConstraint"* %118) #14
  br i1 %149, label %150, label %160

150:                                              ; preds = %145, %139
  %151 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %119, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %151, i64 5
  %153 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %152, align 8
  %154 = call zeroext i1 %153(%"class.blink::DoubleConstraint"* %118) #14
  %155 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 3, i32 4
  %156 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 3, i32 3
  %157 = load double, double* %155, align 8
  %158 = load double, double* %156, align 8
  %159 = select i1 %154, double %157, double %158
  br label %160

160:                                              ; preds = %150, %145
  %161 = phi double [ %159, %150 ], [ 1.000000e+03, %145 ]
  %162 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 0, i32 1
  %163 = load float, float* %162, align 8
  %164 = fpext float %163 to double
  %165 = fcmp ogt double %140, %164
  br i1 %165, label %178, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %168 = load i8, i8* %167, align 8, !range !19
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %172 = load double, double* %171, align 8
  br label %173

173:                                              ; preds = %170, %166
  %174 = phi double [ %172, %170 ], [ 1.000000e+03, %166 ]
  %175 = load double, double* @_ZN5blink16DoubleConstraint18kConstraintEpsilonE, align 8
  %176 = fadd double %174, %175
  %177 = fcmp ogt double %140, %176
  br label %178

178:                                              ; preds = %173, %160
  %179 = phi i1 [ true, %160 ], [ %177, %173 ]
  %180 = load double, double* @_ZN5blink26kMinDeviceCaptureFrameRateE, align 8
  %181 = fcmp olt double %161, %180
  %182 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182)
  br i1 %181, label %183, label %184

183:                                              ; preds = %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182)
  br label %198

184:                                              ; preds = %178
  store double 0.000000e+00, double* %4, align 8
  %185 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8, i8* %185, align 8, !range !19
  %187 = icmp eq i8 %186, 0
  %188 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %189 = select i1 %187, double* %4, double* %188
  %190 = load double, double* %189, align 8
  %191 = load double, double* @_ZN5blink16DoubleConstraint18kConstraintEpsilonE, align 8
  %192 = fsub double %190, %191
  %193 = fcmp uge double %161, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182)
  %194 = xor i1 %179, true
  %195 = fcmp ule double %140, %161
  %196 = and i1 %195, %193
  %197 = and i1 %196, %194
  br i1 %197, label %205, label %198

198:                                              ; preds = %183, %184
  %199 = icmp eq i8** %2, null
  br i1 %199, label %512, label %200

200:                                              ; preds = %198
  %201 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 3, i32 0, i32 1
  %202 = bitcast i8** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast i8** %2 to i64*
  store i64 %203, i64* %204, align 8
  br label %512

205:                                              ; preds = %184
  %206 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 19
  %207 = bitcast %"class.blink::WebString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #14
  %208 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 0, i32 2
  %209 = load i32, i32* %208, align 4, !noalias !46
  %210 = icmp eq i32 %209, 26
  br i1 %210, label %211, label %218

211:                                              ; preds = %205
  %212 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #14, !noalias !46
  %213 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  store i8 5, i8* %214, align 1, !noalias !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %212, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_115kVideoKindDepthE, i64 0, i64 0), i64 5, i1 false) #14
  %215 = getelementptr inbounds i8, i8* %212, i64 5
  store i8 0, i8* %215, align 1, !noalias !46
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* nonnull sret %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %216 = load i8, i8* %214, align 1, !noalias !46
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %228, label %231

218:                                              ; preds = %205
  %219 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #14, !noalias !46
  %220 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  store i8 5, i8* %221, align 1, !noalias !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %219, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_115kVideoKindColorE, i64 0, i64 0), i64 5, i1 false) #14
  %222 = getelementptr inbounds i8, i8* %219, i64 5
  store i8 0, i8* %222, align 1, !noalias !46
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* nonnull sret %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #14
  %223 = load i8, i8* %221, align 1, !noalias !46
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %231

225:                                              ; preds = %218
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i8*, i8** %226, align 8, !noalias !46
  call void @_ZdlPv(i8* %227) #15
  br label %231

228:                                              ; preds = %211
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8, !noalias !46
  call void @_ZdlPv(i8* %230) #15
  br label %231

231:                                              ; preds = %211, %228, %218, %225
  %232 = phi i8* [ %219, %225 ], [ %219, %218 ], [ %212, %228 ], [ %212, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #14, !noalias !46
  %233 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %17) #14
  %234 = call zeroext i1 @_ZNK5blink16StringConstraint7MatchesEN3WTF6StringE(%"class.blink::StringConstraint"* %206, %"class.WTF::StringImpl"* %233) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #14
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = icmp eq i8** %2, null
  br i1 %236, label %512, label %237

237:                                              ; preds = %235
  %238 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 19, i32 0, i32 1
  %239 = bitcast i8** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast i8** %2 to i64*
  store i64 %240, i64* %241, align 8
  br label %512

242:                                              ; preds = %231
  %243 = call dereferenceable(32) %"class.blink::media_constraints::ResolutionSet"* @_ZN5blink17media_constraints13ResolutionSetaSERKS1_(%"class.blink::media_constraints::ResolutionSet"* %59, %"class.blink::media_constraints::ResolutionSet"* nonnull dereferenceable(32) %13) #14
  %244 = load i8, i8* %28, align 8, !range !19
  %245 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %29, i64 0, i32 0
  store i8 %244, i8* %245, align 8
  %246 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 6, i32 1
  %247 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %11, i64 0, i32 1
  %248 = call dereferenceable(16) %"class.WTF::Vector.44"* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.44"* %246, %"class.WTF::Vector.44"* dereferenceable(16) %247) #14
  %249 = getelementptr inbounds [7 x i8], [7 x i8]* %18, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %249)
  %250 = getelementptr inbounds [7 x i8], [7 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %250)
  %251 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %251) #14
  %252 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %21, i64 0, i32 0, i32 0
  %253 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %21, i64 0, i32 0, i32 1
  %254 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 3, i32 0, i32 1
  %255 = bitcast i8** %253 to i8*
  %256 = bitcast i8** %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %255, i8* align 8 %256, i64 9, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %252, align 8
  %257 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %21, i64 0, i32 2
  %258 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 3, i32 2
  %259 = bitcast double* %257 to i8*
  %260 = bitcast double* %258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %259, i8* align 8 %260, i64 33, i1 false) #14
  call void @_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_dd(%"class.blink::media_constraints::NumericRangeSet"* nonnull sret %20, %"class.blink::DoubleConstraint"* nonnull %21, double 0.000000e+00, double 1.000000e+03)
  %261 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261)
  %262 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load i8, i8* %262, align 8, !noalias !51
  %264 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %265 = bitcast %union.anon.22* %264 to i64*
  %266 = load i64, i64* %265, align 8, !noalias !51
  store i64 %266, i64* %7, align 8, !noalias !51
  %267 = load i8, i8* %251, align 8, !range !19, !noalias !51
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %284, label %269

269:                                              ; preds = %242
  %270 = icmp eq i8 %263, 0
  br i1 %270, label %278, label %271

271:                                              ; preds = %269
  %272 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %273 = bitcast i64 %266 to double
  %274 = load double, double* %272, align 8, !noalias !51
  %275 = fcmp ogt double %274, %273
  %276 = bitcast double* %272 to i64*
  %277 = select i1 %275, i64* %276, i64* %7
  br label %281

278:                                              ; preds = %269
  %279 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %280 = bitcast %union.anon.22* %279 to i64*
  br label %281

281:                                              ; preds = %278, %271
  %282 = phi i64* [ %277, %271 ], [ %280, %278 ]
  %283 = load i64, i64* %282, align 8, !noalias !51
  store i64 %283, i64* %7, align 8, !noalias !51
  br label %284

284:                                              ; preds = %281, %242
  %285 = phi i64 [ %283, %281 ], [ %266, %242 ]
  %286 = phi i8 [ 1, %281 ], [ %263, %242 ]
  %287 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287)
  %288 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0
  %289 = load i8, i8* %288, align 8, !noalias !51
  %290 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1
  %291 = bitcast %union.anon.22* %290 to i64*
  %292 = load i64, i64* %291, align 8, !noalias !51
  store i64 %292, i64* %8, align 8, !noalias !51
  %293 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %294 = load i8, i8* %293, align 8, !range !19, !noalias !51
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %311, label %296

296:                                              ; preds = %284
  %297 = icmp eq i8 %289, 0
  br i1 %297, label %305, label %298

298:                                              ; preds = %296
  %299 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %300 = load double, double* %299, align 8, !noalias !51
  %301 = bitcast i64 %292 to double
  %302 = fcmp olt double %300, %301
  %303 = bitcast double* %299 to i64*
  %304 = select i1 %302, i64* %303, i64* %8
  br label %308

305:                                              ; preds = %296
  %306 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %307 = bitcast %union.anon.22* %306 to i64*
  br label %308

308:                                              ; preds = %305, %298
  %309 = phi i64* [ %304, %298 ], [ %307, %305 ]
  %310 = load i64, i64* %309, align 8, !noalias !51
  store i64 %310, i64* %8, align 8, !noalias !51
  br label %311

311:                                              ; preds = %284, %308
  %312 = phi i64 [ %310, %308 ], [ %292, %284 ]
  %313 = phi i8 [ 1, %308 ], [ %289, %284 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261)
  store i8 %286, i8* %262, align 8
  %314 = bitcast %"class.blink::(anonymous namespace)::CandidateFormat"* %0 to i8*
  %315 = getelementptr inbounds i8, i8* %314, i64 49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %315, i8* nonnull align 1 %249, i64 7, i1 false)
  store i64 %285, i64* %265, align 8
  store i8 %313, i8* %288, align 8
  %316 = getelementptr inbounds i8, i8* %314, i64 65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %316, i8* nonnull align 1 %250, i64 7, i1 false)
  store i64 %312, i64* %291, align 8
  %317 = bitcast %"class.blink::DoubleConstraint"* %21 to %"class.blink::BaseConstraint"*
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %317) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %251) #14
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %249)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %250)
  %318 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 3
  %319 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %22, i64 0, i32 0, i32 0
  %320 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %22, i64 0, i32 0, i32 1
  %321 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 0, i32 0, i32 1
  %322 = bitcast i8** %320 to i8*
  %323 = bitcast i8** %321 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %322, i8* align 8 %323, i64 9, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14LongConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %319, align 8
  %324 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %22, i64 0, i32 2
  %325 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 0, i32 2
  %326 = bitcast i32* %324 to i8*
  %327 = bitcast i32* %325 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %326, i8* align 4 %327, i64 17, i1 false) #14
  %328 = call { i64, i64 } @_ZN5blink17media_constraints15NumericRangeSetIiE14FromConstraintINS_14LongConstraintEEES2_T_ii(%"class.blink::LongConstraint"* nonnull %22, i32 1, i32 2147483647)
  %329 = extractvalue { i64, i64 } %328, 0
  %330 = trunc i64 %329 to i8
  %331 = lshr i64 %329, 32
  %332 = trunc i64 %331 to i32
  %333 = extractvalue { i64, i64 } %328, 1
  %334 = bitcast %"class.blink::media_constraints::NumericRangeSet.38"* %318 to i32*
  %335 = load i32, i32* %334, align 4
  %336 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %337 = load i32, i32* %336, align 4
  %338 = icmp eq i8 %330, 0
  br i1 %338, label %347, label %339

339:                                              ; preds = %311
  %340 = trunc i32 %335 to i8
  %341 = icmp eq i8 %340, 0
  %342 = icmp slt i32 %337, %332
  %343 = or i1 %341, %342
  %344 = select i1 %343, i32 %332, i32 %337
  %345 = trunc i64 %329 to i32
  %346 = select i1 %341, i32 %345, i32 1
  br label %347

347:                                              ; preds = %339, %311
  %348 = phi i32 [ %346, %339 ], [ %335, %311 ]
  %349 = phi i32 [ %344, %339 ], [ %337, %311 ]
  %350 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 3, i32 1
  %351 = bitcast %"class.absl::optional.39"* %350 to i32*
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %354 = load i32, i32* %353, align 4
  %355 = trunc i64 %333 to i8
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %367, label %357

357:                                              ; preds = %347
  %358 = trunc i32 %352 to i8
  %359 = icmp eq i8 %358, 0
  %360 = lshr i64 %333, 32
  %361 = trunc i64 %360 to i32
  %362 = icmp sgt i32 %354, %361
  %363 = or i1 %359, %362
  %364 = select i1 %363, i32 %361, i32 %354
  %365 = trunc i64 %333 to i32
  %366 = select i1 %359, i32 %365, i32 1
  br label %367

367:                                              ; preds = %347, %357
  %368 = phi i32 [ %366, %357 ], [ %352, %347 ]
  %369 = phi i32 [ %364, %357 ], [ %354, %347 ]
  %370 = zext i32 %349 to i64
  %371 = shl nuw i64 %370, 32
  %372 = zext i32 %348 to i64
  %373 = or i64 %371, %372
  %374 = zext i32 %369 to i64
  %375 = shl nuw i64 %374, 32
  %376 = zext i32 %368 to i64
  %377 = or i64 %375, %376
  %378 = bitcast %"class.blink::media_constraints::NumericRangeSet.38"* %318 to i64*
  store i64 %373, i64* %378, align 8
  %379 = bitcast %"class.absl::optional.39"* %350 to i64*
  store i64 %377, i64* %379, align 8
  %380 = bitcast %"class.blink::LongConstraint"* %22 to %"class.blink::BaseConstraint"*
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %380) #14
  %381 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 4
  %382 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %23, i64 0, i32 0, i32 0
  %383 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %23, i64 0, i32 0, i32 1
  %384 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 1, i32 0, i32 1
  %385 = bitcast i8** %383 to i8*
  %386 = bitcast i8** %384 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %385, i8* align 8 %386, i64 9, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14LongConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %382, align 8
  %387 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %23, i64 0, i32 2
  %388 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 1, i32 2
  %389 = bitcast i32* %387 to i8*
  %390 = bitcast i32* %388 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %389, i8* align 4 %390, i64 17, i1 false) #14
  %391 = call { i64, i64 } @_ZN5blink17media_constraints15NumericRangeSetIiE14FromConstraintINS_14LongConstraintEEES2_T_ii(%"class.blink::LongConstraint"* nonnull %23, i32 1, i32 2147483647)
  %392 = extractvalue { i64, i64 } %391, 0
  %393 = trunc i64 %392 to i8
  %394 = lshr i64 %392, 32
  %395 = trunc i64 %394 to i32
  %396 = extractvalue { i64, i64 } %391, 1
  %397 = bitcast %"class.blink::media_constraints::NumericRangeSet.38"* %381 to i32*
  %398 = load i32, i32* %397, align 4
  %399 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = icmp eq i8 %393, 0
  br i1 %401, label %410, label %402

402:                                              ; preds = %367
  %403 = trunc i32 %398 to i8
  %404 = icmp eq i8 %403, 0
  %405 = icmp slt i32 %400, %395
  %406 = or i1 %404, %405
  %407 = select i1 %406, i32 %395, i32 %400
  %408 = trunc i64 %392 to i32
  %409 = select i1 %404, i32 %408, i32 1
  br label %410

410:                                              ; preds = %402, %367
  %411 = phi i32 [ %409, %402 ], [ %398, %367 ]
  %412 = phi i32 [ %407, %402 ], [ %400, %367 ]
  %413 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 4, i32 1
  %414 = bitcast %"class.absl::optional.39"* %413 to i32*
  %415 = load i32, i32* %414, align 4
  %416 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = trunc i64 %396 to i8
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %430, label %420

420:                                              ; preds = %410
  %421 = trunc i32 %415 to i8
  %422 = icmp eq i8 %421, 0
  %423 = lshr i64 %396, 32
  %424 = trunc i64 %423 to i32
  %425 = icmp sgt i32 %417, %424
  %426 = or i1 %422, %425
  %427 = select i1 %426, i32 %424, i32 %417
  %428 = trunc i64 %396 to i32
  %429 = select i1 %422, i32 %428, i32 1
  br label %430

430:                                              ; preds = %410, %420
  %431 = phi i32 [ %429, %420 ], [ %415, %410 ]
  %432 = phi i32 [ %427, %420 ], [ %417, %410 ]
  %433 = zext i32 %412 to i64
  %434 = shl nuw i64 %433, 32
  %435 = zext i32 %411 to i64
  %436 = or i64 %434, %435
  %437 = zext i32 %432 to i64
  %438 = shl nuw i64 %437, 32
  %439 = zext i32 %431 to i64
  %440 = or i64 %438, %439
  %441 = bitcast %"class.blink::media_constraints::NumericRangeSet.38"* %381 to i64*
  store i64 %436, i64* %441, align 8
  %442 = bitcast %"class.absl::optional.39"* %413 to i64*
  store i64 %440, i64* %442, align 8
  %443 = bitcast %"class.blink::LongConstraint"* %23 to %"class.blink::BaseConstraint"*
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %443) #14
  %444 = getelementptr inbounds [7 x i8], [7 x i8]* %24, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %444)
  %445 = getelementptr inbounds [7 x i8], [7 x i8]* %25, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %445)
  %446 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %446) #14
  %447 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %27, i64 0, i32 0, i32 0
  %448 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %27, i64 0, i32 0, i32 1
  %449 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 2, i32 0, i32 1
  %450 = bitcast i8** %448 to i8*
  %451 = bitcast i8** %449 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %450, i8* align 8 %451, i64 9, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %447, align 8
  %452 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %27, i64 0, i32 2
  %453 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 2, i32 2
  %454 = bitcast double* %452 to i8*
  %455 = bitcast double* %453 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %454, i8* align 8 %455, i64 33, i1 false) #14
  call void @_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_dd(%"class.blink::media_constraints::NumericRangeSet"* nonnull sret %26, %"class.blink::DoubleConstraint"* nonnull %27, double 0.000000e+00, double 0x7FF0000000000000)
  %456 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %456)
  %457 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = load i8, i8* %457, align 8, !noalias !54
  %459 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 1
  %460 = bitcast %union.anon.22* %459 to i64*
  %461 = load i64, i64* %460, align 8, !noalias !54
  store i64 %461, i64* %9, align 8, !noalias !54
  %462 = load i8, i8* %446, align 8, !range !19, !noalias !54
  %463 = icmp eq i8 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %430
  %465 = icmp eq i8 %458, 0
  br i1 %465, label %473, label %466

466:                                              ; preds = %464
  %467 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %468 = bitcast i64 %461 to double
  %469 = load double, double* %467, align 8, !noalias !54
  %470 = fcmp ogt double %469, %468
  %471 = bitcast double* %467 to i64*
  %472 = select i1 %470, i64* %471, i64* %9
  br label %476

473:                                              ; preds = %464
  %474 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %475 = bitcast %union.anon.22* %474 to i64*
  br label %476

476:                                              ; preds = %473, %466
  %477 = phi i64* [ %472, %466 ], [ %475, %473 ]
  %478 = load i64, i64* %477, align 8, !noalias !54
  store i64 %478, i64* %9, align 8, !noalias !54
  br label %479

479:                                              ; preds = %476, %430
  %480 = phi i64 [ %478, %476 ], [ %461, %430 ]
  %481 = phi i8 [ 1, %476 ], [ %458, %430 ]
  %482 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %482)
  %483 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0
  %484 = load i8, i8* %483, align 8, !noalias !54
  %485 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidateFormat", %"class.blink::(anonymous namespace)::CandidateFormat"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 1
  %486 = bitcast %union.anon.22* %485 to i64*
  %487 = load i64, i64* %486, align 8, !noalias !54
  store i64 %487, i64* %10, align 8, !noalias !54
  %488 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %489 = load i8, i8* %488, align 8, !range !19, !noalias !54
  %490 = icmp eq i8 %489, 0
  br i1 %490, label %506, label %491

491:                                              ; preds = %479
  %492 = icmp eq i8 %484, 0
  br i1 %492, label %500, label %493

493:                                              ; preds = %491
  %494 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %495 = load double, double* %494, align 8, !noalias !54
  %496 = bitcast i64 %487 to double
  %497 = fcmp olt double %495, %496
  %498 = bitcast double* %494 to i64*
  %499 = select i1 %497, i64* %498, i64* %10
  br label %503

500:                                              ; preds = %491
  %501 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %502 = bitcast %union.anon.22* %501 to i64*
  br label %503

503:                                              ; preds = %500, %493
  %504 = phi i64* [ %499, %493 ], [ %502, %500 ]
  %505 = load i64, i64* %504, align 8, !noalias !54
  store i64 %505, i64* %10, align 8, !noalias !54
  br label %506

506:                                              ; preds = %479, %503
  %507 = phi i64 [ %505, %503 ], [ %487, %479 ]
  %508 = phi i8 [ 1, %503 ], [ %484, %479 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %482)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %456)
  store i8 %481, i8* %457, align 8
  %509 = getelementptr inbounds i8, i8* %314, i64 113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %509, i8* nonnull align 1 %444, i64 7, i1 false)
  store i64 %480, i64* %460, align 8
  store i8 %508, i8* %483, align 8
  %510 = getelementptr inbounds i8, i8* %314, i64 129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %510, i8* nonnull align 1 %445, i64 7, i1 false)
  store i64 %507, i64* %486, align 8
  %511 = bitcast %"class.blink::DoubleConstraint"* %27 to %"class.blink::BaseConstraint"*
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %511) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %446) #14
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %444)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %445)
  br label %512

512:                                              ; preds = %237, %235, %200, %198, %112, %110, %103, %101, %94, %92, %506
  %513 = phi i1 [ true, %506 ], [ false, %92 ], [ false, %94 ], [ false, %101 ], [ false, %103 ], [ false, %110 ], [ false, %112 ], [ false, %198 ], [ false, %200 ], [ false, %235 ], [ false, %237 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #14
  br label %514

514:                                              ; preds = %50, %48, %512
  %515 = phi i1 [ %513, %512 ], [ false, %48 ], [ false, %50 ]
  %516 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %517 = load i8*, i8** %516, align 8
  %518 = icmp eq i8* %517, null
  br i1 %518, label %525, label %519, !prof !2

519:                                              ; preds = %514
  %520 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %521 = load i32, i32* %520, align 4
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %524, label %523, !prof !3

523:                                              ; preds = %519
  store i32 0, i32* %520, align 4
  br label %524

524:                                              ; preds = %523, %519
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %517) #14
  store i8* null, i8** %516, align 8
  br label %525

525:                                              ; preds = %514, %524
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  ret i1 %515
}

declare void @_ZN5blink25VideoTrackAdapterSettingsC1Ev(%"class.blink::VideoTrackAdapterSettings"*) unnamed_addr #2

declare void @_ZN5media18VideoCaptureParamsC1Ev(%"struct.media::VideoCaptureParams"*) unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @_ZN5blink20VideoCaptureSettingsC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN5media18VideoCaptureParamsEN4absl8optionalIbEERKNS_25VideoTrackAdapterSettingsENSB_IdEESG_SG_SG_SG_(%"class.blink::VideoCaptureSettings"*, %"class.std::__1::basic_string"*, %"struct.media::VideoCaptureParams"* byval(%"struct.media::VideoCaptureParams") align 8, i16, %"class.blink::VideoTrackAdapterSettings"* dereferenceable(40), i8, double, i8, double, %"class.absl::optional.18"* byval(%"class.absl::optional.18") align 8, %"class.absl::optional.18"* byval(%"class.absl::optional.18") align 8, %"class.absl::optional.18"* byval(%"class.absl::optional.18") align 8) unnamed_addr #2

declare dereferenceable(192) %"class.blink::VideoCaptureSettings"* @_ZN5blink20VideoCaptureSettingsaSEOS0_(%"class.blink::VideoCaptureSettings"*, %"class.blink::VideoCaptureSettings"* dereferenceable(192)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink20VideoCaptureSettingsD1Ev(%"class.blink::VideoCaptureSettings"*) unnamed_addr #5

declare void @_ZN5blink20VideoCaptureSettingsC1EPKc(%"class.blink::VideoCaptureSettings"*, i8*) unnamed_addr #2

declare void @_ZN5blink20VideoCaptureSettingsC1EOS0_(%"class.blink::VideoCaptureSettings"*, %"class.blink::VideoCaptureSettings"* dereferenceable(192)) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16StringConstraint7MatchesEN3WTF6StringE(%"class.blink::StringConstraint"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink14BaseConstraint12HasMandatoryEv(%"class.blink::BaseConstraint"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_111ToWebStringENS_5mojom10FacingModeE(%"class.blink::WebString"* noalias sret, i32) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  switch i32 %1, label %28 [
    i32 1, label %5
    i32 2, label %17
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 4, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i32*
  store i32 1919251317, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 4
  store i8 0, i8* %10, align 4
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %11 = load i8, i8* %8, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #15
  br label %16

16:                                               ; preds = %5, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  br label %29

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 11, i8* %20, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11, i1 false) #14
  %21 = getelementptr inbounds i8, i8* %18, i64 11
  store i8 0, i8* %21, align 1
  call void @_ZN5blink9WebString9FromASCIIERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::WebString"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %22 = load i8, i8* %20, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %17, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  br label %29

28:                                               ; preds = %2
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %0) #14
  br label %29

29:                                               ; preds = %28, %27, %16
  ret void
}

declare dereferenceable(16) %"class.WTF::Vector.31"* @_ZNK5blink16StringConstraint5ExactEv(%"class.blink::StringConstraint"*) local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN5blink31MediaTrackConstraintSetPlatformC1Ev(%"struct.blink::MediaTrackConstraintSetPlatform"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink31MediaTrackConstraintSetPlatformD2Ev(%"struct.blink::MediaTrackConstraintSetPlatform"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 48
  %3 = bitcast %"class.blink::LongConstraint"* %2 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %3) #14
  %4 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 47
  %5 = bitcast %"class.blink::BooleanConstraint"* %4 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %5) #14
  %6 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 46
  %7 = bitcast %"class.blink::LongConstraint"* %6 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %7) #14
  %8 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 45
  %9 = bitcast %"class.blink::BooleanConstraint"* %8 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %9) #14
  %10 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 44
  %11 = bitcast %"class.blink::LongConstraint"* %10 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %11) #14
  %12 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 43
  %13 = bitcast %"class.blink::BooleanConstraint"* %12 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %13) #14
  %14 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 42
  %15 = bitcast %"class.blink::LongConstraint"* %14 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %15) #14
  %16 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 41
  %17 = bitcast %"class.blink::BooleanConstraint"* %16 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %17) #14
  %18 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 40
  %19 = bitcast %"class.blink::BooleanConstraint"* %18 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %19) #14
  %20 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 39
  %21 = bitcast %"class.blink::BooleanConstraint"* %20 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %21) #14
  %22 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 38
  %23 = bitcast %"class.blink::BooleanConstraint"* %22 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %23) #14
  %24 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 37
  %25 = bitcast %"class.blink::BooleanConstraint"* %24 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %25) #14
  %26 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 36
  %27 = bitcast %"class.blink::BooleanConstraint"* %26 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %27) #14
  %28 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 35
  %29 = bitcast %"class.blink::BooleanConstraint"* %28 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %29) #14
  %30 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 34
  %31 = bitcast %"class.blink::BooleanConstraint"* %30 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %31) #14
  %32 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 33
  %33 = bitcast %"class.blink::LongConstraint"* %32 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %33) #14
  %34 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 32
  %35 = bitcast %"class.blink::LongConstraint"* %34 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %35) #14
  %36 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 31
  %37 = bitcast %"class.blink::BooleanConstraint"* %36 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %37) #14
  %38 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 30
  %39 = bitcast %"class.blink::BooleanConstraint"* %38 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %39) #14
  %40 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 29
  %41 = bitcast %"class.blink::BooleanConstraint"* %40 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %41) #14
  %42 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 28
  %43 = bitcast %"class.blink::BooleanConstraint"* %42 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %43) #14
  %44 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 27
  %45 = bitcast %"class.blink::BooleanConstraint"* %44 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %45) #14
  %46 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 26
  %47 = bitcast %"class.blink::BooleanConstraint"* %46 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %47) #14
  %48 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 25
  %49 = bitcast %"class.blink::BooleanConstraint"* %48 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %49) #14
  %50 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 24
  %51 = bitcast %"class.blink::BooleanConstraint"* %50 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %51) #14
  %52 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 23
  %53 = bitcast %"class.blink::BooleanConstraint"* %52 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %53) #14
  %54 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 22
  %55 = bitcast %"class.blink::BooleanConstraint"* %54 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %55) #14
  %56 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 21
  %57 = bitcast %"class.blink::BooleanConstraint"* %56 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %57) #14
  %58 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 20
  tail call void @_ZN5blink16StringConstraintD2Ev(%"class.blink::StringConstraint"* %58) #14
  %59 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 19
  tail call void @_ZN5blink16StringConstraintD2Ev(%"class.blink::StringConstraint"* %59) #14
  %60 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 18
  tail call void @_ZN5blink16StringConstraintD2Ev(%"class.blink::StringConstraint"* %60) #14
  %61 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 17
  %62 = bitcast %"class.blink::DoubleConstraint"* %61 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %62) #14
  %63 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 16
  %64 = bitcast %"class.blink::DoubleConstraint"* %63 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %64) #14
  %65 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 15
  %66 = bitcast %"class.blink::DoubleConstraint"* %65 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %66) #14
  %67 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 14
  %68 = bitcast %"class.blink::BooleanConstraint"* %67 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %68) #14
  %69 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 13
  tail call void @_ZN5blink16StringConstraintD2Ev(%"class.blink::StringConstraint"* %69) #14
  %70 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 12
  %71 = bitcast %"class.blink::LongConstraint"* %70 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %71) #14
  %72 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 11
  %73 = bitcast %"class.blink::DoubleConstraint"* %72 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %73) #14
  %74 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 10
  tail call void @_ZN5blink16StringConstraintD2Ev(%"class.blink::StringConstraint"* %74) #14
  %75 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 9
  %76 = bitcast %"class.blink::BooleanConstraint"* %75 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %76) #14
  %77 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 8
  %78 = bitcast %"class.blink::LongConstraint"* %77 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %78) #14
  %79 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 7
  %80 = bitcast %"class.blink::LongConstraint"* %79 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %80) #14
  %81 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 6
  %82 = bitcast %"class.blink::DoubleConstraint"* %81 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %82) #14
  %83 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 5
  tail call void @_ZN5blink16StringConstraintD2Ev(%"class.blink::StringConstraint"* %83) #14
  %84 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 4
  tail call void @_ZN5blink16StringConstraintD2Ev(%"class.blink::StringConstraint"* %84) #14
  %85 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 3
  %86 = bitcast %"class.blink::DoubleConstraint"* %85 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %86) #14
  %87 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 2
  %88 = bitcast %"class.blink::DoubleConstraint"* %87 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %88) #14
  %89 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %0, i64 0, i32 1
  %90 = bitcast %"class.blink::LongConstraint"* %89 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %90) #14
  %91 = bitcast %"struct.blink::MediaTrackConstraintSetPlatform"* %0 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %91) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16StringConstraintD2Ev(%"class.blink::StringConstraint"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringConstraint", %"class.blink::StringConstraint"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16StringConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StringConstraint", %"class.blink::StringConstraint"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %41, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::StringConstraint", %"class.blink::StringConstraint"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %"class.WTF::String"* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #14
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %35 = icmp eq %"class.WTF::String"* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.31"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::StringConstraint", %"class.blink::StringConstraint"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::String"*, %"class.WTF::String"** %43, align 8
  %45 = icmp eq %"class.WTF::String"* %44, null
  br i1 %45, label %80, label %46, !prof !2

46:                                               ; preds = %41
  %47 = bitcast %"class.WTF::String"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::StringConstraint", %"class.blink::StringConstraint"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %78, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 %52
  br label %54

54:                                               ; preds = %72, %51
  %55 = phi %"class.WTF::String"* [ %73, %72 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #14
  br label %72

72:                                               ; preds = %71, %68, %54
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 1
  %74 = icmp eq %"class.WTF::String"* %73, %53
  br i1 %74, label %75, label %54

75:                                               ; preds = %72
  store i32 0, i32* %48, align 4
  %76 = bitcast %"class.WTF::Vector.31"* %42 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %46
  %79 = phi i8* [ %77, %75 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %43, align 8
  br label %80

80:                                               ; preds = %41, %78
  %81 = bitcast %"class.blink::StringConstraint"* %0 to %"class.blink::BaseConstraint"*
  tail call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* %81) #14
  ret void
}

declare void @_ZN5blink17media_constraints13ResolutionSetC1Eiiiidd(%"class.blink::media_constraints::ResolutionSet"*, i32, i32, i32, i32, double, double) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_(%"class.blink::media_constraints::DiscreteSet"* noalias sret, %"class.blink::media_constraints::DiscreteSet"*, %"class.blink::media_constraints::DiscreteSet"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.44", align 8
  %5 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !19
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !19
  store i8 %11, i8* %9, align 8
  %12 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %12, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %8
  %19 = zext i32 %14 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %19) #14
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #14
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.44"* %12 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = trunc i64 %20 to i32
  store i32 %24, i32* %16, align 8
  br label %25

25:                                               ; preds = %18, %8
  %26 = phi i8* [ null, %8 ], [ %21, %18 ]
  %27 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %26, null
  %33 = icmp ne i8* %31, null
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %138, !prof !2

35:                                               ; preds = %25
  %36 = zext i32 %28 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* nonnull align 1 %31, i64 %36, i1 false) #14
  br label %138

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !19
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %43, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %46, align 8
  %47 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %47, align 8
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %41
  %50 = zext i32 %45 to i64
  %51 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %50) #14
  %52 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #14
  %53 = ptrtoint i8* %52 to i64
  %54 = bitcast %"class.WTF::Vector.44"* %43 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = trunc i64 %51 to i32
  store i32 %55, i32* %47, align 8
  br label %56

56:                                               ; preds = %49, %41
  %57 = phi i8* [ null, %41 ], [ %52, %49 ]
  %58 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp ne i8* %57, null
  %64 = icmp ne i8* %62, null
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %138, !prof !2

66:                                               ; preds = %56
  %67 = zext i32 %59 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* nonnull align 1 %62, i64 %67, i1 false) #14
  br label %138

68:                                               ; preds = %37
  %69 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %72, %68
  %77 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 0
  store i8 0, i8* %77, align 8, !alias.scope !57
  %78 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %81 = bitcast %"class.WTF::Vector.44"* %78 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8, !alias.scope !57
  store i32 0, i32* %79, align 8, !alias.scope !57
  store i32 0, i32* %80, align 4, !alias.scope !57
  br label %138

82:                                               ; preds = %72
  %83 = bitcast %"class.WTF::Vector.44"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #14
  %84 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %4, i64 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %4, i64 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false) #14
  %87 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = zext i32 %70 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 %89
  %91 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %102

92:                                               ; preds = %133
  %93 = bitcast %"class.WTF::Vector.44"* %4 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = load i32, i32* %85, align 8
  %96 = load i32, i32* %86, align 4
  store atomic i64 0, i64* %93 monotonic, align 8
  store i32 0, i32* %85, align 8
  store i32 0, i32* %86, align 4
  %97 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 0
  store i8 0, i8* %97, align 8
  %98 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1
  %99 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %101 = bitcast %"class.WTF::Vector.44"* %98 to i64*
  store atomic i64 %94, i64* %101 monotonic, align 8
  store i32 %95, i32* %99, align 8
  store i32 %96, i32* %100, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #14
  br label %138

102:                                              ; preds = %136, %82
  %103 = phi i32 [ %74, %82 ], [ %137, %136 ]
  %104 = phi i8* [ %88, %82 ], [ %134, %136 ]
  %105 = load i8*, i8** %91, align 8
  %106 = zext i32 %103 to i64
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  %108 = icmp eq i32 %103, 0
  br i1 %108, label %118, label %109

109:                                              ; preds = %102
  %110 = load i8, i8* %104, align 1, !range !19
  br label %111

111:                                              ; preds = %115, %109
  %112 = phi i8* [ %105, %109 ], [ %116, %115 ]
  %113 = load i8, i8* %112, align 1, !range !19
  %114 = icmp eq i8 %113, %110
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds i8, i8* %112, i64 1
  %117 = icmp eq i8* %116, %107
  br i1 %117, label %133, label %111

118:                                              ; preds = %111, %102
  %119 = phi i8* [ %105, %102 ], [ %112, %111 ]
  %120 = icmp eq i8* %119, %107
  br i1 %120, label %133, label %121

121:                                              ; preds = %118
  %122 = load i32, i32* %86, align 4
  %123 = load i32, i32* %85, align 8
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %132, label %125, !prof !3

125:                                              ; preds = %121
  %126 = load i8*, i8** %84, align 8
  %127 = zext i32 %122 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = load i8, i8* %104, align 1, !range !19
  store i8 %129, i8* %128, align 1
  %130 = load i32, i32* %86, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %86, align 4
  br label %133

132:                                              ; preds = %121
  call void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKbEEvOT_(%"class.WTF::Vector.44"* nonnull %4, i8* dereferenceable(1) %104) #14
  br label %133

133:                                              ; preds = %115, %118, %132, %125
  %134 = getelementptr inbounds i8, i8* %104, i64 1
  %135 = icmp eq i8* %134, %90
  br i1 %135, label %92, label %136

136:                                              ; preds = %133
  %137 = load i32, i32* %73, align 4
  br label %102

138:                                              ; preds = %66, %56, %35, %25, %92, %76
  ret void
}

declare void @_ZN5blink17media_constraints24RescaleSetFromConstraintERKNS_16StringConstraintE(%"class.blink::media_constraints::DiscreteSet"* sret, %"class.blink::StringConstraint"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZNK5blink17media_constraints13ResolutionSet12IntersectionERKS1_(%"class.blink::media_constraints::ResolutionSet"* sret, %"class.blink::media_constraints::ResolutionSet"*, %"class.blink::media_constraints::ResolutionSet"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN5blink17media_constraints13ResolutionSet17FromConstraintSetERKNS_31MediaTrackConstraintSetPlatformE(%"class.blink::media_constraints::ResolutionSet"* sret, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856)) local_unnamed_addr #2

declare void @_ZN5blink17media_constraints13ResolutionSet19FromExactResolutionEii(%"class.blink::media_constraints::ResolutionSet"* sret, i32, i32) local_unnamed_addr #2

declare dereferenceable(32) %"class.blink::media_constraints::ResolutionSet"* @_ZN5blink17media_constraints13ResolutionSetaSERKS1_(%"class.blink::media_constraints::ResolutionSet"*, %"class.blink::media_constraints::ResolutionSet"* dereferenceable(32)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17media_constraints13ResolutionSet12IsWidthEmptyEv(%"class.blink::media_constraints::ResolutionSet"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17media_constraints13ResolutionSet13IsHeightEmptyEv(%"class.blink::media_constraints::ResolutionSet"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17media_constraints13ResolutionSet18IsAspectRatioEmptyEv(%"class.blink::media_constraints::ResolutionSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_dd(%"class.blink::media_constraints::NumericRangeSet"* noalias sret, %"class.blink::DoubleConstraint"*, double, double) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.blink::DoubleConstraint"* %1 to i1 (%"class.blink::DoubleConstraint"*)***
  %6 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %6, i64 4
  %8 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::DoubleConstraint"* %1) #14
  br i1 %9, label %15, label %10

10:                                               ; preds = %4
  %11 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %11, i64 5
  %13 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::DoubleConstraint"* %1) #14
  br i1 %14, label %15, label %25

15:                                               ; preds = %4, %10
  %16 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %16, i64 5
  %18 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::DoubleConstraint"* %1) #14
  %20 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %1, i64 0, i32 4
  %21 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %1, i64 0, i32 3
  %22 = select i1 %19, double* %20, double* %21
  %23 = load double, double* %22, align 8
  %24 = fcmp olt double %23, %2
  br i1 %24, label %101, label %25

25:                                               ; preds = %15, %10
  %26 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %26, i64 3
  %28 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::DoubleConstraint"* %1) #14
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %31, i64 5
  %33 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::DoubleConstraint"* %1) #14
  br i1 %34, label %35, label %45

35:                                               ; preds = %25, %30
  %36 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %36, i64 5
  %38 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::DoubleConstraint"* %1) #14
  %40 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %1, i64 0, i32 4
  %41 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %1, i64 0, i32 2
  %42 = select i1 %39, double* %40, double* %41
  %43 = load double, double* %42, align 8
  %44 = fcmp ogt double %43, %3
  br i1 %44, label %101, label %45

45:                                               ; preds = %35, %30
  %46 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %46, i64 3
  %48 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::DoubleConstraint"* %1) #14
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %51, i64 5
  %53 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::DoubleConstraint"* %1) #14
  br i1 %54, label %55, label %72

55:                                               ; preds = %45, %50
  %56 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %56, i64 5
  %58 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::DoubleConstraint"* %1) #14
  %60 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %1, i64 0, i32 4
  %61 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %1, i64 0, i32 2
  %62 = select i1 %59, double* %60, double* %61
  %63 = load double, double* %62, align 8
  %64 = fcmp ult double %63, %2
  br i1 %64, label %72, label %65

65:                                               ; preds = %55
  %66 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %66, i64 5
  %68 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::DoubleConstraint"* %1) #14
  %70 = select i1 %69, double* %60, double* %61
  %71 = load double, double* %70, align 8
  br label %72

72:                                               ; preds = %50, %55, %65
  %73 = phi i8 [ 1, %65 ], [ 0, %55 ], [ 0, %50 ]
  %74 = phi double [ %71, %65 ], [ undef, %55 ], [ undef, %50 ]
  %75 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %75, i64 4
  %77 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::DoubleConstraint"* %1) #14
  br i1 %78, label %84, label %79

79:                                               ; preds = %72
  %80 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %81 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %80, i64 5
  %82 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.blink::DoubleConstraint"* %1) #14
  br i1 %83, label %84, label %101

84:                                               ; preds = %72, %79
  %85 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %85, i64 5
  %87 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::DoubleConstraint"* %1) #14
  %89 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %1, i64 0, i32 4
  %90 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %1, i64 0, i32 3
  %91 = select i1 %88, double* %89, double* %90
  %92 = load double, double* %91, align 8
  %93 = fcmp ugt double %92, %3
  br i1 %93, label %101, label %94

94:                                               ; preds = %84
  %95 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %5, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %95, i64 5
  %97 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::DoubleConstraint"* %1) #14
  %99 = select i1 %98, double* %89, double* %90
  %100 = load double, double* %99, align 8
  br label %101

101:                                              ; preds = %94, %84, %79, %15, %35
  %102 = phi i8 [ 1, %35 ], [ 1, %15 ], [ %73, %79 ], [ %73, %84 ], [ %73, %94 ]
  %103 = phi double [ 1.000000e+00, %35 ], [ 1.000000e+00, %15 ], [ %74, %79 ], [ %74, %84 ], [ %74, %94 ]
  %104 = phi i8 [ 1, %35 ], [ 1, %15 ], [ 0, %79 ], [ 0, %84 ], [ 1, %94 ]
  %105 = phi double [ 0.000000e+00, %35 ], [ 0.000000e+00, %15 ], [ undef, %79 ], [ undef, %84 ], [ %100, %94 ]
  %106 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 %102, i8* %106, align 8
  %107 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %103, double* %107, align 8
  %108 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %104, i8* %108, align 8
  %109 = getelementptr inbounds %"class.blink::media_constraints::NumericRangeSet", %"class.blink::media_constraints::NumericRangeSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %105, double* %109, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink17media_constraints15NumericRangeSetIiE14FromConstraintINS_14LongConstraintEEES2_T_ii(%"class.blink::LongConstraint"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LongConstraint"* %0 to i1 (%"class.blink::LongConstraint"*)***
  %5 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %5, i64 4
  %7 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LongConstraint"* %0) #14
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %10, i64 5
  %12 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LongConstraint"* %0) #14
  br i1 %13, label %14, label %24

14:                                               ; preds = %3, %9
  %15 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %15, i64 5
  %17 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LongConstraint"* %0) #14
  %19 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %0, i64 0, i32 3
  %21 = select i1 %18, i32* %19, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %1
  br i1 %23, label %109, label %24

24:                                               ; preds = %14, %9
  %25 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %25, i64 3
  %27 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::LongConstraint"* %0) #14
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %30, i64 5
  %32 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LongConstraint"* %0) #14
  br i1 %33, label %34, label %44

34:                                               ; preds = %24, %29
  %35 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %35, i64 5
  %37 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LongConstraint"* %0) #14
  %39 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %0, i64 0, i32 4
  %40 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %0, i64 0, i32 2
  %41 = select i1 %38, i32* %39, i32* %40
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, %2
  br i1 %43, label %109, label %44

44:                                               ; preds = %34, %29
  %45 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %45, i64 3
  %47 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LongConstraint"* %0) #14
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %50, i64 5
  %52 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::LongConstraint"* %0) #14
  br i1 %53, label %54, label %73

54:                                               ; preds = %44, %49
  %55 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %55, i64 5
  %57 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LongConstraint"* %0) #14
  %59 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %0, i64 0, i32 4
  %60 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %0, i64 0, i32 2
  %61 = select i1 %58, i32* %59, i32* %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %62, %1
  br i1 %63, label %73, label %64

64:                                               ; preds = %54
  %65 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %65, i64 5
  %67 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LongConstraint"* %0) #14
  %69 = select i1 %68, i32* %59, i32* %60
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = shl nuw i64 %71, 32
  br label %73

73:                                               ; preds = %49, %54, %64
  %74 = phi i64 [ 1, %64 ], [ 0, %54 ], [ 0, %49 ]
  %75 = phi i64 [ %72, %64 ], [ 0, %54 ], [ 0, %49 ]
  %76 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %77 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %76, i64 4
  %78 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %77, align 8
  %79 = tail call zeroext i1 %78(%"class.blink::LongConstraint"* %0) #14
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %82 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %81, i64 5
  %83 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %82, align 8
  %84 = tail call zeroext i1 %83(%"class.blink::LongConstraint"* %0) #14
  br i1 %84, label %85, label %104

85:                                               ; preds = %73, %80
  %86 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %86, i64 5
  %88 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.blink::LongConstraint"* %0) #14
  %90 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %0, i64 0, i32 4
  %91 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %0, i64 0, i32 3
  %92 = select i1 %89, i32* %90, i32* %91
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, %2
  br i1 %94, label %104, label %95

95:                                               ; preds = %85
  %96 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %4, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %96, i64 5
  %98 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::LongConstraint"* %0) #14
  %100 = select i1 %99, i32* %90, i32* %91
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = shl nuw i64 %102, 32
  br label %104

104:                                              ; preds = %80, %85, %95
  %105 = phi i64 [ %103, %95 ], [ 0, %85 ], [ 0, %80 ]
  %106 = phi i64 [ 1, %95 ], [ 0, %85 ], [ 0, %80 ]
  %107 = or i64 %75, %74
  %108 = or i64 %106, %105
  br label %109

109:                                              ; preds = %14, %34, %104
  %110 = phi i64 [ %107, %104 ], [ 4294967297, %34 ], [ 4294967297, %14 ]
  %111 = phi i64 [ %108, %104 ], [ 1, %34 ], [ 1, %14 ]
  %112 = insertvalue { i64, i64 } undef, i64 %110, 0
  %113 = insertvalue { i64, i64 } %112, i64 %111, 1
  ret { i64, i64 } %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #14
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKbEEvOT_(%"class.WTF::Vector.44"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #14
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.44"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !2

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #14
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #14
  %44 = bitcast %"class.WTF::Vector.44"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !2

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %62) #14
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #14
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !2

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #14
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #14
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector.44"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1, !range !19
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.44"* @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.44"*, %"class.WTF::Vector.44"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.44"* %1, %0
  br i1 %3, label %79, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %54

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %54

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.44"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #14
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %54, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %34) #14
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #14
  %37 = ptrtoint i8* %36 to i64
  br i1 %33, label %38, label %41

38:                                               ; preds = %30
  %39 = bitcast %"class.WTF::Vector.44"* %0 to i64*
  store atomic i64 %37, i64* %39 monotonic, align 8
  %40 = trunc i64 %35 to i32
  store i32 %40, i32* %12, align 8
  br label %54

41:                                               ; preds = %30
  %42 = load i8*, i8** %31, align 8
  %43 = icmp ne i8* %36, null
  %44 = icmp ne i8* %42, null
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %50, !prof !2

46:                                               ; preds = %41
  %47 = load i32, i32* %5, align 4
  %48 = zext i32 %47 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* nonnull align 1 %42, i64 %48, i1 false) #14
  %49 = load i8*, i8** %31, align 8
  br label %50

50:                                               ; preds = %46, %41
  %51 = phi i8* [ %42, %41 ], [ %49, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #14
  %52 = bitcast %"class.WTF::Vector.44"* %0 to i64*
  store atomic i64 %37, i64* %52 monotonic, align 8
  %53 = trunc i64 %35 to i32
  store i32 %53, i32* %12, align 8
  br label %54

54:                                               ; preds = %50, %38, %26, %11, %10
  %55 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i32, i32* %5, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %56, i64 %58, i1 false) #14
  %61 = load i8*, i8** %55, align 8
  %62 = load i32, i32* %5, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = load i8*, i8** %59, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = icmp ne i8* %66, null
  %68 = icmp ne i8* %64, null
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %77, !prof !2

70:                                               ; preds = %54
  %71 = load i32, i32* %7, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %61, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = ptrtoint i8* %64 to i64
  %76 = sub i64 %74, %75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* nonnull align 1 %64, i64 %76, i1 false) #14
  br label %77

77:                                               ; preds = %54, %70
  %78 = load i32, i32* %7, align 4
  store i32 %78, i32* %5, align 4
  br label %79

79:                                               ; preds = %2, %77
  ret %"class.WTF::Vector.44"* %0
}

declare double @_ZN5blink31StringConstraintFitnessDistanceERKNS_9WebStringERKNS_16StringConstraintE(%"class.blink::WebString"* dereferenceable(8), %"class.blink::StringConstraint"* dereferenceable(56)) local_unnamed_addr #2

declare double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double, double) local_unnamed_addr #2

declare void @_ZN5blink31SelectVideoTrackAdapterSettingsERKNS_31MediaTrackConstraintSetPlatformERKNS_17media_constraints13ResolutionSetERKNS3_15NumericRangeSetIdEERKN5media18VideoCaptureFormatEb(%"class.blink::VideoTrackAdapterSettings"* sret, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856), %"class.blink::media_constraints::ResolutionSet"* dereferenceable(32), %"class.blink::media_constraints::NumericRangeSet"* dereferenceable(32), %"struct.media::VideoCaptureFormat"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare dereferenceable(40) %"class.blink::VideoTrackAdapterSettings"* @_ZN5blink25VideoTrackAdapterSettingsaSERKS0_(%"class.blink::VideoTrackAdapterSettings"*, %"class.blink::VideoTrackAdapterSettings"* dereferenceable(40)) local_unnamed_addr #2

declare dereferenceable(16) %"class.WTF::Vector.31"* @_ZNK5blink16StringConstraint5IdealEv(%"class.blink::StringConstraint"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare double @_ZN5blink17media_constraints13ResolutionSet5Point23SquareEuclideanDistanceERKS2_S4_(%"class.blink::media_constraints::ResolutionSet::Point"* dereferenceable(16), %"class.blink::media_constraints::ResolutionSet::Point"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink17media_constraints13ResolutionSet5PointC1Edd(%"class.blink::media_constraints::ResolutionSet::Point"*, double, double) unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"struct.blink::VideoInputDeviceCapabilities"* @_ZNK3WTF6VectorIN5blink28VideoInputDeviceCapabilitiesELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::VideoInputDeviceCapabilities"*, %"struct.blink::VideoInputDeviceCapabilities"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::VideoInputDeviceCapabilities", %"struct.blink::VideoInputDeviceCapabilities"* %24, i64 %25
  ret %"struct.blink::VideoInputDeviceCapabilities"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, double*, double*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint double* %2 to i64
  %5 = ptrtoint double* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast double** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to double*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast double** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds double, double* %1, i64 %22
  %25 = select i1 %23, double* %24, double* %2
  %26 = ptrtoint double* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast double* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #14
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast double* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #14
  %42 = inttoptr i64 %35 to double*
  %43 = getelementptr inbounds double, double* %42, i64 %39
  %44 = ptrtoint double* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds double, double* %16, i64 %28
  store double* %48, double** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast double** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #14
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #17
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #17
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #15
  %75 = bitcast i8* %74 to double*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast double** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds double, double* %75, i64 %72
  store double* %79, double** %8, align 8
  %80 = bitcast double** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast double* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #14
  %86 = getelementptr inbounds double, double* %75, i64 %84
  %87 = ptrtoint double* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !9, !5}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_: argument 0"}
!12 = distinct !{!12, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_: argument 0"}
!15 = distinct !{!15, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_: argument 0"}
!18 = distinct !{!18, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_"}
!19 = !{i8 0, i8 2}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN5blink21GetVideoKindForFormatERKN5media18VideoCaptureFormatE: argument 0"}
!22 = distinct !{!22, !"_ZN5blink21GetVideoKindForFormatERKN5media18VideoCaptureFormatE"}
!23 = distinct !{!23, !24, !"_ZNK5blink12_GLOBAL__N_115CandidateFormat9VideoKindEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink12_GLOBAL__N_115CandidateFormat9VideoKindEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink12_GLOBAL__N_114PTZDeviceState12IntersectionERKNS_31MediaTrackConstraintSetPlatformE"}
!28 = !{!29, !26}
!29 = distinct !{!29, !30, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_: argument 0"}
!30 = distinct !{!30, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_"}
!31 = !{!32, !26}
!32 = distinct !{!32, !33, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_"}
!34 = !{!35, !26}
!35 = distinct !{!35, !36, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_: argument 0"}
!36 = distinct !{!36, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_"}
!37 = !{!38, !26}
!38 = distinct !{!38, !39, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_"}
!40 = !{!41, !26}
!41 = distinct !{!41, !42, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_: argument 0"}
!42 = distinct !{!42, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_"}
!43 = !{!44, !26}
!44 = distinct !{!44, !45, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_: argument 0"}
!45 = distinct !{!45, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN5blink21GetVideoKindForFormatERKN5media18VideoCaptureFormatE: argument 0"}
!48 = distinct !{!48, !"_ZN5blink21GetVideoKindForFormatERKN5media18VideoCaptureFormatE"}
!49 = distinct !{!49, !50, !"_ZNK5blink12_GLOBAL__N_115CandidateFormat9VideoKindEv: argument 0"}
!50 = distinct !{!50, !"_ZNK5blink12_GLOBAL__N_115CandidateFormat9VideoKindEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_: argument 0"}
!53 = distinct !{!53, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_: argument 0"}
!56 = distinct !{!56, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN5blink17media_constraints11DiscreteSetIbE8EmptySetEv: argument 0"}
!59 = distinct !{!59, !"_ZN5blink17media_constraints11DiscreteSetIbE8EmptySetEv"}
