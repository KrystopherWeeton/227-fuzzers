; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/ResourceVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/ResourceVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::Serial" = type { i64 }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.564" }
%"class.std::__1::vector.564" = type { %"class.std::__1::__vector_base.565" }
%"class.std::__1::__vector_base.565" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.566" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.rx::vk::GarbageObject"* }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.732" }
%"class.std::__1::vector.732" = type { %"class.std::__1::__vector_base.733" }
%"class.std::__1::__vector_base.733" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.442", %"struct.std::__1::array.443", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.467", %"class.angle::BitSetT.460", %"class.angle::PackedEnumMap.473", %"class.angle::PackedEnumMap.489", %"class.angle::PackedEnumMap.506", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.516", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.522", %"struct.std::__1::array.556", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.561", %"class.angle::BitSetT.164", %"struct.std::__1::array.562", %"class.rx::vk::CommandPool", %"class.std::__1::vector.564", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.709", %"class.std::__1::vector.717", i8, i8, i8, %"class.std::__1::vector.724", %"class.std::__1::vector", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.166", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.739", %"class.std::__1::vector.746", %"class.std::__1::vector.753", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.130", %"class.std::__1::vector.130" }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.62", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer", %"class.gl::Program"*, %"class.gl::BindingPointer.239", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.251", %"class.gl::VertexArray"*, %"class.angle::BitSetT.70", i64, %"class.angle::PackedEnumMap.294", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.72", %"class.angle::BitSetArray", %"class.std::__1::vector.322", %"class.std::__1::vector.333", %"class.angle::PackedEnumMap.340", %"class.angle::PackedEnumMap.344", %"class.std::__1::vector.346", %"class.std::__1::vector.346", %"class.std::__1::vector.346", %"class.angle::BitSetArray.353", %"class.angle::BitSetT.354", %"class.angle::BitSetT.166", %"class.gl::BindingPointer.355", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.382", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.166", %"class.angle::BitSetT.441", [4 x i8], %"class.angle::BitSetT.71", %"class.angle::BitSetT.164", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT", %"class.angle::BitSetT", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.47", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.49", %"struct.std::__1::array.49", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.44", i32 }
%"struct.std::__1::array.44" = type { [2 x i32] }
%"class.angle::PackedEnumMap.45" = type { %"struct.std::__1::array.46" }
%"struct.std::__1::array.46" = type { [6 x i32] }
%"class.angle::PackedEnumMap.47" = type { %"struct.std::__1::array.48" }
%"struct.std::__1::array.48" = type { [6 x i64] }
%"struct.std::__1::array.49" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.50" }
%"class.angle::PackedEnumMap.50" = type { %"struct.std::__1::array.51" }
%"struct.std::__1::array.51" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.52" }
%"class.std::__1::set.52" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type opaque
%"class.gl::ShaderProgramManager" = type opaque
%"class.gl::TextureManager" = type opaque
%"class.gl::RenderbufferManager" = type opaque
%"class.gl::SamplerManager" = type opaque
%"class.gl::SyncManager" = type opaque
%"class.gl::FramebufferManager" = type opaque
%"class.gl::ProgramPipelineManager" = type opaque
%"class.gl::MemoryObjectManager" = type opaque
%"class.gl::SemaphoreManager" = type opaque
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT", %"class.angle::BitSetT", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.62" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional, %"class.std::__1::vector.72", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.79", %"class.angle::BitSetT", %struct.Optional.80 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.63", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT", %"class.std::__1::vector", i32, %"class.angle::BitSetT", %"class.angle::BitSetT.70", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.71", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.angle::BitSetT.79" = type { i64 }
%struct.Optional.80 = type { i8, %"class.angle::BitSetT.79" }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.81" }
%"class.angle::BindingPointer.81" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"struct.gl::RenderbufferID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.233", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.199" }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.82", i32, %"class.std::__1::vector.130", %"class.std::__1::vector.137", %"class.std::__1::vector.144", %"class.gl::Range", %"class.angle::BitSetT", %"class.std::__1::vector", %"class.angle::BitSetT.70", i8, i8, i8, i8, %"class.angle::BitSetT.98", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap.82" = type { %"struct.std::__1::array.83" }
%"struct.std::__1::array.83" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.101", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer.107", %"class.std::__1::unique_ptr.124", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.84", %"class.std::__1::vector.84", %"class.std::__1::vector.84", %"class.std::__1::vector.91", %"class.std::__1::vector.91", %"class.std::__1::vector.84", %"class.std::__1::vector.84", %"class.std::__1::vector.84", i8, [3 x i8], %"class.angle::BitSetT.98", i32, %struct.Optional.99, %struct.Optional.99, %struct.Optional.100, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.93" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.84" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.86" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.84", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional.99 = type { i8, i8 }
%struct.Optional.100 = type { i8, i32 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"class.gl::BindingPointer.107" = type { %"class.angle::BindingPointer.108" }
%"class.angle::BindingPointer.108" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.109", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.115" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.49", %"struct.std::__1::array.49", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.115" = type { %"struct.std::__1::array.116" }
%"struct.std::__1::array.116" = type { [6 x %"class.std::__1::vector.117"] }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.119" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.139" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.147" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.146" }>
%"class.angle::BitSetT.146" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.98" = type { i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.224" }
%"class.absl::flat_hash_map.224" = type { %"class.absl::container_internal::raw_hash_map.225" }
%"class.absl::container_internal::raw_hash_map.225" = type { %"class.absl::container_internal::raw_hash_set.226" }
%"class.absl::container_internal::raw_hash_set.226" = type { i8*, %"union.absl::container_internal::map_slot_type.227"*, i64, i64, %"class.absl::container_internal::CompressedTuple.228" }
%"union.absl::container_internal::map_slot_type.227" = type opaque
%"class.absl::container_internal::CompressedTuple.228" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.229" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.229" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.angle::BitSetT.199" = type { i64 }
%"class.gl::BindingPointer.239" = type { %"class.angle::BindingPointer.240" }
%"class.angle::BindingPointer.240" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.242", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.243", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.72", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.242" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.249", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.249" = type { %"struct.std::__1::array.250" }
%"struct.std::__1::array.250" = type { [6 x %"class.gl::Program"*] }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.146", %"class.angle::BitSetT.146", [6 x i8], %"class.angle::BitSetT.164", i32, [4 x i8], %"class.angle::BitSetT.70", %"class.angle::BitSetT.164", %"class.angle::BitSetArray", %"struct.std::__1::array.167", %"struct.std::__1::array.168", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.170", i8, [7 x i8], %"class.std::__1::vector.84", %"class.std::__1::vector.137", %"class.std::__1::vector.137", i8, [7 x i8], %"class.std::__1::vector.84", %"class.std::__1::vector.171", %"class.std::__1::vector.178", i32, [4 x i8], %"class.std::__1::vector.185", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.192", %"class.angle::BitSetT.199", %"class.std::__1::vector.200", %"class.gl::Range", %"class.std::__1::vector.192", %"class.std::__1::vector.192", %"class.gl::Range", %"class.std::__1::vector.207", %"class.std::__1::vector.214", %"class.std::__1::vector.214", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.221", %"class.angle::PackedEnumMap.221", %"class.angle::PackedEnumMap.45", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.223, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.167" = type { [96 x i32] }
%"struct.std::__1::array.168" = type { [96 x i8] }
%"struct.std::__1::array.169" = type { [96 x i8] }
%"struct.std::__1::array.170" = type { [96 x %"class.angle::BitSetT.146"] }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.173" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { i32*, i32*, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { i32* }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.187" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.202" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.194" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.209" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.216" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.221" = type { %"struct.std::__1::array.222" }
%"struct.std::__1::array.222" = type { [6 x %"class.std::__1::vector.84"] }
%struct.Optional.223 = type { i8, i8 }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.254" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.253, i32 }
%union.anon.253 = type { [4 x float] }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.288", %"struct.std::__1::array.289", %"struct.std::__1::array.291", %struct.Optional.293, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.72", %"class.angle::BitSetT.164", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.259", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.281", %"class.angle::BitSetT.164", %"class.angle::BitSetT.70", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164" }
%"class.std::__1::vector.259" = type { %"class.std::__1::__vector_base.260" }
%"class.std::__1::__vector_base.260" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.261" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.266", %"class.angle::ObserverBindingBase" }
%"class.gl::BindingPointer.266" = type { %"class.angle::BindingPointer.267" }
%"class.angle::BindingPointer.267" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.269", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.269" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map.270" }
%"class.std::__1::map.270" = type { %"class.std::__1::__tree.271" }
%"class.std::__1::__tree.271" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.283" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.266", %"class.angle::BitSetT.164" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.288" = type { i64 }
%"struct.std::__1::array.289" = type { [16 x %"class.angle::BitSetT.290"] }
%"class.angle::BitSetT.290" = type { i64 }
%"struct.std::__1::array.291" = type { [16 x %"class.angle::BitSetT.292"] }
%"class.angle::BitSetT.292" = type { i64 }
%struct.Optional.293 = type { i8, %"class.angle::BitSetT.288" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.70" = type { i64 }
%"class.angle::PackedEnumMap.294" = type { %"struct.std::__1::array.295" }
%"struct.std::__1::array.295" = type { [11 x %"class.std::__1::vector.296"] }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.gl::BindingPointer.298"*, %"class.gl::BindingPointer.298"*, %"class.std::__1::__compressed_pair.316" }
%"class.gl::BindingPointer.298" = type { %"class.angle::BindingPointer.299" }
%"class.angle::BindingPointer.299" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.301", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.312", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.314", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.301" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.305", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.302, i8, [3 x i8] }>
%union.anon.302 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.307" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.266", i64, i64 }
%"class.angle::BitSetT.312" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.313", i32, i32 }
%"class.egl::Display" = type opaque
%"class.rx::StreamProducerImpl" = type opaque
%"class.gl::Context" = type opaque
%"struct.std::__1::array.313" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.314" = type { %"struct.std::__1::array.315", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.315" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.gl::BindingPointer.298"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.321" }
%"struct.std::__1::array.321" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.angle::ObserverBinding"* }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"class.gl::BindingPointer.324"*, %"class.gl::BindingPointer.324"*, %"class.std::__1::__compressed_pair.328" }
%"class.gl::BindingPointer.324" = type { %"class.angle::BindingPointer.325" }
%"class.angle::BindingPointer.325" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.327", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.327" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.gl::BindingPointer.324"* }
%"class.std::__1::vector.333" = type { %"class.std::__1::__vector_base.334" }
%"class.std::__1::__vector_base.334" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.335" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.298", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.340" = type { %"struct.std::__1::array.341" }
%"struct.std::__1::array.341" = type { [7 x %"class.gl::BindingPointer.342"] }
%"class.gl::BindingPointer.342" = type { %"class.angle::BindingPointer.343" }
%"class.angle::BindingPointer.343" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.344" = type { %"struct.std::__1::array.345" }
%"struct.std::__1::array.345" = type { [13 x %"class.gl::BindingPointer.266"] }
%"class.std::__1::vector.346" = type { %"class.std::__1::__vector_base.347" }
%"class.std::__1::__vector_base.347" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.353" = type { %"struct.std::__1::array.165" }
%"struct.std::__1::array.165" = type { [2 x %"class.angle::BitSetT.166"] }
%"class.angle::BitSetT.354" = type { i64 }
%"class.gl::BindingPointer.355" = type { %"class.angle::BindingPointer.356" }
%"class.angle::BindingPointer.356" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.358", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.358" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.346" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.368" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.364" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.359" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.368" = type { %"class.std::__1::__vector_base.369" }
%"class.std::__1::__vector_base.369" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.377" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.370" }
%"class.std::__1::vector.370" = type { %"class.std::__1::__vector_base.371" }
%"class.std::__1::__vector_base.371" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.372" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.382" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.164", %"class.std::__1::vector.383", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.391", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.396", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.411", %"class.std::__1::vector.418", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.425", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.434", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.383" = type { %"class.std::__1::__vector_base.384" }
%"class.std::__1::__vector_base.384" = type { %"class.angle::BitSetT.385"*, %"class.angle::BitSetT.385"*, %"class.std::__1::__compressed_pair.386" }
%"class.angle::BitSetT.385" = type opaque
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.angle::BitSetT.385"* }
%"class.std::__1::vector.391" = type { i64*, i64, %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.396" = type { %"class.std::__1::__vector_base.397" }
%"class.std::__1::__vector_base.397" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.398" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.403", i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.404", i32, i32 }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { float*, float*, %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { float* }
%"class.std::__1::vector.411" = type { %"class.std::__1::__vector_base.412" }
%"class.std::__1::__vector_base.412" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.420" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.425" = type { %"class.std::__1::__vector_base.426" }
%"class.std::__1::__vector_base.426" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.427", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.427" = type { %"class.angle::VectorBase.428" }
%"class.angle::VectorBase.428" = type { [4 x float] }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.434" = type { %"class.std::__1::__vector_base.435" }
%"class.std::__1::__vector_base.435" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.436" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.427" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.441" = type { i32 }
%"class.angle::BitSetT.71" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.165" }
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.angle::BitSetT" = type { i8 }
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::ErrorSet" = type opaque
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.844", %"class.angle::PackedEnumMap.851", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.853", i8, %"class.std::__1::mutex", %"class.std::__1::vector.855", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.864", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.866", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.913", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.1062", i32, %"class.std::__1::shared_ptr.1064" }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.843", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.832" }
%"class.std::__1::map.832" = type { %"class.std::__1::__tree.833" }
%"class.std::__1::__tree.833" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.834", %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.843" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.846" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.851" = type { %"struct.std::__1::array.852" }
%"struct.std::__1::array.852" = type { [3 x i8] }
%struct.VkDevice_T = type opaque
%"class.rx::SerialFactoryBase.853" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.854" }
%"struct.std::__1::__atomic_base.854" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.862" }
%"struct.std::__1::array.862" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.863" }
%"class.rx::vk::WrappedObject.863" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.864" = type { %"struct.std::__1::array.865" }
%"struct.std::__1::array.865" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.std::__1::deque.866" = type { %"class.std::__1::__deque_base.867" }
%"class.std::__1::__deque_base.867" = type { %"struct.std::__1::__split_buffer.868", i64, %"class.std::__1::__compressed_pair.875" }
%"struct.std::__1::__split_buffer.868" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.870" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.869" }
%"class.rx::vk::WrappedObject.869" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.879", %"class.std::__1::vector.887", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.853", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.903", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.879" = type { %"class.std::__1::__vector_base.880" }
%"class.std::__1::__vector_base.880" = type { %"class.rx::vk::ObjectAndSerial.881"*, %"class.rx::vk::ObjectAndSerial.881"*, %"class.std::__1::__compressed_pair.882" }
%"class.rx::vk::ObjectAndSerial.881" = type opaque
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.rx::vk::ObjectAndSerial.881"* }
%"class.std::__1::vector.887" = type { %"class.std::__1::__vector_base.888" }
%"class.std::__1::__vector_base.888" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.891" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared.889", %"class.rx::Serial" }
%"class.rx::vk::Shared.889" = type { %"class.rx::vk::RefCounted.890"* }
%"class.rx::vk::RefCounted.890" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.907" }
%"class.rx::vk::WrappedObject.907" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.896", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.896" = type { %"class.std::__1::__vector_base.897" }
%"class.std::__1::__vector_base.897" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.903" = type { %"struct.std::__1::array.904" }
%"struct.std::__1::array.904" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.905" }
%"class.std::__1::vector.905" = type { %"class.std::__1::__vector_base.906" }
%"class.std::__1::__vector_base.906" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.913" = type { %"class.std::__1::__vector_base.914" }
%"class.std::__1::__vector_base.914" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.945", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.958", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.920" }
%"class.std::__1::deque.920" = type { %"class.std::__1::__deque_base.921" }
%"class.std::__1::__deque_base.921" = type { %"struct.std::__1::__split_buffer.922", i64, %"class.std::__1::__compressed_pair.937" }
%"struct.std::__1::__split_buffer.922" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.932" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.724", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.564", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.925", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.923" }
%"class.rx::vk::WrappedObject.923" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.924" }
%"class.rx::vk::WrappedObject.924" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.925" = type { %"class.std::__1::__vector_base.926" }
%"class.std::__1::__vector_base.926" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.945" = type { %"class.std::__1::deque.946" }
%"class.std::__1::deque.946" = type { %"class.std::__1::__deque_base.947" }
%"class.std::__1::__deque_base.947" = type { %"struct.std::__1::__split_buffer.948", i64, %"class.std::__1::__compressed_pair.954" }
%"struct.std::__1::__split_buffer.948" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.949" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.941, %union.anon.943, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.941 = type { i64 }
%union.anon.943 = type { i64 }
%"class.std::__1::map.958" = type { %"class.std::__1::__tree.959" }
%"class.std::__1::__tree.959" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.969" }
%"class.rx::vk::WrappedObject.969" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats.970", %"class.std::__1::unordered_map.971" }
%"class.rx::HasCacheStats.970" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map.971" = type { %"class.std::__1::__hash_table.972" }
%"class.std::__1::__hash_table.972" = type <{ %"class.std::__1::unique_ptr.973", %"class.std::__1::__compressed_pair.983", %"class.std::__1::__compressed_pair.988", %"class.std::__1::__compressed_pair.992", [4 x i8] }>
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975", %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"struct.std::__1::__hash_node_base.976"** }
%"struct.std::__1::__hash_node_base.976" = type { %"struct.std::__1::__hash_node_base.976"* }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.std::__1::__bucket_list_deallocator.978" }
%"class.std::__1::__bucket_list_deallocator.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"struct.std::__1::__hash_node_base.976" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.998", %"class.std::__1::unordered_map.999" }
%"class.rx::HasCacheStats.998" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.999" = type { %"class.std::__1::__hash_table.1000" }
%"class.std::__1::__hash_table.1000" = type <{ %"class.std::__1::unique_ptr.1001", %"class.std::__1::__compressed_pair.1011", %"class.std::__1::__compressed_pair.1016", %"class.std::__1::__compressed_pair.1021", [4 x i8] }>
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003", %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::__hash_node_base.1004"** }
%"struct.std::__1::__hash_node_base.1004" = type { %"struct.std::__1::__hash_node_base.1004"* }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"class.std::__1::__bucket_list_deallocator.1006" }
%"class.std::__1::__bucket_list_deallocator.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.std::__1::__hash_node_base.1004" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.1027", %"class.angle::PackedEnumMap.1027" }
%"class.angle::PackedEnumMap.1027" = type { %"struct.std::__1::array.1028" }
%"struct.std::__1::array.1028" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.1029" }
%"struct.std::__1::atomic.1029" = type { %"struct.std::__1::__atomic_base.1030" }
%"struct.std::__1::__atomic_base.1030" = type { %"struct.std::__1::__atomic_base.1031" }
%"struct.std::__1::__atomic_base.1031" = type { %"struct.std::__1::__cxx_atomic_impl.1032" }
%"struct.std::__1::__cxx_atomic_impl.1032" = type { %"struct.std::__1::__cxx_atomic_base_impl.1033" }
%"struct.std::__1::__cxx_atomic_base_impl.1033" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.1034", i64, i64, %"class.absl::flat_hash_map.1049" }
%"class.absl::flat_hash_map.1034" = type { %"class.absl::container_internal::raw_hash_map.1035" }
%"class.absl::container_internal::raw_hash_map.1035" = type { %"class.absl::container_internal::raw_hash_set.1036" }
%"class.absl::container_internal::raw_hash_set.1036" = type { i8*, %"union.absl::container_internal::map_slot_type.1037"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1038" }
%"union.absl::container_internal::map_slot_type.1037" = type opaque
%"class.absl::container_internal::CompressedTuple.1038" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1039" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1039" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.1049" = type { %"class.absl::container_internal::raw_hash_map.1050" }
%"class.absl::container_internal::raw_hash_map.1050" = type { %"class.absl::container_internal::raw_hash_set.1051" }
%"class.absl::container_internal::raw_hash_set.1051" = type { i8*, %"union.absl::container_internal::map_slot_type.1052"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1053" }
%"union.absl::container_internal::map_slot_type.1052" = type opaque
%"class.absl::container_internal::CompressedTuple.1053" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1054" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1054" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.1062" = type { %"struct.std::__1::array.1063" }
%"struct.std::__1::array.1063" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.1064" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.1065" }
%"class.std::__1::shared_ptr.1065" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.1066" }
%"class.std::__1::shared_ptr.1066" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.442" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.443" = type { [16 x { i64, i64 }] }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.444", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.444" = type { %"class.std::__1::__vector_base.445" }
%"class.std::__1::__vector_base.445" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.446" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.451", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.451" = type { %"class.std::__1::__vector_base.452" }
%"class.std::__1::__vector_base.452" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.453" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.458", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.462" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.460", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT", %"class.angle::BitSetT", %"struct.std::__1::array.461" }
%"struct.std::__1::array.461" = type { [9 x i8] }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%"class.rx::vk::ObjectAndSerial" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.460" = type { i64 }
%"class.angle::PackedEnumMap.473" = type { %"struct.std::__1::array.474" }
%"struct.std::__1::array.474" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.475", %"class.std::__1::vector.482", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"class.rx::vk::RefCounted"**, %"class.rx::vk::RefCounted"**, %"class.std::__1::__compressed_pair.477" }
%"class.rx::vk::RefCounted" = type opaque
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.rx::vk::RefCounted"** }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.484" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorSetLayout_T = type opaque
%"class.angle::PackedEnumMap.489" = type { %"struct.std::__1::array.490" }
%"struct.std::__1::array.490" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.506" = type { %"struct.std::__1::array.507" }
%"struct.std::__1::array.507" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared", %"class.std::__1::vector.509", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted.508"* }
%"class.rx::vk::RefCounted.508" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.509" = type { %"class.std::__1::__vector_base.510" }
%"class.std::__1::__vector_base.510" = type { %"class.rx::vk::Shared"*, %"class.rx::vk::Shared"*, %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.rx::vk::Shared"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::FramebufferVk" = type opaque
%"class.rx::ProgramVk" = type opaque
%"class.rx::ProgramPipelineVk" = type opaque
%"class.rx::ProgramExecutableVk" = type opaque
%"class.angle::PackedEnumMap.516" = type { %"struct.std::__1::array.517" }
%"struct.std::__1::array.517" = type { [3 x i32] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.518", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.518" = type { %"struct.std::__1::array.519" }
%"struct.std::__1::array.519" = type { [4 x %"class.angle::PackedEnumMap.520"] }
%"class.angle::PackedEnumMap.520" = type { %"struct.std::__1::array.521" }
%"struct.std::__1::array.521" = type { [11 x %"class.gl::BindingPointer.298"] }
%"class.angle::PackedEnumMap.522" = type { %"struct.std::__1::array.523" }
%"struct.std::__1::array.523" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer", %"class.rx::vk::BindingPointer.541", %"class.rx::DriverUniformsDescriptorSetCache" }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.540"* }
%"class.rx::vk::RefCounted.540" = type opaque
%"class.rx::vk::BindingPointer.541" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats", %"class.angle::FastIntegerMap" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.549" }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.542" }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.angle::BitSetT.166"*, %"class.angle::BitSetT.166"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.angle::BitSetT.166"* }
%"class.std::__1::vector.549" = type { %"class.std::__1::__vector_base.550" }
%"class.std::__1::__vector_base.550" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.556" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type opaque
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.557" }
%"class.rx::vk::WrappedObject.557" = type { %struct.VkSampler_T* }
%struct.VkSampler_T = type opaque
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.558" }
%"struct.std::__1::array.558" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.559" }
%"class.angle::FastVector.559" = type { %"struct.std::__1::array.560", i32*, i64, i64 }
%"struct.std::__1::array.560" = type { [32 x i32] }
%"struct.std::__1::array.561" = type { [96 x %"class.rx::TextureVk"*] }
%"class.angle::BitSetT.164" = type { i64 }
%"struct.std::__1::array.562" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.563" }
%"class.rx::vk::WrappedObject.563" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.571", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.571" = type { %"class.absl::container_internal::raw_hash_map.572" }
%"class.absl::container_internal::raw_hash_map.572" = type { %"class.absl::container_internal::raw_hash_set.573" }
%"class.absl::container_internal::raw_hash_set.573" = type { i8*, %"union.absl::container_internal::map_slot_type.574"*, i64, i64, %"class.absl::container_internal::CompressedTuple.575" }
%"union.absl::container_internal::map_slot_type.574" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1068" }
%"class.absl::flat_hash_map.1068" = type { %"class.absl::container_internal::raw_hash_map.1069" }
%"class.absl::container_internal::raw_hash_map.1069" = type { %"class.absl::container_internal::raw_hash_set.1070" }
%"class.absl::container_internal::raw_hash_set.1070" = type { i8*, %"union.absl::container_internal::map_slot_type.1071"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1072" }
%"union.absl::container_internal::map_slot_type.1071" = type { %"struct.std::__1::pair.1084" }
%"struct.std::__1::pair.1084" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.593" }
%"struct.std::__1::array.593" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1072" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1073" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1073" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.575" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.576" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.576" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.583", %"class.angle::BitSetT.592", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.596", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap.597", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PackedEnumMap.583" = type { %"struct.std::__1::array.584" }
%"struct.std::__1::array.584" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.585" }
%"class.std::__1::vector.585" = type { %"class.std::__1::__vector_base.586" }
%"class.std::__1::__vector_base.586" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.587" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.592" = type { i16 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.594" }
%"class.rx::vk::WrappedObject.594" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.595" }
%"struct.std::__1::array.595" = type { [10 x %union.VkClearValue] }
%"struct.std::__1::array.596" = type { [4 x %struct.VkBuffer_T*] }
%struct.VkBuffer_T = type opaque
%"class.angle::FastIntegerMap.597" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.598" }
%"class.std::__1::vector.598" = type { %"class.std::__1::__vector_base.599" }
%"class.std::__1::__vector_base.599" = type { i32*, i32*, %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { i32* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.619" }
%"struct.std::__1::array.619" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.606", [6 x i8], %"class.rx::vk::BindingPointer.607", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.609", %struct.Optional.617, %"struct.std::__1::array.618", %"struct.std::__1::array.618", [4 x i8] }>
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.605" }
%"class.rx::vk::WrappedObject.605" = type { %struct.VkImage_T* }
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.529" }
%"class.rx::vk::WrappedObject.529" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.606" = type { i16 }
%"class.rx::vk::BindingPointer.607" = type { %"class.rx::vk::RefCounted.608"* }
%"class.rx::vk::RefCounted.608" = type opaque
%"class.std::__1::vector.609" = type { %"class.std::__1::__vector_base.610" }
%"class.std::__1::__vector_base.610" = type { %"class.std::__1::vector.611"*, %"class.std::__1::vector.611"*, %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::vector.611" = type opaque
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.std::__1::vector.611"* }
%struct.Optional.617 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.618" = type { [16 x %"class.angle::BitSetT"] }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.620" }
%"class.angle::FastVector.620" = type { %"struct.std::__1::array.621", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.621" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.622"], [4 x %"class.rx::vk::RefCounted.622"], [4 x %"class.rx::vk::RefCounted.622"], [3 x %"class.rx::vk::RefCounted.622"], [1 x %"class.rx::vk::RefCounted.622"], [8 x %"class.rx::vk::RefCounted.622"], [1 x %"class.rx::vk::RefCounted.622"], [10 x %"class.rx::vk::RefCounted.622"], [48 x %"class.rx::vk::RefCounted.622"], [43 x %"class.rx::vk::RefCounted.622"], [6 x %"class.rx::vk::RefCounted.622"], [2 x %"class.rx::vk::RefCounted.622"] }
%"class.rx::vk::RefCounted.622" = type { i32, %"class.rx::vk::ObjectAndSerial.623" }
%"class.rx::vk::ObjectAndSerial.623" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.624" }
%"class.rx::vk::WrappedObject.624" = type { %struct.VkShaderModule_T* }
%struct.VkShaderModule_T = type opaque
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.625", %"class.angle::PackedEnumMap.629", %"class.angle::PackedEnumMap.633", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.659", %"class.std::__1::unordered_map.685", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.625" = type { %"struct.std::__1::array.626" }
%"struct.std::__1::array.626" = type { [22 x %"class.angle::PackedEnumMap.627"] }
%"class.angle::PackedEnumMap.627" = type { %"struct.std::__1::array.628" }
%"struct.std::__1::array.628" = type { [4 x %"class.rx::vk::BindingPointer"] }
%"class.angle::PackedEnumMap.629" = type { %"struct.std::__1::array.630" }
%"struct.std::__1::array.630" = type { [22 x %"class.rx::vk::BindingPointer.631"] }
%"class.rx::vk::BindingPointer.631" = type { %"class.rx::vk::RefCounted.632"* }
%"class.rx::vk::RefCounted.632" = type opaque
%"class.angle::PackedEnumMap.633" = type { %"struct.std::__1::array.634" }
%"struct.std::__1::array.634" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.635", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.635" = type { %"struct.std::__1::array.636" }
%"struct.std::__1::array.636" = type { [6 x %"class.rx::vk::BindingPointer.637"] }
%"class.rx::vk::BindingPointer.637" = type { %"class.rx::vk::RefCounted.622"* }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.638", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats.638" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.639", %"class.std::__1::__compressed_pair.647", %"class.std::__1::__compressed_pair.652", %"class.std::__1::__compressed_pair.654", [4 x i8] }>
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641", %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.std::__1::unordered_map.659" = type { %"class.std::__1::__hash_table.660" }
%"class.std::__1::__hash_table.660" = type <{ %"class.std::__1::unique_ptr.661", %"class.std::__1::__compressed_pair.671", %"class.std::__1::__compressed_pair.676", %"class.std::__1::__compressed_pair.680", [4 x i8] }>
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663", %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"struct.std::__1::__hash_node_base.664"** }
%"struct.std::__1::__hash_node_base.664" = type { %"struct.std::__1::__hash_node_base.664"* }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.std::__1::__bucket_list_deallocator.666" }
%"class.std::__1::__bucket_list_deallocator.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"struct.std::__1::__hash_node_base.664" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"class.std::__1::unordered_map.685" = type { %"class.std::__1::__hash_table.686" }
%"class.std::__1::__hash_table.686" = type <{ %"class.std::__1::unique_ptr.687", %"class.std::__1::__compressed_pair.697", %"class.std::__1::__compressed_pair.702", %"class.std::__1::__compressed_pair.705", [4 x i8] }>
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689", %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"struct.std::__1::__hash_node_base.690"** }
%"struct.std::__1::__hash_node_base.690" = type { %"struct.std::__1::__hash_node_base.690"* }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.std::__1::__bucket_list_deallocator.692" }
%"class.std::__1::__bucket_list_deallocator.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.std::__1::__hash_node_base.690" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.491", %"class.std::__1::vector.499", i64, i32 }>
%"class.std::__1::vector.491" = type { %"class.std::__1::__vector_base.492" }
%"class.std::__1::__vector_base.492" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.494" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.493" }
%"class.rx::vk::WrappedObject.493" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.499" = type { %"class.std::__1::__vector_base.500" }
%"class.std::__1::__vector_base.500" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.501" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.709" = type { %"class.std::__1::__vector_base.710" }
%"class.std::__1::__vector_base.710" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.712" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.711", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.711" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.717" = type { %"class.std::__1::__vector_base.718" }
%"class.std::__1::__vector_base.718" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.719" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.711", i8 }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"class.std::__1::vector.724" = type { %"class.std::__1::__vector_base.725" }
%"class.std::__1::__vector_base.725" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %struct.VkSemaphore_T** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i32* }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.731" }
%"class.angle::PackedEnumMap.731" = type { %"struct.std::__1::array.62" }
%"class.angle::BitSetT.166" = type { i64 }
%"class.std::__1::vector.739" = type { %"class.std::__1::__vector_base.740" }
%"class.std::__1::__vector_base.740" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.741" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.746" = type { %"class.std::__1::__vector_base.747" }
%"class.std::__1::__vector_base.747" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.748" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.753" = type { %"class.std::__1::__vector_base.754" }
%"class.std::__1::__vector_base.754" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.755" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.815", %"class.std::__1::vector.825", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.760", %"class.std::__1::unordered_map.761" }
%"class.rx::HasCacheStats.760" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.761" = type { %"class.std::__1::__hash_table.762" }
%"class.std::__1::__hash_table.762" = type <{ %"class.std::__1::unique_ptr.763", %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.778", %"class.std::__1::__compressed_pair.782", [4 x i8] }>
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765", %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.std::__1::__hash_node_base.766"** }
%"struct.std::__1::__hash_node_base.766" = type { %"struct.std::__1::__hash_node_base.766"* }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.std::__1::__bucket_list_deallocator.768" }
%"class.std::__1::__bucket_list_deallocator.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"struct.std::__1::__hash_node_base.766" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.788", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.788" = type { %"class.std::__1::__hash_table.789" }
%"class.std::__1::__hash_table.789" = type <{ %"class.std::__1::unique_ptr.790", %"class.std::__1::__compressed_pair.800", %"class.std::__1::__compressed_pair.805", %"class.std::__1::__compressed_pair.809", [4 x i8] }>
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792", %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::__hash_node_base.793"** }
%"struct.std::__1::__hash_node_base.793" = type { %"struct.std::__1::__hash_node_base.793"* }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.std::__1::__bucket_list_deallocator.795" }
%"class.std::__1::__bucket_list_deallocator.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"struct.std::__1::__hash_node_base.793" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"class.std::__1::set.815" = type { %"class.std::__1::__tree.816" }
%"class.std::__1::__tree.816" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.817", %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.rx::vk::ResourceUseList"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.527" }
%"class.rx::vk::WrappedObject.527" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.528" }
%"class.rx::vk::WrappedObject.528" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.524", i32, i32, i64, i64, i32, %"class.std::__1::vector.533", %"class.std::__1::vector.533" }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.rx::vk::BufferHelper"* }
%"class.std::__1::vector.533" = type { %"class.std::__1::__vector_base.534" }
%"class.std::__1::__vector_base.534" = type { %"class.std::__1::unique_ptr.524"*, %"class.std::__1::unique_ptr.524"*, %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.std::__1::unique_ptr.524"* }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.std::__1::basic_string"* }

@_ZTVN2rx2vk8ResourceE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::vk::Resource"*)* @_ZN2rx2vk8ResourceD2Ev to i8*), i8* bitcast (void (%"class.rx::vk::Resource"*)* @_ZN2rx2vk8ResourceD0Ev to i8*)] }, align 8
@_ZZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKcE12sRepeatCount = internal global i32 0, align 4
@_ZTVN2rx2vk15ResourceUseListE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::vk::ResourceUseList"*)* @_ZN2rx2vk15ResourceUseListD2Ev to i8*), i8* bitcast (void (%"class.rx::vk::ResourceUseList"*)* @_ZN2rx2vk15ResourceUseListD0Ev to i8*)] }, align 8

@_ZN2rx2vk8ResourceC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::Resource"*), void (%"class.rx::vk::Resource"*)* @_ZN2rx2vk8ResourceC2Ev
@_ZN2rx2vk8ResourceC1EOS1_ = hidden unnamed_addr alias void (%"class.rx::vk::Resource"*, %"class.rx::vk::Resource"*), void (%"class.rx::vk::Resource"*, %"class.rx::vk::Resource"*)* @_ZN2rx2vk8ResourceC2EOS1_
@_ZN2rx2vk8ResourceD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::Resource"*), void (%"class.rx::vk::Resource"*)* @_ZN2rx2vk8ResourceD2Ev
@_ZN2rx2vk13SharedGarbageC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::SharedGarbage"*), void (%"class.rx::vk::SharedGarbage"*)* @_ZN2rx2vk13SharedGarbageC2Ev
@_ZN2rx2vk13SharedGarbageC1EOS1_ = hidden unnamed_addr alias void (%"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*), void (%"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*)* @_ZN2rx2vk13SharedGarbageC2EOS1_
@_ZN2rx2vk13SharedGarbageC1EONS0_17SharedResourceUseEONSt3__16vectorINS0_13GarbageObjectENS4_9allocatorIS6_EEEE = hidden unnamed_addr alias void (%"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::vector.564"*), void (%"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::vector.564"*)* @_ZN2rx2vk13SharedGarbageC2EONS0_17SharedResourceUseEONSt3__16vectorINS0_13GarbageObjectENS4_9allocatorIS6_EEEE
@_ZN2rx2vk13SharedGarbageD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::SharedGarbage"*), void (%"class.rx::vk::SharedGarbage"*)* @_ZN2rx2vk13SharedGarbageD2Ev
@_ZN2rx2vk15ResourceUseListC1Ev = hidden unnamed_addr alias void (%"class.rx::vk::ResourceUseList"*), void (%"class.rx::vk::ResourceUseList"*)* @_ZN2rx2vk15ResourceUseListC2Ev
@_ZN2rx2vk15ResourceUseListC1EOS1_ = hidden unnamed_addr alias void (%"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*), void (%"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*)* @_ZN2rx2vk15ResourceUseListC2EOS1_
@_ZN2rx2vk15ResourceUseListD1Ev = hidden unnamed_addr alias void (%"class.rx::vk::ResourceUseList"*), void (%"class.rx::vk::ResourceUseList"*)* @_ZN2rx2vk15ResourceUseListD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2rx2vk8ResourceC2Ev(%"class.rx::vk::Resource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx2vk8ResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 1
  %4 = tail call i8* @_Znwm(i64 16) #8
  %5 = bitcast i8* %4 to i32*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = bitcast %"class.rx::vk::SharedResourceUse"* %3 to i8**
  store i8* %4, i8** %8, align 8
  store i32 1, i32* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2rx2vk8ResourceC2EOS1_(%"class.rx::vk::Resource"* nocapture, %"class.rx::vk::Resource"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx2vk8ResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 16) #8
  %6 = bitcast i8* %5 to i32*
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = bitcast %"class.rx::vk::SharedResourceUse"* %4 to i8**
  store i8* %5, i8** %9, align 8
  store i32 1, i32* %6, align 8
  %10 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %1, i64 0, i32 1
  %11 = bitcast %"class.rx::vk::SharedResourceUse"* %4 to i64*
  %12 = ptrtoint i8* %5 to i64
  %13 = bitcast %"class.rx::vk::SharedResourceUse"* %10 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk8ResourceD2Ev(%"class.rx::vk::Resource"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx2vk8ResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 1, i32 0
  %4 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %3, align 8
  %5 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  store i32 %7, i32* %5, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %3, align 8
  %11 = icmp eq %"struct.rx::vk::ResourceUse"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = bitcast %"struct.rx::vk::ResourceUse"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  br label %14

14:                                               ; preds = %1, %9, %12
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk8ResourceD0Ev(%"class.rx::vk::Resource"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx2vk8ResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 1, i32 0
  %4 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %3, align 8
  %5 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  store i32 %7, i32* %5, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %3, align 8
  %11 = icmp eq %"struct.rx::vk::ResourceUse"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = bitcast %"struct.rx::vk::ResourceUse"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  br label %14

14:                                               ; preds = %1, %9, %12
  %15 = bitcast %"class.rx::vk::Resource"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk8Resource21finishRunningCommandsEPNS_9ContextVkE(%"class.rx::vk::Resource"* nocapture readonly, %"class.rx::ContextVk"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 1, i32 0
  %4 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %3, align 8
  %5 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %4, i64 0, i32 1, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @_ZN2rx9ContextVk14finishToSerialENS_6SerialE(%"class.rx::ContextVk"* %1, i64 %6) #9
  ret i32 %7
}

declare i32 @_ZN2rx9ContextVk14finishToSerialENS_6SerialE(%"class.rx::ContextVk"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKc(%"class.rx::vk::Resource"* nocapture readonly, %"class.rx::ContextVk"*, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::Resource", %"class.rx::vk::Resource"* %0, i64 0, i32 1, i32 0
  %5 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %4, align 8
  %6 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN2rx9ContextVk9flushImplEPKNS_2vk9SemaphoreE(%"class.rx::ContextVk"* %1, %"class.rx::vk::Semaphore"* null) #9
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %45, label %12

12:                                               ; preds = %9, %3
  %13 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %14 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %13, align 8
  %15 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 7, i32 49, i32 4
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 66
  %20 = tail call i64 @_ZNK2rx2vk16CommandProcessor27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandProcessor"* %19) #9
  br label %25

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 62
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %22) #9
  %23 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %14, i64 0, i32 63
  %24 = tail call i64 @_ZNK2rx2vk12CommandQueue27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandQueue"* %23) #9
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %22) #9
  br label %25

25:                                               ; preds = %18, %21
  %26 = phi i64 [ %20, %18 ], [ %24, %21 ]
  %27 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %4, align 8
  %28 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %27, i64 0, i32 1, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp ugt i64 %29, %26
  br i1 %30, label %31, label %44

31:                                               ; preds = %25
  %32 = icmp eq i8* %2, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %35 = load %"class.gl::State"*, %"class.gl::State"** %34, align 8
  %36 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %35, i64 0, i32 91
  tail call void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"* %36, i32 37190, i8* nonnull %2, i32* nonnull @_ZZN2rx2vk8Resource11waitForIdleEPNS_9ContextVkEPKcE12sRepeatCount) #9
  %37 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %4, align 8
  %38 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %37, i64 0, i32 1, i32 0
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %31, %33
  %41 = phi i64 [ %29, %31 ], [ %39, %33 ]
  %42 = tail call i32 @_ZN2rx9ContextVk14finishToSerialENS_6SerialE(%"class.rx::ContextVk"* %1, i64 %41) #9
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %45, label %44

44:                                               ; preds = %40, %25
  br label %45

45:                                               ; preds = %9, %40, %44
  %46 = phi i32 [ 0, %44 ], [ 1, %40 ], [ 1, %9 ]
  ret i32 %46
}

declare i32 @_ZN2rx9ContextVk9flushImplEPKNS_2vk9SemaphoreE(%"class.rx::ContextVk"*, %"class.rx::vk::Semaphore"*) local_unnamed_addr #3

declare void @_ZNK2gl5Debug17insertPerfWarningEjPKcPj(%"class.gl::Debug"*, i32, i8*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13SharedGarbageC2Ev(%"class.rx::vk::SharedGarbage"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::vk::SharedGarbage"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13SharedGarbageC2EOS1_(%"class.rx::vk::SharedGarbage"* nocapture, %"class.rx::vk::SharedGarbage"* nocapture dereferenceable(32)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1
  %4 = bitcast %"class.rx::vk::SharedGarbage"* %0 to i64*
  %5 = bitcast %"class.rx::vk::SharedGarbage"* %1 to i64*
  %6 = bitcast %"class.rx::vk::SharedGarbage"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %8 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %1, i64 0, i32 1
  %9 = bitcast %"class.std::__1::vector.564"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.564"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  %13 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %1, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.rx::vk::GarbageObject"** %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.rx::vk::GarbageObject"** %14 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.rx::vk::GarbageObject"** %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.rx::vk::GarbageObject"** %20 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(32) %"class.rx::vk::SharedGarbage"* @_ZN2rx2vk13SharedGarbageaSEOS1_(%"class.rx::vk::SharedGarbage"* returned, %"class.rx::vk::SharedGarbage"* nocapture dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 0, i32 0
  %4 = bitcast %"class.rx::vk::SharedGarbage"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %3, align 8
  %6 = bitcast %"class.rx::vk::SharedGarbage"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %4, align 8
  store i64 %5, i64* %6, align 8
  %8 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::vector.564"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.564"* %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %1, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.rx::vk::GarbageObject"** %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.rx::vk::GarbageObject"** %15 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.rx::vk::GarbageObject"** %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.rx::vk::GarbageObject"** %21 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %22, align 8
  store i64 %23, i64* %24, align 8
  ret %"class.rx::vk::SharedGarbage"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13SharedGarbageC2EONS0_17SharedResourceUseEONSt3__16vectorINS0_13GarbageObjectENS4_9allocatorIS6_EEEE(%"class.rx::vk::SharedGarbage"* nocapture, %"class.rx::vk::SharedResourceUse"* nocapture dereferenceable(8), %"class.std::__1::vector.564"* nocapture dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %1, i64 0, i32 0
  %5 = bitcast %"class.rx::vk::SharedResourceUse"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.rx::vk::SharedGarbage"* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %4, align 8
  %8 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::vector.564"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #9
  %10 = bitcast %"class.std::__1::vector.564"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.564"* %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.564", %"class.std::__1::vector.564"* %2, i64 0, i32 0, i32 1
  %14 = bitcast %"class.rx::vk::GarbageObject"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"class.rx::vk::GarbageObject"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.564", %"class.std::__1::vector.564"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.rx::vk::GarbageObject"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.rx::vk::GarbageObject"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast %"class.std::__1::vector.564"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk13SharedGarbageD2Ev(%"class.rx::vk::SharedGarbage"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %2, align 8
  %4 = icmp eq %"class.rx::vk::GarbageObject"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.rx::vk::GarbageObject"* %3 to i64
  %7 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.rx::vk::GarbageObject"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.rx::vk::GarbageObject"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2rx2vk13SharedGarbage17destroyIfCompleteEPNS_10RendererVkENS_6SerialE(%"class.rx::vk::SharedGarbage"* nocapture, %"class.rx::RendererVk"*, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 0, i32 0
  %5 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %4, align 8
  %6 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %39, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %5, i64 0, i32 1, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %2
  br i1 %12, label %39, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %14, align 8
  %16 = getelementptr inbounds %"class.rx::vk::SharedGarbage", %"class.rx::vk::SharedGarbage"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %16, align 8
  %18 = icmp eq %"class.rx::vk::GarbageObject"* %15, %17
  br i1 %18, label %23, label %35

19:                                               ; preds = %35
  %20 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %4, align 8
  %21 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  br label %23

23:                                               ; preds = %19, %13
  %24 = phi i32 [ %22, %19 ], [ %7, %13 ]
  %25 = phi %"struct.rx::vk::ResourceUse"* [ %20, %19 ], [ %5, %13 ]
  %26 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %25, i64 0, i32 0
  %27 = add i32 %24, -1
  store i32 %27, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %4, align 8
  %31 = icmp eq %"struct.rx::vk::ResourceUse"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = bitcast %"struct.rx::vk::ResourceUse"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #8
  br label %34

34:                                               ; preds = %23, %29, %32
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %4, align 8
  br label %39

35:                                               ; preds = %13, %35
  %36 = phi %"class.rx::vk::GarbageObject"* [ %37, %35 ], [ %15, %13 ]
  tail call void @_ZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkE(%"class.rx::vk::GarbageObject"* %36, %"class.rx::RendererVk"* %1) #9
  %37 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 1
  %38 = icmp eq %"class.rx::vk::GarbageObject"* %37, %17
  br i1 %38, label %19, label %35

39:                                               ; preds = %3, %9, %34
  %40 = phi i1 [ true, %34 ], [ false, %9 ], [ false, %3 ]
  ret i1 %40
}

declare void @_ZN2rx2vk13GarbageObject7destroyEPNS_10RendererVkE(%"class.rx::vk::GarbageObject"*, %"class.rx::RendererVk"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15ResourceUseListC2Ev(%"class.rx::vk::ResourceUseList"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx2vk15ResourceUseListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.rx::vk::SharedResourceUse"** %4 to i64*
  %6 = bitcast %"class.std::__1::vector.732"* %3 to i64*
  %7 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.rx::vk::SharedResourceUse"** %7 to i64*
  %9 = tail call i8* @_Znwm(i64 32768) #8
  %10 = ptrtoint i8* %9 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 32768
  %12 = ptrtoint i8* %11 to i64
  store i64 %10, i64* %6, align 8
  store i64 %10, i64* %8, align 8
  store i64 %12, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15ResourceUseListC2EOS1_(%"class.rx::vk::ResourceUseList"* nocapture, %"class.rx::vk::ResourceUseList"* nocapture dereferenceable(32)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx2vk15ResourceUseListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.732"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.732"* %4 to i64*
  %8 = bitcast %"class.std::__1::vector.732"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.rx::vk::SharedResourceUse"** %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.rx::vk::SharedResourceUse"** %11 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  %16 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.rx::vk::SharedResourceUse"** %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.rx::vk::SharedResourceUse"** %17 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 %19, i64* %20, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(32) %"class.rx::vk::ResourceUseList"* @_ZN2rx2vk15ResourceUseListaSEOS1_(%"class.rx::vk::ResourceUseList"* returned, %"class.rx::vk::ResourceUseList"* nocapture dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %1, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.732"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.732"* %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  store i64 %6, i64* %7, align 8
  %9 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.rx::vk::SharedResourceUse"** %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.rx::vk::SharedResourceUse"** %10 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.rx::vk::SharedResourceUse"** %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.rx::vk::SharedResourceUse"** %16 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 %18, i64* %19, align 8
  ret %"class.rx::vk::ResourceUseList"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15ResourceUseListD2Ev(%"class.rx::vk::ResourceUseList"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx2vk15ResourceUseListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %3, align 8
  %5 = icmp eq %"class.rx::vk::SharedResourceUse"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.rx::vk::SharedResourceUse"* %4 to i64
  %8 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.rx::vk::SharedResourceUse"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.rx::vk::SharedResourceUse"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15ResourceUseListD0Ev(%"class.rx::vk::ResourceUseList"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2rx2vk15ResourceUseListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %3, align 8
  %5 = icmp eq %"class.rx::vk::SharedResourceUse"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.rx::vk::SharedResourceUse"* %4 to i64
  %8 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.rx::vk::SharedResourceUse"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.rx::vk::SharedResourceUse"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.rx::vk::ResourceUseList"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15ResourceUseList19releaseResourceUsesEv(%"class.rx::vk::ResourceUseList"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.732", %"class.std::__1::vector.732"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %5, align 8
  %7 = icmp eq %"class.rx::vk::SharedResourceUse"* %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = ptrtoint %"class.rx::vk::SharedResourceUse"* %4 to i64
  br label %13

10:                                               ; preds = %29
  %11 = bitcast %"class.std::__1::vector.732"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %8, %10
  %14 = phi i64 [ %12, %10 ], [ %9, %8 ]
  %15 = bitcast %"class.rx::vk::SharedResourceUse"** %5 to i64*
  store i64 %14, i64* %15, align 8
  ret void

16:                                               ; preds = %1, %29
  %17 = phi %"class.rx::vk::SharedResourceUse"* [ %30, %29 ], [ %4, %1 ]
  %18 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %17, i64 0, i32 0
  %19 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %18, align 8
  %20 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -1
  store i32 %22, i32* %20, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %16
  %25 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %18, align 8
  %26 = icmp eq %"struct.rx::vk::ResourceUse"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.rx::vk::ResourceUse"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %16, %24, %27
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %18, align 8
  %30 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %17, i64 1
  %31 = icmp eq %"class.rx::vk::SharedResourceUse"* %30, %6
  br i1 %31, label %10, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx2vk15ResourceUseList35releaseResourceUsesAndUpdateSerialsENS_6SerialE(%"class.rx::vk::ResourceUseList"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.732", %"class.std::__1::vector.732"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::vk::ResourceUseList", %"class.rx::vk::ResourceUseList"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"** %6, align 8
  %8 = icmp eq %"class.rx::vk::SharedResourceUse"* %5, %7
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = ptrtoint %"class.rx::vk::SharedResourceUse"* %5 to i64
  br label %14

11:                                               ; preds = %32
  %12 = bitcast %"class.std::__1::vector.732"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %9, %11
  %15 = phi i64 [ %13, %11 ], [ %10, %9 ]
  %16 = bitcast %"class.rx::vk::SharedResourceUse"** %6 to i64*
  store i64 %15, i64* %16, align 8
  ret void

17:                                               ; preds = %2, %32
  %18 = phi %"class.rx::vk::SharedResourceUse"* [ %33, %32 ], [ %5, %2 ]
  %19 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %18, i64 0, i32 0
  %20 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %19, align 8
  %21 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %20, i64 0, i32 1, i32 0
  store i64 %1, i64* %21, align 8
  %22 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %19, align 8
  %23 = getelementptr inbounds %"struct.rx::vk::ResourceUse", %"struct.rx::vk::ResourceUse"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, -1
  store i32 %25, i32* %23, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %17
  %28 = load %"struct.rx::vk::ResourceUse"*, %"struct.rx::vk::ResourceUse"** %19, align 8
  %29 = icmp eq %"struct.rx::vk::ResourceUse"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = bitcast %"struct.rx::vk::ResourceUse"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #8
  br label %32

32:                                               ; preds = %17, %27, %30
  store %"struct.rx::vk::ResourceUse"* null, %"struct.rx::vk::ResourceUse"** %19, align 8
  %33 = getelementptr inbounds %"class.rx::vk::SharedResourceUse", %"class.rx::vk::SharedResourceUse"* %18, i64 1
  %34 = icmp eq %"class.rx::vk::SharedResourceUse"* %33, %7
  br i1 %34, label %11, label %17
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i64 @_ZNK2rx2vk16CommandProcessor27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandProcessor"*) unnamed_addr #3

declare i64 @_ZNK2rx2vk12CommandQueue27getLastCompletedQueueSerialEv(%"class.rx::vk::CommandQueue"*) unnamed_addr #3

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
