; ModuleID = '../../components/spellcheck/renderer/spellcheck_worditerator.cc'
source_filename = "../../components/spellcheck/renderer/spellcheck_worditerator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%class.SpellcheckCharAttribute = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.SpellcheckWordIterator = type { i16*, %class.SpellcheckCharAttribute*, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::i18n::BreakIterator"* }
%"class.base::i18n::BreakIterator" = type { i8*, %"class.base::BasicStringPiece.12", %"class.std::__1::basic_string", i32, i64, i64 }
%"class.base::BasicStringPiece.12" = type { i16*, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.1", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.15, [32 x i8] }
%struct.anon.15 = type { i16, i32, i32, i16* }
%"class.icu_69::ConstChar16Ptr" = type { i16* }
%"class.icu_69::StringCharacterIterator" = type { %"class.icu_69::UCharCharacterIterator", %"class.icu_69::UnicodeString" }
%"class.icu_69::UCharCharacterIterator" = type { %"class.icu_69::CharacterIterator", i16* }
%"class.icu_69::CharacterIterator" = type { %"class.icu_69::ForwardCharacterIterator", i32, i32, i32, i32 }
%"class.icu_69::ForwardCharacterIterator" = type { %"class.icu_69::UObject" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

@_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE13kRuleTemplate = internal constant [2370 x i8] c"!!chain;$CR           = [\5Cp{Word_Break = CR}];$LF           = [\5Cp{Word_Break = LF}];$Newline      = [\5Cp{Word_Break = Newline}];$Extend       = [\5Cp{Word_Break = Extend}];$Format       = [\5Cp{Word_Break = Format}];$Katakana     = [\5Cp{Word_Break = Katakana}];$ALetter      = [\5Cp{script=%s}%s];$MidNumLet    = [\5Cp{Word_Break = MidNumLet} \5Cu0027];$MidLetter    = [\5Cp{Word_Break = MidLetter}%s];$MidNum       = [\5Cp{Word_Break = MidNum}];$Numeric      = [\5Cp{Word_Break = Numeric}];$ExtendNumLet = [\5Cp{Word_Break = ExtendNumLet}];$Control        = [\5Cp{Grapheme_Cluster_Break = Control}]; %s$KatakanaEx     = $Katakana     ($Extend |  $Format)*;$ALetterEx      = $ALetterPlus  ($Extend |  $Format)*;$MidNumLetEx    = $MidNumLet    ($Extend |  $Format)*;$MidLetterEx    = $MidLetter    ($Extend |  $Format)*;$MidNumEx       = $MidNum       ($Extend |  $Format)*;$NumericEx      = $Numeric      ($Extend |  $Format)*;$ExtendNumLetEx = $ExtendNumLet ($Extend |  $Format)*;$Hiragana       = [\5Cp{script=Hiragana}];$Ideographic    = [\5Cp{Ideographic}];$HiraganaEx     = $Hiragana     ($Extend |  $Format)*;$IdeographicEx  = $Ideographic  ($Extend |  $Format)*;!!forward;$CR $LF;[^$CR $LF $Newline]? ($Extend |  $Format)+;$ALetterEx {200};$ALetterEx $ALetterEx {200};%s!!reverse;$BackALetterEx     = ($Format | $Extend)* $ALetterPlus;$BackMidNumLetEx   = ($Format | $Extend)* $MidNumLet;$BackNumericEx     = ($Format | $Extend)* $Numeric;$BackMidNumEx      = ($Format | $Extend)* $MidNum;$BackMidLetterEx   = ($Format | $Extend)* $MidLetter;$BackKatakanaEx    = ($Format | $Extend)* $Katakana;$BackExtendNumLetEx= ($Format | $Extend)* $ExtendNumLet;$LF $CR;($Format | $Extend)*  [^$CR $LF $Newline]?;$BackALetterEx $BackALetterEx;$BackALetterEx ($BackMidLetterEx | $BackMidNumLetEx) $BackALetterEx;$BackNumericEx $BackNumericEx;$BackNumericEx $BackALetterEx;$BackALetterEx $BackNumericEx;$BackNumericEx ($BackMidNumEx | $BackMidNumLetEx) $BackNumericEx;$BackKatakanaEx $BackKatakanaEx;$BackExtendNumLetEx ($BackALetterEx | $BackNumericEx | $BackKatakanaEx | $BackExtendNumLetEx);($BackALetterEx | $BackNumericEx | $BackKatakanaEx) $BackExtendNumLetEx;!!safe_reverse;($Extend | $Format)+ .?;($MidLetter | $MidNumLet) $BackALetterEx;($MidNum | $MidNumLet) $BackNumericEx;!!safe_forward;($Extend | $Format)+ .?;($MidLetterEx | $MidNumLetEx) $ALetterEx;($MidNumEx | $MidNumLetEx) $NumericEx;\00", align 16
@.str = private unnamed_addr constant [6 x i8] c"Latin\00", align 1
@_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15kWithDictionary = internal constant [107 x i8] c"$dictionary   = [:LineBreak = Complex_Context:];$ALetterPlus  = [$ALetter [$dictionary-$Extend-$Control]];\00", align 16
@_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE18kWithoutDictionary = internal constant [26 x i8] c"$ALetterPlus  = $ALetter;\00", align 16
@.str.1 = private unnamed_addr constant [14 x i8] c" [0123456789]\00", align 1
@.str.2 = private constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [10 x i8] c" [\5Cu0640]\00", align 1
@_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE21kMidLetterExtraHebrew = internal constant [3 x i8] c"\22'\00", align 1
@_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE17kAllowContraction = internal constant [59 x i8] c"$ALetterEx ($MidLetterEx | $MidNumLetEx) $ALetterEx {200};\00", align 16
@_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE20kDisallowContraction = internal constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [64 x i8] c"../../components/spellcheck/renderer/spellcheck_worditerator.cc\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"failed to set text\00", align 1
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN23SpellcheckCharAttributeC1Ev = hidden unnamed_addr alias void (%class.SpellcheckCharAttribute*), void (%class.SpellcheckCharAttribute*)* @_ZN23SpellcheckCharAttributeC2Ev
@_ZN23SpellcheckCharAttributeD1Ev = hidden unnamed_addr alias void (%class.SpellcheckCharAttribute*), void (%class.SpellcheckCharAttribute*)* @_ZN23SpellcheckCharAttributeD2Ev
@_ZN22SpellcheckWordIteratorC1Ev = hidden unnamed_addr alias void (%class.SpellcheckWordIterator*), void (%class.SpellcheckWordIterator*)* @_ZN22SpellcheckWordIteratorC2Ev
@_ZN22SpellcheckWordIteratorD1Ev = hidden unnamed_addr alias void (%class.SpellcheckWordIterator*), void (%class.SpellcheckWordIterator*)* @_ZN22SpellcheckWordIteratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SpellcheckCharAttributeC2Ev(%class.SpellcheckCharAttribute* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 2
  %3 = bitcast %class.SpellcheckCharAttribute* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  store i32 25, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SpellcheckCharAttributeD2Ev(%class.SpellcheckCharAttribute* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %7
  %11 = bitcast %class.SpellcheckCharAttribute* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = bitcast %class.SpellcheckCharAttribute* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SpellcheckCharAttribute18SetDefaultLanguageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SpellcheckCharAttribute* nocapture, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SpellcheckCharAttribute* %0, %"class.std::__1::basic_string.1"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SpellcheckCharAttribute* nocapture, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca [8 x i32], align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string.1", align 8
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #12
  store i32 0, i32* %3, align 4
  %10 = bitcast [8 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #12
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 0
  %12 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = bitcast [8 x i32]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 32, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  %20 = select i1 %16, i8* %18, i8* %19
  %21 = call i32 @uscript_getCode_69(i8* %20, i32* nonnull %11, i32 8, i32* nonnull %3) #12
  %22 = load i32, i32* %3, align 4
  %23 = icmp slt i32 %22, 1
  %24 = icmp sgt i32 %21, 0
  %25 = and i1 %24, %23
  br i1 %25, label %29, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  br label %32

29:                                               ; preds = %2
  %30 = load i32, i32* %11, align 16
  %31 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %26, %29
  %33 = phi i32 [ %28, %26 ], [ %30, %29 ]
  %34 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 2
  %35 = call i8* @uscript_getName_69(i32 %33) #12
  %36 = icmp eq i8* %35, null
  %37 = select i1 %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %35
  %38 = load i32, i32* %34, align 8
  switch i32 %38, label %40 [
    i32 18, label %39
    i32 38, label %39
    i32 24, label %39
    i32 23, label %39
  ]

39:                                               ; preds = %32, %32, %32, %32
  br label %40

40:                                               ; preds = %32, %39
  %41 = phi i8* [ getelementptr inbounds ([107 x i8], [107 x i8]* @_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE15kWithDictionary, i64 0, i64 0), %39 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE18kWithoutDictionary, i64 0, i64 0), %32 ]
  %42 = icmp eq i32 %38, 2
  %43 = select i1 %42, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)
  %44 = icmp eq i32 %38, 19
  %45 = select i1 %44, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %43
  %46 = select i1 %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE21kMidLetterExtraHebrew, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %48 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  call void (%"class.std::__1::basic_string.1"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* nonnull sret %6, i8* getelementptr inbounds ([2370 x i8], [2370 x i8]* @_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE13kRuleTemplate, i64 0, i64 0), i8* %37, i8* %45, i8* %46, i8* nonnull %41, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE17kAllowContraction, i64 0, i64 0)) #12
  %49 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %48
  %56 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %51 to i64
  %59 = select i1 %52, i64 %57, i64 %58
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i8* %55, i64 %59) #12
  %60 = bitcast %class.SpellcheckCharAttribute* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %40
  %65 = bitcast %class.SpellcheckCharAttribute* %0 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %64, %40
  %68 = bitcast %class.SpellcheckCharAttribute* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %47, i64 24, i1 false) #12
  %69 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %69, i64 0, i32 1, i32 1
  store i8 0, i8* %70, align 1
  %71 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  store i16 0, i16* %71, align 8
  %72 = load i8, i8* %50, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %67, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  %77 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #12
  %78 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #12
  call void (%"class.std::__1::basic_string.1"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* nonnull sret %8, i8* getelementptr inbounds ([2370 x i8], [2370 x i8]* @_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE13kRuleTemplate, i64 0, i64 0), i8* %37, i8* %45, i8* %46, i8* %41, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN23SpellcheckCharAttribute14CreateRuleSetsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE20kDisallowContraction, i64 0, i64 0)) #12
  %79 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = select i1 %82, i8* %84, i8* %78
  %86 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = zext i8 %81 to i64
  %89 = select i1 %82, i64 %87, i64 %88
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %85, i64 %89) #12
  %90 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %76
  %96 = bitcast %"class.std::__1::basic_string"* %90 to i8**
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %95, %76
  %99 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %77, i64 24, i1 false) #12
  %100 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  store i8 0, i8* %101, align 1
  %102 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  store i16 0, i16* %102, align 8
  %103 = load i8, i8* %80, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %98
  %106 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %106) #11
  br label %107

107:                                              ; preds = %98, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK23SpellcheckCharAttribute18IsTextInSameScriptERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckCharAttribute* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i16* %9, i16* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %55, label %17

17:                                               ; preds = %2
  %18 = bitcast i32* %3 to i8*
  %19 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 2
  br label %20

20:                                               ; preds = %17, %52
  %21 = phi i64 [ 0, %17 ], [ %42, %52 ]
  %22 = add nuw i64 %21, 1
  %23 = getelementptr inbounds i16, i16* %14, i64 %21
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = and i32 %25, 64512
  %27 = icmp ne i32 %26, 55296
  %28 = icmp eq i64 %22, %15
  %29 = or i1 %28, %27
  br i1 %29, label %41, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds i16, i16* %14, i64 %22
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = and i32 %33, 64512
  %35 = icmp eq i32 %34, 56320
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = add i64 %21, 2
  %38 = shl nuw nsw i32 %25, 10
  %39 = add nsw i32 %38, -56613888
  %40 = add nsw i32 %39, %33
  br label %41

41:                                               ; preds = %20, %30, %36
  %42 = phi i64 [ %22, %20 ], [ %37, %36 ], [ %22, %30 ]
  %43 = phi i32 [ %25, %20 ], [ %40, %36 ], [ %25, %30 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #12
  store i32 0, i32* %3, align 4
  %44 = call i32 @uscript_getScript_69(i32 %43, i32* nonnull %3) #12
  %45 = load i32, i32* %3, align 4
  %46 = icmp slt i32 %45, 1
  %47 = icmp ugt i32 %44, 1
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = load i32, i32* %19, align 8
  %51 = icmp eq i32 %44, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %41, %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  %53 = icmp ult i64 %42, %15
  br i1 %53, label %20, label %55

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  br label %55

55:                                               ; preds = %52, %2, %54
  %56 = phi i1 [ false, %54 ], [ true, %2 ], [ true, %52 ]
  ret i1 %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @uscript_getScript_69(i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK23SpellcheckCharAttribute10GetRuleSetEb(%"class.std::__1::basic_string"* noalias sret, %class.SpellcheckCharAttribute* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %1, i64 0, i32 0
  %5 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %1, i64 0, i32 1
  %6 = select i1 %2, %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* %5
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #12
  br label %189

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #13
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #13
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #11
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !2
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !2
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !5, !noalias !2
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !5, !noalias !2
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !2
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !2
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !5, !noalias !2
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !5, !noalias !2
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !2
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !2
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !5, !noalias !2
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !5, !noalias !2
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !2
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !5, !noalias !2
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !5, !noalias !2
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !7

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !2
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !2
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !5, !noalias !2
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !5, !noalias !2
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !9

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !11

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !12

189:                                              ; preds = %154, %159, %134, %11
  ret void
}

declare i32 @uscript_getCode_69(i8*, i32*, i32, i32*) local_unnamed_addr #2

declare i8* @uscript_getName_69(i32) local_unnamed_addr #2

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK23SpellcheckCharAttribute10OutputCharEDsPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckCharAttribute* nocapture readonly, i16 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %92 [
    i32 2, label %7
    i32 18, label %51
    i32 19, label %53
  ]

7:                                                ; preds = %3
  %8 = and i16 %1, -256
  %9 = icmp eq i16 %8, 1536
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = zext i16 %1 to i32
  %12 = tail call signext i8 @u_isalpha_69(i32 %11) #12
  %13 = icmp eq i8 %12, 0
  %14 = icmp eq i16 %1, 1600
  %15 = or i1 %14, %13
  br i1 %15, label %136, label %16

16:                                               ; preds = %10, %7
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = zext i8 %19 to i64
  br label %30

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 9223372036854775807
  %27 = add nsw i64 %26, -1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %23, %21
  %31 = phi i64 [ 10, %21 ], [ %27, %23 ]
  %32 = phi i64 [ %22, %21 ], [ %29, %23 ]
  %33 = icmp eq i64 %32, %31
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %31, i64 1, i64 %31, i64 %31, i64 0, i64 0) #12
  %35 = load i8, i8* %18, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %42, label %38

37:                                               ; preds = %30
  br i1 %20, label %42, label %38

38:                                               ; preds = %37, %34
  %39 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %40 = trunc i64 %32 to i8
  %41 = add i8 %40, 1
  store i8 %41, i8* %18, align 1
  br label %47

42:                                               ; preds = %37, %34
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = add i64 %32, 1
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %46, align 8
  br label %47

47:                                               ; preds = %42, %38
  %48 = phi i16* [ %39, %38 ], [ %44, %42 ]
  %49 = getelementptr inbounds i16, i16* %48, i64 %32
  store i16 %1, i16* %49, align 2
  %50 = getelementptr inbounds i16, i16* %49, i64 1
  store i16 0, i16* %50, align 2
  br label %136

51:                                               ; preds = %3
  %52 = tail call zeroext i1 @_ZNK23SpellcheckCharAttribute12OutputHangulEDsPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckCharAttribute* %0, i16 zeroext %1, %"class.std::__1::basic_string"* %2)
  br label %136

53:                                               ; preds = %3
  %54 = add i16 %1, -1488
  %55 = icmp ult i16 %54, 27
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  switch i16 %1, label %136 [
    i16 1524, label %57
    i16 1523, label %57
    i16 39, label %57
    i16 34, label %57
  ]

57:                                               ; preds = %56, %56, %56, %56, %53
  %58 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = zext i8 %60 to i64
  br label %71

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 9223372036854775807
  %68 = add nsw i64 %67, -1
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %64, %62
  %72 = phi i64 [ 10, %62 ], [ %68, %64 ]
  %73 = phi i64 [ %63, %62 ], [ %70, %64 ]
  %74 = icmp eq i64 %73, %72
  br i1 %74, label %75, label %78

75:                                               ; preds = %71
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %72, i64 1, i64 %72, i64 %72, i64 0, i64 0) #12
  %76 = load i8, i8* %59, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %83, label %79

78:                                               ; preds = %71
  br i1 %61, label %83, label %79

79:                                               ; preds = %78, %75
  %80 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %81 = trunc i64 %73 to i8
  %82 = add i8 %81, 1
  store i8 %82, i8* %59, align 1
  br label %88

83:                                               ; preds = %78, %75
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i16*, i16** %84, align 8
  %86 = add i64 %73, 1
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %86, i64* %87, align 8
  br label %88

88:                                               ; preds = %83, %79
  %89 = phi i16* [ %80, %79 ], [ %85, %83 ]
  %90 = getelementptr inbounds i16, i16* %89, i64 %73
  store i16 %1, i16* %90, align 2
  %91 = getelementptr inbounds i16, i16* %90, i64 1
  store i16 0, i16* %91, align 2
  br label %136

92:                                               ; preds = %3
  %93 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #12
  store i32 0, i32* %4, align 4
  %94 = zext i16 %1 to i32
  %95 = call i32 @uscript_getScript_69(i32 %94, i32* nonnull %4) #12
  %96 = load i32, i32* %5, align 8
  %97 = icmp eq i32 %95, %96
  %98 = icmp eq i32 %95, 0
  %99 = or i1 %98, %97
  br i1 %99, label %100, label %135

100:                                              ; preds = %92
  %101 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = zext i8 %103 to i64
  br label %114

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 9223372036854775807
  %111 = add nsw i64 %110, -1
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  br label %114

114:                                              ; preds = %107, %105
  %115 = phi i64 [ 10, %105 ], [ %111, %107 ]
  %116 = phi i64 [ %106, %105 ], [ %113, %107 ]
  %117 = icmp eq i64 %116, %115
  br i1 %117, label %118, label %121

118:                                              ; preds = %114
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %115, i64 1, i64 %115, i64 %115, i64 0, i64 0) #12
  %119 = load i8, i8* %102, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %126, label %122

121:                                              ; preds = %114
  br i1 %104, label %126, label %122

122:                                              ; preds = %121, %118
  %123 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %124 = trunc i64 %116 to i8
  %125 = add i8 %124, 1
  store i8 %125, i8* %102, align 1
  br label %131

126:                                              ; preds = %121, %118
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i16*, i16** %127, align 8
  %129 = add i64 %116, 1
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %129, i64* %130, align 8
  br label %131

131:                                              ; preds = %126, %122
  %132 = phi i16* [ %123, %122 ], [ %128, %126 ]
  %133 = getelementptr inbounds i16, i16* %132, i64 %116
  store i16 %1, i16* %133, align 2
  %134 = getelementptr inbounds i16, i16* %133, i64 1
  store i16 0, i16* %134, align 2
  br label %135

135:                                              ; preds = %92, %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #12
  br label %136

136:                                              ; preds = %88, %56, %47, %10, %135, %51
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK23SpellcheckCharAttribute12OutputArabicEDsPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckCharAttribute* nocapture readnone, i16 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = and i16 %1, -256
  %5 = icmp eq i16 %4, 1536
  br i1 %5, label %6, label %12

6:                                                ; preds = %3
  %7 = zext i16 %1 to i32
  %8 = tail call signext i8 @u_isalpha_69(i32 %7) #12
  %9 = icmp eq i8 %8, 0
  %10 = icmp eq i16 %1, 1600
  %11 = or i1 %10, %9
  br i1 %11, label %47, label %12

12:                                               ; preds = %6, %3
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = zext i8 %15 to i64
  br label %26

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 9223372036854775807
  %23 = add nsw i64 %22, -1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %26

26:                                               ; preds = %19, %17
  %27 = phi i64 [ 10, %17 ], [ %23, %19 ]
  %28 = phi i64 [ %18, %17 ], [ %25, %19 ]
  %29 = icmp eq i64 %28, %27
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %27, i64 1, i64 %27, i64 %27, i64 0, i64 0) #12
  %31 = load i8, i8* %14, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %38, label %34

33:                                               ; preds = %26
  br i1 %16, label %38, label %34

34:                                               ; preds = %33, %30
  %35 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %36 = trunc i64 %28 to i8
  %37 = add i8 %36, 1
  store i8 %37, i8* %14, align 1
  br label %43

38:                                               ; preds = %33, %30
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = add i64 %28, 1
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %34, %38
  %44 = phi i16* [ %35, %34 ], [ %40, %38 ]
  %45 = getelementptr inbounds i16, i16* %44, i64 %28
  store i16 %1, i16* %45, align 2
  %46 = getelementptr inbounds i16, i16* %45, i64 1
  store i16 0, i16* %46, align 2
  br label %47

47:                                               ; preds = %6, %43
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK23SpellcheckCharAttribute12OutputHangulEDsPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckCharAttribute* nocapture readonly, i16 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = zext i16 %1 to i32
  %6 = add nsw i32 %5, -44032
  %7 = icmp ugt i32 %6, 55203
  br i1 %7, label %8, label %52

8:                                                ; preds = %3
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #12
  store i32 0, i32* %4, align 4
  %10 = call i32 @uscript_getScript_69(i32 %5, i32* nonnull %4) #12
  %11 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  %14 = icmp eq i32 %10, 0
  %15 = or i1 %14, %13
  br i1 %15, label %16, label %51

16:                                               ; preds = %8
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = zext i8 %19 to i64
  br label %30

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 9223372036854775807
  %27 = add nsw i64 %26, -1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %23, %21
  %31 = phi i64 [ 10, %21 ], [ %27, %23 ]
  %32 = phi i64 [ %22, %21 ], [ %29, %23 ]
  %33 = icmp eq i64 %32, %31
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %31, i64 1, i64 %31, i64 %31, i64 0, i64 0) #12
  %35 = load i8, i8* %18, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %42, label %38

37:                                               ; preds = %30
  br i1 %20, label %42, label %38

38:                                               ; preds = %37, %34
  %39 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %40 = trunc i64 %32 to i8
  %41 = add i8 %40, 1
  store i8 %41, i8* %18, align 1
  br label %47

42:                                               ; preds = %37, %34
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = add i64 %32, 1
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %46, align 8
  br label %47

47:                                               ; preds = %42, %38
  %48 = phi i16* [ %39, %38 ], [ %44, %42 ]
  %49 = getelementptr inbounds i16, i16* %48, i64 %32
  store i16 %1, i16* %49, align 2
  %50 = getelementptr inbounds i16, i16* %49, i64 1
  store i16 0, i16* %50, align 2
  br label %51

51:                                               ; preds = %8, %47
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #12
  br label %161

52:                                               ; preds = %3
  %53 = trunc i32 %6 to i16
  %54 = udiv i16 %53, 588
  %55 = urem i16 %53, 588
  %56 = udiv i16 %55, 28
  %57 = urem i16 %53, 28
  %58 = or i16 %54, 4352
  %59 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %52
  %64 = zext i8 %61 to i64
  br label %72

65:                                               ; preds = %52
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 9223372036854775807
  %69 = add nsw i64 %68, -1
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  br label %72

72:                                               ; preds = %65, %63
  %73 = phi i64 [ 10, %63 ], [ %69, %65 ]
  %74 = phi i64 [ %64, %63 ], [ %71, %65 ]
  %75 = icmp eq i64 %74, %73
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %73, i64 1, i64 %73, i64 %73, i64 0, i64 0) #12
  %77 = load i8, i8* %60, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %84, label %80

79:                                               ; preds = %72
  br i1 %62, label %84, label %80

80:                                               ; preds = %79, %76
  %81 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %82 = trunc i64 %74 to i8
  %83 = add i8 %82, 1
  store i8 %83, i8* %60, align 1
  br label %89

84:                                               ; preds = %79, %76
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i16*, i16** %85, align 8
  %87 = add i64 %74, 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %87, i64* %88, align 8
  br label %89

89:                                               ; preds = %80, %84
  %90 = phi i16* [ %81, %80 ], [ %86, %84 ]
  %91 = getelementptr inbounds i16, i16* %90, i64 %74
  store i16 %58, i16* %91, align 2
  %92 = getelementptr inbounds i16, i16* %91, i64 1
  store i16 0, i16* %92, align 2
  %93 = add nuw nsw i16 %56, 4449
  %94 = load i8, i8* %60, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %89
  %97 = zext i8 %94 to i64
  br label %105

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 9223372036854775807
  %102 = add nsw i64 %101, -1
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  br label %105

105:                                              ; preds = %98, %96
  %106 = phi i64 [ 10, %96 ], [ %102, %98 ]
  %107 = phi i64 [ %97, %96 ], [ %104, %98 ]
  %108 = icmp eq i64 %107, %106
  br i1 %108, label %109, label %112

109:                                              ; preds = %105
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %106, i64 1, i64 %106, i64 %106, i64 0, i64 0) #12
  %110 = load i8, i8* %60, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %117, label %113

112:                                              ; preds = %105
  br i1 %95, label %117, label %113

113:                                              ; preds = %112, %109
  %114 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %115 = trunc i64 %107 to i8
  %116 = add i8 %115, 1
  store i8 %116, i8* %60, align 1
  br label %122

117:                                              ; preds = %112, %109
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i16*, i16** %118, align 8
  %120 = add i64 %107, 1
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %120, i64* %121, align 8
  br label %122

122:                                              ; preds = %113, %117
  %123 = phi i16* [ %114, %113 ], [ %119, %117 ]
  %124 = getelementptr inbounds i16, i16* %123, i64 %107
  store i16 %93, i16* %124, align 2
  %125 = getelementptr inbounds i16, i16* %124, i64 1
  store i16 0, i16* %125, align 2
  %126 = icmp eq i16 %57, 0
  br i1 %126, label %161, label %127

127:                                              ; preds = %122
  %128 = add nuw nsw i16 %57, 4519
  %129 = load i8, i8* %60, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = zext i8 %129 to i64
  br label %140

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %135 = load i64, i64* %134, align 8
  %136 = and i64 %135, 9223372036854775807
  %137 = add nsw i64 %136, -1
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  br label %140

140:                                              ; preds = %133, %131
  %141 = phi i64 [ 10, %131 ], [ %137, %133 ]
  %142 = phi i64 [ %132, %131 ], [ %139, %133 ]
  %143 = icmp eq i64 %142, %141
  br i1 %143, label %144, label %147

144:                                              ; preds = %140
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %141, i64 1, i64 %141, i64 %141, i64 0, i64 0) #12
  %145 = load i8, i8* %60, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %152, label %148

147:                                              ; preds = %140
  br i1 %130, label %152, label %148

148:                                              ; preds = %147, %144
  %149 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %150 = trunc i64 %142 to i8
  %151 = add i8 %150, 1
  store i8 %151, i8* %60, align 1
  br label %157

152:                                              ; preds = %147, %144
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i16*, i16** %153, align 8
  %155 = add i64 %142, 1
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %155, i64* %156, align 8
  br label %157

157:                                              ; preds = %148, %152
  %158 = phi i16* [ %149, %148 ], [ %154, %152 ]
  %159 = getelementptr inbounds i16, i16* %158, i64 %142
  store i16 %128, i16* %159, align 2
  %160 = getelementptr inbounds i16, i16* %159, i64 1
  store i16 0, i16* %160, align 2
  br label %161

161:                                              ; preds = %157, %122, %51
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK23SpellcheckCharAttribute12OutputHebrewEDsPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckCharAttribute* nocapture readnone, i16 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = add i16 %1, -1488
  %5 = icmp ult i16 %4, 27
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  switch i16 %1, label %42 [
    i16 1524, label %7
    i16 1523, label %7
    i16 39, label %7
    i16 34, label %7
  ]

7:                                                ; preds = %6, %6, %6, %6, %3
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = zext i8 %10 to i64
  br label %21

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %21

21:                                               ; preds = %14, %12
  %22 = phi i64 [ 10, %12 ], [ %18, %14 ]
  %23 = phi i64 [ %13, %12 ], [ %20, %14 ]
  %24 = icmp eq i64 %23, %22
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %22, i64 1, i64 %22, i64 %22, i64 0, i64 0) #12
  %26 = load i8, i8* %9, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %33, label %29

28:                                               ; preds = %21
  br i1 %11, label %33, label %29

29:                                               ; preds = %28, %25
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %31 = trunc i64 %23 to i8
  %32 = add i8 %31, 1
  store i8 %32, i8* %9, align 1
  br label %38

33:                                               ; preds = %28, %25
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = add i64 %23, 1
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %29, %33
  %39 = phi i16* [ %30, %29 ], [ %35, %33 ]
  %40 = getelementptr inbounds i16, i16* %39, i64 %23
  store i16 %1, i16* %40, align 2
  %41 = getelementptr inbounds i16, i16* %40, i64 1
  store i16 0, i16* %41, align 2
  br label %42

42:                                               ; preds = %6, %38
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK23SpellcheckCharAttribute13OutputDefaultEDsPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckCharAttribute* nocapture readonly, i16 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  store i32 0, i32* %4, align 4
  %6 = zext i16 %1 to i32
  %7 = call i32 @uscript_getScript_69(i32 %6, i32* nonnull %4) #12
  %8 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  %11 = icmp eq i32 %7, 0
  %12 = or i1 %11, %10
  br i1 %12, label %13, label %48

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = zext i8 %16 to i64
  br label %27

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %20, %18
  %28 = phi i64 [ 10, %18 ], [ %24, %20 ]
  %29 = phi i64 [ %19, %18 ], [ %26, %20 ]
  %30 = icmp eq i64 %29, %28
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %2, i64 %28, i64 1, i64 %28, i64 %28, i64 0, i64 0) #12
  %32 = load i8, i8* %15, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %39, label %35

34:                                               ; preds = %27
  br i1 %17, label %39, label %35

35:                                               ; preds = %34, %31
  %36 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %37 = trunc i64 %29 to i8
  %38 = add i8 %37, 1
  store i8 %38, i8* %15, align 1
  br label %44

39:                                               ; preds = %34, %31
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = add i64 %29, 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %43, align 8
  br label %44

44:                                               ; preds = %35, %39
  %45 = phi i16* [ %36, %35 ], [ %41, %39 ]
  %46 = getelementptr inbounds i16, i16* %45, i64 %29
  store i16 %1, i16* %46, align 2
  %47 = getelementptr inbounds i16, i16* %46, i64 1
  store i16 0, i16* %47, align 2
  br label %48

48:                                               ; preds = %3, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  ret i1 true
}

declare signext i8 @u_isalpha_69(i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22SpellcheckWordIteratorC2Ev(%class.SpellcheckWordIterator* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %class.SpellcheckWordIterator* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SpellcheckWordIteratorD2Ev(%class.SpellcheckWordIterator* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %2, align 8
  store %"class.base::i18n::BreakIterator"* null, %"class.base::i18n::BreakIterator"** %2, align 8
  %4 = icmp eq %"class.base::i18n::BreakIterator"* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store %"class.base::i18n::BreakIterator"* null, %"class.base::i18n::BreakIterator"** %2, align 8
  br label %12

6:                                                ; preds = %1
  tail call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #12
  %7 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  %8 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %2, align 8
  store %"class.base::i18n::BreakIterator"* null, %"class.base::i18n::BreakIterator"** %2, align 8
  %9 = icmp eq %"class.base::i18n::BreakIterator"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.base::i18n::BreakIterator"* %8 to i8*
  tail call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %8) #12
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %5, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SpellcheckWordIterator5ResetEv(%class.SpellcheckWordIterator* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %2, align 8
  store %"class.base::i18n::BreakIterator"* null, %"class.base::i18n::BreakIterator"** %2, align 8
  %4 = icmp eq %"class.base::i18n::BreakIterator"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %3) #12
  %6 = bitcast %"class.base::i18n::BreakIterator"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22SpellcheckWordIterator10InitializeEPK23SpellcheckCharAttributeb(%class.SpellcheckWordIterator* nocapture, %class.SpellcheckCharAttribute*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece.12", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %1, i64 0, i32 0
  %11 = getelementptr inbounds %class.SpellcheckCharAttribute, %class.SpellcheckCharAttribute* %1, i64 0, i32 1
  %12 = select i1 %2, %"class.std::__1::basic_string"* %10, %"class.std::__1::basic_string"* %11
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = load i8, i8* %14, align 1, !noalias !13
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %19, i64 24, i1 false) #12
  br label %193

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8, !noalias !13
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !13
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1, !alias.scope !13
  br label %46

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %34) #13
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #13
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #11
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  store i8* %42, i8** %44, align 8, !alias.scope !13
  %45 = or i64 %37, -9223372036854775808
  store i64 %45, i64* %9, align 8, !alias.scope !13
  store i64 %24, i64* %8, align 8, !alias.scope !13
  br label %46

46:                                               ; preds = %40, %26
  %47 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %48 = add nuw nsw i64 %24, 1
  %49 = add i64 %24, 1
  %50 = icmp ult i64 %49, 16
  br i1 %50, label %140, label %51

51:                                               ; preds = %46
  %52 = add i64 %24, 1
  %53 = getelementptr i16, i16* %47, i64 %52
  %54 = getelementptr i16, i16* %22, i64 %52
  %55 = icmp ult i16* %47, %54
  %56 = icmp ult i16* %22, %53
  %57 = and i1 %55, %56
  br i1 %57, label %140, label %58

58:                                               ; preds = %51
  %59 = and i64 %49, -16
  %60 = sub i64 %48, %59
  %61 = getelementptr i16, i16* %22, i64 %59
  %62 = getelementptr i16, i16* %47, i64 %59
  %63 = add i64 %59, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp ult i64 %63, 48
  br i1 %67, label %119, label %68

68:                                               ; preds = %58
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %116, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %117, %70 ]
  %73 = getelementptr i16, i16* %22, i64 %71
  %74 = getelementptr i16, i16* %47, i64 %71
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !16
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !16
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !19, !noalias !16
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !19, !noalias !16
  %83 = or i64 %71, 16
  %84 = getelementptr i16, i16* %22, i64 %83
  %85 = getelementptr i16, i16* %47, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !16
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !16
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !19, !noalias !16
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !19, !noalias !16
  %94 = or i64 %71, 32
  %95 = getelementptr i16, i16* %22, i64 %94
  %96 = getelementptr i16, i16* %47, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !16
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !16
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !19, !noalias !16
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !19, !noalias !16
  %105 = or i64 %71, 48
  %106 = getelementptr i16, i16* %22, i64 %105
  %107 = getelementptr i16, i16* %47, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !16
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !16
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !19, !noalias !16
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !19, !noalias !16
  %116 = add i64 %71, 64
  %117 = add i64 %72, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %70, !llvm.loop !21

119:                                              ; preds = %70, %58
  %120 = phi i64 [ 0, %58 ], [ %116, %70 ]
  %121 = icmp eq i64 %66, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %135, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %136, %122 ], [ %66, %119 ]
  %125 = getelementptr i16, i16* %22, i64 %123
  %126 = getelementptr i16, i16* %47, i64 %123
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !16
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !16
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !19, !noalias !16
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !19, !noalias !16
  %135 = add i64 %123, 16
  %136 = add i64 %124, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !22

138:                                              ; preds = %122, %119
  %139 = icmp eq i64 %49, %59
  br i1 %139, label %193, label %140

140:                                              ; preds = %138, %51, %46
  %141 = phi i64 [ %48, %51 ], [ %48, %46 ], [ %60, %138 ]
  %142 = phi i16* [ %22, %51 ], [ %22, %46 ], [ %61, %138 ]
  %143 = phi i16* [ %47, %51 ], [ %47, %46 ], [ %62, %138 ]
  %144 = add i64 %141, -1
  %145 = and i64 %141, 7
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %140, %147
  %148 = phi i64 [ %153, %147 ], [ %141, %140 ]
  %149 = phi i16* [ %155, %147 ], [ %142, %140 ]
  %150 = phi i16* [ %154, %147 ], [ %143, %140 ]
  %151 = phi i64 [ %156, %147 ], [ %145, %140 ]
  %152 = load i16, i16* %149, align 2
  store i16 %152, i16* %150, align 2
  %153 = add i64 %148, -1
  %154 = getelementptr inbounds i16, i16* %150, i64 1
  %155 = getelementptr inbounds i16, i16* %149, i64 1
  %156 = add i64 %151, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !23

158:                                              ; preds = %147, %140
  %159 = phi i64 [ %141, %140 ], [ %153, %147 ]
  %160 = phi i16* [ %142, %140 ], [ %155, %147 ]
  %161 = phi i16* [ %143, %140 ], [ %154, %147 ]
  %162 = icmp ult i64 %144, 7
  br i1 %162, label %193, label %163

163:                                              ; preds = %158, %163
  %164 = phi i64 [ %189, %163 ], [ %159, %158 ]
  %165 = phi i16* [ %191, %163 ], [ %160, %158 ]
  %166 = phi i16* [ %190, %163 ], [ %161, %158 ]
  %167 = load i16, i16* %165, align 2
  store i16 %167, i16* %166, align 2
  %168 = getelementptr inbounds i16, i16* %166, i64 1
  %169 = getelementptr inbounds i16, i16* %165, i64 1
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %166, i64 2
  %172 = getelementptr inbounds i16, i16* %165, i64 2
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %166, i64 3
  %175 = getelementptr inbounds i16, i16* %165, i64 3
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %166, i64 4
  %178 = getelementptr inbounds i16, i16* %165, i64 4
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %166, i64 5
  %181 = getelementptr inbounds i16, i16* %165, i64 5
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %166, i64 6
  %184 = getelementptr inbounds i16, i16* %165, i64 6
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %166, i64 7
  %187 = getelementptr inbounds i16, i16* %165, i64 7
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %164, -8
  %190 = getelementptr inbounds i16, i16* %166, i64 8
  %191 = getelementptr inbounds i16, i16* %165, i64 8
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %193, label %163, !llvm.loop !24

193:                                              ; preds = %158, %163, %138, %18
  %194 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %194, i64 0, i32 1, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  %198 = load i64, i64* %8, align 8
  %199 = zext i8 %196 to i64
  %200 = select i1 %197, i64 %198, i64 %199
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %230, label %202

202:                                              ; preds = %193
  %203 = tail call i8* @_Znwm(i64 72) #11
  %204 = bitcast i8* %203 to %"class.base::i18n::BreakIterator"*
  %205 = bitcast %"class.base::BasicStringPiece.12"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #12
  %206 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 0, i64 24, i1 false) #12
  %207 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %207, i64 0, i32 1, i32 1
  %209 = bitcast %"class.base::BasicStringPiece.12"* %5 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %209, align 8
  %210 = getelementptr inbounds %"class.base::BasicStringPiece.12", %"class.base::BasicStringPiece.12"* %5, i64 0, i32 1
  store i64 0, i64* %210, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS3_12basic_stringIDsS5_NS3_9allocatorIDsEEEE(%"class.base::i18n::BreakIterator"* nonnull %204, %"class.base::BasicStringPiece.12"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %211 = ptrtoint i8* %203 to i64
  %212 = load i8, i8* %208, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %202
  %215 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #11
  br label %217

217:                                              ; preds = %202, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #12
  %218 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %204) #12
  br i1 %218, label %219, label %229

219:                                              ; preds = %217
  %220 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 2
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %221, align 8
  %223 = bitcast %"class.std::__1::unique_ptr"* %220 to i64*
  store i64 %211, i64* %223, align 8
  %224 = icmp eq %"class.base::i18n::BreakIterator"* %222, null
  br i1 %224, label %227, label %225

225:                                              ; preds = %219
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %222) #12
  %226 = bitcast %"class.base::i18n::BreakIterator"* %222 to i8*
  call void @_ZdlPv(i8* %226) #11
  br label %227

227:                                              ; preds = %225, %219
  %228 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 1
  store %class.SpellcheckCharAttribute* %1, %class.SpellcheckCharAttribute** %228, align 8
  br label %230

229:                                              ; preds = %217
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %204) #12
  call void @_ZdlPv(i8* nonnull %203) #11
  br label %230

230:                                              ; preds = %229, %227, %193
  %231 = phi i1 [ false, %193 ], [ true, %227 ], [ false, %229 ]
  %232 = load i8, i8* %195, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %230
  %235 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %236 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %236) #11
  br label %237

237:                                              ; preds = %230, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret i1 %231
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS3_12basic_stringIDsS5_NS3_9allocatorIDsEEEE(%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece.12"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK22SpellcheckWordIterator13IsInitializedEv(%class.SpellcheckWordIterator* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %2, align 8
  %4 = icmp ne %"class.base::i18n::BreakIterator"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22SpellcheckWordIterator7SetTextEPKDsm(%class.SpellcheckWordIterator* nocapture, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %5, align 8
  %7 = tail call zeroext i1 @_ZN4base4i18n13BreakIterator7SetTextEPKDsm(%"class.base::i18n::BreakIterator"* %6, i16* %1, i64 %2) #12
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %9, label %10, label %17

10:                                               ; preds = %8
  %11 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0), i32 375, i32 2) #12
  %12 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i64 18) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #12
  br label %17

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 0
  store i16* %1, i16** %16, align 8
  br label %17

17:                                               ; preds = %10, %8, %15
  %18 = phi i1 [ true, %15 ], [ false, %8 ], [ false, %10 ]
  ret i1 %18
}

declare zeroext i1 @_ZN4base4i18n13BreakIterator7SetTextEPKDsm(%"class.base::i18n::BreakIterator"*, i16*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN22SpellcheckWordIterator11GetNextWordEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPmS8_(%class.SpellcheckWordIterator* nocapture readonly, %"class.std::__1::basic_string"*, i64* nocapture, i64* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %13, align 8
  br label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  store i16 0, i16* %15, align 2
  store i8 0, i8* %7, align 1
  br label %16

16:                                               ; preds = %10, %14
  store i64 0, i64* %2, align 8
  store i64 0, i64* %3, align 8
  %17 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = icmp eq i16* %18, null
  br i1 %19, label %48, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %21, align 8
  %23 = tail call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* %22) #12
  br i1 %23, label %24, label %48

24:                                               ; preds = %20, %45
  %25 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %21, align 8
  %26 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %25, i64 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %25, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %29, %27
  %31 = tail call i32 @_ZNK4base4i18n13BreakIterator18GetWordBreakStatusEv(%"class.base::i18n::BreakIterator"* %25) #12
  switch i32 %31, label %45 [
    i32 0, label %32
    i32 1, label %35
  ]

32:                                               ; preds = %24
  %33 = tail call zeroext i1 @_ZNK22SpellcheckWordIterator9NormalizeEmmPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckWordIterator* %0, i64 %27, i64 %30, %"class.std::__1::basic_string"* %1)
  br i1 %33, label %34, label %45

34:                                               ; preds = %32
  store i64 %27, i64* %2, align 8
  store i64 %30, i64* %3, align 8
  br label %48

35:                                               ; preds = %24
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  %37 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %21, align 8
  call void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::i18n::BreakIterator"* %37) #12
  %38 = load i8, i8* %7, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %40, %35
  %44 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %36, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  store i64 %27, i64* %2, align 8
  store i64 %30, i64* %3, align 8
  br label %48

45:                                               ; preds = %24, %32
  %46 = load %"class.base::i18n::BreakIterator"*, %"class.base::i18n::BreakIterator"** %21, align 8
  %47 = tail call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* %46) #12
  br i1 %47, label %24, label %48

48:                                               ; preds = %45, %20, %34, %43, %16
  %49 = phi i32 [ 2, %16 ], [ 0, %34 ], [ 1, %43 ], [ 2, %20 ], [ 2, %45 ]
  ret i32 %49
}

declare zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

declare i32 @_ZNK4base4i18n13BreakIterator18GetWordBreakStatusEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK22SpellcheckWordIterator9NormalizeEmmPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckWordIterator* nocapture readonly, i64, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.icu_69::UnicodeString", align 8
  %9 = alloca %"class.icu_69::StringCharacterIterator", align 8
  %10 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 64, i1 false)
  %11 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds i16, i16* %12, i64 %1
  %14 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %6, i64 0, i32 0
  store i16* %13, i16** %14, align 8
  %15 = icmp ult i64 %2, 2147483648
  br i1 %15, label %17, label %16, !prof !25

16:                                               ; preds = %4
  tail call void @llvm.trap() #12
  unreachable

17:                                               ; preds = %4
  %18 = trunc i64 %2 to i32
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %5, i8 signext 0, %"class.icu_69::ConstChar16Ptr"* nonnull %6, i32 %18) #12
  %19 = load i16*, i16** %14, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %19) #12, !srcloc !26
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  store i32 0, i32* %7, align 4
  %21 = bitcast %"class.icu_69::UnicodeString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 64, i1 false)
  %22 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %23, align 8
  call void @_ZN6icu_6910Normalizer9normalizeERKNS_13UnicodeStringE18UNormalizationModeiRS1_R10UErrorCode(%"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, i32 5, i32 0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %8, i32* nonnull dereferenceable(4) %7) #12
  %24 = load i32, i32* %7, align 4
  switch i32 %24, label %51 [
    i32 -124, label %25
    i32 0, label %25
  ]

25:                                               ; preds = %17, %17
  %26 = bitcast %"class.icu_69::StringCharacterIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %26) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 96, i1 false)
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* nonnull %9, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %8) #12
  %27 = getelementptr inbounds %"class.icu_69::StringCharacterIterator", %"class.icu_69::StringCharacterIterator"* %9, i64 0, i32 0
  %28 = call zeroext i16 @_ZN6icu_6922UCharCharacterIterator5firstEv(%"class.icu_69::UCharCharacterIterator"* nonnull %27) #12
  %29 = icmp eq i16 %28, -1
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.SpellcheckWordIterator, %class.SpellcheckWordIterator* %0, i64 0, i32 1
  br label %45

32:                                               ; preds = %45, %25
  %33 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  br label %42

40:                                               ; preds = %32
  %41 = zext i8 %35 to i64
  br label %42

42:                                               ; preds = %37, %40
  %43 = phi i64 [ %39, %37 ], [ %41, %40 ]
  %44 = icmp ne i64 %43, 0
  call void @_ZN6icu_6923StringCharacterIteratorD1Ev(%"class.icu_69::StringCharacterIterator"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %26) #12
  br label %51

45:                                               ; preds = %30, %45
  %46 = phi i16 [ %28, %30 ], [ %49, %45 ]
  %47 = load %class.SpellcheckCharAttribute*, %class.SpellcheckCharAttribute** %31, align 8
  %48 = call zeroext i1 @_ZNK23SpellcheckCharAttribute10OutputCharEDsPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckCharAttribute* %47, i16 zeroext %46, %"class.std::__1::basic_string"* %3)
  %49 = call zeroext i16 @_ZN6icu_6922UCharCharacterIterator4nextEv(%"class.icu_69::UCharCharacterIterator"* nonnull %27) #12
  %50 = icmp eq i16 %49, -1
  br i1 %50, label %32, label %45

51:                                               ; preds = %17, %42
  %52 = phi i1 [ %44, %42 ], [ false, %17 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #12
  ret i1 %52
}

declare void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* sret, %"class.base::i18n::BreakIterator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) unnamed_addr #2

declare void @_ZN6icu_6910Normalizer9normalizeERKNS_13UnicodeStringE18UNormalizationModeiRS1_R10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #2

declare zeroext i16 @_ZN6icu_6922UCharCharacterIterator5firstEv(%"class.icu_69::UCharCharacterIterator"*) unnamed_addr #2

declare zeroext i16 @_ZN6icu_6922UCharCharacterIterator4nextEv(%"class.icu_69::UCharCharacterIterator"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6923StringCharacterIteratorD1Ev(%"class.icu_69::StringCharacterIterator"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !27
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #13
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #11
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !28
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !28
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !31, !noalias !28
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !31, !noalias !28
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !28
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !28
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !31, !noalias !28
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !31, !noalias !28
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !28
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !28
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !31, !noalias !28
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !31, !noalias !28
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !28
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !28
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !31, !noalias !28
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !31, !noalias !28
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !33

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !28
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !28
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !31, !noalias !28
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !31, !noalias !28
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !34

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !35

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !36

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !37
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !37
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !40, !noalias !37
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !40, !noalias !37
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !37
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !37
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !40, !noalias !37
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !40, !noalias !37
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !37
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !37
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !40, !noalias !37
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !40, !noalias !37
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !37
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !37
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !40, !noalias !37
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !40, !noalias !37
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !42

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !37
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !37
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !40, !noalias !37
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !40, !noalias !37
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !43

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !44

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !45

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #11
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK23SpellcheckCharAttribute10GetRuleSetEb: argument 0"}
!15 = distinct !{!15, !"_ZNK23SpellcheckCharAttribute10GetRuleSetEb"}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !8}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !8}
!25 = !{!"branch_weights", i32 2000, i32 1}
!26 = !{i32 -2138456461}
!27 = !{i8 0, i8 2}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !8}
!34 = distinct !{!34, !10}
!35 = distinct !{!35, !10}
!36 = distinct !{!36, !8}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !8}
!43 = distinct !{!43, !10}
!44 = distinct !{!44, !10}
!45 = distinct !{!45, !8}
