; ModuleID = '../../components/sync/base/invalidation_adapter.cc'
source_filename = "../../components/sync/base/invalidation_adapter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.syncer::InvalidationAdapter" = type { %"class.syncer::InvalidationInterface", %"class.invalidation::Invalidation" }
%"class.syncer::InvalidationInterface" = type { i32 (...)** }
%"class.invalidation::Invalidation" = type { %"class.std::__1::basic_string", i8, i64, %"class.std::__1::basic_string", %"class.invalidation::AckHandle", %"class.base::WeakPtr", %class.scoped_refptr.7 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.invalidation::AckHandle" = type { %"class.std::__1::basic_string", %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%class.scoped_refptr.7 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.8" }>
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZTVN6syncer19InvalidationAdapterE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.syncer::InvalidationAdapter"*)* @_ZN6syncer19InvalidationAdapterD2Ev to i8*), i8* bitcast (void (%"class.syncer::InvalidationAdapter"*)* @_ZN6syncer19InvalidationAdapterD0Ev to i8*), i8* bitcast (i1 (%"class.syncer::InvalidationAdapter"*)* @_ZNK6syncer19InvalidationAdapter16IsUnknownVersionEv to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.syncer::InvalidationAdapter"*)* @_ZNK6syncer19InvalidationAdapter10GetPayloadEv to i8*), i8* bitcast (i64 (%"class.syncer::InvalidationAdapter"*)* @_ZNK6syncer19InvalidationAdapter10GetVersionEv to i8*), i8* bitcast (void (%"class.syncer::InvalidationAdapter"*)* @_ZN6syncer19InvalidationAdapter11AcknowledgeEv to i8*), i8* bitcast (void (%"class.syncer::InvalidationAdapter"*)* @_ZN6syncer19InvalidationAdapter4DropEv to i8*)] }, align 8

@_ZN6syncer19InvalidationAdapterC1ERKN12invalidation12InvalidationE = hidden unnamed_addr alias void (%"class.syncer::InvalidationAdapter"*, %"class.invalidation::Invalidation"*), void (%"class.syncer::InvalidationAdapter"*, %"class.invalidation::Invalidation"*)* @_ZN6syncer19InvalidationAdapterC2ERKN12invalidation12InvalidationE
@_ZN6syncer19InvalidationAdapterD1Ev = hidden unnamed_addr alias void (%"class.syncer::InvalidationAdapter"*), void (%"class.syncer::InvalidationAdapter"*)* @_ZN6syncer19InvalidationAdapterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19InvalidationAdapterC2ERKN12invalidation12InvalidationE(%"class.syncer::InvalidationAdapter"*, %"class.invalidation::Invalidation"* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 0
  tail call void @_ZN6syncer21InvalidationInterfaceC2Ev(%"class.syncer::InvalidationInterface"* %3) #4
  %4 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6syncer19InvalidationAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 1
  tail call void @_ZN12invalidation12InvalidationC1ERKS0_(%"class.invalidation::Invalidation"* %5, %"class.invalidation::Invalidation"* dereferenceable(120) %1) #4
  ret void
}

declare void @_ZN6syncer21InvalidationInterfaceC2Ev(%"class.syncer::InvalidationInterface"*) unnamed_addr #1

declare void @_ZN12invalidation12InvalidationC1ERKS0_(%"class.invalidation::Invalidation"*, %"class.invalidation::Invalidation"* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19InvalidationAdapterD2Ev(%"class.syncer::InvalidationAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6syncer19InvalidationAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 1
  tail call void @_ZN12invalidation12InvalidationD1Ev(%"class.invalidation::Invalidation"* %3) #4
  %4 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 0
  tail call void @_ZN6syncer21InvalidationInterfaceD2Ev(%"class.syncer::InvalidationInterface"* %4) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12invalidation12InvalidationD1Ev(%"class.invalidation::Invalidation"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6syncer21InvalidationInterfaceD2Ev(%"class.syncer::InvalidationInterface"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19InvalidationAdapterD0Ev(%"class.syncer::InvalidationAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6syncer19InvalidationAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 1
  tail call void @_ZN12invalidation12InvalidationD1Ev(%"class.invalidation::Invalidation"* %3) #4
  %4 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 0
  tail call void @_ZN6syncer21InvalidationInterfaceD2Ev(%"class.syncer::InvalidationInterface"* %4) #4
  %5 = bitcast %"class.syncer::InvalidationAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6syncer19InvalidationAdapter16IsUnknownVersionEv(%"class.syncer::InvalidationAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK12invalidation12Invalidation18is_unknown_versionEv(%"class.invalidation::Invalidation"* %2) #4
  ret i1 %3
}

declare zeroext i1 @_ZNK12invalidation12Invalidation18is_unknown_versionEv(%"class.invalidation::Invalidation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK6syncer19InvalidationAdapter10GetPayloadEv(%"class.syncer::InvalidationAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 1
  %3 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK12invalidation12Invalidation7payloadEv(%"class.invalidation::Invalidation"* %2) #4
  ret %"class.std::__1::basic_string"* %3
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK12invalidation12Invalidation7payloadEv(%"class.invalidation::Invalidation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6syncer19InvalidationAdapter10GetVersionEv(%"class.syncer::InvalidationAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 1
  %3 = tail call i64 @_ZNK12invalidation12Invalidation7versionEv(%"class.invalidation::Invalidation"* %2) #4
  ret i64 %3
}

declare i64 @_ZNK12invalidation12Invalidation7versionEv(%"class.invalidation::Invalidation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19InvalidationAdapter11AcknowledgeEv(%"class.syncer::InvalidationAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 1
  tail call void @_ZNK12invalidation12Invalidation11AcknowledgeEv(%"class.invalidation::Invalidation"* %2) #4
  ret void
}

declare void @_ZNK12invalidation12Invalidation11AcknowledgeEv(%"class.invalidation::Invalidation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19InvalidationAdapter4DropEv(%"class.syncer::InvalidationAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::InvalidationAdapter", %"class.syncer::InvalidationAdapter"* %0, i64 0, i32 1
  tail call void @_ZN12invalidation12Invalidation4DropEv(%"class.invalidation::Invalidation"* %2) #4
  ret void
}

declare void @_ZN12invalidation12Invalidation4DropEv(%"class.invalidation::Invalidation"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
