; ModuleID = '../../extensions/renderer/web_request_hooks.cc'
source_filename = "../../extensions/renderer/web_request_hooks.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.extensions::WebRequestHooks" = type { %"class.extensions::APIBindingHooksDelegate" }
%"class.extensions::APIBindingHooksDelegate" = type { i32 (...)** }
%"class.v8::Context" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.extensions::ModuleSystem::NativesEnabledScope" = type { %"class.extensions::ModuleSystem"* }
%"class.extensions::ModuleSystem" = type { %"class.extensions::ObjectBackedNativeHandler", %"class.extensions::ScriptContext"*, %"class.extensions::SourceMap"*, %"class.std::__1::map.100", i32, %"class.std::__1::unique_ptr.109", %"class.std::__1::set.115", %"class.std::__1::vector.123", %"class.v8::Eternal", %"class.base::RepeatingCallback", %"class.std::__1::set.115" }
%"class.extensions::ObjectBackedNativeHandler" = type { %"class.extensions::NativeHandler.base", i32, %"class.v8::PersistentValueVector", %"class.extensions::ScriptContext"*, %"class.v8::Global.98" }
%"class.extensions::NativeHandler.base" = type <{ i32 (...)**, i8 }>
%"class.v8::PersistentValueVector" = type { %"class.v8::Isolate"*, %"class.std::__1::vector.91" }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::Global.98" = type { %"class.v8::PersistentBase.99" }
%"class.v8::PersistentBase.99" = type { %"class.v8::ObjectTemplate"* }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.extensions::ScriptContext" = type <{ i8, [7 x i8], %"class.v8::Global", %"class.blink::WebLocalFrame"*, %class.scoped_refptr, i32, [4 x i8], %class.scoped_refptr, i32, [4 x i8], %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.88", %"class.extensions::SafeBuiltins", %"class.extensions::APIPermissionSet", %"class.std::__1::vector.147", %"class.v8::Isolate"*, %class.GURL, %class.GURL, i64, %"class.base::ThreadChecker", [7 x i8] }>
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::WebLocalFrame" = type opaque
%class.scoped_refptr = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.14", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.38", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.20" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i32*, i32*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i32* }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.44" }
%"union.absl::variant_internal::DestructibleUnionImpl.44" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"union.absl::variant_internal::DestructibleUnionImpl.47" }
%"union.absl::variant_internal::DestructibleUnionImpl.47" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.extensions::ModuleSystem"* }
%"class.extensions::SafeBuiltins" = type { %"class.extensions::ScriptContext"* }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map.136" }
%"class.std::__1::map.136" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.149" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.131 }
%class.scoped_refptr.131 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.132", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.132" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.base::OnceCallback"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.25" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.GURL* }
%"class.base::ThreadChecker" = type { i8 }
%"class.extensions::SourceMap" = type opaque
%"class.std::__1::map.100" = type { %"class.std::__1::__tree.101" }
%"class.std::__1::__tree.101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.extensions::ModuleSystem::ExceptionHandler"* }
%"class.extensions::ModuleSystem::ExceptionHandler" = type { i32 (...)**, %"class.extensions::ScriptContext"* }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::unique_ptr.125" = type opaque
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::unique_ptr.125"* }
%"class.v8::Eternal" = type { %"class.v8::FunctionTemplate"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::set.115" = type { %"class.std::__1::__tree.116" }
%"class.std::__1::__tree.116" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.extensions::ExtensionAPI" = type { i32 (...)**, i8, %"class.base::Lock", %"class.std::__1::map.157", %"class.std::__1::map.166" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map.157" = type { %"class.std::__1::__tree.158" }
%"class.std::__1::__tree.158" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.166" = type { %"class.std::__1::__tree.167" }
%"class.std::__1::__tree.167" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.content::V8ValueConverter" = type { %"class.blink::WebV8ValueConverter" }
%"class.blink::WebV8ValueConverter" = type { i32 (...)** }
%"class.v8::Function" = type { i8 }
%"class.v8::Primitive" = type { i8 }
%"class.extensions::JSRunner" = type { i32 (...)** }
%"struct.extensions::APIBindingHooks::RequestResult" = type { i32, %"class.v8::Local.181", %"class.v8::Local.1", %"class.std::__1::basic_string" }
%"class.v8::Local.181" = type { %"class.v8::Function"* }
%"class.extensions::APISignature" = type opaque
%"class.std::__1::vector.183" = type opaque
%"class.extensions::APITypeReferenceMap" = type opaque

$_ZN10extensions23APIBindingHooksDelegate18InitializeTemplateEPN2v87IsolateENS1_5LocalINS1_14ObjectTemplateEEERKNS_19APITypeReferenceMapE = comdat any

$_ZN10extensions23APIBindingHooksDelegate18InitializeInstanceEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE = comdat any

@_ZTVN10extensions15WebRequestHooksE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::WebRequestHooks"*)* @_ZN10extensions15WebRequestHooksD2Ev to i8*), i8* bitcast (void (%"class.extensions::WebRequestHooks"*)* @_ZN10extensions15WebRequestHooksD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::WebRequestHooks"*, %"class.v8::Context"*, %"class.std::__1::basic_string"*, %"class.v8::Local.1"*)* @_ZN10extensions15WebRequestHooks17CreateCustomEventEN2v85LocalINS1_7ContextEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS2_INS1_5ValueEEE to i8*), i8* bitcast (void (%"struct.extensions::APIBindingHooks::RequestResult"*, %"class.extensions::APIBindingHooksDelegate"*, %"class.std::__1::basic_string"*, %"class.extensions::APISignature"*, %"class.v8::Context"*, %"class.std::__1::vector.183"*, %"class.extensions::APITypeReferenceMap"*)* @_ZN10extensions23APIBindingHooksDelegate13HandleRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKNS_12APISignatureEN2v85LocalINSD_7ContextEEEPNS1_6vectorINSE_INSD_5ValueEEENS5_ISJ_EEEERKNS_19APITypeReferenceMapE to i8*), i8* bitcast (void (%"class.extensions::APIBindingHooksDelegate"*, %"class.v8::Isolate"*, %"class.v8::ObjectTemplate"*, %"class.extensions::APITypeReferenceMap"*)* @_ZN10extensions23APIBindingHooksDelegate18InitializeTemplateEPN2v87IsolateENS1_5LocalINS1_14ObjectTemplateEEERKNS_19APITypeReferenceMapE to i8*), i8* bitcast (void (%"class.extensions::APIBindingHooksDelegate"*, %"class.v8::Context"*, %"class.v8::Object"*)* @_ZN10extensions23APIBindingHooksDelegate18InitializeInstanceEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE to i8*)] }, align 8
@_ZN10extensions3api11web_request15OnActionIgnored10kEventNameE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [16 x i8] c"webRequestEvent\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"createWebRequestEvent\00", align 1
@.ref.tmp = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i32 0, i32 0), i64 21 }, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"extraParameters\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"../../extensions/renderer/web_request_hooks.cc\00", align 1
@.str.4 = private unnamed_addr constant [54 x i8] c"event_spec->GetList(\22extraParameters\22, &extra_params)\00", align 1

@_ZN10extensions15WebRequestHooksC1Ev = hidden unnamed_addr alias void (%"class.extensions::WebRequestHooks"*), void (%"class.extensions::WebRequestHooks"*)* @_ZN10extensions15WebRequestHooksC2Ev
@_ZN10extensions15WebRequestHooksD1Ev = hidden unnamed_addr alias void (%"class.extensions::WebRequestHooks"*), void (%"class.extensions::WebRequestHooks"*)* @_ZN10extensions15WebRequestHooksD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions15WebRequestHooksC2Ev(%"class.extensions::WebRequestHooks"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::WebRequestHooks", %"class.extensions::WebRequestHooks"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions15WebRequestHooksE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions23APIBindingHooksDelegateD2Ev(%"class.extensions::APIBindingHooksDelegate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15WebRequestHooksD2Ev(%"class.extensions::WebRequestHooks"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::WebRequestHooks", %"class.extensions::WebRequestHooks"* %0, i64 0, i32 0
  tail call void @_ZN10extensions23APIBindingHooksDelegateD2Ev(%"class.extensions::APIBindingHooksDelegate"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15WebRequestHooksD0Ev(%"class.extensions::WebRequestHooks"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::WebRequestHooks", %"class.extensions::WebRequestHooks"* %0, i64 0, i32 0
  tail call void @_ZN10extensions23APIBindingHooksDelegateD2Ev(%"class.extensions::APIBindingHooksDelegate"* %2) #7
  %3 = bitcast %"class.extensions::WebRequestHooks"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions15WebRequestHooks17CreateCustomEventEN2v85LocalINS1_7ContextEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS2_INS1_5ValueEEE(%"class.extensions::WebRequestHooks"* nocapture readnone, %"class.v8::Context"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.v8::Local.1"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.extensions::ModuleSystem::NativesEnabledScope", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.base::ListValue"*, align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca [3 x %"class.v8::Local.1"], align 16
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = alloca %"class.v8::TryCatch", align 8
  %13 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions3api11web_request15OnActionIgnored10kEventNameE, i64 0, i64 0)) #7
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = icmp eq i64 %13, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %4
  %24 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions3api11web_request15OnActionIgnored10kEventNameE, i64 0, i64 0), i64 %13) #7
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %113, label %26

26:                                               ; preds = %4, %23
  %27 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #7
  %28 = tail call %"class.extensions::ScriptContext"* @_ZN10extensions29GetScriptContextFromV8ContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %1) #7
  %29 = bitcast %"class.extensions::ModuleSystem::NativesEnabledScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  %30 = getelementptr inbounds %"class.extensions::ModuleSystem::NativesEnabledScope", %"class.extensions::ModuleSystem::NativesEnabledScope"* %5, i64 0, i32 0
  store %"class.extensions::ModuleSystem"* inttoptr (i64 -6148914691236517206 to %"class.extensions::ModuleSystem"*), %"class.extensions::ModuleSystem"** %30, align 8
  %31 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %28, i64 0, i32 11, i32 0, i32 0, i32 0
  %32 = load %"class.extensions::ModuleSystem"*, %"class.extensions::ModuleSystem"** %31, align 8
  call void @_ZN10extensions12ModuleSystem19NativesEnabledScopeC1EPS0_(%"class.extensions::ModuleSystem::NativesEnabledScope"* nonnull %5, %"class.extensions::ModuleSystem"* %32) #7
  %33 = load %"class.extensions::ModuleSystem"*, %"class.extensions::ModuleSystem"** %31, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #7
  %35 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 15, i8* %36, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i64 15, i1 false) #7
  %37 = getelementptr inbounds i8, i8* %34, i64 15
  store i8 0, i8* %37, align 1
  %38 = call %"class.v8::Object"* @_ZN10extensions12ModuleSystem7RequireERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ModuleSystem"* %33, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  %39 = icmp eq %"class.v8::Object"* %38, null
  %40 = load i8, i8* %36, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %26, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #7
  call void @_ZN10extensions12ModuleSystem19NativesEnabledScopeD1Ev(%"class.extensions::ModuleSystem::NativesEnabledScope"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  br i1 %39, label %113, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %47) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %27) #7
  %48 = call %"class.v8::String"* @_ZN3gin14StringToSymbolEPN2v87IsolateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.v8::Isolate"* %27, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp) #7
  %49 = bitcast %"class.v8::String"* %48 to %"class.v8::Value"*
  %50 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %38, %"class.v8::Context"* %1, %"class.v8::Value"* %49) #7
  %51 = icmp eq %"class.v8::Value"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %50) #7
  br i1 %53, label %55, label %54

54:                                               ; preds = %46, %52
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %47) #7
  br label %113

55:                                               ; preds = %52
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %47) #7
  %56 = call %"class.extensions::ExtensionAPI"* @_ZN10extensions12ExtensionAPI17GetSharedInstanceEv() #7
  %57 = call %"class.base::DictionaryValue"* @_ZN10extensions12ExtensionAPI9GetSchemaERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionAPI"* %56, %"class.std::__1::basic_string"* dereferenceable(24) %2) #7
  %58 = bitcast %"class.base::ListValue"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #7
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %8, align 8
  %59 = call zeroext i1 @_ZNK4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_9ListValueE(%"class.base::DictionaryValue"* %57, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15, %"class.base::ListValue"** nonnull %8) #7
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0)) #7
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #7
  br label %63

63:                                               ; preds = %55, %60
  %64 = call %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() #7
  %65 = bitcast %"class.base::ListValue"** %8 to %"class.base::Value"**
  %66 = load %"class.base::Value"*, %"class.base::Value"** %65, align 8
  %67 = bitcast %"class.content::V8ValueConverter"* %64 to %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)***
  %68 = load %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)**, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*** %67, align 8
  %69 = getelementptr inbounds %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)** %68, i64 4
  %70 = load %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)** %69, align 8
  %71 = call %"class.v8::Value"* %70(%"class.content::V8ValueConverter"* %64, %"class.base::Value"* %66, %"class.v8::Context"* %1) #7
  %72 = icmp eq %"class.content::V8ValueConverter"* %64, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %63
  %74 = bitcast %"class.content::V8ValueConverter"* %64 to void (%"class.content::V8ValueConverter"*)***
  %75 = load void (%"class.content::V8ValueConverter"*)**, void (%"class.content::V8ValueConverter"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %75, i64 1
  %77 = load void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %76, align 8
  call void %77(%"class.content::V8ValueConverter"* nonnull %64) #7
  br label %78

78:                                               ; preds = %63, %73
  %79 = bitcast %"class.v8::Value"* %50 to %"class.v8::Function"*
  %80 = bitcast [3 x %"class.v8::Local.1"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #7
  %81 = getelementptr inbounds [3 x %"class.v8::Local.1"], [3 x %"class.v8::Local.1"]* %10, i64 0, i64 0
  %82 = getelementptr inbounds [3 x %"class.v8::Local.1"], [3 x %"class.v8::Local.1"]* %10, i64 0, i64 2, i32 0
  %83 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #7
  %84 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %85 = load i8, i8* %15, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %90 = select i1 %86, i8* %88, i8* %89
  store i8* %90, i8** %84, align 8
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  %92 = load i64, i64* %18, align 8
  %93 = zext i8 %85 to i64
  %94 = select i1 %86, i64 %92, i64 %93
  store i64 %94, i64* %91, align 8
  %95 = call %"class.v8::String"* @_ZN3gin14StringToSymbolEPN2v87IsolateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.v8::Isolate"* %27, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %11) #7
  %96 = bitcast [3 x %"class.v8::Local.1"]* %10 to %"class.v8::String"**
  store %"class.v8::String"* %95, %"class.v8::String"** %96, align 16
  %97 = getelementptr inbounds [3 x %"class.v8::Local.1"], [3 x %"class.v8::Local.1"]* %10, i64 0, i64 1
  %98 = ptrtoint %"class.v8::Isolate"* %27 to i64
  %99 = add i64 %98, 160
  %100 = inttoptr i64 %99 to %"class.v8::Primitive"*
  %101 = bitcast %"class.v8::Local.1"* %97 to %"class.v8::Primitive"**
  store %"class.v8::Primitive"* %100, %"class.v8::Primitive"** %101, align 8
  store %"class.v8::Value"* %71, %"class.v8::Value"** %82, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #7
  %102 = bitcast %"class.v8::TryCatch"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %102) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %12, %"class.v8::Isolate"* %27) #7
  %103 = call %"class.extensions::JSRunner"* @_ZN10extensions8JSRunner3GetEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1) #7
  %104 = bitcast %"class.extensions::JSRunner"* %103 to %"class.v8::Value"* (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.1"*)***
  %105 = load %"class.v8::Value"* (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.1"*)**, %"class.v8::Value"* (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.1"*)*** %104, align 8
  %106 = getelementptr inbounds %"class.v8::Value"* (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.1"*)*, %"class.v8::Value"* (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.1"*)** %105, i64 3
  %107 = load %"class.v8::Value"* (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.1"*)*, %"class.v8::Value"* (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.1"*)** %106, align 8
  %108 = call %"class.v8::Value"* %107(%"class.extensions::JSRunner"* %103, %"class.v8::Function"* nonnull %79, %"class.v8::Context"* %1, i32 3, %"class.v8::Local.1"* nonnull %81) #7
  %109 = ptrtoint %"class.v8::Value"* %108 to i64
  %110 = icmp eq %"class.v8::Value"* %108, null
  %111 = select i1 %110, i64 %99, i64 %109
  %112 = bitcast %"class.v8::Local.1"* %3 to i64*
  store i64 %111, i64* %112, align 8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %102) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #7
  br label %113

113:                                              ; preds = %45, %54, %78, %23
  %114 = phi i1 [ false, %23 ], [ false, %45 ], [ true, %78 ], [ false, %54 ]
  ret i1 %114
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #5

declare %"class.extensions::ScriptContext"* @_ZN10extensions29GetScriptContextFromV8ContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN10extensions12ModuleSystem19NativesEnabledScopeC1EPS0_(%"class.extensions::ModuleSystem::NativesEnabledScope"*, %"class.extensions::ModuleSystem"*) unnamed_addr #5

declare %"class.v8::Object"* @_ZN10extensions12ModuleSystem7RequireERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ModuleSystem"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN10extensions12ModuleSystem19NativesEnabledScopeD1Ev(%"class.extensions::ModuleSystem::NativesEnabledScope"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #5

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #5

declare %"class.v8::String"* @_ZN3gin14StringToSymbolEPN2v87IsolateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.v8::Isolate"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #1

declare %"class.extensions::ExtensionAPI"* @_ZN10extensions12ExtensionAPI17GetSharedInstanceEv() local_unnamed_addr #5

declare %"class.base::DictionaryValue"* @_ZN10extensions12ExtensionAPI9GetSchemaERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionAPI"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_9ListValueE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::ListValue"**) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() local_unnamed_addr #5

declare %"class.extensions::JSRunner"* @_ZN10extensions8JSRunner3GetEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #5

declare void @_ZN10extensions23APIBindingHooksDelegate13HandleRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKNS_12APISignatureEN2v85LocalINSD_7ContextEEEPNS1_6vectorINSE_INSD_5ValueEEENS5_ISJ_EEEERKNS_19APITypeReferenceMapE(%"struct.extensions::APIBindingHooks::RequestResult"* sret, %"class.extensions::APIBindingHooksDelegate"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.extensions::APISignature"*, %"class.v8::Context"*, %"class.std::__1::vector.183"*, %"class.extensions::APITypeReferenceMap"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23APIBindingHooksDelegate18InitializeTemplateEPN2v87IsolateENS1_5LocalINS1_14ObjectTemplateEEERKNS_19APITypeReferenceMapE(%"class.extensions::APIBindingHooksDelegate"*, %"class.v8::Isolate"*, %"class.v8::ObjectTemplate"*, %"class.extensions::APITypeReferenceMap"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions23APIBindingHooksDelegate18InitializeInstanceEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE(%"class.extensions::APIBindingHooksDelegate"*, %"class.v8::Context"*, %"class.v8::Object"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
