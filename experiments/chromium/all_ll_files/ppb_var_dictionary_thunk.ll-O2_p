; ModuleID = '../../ppapi/thunk/ppb_var_dictionary_thunk.cc'
source_filename = "../../ppapi/thunk/ppb_var_dictionary_thunk.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.PPB_VarDictionary_1_0 = type { { i64, i64 } ()*, { i64, i64 } (i64, i64, i64, i64)*, i32 (i64, i64, i64, i64, i64, i64)*, void (i64, i64, i64, i64)*, i32 (i64, i64, i64, i64)*, { i64, i64 } (i64, i64)* }
%"class.ppapi::DictionaryVar" = type { %"class.ppapi::Var", %"class.std::__1::map" }
%"class.ppapi::Var" = type { i32 (...)**, %"class.base::RefCounted", i32 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }

@_ZN5ppapi5thunk12_GLOBAL__N_129g_ppb_vardictionary_1_0_thunkE = internal constant %struct.PPB_VarDictionary_1_0 { { i64, i64 } ()* @_ZN5ppapi5thunk12_GLOBAL__N_16CreateEv, { i64, i64 } (i64, i64, i64, i64)* @_ZN5ppapi5thunk12_GLOBAL__N_13GetE6PP_VarS2_, i32 (i64, i64, i64, i64, i64, i64)* @_ZN5ppapi5thunk12_GLOBAL__N_13SetE6PP_VarS2_S2_, void (i64, i64, i64, i64)* @_ZN5ppapi5thunk12_GLOBAL__N_16DeleteE6PP_VarS2_, i32 (i64, i64, i64, i64)* @_ZN5ppapi5thunk12_GLOBAL__N_16HasKeyE6PP_VarS2_, { i64, i64 } (i64, i64)* @_ZN5ppapi5thunk12_GLOBAL__N_17GetKeysE6PP_Var }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.PPB_VarDictionary_1_0* @_ZN5ppapi5thunk30GetPPB_VarDictionary_1_0_ThunkEv() local_unnamed_addr #0 {
  ret %struct.PPB_VarDictionary_1_0* @_ZN5ppapi5thunk12_GLOBAL__N_129g_ppb_vardictionary_1_0_thunkE
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZN5ppapi5thunk12_GLOBAL__N_16CreateEv() #1 {
  tail call void @_ZN5ppapi9ProxyLock7AcquireEv() #4
  %1 = tail call i8* @_Znwm(i64 40) #5
  %2 = bitcast i8* %1 to %"class.ppapi::DictionaryVar"*
  tail call void @_ZN5ppapi13DictionaryVarC1Ev(%"class.ppapi::DictionaryVar"* nonnull %2) #4
  %3 = bitcast i8* %1 to %"class.ppapi::Var"*
  %4 = tail call { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"* nonnull %3) #4
  tail call void @_ZN5ppapi9ProxyLock7ReleaseEv() #4
  ret { i64, i64 } %4
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZN5ppapi5thunk12_GLOBAL__N_13GetE6PP_VarS2_(i64, i64, i64, i64) #1 {
  %5 = alloca %struct.PP_Var, align 8
  %6 = alloca %struct.PP_Var, align 8
  %7 = bitcast %struct.PP_Var* %5 to i64*
  store i64 %0, i64* %7, align 8
  %8 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %5, i64 0, i32 2
  %9 = bitcast %union.PP_VarValue* %8 to i64*
  store i64 %1, i64* %9, align 8
  %10 = bitcast %struct.PP_Var* %6 to i64*
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %6, i64 0, i32 2
  %12 = bitcast %union.PP_VarValue* %11 to i64*
  store i64 %3, i64* %12, align 8
  tail call void @_ZN5ppapi9ProxyLock7AcquireEv() #4
  %13 = call %"class.ppapi::DictionaryVar"* @_ZN5ppapi13DictionaryVar9FromPPVarERK6PP_Var(%struct.PP_Var* nonnull dereferenceable(16) %5) #4
  %14 = icmp eq %"class.ppapi::DictionaryVar"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  %16 = call { i64, i64 } @_ZNK5ppapi13DictionaryVar3GetERK6PP_Var(%"class.ppapi::DictionaryVar"* nonnull %13, %struct.PP_Var* nonnull dereferenceable(16) %6) #4
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = extractvalue { i64, i64 } %16, 1
  br label %19

19:                                               ; preds = %4, %15
  %20 = phi i64 [ %18, %15 ], [ -6148914694099828736, %4 ]
  %21 = phi i64 [ %17, %15 ], [ 0, %4 ]
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #4
  %22 = insertvalue { i64, i64 } undef, i64 %21, 0
  %23 = insertvalue { i64, i64 } %22, i64 %20, 1
  ret { i64, i64 } %23
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5ppapi5thunk12_GLOBAL__N_13SetE6PP_VarS2_S2_(i64, i64, i64, i64, i64, i64) #1 {
  %7 = alloca %struct.PP_Var, align 8
  %8 = alloca %struct.PP_Var, align 8
  %9 = alloca %struct.PP_Var, align 8
  %10 = bitcast %struct.PP_Var* %7 to i64*
  store i64 %0, i64* %10, align 8
  %11 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %7, i64 0, i32 2
  %12 = bitcast %union.PP_VarValue* %11 to i64*
  store i64 %1, i64* %12, align 8
  %13 = bitcast %struct.PP_Var* %8 to i64*
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %8, i64 0, i32 2
  %15 = bitcast %union.PP_VarValue* %14 to i64*
  store i64 %3, i64* %15, align 8
  %16 = bitcast %struct.PP_Var* %9 to i64*
  store i64 %4, i64* %16, align 8
  %17 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %9, i64 0, i32 2
  %18 = bitcast %union.PP_VarValue* %17 to i64*
  store i64 %5, i64* %18, align 8
  tail call void @_ZN5ppapi9ProxyLock7AcquireEv() #4
  %19 = call %"class.ppapi::DictionaryVar"* @_ZN5ppapi13DictionaryVar9FromPPVarERK6PP_Var(%struct.PP_Var* nonnull dereferenceable(16) %7) #4
  %20 = icmp eq %"class.ppapi::DictionaryVar"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %6
  %22 = call i32 @_ZN5ppapi13DictionaryVar3SetERK6PP_VarS3_(%"class.ppapi::DictionaryVar"* nonnull %19, %struct.PP_Var* nonnull dereferenceable(16) %8, %struct.PP_Var* nonnull dereferenceable(16) %9) #4
  br label %23

23:                                               ; preds = %6, %21
  %24 = phi i32 [ %22, %21 ], [ 0, %6 ]
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #4
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5ppapi5thunk12_GLOBAL__N_16DeleteE6PP_VarS2_(i64, i64, i64, i64) #1 {
  %5 = alloca %struct.PP_Var, align 8
  %6 = alloca %struct.PP_Var, align 8
  %7 = bitcast %struct.PP_Var* %5 to i64*
  store i64 %0, i64* %7, align 8
  %8 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %5, i64 0, i32 2
  %9 = bitcast %union.PP_VarValue* %8 to i64*
  store i64 %1, i64* %9, align 8
  %10 = bitcast %struct.PP_Var* %6 to i64*
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %6, i64 0, i32 2
  %12 = bitcast %union.PP_VarValue* %11 to i64*
  store i64 %3, i64* %12, align 8
  tail call void @_ZN5ppapi9ProxyLock7AcquireEv() #4
  %13 = call %"class.ppapi::DictionaryVar"* @_ZN5ppapi13DictionaryVar9FromPPVarERK6PP_Var(%struct.PP_Var* nonnull dereferenceable(16) %5) #4
  %14 = icmp eq %"class.ppapi::DictionaryVar"* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  call void @_ZN5ppapi13DictionaryVar6DeleteERK6PP_Var(%"class.ppapi::DictionaryVar"* nonnull %13, %struct.PP_Var* nonnull dereferenceable(16) %6) #4
  br label %16

16:                                               ; preds = %4, %15
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5ppapi5thunk12_GLOBAL__N_16HasKeyE6PP_VarS2_(i64, i64, i64, i64) #1 {
  %5 = alloca %struct.PP_Var, align 8
  %6 = alloca %struct.PP_Var, align 8
  %7 = bitcast %struct.PP_Var* %5 to i64*
  store i64 %0, i64* %7, align 8
  %8 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %5, i64 0, i32 2
  %9 = bitcast %union.PP_VarValue* %8 to i64*
  store i64 %1, i64* %9, align 8
  %10 = bitcast %struct.PP_Var* %6 to i64*
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %6, i64 0, i32 2
  %12 = bitcast %union.PP_VarValue* %11 to i64*
  store i64 %3, i64* %12, align 8
  tail call void @_ZN5ppapi9ProxyLock7AcquireEv() #4
  %13 = call %"class.ppapi::DictionaryVar"* @_ZN5ppapi13DictionaryVar9FromPPVarERK6PP_Var(%struct.PP_Var* nonnull dereferenceable(16) %5) #4
  %14 = icmp eq %"class.ppapi::DictionaryVar"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = call i32 @_ZNK5ppapi13DictionaryVar6HasKeyERK6PP_Var(%"class.ppapi::DictionaryVar"* nonnull %13, %struct.PP_Var* nonnull dereferenceable(16) %6) #4
  br label %17

17:                                               ; preds = %4, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %4 ]
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #4
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZN5ppapi5thunk12_GLOBAL__N_17GetKeysE6PP_Var(i64, i64) #1 {
  %3 = alloca %struct.PP_Var, align 8
  %4 = bitcast %struct.PP_Var* %3 to i64*
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %3, i64 0, i32 2
  %6 = bitcast %union.PP_VarValue* %5 to i64*
  store i64 %1, i64* %6, align 8
  tail call void @_ZN5ppapi9ProxyLock7AcquireEv() #4
  %7 = call %"class.ppapi::DictionaryVar"* @_ZN5ppapi13DictionaryVar9FromPPVarERK6PP_Var(%struct.PP_Var* nonnull dereferenceable(16) %3) #4
  %8 = icmp eq %"class.ppapi::DictionaryVar"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = call { i64, i64 } @_ZNK5ppapi13DictionaryVar7GetKeysEv(%"class.ppapi::DictionaryVar"* nonnull %7) #4
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %12, %9 ], [ -6148914694099828736, %2 ]
  %15 = phi i64 [ %11, %9 ], [ 1, %2 ]
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #4
  %16 = insertvalue { i64, i64 } undef, i64 %15, 0
  %17 = insertvalue { i64, i64 } %16, i64 %14, 1
  ret { i64, i64 } %17
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN5ppapi13DictionaryVarC1Ev(%"class.ppapi::DictionaryVar"*) unnamed_addr #3

declare { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"*) local_unnamed_addr #3

declare void @_ZN5ppapi9ProxyLock7AcquireEv() local_unnamed_addr #3

declare void @_ZN5ppapi9ProxyLock7ReleaseEv() local_unnamed_addr #3

declare %"class.ppapi::DictionaryVar"* @_ZN5ppapi13DictionaryVar9FromPPVarERK6PP_Var(%struct.PP_Var* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5ppapi13DictionaryVar3GetERK6PP_Var(%"class.ppapi::DictionaryVar"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #3

declare i32 @_ZN5ppapi13DictionaryVar3SetERK6PP_VarS3_(%"class.ppapi::DictionaryVar"*, %struct.PP_Var* dereferenceable(16), %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5ppapi13DictionaryVar6DeleteERK6PP_Var(%"class.ppapi::DictionaryVar"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #3

declare i32 @_ZNK5ppapi13DictionaryVar6HasKeyERK6PP_Var(%"class.ppapi::DictionaryVar"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5ppapi13DictionaryVar7GetKeysEv(%"class.ppapi::DictionaryVar"*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
