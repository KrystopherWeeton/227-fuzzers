; ModuleID = '../../sql/recover_module/module.cc'
source_filename = "../../sql/recover_module/module.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.sqlite3_module = type { i32, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_vtab_cursor*, i64*)*, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)*, i32 (%struct.sqlite3_vtab*, i8*)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (i8*)* }
%struct.sqlite3 = type opaque
%struct.sqlite3_vtab = type { %struct.sqlite3_module*, i32, i8* }
%struct.sqlite3_index_info = type { i32, %"struct.sqlite3_index_info::sqlite3_index_constraint"*, i32, %"struct.sqlite3_index_info::sqlite3_index_orderby"*, %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"*, i32, i8*, i32, i32, double, i64, i32, i64 }
%"struct.sqlite3_index_info::sqlite3_index_constraint" = type { i32, i8, i8, i32 }
%"struct.sqlite3_index_info::sqlite3_index_orderby" = type { i32, i8 }
%"struct.sqlite3_index_info::sqlite3_index_constraint_usage" = type { i32, i8 }
%struct.sqlite3_vtab_cursor = type { %struct.sqlite3_vtab* }
%struct.sqlite3_value = type opaque
%struct.sqlite3_context = type opaque
%"struct.sql::recover::RecoveredColumnSpec" = type <{ %"class.std::__1::basic_string", i32, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.sql::recover::TargetTableSpec" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.sql::recover::RecoveredColumnSpec"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.sql::recover::VirtualTable" = type { %struct.sqlite3_vtab, %struct.sqlite3_file*, i32, i32, %"class.std::__1::vector" }
%struct.sqlite3_file = type { %struct.sqlite3_io_methods* }
%struct.sqlite3_io_methods = type { i32, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i64)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32*)*, i32 (%struct.sqlite3_file*, i32, i8*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32, i32, i32, i8**)*, i32 (%struct.sqlite3_file*, i32, i32, i32)*, void (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64, i32, i8**)*, i32 (%struct.sqlite3_file*, i64, i8*)* }
%"class.sql::recover::VirtualCursor" = type { %struct.sqlite3_vtab_cursor, %"class.sql::recover::VirtualTable"*, %"class.sql::recover::DatabasePageReader", %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::RecordReader", %"class.std::__1::vector.40", %"class.std::__1::unique_ptr.48" }
%"class.sql::recover::DatabasePageReader" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr.14", %"class.sql::recover::VirtualTable"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i8* }
%"class.sql::recover::LeafPayloadReader" = type { %"class.sql::recover::DatabasePageReader"*, i64, i32, i32, i32, i32, i32, %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { i32*, i32*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i32* }
%"class.sql::recover::RecordReader" = type <{ %"class.std::__1::vector.27", %"class.std::__1::vector.34", %"class.sql::recover::LeafPayloadReader"*, i32, [4 x i8] }>
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"*, %"class.std::__1::__compressed_pair.29" }
%"struct.sql::recover::RecordReader::ValueHeader" = type <{ i64, i64, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.sql::recover::RecordReader::ValueHeader"* }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { i8*, i8*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.std::__1::unique_ptr.42"*, %"class.std::__1::unique_ptr.42"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::unique_ptr.42" = type opaque
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::unique_ptr.42"* }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.sql::recover::LeafPageDecoder"* }
%"class.sql::recover::LeafPageDecoder" = type <{ i64, %"class.sql::recover::DatabasePageReader"*, i32, i32, i64, i64, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3sql7recover19RecoveredColumnSpecENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN3sql7recover19RecoveredColumnSpecENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"recover\00", align 1
@_ZN3sql7recover12_GLOBAL__N_113kSqliteModuleE = internal constant %struct.sqlite3_module { i32 1, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)* @_ZN3sql7recover12_GLOBAL__N_112ModuleCreateEP7sqlite3PviPKPKcPP12sqlite3_vtabPPc, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)* @_ZN3sql7recover12_GLOBAL__N_113ModuleConnectEP7sqlite3PviPKPKcPP12sqlite3_vtabPPc, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)* @_ZN3sql7recover12_GLOBAL__N_115ModuleBestIndexEP12sqlite3_vtabP18sqlite3_index_info, i32 (%struct.sqlite3_vtab*)* @_ZN3sql7recover12_GLOBAL__N_116ModuleDisconnectEP12sqlite3_vtab, i32 (%struct.sqlite3_vtab*)* @_ZN3sql7recover12_GLOBAL__N_113ModuleDestroyEP12sqlite3_vtab, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)* @_ZN3sql7recover12_GLOBAL__N_110ModuleOpenEP12sqlite3_vtabPP19sqlite3_vtab_cursor, i32 (%struct.sqlite3_vtab_cursor*)* @_ZN3sql7recover12_GLOBAL__N_111ModuleCloseEP19sqlite3_vtab_cursor, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)* @_ZN3sql7recover12_GLOBAL__N_112ModuleFilterEP19sqlite3_vtab_cursoriPKciPP13sqlite3_value, i32 (%struct.sqlite3_vtab_cursor*)* @_ZN3sql7recover12_GLOBAL__N_110ModuleNextEP19sqlite3_vtab_cursor, i32 (%struct.sqlite3_vtab_cursor*)* @_ZN3sql7recover12_GLOBAL__N_19ModuleEofEP19sqlite3_vtab_cursor, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)* @_ZN3sql7recover12_GLOBAL__N_112ModuleColumnEP19sqlite3_vtab_cursorP15sqlite3_contexti, i32 (%struct.sqlite3_vtab_cursor*, i64*)* @_ZN3sql7recover12_GLOBAL__N_111ModuleRowidEP19sqlite3_vtab_cursorPx, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)* null, i32 (%struct.sqlite3_vtab*)* null, i32 (%struct.sqlite3_vtab*)* null, i32 (%struct.sqlite3_vtab*)* null, i32 (%struct.sqlite3_vtab*)* null, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)* null, i32 (%struct.sqlite3_vtab*, i8*)* null, i32 (%struct.sqlite3_vtab*, i32)* null, i32 (%struct.sqlite3_vtab*, i32)* null, i32 (%struct.sqlite3_vtab*, i32)* null, i32 (i8*)* null }, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"temp\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"recover_\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3sql7recover24RegisterRecoverExtensionEP7sqlite3(%struct.sqlite3*) local_unnamed_addr #0 {
  %2 = tail call i32 @chrome_sqlite3_create_module_v2(%struct.sqlite3* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), %struct.sqlite3_module* nonnull @_ZN3sql7recover12_GLOBAL__N_113kSqliteModuleE, i8* null, void (i8*)* null) #13
  ret i32 %2
}

declare i32 @chrome_sqlite3_create_module_v2(%struct.sqlite3*, i8*, %struct.sqlite3_module*, i8*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_112ModuleCreateEP7sqlite3PviPKPKcPP12sqlite3_vtabPPc(%struct.sqlite3*, i8* nocapture readnone, i32, i8** nocapture readonly, %struct.sqlite3_vtab** nocapture, i8** nocapture readnone) #0 {
  %7 = alloca %"struct.sql::recover::RecoveredColumnSpec", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"struct.sql::recover::TargetTableSpec", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"struct.sql::recover::TargetTableSpec", align 8
  %13 = alloca %"class.std::__1::vector", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = icmp slt i32 %2, 5
  br i1 %15, label %255, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds i8*, i8** %3, i64 1
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %255

23:                                               ; preds = %16
  %24 = tail call i64 @strlen(i8* nonnull %18) #13
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %26, label %255

26:                                               ; preds = %23
  %27 = call i32 @bcmp(i8* nonnull %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #13
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %255

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8*, i8** %3, i64 2
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = call i64 @strlen(i8* nonnull %31) #13
  br label %38

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %33, %35
  %39 = phi i64 [ 0, %35 ], [ %34, %33 ]
  %40 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %31, i64 %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8, i32 0) #13
  br i1 %40, label %41, label %255

41:                                               ; preds = %38
  %42 = bitcast %"struct.sql::recover::TargetTableSpec"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds i8*, i8** %3, i64 3
  %46 = bitcast %"struct.sql::recover::TargetTableSpec"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 48, i1 false)
  %47 = load i8*, i8** %45, align 8
  call void @_ZN3sql7recover14ParseTableSpecEPKc(%"struct.sql::recover::TargetTableSpec"* nonnull sret %10, i8* %47) #13
  %48 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %10, i64 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = load i64, i64* %44, align 8
  %54 = zext i8 %51 to i64
  %55 = select i1 %52, i64 %53, i64 %54
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %240, label %57

57:                                               ; preds = %41
  %58 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #13
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #13, !alias.scope !2
  %62 = add nsw i32 %2, -3
  %63 = sext i32 %62 to i64
  call void @_ZNSt3__16vectorIN3sql7recover19RecoveredColumnSpecENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector"* nonnull %11, i64 %63) #13
  %64 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %7 to i8*
  %65 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %7, i64 0, i32 1
  %66 = bitcast i32* %65 to i8*
  %67 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %60 to i64*
  %68 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = zext i32 %2 to i64
  br label %74

72:                                               ; preds = %104
  %73 = icmp eq i64 %107, %71
  br i1 %73, label %127, label %74

74:                                               ; preds = %72, %57
  %75 = phi i64 [ 4, %57 ], [ %107, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #13, !noalias !2
  %76 = getelementptr inbounds i8*, i8** %3, i64 %75
  %77 = load i8*, i8** %76, align 8, !noalias !2
  call void @_ZN3sql7recover15ParseColumnSpecEPKc(%"struct.sql::recover::RecoveredColumnSpec"* nonnull sret %7, i8* %77) #13
  %78 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %60, align 8, !alias.scope !2
  %79 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %61, align 8, !alias.scope !2
  %80 = icmp ult %"struct.sql::recover::RecoveredColumnSpec"* %78, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %74
  %82 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %64, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #13, !noalias !2
  %83 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %78, i64 0, i32 1
  %84 = bitcast i32* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %66, i64 6, i1 false) #13
  %85 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %78, i64 1
  %86 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %85 to i64
  store i64 %86, i64* %67, align 8, !alias.scope !2
  br label %92

87:                                               ; preds = %74
  call void @_ZNSt3__16vectorIN3sql7recover19RecoveredColumnSpecENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %11, %"struct.sql::recover::RecoveredColumnSpec"* nonnull dereferenceable(32) %7) #13
  %88 = load i8, i8* %69, align 1, !noalias !2
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  %91 = load i8*, i8** %70, align 8, !noalias !2
  call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %90, %87, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #13, !noalias !2
  %93 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %60, align 8, !alias.scope !2
  %94 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %93, i64 -1
  %95 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %93, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  br label %104

102:                                              ; preds = %92
  %103 = zext i8 %97 to i64
  br label %104

104:                                              ; preds = %102, %99
  %105 = phi i64 [ %101, %99 ], [ %103, %102 ]
  %106 = icmp eq i64 %105, 0
  %107 = add nuw nsw i64 %75, 1
  br i1 %106, label %108, label %72

108:                                              ; preds = %104
  %109 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %59, align 8, !alias.scope !2
  %110 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %93, %109
  br i1 %110, label %126, label %111

111:                                              ; preds = %108, %121
  %112 = phi i8 [ %125, %121 ], [ %97, %108 ]
  %113 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %114, %121 ], [ %93, %108 ]
  %114 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %113, i64 -1
  %115 = icmp slt i8 %112, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %116, %111
  %120 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %114, %109
  br i1 %120, label %126, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %113, i64 -2
  %123 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  br label %111

126:                                              ; preds = %119, %108
  store %"struct.sql::recover::RecoveredColumnSpec"* %109, %"struct.sql::recover::RecoveredColumnSpec"** %60, align 8, !alias.scope !2
  br label %127

127:                                              ; preds = %72, %126
  %128 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %109, %126 ], [ %93, %72 ]
  %129 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %59, align 8
  %130 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %129, %128
  br i1 %130, label %213, label %131

131:                                              ; preds = %127
  %132 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %129 to i64
  %133 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %128 to i64
  %134 = bitcast %"struct.sql::recover::TargetTableSpec"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* nonnull align 8 %42, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #13
  %135 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %12, i64 0, i32 1
  %136 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  %137 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #13
  %138 = bitcast %"class.std::__1::vector"* %13 to i64*
  store i64 %132, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %140 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %139 to i64*
  store i64 %133, i64* %140, align 8
  %141 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %61 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %144 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %143 to i64*
  store i64 %142, i64* %144, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #13
  %145 = call { i32, %"class.sql::recover::VirtualTable"* } @_ZN3sql7recover12VirtualTable6CreateEP7sqlite3NS0_15TargetTableSpecENSt3__16vectorINS0_19RecoveredColumnSpecENS5_9allocatorIS7_EEEE(%struct.sqlite3* %0, %"struct.sql::recover::TargetTableSpec"* nonnull %12, %"class.std::__1::vector"* nonnull %13) #13
  %146 = extractvalue { i32, %"class.sql::recover::VirtualTable"* } %145, 0
  %147 = extractvalue { i32, %"class.sql::recover::VirtualTable"* } %145, 1
  %148 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %149 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %148, align 8
  %150 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %149, null
  br i1 %150, label %172, label %151

151:                                              ; preds = %131
  %152 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %149 to i8*
  %153 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %139, align 8
  %154 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %153, %149
  br i1 %154, label %170, label %155

155:                                              ; preds = %151, %165
  %156 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %157, %165 ], [ %153, %151 ]
  %157 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %156, i64 -1
  %158 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %157 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  call void @_ZdlPv(i8* %164) #14
  br label %165

165:                                              ; preds = %162, %155
  %166 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %157, %149
  br i1 %166, label %167, label %155

167:                                              ; preds = %165
  %168 = bitcast %"class.std::__1::vector"* %13 to i8**
  %169 = load i8*, i8** %168, align 8
  br label %170

170:                                              ; preds = %167, %151
  %171 = phi i8* [ %169, %167 ], [ %152, %151 ]
  store %"struct.sql::recover::RecoveredColumnSpec"* %149, %"struct.sql::recover::RecoveredColumnSpec"** %139, align 8
  call void @_ZdlPv(i8* %171) #14
  br label %172

172:                                              ; preds = %131, %170
  %173 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %179) #14
  br label %180

180:                                              ; preds = %177, %172
  %181 = bitcast %"struct.sql::recover::TargetTableSpec"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #14
  br label %188

188:                                              ; preds = %180, %185
  %189 = icmp eq i32 %146, 0
  br i1 %189, label %190, label %207

190:                                              ; preds = %188
  %191 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #13
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %193, i8 -86, i64 24, i1 false)
  call void @_ZNK3sql7recover12VirtualTable16ToCreateTableSqlEv(%"class.std::__1::basic_string"* nonnull sret %14, %"class.sql::recover::VirtualTable"* %147) #13
  %194 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  %198 = load i8*, i8** %192, align 8
  %199 = select i1 %197, i8* %198, i8* %191
  %200 = call i32 @chrome_sqlite3_declare_vtab(%struct.sqlite3* %0, i8* %199) #13
  %201 = load i8, i8* %195, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %190
  %204 = load i8*, i8** %192, align 8
  call void @_ZdlPv(i8* %204) #14
  br label %205

205:                                              ; preds = %203, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #13
  %206 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %147, i64 0, i32 0
  store %struct.sqlite3_vtab* %206, %struct.sqlite3_vtab** %4, align 8
  br label %211

207:                                              ; preds = %188
  %208 = icmp eq %"class.sql::recover::VirtualTable"* %147, null
  br i1 %208, label %211, label %209

209:                                              ; preds = %207
  call void @_ZN3sql7recover12VirtualTableD1Ev(%"class.sql::recover::VirtualTable"* nonnull %147) #13
  %210 = bitcast %"class.sql::recover::VirtualTable"* %147 to i8*
  call void @_ZdlPv(i8* %210) #14
  br label %211

211:                                              ; preds = %205, %207, %209
  %212 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %59, align 8
  br label %213

213:                                              ; preds = %127, %211
  %214 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %128, %127 ], [ %212, %211 ]
  %215 = phi i32 [ 21, %127 ], [ %146, %211 ]
  %216 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %214, null
  br i1 %216, label %238, label %217

217:                                              ; preds = %213
  %218 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %214 to i8*
  %219 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %60, align 8
  %220 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %219, %214
  br i1 %220, label %236, label %221

221:                                              ; preds = %217, %231
  %222 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %223, %231 ], [ %219, %217 ]
  %223 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %222, i64 -1
  %224 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %223 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %224, i64 0, i32 1, i32 0
  %226 = load i8, i8* %225, align 1
  %227 = icmp slt i8 %226, 0
  br i1 %227, label %228, label %231

228:                                              ; preds = %221
  %229 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %230) #14
  br label %231

231:                                              ; preds = %228, %221
  %232 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %223, %214
  br i1 %232, label %233, label %221

233:                                              ; preds = %231
  %234 = bitcast %"class.std::__1::vector"* %11 to i8**
  %235 = load i8*, i8** %234, align 8
  br label %236

236:                                              ; preds = %233, %217
  %237 = phi i8* [ %235, %233 ], [ %218, %217 ]
  store %"struct.sql::recover::RecoveredColumnSpec"* %214, %"struct.sql::recover::RecoveredColumnSpec"** %60, align 8
  call void @_ZdlPv(i8* %237) #14
  br label %238

238:                                              ; preds = %213, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #13
  %239 = load i8, i8* %50, align 1
  br label %240

240:                                              ; preds = %41, %238
  %241 = phi i8 [ %239, %238 ], [ %51, %41 ]
  %242 = phi i32 [ %215, %238 ], [ 21, %41 ]
  %243 = icmp slt i8 %241, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %246) #14
  br label %247

247:                                              ; preds = %244, %240
  %248 = bitcast %"struct.sql::recover::TargetTableSpec"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %247
  %253 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %253) #14
  br label %254

254:                                              ; preds = %247, %252
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %42) #13
  br label %255

255:                                              ; preds = %20, %26, %23, %38, %254, %6
  %256 = phi i32 [ 21, %6 ], [ 21, %26 ], [ %242, %254 ], [ 21, %38 ], [ 21, %23 ], [ 21, %20 ]
  ret i32 %256
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_113ModuleConnectEP7sqlite3PviPKPKcPP12sqlite3_vtabPPc(%struct.sqlite3*, i8* nocapture readnone, i32, i8** nocapture readonly, %struct.sqlite3_vtab** nocapture, i8** nocapture readnone) #0 {
  %7 = tail call i32 @_ZN3sql7recover12_GLOBAL__N_112ModuleCreateEP7sqlite3PviPKPKcPP12sqlite3_vtabPPc(%struct.sqlite3* %0, i8* %1, i32 %2, i8** %3, %struct.sqlite3_vtab** %4, i8** %5)
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_115ModuleBestIndexEP12sqlite3_vtabP18sqlite3_index_info(%struct.sqlite3_vtab* nocapture readnone, %struct.sqlite3_index_info* nocapture) #2 {
  %3 = getelementptr inbounds %struct.sqlite3_index_info, %struct.sqlite3_index_info* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sqlite3_index_info, %struct.sqlite3_index_info* %1, i64 0, i32 1
  %8 = getelementptr inbounds %struct.sqlite3_index_info, %struct.sqlite3_index_info* %1, i64 0, i32 4
  br label %13

9:                                                ; preds = %26, %2
  %10 = getelementptr inbounds %struct.sqlite3_index_info, %struct.sqlite3_index_info* %1, i64 0, i32 6
  %11 = getelementptr inbounds %struct.sqlite3_index_info, %struct.sqlite3_index_info* %1, i64 0, i32 5
  store i32 0, i32* %11, align 8
  %12 = bitcast i8** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  ret i32 0

13:                                               ; preds = %6, %26
  %14 = phi i32 [ %4, %6 ], [ %27, %26 ]
  %15 = phi i64 [ 0, %6 ], [ %28, %26 ]
  %16 = load %"struct.sqlite3_index_info::sqlite3_index_constraint"*, %"struct.sqlite3_index_info::sqlite3_index_constraint"** %7, align 8
  %17 = getelementptr inbounds %"struct.sqlite3_index_info::sqlite3_index_constraint", %"struct.sqlite3_index_info::sqlite3_index_constraint"* %16, i64 %15, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %13
  %21 = load %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"*, %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"** %8, align 8
  %22 = getelementptr inbounds %"struct.sqlite3_index_info::sqlite3_index_constraint_usage", %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"* %21, i64 %15, i32 0
  store i32 0, i32* %22, align 4
  %23 = load %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"*, %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"** %8, align 8
  %24 = getelementptr inbounds %"struct.sqlite3_index_info::sqlite3_index_constraint_usage", %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"* %23, i64 %15, i32 1
  store i8 0, i8* %24, align 4
  %25 = load i32, i32* %3, align 8
  br label %26

26:                                               ; preds = %13, %20
  %27 = phi i32 [ %14, %13 ], [ %25, %20 ]
  %28 = add nuw nsw i64 %15, 1
  %29 = sext i32 %27 to i64
  %30 = icmp slt i64 %28, %29
  br i1 %30, label %13, label %9
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_116ModuleDisconnectEP12sqlite3_vtab(%struct.sqlite3_vtab*) #0 {
  %2 = icmp eq %struct.sqlite3_vtab* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sqlite3_vtab* %0 to %"class.sql::recover::VirtualTable"*
  tail call void @_ZN3sql7recover12VirtualTableD1Ev(%"class.sql::recover::VirtualTable"* nonnull %4) #13
  %5 = bitcast %struct.sqlite3_vtab* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #14
  br label %6

6:                                                ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_113ModuleDestroyEP12sqlite3_vtab(%struct.sqlite3_vtab*) #0 {
  %2 = icmp eq %struct.sqlite3_vtab* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sqlite3_vtab* %0 to %"class.sql::recover::VirtualTable"*
  tail call void @_ZN3sql7recover12VirtualTableD1Ev(%"class.sql::recover::VirtualTable"* nonnull %4) #13
  %5 = bitcast %struct.sqlite3_vtab* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #14
  br label %6

6:                                                ; preds = %1, %3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_110ModuleOpenEP12sqlite3_vtabPP19sqlite3_vtab_cursor(%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor** nocapture) #0 {
  %3 = bitcast %struct.sqlite3_vtab* %0 to %"class.sql::recover::VirtualTable"*
  %4 = tail call %"class.sql::recover::VirtualCursor"* @_ZN3sql7recover12VirtualTable12CreateCursorEv(%"class.sql::recover::VirtualTable"* %3) #13
  %5 = getelementptr inbounds %"class.sql::recover::VirtualCursor", %"class.sql::recover::VirtualCursor"* %4, i64 0, i32 0
  store %struct.sqlite3_vtab_cursor* %5, %struct.sqlite3_vtab_cursor** %1, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_111ModuleCloseEP19sqlite3_vtab_cursor(%struct.sqlite3_vtab_cursor*) #0 {
  %2 = icmp eq %struct.sqlite3_vtab_cursor* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sqlite3_vtab_cursor* %0 to %"class.sql::recover::VirtualCursor"*
  tail call void @_ZN3sql7recover13VirtualCursorD1Ev(%"class.sql::recover::VirtualCursor"* nonnull %4) #13
  %5 = bitcast %struct.sqlite3_vtab_cursor* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #14
  br label %6

6:                                                ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_112ModuleFilterEP19sqlite3_vtab_cursoriPKciPP13sqlite3_value(%struct.sqlite3_vtab_cursor*, i32, i8* nocapture readnone, i32, %struct.sqlite3_value** nocapture readnone) #0 {
  %6 = bitcast %struct.sqlite3_vtab_cursor* %0 to %"class.sql::recover::VirtualCursor"*
  %7 = tail call i32 @_ZN3sql7recover13VirtualCursor5FirstEv(%"class.sql::recover::VirtualCursor"* %6) #13
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_110ModuleNextEP19sqlite3_vtab_cursor(%struct.sqlite3_vtab_cursor*) #0 {
  %2 = bitcast %struct.sqlite3_vtab_cursor* %0 to %"class.sql::recover::VirtualCursor"*
  %3 = tail call i32 @_ZN3sql7recover13VirtualCursor4NextEv(%"class.sql::recover::VirtualCursor"* %2) #13
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_19ModuleEofEP19sqlite3_vtab_cursor(%struct.sqlite3_vtab_cursor* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.sqlite3_vtab_cursor, %struct.sqlite3_vtab_cursor* %0, i64 14
  %3 = getelementptr inbounds %struct.sqlite3_vtab_cursor, %struct.sqlite3_vtab_cursor* %0, i64 15
  %4 = bitcast %struct.sqlite3_vtab_cursor* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %struct.sqlite3_vtab_cursor* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = getelementptr inbounds %struct.sqlite3_vtab_cursor, %struct.sqlite3_vtab_cursor* %0, i64 21
  %11 = bitcast %struct.sqlite3_vtab_cursor* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = icmp ne i64 %9, %13
  %15 = zext i1 %14 to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_112ModuleColumnEP19sqlite3_vtab_cursorP15sqlite3_contexti(%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32) #0 {
  %4 = bitcast %struct.sqlite3_vtab_cursor* %0 to %"class.sql::recover::VirtualCursor"*
  %5 = tail call i32 @_ZN3sql7recover13VirtualCursor10ReadColumnEiP15sqlite3_context(%"class.sql::recover::VirtualCursor"* %4, i32 %2, %struct.sqlite3_context* %1) #13
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3sql7recover12_GLOBAL__N_111ModuleRowidEP19sqlite3_vtab_cursorPx(%struct.sqlite3_vtab_cursor*, i64* nocapture) #0 {
  %3 = bitcast %struct.sqlite3_vtab_cursor* %0 to %"class.sql::recover::VirtualCursor"*
  %4 = tail call i64 @_ZN3sql7recover13VirtualCursor5RowIdEv(%"class.sql::recover::VirtualCursor"* %3) #13
  store i64 %4, i64* %1, align 8
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN3sql7recover14ParseTableSpecEPKc(%"struct.sql::recover::TargetTableSpec"* sret, i8*) local_unnamed_addr #1

declare { i32, %"class.sql::recover::VirtualTable"* } @_ZN3sql7recover12VirtualTable6CreateEP7sqlite3NS0_15TargetTableSpecENSt3__16vectorINS0_19RecoveredColumnSpecENS5_9allocatorIS7_EEEE(%struct.sqlite3*, %"struct.sql::recover::TargetTableSpec"*, %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK3sql7recover12VirtualTable16ToCreateTableSqlEv(%"class.std::__1::basic_string"* sret, %"class.sql::recover::VirtualTable"*) local_unnamed_addr #1

declare i32 @chrome_sqlite3_declare_vtab(%struct.sqlite3*, i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3sql7recover19RecoveredColumnSpecENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.sql::recover::RecoveredColumnSpec"*
  br i1 %10, label %12, label %100

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #15
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #14
  %23 = bitcast i8* %22 to %"struct.sql::recover::RecoveredColumnSpec"*
  %24 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %23, i64 %20
  %25 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %24 to i64
  %26 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %23, i64 %1
  %27 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.sql::recover::RecoveredColumnSpec"*
  %29 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %28, %11
  br i1 %29, label %78, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %28, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast i8** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = and i64 %35, 32
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %24, i64 -1
  %40 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %28, i64 -1
  %41 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %39 to i8*
  %42 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #13
  %43 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %24, i64 -1, i32 1
  %44 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %28, i64 -1, i32 1
  %45 = bitcast i32* %43 to i8*
  %46 = bitcast i32* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 6, i1 false) #13
  br label %47

47:                                               ; preds = %38, %30
  %48 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ undef, %30 ], [ %39, %38 ]
  %49 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %24, %30 ], [ %39, %38 ]
  %50 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %28, %30 ], [ %40, %38 ]
  %51 = icmp ult i8* %34, inttoptr (i64 32 to i8*)
  br i1 %51, label %72, label %52

52:                                               ; preds = %47, %52
  %53 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %63, %52 ], [ %49, %47 ]
  %54 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %64, %52 ], [ %50, %47 ]
  %55 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %53, i64 -1
  %56 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %54, i64 -1
  %57 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %55 to i8*
  %58 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #13
  %59 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %53, i64 -1, i32 1
  %60 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %54, i64 -1, i32 1
  %61 = bitcast i32* %59 to i8*
  %62 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 6, i1 false) #13
  %63 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %53, i64 -2
  %64 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %54, i64 -2
  %65 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %63 to i8*
  %66 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #13
  %67 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %53, i64 -2, i32 1
  %68 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %54, i64 -2, i32 1
  %69 = bitcast i32* %67 to i8*
  %70 = bitcast i32* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 6, i1 false) #13
  %71 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %64, %11
  br i1 %71, label %72, label %52

72:                                               ; preds = %52, %47
  %73 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %48, %47 ], [ %63, %52 ]
  %74 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %73 to i64
  %75 = load i64, i64* %6, align 8
  %76 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %13, align 8
  %77 = inttoptr i64 %75 to %"struct.sql::recover::RecoveredColumnSpec"*
  br label %78

78:                                               ; preds = %17, %72
  %79 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %77, %72 ], [ %28, %17 ]
  %80 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %76, %72 ], [ %11, %17 ]
  %81 = phi i64 [ %74, %72 ], [ %25, %17 ]
  %82 = phi i64 [ %75, %72 ], [ %18, %17 ]
  store i64 %81, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %83 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %80, %79
  br i1 %83, label %96, label %84

84:                                               ; preds = %78, %94
  %85 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %86, %94 ], [ %80, %78 ]
  %86 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %85, i64 -1
  %87 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  tail call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %91, %84
  %95 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %86, %79
  br i1 %95, label %96, label %84

96:                                               ; preds = %94, %78
  %97 = icmp eq i64 %82, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = inttoptr i64 %82 to i8*
  tail call void @_ZdlPv(i8* %99) #14
  br label %100

100:                                              ; preds = %98, %96, %2
  ret void
}

declare void @_ZN3sql7recover15ParseColumnSpecEPKc(%"struct.sql::recover::RecoveredColumnSpec"* sret, i8*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3sql7recover19RecoveredColumnSpecENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.sql::recover::RecoveredColumnSpec"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"struct.sql::recover::RecoveredColumnSpec"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %36, i64 %35
  %39 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %38 to i64
  %40 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %37 to i8*
  %41 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #13
  %42 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %1, i64 0, i32 1
  %44 = bitcast i32* %42 to i8*
  %45 = bitcast i32* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 6, i1 false) #13
  %46 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %37, i64 1
  %47 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %49 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %48, align 8
  %50 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %49 to i64
  %51 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %3, align 8
  %52 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %51, %49
  br i1 %52, label %97, label %53

53:                                               ; preds = %34
  %54 = getelementptr %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %51, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = ptrtoint i8** %54 to i64
  %56 = sub i64 %55, %50
  %57 = and i64 %56, 32
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %68

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %37, i64 -1
  %61 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %51, i64 -1
  %62 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %60 to i8*
  %63 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #13
  %64 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %37, i64 -1, i32 1
  %65 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %51, i64 -1, i32 1
  %66 = bitcast i32* %64 to i8*
  %67 = bitcast i32* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 6, i1 false) #13
  br label %68

68:                                               ; preds = %59, %53
  %69 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ undef, %53 ], [ %60, %59 ]
  %70 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %37, %53 ], [ %60, %59 ]
  %71 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %51, %53 ], [ %61, %59 ]
  %72 = icmp ult i64 %56, 32
  br i1 %72, label %93, label %73

73:                                               ; preds = %68, %73
  %74 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %84, %73 ], [ %70, %68 ]
  %75 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %85, %73 ], [ %71, %68 ]
  %76 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %74, i64 -1
  %77 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %75, i64 -1
  %78 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %76 to i8*
  %79 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #13
  %80 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %74, i64 -1, i32 1
  %81 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %75, i64 -1, i32 1
  %82 = bitcast i32* %80 to i8*
  %83 = bitcast i32* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 6, i1 false) #13
  %84 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %74, i64 -2
  %85 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %75, i64 -2
  %86 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %84 to i8*
  %87 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #13
  %88 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %74, i64 -2, i32 1
  %89 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %75, i64 -2, i32 1
  %90 = bitcast i32* %88 to i8*
  %91 = bitcast i32* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 6, i1 false) #13
  %92 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %85, %49
  br i1 %92, label %93, label %73

93:                                               ; preds = %73, %68
  %94 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %69, %68 ], [ %84, %73 ]
  %95 = load i64, i64* %6, align 8
  %96 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %3, align 8
  br label %97

97:                                               ; preds = %34, %93
  %98 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %96, %93 ], [ %49, %34 ]
  %99 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %94, %93 ], [ %37, %34 ]
  %100 = phi i64 [ %95, %93 ], [ %50, %34 ]
  %101 = ptrtoint %"struct.sql::recover::RecoveredColumnSpec"* %99 to i64
  store i64 %101, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %102 = inttoptr i64 %100 to %"struct.sql::recover::RecoveredColumnSpec"*
  %103 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %98, %102
  br i1 %103, label %116, label %104

104:                                              ; preds = %97, %114
  %105 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %106, %114 ], [ %98, %97 ]
  %106 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %105, i64 -1
  %107 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZdlPv(i8* %113) #14
  br label %114

114:                                              ; preds = %111, %104
  %115 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %106, %102
  br i1 %115, label %116, label %104

116:                                              ; preds = %114, %97
  %117 = icmp eq i64 %100, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %100 to i8*
  tail call void @_ZdlPv(i8* %119) #14
  br label %120

120:                                              ; preds = %116, %118
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN3sql7recover12VirtualTableD1Ev(%"class.sql::recover::VirtualTable"*) unnamed_addr #5

declare %"class.sql::recover::VirtualCursor"* @_ZN3sql7recover12VirtualTable12CreateCursorEv(%"class.sql::recover::VirtualTable"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql7recover13VirtualCursorD1Ev(%"class.sql::recover::VirtualCursor"*) unnamed_addr #5

declare i32 @_ZN3sql7recover13VirtualCursor5FirstEv(%"class.sql::recover::VirtualCursor"*) local_unnamed_addr #1

declare i32 @_ZN3sql7recover13VirtualCursor4NextEv(%"class.sql::recover::VirtualCursor"*) local_unnamed_addr #1

declare i32 @_ZN3sql7recover13VirtualCursor10ReadColumnEiP15sqlite3_context(%"class.sql::recover::VirtualCursor"*, i32, %struct.sqlite3_context*) local_unnamed_addr #1

declare i64 @_ZN3sql7recover13VirtualCursor5RowIdEv(%"class.sql::recover::VirtualCursor"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3sql7recover12_GLOBAL__N_116ParseColumnSpecsEiPKPKc: argument 0"}
!4 = distinct !{!4, !"_ZN3sql7recover12_GLOBAL__N_116ParseColumnSpecsEiPKPKc"}
