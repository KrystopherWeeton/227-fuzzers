; ModuleID = '../../third_party/blink/renderer/core/layout/layout_table_section.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_table_section.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::LayoutTableSection" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableSectionInterface", %"class.WTF::Vector.2045", %"class.WTF::Vector.2066", %"class.WTF::Vector.2066", i8, [3 x i8], i32, i32, i8, [3 x i8], %"class.WTF::HashSet.2070", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::LayoutTableBoxComponent.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i32, %"class.blink::CullRect" }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2116 }
%class.scoped_refptr.2116 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2117", %"class.WTF::Vector.630", %"class.WTF::Vector.2119", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2117" = type { %"class.base::RefCounted.2118" }
%"class.base::RefCounted.2118" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2119" = type { %"class.WTF::VectorBuffer.2120" }
%"class.WTF::VectorBuffer.2120" = type { %"class.WTF::VectorBufferBase.2121" }
%"class.WTF::VectorBufferBase.2121" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2122 }
%union.anon.2122 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2102" }
%"class.blink::Member.2102" = type { %"class.blink::MemberBase.2103" }
%"class.blink::MemberBase.2103" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2104" }
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2130 }
%class.scoped_refptr.2130 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2140" }
%"class.blink::Member.2140" = type { %"class.blink::MemberBase.2141" }
%"class.blink::MemberBase.2141" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2131", %"class.WTF::Vector.2131" }
%"class.WTF::Vector.2131" = type { %"class.WTF::VectorBuffer.2132" }
%"class.WTF::VectorBuffer.2132" = type { %"class.WTF::VectorBufferBase.2133" }
%"class.WTF::VectorBufferBase.2133" = type { %class.scoped_refptr.2130*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1708", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1928", %"class.std::__1::unique_ptr.1934", %"class.std::__1::unique_ptr.1940", %class.scoped_refptr.1704, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1946", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1975", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1975" = type { %"class.base::RefCountedThreadSafe.1976" }
%"class.base::RefCountedThreadSafe.1976" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1712", %"class.blink::Member.1717", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1719", i8, i32, %"class.blink::Color", %"class.absl::optional.1722", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1727", %"class.blink::Member.1729", %"class.blink::Member.1729", %"class.std::__1::unique_ptr.1732", i32, [4 x i8], %"class.WTF::HashSet.1735", %"class.blink::Member.1742", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1744", %"class.blink::HeapHashSet.1751", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1759", i8, %"class.blink::Member.1765", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1777", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1791", i8, %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1878", %"class.WTF::Vector.1884", i32, %class.scoped_refptr.1889, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1890", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1917", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %class.scoped_refptr.1716*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1716 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1719" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1720", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::HeapHashSet.1731"* }
%"class.blink::HeapHashSet.1731" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.WTF::HashSet.1735"* }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::HeapHashSet.1751" = type { %"class.WTF::HashSet.1754" }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1963", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1973", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1973" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1974", { i64, i64 } }
%"class.blink::WeakMember.1974" = type { %"class.blink::MemberBase.1758" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type { i32, [21 x i32] }
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1769", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1773", i32, i32 }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775" }
%"class.WTF::VectorBufferBase.1775" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1777" = type { %"class.WTF::LinkedHashSet.1780" }
%"class.WTF::LinkedHashSet.1780" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList.1785" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList.1785" = type { %"class.WTF::Vector.1786", i32, i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.WTF::VectorBackedLinkedListNode.1789"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1789" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1800, %class.scoped_refptr.1800, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1855", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1860", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1801", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1808" }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1803", i32, [4 x i8] }>
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1827", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1814", %"class.WTF::Vector.1819", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816" }
%"class.WTF::VectorBufferBase.1816" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1830", %"class.absl::optional.1830" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, [3 x i8], %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1808"*, %"class.absl::optional.1840", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1845", %"class.WTF::Vector.1850" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847", [128 x i8] }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.1852", [128 x i8] }
%"class.WTF::VectorBufferBase.1852" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1865", %"class.WTF::Vector.1870" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1889 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::WeakMember.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1913" }
%"class.base::time_internal::TimeBase.1913" = type { i64 }
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1920", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1920" = type { %"class.absl::optional_internal::optional_data.1921" }
%"class.absl::optional_internal::optional_data.1921" = type { %"class.absl::optional_internal::optional_data_base.1922" }
%"class.absl::optional_internal::optional_data_base.1922" = type { %"class.absl::optional_internal::optional_data_dtor_base.1923" }
%"class.absl::optional_internal::optional_data_dtor_base.1923" = type { i8, %union.anon.1924 }
%union.anon.1924 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1940" = type { %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1946" = type { %"class.blink::PersistentBase.1947" }
%"class.blink::PersistentBase.1947" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1950", i64 }
%"class.blink::HeapVector.1950" = type { %"class.WTF::Vector.1953" }
%"class.WTF::Vector.1953" = type { %"class.WTF::VectorBuffer.1954" }
%"class.WTF::VectorBuffer.1954" = type { %"class.WTF::VectorBufferBase.1955", [368 x i8] }
%"class.WTF::VectorBufferBase.1955" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1757", i8, %"class.blink::Member.1956", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::HeapLinkedHashSet.1958"* }
%"class.blink::HeapLinkedHashSet.1958" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2106" }
%"class.WTF::Vector.2106" = type { %"class.WTF::VectorBuffer.2107" }
%"class.WTF::VectorBuffer.2107" = type { %"class.WTF::VectorBufferBase.2108" }
%"class.WTF::VectorBufferBase.2108" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2111", %"class.absl::optional.2111", %"class.absl::optional.2111" }
%"class.absl::optional.2111" = type { %"class.absl::optional_internal::optional_data.2112" }
%"class.absl::optional_internal::optional_data.2112" = type { %"class.absl::optional_internal::optional_data_base.2113" }
%"class.absl::optional_internal::optional_data_base.2113" = type { %"class.absl::optional_internal::optional_data_dtor_base.2114" }
%"class.absl::optional_internal::optional_data_dtor_base.2114" = type { i8, %union.anon.2115 }
%union.anon.2115 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2126" }
%"class.WTF::VectorBuffer.2126" = type { %"class.WTF::VectorBufferBase.2127", [32 x i8] }
%"class.WTF::VectorBufferBase.2127" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1977", %"class.blink::Persistent.1983", %"class.std::__1::unique_ptr.2007", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2023" }
%"class.std::__1::unique_ptr.1977" = type { %"class.std::__1::__compressed_pair.1978" }
%"class.std::__1::__compressed_pair.1978" = type { %"struct.std::__1::__compressed_pair_elem.1979" }
%"struct.std::__1::__compressed_pair_elem.1979" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1983" = type { %"class.blink::PersistentBase.1984" }
%"class.blink::PersistentBase.1984" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1989", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2002" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1987", %"class.blink::Member.1757", %"class.blink::Member.1757", i8, [7 x i8] }>
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1963", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.1989" = type { %"class.std::__1::__compressed_pair.1990" }
%"class.std::__1::__compressed_pair.1990" = type { %"struct.std::__1::__compressed_pair_elem.1991" }
%"struct.std::__1::__compressed_pair_elem.1991" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1992", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1819" }
%"class.WTF::HashMap.1992" = type { %"class.WTF::HashTable.1993" }
%"class.WTF::HashTable.1993" = type <{ %"struct.WTF::KeyValuePair.1996"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1996" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2000" }
%"class.blink::Member.2000" = type { %"class.blink::MemberBase.2001" }
%"class.blink::MemberBase.2001" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2000" }
%"class.absl::optional.2002" = type { %"class.absl::optional_internal::optional_data.2003" }
%"class.absl::optional_internal::optional_data.2003" = type { %"class.absl::optional_internal::optional_data_base.2004" }
%"class.absl::optional_internal::optional_data_base.2004" = type { %"class.absl::optional_internal::optional_data_dtor_base.2005" }
%"class.absl::optional_internal::optional_data_dtor_base.2005" = type { i8, %union.anon.2006 }
%union.anon.2006 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2007" = type { %"class.std::__1::__compressed_pair.2008" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2010", %"class.WTF::Vector.2010", %"class.WTF::HashMap.2015", %"class.WTF::Vector.2010", i8, [7 x i8] }>
%"class.WTF::HashMap.2015" = type { %"class.WTF::HashTable.2016" }
%"class.WTF::HashTable.2016" = type <{ %"struct.WTF::KeyValuePair.2019"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2019" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2010" }
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012" }
%"class.WTF::VectorBufferBase.2012" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2023" = type { %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2026", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2032", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2038", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2026" = type { %"class.std::__1::__compressed_pair.2027" }
%"class.std::__1::__compressed_pair.2027" = type { %"struct.std::__1::__compressed_pair_elem.2028" }
%"struct.std::__1::__compressed_pair_elem.2028" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.2032" = type { %"class.std::__1::__compressed_pair.2033" }
%"class.std::__1::__compressed_pair.2033" = type { %"struct.std::__1::__compressed_pair_elem.2034" }
%"struct.std::__1::__compressed_pair_elem.2034" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.2038" = type { %"class.blink::PersistentBase.2039" }
%"class.blink::PersistentBase.2039" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.WTF::Vector.2045" = type { %"class.WTF::VectorBuffer.2046" }
%"class.WTF::VectorBuffer.2046" = type { %"class.WTF::VectorBufferBase.2047" }
%"class.WTF::VectorBufferBase.2047" = type { %"struct.blink::LayoutTableSection::TableGridRow"*, i32, i32 }
%"struct.blink::LayoutTableSection::TableGridRow" = type <{ %"class.WTF::Vector.2048", %"class.blink::LayoutTableRow"*, %"class.blink::LayoutUnit", %"class.blink::Length", [4 x i8] }>
%"class.WTF::Vector.2048" = type { %"class.WTF::VectorBuffer.2049" }
%"class.WTF::VectorBuffer.2049" = type { %"class.WTF::VectorBufferBase.2050" }
%"class.WTF::VectorBufferBase.2050" = type { %"class.blink::TableGridCell"*, i32, i32 }
%"class.blink::TableGridCell" = type <{ %"class.WTF::Vector.2051", i8, [7 x i8] }>
%"class.WTF::Vector.2051" = type { %"class.WTF::VectorBuffer.2052" }
%"class.WTF::VectorBuffer.2052" = type { %"class.WTF::VectorBufferBase.2053", [8 x i8] }
%"class.WTF::VectorBufferBase.2053" = type { %"class.blink::LayoutTableCell"**, i32, i32 }
%"class.blink::LayoutTableCell" = type { %"class.blink::LayoutBlockFlow", %"class.blink::LayoutNGTableCellInterface", i32, %"class.std::__1::unique_ptr.2054", i32, i32 }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2054" = type { %"class.std::__1::__compressed_pair.2055" }
%"class.std::__1::__compressed_pair.2055" = type { %"struct.std::__1::__compressed_pair_elem.2056" }
%"struct.std::__1::__compressed_pair_elem.2056" = type { %"class.blink::CollapsedBorderValues"* }
%"class.blink::CollapsedBorderValues" = type { [4 x %"class.blink::CollapsedBorderValue"], %"class.blink::LayoutRect" }
%"class.blink::CollapsedBorderValue" = type { %"class.blink::Color", i32 }
%"class.blink::LayoutTableRow" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableRowInterface", i32, [4 x i8] }>
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.WTF::Vector.2066" = type { %"class.WTF::VectorBuffer.2067" }
%"class.WTF::VectorBuffer.2067" = type { %"class.WTF::VectorBufferBase.1847" }
%"class.WTF::HashSet.2070" = type { %"class.WTF::HashTable.2071" }
%"class.WTF::HashTable.2071" = type <{ %"class.blink::LayoutTableCell"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::CellSpan" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::StyleDifference" = type { [3 x i8], i8 }
%"class.blink::LayoutTable" = type { %"class.blink::LayoutBlock.base", %"class.blink::LayoutNGTableInterface", %"class.WTF::Vector.2075", %"class.WTF::Vector.2066", %"class.WTF::Vector.2080", %"class.WTF::Vector.2085", %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.std::__1::unique_ptr.2090", i16, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.WTF::Vector.2075" = type { %"class.WTF::VectorBuffer.2076" }
%"class.WTF::VectorBuffer.2076" = type { %"class.WTF::VectorBufferBase.2077" }
%"class.WTF::VectorBufferBase.2077" = type { %"struct.blink::LayoutTable::ColumnStruct"*, i32, i32 }
%"struct.blink::LayoutTable::ColumnStruct" = type { i32 }
%"class.WTF::Vector.2080" = type { %"class.WTF::VectorBuffer.2081" }
%"class.WTF::VectorBuffer.2081" = type { %"class.WTF::VectorBufferBase.2082" }
%"class.WTF::VectorBufferBase.2082" = type { %"class.blink::LayoutTableCaption"**, i32, i32 }
%"class.blink::LayoutTableCaption" = type opaque
%"class.WTF::Vector.2085" = type { %"class.WTF::VectorBuffer.2086" }
%"class.WTF::VectorBuffer.2086" = type { %"class.WTF::VectorBufferBase.2087" }
%"class.WTF::VectorBufferBase.2087" = type { %"class.blink::LayoutTableCol"**, i32, i32 }
%"class.blink::LayoutTableCol" = type { %"class.blink::LayoutTableBoxComponent.base", i32 }
%"class.std::__1::unique_ptr.2090" = type { %"class.std::__1::__compressed_pair.2091" }
%"class.std::__1::__compressed_pair.2091" = type { %"struct.std::__1::__compressed_pair_elem.2092" }
%"struct.std::__1::__compressed_pair_elem.2092" = type { %"class.blink::TableLayoutAlgorithm"* }
%"class.blink::TableLayoutAlgorithm" = type opaque
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"struct.blink::LayoutTableSection::SpanningRowsHeight" = type <{ %"class.WTF::Vector.2066", i32, i32, i8, [7 x i8] }>
%"class.WTF::Vector.2096" = type { %"class.WTF::VectorBuffer.2097" }
%"class.WTF::VectorBuffer.2097" = type { %"class.WTF::VectorBufferBase.2053", [16 x i8] }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutAnalyzer::Scope" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutAnalyzer"* }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2160", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2161", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2160" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2161" = type { %"class.absl::optional_internal::optional_data.2162" }
%"class.absl::optional_internal::optional_data.2162" = type { %"class.absl::optional_internal::optional_data_base.2163" }
%"class.absl::optional_internal::optional_data_base.2163" = type { %"class.absl::optional_internal::optional_data_dtor_base.2164" }
%"class.absl::optional_internal::optional_data_dtor_base.2164" = type { i8, %union.anon.2165 }
%union.anon.2165 = type { %"class.blink::FloatSize" }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutTableBoxComponent" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i32, %"class.blink::CullRect", [4 x i8] }>
%"struct.blink::PaintInfo" = type opaque
%"class.blink::TableSectionPainter" = type { %"class.blink::LayoutTableSection"* }
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.2026", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGGridInterface" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.WTF::Vector.2100" = type opaque
%"class.ui::Cursor" = type opaque
%"class.WTF::Vector.2101" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.anon.2167 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2181" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2181" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2168", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2168" = type { %"class.std::__1::__vector_base.2169" }
%"class.std::__1::__vector_base.2169" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2176" }
%"class.std::__1::__compressed_pair.2176" = type { %"struct.std::__1::__compressed_pair_elem.2177" }
%"struct.std::__1::__compressed_pair_elem.2177" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2170", i64, i64 }
%"class.std::__1::unique_ptr.2170" = type { %"class.std::__1::__compressed_pair.2171" }
%"class.std::__1::__compressed_pair.2171" = type { %"struct.std::__1::__compressed_pair_elem.2172" }
%"struct.std::__1::__compressed_pair_elem.2172" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }

$_ZNK5blink18LayoutTableSection5TableEv = comdat any

$_ZN5blink18LayoutTableSection10EnsureRowsEj = comdat any

$_ZN5blink14LayoutTableRow11SetRowIndexEj = comdat any

$_ZNK5blink18LayoutTableSection7NumColsEj = comdat any

$_ZN5blink18LayoutTableSection12TableGridRow26UpdateLogicalHeightForCellEPKNS_15LayoutTableCellE = comdat any

$_ZN5blink18LayoutTableSection10EnsureColsEjj = comdat any

$_ZN5blink15LayoutTableCell22SetAbsoluteColumnIndexEj = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZNK5blink9LayoutBox19ClientLogicalBottomEv = comdat any

$_ZNK5blink18LayoutTableSection22IsRepeatingFooterGroupEv = comdat any

$_ZNK5blink18LayoutTableSection7NumRowsEv = comdat any

$_ZNK5blink9LayoutBox20ContentLogicalHeightEv = comdat any

$_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_ = comdat any

$_ZNK5blink18LayoutTableSection22IsRepeatingHeaderGroupEv = comdat any

$_ZNK5blink18LayoutTableSection7GetNameEv = comdat any

$_ZN5blink23LayoutTableBoxComponent15VirtualChildrenEv = comdat any

$_ZNK5blink23LayoutTableBoxComponent15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink12LayoutObject13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink18LayoutTableSection31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink23LayoutTableBoxComponent28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink18LayoutTableSection8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE = comdat any

$_ZNK5blink18LayoutTableSection33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE = comdat any

$_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv = comdat any

$_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink9LayoutBox20CollapsedMarginAfterEv = comdat any

$_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE = comdat any

$_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE = comdat any

$_ZNK5blink18LayoutTableSection29ComputeIntrinsicLogicalWidthsEv = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink18LayoutTableSection33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj = comdat any

$_ZNK5blink18LayoutTableSection20ToLayoutTableSectionEv = comdat any

$_ZNK5blink18LayoutTableSection14ToLayoutObjectEv = comdat any

$_ZN5blink18LayoutTableSection21ToMutableLayoutObjectEv = comdat any

$_ZNK5blink18LayoutTableSection14TableInterfaceEv = comdat any

$_ZThn256_NK5blink18LayoutTableSection20ToLayoutTableSectionEv = comdat any

$_ZThn256_NK5blink18LayoutTableSection14ToLayoutObjectEv = comdat any

$_ZThn256_N5blink18LayoutTableSection21ToMutableLayoutObjectEv = comdat any

$_ZThn256_NK5blink18LayoutTableSection14TableInterfaceEv = comdat any

$_ZThn256_NK5blink18LayoutTableSection22IsRepeatingHeaderGroupEv = comdat any

$_ZThn256_NK5blink18LayoutTableSection22IsRepeatingFooterGroupEv = comdat any

$_ZThn256_NK5blink18LayoutTableSection7NumRowsEv = comdat any

$_ZThn256_NK5blink18LayoutTableSection7NumColsEj = comdat any

$_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18LayoutTableSection12TableGridRowEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink18LayoutTableSection12TableGridRowENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b = comdat any

$_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13TableGridCellEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm = comdat any

$_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv = comdat any

$_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv = comdat any

$_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_ = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZNK3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZNK3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZNSt3__16__sortIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEvT0_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEbT0_SA_T_ = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE6ShrinkEj = comdat any

$_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS2_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink13TableGridCellENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE6AppendIS3_EEvPKT_j = comdat any

@.str = private unnamed_addr constant [28 x i8] c"start_ <= maximum_span_size\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"../../third_party/blink/renderer/core/layout/layout_table_section.cc\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"end_ <= maximum_span_size\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"start_ <= end_\00", align 1
@_ZTVN5blink18LayoutTableSectionE = hidden unnamed_addr constant { [210 x i8*], [7 x i8*], [14 x i8*] } { [210 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSectionD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSectionD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i8*, i32)* @_ZN5blink9LayoutBox12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutTableBoxComponent"*)* @_ZN5blink23LayoutTableBoxComponent15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutTableBoxComponent"*)* @_ZNK5blink23LayoutTableBoxComponent15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink18LayoutTableSection8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink18LayoutTableSection5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSection20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSection20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSection12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink18LayoutTableSection11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.2100"*, i32)* @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink18LayoutTableSection38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink9LayoutBox14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.2101"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink9LayoutBox15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8)* @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableBoxComponent"*)* @_ZNK5blink23LayoutTableBoxComponent28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*, i32)* @_ZNK5blink18LayoutTableSection8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink9LayoutBox15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink18LayoutTableSection14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSection21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i1, i32, i32)* @_ZNK5blink9LayoutBox10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i1, i32, i32)* @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink18LayoutTableSection33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2100"*, i32)* @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2100"*)* @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutTableSection"*, %"class.blink::LayoutObject"*)* @_ZNK5blink18LayoutTableSection32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink18LayoutTableSection33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::LayoutTable"* (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection5TableEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableSection"*, i32)* @_ZNK5blink18LayoutTableSection7NumColsEj to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection7NumRowsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection19NumEffectiveColumnsEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSection18SetNeedsCellRecalcEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection22IsRepeatingHeaderGroupEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection22IsRepeatingFooterGroupEv to i8*), i8* bitcast (%"class.blink::LayoutTableSection"* (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection20ToLayoutTableSectionEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection14ToLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSection21ToMutableLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection14TableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection17FirstRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutTableSection"*)* @_ZNK5blink18LayoutTableSection16LastRowInterfaceEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZThn8_N5blink18LayoutTableSectionD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZThn8_N5blink18LayoutTableSectionD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)], [14 x i8*] [i8* inttoptr (i64 -256 to i8*), i8* null, i8* bitcast (%"class.blink::LayoutTableSection"* (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection20ToLayoutTableSectionEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection14ToLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutTableSection"*)* @_ZThn256_N5blink18LayoutTableSection21ToMutableLayoutObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection14TableInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutTableSection"*)* @_ZThn256_N5blink18LayoutTableSection18SetNeedsCellRecalcEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection22IsRepeatingHeaderGroupEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection22IsRepeatingFooterGroupEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection7NumRowsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableSection"*, i32)* @_ZThn256_NK5blink18LayoutTableSection7NumColsEj to i8*), i8* bitcast (i32 (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection19NumEffectiveColumnsEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection17FirstRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutTableSection"*)* @_ZThn256_NK5blink18LayoutTableSection16LastRowInterfaceEv to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [19 x i8] c"!NeedsCellRecalc()\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"!needs_cell_recalc_\00", align 1
@_ZN5blink26layout_invalidation_reason8kUnknownE = external constant [0 x i8], align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18LayoutTableSection12TableGridRowEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutTableSection::TableGridRow]\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"row_index <= kMaxRowIndex\00", align 1
@.str.11 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/layout/layout_table_row.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13TableGridCellEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::TableGridCell]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutTableCell *]\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"column <= kMaxColumnIndex\00", align 1
@.str.13 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/core/layout/layout_table_cell.h\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase38is_visibility_collapse_column_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.15 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink26layout_invalidation_reason13kTableChangedE = external constant [0 x i8], align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"LayoutTableSection\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink15LayoutTableCellEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::LayoutTableCell *]\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1

@_ZN5blink18LayoutTableSectionC1EPNS_7ElementE = hidden unnamed_addr alias void (%"class.blink::LayoutTableSection"*, %"class.blink::Element"*), void (%"class.blink::LayoutTableSection"*, %"class.blink::Element"*)* @_ZN5blink18LayoutTableSectionC2EPNS_7ElementE
@_ZN5blink18LayoutTableSectionD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutTableSection"*), void (%"class.blink::LayoutTableSection"*)* @_ZN5blink18LayoutTableSectionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8CellSpan17EnsureConsistencyEj(%"class.blink::CellSpan"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = icmp ugt i32 %15, %1
  br i1 %17, label %19, label %18

18:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* null, i8** %13, align 8
  br label %28

19:                                               ; preds = %2
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #13
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8* %20, i8* %21) #13
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* %23, i8** %13, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 87, %"class.logging::CheckOpResult"* nonnull %6) #13
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %28

28:                                               ; preds = %18, %19, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %29 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %30, align 8
  %31 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = icmp ugt i32 %32, %1
  br i1 %34, label %36, label %35

35:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* null, i8** %30, align 8
  br label %45

36:                                               ; preds = %28
  %37 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %32) #13
  %38 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* %37, i8* %38) #13
  %39 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* %40, i8** %30, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 88, %"class.logging::CheckOpResult"* nonnull %8) #13
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %45

45:                                               ; preds = %35, %36, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  %46 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %47, align 8
  %48 = load i32, i32* %14, align 4
  %49 = load i32, i32* %31, align 4
  %50 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = icmp ugt i32 %48, %49
  br i1 %51, label %53, label %52

52:                                               ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  store i8* null, i8** %47, align 8
  br label %62

53:                                               ; preds = %45
  %54 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %48) #13
  %55 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %49) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %54, i8* %55) #13
  %56 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  store i8* %57, i8** %47, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %10) #13
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  br label %62

62:                                               ; preds = %52, %53, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSectionC2EPNS_7ElementE(%"class.blink::LayoutTableSection"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBoxC2EPNS_13ContainerNodeE(%"class.blink::LayoutBox"* %3, %"class.blink::ContainerNode"* %4) #13
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::LayoutObjectChildList"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 36, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 2, i32 0
  %8 = bitcast %"class.blink::LayoutTableSection"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [210 x i8*], [7 x i8*], [14 x i8*] }, { [210 x i8*], [7 x i8*], [14 x i8*] }* @_ZTVN5blink18LayoutTableSectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [210 x i8*], [7 x i8*], [14 x i8*] }, { [210 x i8*], [7 x i8*], [14 x i8*] }* @_ZTVN5blink18LayoutTableSectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [210 x i8*], [7 x i8*], [14 x i8*] }, { [210 x i8*], [7 x i8*], [14 x i8*] }* @_ZTVN5blink18LayoutTableSectionE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 12
  %12 = bitcast %"class.WTF::HashSet.2070"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #13
  %13 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = bitcast %"class.WTF::Vector.2045"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 48, i1 false)
  %17 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 9, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 5, i1 false)
  %18 = load i96, i96* %15, align 4
  %19 = and i96 %18, -134217729
  store i96 %19, i96* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSectionD2Ev(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutTableSection"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [210 x i8*], [7 x i8*], [14 x i8*] }, { [210 x i8*], [7 x i8*], [14 x i8*] }* @_ZTVN5blink18LayoutTableSectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [210 x i8*], [7 x i8*], [14 x i8*] }, { [210 x i8*], [7 x i8*], [14 x i8*] }* @_ZTVN5blink18LayoutTableSectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [210 x i8*], [7 x i8*], [14 x i8*] }, { [210 x i8*], [7 x i8*], [14 x i8*] }* @_ZTVN5blink18LayoutTableSectionE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 12, i32 0, i32 0
  %5 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableCell"** %5, null
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::LayoutTableCell"** %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #13
  store %"class.blink::LayoutTableCell"** null, %"class.blink::LayoutTableCell"*** %4, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  %13 = bitcast i32* %11 to i8*
  br i1 %12, label %20, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18, !prof !3

18:                                               ; preds = %14
  store i32 0, i32* %15, align 4
  br label %19

19:                                               ; preds = %18, %14
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %13) #13
  store i32* null, i32** %10, align 8
  br label %20

20:                                               ; preds = %9, %19
  %21 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %22, null
  %24 = bitcast i32* %22 to i8*
  br i1 %23, label %31, label %25, !prof !2

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29, !prof !3

29:                                               ; preds = %25
  store i32 0, i32* %26, align 4
  br label %30

30:                                               ; preds = %29, %25
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #13
  store i32* null, i32** %21, align 8
  br label %31

31:                                               ; preds = %20, %30
  %32 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %33 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %33, align 8
  %35 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %34, null
  br i1 %35, label %80, label %36, !prof !2

36:                                               ; preds = %31
  %37 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %34 to i8*
  %38 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %78, label %41, !prof !3

41:                                               ; preds = %36
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %34, i64 %42
  br label %44

44:                                               ; preds = %41, %72
  %45 = phi %"struct.blink::LayoutTableSection::TableGridRow"* [ %73, %72 ], [ %34, %41 ]
  %46 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %45, i64 0, i32 3, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %45, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %50) #13
  br label %51

51:                                               ; preds = %49, %44
  %52 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %52, align 8
  %54 = icmp eq %"class.blink::TableGridCell"* %53, null
  br i1 %54, label %72, label %55, !prof !2

55:                                               ; preds = %51
  %56 = bitcast %"class.blink::TableGridCell"* %53 to i8*
  %57 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %45, i64 0, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %70, label %60, !prof !3

60:                                               ; preds = %55
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %53, i64 %61
  br label %63

63:                                               ; preds = %63, %60
  %64 = phi %"class.blink::TableGridCell"* [ %65, %63 ], [ %53, %60 ]
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %64) #13
  %65 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %64, i64 1
  %66 = icmp eq %"class.blink::TableGridCell"* %65, %62
  br i1 %66, label %67, label %63

67:                                               ; preds = %63
  store i32 0, i32* %57, align 4
  %68 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %45 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %55
  %71 = phi i8* [ %69, %67 ], [ %56, %55 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #13
  store %"class.blink::TableGridCell"* null, %"class.blink::TableGridCell"** %52, align 8
  br label %72

72:                                               ; preds = %70, %51
  %73 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %45, i64 1
  %74 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %73, %43
  br i1 %74, label %75, label %44

75:                                               ; preds = %72
  store i32 0, i32* %38, align 4
  %76 = bitcast %"class.WTF::Vector.2045"* %32 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %36
  %79 = phi i8* [ %77, %75 ], [ %37, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #13
  store %"struct.blink::LayoutTableSection::TableGridRow"* null, %"struct.blink::LayoutTableSection::TableGridRow"** %33, align 8
  br label %80

80:                                               ; preds = %31, %78
  %81 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"* %81) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18LayoutTableSectionD1Ev(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 13
  %3 = bitcast i8* %2 to %"class.blink::LayoutTableSection"*
  tail call void @_ZN5blink18LayoutTableSectionD2Ev(%"class.blink::LayoutTableSection"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSectionD0Ev(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink18LayoutTableSectionD2Ev(%"class.blink::LayoutTableSection"* %0) #13
  %2 = bitcast %"class.blink::LayoutTableSection"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18LayoutTableSectionD0Ev(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 13
  %3 = bitcast i8* %2 to %"class.blink::LayoutTableSection"*
  tail call void @_ZN5blink18LayoutTableSectionD2Ev(%"class.blink::LayoutTableSection"* %3) #13
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutTableSection"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to %"class.blink::StyleDifference"*
  store i32 %1, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = lshr i160 %11, 80
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 7
  %15 = icmp eq i32 %14, 4
  %16 = and i160 %11, 128849018880
  %17 = icmp eq i160 %16, 42949672960
  %18 = and i1 %17, %15
  %19 = select i1 %18, i32 3, i32 %14
  switch i32 %19, label %32 [
    i32 4, label %20
    i32 2, label %20
  ]

20:                                               ; preds = %3, %3
  %21 = tail call %"class.blink::ComputedStyle"* @_ZN5blink13ComputedStyle5CloneERKS0_(%"class.blink::ComputedStyle"* dereferenceable(104) %8) #13
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, -8462480737302404222943233
  %26 = or i160 %25, 3626777458843887524118528
  store i160 %26, i160* %23, align 8
  %27 = icmp eq %"class.blink::ComputedStyle"* %21, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %20
  tail call void @_ZN5blink12LayoutObject34SetModifiedStyleOutsideStyleRecalcE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %6, %"class.blink::ComputedStyle"* null, i32 0) #13
  br label %32

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %30) #13
  tail call void @_ZN5blink12LayoutObject34SetModifiedStyleOutsideStyleRecalcE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %6, %"class.blink::ComputedStyle"* nonnull %21, i32 0) #13
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 1, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"* %31) #13
  br label %32

32:                                               ; preds = %3, %29, %28
  %33 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"* %33, i32 %1, %"class.blink::ComputedStyle"* %2) #13
  tail call void @_ZN5blink12LayoutObject33PropagateStyleToAnonymousChildrenEv(%"class.blink::LayoutObject"* %6) #13
  %34 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %37 = bitcast %"class.blink::LayoutObject"** %36 to %"class.blink::LayoutTable"**
  %38 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutTable"* %38, null
  br i1 %39, label %74, label %40

40:                                               ; preds = %35
  call void @_ZN5blink23LayoutTableBoxComponent39InvalidateCollapsedBordersOnStyleChangeERKNS_12LayoutObjectERNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88) %6, %"class.blink::LayoutTable"* nonnull dereferenceable(392) %38, %"class.blink::StyleDifference"* nonnull dereferenceable(4) %5, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2) #13
  %41 = call zeroext i1 @_ZN5blink23LayoutTableBoxComponent21DoCellsHaveDirtyWidthERKNS_12LayoutObjectERKNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88) %6, %"class.blink::LayoutTable"* nonnull dereferenceable(392) %38, %"class.blink::StyleDifference"* nonnull dereferenceable(4) %5, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2) #13
  br i1 %41, label %42, label %74

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %44 = bitcast %"class.blink::LayoutObject"** %43 to %"class.blink::LayoutTableRow"**
  %45 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %44, align 8
  %46 = icmp eq %"class.blink::LayoutTableRow"* %45, null
  br i1 %46, label %74, label %47

47:                                               ; preds = %42, %53
  %48 = phi %"class.blink::LayoutTableRow"* [ %56, %53 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %48, i64 0, i32 0, i32 1, i32 0
  %50 = bitcast %"class.blink::LayoutObject"** %49 to %"class.blink::LayoutTableCell"**
  %51 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %50, align 8
  %52 = icmp eq %"class.blink::LayoutTableCell"* %51, null
  br i1 %52, label %53, label %58

53:                                               ; preds = %69, %47
  %54 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %55 = bitcast %"class.blink::LayoutObject"** %54 to %"class.blink::LayoutTableRow"**
  %56 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutTableRow"* %56, null
  br i1 %57, label %74, label %47

58:                                               ; preds = %47, %69
  %59 = phi %"class.blink::LayoutTableCell"* [ %72, %69 ], [ %51, %47 ]
  %60 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %60, i32 1) #13
  %61 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %62 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %61 to i96*
  %63 = load i96, i96* %62, align 4
  %64 = and i96 %63, 8
  %65 = icmp eq i96 %64, 0
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %60, i32 1) #13
  %66 = load i96, i96* %62, align 4
  %67 = or i96 %66, 1180591620717411303432
  store i96 %67, i96* %62, align 4
  br i1 %65, label %68, label %69

68:                                               ; preds = %58
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %60, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #13
  br label %69

69:                                               ; preds = %68, %58
  %70 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %71 = bitcast %"class.blink::LayoutObject"** %70 to %"class.blink::LayoutTableCell"**
  %72 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutTableCell"* %72, null
  br i1 %73, label %53, label %58

74:                                               ; preds = %53, %42, %35, %40, %32
  ret void
}

declare %"class.blink::ComputedStyle"* @_ZN5blink13ComputedStyle5CloneERKS0_(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject34SetModifiedStyleOutsideStyleRecalcE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink12LayoutObject33PropagateStyleToAnonymousChildrenEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTable"* @_ZNK5blink18LayoutTableSection5TableEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTable"**
  %4 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  ret %"class.blink::LayoutTable"* %4
}

declare void @_ZN5blink23LayoutTableBoxComponent39InvalidateCollapsedBordersOnStyleChangeERKNS_12LayoutObjectERNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutTable"* dereferenceable(392), %"class.blink::StyleDifference"* dereferenceable(4), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink23LayoutTableBoxComponent21DoCellsHaveDirtyWidthERKNS_12LayoutObjectERKNS_11LayoutTableERKNS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutTable"* dereferenceable(392), %"class.blink::StyleDifference"* dereferenceable(4), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection39MarkAllCellsWidthsDirtyAndOrNeedsLayoutENS_11LayoutTable18WhatToMarkAllCellsE(%"class.blink::LayoutTableSection"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutTableRow"**
  %5 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableRow"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, 1
  br label %10

9:                                                ; preds = %16, %2
  ret void

10:                                               ; preds = %7, %16
  %11 = phi %"class.blink::LayoutTableRow"* [ %5, %7 ], [ %19, %16 ]
  %12 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %11, i64 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.blink::LayoutObject"** %12 to %"class.blink::LayoutTableCell"**
  %14 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutTableCell"* %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %33, %10
  %17 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %18 = bitcast %"class.blink::LayoutObject"** %17 to %"class.blink::LayoutTableRow"**
  %19 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutTableRow"* %19, null
  br i1 %20, label %9, label %10

21:                                               ; preds = %10, %33
  %22 = phi %"class.blink::LayoutTableCell"* [ %36, %33 ], [ %14, %10 ]
  %23 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %23, i32 1) #13
  br i1 %8, label %24, label %33

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = and i96 %27, 8
  %29 = icmp eq i96 %28, 0
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %23, i32 1) #13
  %30 = load i96, i96* %26, align 4
  %31 = or i96 %30, 1180591620717411303432
  store i96 %31, i96* %26, align 4
  br i1 %29, label %32, label %33

32:                                               ; preds = %24
  tail call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %23, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #13
  br label %33

33:                                               ; preds = %32, %24, %21
  %34 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %35 = bitcast %"class.blink::LayoutObject"** %34 to %"class.blink::LayoutTableCell"**
  %36 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutTableCell"* %36, null
  br i1 %37, label %16, label %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection21WillBeRemovedFromTreeEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"* %2) #13
  tail call void @_ZN5blink18LayoutTableSection18SetNeedsCellRecalcEv(%"class.blink::LayoutTableSection"* %0)
  ret void
}

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection18SetNeedsCellRecalcEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 10
  store i8 1, i8* %3, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %2, i32 1) #13
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutTable"**
  %6 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutTable"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %8, %13
  %14 = phi %"class.blink::LayoutObject"* [ %16, %13 ], [ %9, %8 ]
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %13, label %20

20:                                               ; preds = %13, %8
  %21 = phi %"class.blink::Node"* [ %11, %8 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 5, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 19
  br i1 %28, label %35, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %6, i64 0, i32 6
  %31 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %6, i64 0, i32 10
  %32 = bitcast %"class.blink::LayoutTableSection"** %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #13
  %33 = load i16, i16* %31, align 8
  %34 = or i16 %33, 128
  store i16 %34, i16* %31, align 8
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kTableChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %9, i8 zeroext 3) #13
  tail call void @_ZN5blink11LayoutTable26InvalidateCollapsedBordersEv(%"class.blink::LayoutTable"* nonnull %6) #13
  br label %35

35:                                               ; preds = %29, %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %6 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %6, i64 92
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::LayoutObject"* %1, i32 49) #13
  %10 = icmp ne %"class.blink::LayoutObject"* %2, null
  br i1 %9, label %210, label %11

11:                                               ; preds = %3
  br i1 %10, label %18, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 1
  %14 = bitcast %"class.blink::LayoutObject"** %13 to %"class.blink::LayoutTableRow"**
  %15 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = icmp eq %"class.blink::LayoutTableRow"* %15, null
  br i1 %17, label %203, label %18

18:                                               ; preds = %11, %12
  %19 = phi %"class.blink::LayoutObject"* [ %16, %12 ], [ %2, %11 ]
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 16777216
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %104, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::LayoutObject"* %19 to i1 (%"class.blink::LayoutObject"*, i32)***
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, i64 92
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* nonnull %19, i32 46) #13
  br i1 %30, label %51, label %31

31:                                               ; preds = %25
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* nonnull %19, i32 48) #13
  br i1 %35, label %51, label %36

36:                                               ; preds = %31
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* nonnull %19, i32 45) #13
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* nonnull %19, i32 49) #13
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* nonnull %19, i32 50) #13
  br i1 %50, label %51, label %104

51:                                               ; preds = %25, %31, %36, %41, %46
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 5, i32 0
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = and i160 %56, 2113929216
  %58 = icmp eq i160 %57, 100663296
  br i1 %58, label %59, label %73

59:                                               ; preds = %51
  %60 = load i96, i96* %21, align 4
  %61 = and i96 %60, 33554432
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %104, label %63

63:                                               ; preds = %59
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, i64 92
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::LayoutObject"* nonnull %19, i32 0) #13
  br i1 %67, label %104, label %68

68:                                               ; preds = %63
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %71 = bitcast [20 x i8]* %70 to i160*
  %72 = load i160, i160* %71, align 8
  br label %73

73:                                               ; preds = %68, %51
  %74 = phi i160 [ %72, %68 ], [ %56, %51 ]
  %75 = and i160 %74, 2113929216
  %76 = icmp eq i160 %75, 134217728
  br i1 %76, label %77, label %86

77:                                               ; preds = %73
  %78 = load i96, i96* %21, align 4
  %79 = and i96 %78, 33554432
  %80 = icmp eq i96 %79, 0
  br i1 %80, label %104, label %81

81:                                               ; preds = %77
  %82 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %82, i64 92
  %84 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.blink::LayoutObject"* nonnull %19, i32 0) #13
  br i1 %85, label %104, label %86

86:                                               ; preds = %81, %73
  %87 = icmp eq %"class.blink::LayoutObject"* %19, %2
  br i1 %87, label %88, label %98

88:                                               ; preds = %86
  %89 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %90 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %90, i64 13
  %92 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %91, align 8
  %93 = tail call %"class.blink::LayoutObjectChildList"* %92(%"class.blink::LayoutObject"* nonnull %2) #13
  %94 = icmp eq %"class.blink::LayoutObjectChildList"* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %93, i64 0, i32 0
  %97 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %96, align 8
  br label %98

98:                                               ; preds = %95, %88, %86
  %99 = phi %"class.blink::LayoutObject"* [ %2, %86 ], [ %97, %95 ], [ null, %88 ]
  %100 = bitcast %"class.blink::LayoutObject"* %19 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %101 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %101, i64 16
  %103 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %102, align 8
  tail call void %103(%"class.blink::LayoutObject"* nonnull %19, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %99) #13
  br label %262

104:                                              ; preds = %18, %77, %81, %63, %59, %46
  br i1 %10, label %105, label %136

105:                                              ; preds = %104
  %106 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 4
  %107 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %106 to i96*
  %108 = load i96, i96* %107, align 4
  %109 = and i96 %108, 16777216
  %110 = icmp eq i96 %109, 0
  br i1 %110, label %111, label %136

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 7
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  %114 = icmp eq %"class.blink::LayoutObject"* %113, %4
  br i1 %114, label %115, label %136

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 8
  %117 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %116, align 8
  %118 = icmp eq %"class.blink::LayoutObject"* %117, null
  br i1 %118, label %136, label %119

119:                                              ; preds = %115
  %120 = bitcast %"class.blink::LayoutObject"* %117 to i1 (%"class.blink::LayoutObject"*, i32)***
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %120, align 8
  %122 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, i64 92
  %123 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, align 8
  %124 = tail call zeroext i1 %123(%"class.blink::LayoutObject"* nonnull %117, i32 49) #13
  br i1 %124, label %125, label %136

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %117, i64 0, i32 4
  %127 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %126 to i96*
  %128 = load i96, i96* %127, align 4
  %129 = and i96 %128, 16777216
  %130 = icmp eq i96 %129, 0
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = bitcast %"class.blink::LayoutObject"* %117 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %133 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %133, i64 16
  %135 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %134, align 8
  tail call void %135(%"class.blink::LayoutObject"* nonnull %117, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #13
  br label %262

136:                                              ; preds = %125, %105, %115, %119, %111, %104
  %137 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %137, label %203, label %138

138:                                              ; preds = %136, %153
  %139 = phi %"class.blink::LayoutObject"* [ %154, %153 ], [ %19, %136 ]
  %140 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %139, i64 0, i32 7
  %141 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 0, i32 4
  %143 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %142 to i96*
  %144 = load i96, i96* %143, align 4
  %145 = and i96 %144, 16777216
  %146 = icmp eq i96 %145, 0
  br i1 %146, label %156, label %147

147:                                              ; preds = %138
  %148 = bitcast %"class.blink::LayoutObject"* %139 to i1 (%"class.blink::LayoutObject"*, i32)***
  %149 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %148, align 8
  %150 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %149, i64 92
  %151 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.blink::LayoutObject"* nonnull %139, i32 49) #13
  br i1 %152, label %156, label %153

153:                                              ; preds = %147
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %140, align 8
  %155 = icmp eq %"class.blink::LayoutObject"* %154, null
  br i1 %155, label %203, label %138

156:                                              ; preds = %147, %138
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %139, i64 0, i32 4
  %158 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %157 to i96*
  %159 = load i96, i96* %158, align 4
  %160 = and i96 %159, 16777216
  %161 = icmp eq i96 %160, 0
  br i1 %161, label %203, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %139, i64 0, i32 5, i32 0
  %164 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %164, i64 0, i32 0, i32 9
  %166 = bitcast [20 x i8]* %165 to i160*
  %167 = load i160, i160* %166, align 8
  %168 = and i160 %167, 2113929216
  %169 = icmp eq i160 %168, 100663296
  br i1 %169, label %170, label %184

170:                                              ; preds = %162
  %171 = and i96 %159, 33554432
  %172 = icmp eq i96 %171, 0
  br i1 %172, label %203, label %173

173:                                              ; preds = %170
  %174 = bitcast %"class.blink::LayoutObject"* %139 to i1 (%"class.blink::LayoutObject"*, i32)***
  %175 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %174, align 8
  %176 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %175, i64 92
  %177 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %176, align 8
  %178 = tail call zeroext i1 %177(%"class.blink::LayoutObject"* nonnull %139, i32 0) #13
  br i1 %178, label %203, label %179

179:                                              ; preds = %173
  %180 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %163, align 8
  %181 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %180, i64 0, i32 0, i32 9
  %182 = bitcast [20 x i8]* %181 to i160*
  %183 = load i160, i160* %182, align 8
  br label %184

184:                                              ; preds = %179, %162
  %185 = phi i160 [ %183, %179 ], [ %167, %162 ]
  %186 = and i160 %185, 2113929216
  %187 = icmp eq i160 %186, 134217728
  br i1 %187, label %188, label %198

188:                                              ; preds = %184
  %189 = load i96, i96* %158, align 4
  %190 = and i96 %189, 33554432
  %191 = icmp eq i96 %190, 0
  br i1 %191, label %203, label %192

192:                                              ; preds = %188
  %193 = bitcast %"class.blink::LayoutObject"* %139 to i1 (%"class.blink::LayoutObject"*, i32)***
  %194 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %193, align 8
  %195 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %194, i64 92
  %196 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %195, align 8
  %197 = tail call zeroext i1 %196(%"class.blink::LayoutObject"* nonnull %139, i32 0) #13
  br i1 %197, label %203, label %198

198:                                              ; preds = %192, %184
  %199 = bitcast %"class.blink::LayoutObject"* %139 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %200 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %200, i64 16
  %202 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %201, align 8
  tail call void %202(%"class.blink::LayoutObject"* nonnull %139, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #13
  br label %262

203:                                              ; preds = %153, %12, %136, %156, %188, %192, %173, %170
  %204 = tail call %"class.blink::LayoutBox"* @_ZN5blink19LayoutObjectFactory33CreateAnonymousTableRowWithParentERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %4) #13
  %205 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %204, i64 0, i32 0, i32 0
  tail call void @_ZN5blink18LayoutTableSection8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutObject"* %205, %"class.blink::LayoutObject"* %2)
  %206 = bitcast %"class.blink::LayoutBox"* %204 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %207 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %207, i64 16
  %209 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %208, align 8
  tail call void %209(%"class.blink::LayoutObject"* %205, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #13
  ret void

210:                                              ; preds = %3
  br i1 %10, label %211, label %212

211:                                              ; preds = %210
  tail call void @_ZN5blink18LayoutTableSection18SetNeedsCellRecalcEv(%"class.blink::LayoutTableSection"* %0)
  br label %212

212:                                              ; preds = %211, %210
  %213 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 9
  %214 = load i32, i32* %213, align 8
  %215 = add i32 %214, 1
  store i32 %215, i32* %213, align 8
  %216 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 8
  store i32 0, i32* %216, align 4
  tail call void @_ZN5blink18LayoutTableSection10EnsureRowsEj(%"class.blink::LayoutTableSection"* %0, i32 %215)
  %217 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutTableRow"*
  %218 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %219 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %218, i32 %214) #13
  %220 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %219, i64 0, i32 1
  %221 = bitcast %"class.blink::LayoutTableRow"** %220 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %221, align 8
  tail call void @_ZN5blink14LayoutTableRow11SetRowIndexEj(%"class.blink::LayoutTableRow"* %217, i32 %214)
  br i1 %10, label %253, label %222

222:                                              ; preds = %212
  %223 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %218, i32 %214) #13
  %224 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %223, i64 0, i32 1
  %225 = bitcast %"class.blink::LayoutTableRow"** %224 to %"class.blink::LayoutObject"**
  %226 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %226, i64 0, i32 5, i32 0
  %228 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %228, i64 0, i32 0, i32 9
  %230 = bitcast [20 x i8]* %229 to i160*
  %231 = load i160, i160* %230, align 8
  %232 = and i160 %231, 15211807202738752817960438464512
  %233 = icmp eq i160 %232, 0
  %234 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %228, i64 0, i32 0, i32 5, i32 0, i32 0
  %235 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %235, i64 0, i32 3
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %235, i64 0, i32 8
  %238 = select i1 %233, %"class.blink::Length"* %236, %"class.blink::Length"* %237
  %239 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %223, i64 0, i32 3
  %240 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %238, i64 0, i32 2
  %241 = load i8, i8* %240, align 1
  %242 = icmp eq i8 %241, 8
  br i1 %242, label %243, label %244

243:                                              ; preds = %222
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %238) #13
  br label %244

244:                                              ; preds = %243, %222
  %245 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %223, i64 0, i32 3, i32 2
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq i8 %246, 8
  br i1 %247, label %248, label %249

248:                                              ; preds = %244
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %239) #13
  br label %249

249:                                              ; preds = %244, %248
  %250 = bitcast %"class.blink::Length"* %238 to i64*
  %251 = bitcast %"class.blink::Length"* %239 to i64*
  %252 = load i64, i64* %250, align 4
  store i64 %252, i64* %251, align 4
  br label %260

253:                                              ; preds = %212
  %254 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 7
  %255 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %254, align 8
  %256 = icmp eq %"class.blink::LayoutObject"* %255, %4
  br i1 %256, label %260, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %259 = tail call %"class.blink::LayoutObject"* @_ZN5blink9LayoutBox30SplitAnonymousBoxesAroundChildEPNS_12LayoutObjectE(%"class.blink::LayoutBox"* %258, %"class.blink::LayoutObject"* nonnull %2) #13
  br label %260

260:                                              ; preds = %249, %253, %257
  %261 = phi %"class.blink::LayoutObject"* [ %259, %257 ], [ %2, %253 ], [ null, %249 ]
  tail call void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %261) #13
  br label %262

262:                                              ; preds = %98, %131, %198, %260
  ret void
}

declare %"class.blink::LayoutBox"* @_ZN5blink19LayoutObjectFactory33CreateAnonymousTableRowWithParentERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18LayoutTableSection10EnsureRowsEj(%"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %52

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, %1
  br i1 %10, label %11, label %33

11:                                               ; preds = %7
  %12 = lshr i32 %9, 2
  %13 = add nuw i32 %9, 1
  %14 = add i32 %13, %12
  %15 = icmp ugt i32 %14, 4
  %16 = select i1 %15, i32 %14, i32 4
  %17 = icmp ugt i32 %16, %1
  %18 = select i1 %17, i32 %16, i32 %1
  %19 = icmp ult i32 %9, %18
  br i1 %19, label %20, label %33, !prof !2

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %21, align 8
  %23 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %22, null
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = zext i32 %18 to i64
  %26 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18LayoutTableSection12TableGridRowEEEmm(i64 %25) #13
  %27 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18LayoutTableSection12TableGridRowEEEPKcv, i64 0, i64 0)) #13
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.2045"* %3 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = udiv i64 %26, 40
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %8, align 8
  br label %33

32:                                               ; preds = %20
  tail call void @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2045"* %3, i32 %18) #13
  br label %33

33:                                               ; preds = %32, %24, %11, %7
  %34 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %34, align 8
  %36 = load i32, i32* %4, align 4
  %37 = zext i32 %1 to i64
  %38 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %35, i64 %37
  %39 = icmp eq i32 %36, %1
  br i1 %39, label %51, label %40

40:                                               ; preds = %33
  %41 = zext i32 %36 to i64
  %42 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %35, i64 %41
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi %"struct.blink::LayoutTableSection::TableGridRow"* [ %49, %43 ], [ %42, %40 ]
  %45 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %44 to i8*
  %46 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %44, i64 0, i32 2, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 40, i1 false) #13
  store i32 -64, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %44, i64 0, i32 3
  %48 = bitcast %"class.blink::Length"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 7, i1 false) #13
  %49 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %44, i64 1
  %50 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %49, %38
  br i1 %50, label %51, label %43

51:                                               ; preds = %43, %33
  store i32 %1, i32* %4, align 4
  br label %52

52:                                               ; preds = %51, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14LayoutTableRow11SetRowIndexEj(%"class.blink::LayoutTableRow"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = icmp ugt i32 %1, 2147483646
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  store i8* null, i8** %7, align 8
  br label %20

11:                                               ; preds = %2
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 2147483646) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i8* %12, i8* %13) #13
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  store i8* %15, i8** %7, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.11, i64 0, i64 0), i32 94, %"class.logging::CheckOpResult"* nonnull %4) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %10, %11, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %21 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %1, 2147483647
  %24 = and i32 %22, -2147483648
  %25 = or i32 %24, %23
  store i32 %25, i32* %21, align 8
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink9LayoutBox30SplitAnonymousBoxesAroundChildEPNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection7AddCellEPNS_15LayoutTableCellEPNS_14LayoutTableRowE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableRow"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutTableCell"*, align 8
  store %"class.blink::LayoutTableCell"* %1, %"class.blink::LayoutTableCell"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %181

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 134217728
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %34, label %13

13:                                               ; preds = %8
  %14 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 7
  %20 = bitcast %"class.blink::LayoutObject"** %19 to %"class.blink::LayoutTableSection"**
  %21 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %21, i64 0, i32 3, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 3
  %25 = bitcast %"class.blink::LayoutObject"* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 2147483647
  %28 = sub i32 %23, %27
  br label %29

29:                                               ; preds = %16, %13
  %30 = phi i32 [ %28, %16 ], [ %14, %13 ]
  %31 = icmp ult i32 %30, 2147483646
  %32 = select i1 %31, i32 %30, i32 2147483646
  %33 = load i32, i32* %9, align 8
  br label %34

34:                                               ; preds = %8, %29
  %35 = phi i32 [ %33, %29 ], [ %10, %8 ]
  %36 = phi i32 [ %32, %29 ], [ 1, %8 ]
  %37 = and i32 %35, 67108864
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  br label %41

41:                                               ; preds = %34, %39
  %42 = phi i32 [ %40, %39 ], [ 1, %34 ]
  %43 = or i32 %42, %36
  %44 = icmp ugt i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 15
  store i8 1, i8* %46, align 2
  br label %47

47:                                               ; preds = %41, %45
  %48 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %49 = bitcast %"class.blink::LayoutObject"** %48 to %"class.blink::LayoutTable"**
  %50 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %50, i64 0, i32 2
  %52 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %2, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 2147483647
  %55 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %56 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %55, i32 %54) #13
  %57 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %56, i64 0, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 8
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %60, %58
  br i1 %61, label %62, label %82

62:                                               ; preds = %47, %78
  %63 = phi i32 [ %80, %78 ], [ %60, %47 ]
  %64 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %55, i32 %54) #13
  %65 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %64, i64 0, i32 0
  %66 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %65, i32 %63) #13
  %67 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %66, i64 0, i32 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %78

70:                                               ; preds = %62
  %71 = load i32, i32* %59, align 4
  %72 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %55, i32 %54) #13
  %73 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %72, i64 0, i32 0
  %74 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %73, i32 %71) #13
  %75 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %74, i64 0, i32 1
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %70, %62
  %79 = load i32, i32* %59, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %59, align 4
  %81 = icmp ult i32 %80, %58
  br i1 %81, label %62, label %82

82:                                               ; preds = %78, %70, %47
  %83 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %55, i32 %54) #13
  tail call void @_ZN5blink18LayoutTableSection12TableGridRow26UpdateLogicalHeightForCellEPKNS_15LayoutTableCellE(%"struct.blink::LayoutTableSection::TableGridRow"* %83, %"class.blink::LayoutTableCell"* %1)
  %84 = add nuw i32 %54, %36
  tail call void @_ZN5blink18LayoutTableSection10EnsureRowsEj(%"class.blink::LayoutTableSection"* %0, i32 %84)
  %85 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %55, i32 %54) #13
  %86 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %85, i64 0, i32 1
  store %"class.blink::LayoutTableRow"* %2, %"class.blink::LayoutTableRow"** %86, align 8
  %87 = load i32, i32* %59, align 4
  %88 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %50, i64 0, i32 2, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %42, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %82
  %92 = icmp eq i32 %36, 0
  %93 = bitcast %"class.blink::LayoutTableCell"** %4 to i64*
  %94 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 14
  br label %95

95:                                               ; preds = %91, %117
  %96 = phi i32 [ %87, %91 ], [ %119, %117 ]
  %97 = phi i1 [ false, %91 ], [ true, %117 ]
  %98 = phi i32 [ %42, %91 ], [ %120, %117 ]
  %99 = icmp ult i32 %96, %89
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  %101 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %49, align 8
  call void @_ZN5blink11LayoutTable21AppendEffectiveColumnEj(%"class.blink::LayoutTable"* %101, i32 %98) #13
  br label %115

102:                                              ; preds = %95
  %103 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZNK3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2075"* %51, i32 %96) #13
  %104 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp ult i32 %98, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %49, align 8
  %109 = load i32, i32* %59, align 4
  call void @_ZN5blink11LayoutTable20SplitEffectiveColumnEjj(%"class.blink::LayoutTable"* %108, i32 %109, i32 %98) #13
  br label %110

110:                                              ; preds = %107, %102
  %111 = load i32, i32* %59, align 4
  %112 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZNK3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2075"* %51, i32 %111) #13
  %113 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %112, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br label %115

115:                                              ; preds = %110, %100
  %116 = phi i32 [ %98, %100 ], [ %114, %110 ]
  br i1 %92, label %117, label %122

117:                                              ; preds = %155, %115
  %118 = load i32, i32* %59, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %59, align 4
  %120 = sub i32 %98, %116
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %158, label %95

122:                                              ; preds = %115, %155
  %123 = phi i32 [ %156, %155 ], [ 0, %115 ]
  %124 = add nuw i32 %123, %54
  %125 = load i32, i32* %59, align 4
  %126 = add i32 %125, 1
  call void @_ZN5blink18LayoutTableSection10EnsureColsEjj(%"class.blink::LayoutTableSection"* %0, i32 %124, i32 %126)
  %127 = load i32, i32* %59, align 4
  %128 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %55, i32 %124) #13
  %129 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %128, i64 0, i32 0
  %130 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %129, i32 %127) #13
  %131 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %130, i64 0, i32 0, i32 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %130, i64 0, i32 0, i32 0, i32 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %132, %134
  br i1 %135, label %145, label %136, !prof !3

136:                                              ; preds = %122
  %137 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %137, align 8
  %139 = zext i32 %132 to i64
  %140 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %138, i64 %139
  %141 = load i64, i64* %93, align 8
  %142 = bitcast %"class.blink::LayoutTableCell"** %140 to i64*
  store i64 %141, i64* %142, align 8
  %143 = load i32, i32* %131, align 4
  %144 = add i32 %143, 1
  store i32 %144, i32* %131, align 4
  br label %148

145:                                              ; preds = %122
  %146 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %130, i64 0, i32 0
  call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2051"* %146, %"class.blink::LayoutTableCell"** nonnull dereferenceable(8) %4) #13
  %147 = load i32, i32* %131, align 4
  br label %148

148:                                              ; preds = %136, %145
  %149 = phi i32 [ %144, %136 ], [ %147, %145 ]
  %150 = icmp ugt i32 %149, 1
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  store i8 1, i8* %94, align 1
  br label %152

152:                                              ; preds = %151, %148
  br i1 %97, label %153, label %155

153:                                              ; preds = %152
  %154 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %130, i64 0, i32 1
  store i8 1, i8* %154, align 8
  br label %155

155:                                              ; preds = %153, %152
  %156 = add nuw nsw i32 %123, 1
  %157 = icmp eq i32 %156, %36
  br i1 %157, label %117, label %122

158:                                              ; preds = %117
  %159 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %4, align 8
  br label %160

160:                                              ; preds = %158, %82
  %161 = phi %"class.blink::LayoutTableCell"* [ %159, %158 ], [ %1, %82 ]
  %162 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %49, align 8
  %163 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %162, i64 0, i32 11
  %164 = load i32, i32* %163, align 4
  %165 = icmp ugt i32 %164, %87
  br i1 %165, label %179, label %166

166:                                              ; preds = %160
  %167 = icmp ult i32 %164, %87
  br i1 %167, label %168, label %179

168:                                              ; preds = %166
  %169 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %162, i64 0, i32 2
  br label %170

170:                                              ; preds = %170, %168
  %171 = phi i32 [ %164, %168 ], [ %177, %170 ]
  %172 = phi i32 [ %164, %168 ], [ %176, %170 ]
  %173 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2075"* %169, i32 %171) #13
  %174 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = add i32 %175, %172
  %177 = add i32 %171, 1
  %178 = icmp eq i32 %177, %87
  br i1 %178, label %179, label %170

179:                                              ; preds = %170, %160, %166
  %180 = phi i32 [ %87, %160 ], [ %164, %166 ], [ %176, %170 ]
  call void @_ZN5blink15LayoutTableCell22SetAbsoluteColumnIndexEj(%"class.blink::LayoutTableCell"* %161, i32 %180)
  br label %181

181:                                              ; preds = %3, %179
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18LayoutTableSection7NumColsEj(%"class.blink::LayoutTableSection"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %4 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18LayoutTableSection12TableGridRow26UpdateLogicalHeightForCellEPKNS_15LayoutTableCellE(%"struct.blink::LayoutTableSection::TableGridRow"*, %"class.blink::LayoutTableCell"*) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 134217728
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 7
  %14 = bitcast %"class.blink::LayoutObject"** %13 to %"class.blink::LayoutTableSection"**
  %15 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %15, i64 0, i32 3, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 3
  %19 = bitcast %"class.blink::LayoutObject"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 2147483647
  %22 = sub i32 %17, %21
  br label %23

23:                                               ; preds = %10, %7
  %24 = phi i32 [ %22, %10 ], [ %8, %7 ]
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %108

26:                                               ; preds = %23, %2
  %27 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 15211807202738752817960438464512
  %33 = icmp eq i160 %32, 0
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 5, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %35, i64 0, i32 3
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %35, i64 0, i32 8
  %38 = select i1 %33, %"class.blink::Length"* %36, %"class.blink::Length"* %37
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  switch i8 %40, label %41 [
    i8 12, label %108
    i8 8, label %108
  ]

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 3
  %43 = load i8, i8* %42, align 2, !range !4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.blink::Length"* %38 to float*
  %47 = load float, float* %46, align 4
  %48 = bitcast float %47 to i32
  br label %54

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = sitofp i32 %51 to float
  %53 = bitcast i32 %51 to float
  br label %54

54:                                               ; preds = %45, %49
  %55 = phi i32 [ %48, %45 ], [ %51, %49 ]
  %56 = phi float [ %47, %45 ], [ %53, %49 ]
  %57 = phi float [ %47, %45 ], [ %52, %49 ]
  %58 = fcmp ogt float %57, 0.000000e+00
  br i1 %58, label %59, label %108

59:                                               ; preds = %54
  switch i8 %40, label %108 [
    i8 1, label %60
    i8 2, label %84
  ]

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %0, i64 0, i32 3
  %62 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %0, i64 0, i32 3, i32 2
  %63 = load i8, i8* %62, align 1
  switch i8 %63, label %80 [
    i8 1, label %64
    i8 8, label %108
  ]

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %0, i64 0, i32 3, i32 3
  %66 = load i8, i8* %65, align 2, !range !4
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.blink::Length"* %61 to float*
  %70 = load float, float* %69, align 4
  br label %75

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %61, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = sitofp i32 %73 to float
  br label %75

75:                                               ; preds = %68, %71
  %76 = phi float [ %70, %68 ], [ %74, %71 ]
  %77 = sitofp i32 %55 to float
  %78 = select i1 %44, float %77, float %56
  %79 = fcmp olt float %76, %78
  br i1 %79, label %80, label %108

80:                                               ; preds = %75, %60
  %81 = bitcast %"class.blink::Length"* %38 to i64*
  %82 = bitcast %"class.blink::Length"* %61 to i64*
  %83 = load i64, i64* %81, align 4
  store i64 %83, i64* %82, align 4
  br label %108

84:                                               ; preds = %59
  %85 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %0, i64 0, i32 3
  %86 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %0, i64 0, i32 3, i32 2
  %87 = load i8, i8* %86, align 1
  switch i8 %87, label %108 [
    i8 0, label %104
    i8 2, label %88
  ]

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %0, i64 0, i32 3, i32 3
  %90 = load i8, i8* %89, align 2, !range !4
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.blink::Length"* %85 to float*
  %94 = load float, float* %93, align 4
  br label %99

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = sitofp i32 %97 to float
  br label %99

99:                                               ; preds = %92, %95
  %100 = phi float [ %94, %92 ], [ %98, %95 ]
  %101 = sitofp i32 %55 to float
  %102 = select i1 %44, float %101, float %56
  %103 = fcmp olt float %100, %102
  br i1 %103, label %104, label %108

104:                                              ; preds = %99, %84
  %105 = bitcast %"class.blink::Length"* %38 to i64*
  %106 = bitcast %"class.blink::Length"* %85 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  br label %108

108:                                              ; preds = %84, %60, %26, %26, %23, %54, %59, %99, %104, %75, %80
  ret void
}

declare void @_ZN5blink11LayoutTable21AppendEffectiveColumnEj(%"class.blink::LayoutTable"*, i32) local_unnamed_addr #2

declare void @_ZN5blink11LayoutTable20SplitEffectiveColumnEjj(%"class.blink::LayoutTable"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18LayoutTableSection10EnsureColsEjj(%"class.blink::LayoutTableSection"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %5 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %4, i32 %1) #13
  %6 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %2
  br i1 %8, label %9, label %53

9:                                                ; preds = %3
  %10 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %4, i32 %1) #13
  %11 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, %2
  br i1 %14, label %15, label %37

15:                                               ; preds = %9
  %16 = lshr i32 %13, 2
  %17 = add nuw i32 %13, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %2
  %22 = select i1 %21, i32 %20, i32 %2
  %23 = icmp ult i32 %13, %22
  br i1 %23, label %24, label %37, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %25, align 8
  %27 = icmp eq %"class.blink::TableGridCell"* %26, null
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = zext i32 %22 to i64
  %30 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13TableGridCellEEEmm(i64 %29) #13
  %31 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %30, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13TableGridCellEEEPKcv, i64 0, i64 0)) #13
  %32 = ptrtoint i8* %31 to i64
  %33 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %10 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = lshr i64 %30, 5
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %12, align 8
  br label %37

36:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2048"* %11, i32 %22) #13
  br label %37

37:                                               ; preds = %36, %28, %15, %9
  %38 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %38, align 8
  %40 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %2 to i64
  %43 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %39, i64 %42
  %44 = icmp eq i32 %41, %2
  br i1 %44, label %52, label %45

45:                                               ; preds = %37
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %39, i64 %46
  br label %48

48:                                               ; preds = %48, %45
  %49 = phi %"class.blink::TableGridCell"* [ %50, %48 ], [ %47, %45 ]
  tail call void @_ZN5blink13TableGridCellC1Ev(%"class.blink::TableGridCell"* %49) #13
  %50 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %49, i64 1
  %51 = icmp eq %"class.blink::TableGridCell"* %50, %43
  br i1 %51, label %52, label %48

52:                                               ; preds = %48, %37
  store i32 %2, i32* %40, align 4
  br label %53

53:                                               ; preds = %52, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutTableCell22SetAbsoluteColumnIndexEj(%"class.blink::LayoutTableCell"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = icmp ugt i32 %1, 33554430
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  store i8* null, i8** %7, align 8
  br label %20

11:                                               ; preds = %2
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 33554430) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), i8* %12, i8* %13) #13
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  store i8* %15, i8** %7, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.13, i64 0, i64 0), i32 123, %"class.logging::CheckOpResult"* nonnull %4) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %10, %11, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %21 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %1, 33554431
  %24 = and i32 %22, -33554432
  %25 = or i32 %24, %23
  store i32 %25, i32* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18LayoutTableSection23RowHasOnlySpanningCellsEj(%"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %4 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  %9 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %3, i32 %1) #13
  %10 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %52, label %19

17:                                               ; preds = %48
  %18 = icmp eq %"class.blink::TableGridCell"* %51, %15
  br i1 %18, label %52, label %19

19:                                               ; preds = %8, %17
  %20 = phi %"class.blink::TableGridCell"* [ %51, %17 ], [ %11, %8 ]
  %21 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %52, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %20, i64 0, i32 0
  %26 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZNK3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"* %25, i32 0) #13
  %27 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %27, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 134217728
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %24
  %33 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %27) #13
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 7
  %39 = bitcast %"class.blink::LayoutObject"** %38 to %"class.blink::LayoutTableSection"**
  %40 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %40, i64 0, i32 3, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 3
  %44 = bitcast %"class.blink::LayoutObject"* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 2147483647
  %47 = sub i32 %42, %46
  br label %48

48:                                               ; preds = %35, %32
  %49 = phi i32 [ %47, %35 ], [ %33, %32 ]
  %50 = icmp eq i32 %49, 1
  %51 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %20, i64 1
  br i1 %50, label %52, label %17

52:                                               ; preds = %17, %24, %48, %19, %8, %2
  %53 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %17 ], [ false, %24 ], [ false, %48 ], [ false, %19 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection34PopulateSpanningRowsHeightFromCellEPNS_15LayoutTableCellERNS0_18SpanningRowsHeightE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, %"struct.blink::LayoutTableSection::SpanningRowsHeight"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 134217728
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 7
  %15 = bitcast %"class.blink::LayoutObject"** %14 to %"class.blink::LayoutTableSection"**
  %16 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %16, i64 0, i32 3, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 3
  %20 = bitcast %"class.blink::LayoutObject"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2147483647
  %23 = sub i32 %18, %22
  br label %24

24:                                               ; preds = %11, %8
  %25 = phi i32 [ %23, %11 ], [ %9, %8 ]
  %26 = icmp ult i32 %25, 2147483646
  %27 = select i1 %26, i32 %25, i32 2147483646
  br label %28

28:                                               ; preds = %3, %24
  %29 = phi i32 [ %27, %24 ], [ 1, %3 ]
  %30 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %31 = bitcast %"class.blink::LayoutObject"** %30 to %"class.blink::LayoutTableRow"**
  %32 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %32, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 2147483647
  %36 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0
  %37 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %36) #13
  %38 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 %37, %39
  %43 = sub i32 %42, %41
  %44 = tail call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* %1) #13
  %45 = icmp slt i32 %44, %43
  %46 = select i1 %45, i32 %43, i32 %44
  %47 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 2
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp ult i32 %50, %29
  br i1 %51, label %52, label %108

52:                                               ; preds = %28
  %53 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp ult i32 %54, %29
  br i1 %55, label %56, label %95

56:                                               ; preds = %52
  %57 = lshr i32 %54, 2
  %58 = add nuw i32 %54, 1
  %59 = add i32 %58, %57
  %60 = icmp ugt i32 %59, 4
  %61 = select i1 %60, i32 %59, i32 4
  %62 = icmp ugt i32 %61, %29
  %63 = select i1 %62, i32 %61, i32 %29
  %64 = icmp ult i32 %54, %63
  br i1 %64, label %65, label %95, !prof !2

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = icmp eq i32* %67, null
  %69 = zext i32 %63 to i64
  %70 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %69) #13
  %71 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %70, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  br i1 %68, label %72, label %77

72:                                               ; preds = %65
  %73 = ptrtoint i8* %71 to i64
  %74 = bitcast %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = lshr i64 %70, 2
  %76 = trunc i64 %75 to i32
  store i32 %76, i32* %53, align 8
  br label %95

77:                                               ; preds = %65
  %78 = lshr i64 %70, 2
  %79 = ptrtoint i8* %71 to i64
  %80 = load i32*, i32** %66, align 8
  %81 = icmp ne i8* %71, null
  %82 = icmp ne i32* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast i32* %80 to i8*
  br i1 %83, label %85, label %91, !prof !2

85:                                               ; preds = %77
  %86 = load i32, i32* %49, align 4
  %87 = zext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* nonnull align 4 %84, i64 %88, i1 false) #13
  %89 = bitcast %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %77
  %92 = phi i8* [ %90, %85 ], [ %84, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #13
  %93 = bitcast %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2 to i64*
  store atomic i64 %79, i64* %93 monotonic, align 8
  %94 = trunc i64 %78 to i32
  store i32 %94, i32* %53, align 8
  br label %95

95:                                               ; preds = %52, %56, %72, %91
  %96 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = load i32, i32* %49, align 4
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i32, i32* %97, i64 %99
  %101 = zext i32 %29 to i64
  %102 = getelementptr inbounds i32, i32* %97, i64 %101
  %103 = bitcast i32* %100 to i8*
  %104 = ptrtoint i32* %102 to i64
  %105 = ptrtoint i32* %100 to i64
  %106 = sub i64 %104, %105
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %103, i8 0, i64 %106, i1 false) #13
  store i32 %29, i32* %49, align 4
  %107 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 1
  store i32 0, i32* %107, align 8
  br label %111

108:                                              ; preds = %28
  store i32 %29, i32* %49, align 4
  %109 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 1
  store i32 0, i32* %109, align 8
  %110 = icmp eq i32 %29, 0
  br i1 %110, label %118, label %111

111:                                              ; preds = %95, %108
  %112 = phi i32* [ %107, %95 ], [ %109, %108 ]
  %113 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %114 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %115 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %116 = bitcast %"class.blink::LayoutObject"** %115 to %"class.blink::LayoutTable"**
  %117 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 3
  br label %137

118:                                              ; preds = %181, %108
  %119 = add nsw i32 %29, -1
  %120 = add i32 %119, %35
  %121 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %122 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %121, i32 %120) #13
  %123 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %122, i64 0, i32 1
  %124 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %123, align 8
  %125 = icmp eq %"class.blink::LayoutTableRow"* %124, null
  br i1 %125, label %133, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %128 = bitcast %"class.blink::LayoutObject"** %127 to %"class.blink::LayoutTable"**
  %129 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %129, i64 0, i32 13
  %131 = load i16, i16* %130, align 2
  %132 = sext i16 %131 to i32
  br label %133

133:                                              ; preds = %118, %126
  %134 = phi i32 [ %132, %126 ], [ 0, %118 ]
  %135 = load i32, i32* %47, align 4
  %136 = add nsw i32 %135, %134
  store i32 %136, i32* %47, align 4
  ret void

137:                                              ; preds = %181, %111
  %138 = phi i32 [ 0, %111 ], [ %185, %181 ]
  %139 = add nuw i32 %138, %35
  %140 = add nuw i32 %139, 1
  %141 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %113, i32 %140) #13
  %142 = load i32, i32* %141, align 4
  %143 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %113, i32 %139) #13
  %144 = load i32, i32* %143, align 4
  %145 = sub i32 %142, %144
  %146 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %114, i32 %139) #13
  %147 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %146, i64 0, i32 1
  %148 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutTableRow"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %137
  %151 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %116, align 8
  %152 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %151, i64 0, i32 13
  %153 = load i16, i16* %152, align 2
  %154 = sext i16 %153 to i32
  br label %155

155:                                              ; preds = %137, %150
  %156 = phi i32 [ %154, %150 ], [ 0, %137 ]
  %157 = sub i32 %145, %156
  %158 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %48, i32 %138) #13
  store i32 %157, i32* %158, align 4
  %159 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %48, i32 %138) #13
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %155
  %163 = tail call zeroext i1 @_ZN5blink18LayoutTableSection23RowHasOnlySpanningCellsEj(%"class.blink::LayoutTableSection"* %0, i32 %139)
  %164 = zext i1 %163 to i8
  %165 = load i8, i8* %117, align 8, !range !4
  %166 = or i8 %165, %164
  store i8 %166, i8* %117, align 8
  br label %167

167:                                              ; preds = %155, %162
  %168 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %48, i32 %138) #13
  %169 = load i32, i32* %168, align 4
  %170 = load i32, i32* %112, align 8
  %171 = add nsw i32 %170, %169
  store i32 %171, i32* %112, align 8
  %172 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %114, i32 %139) #13
  %173 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %172, i64 0, i32 1
  %174 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %173, align 8
  %175 = icmp eq %"class.blink::LayoutTableRow"* %174, null
  br i1 %175, label %181, label %176

176:                                              ; preds = %167
  %177 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %116, align 8
  %178 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %177, i64 0, i32 13
  %179 = load i16, i16* %178, align 2
  %180 = sext i16 %179 to i32
  br label %181

181:                                              ; preds = %167, %176
  %182 = phi i32 [ %180, %176 ], [ 0, %167 ]
  %183 = load i32, i32* %47, align 4
  %184 = sub nsw i32 %183, %182
  store i32 %184, i32* %47, align 4
  %185 = add nuw nsw i32 %138, 1
  %186 = icmp eq i32 %185, %29
  br i1 %186, label %118, label %137
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection41DistributeExtraRowSpanHeightToPercentRowsEPNS_15LayoutTableCellEfRiRN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, float, i32* nocapture dereferenceable(4), %"class.WTF::Vector.2066"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca float, align 4
  store float %2, float* %6, align 4
  %7 = load i32, i32* %3, align 4
  %8 = icmp ne i32 %7, 0
  %9 = fcmp une float %2, 0.000000e+00
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %129

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 134217728
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %11
  %17 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 7
  %23 = bitcast %"class.blink::LayoutObject"** %22 to %"class.blink::LayoutTableSection"**
  %24 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %24, i64 0, i32 3, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 3
  %28 = bitcast %"class.blink::LayoutObject"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 2147483647
  %31 = sub i32 %26, %30
  br label %32

32:                                               ; preds = %19, %16
  %33 = phi i32 [ %31, %19 ], [ %17, %16 ]
  %34 = icmp ult i32 %33, 2147483646
  %35 = select i1 %34, i32 %33, i32 2147483646
  br label %36

36:                                               ; preds = %32, %11
  %37 = phi i32 [ 1, %11 ], [ %35, %32 ]
  %38 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %39 = bitcast %"class.blink::LayoutObject"** %38 to %"class.blink::LayoutTableRow"**
  %40 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %40, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 2147483647
  %44 = load float, float* %6, align 4
  %45 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %47 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %45, i32 %48) #13
  %50 = add nuw i32 %43, %37
  %51 = icmp eq i32 %37, 0
  br i1 %51, label %129, label %52

52:                                               ; preds = %36
  %53 = fcmp ogt float %2, 1.000000e+02
  %54 = select i1 %53, float 1.000000e+02, float %44
  %55 = load i32, i32* %3, align 4
  %56 = load i32, i32* %49, align 4
  %57 = add nsw i32 %55, %56
  %58 = sitofp i32 %57 to float
  br label %59

59:                                               ; preds = %127, %52
  %60 = phi i32 [ %55, %52 ], [ %128, %127 ]
  %61 = phi i32 [ %43, %52 ], [ %122, %127 ]
  %62 = phi i32 [ 0, %52 ], [ %121, %127 ]
  %63 = phi float [ %54, %52 ], [ %120, %127 ]
  %64 = fcmp ogt float %63, 0.000000e+00
  %65 = icmp sgt i32 %60, 0
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %119

67:                                               ; preds = %59
  %68 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %46, i32 %61) #13
  %69 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %68, i64 0, i32 3, i32 2
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 1
  br i1 %71, label %72, label %119

72:                                               ; preds = %67
  %73 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %46, i32 %61) #13
  %74 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %73, i64 0, i32 3
  %75 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %73, i64 0, i32 3, i32 3
  %76 = load i8, i8* %75, align 2, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.blink::Length"* %74 to float*
  %80 = load float, float* %79, align 4
  br label %85

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %74, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sitofp i32 %83 to float
  br label %85

85:                                               ; preds = %78, %81
  %86 = phi float [ %80, %78 ], [ %84, %81 ]
  %87 = fcmp olt float %63, %86
  %88 = select i1 %87, float %63, float %86
  %89 = fmul float %88, %58
  %90 = fdiv float %89, 1.000000e+02
  %91 = sub nuw i32 %61, %43
  %92 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %4, i32 %91) #13
  %93 = load i32, i32* %92, align 4
  %94 = sitofp i32 %93 to float
  %95 = fsub float %90, %94
  %96 = fptosi float %95 to i32
  %97 = load i32, i32* %3, align 4
  %98 = icmp slt i32 %97, %96
  %99 = select i1 %98, i32 %97, i32 %96
  %100 = icmp sgt i32 %99, 0
  %101 = select i1 %100, i32 %99, i32 0
  %102 = add nsw i32 %101, %62
  %103 = sub nsw i32 %97, %101
  store i32 %103, i32* %3, align 4
  %104 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %46, i32 %61) #13
  %105 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %104, i64 0, i32 3
  %106 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %104, i64 0, i32 3, i32 3
  %107 = load i8, i8* %106, align 2, !range !4
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %85
  %110 = bitcast %"class.blink::Length"* %105 to float*
  %111 = load float, float* %110, align 4
  br label %116

112:                                              ; preds = %85
  %113 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %105, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = sitofp i32 %114 to float
  br label %116

116:                                              ; preds = %109, %112
  %117 = phi float [ %111, %109 ], [ %115, %112 ]
  %118 = fsub float %63, %117
  br label %119

119:                                              ; preds = %67, %116, %59
  %120 = phi float [ %118, %116 ], [ %63, %67 ], [ %63, %59 ]
  %121 = phi i32 [ %102, %116 ], [ %62, %67 ], [ %62, %59 ]
  %122 = add nuw i32 %61, 1
  %123 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %45, i32 %122) #13
  %124 = load i32, i32* %123, align 4
  %125 = add nsw i32 %124, %121
  store i32 %125, i32* %123, align 4
  %126 = icmp ult i32 %122, %50
  br i1 %126, label %127, label %129

127:                                              ; preds = %119
  %128 = load i32, i32* %3, align 4
  br label %59

129:                                              ; preds = %119, %36, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection46DistributeWholeExtraRowSpanHeightToPercentRowsEPNS_15LayoutTableCellEfRiRN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, float, i32* nocapture dereferenceable(4), %"class.WTF::Vector.2066"* nocapture readnone dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %3, align 4
  %7 = icmp ne i32 %6, 0
  %8 = fcmp une float %2, 0.000000e+00
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %95

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 134217728
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %10
  %16 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 7
  %22 = bitcast %"class.blink::LayoutObject"** %21 to %"class.blink::LayoutTableSection"**
  %23 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %23, i64 0, i32 3, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 3
  %27 = bitcast %"class.blink::LayoutObject"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2147483647
  %30 = sub i32 %25, %29
  br label %31

31:                                               ; preds = %18, %15
  %32 = phi i32 [ %30, %18 ], [ %16, %15 ]
  %33 = icmp ult i32 %32, 2147483646
  %34 = select i1 %33, i32 %32, i32 2147483646
  br label %35

35:                                               ; preds = %31, %10
  %36 = phi i32 [ 1, %10 ], [ %34, %31 ]
  %37 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %38 = bitcast %"class.blink::LayoutObject"** %37 to %"class.blink::LayoutTableRow"**
  %39 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 2147483647
  %43 = add nuw i32 %42, %36
  %44 = icmp eq i32 %36, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %47 = fpext float %2 to double
  %48 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  br label %53

49:                                               ; preds = %87, %35
  %50 = phi i32 [ 0, %35 ], [ %89, %87 ]
  %51 = load i32, i32* %3, align 4
  %52 = sub nsw i32 %51, %50
  store i32 %52, i32* %3, align 4
  br label %95

53:                                               ; preds = %45, %87
  %54 = phi i32 [ %42, %45 ], [ %90, %87 ]
  %55 = phi i32 [ 0, %45 ], [ %89, %87 ]
  %56 = phi double [ 0.000000e+00, %45 ], [ %88, %87 ]
  %57 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %46, i32 %54) #13
  %58 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %57, i64 0, i32 3, i32 2
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %61, label %87

61:                                               ; preds = %53
  %62 = load i32, i32* %3, align 4
  %63 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %46, i32 %54) #13
  %64 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %63, i64 0, i32 3
  %65 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %63, i64 0, i32 3, i32 3
  %66 = load i8, i8* %65, align 2, !range !4
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.blink::Length"* %64 to float*
  %70 = load float, float* %69, align 4
  br label %75

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %64, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = sitofp i32 %73 to float
  br label %75

75:                                               ; preds = %68, %71
  %76 = phi float [ %70, %68 ], [ %74, %71 ]
  %77 = sitofp i32 %62 to double
  %78 = fpext float %76 to double
  %79 = fmul double %77, %78
  %80 = fdiv double %79, %47
  %81 = fadd double %56, %80
  %82 = fadd double %81, 0x3EB0C6F7A0B5ED8D
  %83 = fptosi double %82 to i32
  %84 = add nsw i32 %55, %83
  %85 = sitofp i32 %83 to double
  %86 = fsub double %81, %85
  br label %87

87:                                               ; preds = %75, %53
  %88 = phi double [ %86, %75 ], [ %56, %53 ]
  %89 = phi i32 [ %84, %75 ], [ %55, %53 ]
  %90 = add nuw i32 %54, 1
  %91 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %48, i32 %90) #13
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %92, %89
  store i32 %93, i32* %91, align 4
  %94 = icmp ult i32 %90, %43
  br i1 %94, label %53, label %49

95:                                               ; preds = %5, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection38DistributeExtraRowSpanHeightToAutoRowsEPNS_15LayoutTableCellEiRiRN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, i32, i32* nocapture dereferenceable(4), %"class.WTF::Vector.2066"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %3, align 4
  %7 = icmp ne i32 %6, 0
  %8 = icmp ne i32 %2, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %86

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 134217728
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %10
  %16 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 7
  %22 = bitcast %"class.blink::LayoutObject"** %21 to %"class.blink::LayoutTableSection"**
  %23 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %23, i64 0, i32 3, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 3
  %27 = bitcast %"class.blink::LayoutObject"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2147483647
  %30 = sub i32 %25, %29
  br label %31

31:                                               ; preds = %18, %15
  %32 = phi i32 [ %30, %18 ], [ %16, %15 ]
  %33 = icmp ult i32 %32, 2147483646
  %34 = select i1 %33, i32 %32, i32 2147483646
  br label %35

35:                                               ; preds = %31, %10
  %36 = phi i32 [ 1, %10 ], [ %34, %31 ]
  %37 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %38 = bitcast %"class.blink::LayoutObject"** %37 to %"class.blink::LayoutTableRow"**
  %39 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 2147483647
  %43 = add nuw i32 %42, %36
  %44 = icmp eq i32 %36, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %47 = sitofp i32 %2 to float
  %48 = fpext float %47 to double
  %49 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  br label %54

50:                                               ; preds = %78, %35
  %51 = phi i32 [ 0, %35 ], [ %79, %78 ]
  %52 = load i32, i32* %3, align 4
  %53 = sub nsw i32 %52, %51
  store i32 %53, i32* %3, align 4
  br label %86

54:                                               ; preds = %45, %78
  %55 = phi i32 [ %42, %45 ], [ %81, %78 ]
  %56 = phi double [ 0.000000e+00, %45 ], [ %80, %78 ]
  %57 = phi i32 [ 0, %45 ], [ %79, %78 ]
  %58 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %46, i32 %55) #13
  %59 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %58, i64 0, i32 3, i32 2
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %78

62:                                               ; preds = %54
  %63 = load i32, i32* %3, align 4
  %64 = sub nuw i32 %55, %42
  %65 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %4, i32 %64) #13
  %66 = load i32, i32* %65, align 4
  %67 = sitofp i32 %66 to float
  %68 = sitofp i32 %63 to double
  %69 = fpext float %67 to double
  %70 = fmul double %68, %69
  %71 = fdiv double %70, %48
  %72 = fadd double %56, %71
  %73 = fadd double %72, 0x3EB0C6F7A0B5ED8D
  %74 = fptosi double %73 to i32
  %75 = add nsw i32 %57, %74
  %76 = sitofp i32 %74 to double
  %77 = fsub double %72, %76
  br label %78

78:                                               ; preds = %62, %54
  %79 = phi i32 [ %75, %62 ], [ %57, %54 ]
  %80 = phi double [ %77, %62 ], [ %56, %54 ]
  %81 = add nuw i32 %55, 1
  %82 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %49, i32 %81) #13
  %83 = load i32, i32* %82, align 4
  %84 = add nsw i32 %83, %79
  store i32 %84, i32* %82, align 4
  %85 = icmp ult i32 %81, %43
  br i1 %85, label %54, label %50

86:                                               ; preds = %5, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection43DistributeExtraRowSpanHeightToRemainingRowsEPNS_15LayoutTableCellEiRiRN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, i32, i32* nocapture dereferenceable(4), %"class.WTF::Vector.2066"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %3, align 4
  %7 = icmp ne i32 %6, 0
  %8 = icmp ne i32 %2, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %85

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 134217728
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %10
  %16 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 7
  %22 = bitcast %"class.blink::LayoutObject"** %21 to %"class.blink::LayoutTableSection"**
  %23 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %23, i64 0, i32 3, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 3
  %27 = bitcast %"class.blink::LayoutObject"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2147483647
  %30 = sub i32 %25, %29
  br label %31

31:                                               ; preds = %18, %15
  %32 = phi i32 [ %30, %18 ], [ %16, %15 ]
  %33 = icmp ult i32 %32, 2147483646
  %34 = select i1 %33, i32 %32, i32 2147483646
  br label %35

35:                                               ; preds = %31, %10
  %36 = phi i32 [ 1, %10 ], [ %34, %31 ]
  %37 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %38 = bitcast %"class.blink::LayoutObject"** %37 to %"class.blink::LayoutTableRow"**
  %39 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 2147483647
  %43 = add nuw i32 %42, %36
  %44 = icmp eq i32 %36, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %47 = sitofp i32 %2 to float
  %48 = fpext float %47 to double
  %49 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  br label %54

50:                                               ; preds = %77, %35
  %51 = phi i32 [ 0, %35 ], [ %78, %77 ]
  %52 = load i32, i32* %3, align 4
  %53 = sub nsw i32 %52, %51
  store i32 %53, i32* %3, align 4
  br label %85

54:                                               ; preds = %45, %77
  %55 = phi i32 [ %42, %45 ], [ %80, %77 ]
  %56 = phi double [ 0.000000e+00, %45 ], [ %79, %77 ]
  %57 = phi i32 [ 0, %45 ], [ %78, %77 ]
  %58 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %46, i32 %55) #13
  %59 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %58, i64 0, i32 3, i32 2
  %60 = load i8, i8* %59, align 1
  switch i8 %60, label %61 [
    i8 8, label %77
    i8 1, label %77
  ]

61:                                               ; preds = %54
  %62 = load i32, i32* %3, align 4
  %63 = sub nuw i32 %55, %42
  %64 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %4, i32 %63) #13
  %65 = load i32, i32* %64, align 4
  %66 = sitofp i32 %65 to float
  %67 = sitofp i32 %62 to double
  %68 = fpext float %66 to double
  %69 = fmul double %67, %68
  %70 = fdiv double %69, %48
  %71 = fadd double %56, %70
  %72 = fadd double %71, 0x3EB0C6F7A0B5ED8D
  %73 = fptosi double %72 to i32
  %74 = add nsw i32 %57, %73
  %75 = sitofp i32 %73 to double
  %76 = fsub double %71, %75
  br label %77

77:                                               ; preds = %54, %54, %61
  %78 = phi i32 [ %57, %54 ], [ %74, %61 ], [ %57, %54 ]
  %79 = phi double [ %56, %54 ], [ %76, %61 ], [ %56, %54 ]
  %80 = add nuw i32 %55, 1
  %81 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %49, i32 %80) #13
  %82 = load i32, i32* %81, align 4
  %83 = add nsw i32 %82, %78
  store i32 %83, i32* %81, align 4
  %84 = icmp ult i32 %80, %43
  br i1 %84, label %54, label %50

85:                                               ; preds = %5, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18LayoutTableSection36CalcRowHeightHavingOnlySpanningCellsEjRijRjRN3WTF6VectorIiLj0ENS3_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, i32, i32* nocapture readonly dereferenceable(4), i32, i32* nocapture readonly dereferenceable(4), %"class.WTF::Vector.2066"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %8 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %7, i32 %1) #13
  %9 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %19 = bitcast %"class.blink::LayoutObject"** %18 to %"class.blink::LayoutTable"**
  br label %22

20:                                               ; preds = %123, %6
  %21 = phi i32 [ 0, %6 ], [ %124, %123 ]
  ret i32 %21

22:                                               ; preds = %16, %123
  %23 = phi %"class.blink::TableGridCell"* [ %10, %16 ], [ %125, %123 ]
  %24 = phi i32 [ 0, %16 ], [ %124, %123 ]
  %25 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %23, i64 0, i32 0
  %26 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZNK3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"* %25, i32 0) #13
  %27 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %29 = bitcast %"class.blink::LayoutObject"** %28 to %"class.blink::LayoutTableRow"**
  %30 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 2147483647
  %34 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %27, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 134217728
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %57, label %38

38:                                               ; preds = %22
  %39 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %27) #13
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %38
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 7
  %44 = bitcast %"class.blink::LayoutObject"** %43 to %"class.blink::LayoutTableSection"**
  %45 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %45, i64 0, i32 3, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 3
  %49 = bitcast %"class.blink::LayoutObject"* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 2147483647
  %52 = sub i32 %47, %51
  br label %53

53:                                               ; preds = %41, %38
  %54 = phi i32 [ %52, %41 ], [ %39, %38 ]
  %55 = icmp ult i32 %54, 2147483646
  %56 = select i1 %55, i32 %54, i32 2147483646
  br label %57

57:                                               ; preds = %22, %53
  %58 = phi i32 [ %56, %53 ], [ 1, %22 ]
  %59 = icmp ult i32 %33, %1
  %60 = select i1 %59, i32 %1, i32 %33
  %61 = add nuw i32 %58, %33
  %62 = add i32 %61, -1
  %63 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %5, i32 %62) #13
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %57
  %67 = add i32 %60, -1
  %68 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %5, i32 %67) #13
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 %64, %69
  br label %71

71:                                               ; preds = %57, %66
  %72 = phi i32 [ %70, %66 ], [ %64, %57 ]
  %73 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %17, i32 %61) #13
  %74 = load i32, i32* %73, align 4
  %75 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %17, i32 %33) #13
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %74, %76
  %78 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %7, i32 %62) #13
  %79 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %78, i64 0, i32 1
  %80 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %79, align 8
  %81 = icmp eq %"class.blink::LayoutTableRow"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %71
  %83 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %19, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %83, i64 0, i32 13
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i32
  br label %87

87:                                               ; preds = %71, %82
  %88 = phi i32 [ %86, %82 ], [ 0, %71 ]
  %89 = sub i32 %77, %88
  %90 = load i32, i32* %2, align 4
  %91 = add nsw i32 %89, %90
  %92 = icmp ule i32 %33, %3
  %93 = icmp ugt i32 %61, %3
  %94 = and i1 %92, %93
  %95 = load i32, i32* %4, align 4
  %96 = select i1 %94, i32 %95, i32 0
  %97 = add i32 %91, %96
  %98 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %27, i64 0, i32 0, i32 0, i32 0
  %99 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %98) #13
  %100 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %27, i64 0, i32 4
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %27, i64 0, i32 5
  %103 = load i32, i32* %102, align 4
  %104 = sub i32 %99, %101
  %105 = sub i32 %104, %103
  %106 = tail call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* %27) #13
  %107 = icmp slt i32 %106, %105
  %108 = select i1 %107, i32 %105, i32 %106
  %109 = icmp slt i32 %97, %108
  br i1 %109, label %110, label %123

110:                                              ; preds = %87
  %111 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %98) #13
  %112 = load i32, i32* %100, align 8
  %113 = load i32, i32* %102, align 4
  %114 = sub i32 %111, %112
  %115 = sub i32 %114, %113
  %116 = tail call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* %27) #13
  %117 = icmp slt i32 %116, %115
  %118 = select i1 %117, i32 %115, i32 %116
  %119 = sub nsw i32 %118, %97
  %120 = udiv i32 %119, %72
  %121 = icmp ult i32 %24, %120
  %122 = select i1 %121, i32 %120, i32 %24
  br label %123

123:                                              ; preds = %110, %87
  %124 = phi i32 [ %122, %110 ], [ %24, %87 ]
  %125 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %23, i64 1
  %126 = icmp eq %"class.blink::TableGridCell"* %125, %14
  br i1 %126, label %20, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection39UpdateRowsHeightHavingOnlySpanningCellsEPNS_15LayoutTableCellERNS0_18SpanningRowsHeightERjRN3WTF6VectorIiLj0ENS6_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, %"struct.blink::LayoutTableSection::SpanningRowsHeight"* dereferenceable(32), i32* nocapture readonly dereferenceable(4), %"class.WTF::Vector.2066"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 134217728
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %5
  %13 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 7
  %19 = bitcast %"class.blink::LayoutObject"** %18 to %"class.blink::LayoutTableSection"**
  %20 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %20, i64 0, i32 3, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 3
  %24 = bitcast %"class.blink::LayoutObject"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 2147483647
  %27 = sub i32 %22, %26
  br label %28

28:                                               ; preds = %15, %12
  %29 = phi i32 [ %27, %15 ], [ %13, %12 ]
  %30 = icmp ult i32 %29, 2147483646
  %31 = select i1 %30, i32 %29, i32 2147483646
  br label %32

32:                                               ; preds = %5, %28
  %33 = phi i32 [ %31, %28 ], [ 1, %5 ]
  %34 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %35 = bitcast %"class.blink::LayoutObject"** %34 to %"class.blink::LayoutTableRow"**
  %36 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %36, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 2147483647
  %40 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %32
  %45 = add nuw i32 %39, %33
  %46 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  br label %52

47:                                               ; preds = %67, %32
  %48 = phi i32 [ 0, %32 ], [ %68, %67 ]
  %49 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %2, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = add nsw i32 %50, %48
  store i32 %51, i32* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  ret void

52:                                               ; preds = %44, %67
  %53 = phi i32 [ 0, %44 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %44 ], [ %73, %67 ]
  %55 = add i32 %54, %39
  %56 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %40, i32 %54) #13
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %67

59:                                               ; preds = %52
  %60 = tail call zeroext i1 @_ZN5blink18LayoutTableSection23RowHasOnlySpanningCellsEj(%"class.blink::LayoutTableSection"* %0, i32 %55)
  br i1 %60, label %61, label %67

61:                                               ; preds = %59
  %62 = call i32 @_ZN5blink18LayoutTableSection36CalcRowHeightHavingOnlySpanningCellsEjRijRjRN3WTF6VectorIiLj0ENS3_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"* %0, i32 %55, i32* nonnull dereferenceable(4) %6, i32 %45, i32* dereferenceable(4) %3, %"class.WTF::Vector.2066"* dereferenceable(16) %4)
  %63 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %40, i32 %54) #13
  store i32 %62, i32* %63, align 4
  %64 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %40, i32 %54) #13
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %53, %65
  store i32 %66, i32* %6, align 4
  br label %67

67:                                               ; preds = %52, %61, %59
  %68 = phi i32 [ %53, %52 ], [ %66, %61 ], [ %53, %59 ]
  %69 = add i32 %55, 1
  %70 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %46, i32 %69) #13
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, %68
  store i32 %72, i32* %70, align 4
  %73 = add nuw i32 %54, 1
  %74 = load i32, i32* %41, align 4
  %75 = icmp ult i32 %73, %74
  br i1 %75, label %52, label %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection29DistributeRowSpanHeightToRowsERN3WTF6VectorIPNS_15LayoutTableCellELj2ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, %"class.WTF::Vector.2096"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::Vector.2066", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"struct.blink::LayoutTableSection::SpanningRowsHeight", align 8
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %10, i64 %13
  %15 = bitcast i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  store i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)* @_ZN5blinkL44CompareRowSpanCellsInHeightDistributionOrderEPKNS_15LayoutTableCellES2_, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEvT0_SA_T_(%"class.blink::LayoutTableCell"** %10, %"class.blink::LayoutTableCell"** %14, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #13
  store i32 0, i32* %4, align 4
  %17 = bitcast %"class.WTF::Vector.2066"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %5, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %5, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #13
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #13
  store i32 0, i32* %6, align 4
  %22 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %42

26:                                               ; preds = %60, %2
  %27 = load i32, i32* %11, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %265, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %31 = bitcast %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %7 to i8*
  %32 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %7, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %7, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %7, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.blink::LayoutTableSection::SpanningRowsHeight", %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %7, i64 0, i32 3
  %38 = bitcast i32* %8 to i8*
  %39 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %40 = bitcast %"class.blink::LayoutObject"** %39 to %"class.blink::LayoutTable"**
  %41 = bitcast %"struct.blink::LayoutTableSection::SpanningRowsHeight"* %7 to i8*
  br label %66

42:                                               ; preds = %2, %60
  %43 = phi i32 [ %61, %60 ], [ 0, %2 ]
  %44 = call zeroext i1 @_ZN5blink18LayoutTableSection23RowHasOnlySpanningCellsEj(%"class.blink::LayoutTableSection"* %0, i32 %43)
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = load i32, i32* %6, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %6, align 4
  br label %48

48:                                               ; preds = %45, %42
  %49 = load i32, i32* %20, align 4
  %50 = load i32, i32* %19, align 8
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %59, label %52, !prof !3

52:                                               ; preds = %48
  %53 = load i32*, i32** %18, align 8
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  %56 = load i32, i32* %6, align 4
  store i32 %56, i32* %55, align 4
  %57 = load i32, i32* %20, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %20, align 4
  br label %60

59:                                               ; preds = %48
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.2066"* nonnull %5, i32* nonnull dereferenceable(4) %6) #13
  br label %60

60:                                               ; preds = %52, %59
  %61 = add nuw i32 %43, 1
  %62 = load i32, i32* %23, align 4
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %42, label %26

64:                                               ; preds = %243
  %65 = icmp eq i32 %244, 0
  br i1 %65, label %265, label %250

66:                                               ; preds = %29, %243
  %67 = phi i32 [ 0, %29 ], [ %244, %243 ]
  %68 = phi i32 [ 0, %29 ], [ %247, %243 ]
  %69 = phi i32 [ 0, %29 ], [ %246, %243 ]
  %70 = phi i32 [ 0, %29 ], [ %245, %243 ]
  %71 = call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2096"* %1, i32 %68) #13
  %72 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %74 = bitcast %"class.blink::LayoutObject"** %73 to %"class.blink::LayoutTableRow"**
  %75 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %75, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 2147483647
  %79 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %72, i64 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 134217728
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %102, label %83

83:                                               ; preds = %66
  %84 = call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %72) #13
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %98

86:                                               ; preds = %83
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %88 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %87, i64 0, i32 7
  %89 = bitcast %"class.blink::LayoutObject"** %88 to %"class.blink::LayoutTableSection"**
  %90 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %90, i64 0, i32 3, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %87, i64 3
  %94 = bitcast %"class.blink::LayoutObject"* %93 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 2147483647
  %97 = sub i32 %92, %96
  br label %98

98:                                               ; preds = %86, %83
  %99 = phi i32 [ %97, %86 ], [ %84, %83 ]
  %100 = icmp ult i32 %99, 2147483646
  %101 = select i1 %100, i32 %99, i32 2147483646
  br label %102

102:                                              ; preds = %66, %98
  %103 = phi i32 [ %101, %98 ], [ 1, %66 ]
  %104 = add nuw i32 %103, %78
  %105 = add i32 %69, %70
  %106 = icmp eq i32 %78, %70
  %107 = icmp eq i32 %103, %69
  %108 = and i1 %106, %107
  br i1 %108, label %243, label %109

109:                                              ; preds = %102
  %110 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %30, i32 %104) #13
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %104, %105
  %113 = select i1 %112, i32 %67, i32 0
  %114 = sub i32 %111, %113
  %115 = icmp eq i32 %67, 0
  br i1 %115, label %129, label %116

116:                                              ; preds = %109
  %117 = add i32 %105, 1
  %118 = icmp ugt i32 %117, %104
  br i1 %118, label %129, label %119

119:                                              ; preds = %116
  %120 = add nuw i32 %103, 1
  %121 = add i32 %120, %78
  br label %122

122:                                              ; preds = %119, %122
  %123 = phi i32 [ %127, %122 ], [ %117, %119 ]
  %124 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %30, i32 %123) #13
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, %67
  store i32 %126, i32* %124, align 4
  %127 = add i32 %123, 1
  %128 = icmp eq i32 %127, %121
  br i1 %128, label %129, label %122

129:                                              ; preds = %122, %116, %109
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 25, i1 false) #13
  call void @_ZN5blink18LayoutTableSection34PopulateSpanningRowsHeightFromCellEPNS_15LayoutTableCellERNS0_18SpanningRowsHeightE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* %72, %"struct.blink::LayoutTableSection::SpanningRowsHeight"* nonnull dereferenceable(32) %7)
  %130 = load i8, i8* %37, align 8, !range !4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  call void @_ZN5blink18LayoutTableSection39UpdateRowsHeightHavingOnlySpanningCellsEPNS_15LayoutTableCellERNS0_18SpanningRowsHeightERjRN3WTF6VectorIiLj0ENS6_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* %72, %"struct.blink::LayoutTableSection::SpanningRowsHeight"* nonnull dereferenceable(32) %7, i32* nonnull dereferenceable(4) %4, %"class.WTF::Vector.2066"* nonnull dereferenceable(16) %5)
  br label %133

133:                                              ; preds = %129, %132
  %134 = load i32, i32* %35, align 8
  %135 = icmp eq i32 %134, 0
  %136 = load i32, i32* %36, align 4
  br i1 %135, label %137, label %160

137:                                              ; preds = %133
  %138 = icmp eq i32 %136, 0
  br i1 %138, label %156, label %139

139:                                              ; preds = %137
  %140 = add i32 %104, -1
  %141 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %22, i32 %140) #13
  %142 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %141, i64 0, i32 1
  %143 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %142, align 8
  %144 = icmp eq %"class.blink::LayoutTableRow"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %40, align 8
  %147 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %146, i64 0, i32 13
  %148 = load i16, i16* %147, align 2
  %149 = sext i16 %148 to i32
  br label %150

150:                                              ; preds = %139, %145
  %151 = phi i32 [ %149, %145 ], [ 0, %139 ]
  %152 = add nsw i32 %151, %136
  %153 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %30, i32 %104) #13
  %154 = load i32, i32* %153, align 4
  %155 = add nsw i32 %152, %154
  store i32 %155, i32* %153, align 4
  br label %156

156:                                              ; preds = %137, %150
  %157 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %30, i32 %104) #13
  %158 = load i32, i32* %157, align 4
  %159 = sub nsw i32 %158, %114
  store i32 %159, i32* %4, align 4
  br label %232

160:                                              ; preds = %133
  %161 = icmp sgt i32 %136, %134
  br i1 %161, label %162, label %164

162:                                              ; preds = %160
  %163 = icmp eq i32 %103, 0
  br i1 %163, label %171, label %182

164:                                              ; preds = %160
  %165 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %30, i32 %104) #13
  %166 = load i32, i32* %165, align 4
  %167 = sub nsw i32 %166, %114
  store i32 %167, i32* %4, align 4
  br label %232

168:                                              ; preds = %220
  %169 = load i32, i32* %36, align 4
  %170 = load i32, i32* %35, align 8
  br label %171

171:                                              ; preds = %168, %162
  %172 = phi i32 [ %134, %162 ], [ %170, %168 ]
  %173 = phi i32 [ %136, %162 ], [ %169, %168 ]
  %174 = phi float [ 0.000000e+00, %162 ], [ %221, %168 ]
  %175 = phi i32 [ 0, %162 ], [ %222, %168 ]
  %176 = phi i32 [ %134, %162 ], [ %223, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #13
  %177 = sub nsw i32 %173, %172
  store i32 %177, i32* %8, align 4
  %178 = fcmp uge float %174, 1.000000e+02
  %179 = or i32 %176, %175
  %180 = icmp ne i32 %179, 0
  %181 = or i1 %178, %180
  br i1 %181, label %227, label %226

182:                                              ; preds = %162, %220
  %183 = phi i32 [ %224, %220 ], [ %78, %162 ]
  %184 = phi i32 [ %223, %220 ], [ %134, %162 ]
  %185 = phi i32 [ %222, %220 ], [ 0, %162 ]
  %186 = phi float [ %221, %220 ], [ 0.000000e+00, %162 ]
  %187 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %22, i32 %183) #13
  %188 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %187, i64 0, i32 3, i32 2
  %189 = load i8, i8* %188, align 1
  %190 = icmp eq i8 %189, 1
  %191 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %22, i32 %183) #13
  %192 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %191, i64 0, i32 3
  br i1 %190, label %193, label %211

193:                                              ; preds = %182
  %194 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %191, i64 0, i32 3, i32 3
  %195 = load i8, i8* %194, align 2, !range !4
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = bitcast %"class.blink::Length"* %192 to float*
  %199 = load float, float* %198, align 4
  br label %204

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %192, i64 0, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = sitofp i32 %202 to float
  br label %204

204:                                              ; preds = %197, %200
  %205 = phi float [ %199, %197 ], [ %203, %200 ]
  %206 = fadd float %186, %205
  %207 = sub nuw i32 %183, %78
  %208 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* nonnull %32, i32 %207) #13
  %209 = load i32, i32* %208, align 4
  %210 = sub nsw i32 %184, %209
  br label %220

211:                                              ; preds = %182
  %212 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %191, i64 0, i32 3, i32 2
  %213 = load i8, i8* %212, align 1
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %220

215:                                              ; preds = %211
  %216 = sub nuw i32 %183, %78
  %217 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* nonnull %32, i32 %216) #13
  %218 = load i32, i32* %217, align 4
  %219 = add nsw i32 %218, %185
  br label %220

220:                                              ; preds = %204, %215, %211
  %221 = phi float [ %206, %204 ], [ %186, %215 ], [ %186, %211 ]
  %222 = phi i32 [ %185, %204 ], [ %219, %215 ], [ %185, %211 ]
  %223 = phi i32 [ %210, %204 ], [ %184, %215 ], [ %184, %211 ]
  %224 = add nuw i32 %183, 1
  %225 = icmp ult i32 %224, %104
  br i1 %225, label %182, label %168

226:                                              ; preds = %171
  call void @_ZN5blink18LayoutTableSection46DistributeWholeExtraRowSpanHeightToPercentRowsEPNS_15LayoutTableCellEfRiRN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* %72, float %174, i32* nonnull dereferenceable(4) %8, %"class.WTF::Vector.2066"* dereferenceable(16) undef)
  br label %228

227:                                              ; preds = %171
  call void @_ZN5blink18LayoutTableSection41DistributeExtraRowSpanHeightToPercentRowsEPNS_15LayoutTableCellEfRiRN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* %72, float %174, i32* nonnull dereferenceable(4) %8, %"class.WTF::Vector.2066"* nonnull dereferenceable(16) %32)
  call void @_ZN5blink18LayoutTableSection38DistributeExtraRowSpanHeightToAutoRowsEPNS_15LayoutTableCellEiRiRN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* %72, i32 %175, i32* nonnull dereferenceable(4) %8, %"class.WTF::Vector.2066"* nonnull dereferenceable(16) %32)
  call void @_ZN5blink18LayoutTableSection43DistributeExtraRowSpanHeightToRemainingRowsEPNS_15LayoutTableCellEiRiRN3WTF6VectorIiLj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* %72, i32 %176, i32* nonnull dereferenceable(4) %8, %"class.WTF::Vector.2066"* nonnull dereferenceable(16) %32)
  br label %228

228:                                              ; preds = %227, %226
  %229 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %30, i32 %104) #13
  %230 = load i32, i32* %229, align 4
  %231 = sub nsw i32 %230, %114
  store i32 %231, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #13
  br label %232

232:                                              ; preds = %228, %164, %156
  %233 = phi i32 [ %231, %228 ], [ %167, %164 ], [ %159, %156 ]
  %234 = load i32*, i32** %33, align 8
  %235 = icmp eq i32* %234, null
  %236 = bitcast i32* %234 to i8*
  br i1 %235, label %242, label %237, !prof !2

237:                                              ; preds = %232
  %238 = load i32, i32* %34, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %241, label %240, !prof !3

240:                                              ; preds = %237
  store i32 0, i32* %34, align 4
  br label %241

241:                                              ; preds = %240, %237
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %236) #13
  store i32* null, i32** %33, align 8
  br label %242

242:                                              ; preds = %232, %241
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #13
  br label %243

243:                                              ; preds = %102, %242
  %244 = phi i32 [ %233, %242 ], [ %67, %102 ]
  %245 = phi i32 [ %78, %242 ], [ %70, %102 ]
  %246 = phi i32 [ %103, %242 ], [ %69, %102 ]
  %247 = add nuw i32 %68, 1
  %248 = load i32, i32* %11, align 4
  %249 = icmp ult i32 %247, %248
  br i1 %249, label %66, label %64

250:                                              ; preds = %64
  %251 = add i32 %246, %245
  %252 = add i32 %251, 1
  %253 = load i32, i32* %23, align 4
  %254 = icmp ugt i32 %252, %253
  br i1 %254, label %265, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  br label %257

257:                                              ; preds = %255, %257
  %258 = phi i32 [ %252, %255 ], [ %262, %257 ]
  %259 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %256, i32 %258) #13
  %260 = load i32, i32* %259, align 4
  %261 = add i32 %260, %244
  store i32 %261, i32* %259, align 4
  %262 = add i32 %258, 1
  %263 = load i32, i32* %23, align 4
  %264 = icmp ugt i32 %262, %263
  br i1 %264, label %265, label %257

265:                                              ; preds = %257, %26, %250, %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #13
  %266 = load i32*, i32** %18, align 8
  %267 = icmp eq i32* %266, null
  %268 = bitcast i32* %266 to i8*
  br i1 %267, label %274, label %269, !prof !2

269:                                              ; preds = %265
  %270 = load i32, i32* %20, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %273, label %272, !prof !3

272:                                              ; preds = %269
  store i32 0, i32* %20, align 4
  br label %273

273:                                              ; preds = %272, %269
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #13
  store i32* null, i32** %18, align 8
  br label %274

274:                                              ; preds = %265, %273
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL44CompareRowSpanCellsInHeightDistributionOrderEPKNS_15LayoutTableCellES2_(%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*) #0 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutTableRow"**
  %5 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %9 = bitcast %"class.blink::LayoutObject"** %8 to %"class.blink::LayoutTableRow"**
  %10 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %10, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = xor i32 %12, %7
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %99

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 134217728
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %16
  %22 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %0) #13
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %21
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 7
  %27 = bitcast %"class.blink::LayoutObject"** %26 to %"class.blink::LayoutTableSection"**
  %28 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %28, i64 0, i32 3, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 3
  %32 = bitcast %"class.blink::LayoutObject"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 2147483647
  %35 = sub i32 %30, %34
  br label %36

36:                                               ; preds = %24, %21
  %37 = phi i32 [ %35, %24 ], [ %22, %21 ]
  %38 = icmp ult i32 %37, 2147483646
  %39 = select i1 %38, i32 %37, i32 2147483646
  br label %40

40:                                               ; preds = %16, %36
  %41 = phi i32 [ %39, %36 ], [ 1, %16 ]
  %42 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 134217728
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %65, label %46

46:                                               ; preds = %40
  %47 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %46
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 7
  %52 = bitcast %"class.blink::LayoutObject"** %51 to %"class.blink::LayoutTableSection"**
  %53 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %53, i64 0, i32 3, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 3
  %57 = bitcast %"class.blink::LayoutObject"* %56 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 2147483647
  %60 = sub i32 %55, %59
  br label %61

61:                                               ; preds = %49, %46
  %62 = phi i32 [ %60, %49 ], [ %47, %46 ]
  %63 = icmp ult i32 %62, 2147483646
  %64 = select i1 %63, i32 %62, i32 2147483646
  br label %65

65:                                               ; preds = %40, %61
  %66 = phi i32 [ %64, %61 ], [ 1, %40 ]
  %67 = icmp eq i32 %41, %66
  br i1 %67, label %75, label %68

68:                                               ; preds = %65
  %69 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %70 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %9, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %72, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  br label %99

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %76) #13
  %78 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 4
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 5
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 %77, %79
  %83 = sub i32 %82, %81
  %84 = tail call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* %0) #13
  %85 = icmp slt i32 %84, %83
  %86 = select i1 %85, i32 %83, i32 %84
  %87 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0
  %88 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %87) #13
  %89 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 5
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %88, %90
  %94 = sub i32 %93, %92
  %95 = tail call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* %1) #13
  %96 = icmp slt i32 %95, %94
  %97 = select i1 %96, i32 %94, i32 %95
  %98 = icmp sgt i32 %86, %97
  br label %249

99:                                               ; preds = %68, %2
  %100 = phi i32 [ %74, %68 ], [ %12, %2 ]
  %101 = phi i32 [ %71, %68 ], [ %7, %2 ]
  %102 = and i32 %101, 2147483647
  %103 = and i32 %100, 2147483647
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %173, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 134217728
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %133, label %110

110:                                              ; preds = %105
  %111 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %0) #13
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %110
  %114 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %115 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 0, i32 7
  %116 = bitcast %"class.blink::LayoutObject"** %115 to %"class.blink::LayoutTableSection"**
  %117 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %117, i64 0, i32 3, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 3
  %121 = bitcast %"class.blink::LayoutObject"* %120 to i32*
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, 2147483647
  %124 = sub i32 %119, %123
  br label %125

125:                                              ; preds = %113, %110
  %126 = phi i32 [ %124, %113 ], [ %111, %110 ]
  %127 = icmp ult i32 %126, 2147483646
  %128 = select i1 %127, i32 %126, i32 2147483646
  %129 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %9, align 8
  %130 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %129, i64 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = and i32 %131, 2147483647
  br label %133

133:                                              ; preds = %125, %105
  %134 = phi i32 [ %103, %105 ], [ %132, %125 ]
  %135 = phi i32 [ 1, %105 ], [ %128, %125 ]
  %136 = add nuw i32 %135, %102
  %137 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 134217728
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %160, label %141

141:                                              ; preds = %133
  %142 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %141
  %145 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %146 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %145, i64 0, i32 7
  %147 = bitcast %"class.blink::LayoutObject"** %146 to %"class.blink::LayoutTableSection"**
  %148 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %148, i64 0, i32 3, i32 0, i32 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %145, i64 3
  %152 = bitcast %"class.blink::LayoutObject"* %151 to i32*
  %153 = load i32, i32* %152, align 8
  %154 = and i32 %153, 2147483647
  %155 = sub i32 %150, %154
  br label %156

156:                                              ; preds = %144, %141
  %157 = phi i32 [ %155, %144 ], [ %142, %141 ]
  %158 = icmp ult i32 %157, 2147483646
  %159 = select i1 %158, i32 %157, i32 2147483646
  br label %160

160:                                              ; preds = %156, %133
  %161 = phi i32 [ %159, %156 ], [ 1, %133 ]
  %162 = add nuw i32 %161, %134
  %163 = icmp ugt i32 %136, %162
  br i1 %163, label %164, label %249

164:                                              ; preds = %160
  %165 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %9, align 8
  %166 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %165, i64 0, i32 3
  %167 = load i32, i32* %166, align 8
  %168 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %169 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %168, i64 0, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %167, 2147483647
  %172 = and i32 %170, 2147483647
  br label %173

173:                                              ; preds = %164, %99
  %174 = phi i32 [ %172, %164 ], [ %102, %99 ]
  %175 = phi i32 [ %171, %164 ], [ %103, %99 ]
  %176 = icmp ult i32 %175, %174
  br i1 %176, label %245, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %179 = load i32, i32* %178, align 8
  %180 = and i32 %179, 134217728
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %205, label %182

182:                                              ; preds = %177
  %183 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %197

185:                                              ; preds = %182
  %186 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %187 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %186, i64 0, i32 7
  %188 = bitcast %"class.blink::LayoutObject"** %187 to %"class.blink::LayoutTableSection"**
  %189 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %189, i64 0, i32 3, i32 0, i32 0, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %186, i64 3
  %193 = bitcast %"class.blink::LayoutObject"* %192 to i32*
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 2147483647
  %196 = sub i32 %191, %195
  br label %197

197:                                              ; preds = %185, %182
  %198 = phi i32 [ %196, %185 ], [ %183, %182 ]
  %199 = icmp ult i32 %198, 2147483646
  %200 = select i1 %199, i32 %198, i32 2147483646
  %201 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %202 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %201, i64 0, i32 3
  %203 = load i32, i32* %202, align 8
  %204 = and i32 %203, 2147483647
  br label %205

205:                                              ; preds = %197, %177
  %206 = phi i32 [ %174, %177 ], [ %204, %197 ]
  %207 = phi i32 [ 1, %177 ], [ %200, %197 ]
  %208 = add nuw i32 %207, %175
  %209 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 2
  %210 = load i32, i32* %209, align 8
  %211 = and i32 %210, 134217728
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %232, label %213

213:                                              ; preds = %205
  %214 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %0) #13
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %228

216:                                              ; preds = %213
  %217 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %218 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %217, i64 0, i32 7
  %219 = bitcast %"class.blink::LayoutObject"** %218 to %"class.blink::LayoutTableSection"**
  %220 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %220, i64 0, i32 3, i32 0, i32 0, i32 2
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %217, i64 3
  %224 = bitcast %"class.blink::LayoutObject"* %223 to i32*
  %225 = load i32, i32* %224, align 8
  %226 = and i32 %225, 2147483647
  %227 = sub i32 %222, %226
  br label %228

228:                                              ; preds = %216, %213
  %229 = phi i32 [ %227, %216 ], [ %214, %213 ]
  %230 = icmp ult i32 %229, 2147483646
  %231 = select i1 %230, i32 %229, i32 2147483646
  br label %232

232:                                              ; preds = %228, %205
  %233 = phi i32 [ %231, %228 ], [ 1, %205 ]
  %234 = add nuw i32 %233, %206
  %235 = icmp ugt i32 %208, %234
  br i1 %235, label %236, label %249

236:                                              ; preds = %232
  %237 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %238 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %237, i64 0, i32 3
  %239 = load i32, i32* %238, align 8
  %240 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %9, align 8
  %241 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %240, i64 0, i32 3
  %242 = load i32, i32* %241, align 8
  %243 = and i32 %239, 2147483647
  %244 = and i32 %242, 2147483647
  br label %245

245:                                              ; preds = %236, %173
  %246 = phi i32 [ %244, %236 ], [ %175, %173 ]
  %247 = phi i32 [ %243, %236 ], [ %174, %173 ]
  %248 = icmp ult i32 %247, %246
  br label %249

249:                                              ; preds = %232, %160, %245, %75
  %250 = phi i1 [ %98, %75 ], [ %248, %245 ], [ true, %160 ], [ false, %232 ]
  ret i1 %250
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18LayoutTableSection24RowHasVisibilityCollapseEj(%"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %4 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %4, i64 0, i32 1
  %6 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutTableRow"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %3, i32 %1) #13
  %10 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %9, i64 0, i32 1
  %11 = bitcast %"class.blink::LayoutTableRow"** %10 to %"class.blink::LayoutObject"**
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 3802951800684688204490109616128
  %20 = icmp eq i160 %19, 2535301200456458802993406410752
  br i1 %20, label %30, label %21

21:                                               ; preds = %2, %8
  %22 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %23 = bitcast %"class.blink::ComputedStyle"** %22 to %"class.blink::ComputedStyleBase"**
  %24 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %24, i64 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 3802951800684688204490109616128
  %29 = icmp eq i160 %28, 2535301200456458802993406410752
  br label %30

30:                                               ; preds = %21, %8
  %31 = phi i1 [ true, %8 ], [ %29, %21 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection21UpdateBaselineForCellEPNS_15LayoutTableCellEjRNS_10LayoutUnitE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = lshr i160 %11, 64
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 15
  switch i32 %14, label %227 [
    i32 5, label %15
    i32 4, label %15
    i32 3, label %15
    i32 2, label %15
    i32 0, label %15
    i32 9, label %15
  ]

15:                                               ; preds = %4, %4, %4, %4, %4, %4
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store i32 -1431655766, i32* %5, align 4
  %17 = tail call i32 @_ZNK5blink15LayoutTableCell20CellBaselinePositionEv(%"class.blink::LayoutTableCell"* %1) #13
  %18 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 33554431
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = icmp slt i32 %19, -33554432
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = shl i32 %19, 6
  %25 = icmp sgt i32 %24, -1
  br i1 %25, label %26, label %28

26:                                               ; preds = %15, %23
  %27 = phi i32 [ %24, %23 ], [ 2147483647, %15 ]
  br label %28

28:                                               ; preds = %21, %23, %26
  %29 = phi i32 [ %27, %26 ], [ %24, %23 ], [ -2147483648, %21 ]
  %30 = phi i32 [ -2147483648, %26 ], [ 2147483647, %23 ], [ 2147483647, %21 ]
  %31 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %17, i32 %29) #13
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33, !prof !3
  store i32 %34, i32* %5, align 4
  %35 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8, !noalias !5
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8, !noalias !5
  %40 = lshr i160 %39, 102
  %41 = trunc i160 %40 to i8
  %42 = and i8 %41, 3
  %43 = bitcast %"class.blink::LayoutTableCell"* %1 to i8*
  switch i8 %42, label %44 [
    i8 0, label %53
    i8 1, label %45
  ]

44:                                               ; preds = %28
  br label %45

45:                                               ; preds = %44, %28
  %46 = phi { i64, i64 } [ { i64 993, i64 0 }, %44 ], [ { i64 1001, i64 0 }, %28 ]
  %47 = extractvalue { i64, i64 } %46, 0
  %48 = extractvalue { i64, i64 } %46, 1
  %49 = getelementptr inbounds i8, i8* %43, i64 %48
  %50 = bitcast i8* %49 to %"class.blink::LayoutBoxModelObject"*
  %51 = and i64 %47, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %45, %28
  %54 = phi %"class.blink::LayoutBoxModelObject"* [ %50, %45 ], [ %35, %28 ]
  %55 = phi i8* [ %49, %45 ], [ %43, %28 ]
  %56 = phi i64 [ %47, %45 ], [ 977, %28 ]
  %57 = bitcast i8* %55 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = add i64 %56, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = bitcast i8* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %62 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %61, align 8
  br label %65

63:                                               ; preds = %45
  %64 = inttoptr i64 %47 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %65

65:                                               ; preds = %53, %63
  %66 = phi %"class.blink::LayoutBoxModelObject"* [ %54, %53 ], [ %50, %63 ]
  %67 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %62, %53 ], [ %64, %63 ]
  %68 = tail call i32 %67(%"class.blink::LayoutBoxModelObject"* %66) #13
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8, !noalias !8
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %71 = bitcast [20 x i8]* %70 to i160*
  %72 = load i160, i160* %71, align 8, !noalias !8
  %73 = lshr i160 %72, 102
  %74 = trunc i160 %73 to i8
  %75 = and i8 %74, 3
  switch i8 %75, label %76 [
    i8 0, label %85
    i8 1, label %77
  ]

76:                                               ; preds = %65
  br label %77

77:                                               ; preds = %76, %65
  %78 = phi { i64, i64 } [ { i64 961, i64 0 }, %76 ], [ { i64 969, i64 0 }, %65 ]
  %79 = extractvalue { i64, i64 } %78, 0
  %80 = extractvalue { i64, i64 } %78, 1
  %81 = getelementptr inbounds i8, i8* %43, i64 %80
  %82 = bitcast i8* %81 to %"class.blink::LayoutBoxModelObject"*
  %83 = and i64 %79, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %77, %65
  %86 = phi %"class.blink::LayoutBoxModelObject"* [ %82, %77 ], [ %35, %65 ]
  %87 = phi i8* [ %81, %77 ], [ %43, %65 ]
  %88 = phi i64 [ %79, %77 ], [ 945, %65 ]
  %89 = bitcast i8* %87 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %88, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %77
  %96 = inttoptr i64 %79 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %85, %95
  %98 = phi %"class.blink::LayoutBoxModelObject"* [ %86, %85 ], [ %82, %95 ]
  %99 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %85 ], [ %96, %95 ]
  %100 = tail call i32 %99(%"class.blink::LayoutBoxModelObject"* %98) #13
  %101 = load i32, i32* %18, align 8
  %102 = icmp sgt i32 %101, 33554431
  br i1 %102, label %108, label %103

103:                                              ; preds = %97
  %104 = icmp slt i32 %101, -33554432
  br i1 %104, label %110, label %105

105:                                              ; preds = %103
  %106 = shl i32 %101, 6
  %107 = icmp sgt i32 %106, -1
  br i1 %107, label %108, label %110

108:                                              ; preds = %97, %105
  %109 = phi i32 [ %106, %105 ], [ 2147483647, %97 ]
  br label %110

110:                                              ; preds = %103, %105, %108
  %111 = phi i32 [ %109, %108 ], [ %106, %105 ], [ -2147483648, %103 ]
  %112 = phi i32 [ -2147483648, %108 ], [ 2147483647, %105 ], [ 2147483647, %103 ]
  %113 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %111) #13
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !3
  %117 = icmp slt i32 %116, 0
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %116) #13
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121, !prof !3
  %123 = icmp sgt i32 %34, %122
  br i1 %123, label %124, label %226

124:                                              ; preds = %110
  %125 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %126 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %125, i32 %2) #13
  %127 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %126, i64 0, i32 2
  %128 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %127, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %129, %34
  %131 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %132 = select i1 %130, %"class.blink::LayoutUnit"* %131, %"class.blink::LayoutUnit"* %127
  %133 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %125, i32 %2) #13
  %134 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %132, i64 0, i32 0
  %135 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %133, i64 0, i32 2, i32 0
  %136 = load i32, i32* %134, align 4
  store i32 %136, i32* %135, align 8
  %137 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 134217728
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %160, label %141

141:                                              ; preds = %124
  %142 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %157

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %146 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %146, i64 0, i32 7
  %148 = bitcast %"class.blink::LayoutObject"** %147 to %"class.blink::LayoutTableSection"**
  %149 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %149, i64 0, i32 3, i32 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %146, i64 3
  %153 = bitcast %"class.blink::LayoutObject"* %152 to i32*
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 2147483647
  %156 = sub i32 %151, %155
  br label %157

157:                                              ; preds = %144, %141
  %158 = phi i32 [ %156, %144 ], [ %142, %141 ]
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %192

160:                                              ; preds = %157, %124
  %161 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161)
  %162 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0
  %163 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %162) #13
  %164 = load i32, i32* %18, align 8
  %165 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 5
  %166 = load i32, i32* %165, align 4
  %167 = sub i32 %163, %164
  %168 = sub i32 %167, %166
  %169 = tail call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* %1) #13
  %170 = icmp slt i32 %169, %168
  %171 = select i1 %170, i32 %168, i32 %169
  %172 = icmp sgt i32 %171, 33554431
  br i1 %172, label %177, label %173

173:                                              ; preds = %160
  %174 = icmp slt i32 %171, -33554432
  %175 = shl i32 %171, 6
  %176 = select i1 %174, i32 -2147483648, i32 %175
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 2147483647, %160 ], [ %176, %173 ]
  %179 = icmp sgt i32 %34, -1
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %178, i32 %34) #13
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !3
  store i32 %184, i32* %6, align 4
  %185 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp slt i32 %186, %184
  %188 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %189 = select i1 %187, %"class.blink::LayoutUnit"* %188, %"class.blink::LayoutUnit"* %3
  %190 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %189, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %185, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161)
  br label %192

192:                                              ; preds = %157, %177
  %193 = phi i32 [ %191, %177 ], [ 0, %157 ]
  %194 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %195 = add i32 %2, 1
  %196 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %194, i32 %195) #13
  %197 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %194, i32 %2) #13
  %198 = load i32, i32* %197, align 4
  %199 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %125, i32 %2) #13
  %200 = icmp sgt i32 %198, 33554431
  br i1 %200, label %205, label %201

201:                                              ; preds = %192
  %202 = icmp slt i32 %198, -33554432
  %203 = shl i32 %198, 6
  %204 = select i1 %202, i32 -2147483648, i32 %203
  br label %205

205:                                              ; preds = %192, %201
  %206 = phi i32 [ 2147483647, %192 ], [ %204, %201 ]
  %207 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %199, i64 0, i32 2, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp slt i32 %208, 0
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %206, i32 %208) #13
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !3
  %215 = icmp slt i32 %193, 0
  %216 = select i1 %215, i32 -2147483648, i32 2147483647
  %217 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %214, i32 %193) #13
  %218 = extractvalue { i32, i1 } %217, 1
  %219 = extractvalue { i32, i1 } %217, 0
  %220 = select i1 %218, i32 %216, i32 %219, !prof !3
  %221 = sdiv i32 %220, 64
  %222 = load i32, i32* %196, align 4
  %223 = icmp slt i32 %222, %221
  %224 = select i1 %223, i32 %221, i32 %222
  %225 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %194, i32 %195) #13
  store i32 %224, i32* %225, align 4
  br label %226

226:                                              ; preds = %205, %110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  br label %227

227:                                              ; preds = %4, %226
  ret void
}

declare i32 @_ZNK5blink15LayoutTableCell20CellBaselinePositionEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i16 @_ZNK5blink18LayoutTableSection28VBorderSpacingBeforeFirstRowEv(%"class.blink::LayoutTableSection"* readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTable"**
  %4 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %4, i64 0, i32 6
  %6 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutTableSection"* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %4, i64 0, i32 8
  %10 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutTableSection"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %4, i64 0, i32 7
  %14 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %13, align 8
  br label %15

15:                                               ; preds = %1, %8, %12
  %16 = phi %"class.blink::LayoutTableSection"* [ %14, %12 ], [ %6, %1 ], [ %10, %8 ]
  %17 = icmp eq %"class.blink::LayoutTableSection"* %16, %0
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %4, i64 0, i32 13
  %20 = load i16, i16* %19, align 2
  br label %21

21:                                               ; preds = %15, %18
  %22 = phi i16 [ %20, %18 ], [ 0, %15 ]
  ret i16 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18LayoutTableSection20CalcRowLogicalHeightEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutState", align 8
  %3 = alloca %"class.WTF::Vector.2096", align 8
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::LayoutTableCell"*, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %2, %"class.blink::LayoutBox"* dereferenceable(216) %7, i1 zeroext false) #13
  %8 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, 1
  %13 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %14, %12
  br i1 %15, label %16, label %71

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %18, %12
  br i1 %19, label %20, label %59

20:                                               ; preds = %16
  %21 = lshr i32 %18, 2
  %22 = add nuw i32 %18, 1
  %23 = add i32 %22, %21
  %24 = icmp ugt i32 %23, 4
  %25 = select i1 %24, i32 %23, i32 4
  %26 = icmp ugt i32 %25, %12
  %27 = select i1 %26, i32 %25, i32 %12
  %28 = icmp ult i32 %18, %27
  br i1 %28, label %29, label %59, !prof !2

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %8, i64 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %31, null
  %33 = zext i32 %27 to i64
  %34 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %33) #13
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  br i1 %32, label %36, label %41

36:                                               ; preds = %29
  %37 = ptrtoint i8* %35 to i64
  %38 = bitcast %"class.WTF::Vector.2066"* %8 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = lshr i64 %34, 2
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %17, align 8
  br label %59

41:                                               ; preds = %29
  %42 = lshr i64 %34, 2
  %43 = ptrtoint i8* %35 to i64
  %44 = load i32*, i32** %30, align 8
  %45 = icmp ne i8* %35, null
  %46 = icmp ne i32* %44, null
  %47 = and i1 %45, %46
  %48 = bitcast i32* %44 to i8*
  br i1 %47, label %49, label %55, !prof !2

49:                                               ; preds = %41
  %50 = load i32, i32* %13, align 4
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* nonnull align 4 %48, i64 %52, i1 false) #13
  %53 = bitcast %"class.WTF::Vector.2066"* %8 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %49, %41
  %56 = phi i8* [ %54, %49 ], [ %48, %41 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #13
  %57 = bitcast %"class.WTF::Vector.2066"* %8 to i64*
  store atomic i64 %43, i64* %57 monotonic, align 8
  %58 = trunc i64 %42 to i32
  store i32 %58, i32* %17, align 8
  br label %59

59:                                               ; preds = %55, %36, %20, %16
  %60 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %8, i64 0, i32 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i32, i32* %13, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  %65 = zext i32 %12 to i64
  %66 = getelementptr inbounds i32, i32* %61, i64 %65
  %67 = bitcast i32* %64 to i8*
  %68 = ptrtoint i32* %66 to i64
  %69 = ptrtoint i32* %64 to i64
  %70 = sub i64 %68, %69
  call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 %70, i1 false) #13
  br label %71

71:                                               ; preds = %1, %59
  store i32 %12, i32* %13, align 4
  %72 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %73 = bitcast %"class.blink::LayoutObject"** %72 to %"class.blink::LayoutTable"**
  %74 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %74, i64 0, i32 6
  %76 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %75, align 8
  %77 = icmp eq %"class.blink::LayoutTableSection"* %76, null
  br i1 %77, label %78, label %85

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %74, i64 0, i32 8
  %80 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %79, align 8
  %81 = icmp eq %"class.blink::LayoutTableSection"* %80, null
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %74, i64 0, i32 7
  %84 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %83, align 8
  br label %85

85:                                               ; preds = %82, %78, %71
  %86 = phi %"class.blink::LayoutTableSection"* [ %84, %82 ], [ %76, %71 ], [ %80, %78 ]
  %87 = icmp eq %"class.blink::LayoutTableSection"* %86, %0
  br i1 %87, label %88, label %92

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %74, i64 0, i32 13
  %90 = load i16, i16* %89, align 2
  %91 = sext i16 %90 to i32
  br label %92

92:                                               ; preds = %85, %88
  %93 = phi i32 [ %91, %88 ], [ 0, %85 ]
  %94 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 0) #13
  store i32 %93, i32* %94, align 4
  %95 = bitcast %"class.WTF::Vector.2096"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #13
  %96 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %3, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %3, i64 0, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %3, i64 0, i32 0, i32 0, i32 2
  %99 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %3, i64 0, i32 0, i32 1, i64 0
  %100 = bitcast %"class.WTF::Vector.2096"* %3 to i8**
  %101 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false)
  store i8* %99, i8** %100, align 8
  store i32 2, i32* %97, align 8
  store i32 0, i32* %98, align 4
  %102 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 6
  store i8 0, i8* %102, align 8
  %103 = load i32, i32* %10, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %566, label %105

105:                                              ; preds = %92
  %106 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  %107 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %108 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %109 = bitcast %"class.blink::ComputedStyle"** %108 to %"class.blink::ComputedStyleBase"**
  %110 = bitcast %"class.blink::LayoutTableCell"** %5 to i8*
  %111 = bitcast %"class.blink::LayoutTableCell"** %5 to i64*
  %112 = bitcast %"class.blink::LayoutTableCell"** %5 to %"class.blink::LayoutBox"**
  %113 = bitcast %"class.blink::LayoutTableCell"** %5 to %"class.blink::LayoutObject"**
  br label %117

114:                                              ; preds = %547
  %115 = load i32, i32* %98, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %563, label %562

117:                                              ; preds = %105, %547
  %118 = phi i32 [ 0, %105 ], [ %549, %547 ]
  %119 = phi i32 [ 0, %105 ], [ %249, %547 ]
  %120 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %121 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %120, i64 0, i32 2, i32 0
  store i32 -64, i32* %121, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #13
  store i32 0, i32* %107, align 4
  %122 = load i8, i8* %102, align 8, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %152

124:                                              ; preds = %117
  %125 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %126 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %125, i64 0, i32 1
  %127 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %126, align 8
  %128 = icmp eq %"class.blink::LayoutTableRow"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %124
  %130 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %131 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %130, i64 0, i32 1
  %132 = bitcast %"class.blink::LayoutTableRow"** %131 to %"class.blink::LayoutObject"**
  %133 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %133, i64 0, i32 5, i32 0
  %135 = bitcast %"class.blink::ComputedStyle"** %134 to %"class.blink::ComputedStyleBase"**
  %136 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %136, i64 0, i32 9
  %138 = bitcast [20 x i8]* %137 to i160*
  %139 = load i160, i160* %138, align 8
  %140 = and i160 %139, 3802951800684688204490109616128
  %141 = icmp eq i160 %140, 2535301200456458802993406410752
  br i1 %141, label %149, label %142

142:                                              ; preds = %129, %124
  %143 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %109, align 8
  %144 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %143, i64 0, i32 9
  %145 = bitcast [20 x i8]* %144 to i160*
  %146 = load i160, i160* %145, align 8
  %147 = and i160 %146, 3802951800684688204490109616128
  %148 = icmp eq i160 %147, 2535301200456458802993406410752
  br label %149

149:                                              ; preds = %129, %142
  %150 = phi i1 [ true, %129 ], [ %148, %142 ]
  %151 = zext i1 %150 to i8
  store i8 %151, i8* %102, align 8
  br label %152

152:                                              ; preds = %117, %149
  %153 = load i8, i8* %6, align 8
  %154 = and i8 %153, 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %186, label %156

156:                                              ; preds = %152
  %157 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %158 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %157, i64 0, i32 1
  %159 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %158, align 8
  %160 = icmp eq %"class.blink::LayoutTableRow"* %159, null
  br i1 %160, label %186, label %161

161:                                              ; preds = %156
  %162 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %163 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %162, i64 0, i32 1
  %164 = bitcast %"class.blink::LayoutTableRow"** %163 to %"class.blink::LayoutBox"**
  %165 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %165, i64 0, i32 12, i32 0, i32 0
  %167 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %166, align 8
  %168 = icmp eq %"struct.blink::LayoutBoxRareData"* %167, null
  br i1 %168, label %175, label %169

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %167, i64 0, i32 8, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp sgt i32 %171, 2147483583
  br i1 %172, label %181, label %173, !prof !3

173:                                              ; preds = %169
  %174 = icmp sgt i32 %171, -1
  br i1 %174, label %175, label %179

175:                                              ; preds = %161, %173
  %176 = phi i32 [ %171, %173 ], [ 0, %161 ]
  %177 = add nuw nsw i32 %176, 63
  %178 = sdiv i32 %177, 64
  br label %181

179:                                              ; preds = %173
  %180 = sdiv i32 %171, 64
  br label %181

181:                                              ; preds = %169, %175, %179
  %182 = phi i32 [ %178, %175 ], [ %180, %179 ], [ 33554431, %169 ]
  %183 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %118) #13
  %184 = load i32, i32* %183, align 4
  %185 = add nsw i32 %184, %182
  store i32 %185, i32* %183, align 4
  br label %186

186:                                              ; preds = %152, %156, %181
  %187 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %188 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %187, i64 0, i32 3, i32 2
  %189 = load i8, i8* %188, align 1
  switch i8 %189, label %229 [
    i8 2, label %190
    i8 1, label %190
    i8 8, label %190
  ]

190:                                              ; preds = %186, %186, %186
  %191 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %118) #13
  %192 = load i32, i32* %191, align 4
  %193 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %194 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %193, i64 0, i32 3
  %195 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %193, i64 0, i32 3, i32 2
  %196 = load i8, i8* %195, align 1
  %197 = icmp eq i8 %196, 2
  br i1 %197, label %198, label %219, !prof !2

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %193, i64 0, i32 3, i32 3
  %200 = load i8, i8* %199, align 2, !range !4
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %205, label %202

202:                                              ; preds = %198
  %203 = bitcast %"class.blink::Length"* %194 to float*
  %204 = load float, float* %203, align 4
  br label %209

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %194, i64 0, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = sitofp i32 %207 to float
  br label %209

209:                                              ; preds = %205, %202
  %210 = phi float [ %204, %202 ], [ %208, %205 ]
  %211 = fmul float %210, 6.400000e+01
  %212 = fcmp ult float %211, 0xC1E0000000000000
  %213 = fcmp ugt float %211, 0x41DFFFFFE0000000
  %214 = fcmp ogt float %211, 0xC1E0000000000000
  %215 = select i1 %214, float %211, float 0xC1E0000000000000
  %216 = fptosi float %215 to i32
  %217 = select i1 %212, i32 0, i32 2147483647
  %218 = select i1 %213, i32 %217, i32 %216
  br label %221

219:                                              ; preds = %190
  %220 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %194, i32 0) #13
  br label %221

221:                                              ; preds = %209, %219
  %222 = phi i32 [ %218, %209 ], [ %220, %219 ]
  %223 = sdiv i32 %222, 64
  %224 = srem i32 %222, 64
  %225 = add nsw i32 %224, 32
  %226 = ashr i32 %225, 6
  %227 = add i32 %223, %192
  %228 = add i32 %227, %226
  br label %232

229:                                              ; preds = %186
  %230 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %118) #13
  %231 = load i32, i32* %230, align 4
  br label %232

232:                                              ; preds = %229, %221
  %233 = phi i32 [ %231, %229 ], [ %228, %221 ]
  %234 = icmp sgt i32 %233, 0
  %235 = select i1 %234, i32 %233, i32 0
  %236 = add nuw i32 %118, 1
  %237 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %236) #13
  store i32 %235, i32* %237, align 4
  %238 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %239 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %238, i64 0, i32 0, i32 0, i32 0, i32 0
  %240 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %239, align 8
  %241 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %238, i64 0, i32 0, i32 0, i32 0, i32 2
  %242 = load i32, i32* %241, align 4
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %240, i64 %243
  %245 = icmp eq i32 %242, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %232
  %247 = add nuw i32 %118, 1
  br label %251

248:                                              ; preds = %506, %232
  %249 = phi i32 [ %119, %232 ], [ %507, %506 ]
  %250 = icmp ult i32 %118, %249
  br i1 %250, label %510, label %537

251:                                              ; preds = %246, %506
  %252 = phi %"class.blink::TableGridCell"* [ %240, %246 ], [ %508, %506 ]
  %253 = phi i32 [ %119, %246 ], [ %507, %506 ]
  %254 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %252, i64 0, i32 1
  %255 = load i8, i8* %254, align 8, !range !4
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %257, label %506

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %252, i64 0, i32 0, i32 0, i32 0, i32 0
  %259 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %258, align 8
  %260 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %252, i64 0, i32 0, i32 0, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %259, i64 %262
  %264 = icmp eq i32 %261, 0
  br i1 %264, label %506, label %265

265:                                              ; preds = %257, %502
  %266 = phi %"class.blink::LayoutTableCell"** [ %504, %502 ], [ %259, %257 ]
  %267 = phi i32 [ %503, %502 ], [ %253, %257 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  store %"class.blink::LayoutTableCell"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutTableCell"*), %"class.blink::LayoutTableCell"** %5, align 8
  %268 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %266, align 8
  store %"class.blink::LayoutTableCell"* %268, %"class.blink::LayoutTableCell"** %5, align 8
  %269 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %268, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %270 = bitcast %"class.blink::LayoutObject"** %269 to %"class.blink::LayoutTableRow"**
  %271 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %271, i64 0, i32 3
  %273 = load i32, i32* %272, align 8
  %274 = and i32 %273, 2147483647
  %275 = icmp eq i32 %274, %118
  br i1 %275, label %276, label %502

276:                                              ; preds = %265
  %277 = icmp ult i32 %118, %267
  br i1 %277, label %313, label %278

278:                                              ; preds = %276
  %279 = load i8, i8* %6, align 8
  %280 = and i8 %279, 1
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %344, label %282

282:                                              ; preds = %278
  %283 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %118) #13
  %284 = load i32, i32* %283, align 4
  %285 = icmp sgt i32 %284, 33554431
  br i1 %285, label %290, label %286

286:                                              ; preds = %282
  %287 = icmp slt i32 %284, -33554432
  %288 = shl i32 %284, 6
  %289 = select i1 %287, i32 -2147483648, i32 %288
  br label %290

290:                                              ; preds = %286, %282
  %291 = phi i32 [ 2147483647, %282 ], [ %289, %286 ]
  %292 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  %293 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %292, i64 0, i32 0, i32 0, i32 0
  %294 = call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %293) #13
  %295 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %292, i64 0, i32 4
  %296 = load i32, i32* %295, align 8
  %297 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %292, i64 0, i32 5
  %298 = load i32, i32* %297, align 4
  %299 = sub i32 %294, %296
  %300 = sub i32 %299, %298
  %301 = call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* %292) #13
  %302 = icmp slt i32 %301, %300
  %303 = select i1 %302, i32 %300, i32 %301
  %304 = icmp sgt i32 %303, 33554431
  br i1 %304, label %309, label %305

305:                                              ; preds = %290
  %306 = icmp slt i32 %303, -33554432
  %307 = shl i32 %303, 6
  %308 = select i1 %306, i32 -2147483648, i32 %307
  br label %309

309:                                              ; preds = %305, %290
  %310 = phi i32 [ 2147483647, %290 ], [ %308, %305 ]
  %311 = call zeroext i1 @_ZNK5blink9LayoutBox19CrossesPageBoundaryENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %7, i32 %291, i32 %310) #13
  %312 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  br i1 %311, label %313, label %344

313:                                              ; preds = %309, %276
  %314 = phi %"class.blink::LayoutTableCell"* [ %268, %276 ], [ %312, %309 ]
  %315 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %314, i64 0, i32 2
  %316 = load i32, i32* %315, align 8
  %317 = and i32 %316, 134217728
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %340, label %319

319:                                              ; preds = %313
  %320 = call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %314) #13
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %335

322:                                              ; preds = %319
  %323 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %314, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %324 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %323, align 8
  %325 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %324, i64 0, i32 7
  %326 = bitcast %"class.blink::LayoutObject"** %325 to %"class.blink::LayoutTableSection"**
  %327 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %326, align 8
  %328 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %327, i64 0, i32 3, i32 0, i32 0, i32 2
  %329 = load i32, i32* %328, align 4
  %330 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %324, i64 3
  %331 = bitcast %"class.blink::LayoutObject"* %330 to i32*
  %332 = load i32, i32* %331, align 8
  %333 = and i32 %332, 2147483647
  %334 = sub i32 %329, %333
  br label %335

335:                                              ; preds = %322, %319
  %336 = phi i32 [ %334, %322 ], [ %320, %319 ]
  %337 = icmp ult i32 %336, 2147483646
  %338 = select i1 %337, i32 %336, i32 2147483646
  %339 = add i32 %338, %118
  br label %340

340:                                              ; preds = %313, %335
  %341 = phi i32 [ %247, %313 ], [ %339, %335 ]
  %342 = icmp ult i32 %267, %341
  %343 = select i1 %342, i32 %341, i32 %267
  br label %444

344:                                              ; preds = %309, %278
  %345 = phi %"class.blink::LayoutTableCell"* [ %268, %278 ], [ %312, %309 ]
  %346 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %345, i64 0, i32 2
  %347 = load i32, i32* %346, align 8
  %348 = and i32 %347, 134217728
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %444, label %350

350:                                              ; preds = %344
  %351 = call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %345) #13
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %366

353:                                              ; preds = %350
  %354 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %345, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %355 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %354, align 8
  %356 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %355, i64 0, i32 7
  %357 = bitcast %"class.blink::LayoutObject"** %356 to %"class.blink::LayoutTableSection"**
  %358 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %357, align 8
  %359 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %358, i64 0, i32 3, i32 0, i32 0, i32 2
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %355, i64 3
  %362 = bitcast %"class.blink::LayoutObject"* %361 to i32*
  %363 = load i32, i32* %362, align 8
  %364 = and i32 %363, 2147483647
  %365 = sub i32 %360, %364
  br label %366

366:                                              ; preds = %353, %350
  %367 = phi i32 [ %365, %353 ], [ %351, %350 ]
  %368 = icmp ugt i32 %367, 1
  br i1 %368, label %369, label %444

369:                                              ; preds = %366
  %370 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  call void @_ZN5blink15LayoutTableCell25SetIsSpanningCollapsedRowEb(%"class.blink::LayoutTableCell"* %370, i1 zeroext false) #13
  %371 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  %372 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %371, i64 0, i32 2
  %373 = load i32, i32* %372, align 8
  %374 = and i32 %373, 134217728
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %397, label %376

376:                                              ; preds = %369
  %377 = call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %371) #13
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %392

379:                                              ; preds = %376
  %380 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %371, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %381 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %381, i64 0, i32 7
  %383 = bitcast %"class.blink::LayoutObject"** %382 to %"class.blink::LayoutTableSection"**
  %384 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %383, align 8
  %385 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %384, i64 0, i32 3, i32 0, i32 0, i32 2
  %386 = load i32, i32* %385, align 4
  %387 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %381, i64 3
  %388 = bitcast %"class.blink::LayoutObject"* %387 to i32*
  %389 = load i32, i32* %388, align 8
  %390 = and i32 %389, 2147483647
  %391 = sub i32 %386, %390
  br label %392

392:                                              ; preds = %379, %376
  %393 = phi i32 [ %391, %379 ], [ %377, %376 ]
  %394 = icmp ult i32 %393, 2147483646
  %395 = select i1 %394, i32 %393, i32 2147483646
  %396 = add i32 %395, %118
  br label %397

397:                                              ; preds = %369, %392
  %398 = phi i32 [ %247, %369 ], [ %396, %392 ]
  %399 = icmp ult i32 %118, %398
  br i1 %399, label %402, label %431

400:                                              ; preds = %421
  %401 = icmp eq i32 %428, %398
  br i1 %401, label %431, label %402

402:                                              ; preds = %397, %400
  %403 = phi i32 [ %428, %400 ], [ %118, %397 ]
  %404 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %403) #13
  %405 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %404, i64 0, i32 1
  %406 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %405, align 8
  %407 = icmp eq %"class.blink::LayoutTableRow"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %402
  %409 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %403) #13
  %410 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %409, i64 0, i32 1
  %411 = bitcast %"class.blink::LayoutTableRow"** %410 to %"class.blink::LayoutObject"**
  %412 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %411, align 8
  %413 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %412, i64 0, i32 5, i32 0
  %414 = bitcast %"class.blink::ComputedStyle"** %413 to %"class.blink::ComputedStyleBase"**
  %415 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %414, align 8
  %416 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %415, i64 0, i32 9
  %417 = bitcast [20 x i8]* %416 to i160*
  %418 = load i160, i160* %417, align 8
  %419 = and i160 %418, 3802951800684688204490109616128
  %420 = icmp eq i160 %419, 2535301200456458802993406410752
  br i1 %420, label %429, label %421

421:                                              ; preds = %402, %408
  %422 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %109, align 8
  %423 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %422, i64 0, i32 9
  %424 = bitcast [20 x i8]* %423 to i160*
  %425 = load i160, i160* %424, align 8
  %426 = and i160 %425, 3802951800684688204490109616128
  %427 = icmp eq i160 %426, 2535301200456458802993406410752
  %428 = add i32 %403, 1
  br i1 %427, label %429, label %400

429:                                              ; preds = %408, %421
  %430 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  call void @_ZN5blink15LayoutTableCell25SetIsSpanningCollapsedRowEb(%"class.blink::LayoutTableCell"* %430, i1 zeroext true) #13
  br label %431

431:                                              ; preds = %400, %397, %429
  %432 = load i32, i32* %98, align 4
  %433 = load i32, i32* %97, align 8
  %434 = icmp eq i32 %432, %433
  br i1 %434, label %443, label %435, !prof !3

435:                                              ; preds = %431
  %436 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %96, align 8
  %437 = zext i32 %432 to i64
  %438 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %436, i64 %437
  %439 = load i64, i64* %111, align 8
  %440 = bitcast %"class.blink::LayoutTableCell"** %438 to i64*
  store i64 %439, i64* %440, align 8
  %441 = load i32, i32* %98, align 4
  %442 = add i32 %441, 1
  store i32 %442, i32* %98, align 4
  br label %444

443:                                              ; preds = %431
  call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2096"* nonnull %3, %"class.blink::LayoutTableCell"** nonnull dereferenceable(8) %5) #13
  br label %444

444:                                              ; preds = %366, %344, %443, %435, %340
  %445 = phi i32 [ %343, %340 ], [ %267, %435 ], [ %267, %443 ], [ %267, %344 ], [ %267, %366 ]
  %446 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %112, align 8
  %447 = call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %446) #13
  br i1 %447, label %448, label %454

448:                                              ; preds = %444
  %449 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  %450 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %449, i64 0, i32 4
  store i32 0, i32* %450, align 8
  %451 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %449, i64 0, i32 5
  store i32 0, i32* %451, align 4
  %452 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %449, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox17ClearOverrideSizeEv(%"class.blink::LayoutBox"* %452) #13
  %453 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %113, align 8
  call void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"* %453) #13
  br label %454

454:                                              ; preds = %448, %444
  %455 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  %456 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %455, i64 0, i32 2
  %457 = load i32, i32* %456, align 8
  %458 = and i32 %457, 134217728
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %479, label %460

460:                                              ; preds = %454
  %461 = call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* %455) #13
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %476

463:                                              ; preds = %460
  %464 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %455, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %465 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %464, align 8
  %466 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %465, i64 0, i32 7
  %467 = bitcast %"class.blink::LayoutObject"** %466 to %"class.blink::LayoutTableSection"**
  %468 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %467, align 8
  %469 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %468, i64 0, i32 3, i32 0, i32 0, i32 2
  %470 = load i32, i32* %469, align 4
  %471 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %465, i64 3
  %472 = bitcast %"class.blink::LayoutObject"* %471 to i32*
  %473 = load i32, i32* %472, align 8
  %474 = and i32 %473, 2147483647
  %475 = sub i32 %470, %474
  br label %476

476:                                              ; preds = %463, %460
  %477 = phi i32 [ %475, %463 ], [ %461, %460 ]
  %478 = icmp eq i32 %477, 1
  br i1 %478, label %479, label %500

479:                                              ; preds = %476, %454
  %480 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %247) #13
  %481 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %118) #13
  %482 = load i32, i32* %481, align 4
  %483 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  %484 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %483, i64 0, i32 0, i32 0, i32 0
  %485 = call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %484) #13
  %486 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %483, i64 0, i32 4
  %487 = load i32, i32* %486, align 8
  %488 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %483, i64 0, i32 5
  %489 = load i32, i32* %488, align 4
  %490 = sub i32 %485, %487
  %491 = sub i32 %490, %489
  %492 = call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* %483) #13
  %493 = icmp slt i32 %492, %491
  %494 = select i1 %493, i32 %491, i32 %492
  %495 = add nsw i32 %494, %482
  %496 = load i32, i32* %480, align 4
  %497 = icmp slt i32 %496, %495
  %498 = select i1 %497, i32 %495, i32 %496
  %499 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %247) #13
  store i32 %498, i32* %499, align 4
  br label %500

500:                                              ; preds = %476, %479
  %501 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  call void @_ZN5blink18LayoutTableSection21UpdateBaselineForCellEPNS_15LayoutTableCellEjRNS_10LayoutUnitE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* %501, i32 %118, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4)
  br label %502

502:                                              ; preds = %265, %500
  %503 = phi i32 [ %445, %500 ], [ %267, %265 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  %504 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %266, i64 1
  %505 = icmp eq %"class.blink::LayoutTableCell"** %504, %263
  br i1 %505, label %506, label %265

506:                                              ; preds = %502, %257, %251
  %507 = phi i32 [ %253, %251 ], [ %253, %257 ], [ %503, %502 ]
  %508 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %252, i64 1
  %509 = icmp eq %"class.blink::TableGridCell"* %508, %244
  br i1 %509, label %248, label %251

510:                                              ; preds = %248
  %511 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %512 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %511, i64 0, i32 1
  %513 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %512, align 8
  %514 = icmp eq %"class.blink::LayoutTableRow"* %513, null
  br i1 %514, label %537, label %515

515:                                              ; preds = %510
  %516 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %118) #13
  %517 = load i32, i32* %516, align 4
  %518 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %519 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %518, i64 0, i32 1
  %520 = bitcast %"class.blink::LayoutTableRow"** %519 to %"class.blink::LayoutBox"**
  %521 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %520, align 8
  %522 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %521, i64 0, i32 0, i32 0, i32 5, i32 0
  %523 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %522, align 8
  %524 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %523, i64 0, i32 0, i32 9
  %525 = bitcast [20 x i8]* %524 to i160*
  %526 = load i160, i160* %525, align 8
  %527 = and i160 %526, 15211807202738752817960438464512
  %528 = icmp eq i160 %527, 0
  %529 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %521, i64 0, i32 2, i32 1, i32 1, i32 0
  %530 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %521, i64 0, i32 2, i32 1, i32 0, i32 0
  %531 = select i1 %528, i32* %529, i32* %530
  %532 = load i32, i32* %531, align 4
  %533 = sdiv i32 %532, 64
  %534 = add nsw i32 %533, %517
  %535 = add nuw i32 %118, 1
  %536 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %535) #13
  store i32 %534, i32* %536, align 4
  br label %537

537:                                              ; preds = %510, %515, %248
  %538 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %118) #13
  %539 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %538, i64 0, i32 1
  %540 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %539, align 8
  %541 = icmp eq %"class.blink::LayoutTableRow"* %540, null
  br i1 %541, label %547, label %542

542:                                              ; preds = %537
  %543 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %73, align 8
  %544 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %543, i64 0, i32 13
  %545 = load i16, i16* %544, align 2
  %546 = sext i16 %545 to i32
  br label %547

547:                                              ; preds = %537, %542
  %548 = phi i32 [ %546, %542 ], [ 0, %537 ]
  %549 = add nuw i32 %118, 1
  %550 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %549) #13
  %551 = load i32, i32* %550, align 4
  %552 = add nsw i32 %551, %548
  store i32 %552, i32* %550, align 4
  %553 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %549) #13
  %554 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %118) #13
  %555 = load i32, i32* %553, align 4
  %556 = load i32, i32* %554, align 4
  %557 = icmp slt i32 %555, %556
  %558 = select i1 %557, i32 %556, i32 %555
  %559 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %549) #13
  store i32 %558, i32* %559, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #13
  %560 = load i32, i32* %10, align 4
  %561 = icmp ult i32 %549, %560
  br i1 %561, label %117, label %114

562:                                              ; preds = %114
  call void @_ZN5blink18LayoutTableSection29DistributeRowSpanHeightToRowsERN3WTF6VectorIPNS_15LayoutTableCellELj2ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"* %0, %"class.WTF::Vector.2096"* nonnull dereferenceable(32) %3)
  br label %563

563:                                              ; preds = %562, %114
  %564 = load i8, i8* %102, align 8
  %565 = icmp eq i8 %564, 0
  br i1 %565, label %566, label %568

566:                                              ; preds = %92, %563
  %567 = load i32, i32* %10, align 4
  br label %691

568:                                              ; preds = %563
  %569 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 5
  %570 = load i32, i32* %10, align 4
  %571 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %572 = load i32, i32* %571, align 4
  %573 = icmp ult i32 %572, %570
  br i1 %573, label %574, label %630

574:                                              ; preds = %568
  %575 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %576 = load i32, i32* %575, align 8
  %577 = icmp ult i32 %576, %570
  br i1 %577, label %578, label %617

578:                                              ; preds = %574
  %579 = lshr i32 %576, 2
  %580 = add nuw i32 %576, 1
  %581 = add i32 %580, %579
  %582 = icmp ugt i32 %581, 4
  %583 = select i1 %582, i32 %581, i32 4
  %584 = icmp ugt i32 %583, %570
  %585 = select i1 %584, i32 %583, i32 %570
  %586 = icmp ult i32 %576, %585
  br i1 %586, label %587, label %617, !prof !2

587:                                              ; preds = %578
  %588 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %569, i64 0, i32 0, i32 0, i32 0
  %589 = load i32*, i32** %588, align 8
  %590 = icmp eq i32* %589, null
  %591 = zext i32 %585 to i64
  %592 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %591) #13
  %593 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %592, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  br i1 %590, label %594, label %599

594:                                              ; preds = %587
  %595 = ptrtoint i8* %593 to i64
  %596 = bitcast %"class.WTF::Vector.2066"* %569 to i64*
  store atomic i64 %595, i64* %596 monotonic, align 8
  %597 = lshr i64 %592, 2
  %598 = trunc i64 %597 to i32
  store i32 %598, i32* %575, align 8
  br label %617

599:                                              ; preds = %587
  %600 = lshr i64 %592, 2
  %601 = ptrtoint i8* %593 to i64
  %602 = load i32*, i32** %588, align 8
  %603 = icmp ne i8* %593, null
  %604 = icmp ne i32* %602, null
  %605 = and i1 %603, %604
  %606 = bitcast i32* %602 to i8*
  br i1 %605, label %607, label %613, !prof !2

607:                                              ; preds = %599
  %608 = load i32, i32* %571, align 4
  %609 = zext i32 %608 to i64
  %610 = shl nuw nsw i64 %609, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %593, i8* nonnull align 4 %606, i64 %610, i1 false) #13
  %611 = bitcast %"class.WTF::Vector.2066"* %569 to i8**
  %612 = load i8*, i8** %611, align 8
  br label %613

613:                                              ; preds = %607, %599
  %614 = phi i8* [ %612, %607 ], [ %606, %599 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %614) #13
  %615 = bitcast %"class.WTF::Vector.2066"* %569 to i64*
  store atomic i64 %601, i64* %615 monotonic, align 8
  %616 = trunc i64 %600 to i32
  store i32 %616, i32* %575, align 8
  br label %617

617:                                              ; preds = %613, %594, %578, %574
  %618 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %569, i64 0, i32 0, i32 0, i32 0
  %619 = load i32*, i32** %618, align 8
  %620 = load i32, i32* %571, align 4
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds i32, i32* %619, i64 %621
  %623 = zext i32 %570 to i64
  %624 = getelementptr inbounds i32, i32* %619, i64 %623
  %625 = bitcast i32* %622 to i8*
  %626 = ptrtoint i32* %624 to i64
  %627 = ptrtoint i32* %622 to i64
  %628 = sub i64 %626, %627
  call void @llvm.memset.p0i8.i64(i8* align 4 %625, i8 0, i64 %628, i1 false) #13
  %629 = load i32, i32* %10, align 4
  br label %630

630:                                              ; preds = %568, %617
  %631 = phi i32 [ %570, %568 ], [ %629, %617 ]
  store i32 %570, i32* %571, align 4
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %691, label %633

633:                                              ; preds = %630
  %634 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %635 = bitcast %"class.blink::ComputedStyle"** %634 to %"class.blink::ComputedStyleBase"**
  br label %638

636:                                              ; preds = %675
  %637 = icmp eq i32 %677, 0
  br i1 %637, label %691, label %679

638:                                              ; preds = %633, %675
  %639 = phi i32 [ 0, %633 ], [ %676, %675 ]
  %640 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %639) #13
  %641 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %640, i64 0, i32 1
  %642 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %641, align 8
  %643 = icmp eq %"class.blink::LayoutTableRow"* %642, null
  br i1 %643, label %657, label %644

644:                                              ; preds = %638
  %645 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %639) #13
  %646 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %645, i64 0, i32 1
  %647 = bitcast %"class.blink::LayoutTableRow"** %646 to %"class.blink::LayoutObject"**
  %648 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %647, align 8
  %649 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %648, i64 0, i32 5, i32 0
  %650 = bitcast %"class.blink::ComputedStyle"** %649 to %"class.blink::ComputedStyleBase"**
  %651 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %650, align 8
  %652 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %651, i64 0, i32 9
  %653 = bitcast [20 x i8]* %652 to i160*
  %654 = load i160, i160* %653, align 8
  %655 = and i160 %654, 3802951800684688204490109616128
  %656 = icmp eq i160 %655, 2535301200456458802993406410752
  br i1 %656, label %664, label %657

657:                                              ; preds = %638, %644
  %658 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %635, align 8
  %659 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %658, i64 0, i32 9
  %660 = bitcast [20 x i8]* %659 to i160*
  %661 = load i160, i160* %660, align 8
  %662 = and i160 %661, 3802951800684688204490109616128
  %663 = icmp eq i160 %662, 2535301200456458802993406410752
  br i1 %663, label %664, label %672

664:                                              ; preds = %644, %657
  %665 = add nuw i32 %639, 1
  %666 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %665) #13
  %667 = load i32, i32* %666, align 4
  %668 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %639) #13
  %669 = load i32, i32* %668, align 4
  %670 = sub nsw i32 %667, %669
  %671 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %569, i32 %639) #13
  store i32 %670, i32* %671, align 4
  br label %675

672:                                              ; preds = %657
  %673 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %569, i32 %639) #13
  store i32 0, i32* %673, align 4
  %674 = add nuw i32 %639, 1
  br label %675

675:                                              ; preds = %664, %672
  %676 = phi i32 [ %665, %664 ], [ %674, %672 ]
  %677 = load i32, i32* %10, align 4
  %678 = icmp ult i32 %676, %677
  br i1 %678, label %638, label %636

679:                                              ; preds = %636, %679
  %680 = phi i32 [ %685, %679 ], [ 0, %636 ]
  %681 = phi i32 [ %684, %679 ], [ 0, %636 ]
  %682 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %569, i32 %680) #13
  %683 = load i32, i32* %682, align 4
  %684 = add nsw i32 %683, %681
  %685 = add nuw i32 %680, 1
  %686 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %685) #13
  %687 = load i32, i32* %686, align 4
  %688 = sub nsw i32 %687, %684
  store i32 %688, i32* %686, align 4
  %689 = load i32, i32* %10, align 4
  %690 = icmp ult i32 %685, %689
  br i1 %690, label %679, label %691

691:                                              ; preds = %679, %630, %566, %636
  %692 = phi i32 [ %567, %566 ], [ 0, %636 ], [ 0, %630 ], [ %689, %679 ]
  %693 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %692) #13
  %694 = load i32, i32* %693, align 4
  %695 = load i32, i32* %98, align 4
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %698, label %697, !prof !3

697:                                              ; preds = %691
  store i32 0, i32* %98, align 4
  br label %698

698:                                              ; preds = %697, %691
  %699 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %96, align 8
  %700 = bitcast i8* %99 to %"class.blink::LayoutTableCell"**
  %701 = icmp eq %"class.blink::LayoutTableCell"** %699, %700
  br i1 %701, label %704, label %702, !prof !2

702:                                              ; preds = %698
  %703 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2097"* nonnull %703, %"class.blink::LayoutTableCell"** %699) #13
  br label %704

704:                                              ; preds = %698, %702
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #13
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #13
  ret i32 %694
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"*, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox19CrossesPageBoundaryENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink15LayoutTableCell25SetIsSpanningCollapsedRowEb(%"class.blink::LayoutTableCell"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox17ClearOverrideSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection12UpdateLayoutEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutAnalyzer::Scope", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::LayoutState", align 8
  %5 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %6) #13
  %9 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 10
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 998, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #13
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  call void @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.2045"* %16, i32 %18) #13
  %19 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  %20 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %4, %"class.blink::LayoutBox"* dereferenceable(216) %20, i1 zeroext false) #13
  %21 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %22 = bitcast %"class.blink::LayoutObject"** %21 to %"class.blink::LayoutTable"**
  %23 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %23, i64 0, i32 3
  %25 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %23, i64 0, i32 6
  %26 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutTableSection"* %26, null
  br i1 %27, label %28, label %35

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %23, i64 0, i32 8
  %30 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutTableSection"* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %23, i64 0, i32 7
  %34 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %33, align 8
  br label %35

35:                                               ; preds = %32, %28, %15
  %36 = phi %"class.blink::LayoutTableSection"* [ %34, %32 ], [ %26, %15 ], [ %30, %28 ]
  %37 = icmp eq %"class.blink::LayoutTableSection"* %36, %0
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %23, i64 0, i32 13
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i32
  %42 = shl nsw i32 %41, 6
  br label %43

43:                                               ; preds = %35, %38
  %44 = phi i32 [ %42, %38 ], [ 0, %35 ]
  %45 = bitcast %"class.blink::SubtreeLayoutScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  %46 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %5, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %46, align 8
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %5, %"class.blink::LayoutObject"* dereferenceable(88) %6) #13
  %47 = load i32, i32* %17, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br label %68

51:                                               ; preds = %256, %43
  %52 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %22, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %54 = bitcast %"class.blink::ComputedStyle"** %53 to %"class.blink::ComputedStyleBase"**
  %55 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %55, i64 0, i32 9
  %57 = bitcast [20 x i8]* %56 to i160*
  %58 = load i160, i160* %57, align 8
  %59 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %60 = bitcast %"class.blink::ComputedStyle"** %59 to %"class.blink::ComputedStyleBase"**
  %61 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %61, i64 0, i32 9
  %63 = bitcast [20 x i8]* %62 to i160*
  %64 = load i160, i160* %63, align 8
  %65 = xor i160 %64, %58
  %66 = and i160 %65, 41538374868278621028243970633760768
  %67 = icmp eq i160 %66, 0
  br i1 %67, label %283, label %261

68:                                               ; preds = %49, %256
  %69 = phi i32 [ 0, %49 ], [ %258, %256 ]
  %70 = phi i32 [ %44, %49 ], [ %257, %256 ]
  %71 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %16, i32 %69) #13
  %72 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %71, i64 0, i32 0
  %73 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %71, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %132, %68
  %77 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %16, i32 %69) #13
  %78 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %77, i64 0, i32 1
  %79 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %78, align 8
  %80 = icmp eq %"class.blink::LayoutTableRow"* %79, null
  br i1 %80, label %256, label %135

81:                                               ; preds = %68, %132
  %82 = phi i32 [ %133, %132 ], [ 0, %68 ]
  %83 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %72, i32 %82) #13
  %84 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %83, i64 0, i32 0, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %132, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %83, i64 0, i32 0
  %89 = add i32 %85, -1
  %90 = call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"* %88, i32 %89) #13
  %91 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %90, align 8
  %92 = icmp eq %"class.blink::LayoutTableCell"* %91, null
  br i1 %92, label %132, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %83, i64 0, i32 1
  %95 = load i8, i8* %94, align 8, !range !4
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %132

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %91, i64 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 67108864
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  %103 = call i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* nonnull %91) #13
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %120, label %105

105:                                              ; preds = %97, %102
  %106 = phi i32 [ 1, %97 ], [ %103, %102 ]
  br label %107

107:                                              ; preds = %105, %107
  %108 = phi i32 [ %115, %107 ], [ %106, %105 ]
  %109 = phi i32 [ %116, %107 ], [ %82, %105 ]
  %110 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %22, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %110, i64 0, i32 2
  %112 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZNK3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2075"* %111, i32 %109) #13
  %113 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %112, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 %108, %114
  %116 = add nuw i32 %109, 1
  %117 = icmp ne i32 %115, 0
  %118 = icmp ult i32 %116, %74
  %119 = and i1 %118, %117
  br i1 %119, label %107, label %120

120:                                              ; preds = %107, %102
  %121 = phi i32 [ %82, %102 ], [ %116, %107 ]
  %122 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %24, i32 %121) #13
  %123 = load i32, i32* %122, align 4
  %124 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %24, i32 %82) #13
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 %123, %125
  %127 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %22, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %127, i64 0, i32 12
  %129 = load i16, i16* %128, align 8
  %130 = sext i16 %129 to i32
  %131 = sub i32 %126, %130
  call void @_ZN5blink15LayoutTableCell19SetCellLogicalWidthEiRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTableCell"* nonnull %91, i32 %131, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %5) #13
  br label %132

132:                                              ; preds = %93, %81, %87, %120
  %133 = add nuw i32 %82, 1
  %134 = icmp eq i32 %133, %74
  br i1 %134, label %76, label %81

135:                                              ; preds = %76
  %136 = load i8, i8* %19, align 8
  %137 = and i8 %136, 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %158, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %142 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %142, i64 0, i32 0, i32 9
  %144 = bitcast [20 x i8]* %143 to i160*
  %145 = load i160, i160* %144, align 8
  %146 = and i160 %145, 15211807202738752817960438464512
  %147 = icmp eq i160 %146, 0
  br i1 %147, label %148, label %153

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, %70
  br i1 %151, label %158, label %152

152:                                              ; preds = %148
  store i32 %70, i32* %149, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %140) #13
  br label %158

153:                                              ; preds = %139
  %154 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, %70
  br i1 %156, label %158, label %157

157:                                              ; preds = %153
  store i32 %70, i32* %154, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %140) #13
  br label %158

158:                                              ; preds = %135, %157, %153, %152, %148
  %159 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %161 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %160 to i96*
  %162 = load i96, i96* %161, align 4
  %163 = and i96 %162, 63
  %164 = icmp eq i96 %163, 0
  br i1 %164, label %165, label %170

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"* %20, %"class.blink::LayoutBox"* dereferenceable(216) %166, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %5) #13
  %167 = load i96, i96* %161, align 4
  %168 = and i96 %167, 63
  %169 = icmp eq i96 %168, 0
  br i1 %169, label %175, label %170

170:                                              ; preds = %158, %165
  %171 = bitcast %"class.blink::LayoutTableRow"* %79 to void (%"class.blink::LayoutObject"*)***
  %172 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %172, i64 54
  %174 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %173, align 8
  call void %174(%"class.blink::LayoutObject"* %159) #13
  br label %175

175:                                              ; preds = %165, %170
  %176 = load i8, i8* %19, align 8
  %177 = and i8 %176, 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %184

179:                                              ; preds = %175
  %180 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %22, align 8
  %181 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %182 = bitcast %"class.blink::ComputedStyle"** %181 to %"class.blink::ComputedStyleBase"**
  %183 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %182, align 8
  br label %219

184:                                              ; preds = %175
  call void @_ZN5blink18LayoutTableSection22AdjustRowForPaginationERNS_14LayoutTableRowERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableRow"* nonnull dereferenceable(272) %79, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %5)
  %185 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"* %20, %"class.blink::LayoutBox"* dereferenceable(216) %185) #13
  %186 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %187 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %187, i64 0, i32 0, i32 9
  %189 = bitcast [20 x i8]* %188 to i160*
  %190 = load i160, i160* %189, align 8
  %191 = and i160 %190, 15211807202738752817960438464512
  %192 = icmp eq i160 %191, 0
  %193 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %194 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %195 = select i1 %192, i32* %193, i32* %194
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %198 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %79, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %199 = select i1 %192, i32* %197, i32* %198
  %200 = load i32, i32* %199, align 4
  %201 = icmp slt i32 %200, 0
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %196, i32 %200) #13
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !3
  %207 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %22, align 8
  %208 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %207, i64 0, i32 13
  %209 = load i16, i16* %208, align 2
  %210 = sext i16 %209 to i32
  %211 = shl nsw i32 %210, 6
  %212 = icmp slt i16 %209, 0
  %213 = select i1 %212, i32 -2147483648, i32 2147483647
  %214 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %206, i32 %211) #13
  %215 = extractvalue { i32, i1 } %214, 1
  %216 = extractvalue { i32, i1 } %214, 0
  %217 = select i1 %215, i32 %213, i32 %216, !prof !3
  %218 = bitcast %"class.blink::ComputedStyle"* %187 to %"class.blink::ComputedStyleBase"*
  br label %219

219:                                              ; preds = %179, %184
  %220 = phi %"class.blink::ComputedStyleBase"* [ %218, %184 ], [ %183, %179 ]
  %221 = phi %"class.blink::LayoutTable"* [ %207, %184 ], [ %180, %179 ]
  %222 = phi i32 [ %217, %184 ], [ %70, %179 ]
  %223 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %224 = bitcast %"class.blink::ComputedStyle"** %223 to %"class.blink::ComputedStyleBase"**
  %225 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %225, i64 0, i32 9
  %227 = bitcast [20 x i8]* %226 to i160*
  %228 = load i160, i160* %227, align 8
  %229 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %220, i64 0, i32 9
  %230 = bitcast [20 x i8]* %229 to i160*
  %231 = load i160, i160* %230, align 8
  %232 = xor i160 %231, %228
  %233 = and i160 %232, 41538374868278621028243970633760768
  %234 = icmp eq i160 %233, 0
  br i1 %234, label %256, label %235

235:                                              ; preds = %219
  %236 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %237 = icmp eq %"class.blink::Node"* %236, null
  br i1 %237, label %238, label %245

238:                                              ; preds = %235, %238
  %239 = phi %"class.blink::LayoutObject"* [ %241, %238 ], [ %6, %235 ]
  %240 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %239, i64 0, i32 7
  %241 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %240, align 8
  %242 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %241, i64 0, i32 6, i32 0, i32 0
  %243 = load %"class.blink::Node"*, %"class.blink::Node"** %242, align 8
  %244 = icmp eq %"class.blink::Node"* %243, null
  br i1 %244, label %238, label %245

245:                                              ; preds = %238, %235
  %246 = phi %"class.blink::Node"* [ %236, %235 ], [ %243, %238 ]
  %247 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %246, i64 0, i32 3, i32 0, i32 0
  %248 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %248, i64 0, i32 2, i32 0, i32 0
  %250 = load %"class.blink::Document"*, %"class.blink::Document"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %250, i64 0, i32 2
  %252 = bitcast %"class.blink::UseCounter"* %251 to void (%"class.blink::UseCounter"*, i32)***
  %253 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %252, align 8
  %254 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %253, i64 3
  %255 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %254, align 8
  call void %255(%"class.blink::UseCounter"* %251, i32 2015) #13
  br label %256

256:                                              ; preds = %76, %219, %245
  %257 = phi i32 [ %70, %76 ], [ %222, %219 ], [ %222, %245 ]
  %258 = add nuw i32 %69, 1
  %259 = load i32, i32* %17, align 4
  %260 = icmp ult i32 %258, %259
  br i1 %260, label %68, label %51

261:                                              ; preds = %51
  %262 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %263 = load %"class.blink::Node"*, %"class.blink::Node"** %262, align 8
  %264 = icmp eq %"class.blink::Node"* %263, null
  br i1 %264, label %265, label %272

265:                                              ; preds = %261, %265
  %266 = phi %"class.blink::LayoutObject"* [ %268, %265 ], [ %6, %261 ]
  %267 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %266, i64 0, i32 7
  %268 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %267, align 8
  %269 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %268, i64 0, i32 6, i32 0, i32 0
  %270 = load %"class.blink::Node"*, %"class.blink::Node"** %269, align 8
  %271 = icmp eq %"class.blink::Node"* %270, null
  br i1 %271, label %265, label %272

272:                                              ; preds = %265, %261
  %273 = phi %"class.blink::Node"* [ %263, %261 ], [ %270, %265 ]
  %274 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %273, i64 0, i32 3, i32 0, i32 0
  %275 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %274, align 8
  %276 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %275, i64 0, i32 2, i32 0, i32 0
  %277 = load %"class.blink::Document"*, %"class.blink::Document"** %276, align 8
  %278 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %277, i64 0, i32 2
  %279 = bitcast %"class.blink::UseCounter"* %278 to void (%"class.blink::UseCounter"*, i32)***
  %280 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %279, align 8
  %281 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %280, i64 3
  %282 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %281, align 8
  call void %282(%"class.blink::UseCounter"* %278, i32 2016) #13
  br label %283

283:                                              ; preds = %272, %51
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %6)
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #13
  call void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

declare void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #2

declare void @_ZN5blink15LayoutTableCell19SetCellLogicalWidthEiRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTableCell"*, i32, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection22AdjustRowForPaginationERNS_14LayoutTableRowERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableRow"* dereferenceable(272), %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 2
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"* %7, i32 0) #13
  %8 = tail call i32 @_ZNK5blink18LayoutTableSection19LogicalHeightForRowERKNS_14LayoutTableRowE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableRow"* dereferenceable(272) %1)
  %9 = icmp sgt i32 %8, 33554431
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = icmp slt i32 %8, -33554432
  %12 = shl i32 %8, 6
  %13 = select i1 %11, i32 -2147483648, i32 %12
  br label %14

14:                                               ; preds = %10, %3
  %15 = phi i32 [ 2147483647, %3 ], [ %13, %10 ]
  %16 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, %15
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  store i32 %15, i32* %24, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %7) #13
  br label %33

28:                                               ; preds = %14
  %29 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %15
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  store i32 %15, i32* %29, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %7) #13
  br label %33

33:                                               ; preds = %23, %27, %28, %32
  %34 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %35 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %34) #13
  br i1 %35, label %36, label %334

36:                                               ; preds = %33
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 15211807202738752817960438464512
  %42 = icmp eq i160 %41, 0
  %43 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %45 = select i1 %42, i32* %43, i32* %44
  %46 = load i32, i32* %45, align 4
  %47 = tail call i32 @_ZNK5blink18LayoutTableSection21PaginationStrutForRowEPNS_14LayoutTableRowENS_10LayoutUnitE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableRow"* %1, i32 %46)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %162

49:                                               ; preds = %36
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 15211807202738752817960438464512
  %55 = icmp eq i160 %54, 0
  %56 = select i1 %55, i32* %43, i32* %44
  %57 = load i32, i32* %56, align 4
  %58 = tail call i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"* %34, i32 %57) #13
  %59 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %60 = bitcast %"class.blink::LayoutObject"** %59 to %"class.blink::LayoutTable"**
  %61 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %61, i64 0, i32 6
  %63 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %62, align 8
  %64 = icmp ne %"class.blink::LayoutTableSection"* %63, null
  %65 = icmp ne %"class.blink::LayoutTableSection"* %63, %0
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %49
  %68 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %61, i64 0, i32 20, i32 0
  br label %93

69:                                               ; preds = %49
  %70 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %73, label %82

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi %"class.blink::LayoutObject"* [ %78, %75 ], [ %74, %73 ]
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 7
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 6, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %75, label %82

82:                                               ; preds = %75, %69
  %83 = phi %"class.blink::Node"* [ %71, %69 ], [ %80, %75 ]
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 3, i32 0, i32 0
  %85 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::Document"*, %"class.blink::Document"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %87, i64 0, i32 113
  %89 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %89, i64 0, i32 3
  %91 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %91, i64 0, i32 4, i32 0
  br label %93

93:                                               ; preds = %67, %82
  %94 = phi i32* [ %68, %67 ], [ %92, %82 ]
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 63
  %97 = icmp ult i32 %96, 127
  br i1 %97, label %334, label %98

98:                                               ; preds = %93
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %99, i64 0, i32 0, i32 9
  %101 = bitcast [20 x i8]* %100 to i160*
  %102 = load i160, i160* %101, align 8
  %103 = and i160 %102, 15211807202738752817960438464512
  %104 = icmp eq i160 %103, 0
  %105 = select i1 %104, i32* %43, i32* %44
  %106 = load i32, i32* %105, align 4
  %107 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %34, i32 %106, i32 1) #13
  %108 = icmp sgt i32 %107, -1
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %58, i32 %107) #13
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %109, i32 %112, !prof !3
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %162, label %115

115:                                              ; preds = %98
  %116 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %60, align 8
  %117 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %116, i64 0, i32 6
  %118 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %117, align 8
  %119 = icmp ne %"class.blink::LayoutTableSection"* %118, null
  %120 = icmp ne %"class.blink::LayoutTableSection"* %118, %0
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %116, i64 0, i32 20, i32 0
  br label %148

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %125, align 8
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %128, label %137

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi %"class.blink::LayoutObject"* [ %133, %130 ], [ %129, %128 ]
  %132 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %131, i64 0, i32 7
  %133 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %133, i64 0, i32 6, i32 0, i32 0
  %135 = load %"class.blink::Node"*, %"class.blink::Node"** %134, align 8
  %136 = icmp eq %"class.blink::Node"* %135, null
  br i1 %136, label %130, label %137

137:                                              ; preds = %130, %124
  %138 = phi %"class.blink::Node"* [ %126, %124 ], [ %135, %130 ]
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %138, i64 0, i32 3, i32 0, i32 0
  %140 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %140, i64 0, i32 2, i32 0, i32 0
  %142 = load %"class.blink::Document"*, %"class.blink::Document"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %142, i64 0, i32 113
  %144 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %144, i64 0, i32 3
  %146 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %146, i64 0, i32 4, i32 0
  br label %148

148:                                              ; preds = %122, %137
  %149 = phi i32* [ %123, %122 ], [ %147, %137 ]
  %150 = load i32, i32* %149, align 4
  %151 = sdiv i32 %150, 64
  %152 = shl nsw i32 %151, 6
  %153 = icmp sgt i32 %113, %152
  br i1 %153, label %154, label %160

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %116, i64 0, i32 13
  %156 = load i16, i16* %155, align 2
  %157 = sext i16 %156 to i32
  %158 = shl nsw i32 %157, 6
  %159 = icmp sgt i32 %113, %158
  br i1 %159, label %334, label %160

160:                                              ; preds = %154, %148
  %161 = sdiv i32 %113, -64
  br label %162

162:                                              ; preds = %36, %98, %160
  %163 = phi i32 [ %161, %160 ], [ 0, %98 ], [ %47, %36 ]
  %164 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %165 = bitcast %"class.blink::LayoutObject"** %164 to %"class.blink::LayoutTable"**
  %166 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %166, i64 0, i32 6
  %168 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %167, align 8
  %169 = icmp ne %"class.blink::LayoutTableSection"* %168, null
  %170 = icmp ne %"class.blink::LayoutTableSection"* %168, %0
  %171 = and i1 %169, %170
  br i1 %171, label %172, label %174

172:                                              ; preds = %162
  %173 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %166, i64 0, i32 20, i32 0
  br label %198

174:                                              ; preds = %162
  %175 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %176 = load %"class.blink::Node"*, %"class.blink::Node"** %175, align 8
  %177 = icmp eq %"class.blink::Node"* %176, null
  br i1 %177, label %178, label %187

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %180

180:                                              ; preds = %180, %178
  %181 = phi %"class.blink::LayoutObject"* [ %183, %180 ], [ %179, %178 ]
  %182 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %181, i64 0, i32 7
  %183 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %183, i64 0, i32 6, i32 0, i32 0
  %185 = load %"class.blink::Node"*, %"class.blink::Node"** %184, align 8
  %186 = icmp eq %"class.blink::Node"* %185, null
  br i1 %186, label %180, label %187

187:                                              ; preds = %180, %174
  %188 = phi %"class.blink::Node"* [ %176, %174 ], [ %185, %180 ]
  %189 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %188, i64 0, i32 3, i32 0, i32 0
  %190 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %190, i64 0, i32 2, i32 0, i32 0
  %192 = load %"class.blink::Document"*, %"class.blink::Document"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %192, i64 0, i32 113
  %194 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %194, i64 0, i32 3
  %196 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %196, i64 0, i32 4, i32 0
  br label %198

198:                                              ; preds = %172, %187
  %199 = phi i32* [ %173, %172 ], [ %197, %187 ]
  %200 = load i32, i32* %199, align 4
  %201 = sdiv i32 %200, 64
  %202 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %203 = bitcast %"class.blink::ComputedStyle"** %202 to %"class.blink::ComputedStyleBase"**
  %204 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %204, i64 0, i32 9
  %206 = bitcast [20 x i8]* %205 to i160*
  %207 = load i160, i160* %206, align 8
  %208 = and i160 %207, 81129638414606681695789005144064
  %209 = icmp eq i160 %208, 0
  br i1 %209, label %210, label %257

210:                                              ; preds = %198
  %211 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 1, i32 0
  %212 = bitcast %"class.blink::LayoutObject"** %211 to %"class.blink::LayoutTableCell"**
  %213 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %212, align 8
  %214 = icmp eq %"class.blink::LayoutTableCell"* %213, null
  br i1 %214, label %257, label %215

215:                                              ; preds = %210, %249
  %216 = phi %"class.blink::LayoutTableCell"* [ %255, %249 ], [ %213, %210 ]
  %217 = phi i32 [ %252, %249 ], [ %201, %210 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %218 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %219 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %219, i64 0, i32 7
  %221 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %221, i64 0, i32 7
  %223 = bitcast %"class.blink::LayoutObject"** %222 to %"class.blink::LayoutTable"**
  %224 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %226 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %226, i64 0, i32 0, i32 9
  %228 = bitcast [20 x i8]* %227 to i160*
  %229 = load i160, i160* %228, align 8
  %230 = lshr i160 %229, 102
  %231 = trunc i160 %230 to i8
  %232 = and i8 %231, 3
  store i8 1, i8* %4, align 2
  store i8 0, i8* %5, align 1
  store i8 1, i8* %6, align 1
  %233 = icmp eq i8 %232, 0
  %234 = icmp eq i8 %232, 1
  %235 = select i1 %234, i8* %5, i8* %6
  %236 = select i1 %233, i8* %4, i8* %235
  %237 = load i8, i8* %236, align 1, !range !4
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %216) #13
  tail call void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"* nonnull %216) #13
  %238 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %216, i64 0, i32 3, i32 0, i32 0, i32 0
  %239 = load %"class.blink::CollapsedBorderValues"*, %"class.blink::CollapsedBorderValues"** %238, align 8
  %240 = icmp eq %"class.blink::CollapsedBorderValues"* %239, null
  br i1 %240, label %249, label %241

241:                                              ; preds = %215
  %242 = getelementptr inbounds %"class.blink::CollapsedBorderValues", %"class.blink::CollapsedBorderValues"* %239, i64 0, i32 0, i64 2, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = and i32 %243, 33554431
  %245 = xor i8 %237, 1
  %246 = zext i8 %245 to i32
  %247 = add nuw nsw i32 %244, %246
  %248 = lshr i32 %247, 1
  br label %249

249:                                              ; preds = %215, %241
  %250 = phi i32 [ %248, %241 ], [ 0, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %251 = icmp slt i32 %217, %250
  %252 = select i1 %251, i32 %250, i32 %217
  %253 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %254 = bitcast %"class.blink::LayoutObject"** %253 to %"class.blink::LayoutTableCell"**
  %255 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %254, align 8
  %256 = icmp eq %"class.blink::LayoutTableCell"* %255, null
  br i1 %256, label %257, label %215

257:                                              ; preds = %249, %210, %198
  %258 = phi i32 [ %201, %198 ], [ %201, %210 ], [ %252, %249 ]
  %259 = add nsw i32 %258, %163
  %260 = icmp sgt i32 %259, 33554431
  br i1 %260, label %265, label %261

261:                                              ; preds = %257
  %262 = icmp slt i32 %259, -33554432
  %263 = shl i32 %259, 6
  %264 = select i1 %262, i32 -2147483648, i32 %263
  br label %265

265:                                              ; preds = %261, %257
  %266 = phi i32 [ 2147483647, %257 ], [ %264, %261 ]
  tail call void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"* %7, i32 %266) #13
  %267 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %268 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %267, i64 0, i32 0, i32 9
  %269 = bitcast [20 x i8]* %268 to i160*
  %270 = load i160, i160* %269, align 8
  %271 = and i160 %270, 15211807202738752817960438464512
  %272 = icmp eq i160 %271, 0
  %273 = select i1 %272, i32* %43, i32* %44
  %274 = load i32, i32* %273, align 4
  br i1 %260, label %282, label %275

275:                                              ; preds = %265
  %276 = icmp slt i32 %259, -33554432
  br i1 %276, label %280, label %277

277:                                              ; preds = %275
  %278 = shl i32 %259, 6
  %279 = icmp slt i32 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %275, %277
  %281 = phi i32 [ %278, %277 ], [ -2147483648, %275 ]
  br label %282

282:                                              ; preds = %265, %277, %280
  %283 = phi i32 [ %281, %280 ], [ %278, %277 ], [ 2147483647, %265 ]
  %284 = phi i32 [ -2147483648, %280 ], [ 2147483647, %277 ], [ 2147483647, %265 ]
  %285 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %274, i32 %283) #13
  %286 = extractvalue { i32, i1 } %285, 1
  %287 = extractvalue { i32, i1 } %285, 0
  %288 = select i1 %286, i32 %284, i32 %287, !prof !3
  br i1 %272, label %289, label %293

289:                                              ; preds = %282
  %290 = load i32, i32* %43, align 4
  %291 = icmp eq i32 %290, %288
  br i1 %291, label %297, label %292

292:                                              ; preds = %289
  store i32 %288, i32* %43, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %7) #13
  br label %297

293:                                              ; preds = %282
  %294 = load i32, i32* %44, align 4
  %295 = icmp eq i32 %294, %288
  br i1 %295, label %297, label %296

296:                                              ; preds = %293
  store i32 %288, i32* %44, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %7) #13
  br label %297

297:                                              ; preds = %289, %292, %293, %296
  %298 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* %2, %"class.blink::LayoutObject"* %298) #13
  %299 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %300 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %299 to i96*
  %301 = load i96, i96* %300, align 4
  %302 = and i96 %301, 63
  %303 = icmp eq i96 %302, 0
  br i1 %303, label %309, label %304

304:                                              ; preds = %297
  %305 = bitcast %"class.blink::LayoutTableRow"* %1 to void (%"class.blink::LayoutObject"*)***
  %306 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %305, align 8
  %307 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %306, i64 54
  %308 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %307, align 8
  tail call void %308(%"class.blink::LayoutObject"* %298) #13
  br label %309

309:                                              ; preds = %297, %304
  %310 = tail call i32 @_ZNK5blink18LayoutTableSection19LogicalHeightForRowERKNS_14LayoutTableRowE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableRow"* dereferenceable(272) %1)
  %311 = icmp sgt i32 %310, 33554431
  br i1 %311, label %316, label %312

312:                                              ; preds = %309
  %313 = icmp slt i32 %310, -33554432
  %314 = shl i32 %310, 6
  %315 = select i1 %313, i32 -2147483648, i32 %314
  br label %316

316:                                              ; preds = %312, %309
  %317 = phi i32 [ 2147483647, %309 ], [ %315, %312 ]
  %318 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %319 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %318, i64 0, i32 0, i32 9
  %320 = bitcast [20 x i8]* %319 to i160*
  %321 = load i160, i160* %320, align 8
  %322 = and i160 %321, 15211807202738752817960438464512
  %323 = icmp eq i160 %322, 0
  br i1 %323, label %324, label %329

324:                                              ; preds = %316
  %325 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, %317
  br i1 %327, label %334, label %328

328:                                              ; preds = %324
  store i32 %317, i32* %325, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %7) #13
  br label %334

329:                                              ; preds = %316
  %330 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %331 = load i32, i32* %330, align 4
  %332 = icmp eq i32 %331, %317
  br i1 %332, label %334, label %333

333:                                              ; preds = %329
  store i32 %317, i32* %330, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %7) #13
  br label %334

334:                                              ; preds = %93, %154, %324, %328, %329, %333, %33
  ret void
}

declare void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !11

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #13
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #13
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !11

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #13
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection41DistributeExtraLogicalHeightToPercentRowsERii(%"class.blink::LayoutTableSection"*, i32* nocapture dereferenceable(4), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %101, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %10 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %9, i32 %8) #13
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %1, align 4
  %13 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %9, i32 1) #13
  %14 = load i32, i32* %13, align 4
  %15 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %9, i32 0) #13
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %101, label %17

17:                                               ; preds = %5
  %18 = load i32, i32* %15, align 4
  %19 = sub nsw i32 %14, %18
  %20 = icmp slt i32 %2, 100
  %21 = add nsw i32 %12, %11
  %22 = sitofp i32 %21 to float
  %23 = add i32 %8, -1
  %24 = select i1 %20, i32 %2, i32 100
  br label %25

25:                                               ; preds = %17, %94
  %26 = phi i32 [ %95, %94 ], [ 0, %17 ]
  %27 = phi i32 [ %96, %94 ], [ %19, %17 ]
  %28 = phi i32 [ %82, %94 ], [ 0, %17 ]
  %29 = phi i32 [ %81, %94 ], [ %24, %17 ]
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %80

31:                                               ; preds = %25
  %32 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %26) #13
  %33 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %32, i64 0, i32 3, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %80

36:                                               ; preds = %31
  %37 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %26) #13
  %38 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %37, i64 0, i32 3
  %39 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %37, i64 0, i32 3, i32 3
  %40 = load i8, i8* %39, align 2, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.blink::Length"* %38 to float*
  %44 = load float, float* %43, align 4
  br label %49

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  br label %49

49:                                               ; preds = %42, %45
  %50 = phi float [ %44, %42 ], [ %48, %45 ]
  %51 = fmul float %50, %22
  %52 = fdiv float %51, 1.000000e+02
  %53 = sitofp i32 %27 to float
  %54 = fsub float %52, %53
  %55 = fptosi float %54 to i32
  %56 = load i32, i32* %1, align 4
  %57 = icmp sgt i32 %56, %55
  %58 = select i1 %57, i32 %55, i32 %56
  %59 = icmp sgt i32 %58, 0
  %60 = select i1 %59, i32 %58, i32 0
  %61 = add nsw i32 %60, %28
  %62 = sub nsw i32 %56, %60
  store i32 %62, i32* %1, align 4
  %63 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %26) #13
  %64 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %63, i64 0, i32 3
  %65 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %63, i64 0, i32 3, i32 3
  %66 = load i8, i8* %65, align 2, !range !4
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %49
  %69 = bitcast %"class.blink::Length"* %64 to float*
  %70 = load float, float* %69, align 4
  br label %75

71:                                               ; preds = %49
  %72 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %64, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = sitofp i32 %73 to float
  br label %75

75:                                               ; preds = %68, %71
  %76 = phi float [ %70, %68 ], [ %74, %71 ]
  %77 = sitofp i32 %29 to float
  %78 = fsub float %77, %76
  %79 = fptosi float %78 to i32
  br label %80

80:                                               ; preds = %75, %31, %25
  %81 = phi i32 [ %79, %75 ], [ %29, %31 ], [ %29, %25 ]
  %82 = phi i32 [ %61, %75 ], [ %28, %31 ], [ %28, %25 ]
  %83 = icmp ult i32 %26, %23
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = add nuw i32 %26, 1
  br label %94

86:                                               ; preds = %80
  %87 = add i32 %26, 2
  %88 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %9, i32 %87) #13
  %89 = load i32, i32* %88, align 4
  %90 = add nuw i32 %26, 1
  %91 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %9, i32 %90) #13
  %92 = load i32, i32* %91, align 4
  %93 = sub nsw i32 %89, %92
  br label %94

94:                                               ; preds = %84, %86
  %95 = phi i32 [ %85, %84 ], [ %90, %86 ]
  %96 = phi i32 [ %27, %84 ], [ %93, %86 ]
  %97 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %9, i32 %95) #13
  %98 = load i32, i32* %97, align 4
  %99 = add nsw i32 %98, %82
  store i32 %99, i32* %97, align 4
  %100 = icmp eq i32 %95, %8
  br i1 %100, label %101, label %25

101:                                              ; preds = %94, %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection38DistributeExtraLogicalHeightToAutoRowsERij(%"class.blink::LayoutTableSection"*, i32* nocapture dereferenceable(4), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  br label %12

12:                                               ; preds = %10, %28
  %13 = phi i32 [ %2, %10 ], [ %30, %28 ]
  %14 = phi i32 [ 0, %10 ], [ %31, %28 ]
  %15 = phi i32 [ 0, %10 ], [ %29, %28 ]
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %12
  %18 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %14) #13
  %19 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %18, i64 0, i32 3, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = load i32, i32* %1, align 4
  %24 = udiv i32 %23, %13
  %25 = add nsw i32 %24, %15
  %26 = sub nsw i32 %23, %24
  store i32 %26, i32* %1, align 4
  %27 = add i32 %13, -1
  br label %28

28:                                               ; preds = %12, %22, %17
  %29 = phi i32 [ %25, %22 ], [ %15, %17 ], [ %15, %12 ]
  %30 = phi i32 [ %27, %22 ], [ %13, %17 ], [ 0, %12 ]
  %31 = add nuw i32 %14, 1
  %32 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %11, i32 %31) #13
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, %29
  store i32 %34, i32* %32, align 4
  %35 = load i32, i32* %7, align 4
  %36 = icmp ult i32 %31, %35
  br i1 %36, label %12, label %37

37:                                               ; preds = %28, %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection37DistributeRemainingExtraLogicalHeightERi(%"class.blink::LayoutTableSection"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %55, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %9 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %4) #13
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %55, label %12

12:                                               ; preds = %7
  %13 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 0) #13
  %14 = load i32, i32* %13, align 4
  %15 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %4) #13
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %16, %14
  %18 = sitofp i32 %17 to float
  %19 = icmp eq i32 %17, 0
  br i1 %19, label %53, label %20

20:                                               ; preds = %12
  %21 = icmp eq i32 %4, 0
  %22 = load i32, i32* %1, align 4
  br i1 %21, label %23, label %27

23:                                               ; preds = %27, %20
  %24 = phi i32 [ 0, %20 ], [ %45, %27 ]
  %25 = phi i32 [ %22, %20 ], [ %51, %27 ]
  %26 = sub nsw i32 %25, %24
  br label %53

27:                                               ; preds = %20, %27
  %28 = phi i32 [ %51, %27 ], [ %22, %20 ]
  %29 = phi i32 [ %32, %27 ], [ 0, %20 ]
  %30 = phi i32 [ %47, %27 ], [ %14, %20 ]
  %31 = phi i32 [ %45, %27 ], [ 0, %20 ]
  %32 = add nuw i32 %29, 1
  %33 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %32) #13
  %34 = load i32, i32* %33, align 4
  %35 = sub nsw i32 %34, %30
  %36 = mul nsw i32 %35, %28
  %37 = sitofp i32 %36 to float
  %38 = fdiv float %37, %18
  %39 = sitofp i32 %31 to float
  %40 = tail call float @llvm.ceil.f32(float %38) #13
  %41 = fadd float %40, %39
  %42 = fptosi float %41 to i32
  %43 = load i32, i32* %1, align 4
  %44 = icmp slt i32 %43, %42
  %45 = select i1 %44, i32 %43, i32 %42
  %46 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %32) #13
  %47 = load i32, i32* %46, align 4
  %48 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %8, i32 %32) #13
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %45, %49
  store i32 %50, i32* %48, align 4
  %51 = load i32, i32* %1, align 4
  %52 = icmp eq i32 %32, %4
  br i1 %52, label %23, label %27

53:                                               ; preds = %12, %23
  %54 = phi i32 [ %26, %23 ], [ 0, %12 ]
  store i32 %54, i32* %1, align 4
  br label %55

55:                                               ; preds = %2, %7, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18LayoutTableSection34DistributeExtraLogicalHeightToRowsEi(%"class.blink::LayoutTableSection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %96, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %96, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %12 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %11, i32 %8) #13
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %19, label %96

19:                                               ; preds = %10, %15
  br label %58

20:                                               ; preds = %91
  %21 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #13
  store i32 %1, i32* %3, align 4
  call void @_ZN5blink18LayoutTableSection41DistributeExtraLogicalHeightToPercentRowsERii(%"class.blink::LayoutTableSection"* %0, i32* nonnull dereferenceable(4) %3, i32 %93)
  %22 = icmp eq i32 %92, 0
  br i1 %22, label %55, label %23

23:                                               ; preds = %20
  %24 = load i32, i32* %7, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = load i32, i32* %3, align 4
  br label %28

28:                                               ; preds = %26, %44
  %29 = phi i32 [ %45, %44 ], [ %27, %26 ]
  %30 = phi i32 [ %47, %44 ], [ %92, %26 ]
  %31 = phi i32 [ %48, %44 ], [ 0, %26 ]
  %32 = phi i32 [ %46, %44 ], [ 0, %26 ]
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %44, label %34

34:                                               ; preds = %28
  %35 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %31) #13
  %36 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %35, i64 0, i32 3, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %34
  %40 = udiv i32 %29, %30
  %41 = add nsw i32 %40, %32
  %42 = sub nsw i32 %29, %40
  %43 = add i32 %30, -1
  br label %44

44:                                               ; preds = %39, %34, %28
  %45 = phi i32 [ %42, %39 ], [ %29, %34 ], [ %29, %28 ]
  %46 = phi i32 [ %41, %39 ], [ %32, %34 ], [ %32, %28 ]
  %47 = phi i32 [ %43, %39 ], [ %30, %34 ], [ 0, %28 ]
  %48 = add nuw i32 %31, 1
  %49 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %11, i32 %48) #13
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %46
  store i32 %51, i32* %49, align 4
  %52 = load i32, i32* %7, align 4
  %53 = icmp ult i32 %48, %52
  br i1 %53, label %28, label %54

54:                                               ; preds = %44
  store i32 %45, i32* %3, align 4
  br label %55

55:                                               ; preds = %54, %20, %23
  call void @_ZN5blink18LayoutTableSection37DistributeRemainingExtraLogicalHeightERi(%"class.blink::LayoutTableSection"* %0, i32* nonnull dereferenceable(4) %3)
  %56 = load i32, i32* %3, align 4
  %57 = sub nsw i32 %1, %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #13
  br label %96

58:                                               ; preds = %19, %91
  %59 = phi i32 [ %94, %91 ], [ 0, %19 ]
  %60 = phi i32 [ %93, %91 ], [ 0, %19 ]
  %61 = phi i32 [ %92, %91 ], [ 0, %19 ]
  %62 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %59) #13
  %63 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %62, i64 0, i32 3, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  %67 = add i32 %61, 1
  br label %91

68:                                               ; preds = %58
  %69 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %59) #13
  %70 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %69, i64 0, i32 3, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 1
  br i1 %72, label %73, label %91

73:                                               ; preds = %68
  %74 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %59) #13
  %75 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %74, i64 0, i32 3
  %76 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %74, i64 0, i32 3, i32 3
  %77 = load i8, i8* %76, align 2, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.blink::Length"* %75 to float*
  %81 = load float, float* %80, align 4
  br label %86

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %75, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = sitofp i32 %84 to float
  br label %86

86:                                               ; preds = %79, %82
  %87 = phi float [ %81, %79 ], [ %85, %82 ]
  %88 = sitofp i32 %60 to float
  %89 = fadd float %87, %88
  %90 = fptosi float %89 to i32
  br label %91

91:                                               ; preds = %66, %86, %68
  %92 = phi i32 [ %67, %66 ], [ %61, %86 ], [ %61, %68 ]
  %93 = phi i32 [ %60, %66 ], [ %90, %86 ], [ %60, %68 ]
  %94 = add nuw i32 %59, 1
  %95 = icmp eq i32 %94, %8
  br i1 %95, label %20, label %58

96:                                               ; preds = %55, %5, %15, %2
  %97 = phi i32 [ 0, %2 ], [ %57, %55 ], [ %1, %5 ], [ %1, %15 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection10LayoutRowsEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.blink::LayoutAnalyzer::Scope", align 8
  %4 = alloca %"class.blink::LayoutState", align 8
  %5 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %6) #13
  %9 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %14 = bitcast %"class.blink::LayoutObject"** %13 to %"class.blink::LayoutTable"**
  %15 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %15, i64 0, i32 0, i32 0
  %17 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %16)
  %18 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 15211807202738752817960438464512
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %17
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  store i32 %17, i32* %26, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %12) #13
  br label %35

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %17
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  store i32 %17, i32* %31, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %12) #13
  br label %35

35:                                               ; preds = %25, %29, %30, %34
  %36 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %14, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %36, i64 0, i32 13
  %38 = load i16, i16* %37, align 2
  %39 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %39) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %4, %"class.blink::LayoutBox"* dereferenceable(216) %12, i1 zeroext false) #13
  %40 = icmp eq i32 %11, 0
  br i1 %40, label %215, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %43 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %45 = bitcast %"class.blink::ComputedStyle"** %18 to %"class.blink::ComputedStyleBase"**
  %46 = sext i16 %38 to i32
  br label %55

47:                                               ; preds = %212
  br i1 %40, label %215, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %50 = sext i16 %38 to i32
  %51 = bitcast %"class.blink::SubtreeLayoutScope"* %5 to i8*
  %52 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %5, i64 0, i32 0
  %53 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 6
  %54 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 5
  br label %266

55:                                               ; preds = %212, %41
  %56 = phi i32 [ 0, %41 ], [ %213, %212 ]
  %57 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %56) #13
  %58 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %57, i64 0, i32 1
  %59 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %58, align 8
  %60 = icmp eq %"class.blink::LayoutTableRow"* %59, null
  br i1 %60, label %212, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %59, i64 0, i32 0, i32 0
  %63 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %42, i32 %56) #13
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, 33554431
  br i1 %65, label %70, label %66

66:                                               ; preds = %61
  %67 = icmp slt i32 %64, -33554432
  %68 = shl i32 %64, 6
  %69 = select i1 %67, i32 -2147483648, i32 %68
  br label %70

70:                                               ; preds = %66, %61
  %71 = phi i32 [ 2147483647, %61 ], [ %69, %66 ]
  %72 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 0
  %79 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %59, i64 0, i32 0, i32 0, i32 2
  %80 = bitcast %"class.blink::LayoutRect"* %79 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = trunc i64 %81 to i32
  br i1 %78, label %83, label %92

83:                                               ; preds = %70
  %84 = icmp eq i32 %82, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %83
  %86 = lshr i64 %81, 32
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %71, %87
  br i1 %88, label %98, label %89

89:                                               ; preds = %85, %83
  %90 = zext i32 %71 to i64
  %91 = shl nuw i64 %90, 32
  store i64 %91, i64* %80, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %62) #13
  br label %98

92:                                               ; preds = %70
  %93 = icmp eq i32 %71, %82
  %94 = icmp ult i64 %81, 4294967296
  %95 = and i1 %94, %93
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = zext i32 %71 to i64
  store i64 %97, i64* %80, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %62) #13
  br label %98

98:                                               ; preds = %92, %85, %89, %96
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %99, i64 0, i32 0, i32 9
  %101 = bitcast [20 x i8]* %100 to i160*
  %102 = load i160, i160* %101, align 8
  %103 = and i160 %102, 15211807202738752817960438464512
  %104 = icmp eq i160 %103, 0
  %105 = select i1 %104, i32* %43, i32* %44
  %106 = load i32, i32* %105, align 4
  %107 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %108 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %107, i64 0, i32 0, i32 9
  %109 = bitcast [20 x i8]* %108 to i160*
  %110 = load i160, i160* %109, align 8
  %111 = and i160 %110, 15211807202738752817960438464512
  %112 = icmp eq i160 %111, 0
  br i1 %112, label %113, label %118

113:                                              ; preds = %98
  %114 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %59, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, %106
  br i1 %116, label %123, label %117

117:                                              ; preds = %113
  store i32 %106, i32* %114, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %62) #13
  br label %123

118:                                              ; preds = %98
  %119 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %59, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, %106
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  store i32 %106, i32* %119, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %62) #13
  br label %123

123:                                              ; preds = %113, %117, %118, %122
  %124 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %56) #13
  %125 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %124, i64 0, i32 1
  %126 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %125, align 8
  %127 = icmp eq %"class.blink::LayoutTableRow"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %123
  %129 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %56) #13
  %130 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %129, i64 0, i32 1
  %131 = bitcast %"class.blink::LayoutTableRow"** %130 to %"class.blink::LayoutObject"**
  %132 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 5, i32 0
  %134 = bitcast %"class.blink::ComputedStyle"** %133 to %"class.blink::ComputedStyleBase"**
  %135 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %135, i64 0, i32 9
  %137 = bitcast [20 x i8]* %136 to i160*
  %138 = load i160, i160* %137, align 8
  %139 = and i160 %138, 3802951800684688204490109616128
  %140 = icmp eq i160 %139, 2535301200456458802993406410752
  br i1 %140, label %161, label %141

141:                                              ; preds = %123, %128
  %142 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %45, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %142, i64 0, i32 9
  %144 = bitcast [20 x i8]* %143 to i160*
  %145 = load i160, i160* %144, align 8
  %146 = and i160 %145, 3802951800684688204490109616128
  %147 = icmp eq i160 %146, 2535301200456458802993406410752
  br i1 %147, label %161, label %148

148:                                              ; preds = %141
  %149 = add nuw i32 %56, 1
  %150 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %42, i32 %149) #13
  %151 = load i32, i32* %150, align 4
  %152 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %42, i32 %56) #13
  %153 = load i32, i32* %152, align 4
  %154 = sub nsw i32 %151, %153
  %155 = sub i32 %154, %46
  %156 = icmp sgt i32 %155, 33554431
  br i1 %156, label %161, label %157

157:                                              ; preds = %148
  %158 = icmp slt i32 %155, -33554432
  %159 = shl i32 %155, 6
  %160 = select i1 %158, i32 -2147483648, i32 %159
  br label %161

161:                                              ; preds = %148, %157, %128, %141
  %162 = phi i32 [ 0, %128 ], [ 0, %141 ], [ 2147483647, %148 ], [ %160, %157 ]
  %163 = load i8, i8* %39, align 8
  %164 = and i8 %163, 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %191, label %166

166:                                              ; preds = %161
  %167 = add nuw i32 %56, 1
  %168 = icmp ult i32 %167, %11
  br i1 %168, label %169, label %191

169:                                              ; preds = %166
  %170 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %167) #13
  %171 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %170, i64 0, i32 1
  %172 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %171, align 8
  %173 = icmp eq %"class.blink::LayoutTableRow"* %172, null
  br i1 %173, label %191, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %172, i64 0, i32 0, i32 0, i32 12, i32 0, i32 0
  %176 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %175, align 8
  %177 = icmp eq %"struct.blink::LayoutBoxRareData"* %176, null
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %176, i64 0, i32 8, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp sgt i32 %180, -1
  br i1 %181, label %182, label %184

182:                                              ; preds = %174, %178
  %183 = phi i32 [ %180, %178 ], [ 0, %174 ]
  br label %184

184:                                              ; preds = %178, %182
  %185 = phi i32 [ %183, %182 ], [ %180, %178 ]
  %186 = phi i32 [ -2147483648, %182 ], [ 2147483647, %178 ]
  %187 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %162, i32 %185) #13
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !3
  br label %191

191:                                              ; preds = %161, %184, %169, %166
  %192 = phi i32 [ %162, %161 ], [ %190, %184 ], [ %162, %169 ], [ %162, %166 ]
  %193 = icmp sgt i32 %192, 0
  %194 = select i1 %193, i32 %192, i32 0
  %195 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %196 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %195, i64 0, i32 0, i32 9
  %197 = bitcast [20 x i8]* %196 to i160*
  %198 = load i160, i160* %197, align 8
  %199 = and i160 %198, 15211807202738752817960438464512
  %200 = icmp eq i160 %199, 0
  br i1 %200, label %201, label %206

201:                                              ; preds = %191
  %202 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %59, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, %194
  br i1 %204, label %211, label %205

205:                                              ; preds = %201
  store i32 %194, i32* %202, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %62) #13
  br label %211

206:                                              ; preds = %191
  %207 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %59, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, %194
  br i1 %209, label %211, label %210

210:                                              ; preds = %206
  store i32 %194, i32* %207, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %62) #13
  br label %211

211:                                              ; preds = %201, %205, %206, %210
  call void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"* %62) #13
  br label %212

212:                                              ; preds = %55, %211
  %213 = add nuw i32 %56, 1
  %214 = icmp eq i32 %213, %11
  br i1 %214, label %47, label %55

215:                                              ; preds = %488, %35, %47
  %216 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %217 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %216, i32 %11) #13
  %218 = load i32, i32* %217, align 4
  %219 = icmp sgt i32 %218, 33554431
  br i1 %219, label %224, label %220

220:                                              ; preds = %215
  %221 = icmp slt i32 %218, -33554432
  %222 = shl i32 %218, 6
  %223 = select i1 %221, i32 -2147483648, i32 %222
  br label %224

224:                                              ; preds = %220, %215
  %225 = phi i32 [ 2147483647, %215 ], [ %223, %220 ]
  %226 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %227 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %226, i64 0, i32 0, i32 9
  %228 = bitcast [20 x i8]* %227 to i160*
  %229 = load i160, i160* %228, align 8
  %230 = and i160 %229, 15211807202738752817960438464512
  %231 = icmp eq i160 %230, 0
  br i1 %231, label %232, label %237

232:                                              ; preds = %224
  %233 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, %225
  br i1 %235, label %242, label %236

236:                                              ; preds = %232
  store i32 %225, i32* %233, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %12) #13
  br label %242

237:                                              ; preds = %224
  %238 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, %225
  br i1 %240, label %242, label %241

241:                                              ; preds = %237
  store i32 %225, i32* %238, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %12) #13
  br label %242

242:                                              ; preds = %232, %236, %237, %241
  call void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"* %12) #13
  %243 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %244 = bitcast %"class.blink::LayoutObject"** %243 to %"class.blink::LayoutTableRow"**
  %245 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %244, align 8
  %246 = icmp eq %"class.blink::LayoutTableRow"* %245, null
  br i1 %246, label %265, label %247

247:                                              ; preds = %242
  %248 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %249 = bitcast i64* %2 to i8*
  br label %250

250:                                              ; preds = %250, %247
  %251 = phi %"class.blink::LayoutTableRow"* [ %245, %247 ], [ %263, %250 ]
  %252 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %251, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #13
  %253 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %251, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %251, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = zext i32 %256 to i64
  %258 = shl nuw i64 %257, 32
  %259 = zext i32 %254 to i64
  %260 = or i64 %258, %259
  store i64 %260, i64* %2, align 8
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %12, %"class.blink::LayoutBox"* dereferenceable(216) %252, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %248) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #13
  %261 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %262 = bitcast %"class.blink::LayoutObject"** %261 to %"class.blink::LayoutTableRow"**
  %263 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %262, align 8
  %264 = icmp eq %"class.blink::LayoutTableRow"* %263, null
  br i1 %264, label %265, label %250

265:                                              ; preds = %250, %242
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %39) #13
  call void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void

266:                                              ; preds = %488, %48
  %267 = phi i32 [ 0, %48 ], [ %489, %488 ]
  %268 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %267) #13
  %269 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %268, i64 0, i32 1
  %270 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %269, align 8
  %271 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %267) #13
  %272 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %271, i64 0, i32 0, i32 0, i32 0, i32 2
  %273 = load i32, i32* %272, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %280, label %275

275:                                              ; preds = %266
  %276 = icmp ne %"class.blink::LayoutTableRow"* %270, null
  %277 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %278 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %270, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %279 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %270, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  br label %282

280:                                              ; preds = %484, %266
  %281 = icmp eq %"class.blink::LayoutTableRow"* %270, null
  br i1 %281, label %488, label %487

282:                                              ; preds = %484, %275
  %283 = phi i32 [ 0, %275 ], [ %485, %484 ]
  %284 = call %"class.blink::LayoutTableCell"* @_ZN5blink18LayoutTableSection17OriginatingCellAtEjj(%"class.blink::LayoutTableSection"* %0, i32 %267, i32 %283)
  %285 = icmp eq %"class.blink::LayoutTableCell"* %284, null
  br i1 %285, label %484, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %284, i64 0, i32 2
  %288 = load i32, i32* %287, align 8
  %289 = and i32 %288, 134217728
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %313, label %291

291:                                              ; preds = %286
  %292 = call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* nonnull %284) #13
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %307

294:                                              ; preds = %291
  %295 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %296 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %295, align 8
  %297 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %296, i64 0, i32 7
  %298 = bitcast %"class.blink::LayoutObject"** %297 to %"class.blink::LayoutTableSection"**
  %299 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %298, align 8
  %300 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %299, i64 0, i32 3, i32 0, i32 0, i32 2
  %301 = load i32, i32* %300, align 4
  %302 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %296, i64 3
  %303 = bitcast %"class.blink::LayoutObject"* %302 to i32*
  %304 = load i32, i32* %303, align 8
  %305 = and i32 %304, 2147483647
  %306 = sub i32 %301, %305
  br label %307

307:                                              ; preds = %291, %294
  %308 = phi i32 [ %306, %294 ], [ %292, %291 ]
  %309 = icmp ult i32 %308, 2147483646
  %310 = select i1 %309, i32 %308, i32 2147483646
  %311 = icmp ugt i32 %310, 1
  %312 = select i1 %311, i32 %310, i32 1
  br label %313

313:                                              ; preds = %307, %286
  %314 = phi i32 [ 1, %286 ], [ %312, %307 ]
  %315 = add i32 %314, %267
  %316 = icmp ult i32 %11, %315
  %317 = select i1 %316, i32 %11, i32 %315
  %318 = add i32 %317, -1
  %319 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %9, i32 %318) #13
  %320 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %319, i64 0, i32 1
  %321 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %320, align 8
  %322 = icmp ne %"class.blink::LayoutTableRow"* %321, null
  %323 = and i1 %276, %322
  br i1 %323, label %324, label %357

324:                                              ; preds = %313
  %325 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %277, align 8
  %326 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %325, i64 0, i32 0, i32 9
  %327 = bitcast [20 x i8]* %326 to i160*
  %328 = load i160, i160* %327, align 8
  %329 = and i160 %328, 15211807202738752817960438464512
  %330 = icmp eq i160 %329, 0
  %331 = select i1 %330, i32* %278, i32* %279
  %332 = load i32, i32* %331, align 4
  %333 = sdiv i32 %332, 64
  %334 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %321, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %335 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %334, align 8
  %336 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %335, i64 0, i32 0, i32 9
  %337 = bitcast [20 x i8]* %336 to i160*
  %338 = load i160, i160* %337, align 8
  %339 = and i160 %338, 15211807202738752817960438464512
  %340 = icmp eq i160 %339, 0
  %341 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %321, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %342 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %321, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %343 = select i1 %340, i32* %341, i32* %342
  %344 = load i32, i32* %343, align 4
  %345 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %321, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %346 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %321, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %347 = select i1 %340, i32* %345, i32* %346
  %348 = load i32, i32* %347, align 4
  %349 = icmp slt i32 %348, 0
  %350 = select i1 %349, i32 -2147483648, i32 2147483647
  %351 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %344, i32 %348) #13
  %352 = extractvalue { i32, i1 } %351, 1
  %353 = extractvalue { i32, i1 } %351, 0
  %354 = select i1 %352, i32 %350, i32 %353, !prof !3
  %355 = sdiv i32 %354, 64
  %356 = sub nsw i32 %355, %333
  br label %366

357:                                              ; preds = %313
  %358 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %49, i32 %317) #13
  %359 = load i32, i32* %358, align 4
  %360 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %49, i32 %267) #13
  %361 = load i32, i32* %360, align 4
  %362 = sub i32 %359, %50
  %363 = sub i32 %362, %361
  %364 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %49, i32 %267) #13
  %365 = load i32, i32* %364, align 4
  br label %366

366:                                              ; preds = %357, %324
  %367 = phi i32 [ %356, %324 ], [ %363, %357 ]
  %368 = phi i32 [ %333, %324 ], [ %365, %357 ]
  call void @_ZN5blink18LayoutTableSection20RelayoutCellIfFlexedERNS_15LayoutTableCellEii(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* nonnull dereferenceable(312) %284, i32 %267, i32 %367)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %52, align 8
  %369 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %5, %"class.blink::LayoutObject"* dereferenceable(88) %369) #13
  %370 = load i8, i8* %39, align 8
  %371 = and i8 %370, 1
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %389, label %373

373:                                              ; preds = %366
  %374 = icmp sgt i32 %368, 33554431
  br i1 %374, label %379, label %375

375:                                              ; preds = %373
  %376 = icmp slt i32 %368, -33554432
  %377 = shl i32 %368, 6
  %378 = select i1 %376, i32 -2147483648, i32 %377
  br label %379

379:                                              ; preds = %375, %373
  %380 = phi i32 [ 2147483647, %373 ], [ %378, %375 ]
  %381 = icmp sgt i32 %367, 33554431
  br i1 %381, label %386, label %382

382:                                              ; preds = %379
  %383 = icmp slt i32 %367, -33554432
  %384 = shl i32 %367, 6
  %385 = select i1 %383, i32 -2147483648, i32 %384
  br label %386

386:                                              ; preds = %382, %379
  %387 = phi i32 [ 2147483647, %379 ], [ %385, %382 ]
  %388 = call zeroext i1 @_ZNK5blink9LayoutBox19CrossesPageBoundaryENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %12, i32 %380, i32 %387) #13
  br i1 %388, label %398, label %389

389:                                              ; preds = %366, %386
  %390 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %391 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %390, align 8
  %392 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %391, i64 0, i32 0, i32 9
  %393 = bitcast [20 x i8]* %392 to i160*
  %394 = load i160, i160* %393, align 8
  %395 = lshr i160 %394, 64
  %396 = trunc i160 %395 to i32
  %397 = and i32 %396, 15
  br label %398

398:                                              ; preds = %386, %389
  %399 = phi i32 [ %397, %389 ], [ 6, %386 ]
  %400 = load i8, i8* %53, align 8, !range !4
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %438, label %402

402:                                              ; preds = %398
  %403 = load i32, i32* %287, align 8
  %404 = and i32 %403, 134217728
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %426, label %406

406:                                              ; preds = %402
  %407 = call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* nonnull %284) #13
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %422

409:                                              ; preds = %406
  %410 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %411 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %410, align 8
  %412 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %411, i64 0, i32 7
  %413 = bitcast %"class.blink::LayoutObject"** %412 to %"class.blink::LayoutTableSection"**
  %414 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %413, align 8
  %415 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %414, i64 0, i32 3, i32 0, i32 0, i32 2
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %411, i64 3
  %418 = bitcast %"class.blink::LayoutObject"* %417 to i32*
  %419 = load i32, i32* %418, align 8
  %420 = and i32 %419, 2147483647
  %421 = sub i32 %416, %420
  br label %422

422:                                              ; preds = %409, %406
  %423 = phi i32 [ %421, %409 ], [ %407, %406 ]
  %424 = icmp ult i32 %423, 2147483646
  %425 = select i1 %424, i32 %423, i32 2147483646
  br label %426

426:                                              ; preds = %402, %422
  %427 = phi i32 [ %425, %422 ], [ 1, %402 ]
  %428 = add i32 %427, %267
  %429 = icmp ult i32 %267, %428
  br i1 %429, label %430, label %438

430:                                              ; preds = %426, %430
  %431 = phi i32 [ %436, %430 ], [ %267, %426 ]
  %432 = phi i32 [ %435, %430 ], [ 0, %426 ]
  %433 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %54, i32 %431) #13
  %434 = load i32, i32* %433, align 4
  %435 = add nsw i32 %434, %432
  %436 = add i32 %431, 1
  %437 = icmp eq i32 %436, %428
  br i1 %437, label %438, label %430

438:                                              ; preds = %430, %426, %398
  %439 = phi i32 [ 0, %398 ], [ 0, %426 ], [ %435, %430 ]
  call void @_ZN5blink15LayoutTableCell23ComputeIntrinsicPaddingEiiNS_14EVerticalAlignERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTableCell"* nonnull %284, i32 %439, i32 %367, i32 %399, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %5) #13
  %440 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %284, i64 0, i32 0, i32 0, i32 0, i32 2
  %441 = bitcast %"class.blink::LayoutRect"* %440 to i64*
  %442 = load i64, i64* %441, align 8
  call void @_ZNK5blink18LayoutTableSection25SetLogicalPositionForCellEPNS_15LayoutTableCellEj(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* nonnull %284, i32 %283)
  %443 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %444 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %443 to i96*
  %445 = load i96, i96* %444, align 4
  %446 = and i96 %445, 63
  %447 = icmp eq i96 %446, 0
  br i1 %447, label %453, label %448

448:                                              ; preds = %438
  %449 = bitcast %"class.blink::LayoutTableCell"* %284 to void (%"class.blink::LayoutObject"*)***
  %450 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %449, align 8
  %451 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %450, i64 54
  %452 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %451, align 8
  call void %452(%"class.blink::LayoutObject"* %369) #13
  br label %453

453:                                              ; preds = %438, %448
  %454 = load i64, i64* %441, align 4
  %455 = trunc i64 %454 to i32
  %456 = lshr i64 %454, 32
  %457 = trunc i64 %456 to i32
  %458 = trunc i64 %442 to i32
  %459 = lshr i64 %442, 32
  %460 = trunc i64 %459 to i32
  %461 = icmp sgt i32 %458, -1
  %462 = select i1 %461, i32 -2147483648, i32 2147483647
  %463 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %455, i32 %458) #13
  %464 = extractvalue { i32, i1 } %463, 1
  %465 = extractvalue { i32, i1 } %463, 0
  %466 = select i1 %464, i32 %462, i32 %465, !prof !3
  %467 = icmp sgt i32 %460, -1
  %468 = select i1 %467, i32 -2147483648, i32 2147483647
  %469 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %457, i32 %460) #13
  %470 = extractvalue { i32, i1 } %469, 1
  %471 = extractvalue { i32, i1 } %469, 0
  %472 = select i1 %470, i32 %468, i32 %471, !prof !3
  %473 = or i32 %472, %466
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %483, label %475

475:                                              ; preds = %453
  %476 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %14, align 8
  %477 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %476, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %478 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %477 to i96*
  %479 = load i96, i96* %478, align 4
  %480 = and i96 %479, 3
  %481 = icmp eq i96 %480, 0
  br i1 %481, label %482, label %483

482:                                              ; preds = %475
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %369) #13
  br label %483

483:                                              ; preds = %475, %453, %482
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %484

484:                                              ; preds = %282, %483
  %485 = add nuw i32 %283, 1
  %486 = icmp eq i32 %485, %273
  br i1 %486, label %280, label %282

487:                                              ; preds = %280
  call void @_ZN5blink14LayoutTableRow21ComputeLayoutOverflowEv(%"class.blink::LayoutTableRow"* nonnull %270) #13
  br label %488

488:                                              ; preds = %280, %487
  %489 = add nuw i32 %267, 1
  %490 = icmp eq i32 %489, %11
  br i1 %490, label %215, label %266
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #13
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #13
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #13
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #13
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #13
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !3
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #13
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #13
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTableCell"* @_ZN5blink18LayoutTableSection17OriginatingCellAtEjj(%"class.blink::LayoutTableSection"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 1804, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #13
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  br label %11

11:                                               ; preds = %3, %8
  %12 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %13 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %12, i32 %1) #13
  %14 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, %2
  br i1 %16, label %17, label %43

17:                                               ; preds = %11
  %18 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %12, i32 %1) #13
  %19 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %18, i64 0, i32 0
  %20 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %19, i32 %2) #13
  %21 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %20, i64 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %43

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %42, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %20, i64 0, i32 0
  %30 = add i32 %26, -1
  %31 = call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"* %29, i32 %30) #13
  %32 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %31, align 8
  %33 = icmp eq %"class.blink::LayoutTableCell"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %36 = bitcast %"class.blink::LayoutObject"** %35 to %"class.blink::LayoutTableRow"**
  %37 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %37, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  %41 = icmp eq i32 %40, %1
  br i1 %41, label %43, label %42

42:                                               ; preds = %24, %34, %28
  br label %43

43:                                               ; preds = %17, %11, %34, %42
  %44 = phi %"class.blink::LayoutTableCell"* [ null, %42 ], [ %32, %34 ], [ null, %17 ], [ null, %11 ]
  ret %"class.blink::LayoutTableCell"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection20RelayoutCellIfFlexedERNS_15LayoutTableCellEii(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"* dereferenceable(312), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 0
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %14, i64 0, i32 3
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %14, i64 0, i32 8
  %17 = select i1 %12, %"class.blink::Length"* %15, %"class.blink::Length"* %16
  %18 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 2
  br i1 %20, label %65, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %22, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %24 = tail call i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"* %23) #13
  %25 = icmp eq i32 %24, -64
  br i1 %25, label %26, label %65

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %28 = bitcast %"class.blink::LayoutObject"** %27 to %"class.blink::LayoutTable"**
  %29 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 15211807202738752817960438464512
  %36 = icmp eq i160 %35, 0
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %38, i64 0, i32 3
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %38, i64 0, i32 8
  %41 = select i1 %36, %"class.blink::Length"* %39, %"class.blink::Length"* %40
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %231, label %45

45:                                               ; preds = %26
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8
  %50 = and i160 %49, 15211807202738752817960438464512
  %51 = icmp eq i160 %50, 0
  %52 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %53 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %54 = load i32, i32* %52, align 4
  %55 = load i32, i32* %53, align 4
  %56 = select i1 %51, i32 %54, i32 %55
  %57 = icmp sgt i32 %3, 33554431
  br i1 %57, label %62, label %58

58:                                               ; preds = %45
  %59 = icmp slt i32 %3, -33554432
  %60 = shl i32 %3, 6
  %61 = select i1 %59, i32 -2147483648, i32 %60
  br label %62

62:                                               ; preds = %45, %58
  %63 = phi i32 [ 2147483647, %45 ], [ %61, %58 ]
  %64 = icmp eq i32 %63, %56
  br i1 %64, label %231, label %65

65:                                               ; preds = %21, %4, %62
  %66 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 2
  %67 = load i16, i16* %66, align 8
  %68 = and i16 %67, 256
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %70, label %125

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %231, label %74

74:                                               ; preds = %70, %121
  %75 = phi %"class.blink::LayoutObject"* [ %123, %121 ], [ %72, %70 ]
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 4
  %77 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %76 to i96*
  %78 = load i96, i96* %77, align 4
  %79 = and i96 %78, 33554432
  %80 = icmp eq i96 %79, 0
  br i1 %80, label %81, label %121

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 5, i32 0
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %85 = bitcast [20 x i8]* %84 to i160*
  %86 = load i160, i160* %85, align 8
  %87 = and i160 %86, 15211807202738752817960438464512
  %88 = icmp eq i160 %87, 0
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 5, i32 0, i32 0
  %90 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %90, i64 0, i32 3
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %90, i64 0, i32 8
  %93 = select i1 %88, %"class.blink::Length"* %91, %"class.blink::Length"* %92
  %94 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %93, i64 0, i32 2
  %95 = load i8, i8* %94, align 1
  switch i8 %95, label %121 [
    i8 8, label %96
    i8 1, label %96
  ]

96:                                               ; preds = %81, %81
  %97 = bitcast %"class.blink::LayoutObject"* %75 to i1 (%"class.blink::LayoutObject"*, i32)***
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, i64 92
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, align 8
  %101 = tail call zeroext i1 %100(%"class.blink::LayoutObject"* nonnull %75, i32 44) #13
  br i1 %101, label %102, label %125

102:                                              ; preds = %96
  %103 = load i96, i96* %77, align 4
  %104 = and i96 %103, 113336795588871485128704
  %105 = icmp eq i96 %104, 75557863725914323419136
  br i1 %105, label %121, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 3, i32 7
  %108 = bitcast %"class.blink::LayoutObject"** %107 to %"class.blink::LayoutTableSection"**
  %109 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %108, align 8
  %110 = icmp eq %"class.blink::LayoutTableSection"* %109, null
  br i1 %110, label %111, label %125

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 3, i32 8
  %113 = bitcast %"class.blink::LayoutObject"** %112 to %"class.blink::LayoutTableSection"**
  %114 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %113, align 8
  %115 = icmp eq %"class.blink::LayoutTableSection"* %114, null
  br i1 %115, label %116, label %125

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 3, i32 9
  %118 = bitcast %"class.blink::LayoutObject"** %117 to %"class.blink::LayoutTableSection"**
  %119 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %118, align 8
  %120 = icmp eq %"class.blink::LayoutTableSection"* %119, null
  br i1 %120, label %121, label %125

121:                                              ; preds = %116, %74, %81, %102
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 9
  %123 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %122, align 8
  %124 = icmp eq %"class.blink::LayoutObject"* %123, null
  br i1 %124, label %231, label %74

125:                                              ; preds = %116, %106, %111, %96, %65
  %126 = icmp sgt i32 %3, 33554431
  br i1 %126, label %131, label %127

127:                                              ; preds = %125
  %128 = icmp slt i32 %3, -33554432
  %129 = shl i32 %3, 6
  %130 = select i1 %128, i32 -2147483648, i32 %129
  br label %131

131:                                              ; preds = %127, %125
  %132 = phi i32 [ 2147483647, %125 ], [ %130, %127 ]
  tail call void @_ZN5blink15LayoutTableCell37SetOverrideLogicalHeightFromRowHeightENS_10LayoutUnitE(%"class.blink::LayoutTableCell"* %1, i32 %132) #13
  %133 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"* %133) #13
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = lshr i160 %137, 64
  %139 = trunc i160 %138 to i32
  %140 = and i32 %139, 15
  switch i32 %140, label %231 [
    i32 5, label %141
    i32 4, label %141
    i32 3, label %141
    i32 2, label %141
    i32 0, label %141
    i32 9, label %141
  ]

141:                                              ; preds = %131, %131, %131, %131, %131, %131
  %142 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142)
  %143 = tail call i32 @_ZNK5blink15LayoutTableCell20CellBaselinePositionEv(%"class.blink::LayoutTableCell"* %1) #13
  store i32 %143, i32* %5, align 4
  %144 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8, !noalias !12
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %145, i64 0, i32 0, i32 9
  %147 = bitcast [20 x i8]* %146 to i160*
  %148 = load i160, i160* %147, align 8, !noalias !12
  %149 = lshr i160 %148, 102
  %150 = trunc i160 %149 to i8
  %151 = and i8 %150, 3
  %152 = bitcast %"class.blink::LayoutTableCell"* %1 to i8*
  switch i8 %151, label %153 [
    i8 0, label %162
    i8 1, label %154
  ]

153:                                              ; preds = %141
  br label %154

154:                                              ; preds = %153, %141
  %155 = phi { i64, i64 } [ { i64 993, i64 0 }, %153 ], [ { i64 1001, i64 0 }, %141 ]
  %156 = extractvalue { i64, i64 } %155, 0
  %157 = extractvalue { i64, i64 } %155, 1
  %158 = getelementptr inbounds i8, i8* %152, i64 %157
  %159 = bitcast i8* %158 to %"class.blink::LayoutBoxModelObject"*
  %160 = and i64 %156, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %172, label %162

162:                                              ; preds = %154, %141
  %163 = phi %"class.blink::LayoutBoxModelObject"* [ %159, %154 ], [ %144, %141 ]
  %164 = phi i8* [ %158, %154 ], [ %152, %141 ]
  %165 = phi i64 [ %156, %154 ], [ 977, %141 ]
  %166 = bitcast i8* %164 to i8**
  %167 = load i8*, i8** %166, align 8
  %168 = add i64 %165, -1
  %169 = getelementptr i8, i8* %167, i64 %168
  %170 = bitcast i8* %169 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %171 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %170, align 8
  br label %174

172:                                              ; preds = %154
  %173 = inttoptr i64 %156 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %174

174:                                              ; preds = %162, %172
  %175 = phi %"class.blink::LayoutBoxModelObject"* [ %163, %162 ], [ %159, %172 ]
  %176 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %171, %162 ], [ %173, %172 ]
  %177 = tail call i32 %176(%"class.blink::LayoutBoxModelObject"* %175) #13
  %178 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8, !noalias !15
  %179 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %178, i64 0, i32 0, i32 9
  %180 = bitcast [20 x i8]* %179 to i160*
  %181 = load i160, i160* %180, align 8, !noalias !15
  %182 = lshr i160 %181, 102
  %183 = trunc i160 %182 to i8
  %184 = and i8 %183, 3
  switch i8 %184, label %185 [
    i8 0, label %194
    i8 1, label %186
  ]

185:                                              ; preds = %174
  br label %186

186:                                              ; preds = %185, %174
  %187 = phi { i64, i64 } [ { i64 961, i64 0 }, %185 ], [ { i64 969, i64 0 }, %174 ]
  %188 = extractvalue { i64, i64 } %187, 0
  %189 = extractvalue { i64, i64 } %187, 1
  %190 = getelementptr inbounds i8, i8* %152, i64 %189
  %191 = bitcast i8* %190 to %"class.blink::LayoutBoxModelObject"*
  %192 = and i64 %188, 1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %204, label %194

194:                                              ; preds = %186, %174
  %195 = phi %"class.blink::LayoutBoxModelObject"* [ %191, %186 ], [ %144, %174 ]
  %196 = phi i8* [ %190, %186 ], [ %152, %174 ]
  %197 = phi i64 [ %188, %186 ], [ 945, %174 ]
  %198 = bitcast i8* %196 to i8**
  %199 = load i8*, i8** %198, align 8
  %200 = add i64 %197, -1
  %201 = getelementptr i8, i8* %199, i64 %200
  %202 = bitcast i8* %201 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %203 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %202, align 8
  br label %206

204:                                              ; preds = %186
  %205 = inttoptr i64 %188 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %206

206:                                              ; preds = %194, %204
  %207 = phi %"class.blink::LayoutBoxModelObject"* [ %195, %194 ], [ %191, %204 ]
  %208 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %203, %194 ], [ %205, %204 ]
  %209 = tail call i32 %208(%"class.blink::LayoutBoxModelObject"* %207) #13
  %210 = icmp slt i32 %209, 0
  %211 = select i1 %210, i32 -2147483648, i32 2147483647
  %212 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %177, i32 %209) #13
  %213 = extractvalue { i32, i1 } %212, 1
  %214 = extractvalue { i32, i1 } %212, 0
  %215 = select i1 %213, i32 %211, i32 %214, !prof !3
  %216 = icmp sgt i32 %143, %215
  br i1 %216, label %217, label %230

217:                                              ; preds = %206
  %218 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %219 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %218, i32 %2) #13
  %220 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %219, i64 0, i32 2
  %221 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %220, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = icmp slt i32 %222, %143
  %224 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %225 = select i1 %223, %"class.blink::LayoutUnit"* %224, %"class.blink::LayoutUnit"* %220
  %226 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %218, i32 %2) #13
  %227 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %225, i64 0, i32 0
  %228 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %226, i64 0, i32 2, i32 0
  %229 = load i32, i32* %227, align 4
  store i32 %229, i32* %228, align 8
  br label %230

230:                                              ; preds = %217, %206
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142)
  br label %231

231:                                              ; preds = %121, %70, %131, %26, %230, %62
  ret void
}

declare void @_ZN5blink15LayoutTableCell23ComputeIntrinsicPaddingEiiNS_14EVerticalAlignERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutTableCell"*, i32, i32, i32, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18LayoutTableSection25SetLogicalPositionForCellEPNS_15LayoutTableCellEj(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableCell"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %6 = bitcast %"class.blink::LayoutObject"** %5 to %"class.blink::LayoutTableRow"**
  %7 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 2147483647
  %11 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %4, i32 %10) #13
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 33554431
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = icmp slt i32 %12, -33554432
  %16 = shl i32 %12, 6
  %17 = select i1 %15, i32 -2147483648, i32 %16
  br label %18

18:                                               ; preds = %14, %3
  %19 = phi i32 [ 2147483647, %3 ], [ %17, %14 ]
  %20 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %21 = bitcast %"class.blink::LayoutObject"** %20 to %"class.blink::LayoutTable"**
  %22 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %22, i64 0, i32 12
  %24 = load i16, i16* %23, align 8
  %25 = bitcast %"class.blink::LayoutTableSection"* %0 to %"class.blink::LayoutTableBoxComponent"*
  %26 = bitcast %"class.blink::LayoutTableSection"* %0 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %27 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %27, i64 195
  %29 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %28, align 8
  %30 = tail call %"class.blink::LayoutTable"* %29(%"class.blink::LayoutTableBoxComponent"* %25) #13
  %31 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = and i160 %35, 41538374868278621028243970633760768
  %37 = icmp eq i160 %36, 0
  %38 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %21, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %38, i64 0, i32 3
  br i1 %37, label %93, label %40

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %38, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %39, i32 %42) #13
  %44 = load i32, i32* %43, align 4
  %45 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %21, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %45, i64 0, i32 3
  %47 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 33554431
  %50 = and i32 %48, 67108864
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %40
  %53 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* %1) #13
  br label %54

54:                                               ; preds = %40, %52
  %55 = phi i32 [ %53, %52 ], [ 1, %40 ]
  %56 = add i32 %55, %49
  %57 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %45, i64 0, i32 11
  %58 = load i32, i32* %57, align 4
  %59 = icmp ugt i32 %58, %56
  br i1 %59, label %81, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %45, i64 0, i32 2, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %45, i64 0, i32 2
  %64 = icmp ult i32 %58, %62
  br i1 %64, label %65, label %81

65:                                               ; preds = %60, %74
  %66 = phi i32 [ %78, %74 ], [ %58, %60 ]
  %67 = phi i32 [ %79, %74 ], [ %58, %60 ]
  %68 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2075"* %63, i32 %67) #13
  %69 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %66, -1
  %72 = add i32 %71, %70
  %73 = icmp ult i32 %72, %56
  br i1 %73, label %74, label %81

74:                                               ; preds = %65
  %75 = tail call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2075"* %63, i32 %67) #13
  %76 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, %66
  %79 = add i32 %67, 1
  %80 = icmp eq i32 %79, %62
  br i1 %80, label %81, label %65

81:                                               ; preds = %65, %74, %54, %60
  %82 = phi i32 [ %56, %54 ], [ %58, %60 ], [ %67, %65 ], [ %62, %74 ]
  %83 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %46, i32 %82) #13
  %84 = load i32, i32* %83, align 4
  %85 = sub nsw i32 %44, %84
  %86 = sext i16 %24 to i32
  %87 = add nsw i32 %85, %86
  %88 = icmp sgt i32 %87, 33554431
  br i1 %88, label %103, label %89

89:                                               ; preds = %81
  %90 = icmp slt i32 %87, -33554432
  %91 = shl i32 %87, 6
  %92 = select i1 %90, i32 -2147483648, i32 %91
  br label %103

93:                                               ; preds = %18
  %94 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %39, i32 %2) #13
  %95 = load i32, i32* %94, align 4
  %96 = sext i16 %24 to i32
  %97 = add nsw i32 %95, %96
  %98 = icmp sgt i32 %97, 33554431
  br i1 %98, label %103, label %99

99:                                               ; preds = %93
  %100 = icmp slt i32 %97, -33554432
  %101 = shl i32 %97, 6
  %102 = select i1 %100, i32 -2147483648, i32 %101
  br label %103

103:                                              ; preds = %99, %89, %93, %81
  %104 = phi i32 [ 2147483647, %81 ], [ 2147483647, %93 ], [ %92, %89 ], [ %102, %99 ]
  %105 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %107 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %107, i64 0, i32 0, i32 9
  %109 = bitcast [20 x i8]* %108 to i160*
  %110 = load i160, i160* %109, align 8
  %111 = and i160 %110, 15211807202738752817960438464512
  %112 = icmp eq i160 %111, 0
  br i1 %112, label %113, label %128

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %115 = bitcast %"class.blink::LayoutRect"* %114 to i64*
  %116 = load i64, i64* %115, align 4
  %117 = trunc i64 %116 to i32
  %118 = icmp eq i32 %104, %117
  br i1 %118, label %119, label %123

119:                                              ; preds = %113
  %120 = lshr i64 %116, 32
  %121 = trunc i64 %120 to i32
  %122 = icmp eq i32 %19, %121
  br i1 %122, label %143, label %123

123:                                              ; preds = %119, %113
  %124 = zext i32 %19 to i64
  %125 = shl nuw i64 %124, 32
  %126 = zext i32 %104 to i64
  %127 = or i64 %125, %126
  store i64 %127, i64* %115, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %105) #13
  br label %143

128:                                              ; preds = %103
  %129 = zext i32 %104 to i64
  %130 = shl nuw i64 %129, 32
  %131 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %132 = bitcast %"class.blink::LayoutRect"* %131 to i64*
  %133 = load i64, i64* %132, align 4
  %134 = trunc i64 %133 to i32
  %135 = icmp eq i32 %19, %134
  br i1 %135, label %136, label %140

136:                                              ; preds = %128
  %137 = lshr i64 %133, 32
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %104, %138
  br i1 %139, label %143, label %140

140:                                              ; preds = %136, %128
  %141 = zext i32 %19 to i64
  %142 = or i64 %130, %141
  store i64 %142, i64* %132, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %105) #13
  br label %143

143:                                              ; preds = %119, %123, %136, %140
  ret void
}

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink14LayoutTableRow21ComputeLayoutOverflowEv(%"class.blink::LayoutTableRow"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection36ComputeLayoutOverflowFromDescendantsEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"* %3) #13
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutTableRow"**
  %6 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutTableRow"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %10 = bitcast i64* %2 to i8*
  br label %12

11:                                               ; preds = %12, %1
  ret void

12:                                               ; preds = %8, %12
  %13 = phi %"class.blink::LayoutTableRow"* [ %6, %8 ], [ %25, %12 ]
  %14 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %13, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %15 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %13, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %13, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %16 to i64
  %22 = or i64 %20, %21
  store i64 %22, i64* %2, align 8
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %3, %"class.blink::LayoutBox"* dereferenceable(216) %14, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %23 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %24 = bitcast %"class.blink::LayoutObject"** %23 to %"class.blink::LayoutTableRow"**
  %25 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutTableRow"* %25, null
  br i1 %26, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection35UpdateLogicalWidthForCollapsedCellsERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutTableSection"*, %"class.WTF::Vector.2066"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_visibility_collapse_column_enabled_E, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %128, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %128, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %1, i64 0, i32 0, i32 0, i32 2
  br label %12

12:                                               ; preds = %18, %10
  %13 = phi i32 [ 0, %10 ], [ %19, %18 ]
  %14 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %13) #13
  %15 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %125, %12
  %19 = add nuw i32 %13, 1
  %20 = icmp eq i32 %19, %8
  br i1 %20, label %128, label %12

21:                                               ; preds = %12, %125
  %22 = phi i32 [ %126, %125 ], [ 0, %12 ]
  %23 = tail call %"class.blink::LayoutTableCell"* @_ZN5blink18LayoutTableSection17OriginatingCellAtEjj(%"class.blink::LayoutTableSection"* %0, i32 %13, i32 %22)
  %24 = icmp eq %"class.blink::LayoutTableCell"* %23, null
  br i1 %24, label %125, label %25

25:                                               ; preds = %21
  %26 = load i32, i32* %11, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZN5blink15LayoutTableCell28SetIsSpanningCollapsedColumnEb(%"class.blink::LayoutTableCell"* nonnull %23, i1 zeroext false) #13
  br label %125

29:                                               ; preds = %25
  %30 = tail call zeroext i1 @_ZNK5blink15LayoutTableCell22IsFirstColumnCollapsedEv(%"class.blink::LayoutTableCell"* nonnull %23) #13
  br i1 %30, label %31, label %50

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %125, label %44

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %32) #13
  br label %125

45:                                               ; preds = %31
  %46 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %125, label %49

49:                                               ; preds = %45
  store i32 0, i32* %46, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %32) #13
  br label %125

50:                                               ; preds = %29
  %51 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 67108864
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %125, label %55

55:                                               ; preds = %50
  %56 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* nonnull %23) #13
  %57 = icmp ugt i32 %56, 1
  br i1 %57, label %58, label %125

58:                                               ; preds = %55
  tail call void @_ZN5blink15LayoutTableCell28SetIsSpanningCollapsedColumnEb(%"class.blink::LayoutTableCell"* nonnull %23, i1 zeroext false) #13
  %59 = load i32, i32* %51, align 8
  %60 = and i32 %59, 67108864
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* nonnull %23) #13
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi i32 [ %63, %62 ], [ 1, %58 ]
  %66 = add i32 %65, %22
  %67 = icmp ult i32 %16, %66
  %68 = select i1 %67, i32 %16, i32 %66
  %69 = icmp ult i32 %22, %68
  br i1 %69, label %109, label %70

70:                                               ; preds = %109, %64
  %71 = phi i32 [ 0, %64 ], [ %114, %109 ]
  %72 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %74 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 9
  %76 = bitcast [20 x i8]* %75 to i160*
  %77 = load i160, i160* %76, align 8
  %78 = and i160 %77, 15211807202738752817960438464512
  %79 = icmp eq i160 %78, 0
  %80 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %82 = select i1 %79, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %71, 33554431
  br i1 %84, label %90, label %85

85:                                               ; preds = %70
  %86 = icmp slt i32 %71, -33554432
  br i1 %86, label %92, label %87

87:                                               ; preds = %85
  %88 = shl i32 %71, 6
  %89 = icmp sgt i32 %88, -1
  br i1 %89, label %90, label %92

90:                                               ; preds = %70, %87
  %91 = phi i32 [ %88, %87 ], [ 2147483647, %70 ]
  br label %92

92:                                               ; preds = %85, %87, %90
  %93 = phi i32 [ %91, %90 ], [ %88, %87 ], [ -2147483648, %85 ]
  %94 = phi i32 [ -2147483648, %90 ], [ 2147483647, %87 ], [ 2147483647, %85 ]
  %95 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %93) #13
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !3
  br i1 %79, label %99, label %103

99:                                               ; preds = %92
  %100 = load i32, i32* %80, align 4
  %101 = icmp eq i32 %100, %98
  br i1 %101, label %107, label %102

102:                                              ; preds = %99
  store i32 %98, i32* %80, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %72) #13
  br label %107

103:                                              ; preds = %92
  %104 = load i32, i32* %81, align 4
  %105 = icmp eq i32 %104, %98
  br i1 %105, label %107, label %106

106:                                              ; preds = %103
  store i32 %98, i32* %81, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %72) #13
  br label %107

107:                                              ; preds = %99, %102, %103, %106
  %108 = icmp eq i32 %71, 0
  br i1 %108, label %118, label %117

109:                                              ; preds = %64, %109
  %110 = phi i32 [ %115, %109 ], [ %22, %64 ]
  %111 = phi i32 [ %114, %109 ], [ 0, %64 ]
  %112 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %1, i32 %110) #13
  %113 = load i32, i32* %112, align 4
  %114 = add nsw i32 %113, %111
  %115 = add nuw i32 %110, 1
  %116 = icmp ult i32 %115, %68
  br i1 %116, label %109, label %70

117:                                              ; preds = %107
  tail call void @_ZN5blink15LayoutTableCell28SetIsSpanningCollapsedColumnEb(%"class.blink::LayoutTableCell"* nonnull %23, i1 zeroext true) #13
  br label %118

118:                                              ; preds = %107, %117
  %119 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %23, i64 0, i32 0
  %120 = tail call i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"* %72)
  %121 = bitcast %"class.blink::LayoutTableCell"* %23 to void (%"class.blink::LayoutBlockFlow"*, i32, i1)***
  %122 = load void (%"class.blink::LayoutBlockFlow"*, i32, i1)**, void (%"class.blink::LayoutBlockFlow"*, i32, i1)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*, i32, i1)*, void (%"class.blink::LayoutBlockFlow"*, i32, i1)** %122, i64 207
  %124 = load void (%"class.blink::LayoutBlockFlow"*, i32, i1)*, void (%"class.blink::LayoutBlockFlow"*, i32, i1)** %123, align 8
  tail call void %124(%"class.blink::LayoutBlockFlow"* %119, i32 %120, i1 zeroext false) #13
  br label %125

125:                                              ; preds = %50, %49, %45, %44, %40, %118, %55, %21, %28
  %126 = add nuw i32 %22, 1
  %127 = icmp eq i32 %126, %16
  br i1 %127, label %18, label %21

128:                                              ; preds = %18, %5, %2
  ret void
}

declare void @_ZN5blink15LayoutTableCell28SetIsSpanningCollapsedColumnEb(%"class.blink::LayoutTableCell"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15LayoutTableCell22IsFirstColumnCollapsedEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !18
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !18
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 993, i64 0 }, %12 ], [ { i64 1001, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 977, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #13
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 1190036353683150593851392
  %42 = icmp eq i160 %41, 340010386766614455386112
  br i1 %42, label %72, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 8589934592
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %43
  %50 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #13
  %51 = icmp eq %"class.blink::PaintLayerScrollableArea"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %49
  %53 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #13
  %54 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 3
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 1, i32 0, i32 0
  %60 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %59, align 8
  %61 = icmp eq %"class.blink::Scrollbar"* %60, null
  br i1 %61, label %62, label %79

62:                                               ; preds = %58, %52
  %63 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #13
  %64 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 3
  %65 = load i8, i8* %64, align 8
  %66 = and i8 %65, 2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %69, align 8
  %71 = icmp eq %"class.blink::Scrollbar"* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %33, %43, %62, %68
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 270215977642229760
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %49, %58, %68, %72
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 15211807202738752817960438464512
  %85 = icmp eq i160 %84, 5070602400912917605986812821504
  %86 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #13
  %87 = extractvalue { i64, i64 } %86, 0
  %88 = lshr i64 %87, 32
  %89 = select i1 %85, i64 %88, i64 %87
  %90 = trunc i64 %89 to i32
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  br label %93

93:                                               ; preds = %79, %72
  %94 = phi i32 [ 0, %72 ], [ %90, %79 ]
  %95 = phi i32 [ 2147483647, %72 ], [ %92, %79 ]
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %94) #13
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !3
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %101 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = trunc i96 %102 to i32
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %93
  %106 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  br label %109

107:                                              ; preds = %93
  %108 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi i32 [ %106, %105 ], [ %108, %107 ]
  %111 = icmp slt i32 %110, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %110) #13
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !3
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18LayoutTableSection21PaginationStrutForRowEPNS_14LayoutTableRowENS_10LayoutUnitE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableRow"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %5 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutTable"**
  %6 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %6, i64 0, i32 7
  %8 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutTableSection"* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %8, i64 0, i32 17
  %12 = load i8, i8* %11, align 4, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2147483647
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %14, %10, %3
  %20 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::LayoutTableRow"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %22 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %22, i64 176
  %24 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::LayoutBox"* %20, i32 0) #13
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %61, label %27

27:                                               ; preds = %14, %19
  %28 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %29 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %28) #13
  br i1 %29, label %30, label %61

30:                                               ; preds = %27
  %31 = tail call i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"* %28, i32 %2) #13
  %32 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = and i160 %36, 15211807202738752817960438464512
  %38 = icmp eq i160 %37, 0
  %39 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %40 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %41 = select i1 %38, i32* %39, i32* %40
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, %31
  br i1 %43, label %61, label %44

44:                                               ; preds = %30
  %45 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %28, i32 %2, i32 1) #13
  %46 = icmp slt i32 %45, %42
  br i1 %46, label %47, label %61

47:                                               ; preds = %44
  %48 = tail call i32 @_ZNK5blink9LayoutBox36CalculatePaginationStrutToFitContentENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %28, i32 %2, i32 %42) #13
  %49 = icmp eq i32 %48, %45
  %50 = icmp eq i32 %45, %31
  %51 = and i1 %50, %49
  br i1 %51, label %61, label %52

52:                                               ; preds = %47
  %53 = icmp sgt i32 %48, 2147483583
  br i1 %53, label %61, label %54, !prof !3

54:                                               ; preds = %52
  %55 = icmp sgt i32 %48, -1
  br i1 %55, label %56, label %59

56:                                               ; preds = %54
  %57 = add nuw nsw i32 %48, 63
  %58 = sdiv i32 %57, 64
  br label %61

59:                                               ; preds = %54
  %60 = sdiv i32 %48, 64
  br label %61

61:                                               ; preds = %44, %47, %30, %52, %56, %59, %27, %19
  %62 = phi i32 [ 0, %19 ], [ 0, %27 ], [ 0, %30 ], [ 0, %44 ], [ %58, %56 ], [ %60, %59 ], [ 33554431, %52 ], [ 0, %47 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18LayoutTableSection22IsRepeatingFooterGroupEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 4, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox36CalculatePaginationStrutToFitContentENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection36ComputeVisualOverflowFromDescendantsEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.blink::LayoutTableCell"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %6, align 8
  %8 = icmp eq %"struct.blink::BoxOverflowModel"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.blink::LayoutRect"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  br label %20

18:                                               ; preds = %9, %1
  %19 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  br label %20

20:                                               ; preds = %13, %18
  %21 = phi i64 [ %16, %13 ], [ 0, %18 ]
  %22 = phi %"class.blink::LayoutSize"* [ %17, %13 ], [ %19, %18 ]
  %23 = bitcast %"class.blink::LayoutSize"* %22 to i64*
  %24 = load i64, i64* %23, align 4
  tail call void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"* %5) #13
  %25 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 12
  %26 = getelementptr inbounds %"class.WTF::HashSet.2070", %"class.WTF::HashSet.2070"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %26, align 8
  %28 = icmp eq %"class.blink::LayoutTableCell"** %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 12, i32 0, i32 1
  %31 = bitcast %"class.blink::LayoutTableCell"** %27 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #13
  %32 = bitcast %"class.WTF::HashSet.2070"* %25 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store i32 0, i32* %30, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 12, i32 0, i32 2
  store i32 0, i32* %33, align 4
  br label %34

34:                                               ; preds = %20, %29
  %35 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 13
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %39 = bitcast %"class.blink::LayoutObject"** %38 to %"class.blink::LayoutTable"**
  %40 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = mul i32 %42, %37
  %44 = icmp ult i32 %43, 5625
  br i1 %44, label %49, label %45

45:                                               ; preds = %34
  %46 = uitofp i32 %43 to float
  %47 = fmul float %46, 0x3FB99999A0000000
  %48 = fptoui float %47 to i32
  br label %49

49:                                               ; preds = %34, %45
  %50 = phi i32 [ %48, %45 ], [ 0, %34 ]
  %51 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %52 = bitcast %"class.blink::LayoutObject"** %51 to %"class.blink::LayoutTableRow"**
  %53 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %52, align 8
  %54 = icmp eq %"class.blink::LayoutTableRow"* %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %49
  %56 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %57 = bitcast i64* %2 to i8*
  %58 = bitcast %"class.blink::LayoutTableCell"** %3 to i8*
  %59 = bitcast %"class.blink::LayoutTableCell"** %3 to %"class.blink::LayoutBox"**
  %60 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 12, i32 0, i32 2
  %61 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 12, i32 0, i32 1
  %62 = bitcast %"class.WTF::HashSet.2070"* %25 to i64*
  %63 = getelementptr inbounds %"class.WTF::HashSet.2070", %"class.WTF::HashSet.2070"* %25, i64 0, i32 0
  br label %102

64:                                               ; preds = %117, %49
  %65 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %6, align 8
  %66 = icmp eq %"struct.blink::BoxOverflowModel"* %65, null
  br i1 %66, label %76, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 4, !range !4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"class.blink::LayoutRect"* %72 to i64*
  %74 = load i64, i64* %73, align 4
  %75 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  br label %78

76:                                               ; preds = %67, %64
  %77 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi i64 [ %74, %71 ], [ 0, %76 ]
  %80 = phi %"class.blink::LayoutSize"* [ %75, %71 ], [ %77, %76 ]
  %81 = bitcast %"class.blink::LayoutSize"* %80 to i64*
  %82 = load i64, i64* %81, align 4
  %83 = trunc i64 %21 to i32
  %84 = lshr i64 %21, 32
  %85 = trunc i64 %84 to i32
  %86 = trunc i64 %79 to i32
  %87 = lshr i64 %79, 32
  %88 = trunc i64 %87 to i32
  %89 = icmp eq i32 %83, %86
  %90 = icmp eq i32 %85, %88
  %91 = and i1 %89, %90
  br i1 %91, label %92, label %154

92:                                               ; preds = %78
  %93 = trunc i64 %24 to i32
  %94 = trunc i64 %82 to i32
  %95 = icmp eq i32 %93, %94
  br i1 %95, label %96, label %154

96:                                               ; preds = %92
  %97 = lshr i64 %82, 32
  %98 = trunc i64 %97 to i32
  %99 = lshr i64 %24, 32
  %100 = trunc i64 %99 to i32
  %101 = icmp eq i32 %100, %98
  br i1 %101, label %155, label %154

102:                                              ; preds = %55, %117
  %103 = phi %"class.blink::LayoutTableRow"* [ %53, %55 ], [ %120, %117 ]
  %104 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %103, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #13
  %105 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %103, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %103, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i64
  %110 = shl nuw i64 %109, 32
  %111 = zext i32 %106 to i64
  %112 = or i64 %110, %111
  store i64 %112, i64* %2, align 8
  call void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %5, %"class.blink::LayoutBox"* dereferenceable(216) %104, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %56) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  %113 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %103, i64 0, i32 0, i32 1, i32 0
  %114 = bitcast %"class.blink::LayoutObject"** %113 to %"class.blink::LayoutTableCell"**
  %115 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %114, align 8
  store %"class.blink::LayoutTableCell"* %115, %"class.blink::LayoutTableCell"** %3, align 8
  %116 = icmp eq %"class.blink::LayoutTableCell"* %115, null
  br i1 %116, label %117, label %122

117:                                              ; preds = %148, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  %118 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %119 = bitcast %"class.blink::LayoutObject"** %118 to %"class.blink::LayoutTableRow"**
  %120 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %119, align 8
  %121 = icmp eq %"class.blink::LayoutTableRow"* %120, null
  br i1 %121, label %64, label %102

122:                                              ; preds = %102, %148
  %123 = phi %"class.blink::LayoutTableCell"* [ %152, %148 ], [ %115, %102 ]
  %124 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %124) #13
  br i1 %125, label %148, label %126

126:                                              ; preds = %122
  %127 = load i8, i8* %35, align 8, !range !4
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %148

129:                                              ; preds = %126
  %130 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %59, align 8
  %131 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 9, i32 0, i32 0, i32 0
  %132 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %131, align 8
  %133 = icmp eq %"struct.blink::BoxOverflowModel"* %132, null
  br i1 %133, label %148, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %132, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %136 = load i8, i8* %135, align 4, !range !4
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %134
  %139 = load i32, i32* %60, align 4
  %140 = icmp ult i32 %139, %50
  br i1 %140, label %146, label %141

141:                                              ; preds = %138
  store i8 1, i8* %35, align 8
  %142 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %26, align 8
  %143 = icmp eq %"class.blink::LayoutTableCell"** %142, null
  br i1 %143, label %148, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.blink::LayoutTableCell"** %142 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %145) #13
  store atomic i64 0, i64* %62 monotonic, align 8
  store i32 0, i32* %61, align 8
  store i32 0, i32* %60, align 4
  br label %148

146:                                              ; preds = %138
  %147 = call { %"class.blink::LayoutTableCell"**, i8 } @_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS2_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2071"* %63, %"class.blink::LayoutTableCell"** nonnull dereferenceable(8) %3, %"class.blink::LayoutTableCell"** nonnull dereferenceable(8) %3) #13
  br label %148

148:                                              ; preds = %134, %129, %144, %141, %126, %122, %146
  %149 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %3, align 8
  %150 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %151 = bitcast %"class.blink::LayoutObject"** %150 to %"class.blink::LayoutTableCell"**
  %152 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %151, align 8
  store %"class.blink::LayoutTableCell"* %152, %"class.blink::LayoutTableCell"** %3, align 8
  %153 = icmp eq %"class.blink::LayoutTableCell"* %152, null
  br i1 %153, label %117, label %122

154:                                              ; preds = %96, %78, %92
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %4) #13
  br label %155

155:                                              ; preds = %96, %154
  ret void
}

declare void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18LayoutTableSection7NumRowsEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink18LayoutTableSection17FirstRowInterfaceEv(%"class.blink::LayoutTableSection"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTableRow"**
  %4 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutTableRow"* %4, null
  %6 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %4, i64 0, i32 2
  %7 = select i1 %5, %"class.blink::LayoutNGTableRowInterface"* null, %"class.blink::LayoutNGTableRowInterface"* %6
  ret %"class.blink::LayoutNGTableRowInterface"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutNGTableRowInterface"* @_ZThn256_NK5blink18LayoutTableSection17FirstRowInterfaceEv(%"class.blink::LayoutTableSection"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 13, i32 1
  %4 = bitcast %"class.blink::LayoutSize"* %3 to %"class.blink::LayoutTableRow"**
  %5 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableRow"* %5, null
  %7 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %5, i64 0, i32 2
  %8 = select i1 %6, %"class.blink::LayoutNGTableRowInterface"* null, %"class.blink::LayoutNGTableRowInterface"* %7
  ret %"class.blink::LayoutNGTableRowInterface"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink18LayoutTableSection16LastRowInterfaceEv(%"class.blink::LayoutTableSection"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 1
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTableRow"**
  %4 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutTableRow"* %4, null
  %6 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %4, i64 0, i32 2
  %7 = select i1 %5, %"class.blink::LayoutNGTableRowInterface"* null, %"class.blink::LayoutNGTableRowInterface"* %6
  ret %"class.blink::LayoutNGTableRowInterface"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutNGTableRowInterface"* @_ZThn256_NK5blink18LayoutTableSection16LastRowInterfaceEv(%"class.blink::LayoutTableSection"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 14
  %4 = bitcast %"class.blink::LayoutRect"* %3 to %"class.blink::LayoutTableRow"**
  %5 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableRow"* %5, null
  %7 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %5, i64 0, i32 2
  %8 = select i1 %6, %"class.blink::LayoutNGTableRowInterface"* null, %"class.blink::LayoutNGTableRowInterface"* %7
  ret %"class.blink::LayoutNGTableRowInterface"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink18LayoutTableSection20RecalcLayoutOverflowEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %93

8:                                                ; preds = %1
  %9 = and i96 %5, -129
  store i96 %9, i96* %4, align 4
  %10 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %93, label %17

14:                                               ; preds = %63
  %15 = and i8 %64, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %93, label %67

17:                                               ; preds = %8, %63
  %18 = phi i8 [ %64, %63 ], [ 0, %8 ]
  %19 = phi i32 [ %65, %63 ], [ 0, %8 ]
  %20 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %10, i32 %19) #13
  %21 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutTableRow"* %22, null
  br i1 %23, label %63, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = trunc i96 %27 to i8
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %63

30:                                               ; preds = %24
  %31 = and i96 %27, -129
  store i96 %31, i96* %26, align 4
  %32 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %10, i32 %19) #13
  %33 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %32, i64 0, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %59, label %39

36:                                               ; preds = %54
  %37 = and i8 %55, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %59, label %58

39:                                               ; preds = %30, %54
  %40 = phi i32 [ %56, %54 ], [ 0, %30 ]
  %41 = phi i8 [ %55, %54 ], [ 0, %30 ]
  %42 = tail call %"class.blink::LayoutTableCell"* @_ZN5blink18LayoutTableSection17OriginatingCellAtEjj(%"class.blink::LayoutTableSection"* %0, i32 %19, i32 %40)
  %43 = icmp eq %"class.blink::LayoutTableCell"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %39
  %45 = bitcast %"class.blink::LayoutTableCell"* %42 to %"class.blink::LayoutBlock"*
  %46 = bitcast %"class.blink::LayoutTableCell"* %42 to i16 (%"class.blink::LayoutBlock"*)***
  %47 = load i16 (%"class.blink::LayoutBlock"*)**, i16 (%"class.blink::LayoutBlock"*)*** %46, align 8
  %48 = getelementptr inbounds i16 (%"class.blink::LayoutBlock"*)*, i16 (%"class.blink::LayoutBlock"*)** %47, i64 52
  %49 = load i16 (%"class.blink::LayoutBlock"*)*, i16 (%"class.blink::LayoutBlock"*)** %48, align 8
  %50 = tail call i16 %49(%"class.blink::LayoutBlock"* nonnull %45) #13
  %51 = trunc i16 %50 to i8
  %52 = or i8 %41, %51
  %53 = and i8 %52, 1
  br label %54

54:                                               ; preds = %39, %44
  %55 = phi i8 [ %53, %44 ], [ %41, %39 ]
  %56 = add nuw i32 %40, 1
  %57 = icmp eq i32 %56, %34
  br i1 %57, label %36, label %39

58:                                               ; preds = %36
  tail call void @_ZN5blink14LayoutTableRow21ComputeLayoutOverflowEv(%"class.blink::LayoutTableRow"* nonnull %22) #13
  br label %59

59:                                               ; preds = %30, %36, %58
  %60 = phi i8 [ 0, %36 ], [ 1, %58 ], [ 0, %30 ]
  %61 = and i8 %18, 1
  %62 = or i8 %60, %61
  br label %63

63:                                               ; preds = %24, %17, %59
  %64 = phi i8 [ %62, %59 ], [ %18, %17 ], [ %18, %24 ]
  %65 = add nuw i32 %19, 1
  %66 = icmp eq i32 %65, %12
  br i1 %66, label %14, label %17

67:                                               ; preds = %14
  %68 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"* %68) #13
  %69 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %70 = bitcast %"class.blink::LayoutObject"** %69 to %"class.blink::LayoutTableRow"**
  %71 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %70, align 8
  %72 = icmp eq %"class.blink::LayoutTableRow"* %71, null
  br i1 %72, label %93, label %73

73:                                               ; preds = %67
  %74 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %75 = bitcast i64* %2 to i8*
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi %"class.blink::LayoutTableRow"* [ %71, %73 ], [ %89, %76 ]
  %78 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %77, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13
  %79 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %77, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %77, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %80 to i64
  %86 = or i64 %84, %85
  store i64 %86, i64* %2, align 8
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %68, %"class.blink::LayoutBox"* dereferenceable(216) %78, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %74) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  %87 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %88 = bitcast %"class.blink::LayoutObject"** %87 to %"class.blink::LayoutTableRow"**
  %89 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %88, align 8
  %90 = icmp eq %"class.blink::LayoutTableRow"* %89, null
  br i1 %90, label %91, label %76

91:                                               ; preds = %76
  %92 = zext i8 %15 to i16
  br label %93

93:                                               ; preds = %8, %91, %14, %67, %1
  %94 = phi i16 [ 0, %1 ], [ 1, %67 ], [ 0, %14 ], [ %92, %91 ], [ 0, %8 ]
  ret i16 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection20RecalcVisualOverflowEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 4, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 1507, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #13
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %43, %9
  call void @_ZN5blink18LayoutTableSection36ComputeVisualOverflowFromDescendantsEv(%"class.blink::LayoutTableSection"* %0)
  %15 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"* %15) #13
  ret void

16:                                               ; preds = %9, %43
  %17 = phi i32 [ %44, %43 ], [ 0, %9 ]
  %18 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %10, i32 %17) #13
  %19 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutTableRow"* %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 4294967296
  %27 = icmp eq i96 %26, 0
  br i1 %27, label %42, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %29, align 8
  %31 = icmp eq %"struct.blink::FragmentData::RareData"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %33, align 8
  br label %35

35:                                               ; preds = %28, %32
  %36 = phi %"class.blink::PaintLayer"* [ %34, %32 ], [ null, %28 ]
  %37 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %36, i64 0, i32 1
  %38 = bitcast [6 x i8]* %37 to i48*
  %39 = load i48, i48* %38, align 1
  %40 = and i48 %39, 1
  %41 = icmp eq i48 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %35, %22
  call void @_ZN5blink14LayoutTableRow20RecalcVisualOverflowEv(%"class.blink::LayoutTableRow"* nonnull %20) #13
  br label %43

43:                                               ; preds = %35, %16, %42
  %44 = add nuw i32 %17, 1
  %45 = icmp eq i32 %44, %12
  br i1 %45, label %14, label %16
}

declare void @_ZN5blink14LayoutTableRow20RecalcVisualOverflowEv(%"class.blink::LayoutTableRow"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18LayoutTableSection20FirstLineBoxBaselineEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %151, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %2, i32 0) #13
  %8 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 2, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %30

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %13 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %12, i32 0) #13
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 33554431
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = icmp slt i32 %14, -33554432
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = shl i32 %14, 6
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16, %18
  %22 = phi i32 [ %19, %18 ], [ -2147483648, %16 ]
  br label %23

23:                                               ; preds = %11, %18, %21
  %24 = phi i32 [ %22, %21 ], [ %19, %18 ], [ 2147483647, %11 ]
  %25 = phi i32 [ -2147483648, %21 ], [ 2147483647, %18 ], [ 2147483647, %11 ]
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %24) #13
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !3
  br label %151

30:                                               ; preds = %6
  %31 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %2, i32 0) #13
  %32 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %32, align 8
  %34 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %31, i64 0, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %33, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %151, label %39

39:                                               ; preds = %30, %147
  %40 = phi i32 [ %148, %147 ], [ %9, %30 ]
  %41 = phi %"class.blink::TableGridCell"* [ %149, %147 ], [ %33, %30 ]
  %42 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %41, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %147, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %41, i64 0, i32 0
  %47 = add i32 %43, -1
  %48 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"* %46, i32 %47) #13
  %49 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %48, align 8
  %50 = icmp eq %"class.blink::LayoutTableCell"* %49, null
  br i1 %50, label %147, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %49, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8
  %58 = and i160 %57, 15211807202738752817960438464512
  %59 = icmp eq i160 %58, 0
  %60 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %49, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %49, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %62 = select i1 %59, i32* %60, i32* %61
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = lshr i160 %57, 102
  %66 = trunc i160 %65 to i8
  %67 = and i8 %66, 3
  %68 = bitcast %"class.blink::LayoutTableCell"* %49 to i8*
  switch i8 %67, label %69 [
    i8 0, label %78
    i8 1, label %70
  ]

69:                                               ; preds = %51
  br label %70

70:                                               ; preds = %69, %51
  %71 = phi { i64, i64 } [ { i64 993, i64 0 }, %69 ], [ { i64 1001, i64 0 }, %51 ]
  %72 = extractvalue { i64, i64 } %71, 0
  %73 = extractvalue { i64, i64 } %71, 1
  %74 = getelementptr inbounds i8, i8* %68, i64 %73
  %75 = bitcast i8* %74 to %"class.blink::LayoutBoxModelObject"*
  %76 = and i64 %72, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %70, %51
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %75, %70 ], [ %64, %51 ]
  %80 = phi i8* [ %74, %70 ], [ %68, %51 ]
  %81 = phi i64 [ %72, %70 ], [ 977, %51 ]
  %82 = bitcast i8* %80 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = add i64 %81, -1
  %85 = getelementptr i8, i8* %83, i64 %84
  %86 = bitcast i8* %85 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %87 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %86, align 8
  br label %90

88:                                               ; preds = %70
  %89 = inttoptr i64 %72 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %90

90:                                               ; preds = %78, %88
  %91 = phi %"class.blink::LayoutBoxModelObject"* [ %79, %78 ], [ %75, %88 ]
  %92 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %87, %78 ], [ %89, %88 ]
  %93 = tail call i32 %92(%"class.blink::LayoutBoxModelObject"* %91) #13
  %94 = icmp slt i32 %93, 0
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %93) #13
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !3
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %53, align 8, !noalias !21
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8, !noalias !21
  %104 = lshr i160 %103, 102
  %105 = trunc i160 %104 to i8
  %106 = and i8 %105, 3
  switch i8 %106, label %107 [
    i8 0, label %116
    i8 1, label %108
  ]

107:                                              ; preds = %90
  br label %108

108:                                              ; preds = %107, %90
  %109 = phi { i64, i64 } [ { i64 961, i64 0 }, %107 ], [ { i64 969, i64 0 }, %90 ]
  %110 = extractvalue { i64, i64 } %109, 0
  %111 = extractvalue { i64, i64 } %109, 1
  %112 = getelementptr inbounds i8, i8* %68, i64 %111
  %113 = bitcast i8* %112 to %"class.blink::LayoutBoxModelObject"*
  %114 = and i64 %110, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %126, label %116

116:                                              ; preds = %108, %90
  %117 = phi %"class.blink::LayoutBoxModelObject"* [ %113, %108 ], [ %64, %90 ]
  %118 = phi i8* [ %112, %108 ], [ %68, %90 ]
  %119 = phi i64 [ %110, %108 ], [ 945, %90 ]
  %120 = bitcast i8* %118 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = add i64 %119, -1
  %123 = getelementptr i8, i8* %121, i64 %122
  %124 = bitcast i8* %123 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %125 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %124, align 8
  br label %128

126:                                              ; preds = %108
  %127 = inttoptr i64 %110 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %128

128:                                              ; preds = %116, %126
  %129 = phi %"class.blink::LayoutBoxModelObject"* [ %117, %116 ], [ %113, %126 ]
  %130 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %125, %116 ], [ %127, %126 ]
  %131 = tail call i32 %130(%"class.blink::LayoutBoxModelObject"* %129) #13
  %132 = icmp slt i32 %131, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %131) #13
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !3
  %138 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %52)
  %139 = icmp slt i32 %138, 0
  %140 = select i1 %139, i32 -2147483648, i32 2147483647
  %141 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %137, i32 %138) #13
  %142 = extractvalue { i32, i1 } %141, 1
  %143 = extractvalue { i32, i1 } %141, 0
  %144 = select i1 %142, i32 %140, i32 %143, !prof !3
  %145 = icmp slt i32 %40, %144
  %146 = select i1 %145, i32 %144, i32 %40
  br label %147

147:                                              ; preds = %39, %45, %128
  %148 = phi i32 [ %40, %39 ], [ %40, %45 ], [ %146, %128 ]
  %149 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %41, i64 1
  %150 = icmp eq %"class.blink::TableGridCell"* %149, %37
  br i1 %150, label %151, label %39

151:                                              ; preds = %147, %23, %30, %1
  %152 = phi i32 [ -64, %1 ], [ %29, %23 ], [ %9, %30 ], [ %148, %147 ]
  ret i32 %152
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 118
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #13
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #13
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 119
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #13
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #13
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 120
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #13
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !3
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 121
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #13
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #13
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18LayoutTableSection5PaintERKNS_9PaintInfoE(%"class.blink::LayoutTableSection"*, %"struct.blink::PaintInfo"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TableSectionPainter", align 8
  %4 = bitcast %"class.blink::TableSectionPainter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::TableSectionPainter", %"class.blink::TableSectionPainter"* %3, i64 0, i32 0
  store %"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableSection"** %5, align 8
  call void @_ZN5blink19TableSectionPainter5PaintERKNS_9PaintInfoE(%"class.blink::TableSectionPainter"* nonnull %3, %"struct.blink::PaintInfo"* %1) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

declare void @_ZN5blink19TableSectionPainter5PaintERKNS_9PaintInfoE(%"class.blink::TableSectionPainter"*, %"struct.blink::PaintInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink18LayoutTableSection37LogicalRectForWritingModeAndDirectionERKNS_12PhysicalRectE(%"class.blink::LayoutTableSection"*, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 5070602400912917605986812821504
  %10 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  br i1 %9, label %13, label %21, !prof !3

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %12, align 4
  %16 = bitcast %"class.blink::LayoutTableSection"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %17 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %17, i64 106
  %19 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::LayoutObject"* %14, i32 %11, i32 %15, %"class.blink::LayoutBox"* null) #13
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ %11, %2 ]
  %23 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %12, align 4
  %27 = load i32, i32* %24, align 4
  %28 = bitcast %"class.blink::LayoutTableSection"* %0 to %"class.blink::LayoutTableBoxComponent"*
  %29 = bitcast %"class.blink::LayoutTableSection"* %0 to %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)***
  %30 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %30, i64 195
  %32 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %31, align 8
  %33 = tail call %"class.blink::LayoutTable"* %32(%"class.blink::LayoutTableBoxComponent"* %28) #13
  %34 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 15211807202738752817960438464512
  %40 = icmp eq i160 %39, 0
  %41 = select i1 %40, i32 %26, i32 %27
  %42 = select i1 %40, i32 %25, i32 %22
  %43 = select i1 %40, i32 %22, i32 %25
  %44 = select i1 %40, i32 %27, i32 %26
  %45 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %46 = bitcast %"class.blink::LayoutObject"** %45 to %"class.blink::LayoutTable"**
  %47 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %46, align 8
  %48 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)**, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*** %29, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %48, i64 195
  %50 = load %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)*, %"class.blink::LayoutTable"* (%"class.blink::LayoutTableBoxComponent"*)** %49, align 8
  %51 = tail call %"class.blink::LayoutTable"* %50(%"class.blink::LayoutTableBoxComponent"* %28) #13
  %52 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = and i160 %56, 41538374868278621028243970633760768
  %58 = icmp eq i160 %57, 0
  br i1 %58, label %85, label %59

59:                                               ; preds = %21
  %60 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %47, i64 0, i32 3
  %61 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %47, i64 0, i32 3, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, -1
  %64 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %60, i32 %63) #13
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %41, 0
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %41) #13
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !3
  %72 = icmp sgt i32 %65, 33554431
  br i1 %72, label %77, label %73

73:                                               ; preds = %59
  %74 = icmp slt i32 %65, -33554432
  %75 = shl i32 %65, 6
  %76 = select i1 %74, i32 -2147483648, i32 %75
  br label %77

77:                                               ; preds = %59, %73
  %78 = phi i32 [ 2147483647, %59 ], [ %76, %73 ]
  %79 = icmp sgt i32 %71, -1
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %78, i32 %71) #13
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !3
  br label %85

85:                                               ; preds = %77, %21
  %86 = phi i32 [ %43, %21 ], [ %84, %77 ]
  %87 = zext i32 %42 to i64
  %88 = shl nuw i64 %87, 32
  %89 = zext i32 %86 to i64
  %90 = or i64 %88, %89
  %91 = insertvalue { i64, i64 } undef, i64 %90, 0
  %92 = zext i32 %44 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %41 to i64
  %95 = or i64 %93, %94
  %96 = insertvalue { i64, i64 } %91, i64 %95, 1
  ret { i64, i64 } %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18LayoutTableSection30DirtiedRowsAndEffectiveColumnsERKNS_10LayoutRectERNS_8CellSpanES5_(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutRect"* nocapture readonly dereferenceable(16), %"class.blink::CellSpan"* nocapture dereferenceable(8), %"class.blink::CellSpan"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::CellSpan"* %2 to i64*
  store i64 0, i64* %10, align 4
  %11 = bitcast %"class.blink::CellSpan"* %3 to i64*
  store i64 4294967297, i64* %11, align 4
  br label %198

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 13
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = zext i32 %7 to i64
  %18 = shl nuw i64 %17, 32
  %19 = bitcast %"class.blink::CellSpan"* %2 to i64*
  store i64 %18, i64* %19, align 4
  %20 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %21 = bitcast %"class.blink::LayoutObject"** %20 to %"class.blink::LayoutTable"**
  %22 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %22, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = bitcast %"class.blink::CellSpan"* %3 to i64*
  store i64 %26, i64* %27, align 4
  br label %198

28:                                               ; preds = %12
  %29 = tail call i64 @_ZNK5blink18LayoutTableSection11SpannedRowsERKNS_10LayoutRectE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutRect"* dereferenceable(16) %1)
  %30 = bitcast %"class.blink::CellSpan"* %2 to i64*
  store i64 %29, i64* %30, align 4
  %31 = tail call i64 @_ZNK5blink18LayoutTableSection23SpannedEffectiveColumnsERKNS_10LayoutRectE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutRect"* dereferenceable(16) %1)
  %32 = bitcast %"class.blink::CellSpan"* %3 to i64*
  store i64 %31, i64* %32, align 4
  %33 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %34 = bitcast %"class.blink::LayoutObject"** %33 to %"class.blink::LayoutTable"**
  %35 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %37 = bitcast %"class.blink::ComputedStyle"** %36 to %"class.blink::ComputedStyleBase"**
  %38 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = and i160 %41, 81129638414606681695789005144064
  %43 = icmp eq i160 %42, 0
  br i1 %43, label %44, label %72

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %2, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = add i32 %46, -1
  store i32 %49, i32* %45, align 4
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %2, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* %6, align 4
  %54 = icmp ult i32 %52, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = add nuw i32 %52, 1
  store i32 %56, i32* %51, align 4
  br label %57

57:                                               ; preds = %55, %50
  %58 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %3, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = add i32 %59, -1
  store i32 %62, i32* %58, align 4
  br label %63

63:                                               ; preds = %57, %61
  %64 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %3, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %34, align 8
  %67 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %66, i64 0, i32 2, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = icmp ult i32 %65, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = add nuw i32 %65, 1
  store i32 %71, i32* %64, align 4
  br label %72

72:                                               ; preds = %63, %70, %28
  %73 = load i32, i32* %6, align 4
  tail call void @_ZN5blink8CellSpan17EnsureConsistencyEj(%"class.blink::CellSpan"* %2, i32 %73)
  %74 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %34, align 8
  %75 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %74, i64 0, i32 2, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  tail call void @_ZN5blink8CellSpan17EnsureConsistencyEj(%"class.blink::CellSpan"* %3, i32 %76)
  %77 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 15
  %78 = load i8, i8* %77, align 2, !range !4
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %198, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %2, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %146, label %84

84:                                               ; preds = %80
  %85 = load i32, i32* %6, align 4
  %86 = icmp ult i32 %82, %85
  br i1 %86, label %87, label %146

87:                                               ; preds = %84
  %88 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %5, i32 %82) #13
  %89 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %88, i64 0, i32 0, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* %81, align 4
  %92 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %3, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %3, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp ult i32 %90, %95
  %97 = select i1 %96, i32 %90, i32 %95
  %98 = icmp ult i32 %93, %97
  br i1 %98, label %107, label %99

99:                                               ; preds = %137, %87
  %100 = phi i32 [ %91, %87 ], [ %138, %137 ]
  %101 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %2, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = shl nuw i64 %103, 32
  %105 = zext i32 %100 to i64
  %106 = or i64 %104, %105
  store i64 %106, i64* %30, align 4
  br label %146

107:                                              ; preds = %87, %144
  %108 = phi i32 [ %145, %144 ], [ %91, %87 ]
  %109 = phi i32 [ %139, %144 ], [ %93, %87 ]
  %110 = phi i32 [ %138, %144 ], [ %91, %87 ]
  %111 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %5, i32 %108) #13
  %112 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %111, i64 0, i32 0
  %113 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZNK3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %112, i32 %109) #13
  %114 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %114, align 8
  %116 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %113, i64 0, i32 0, i32 0, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %115, i64 %118
  %120 = icmp eq i32 %117, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %107, %121
  %122 = phi %"class.blink::LayoutTableCell"** [ %134, %121 ], [ %115, %107 ]
  %123 = phi i32 [ %132, %121 ], [ %110, %107 ]
  %124 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %122, align 8
  %125 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %126 = bitcast %"class.blink::LayoutObject"** %125 to %"class.blink::LayoutTableRow"**
  %127 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %127, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 2147483647
  %131 = icmp ult i32 %130, %123
  %132 = select i1 %131, i32 %130, i32 %123
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %122, i64 1
  %135 = icmp eq %"class.blink::LayoutTableCell"** %134, %119
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %121

137:                                              ; preds = %121, %107
  %138 = phi i32 [ %110, %107 ], [ %132, %121 ]
  %139 = add nuw i32 %109, 1
  %140 = load i32, i32* %94, align 4
  %141 = icmp ult i32 %90, %140
  %142 = select i1 %141, i32 %90, i32 %140
  %143 = icmp ult i32 %139, %142
  br i1 %143, label %144, label %99

144:                                              ; preds = %137
  %145 = load i32, i32* %81, align 4
  br label %107

146:                                              ; preds = %80, %99, %84
  %147 = phi i32 [ 0, %80 ], [ %100, %99 ], [ %82, %84 ]
  %148 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %3, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %198, label %151

151:                                              ; preds = %146
  %152 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %34, align 8
  %153 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %152, i64 0, i32 2, i32 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = icmp ult i32 %149, %154
  br i1 %155, label %156, label %198

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %2, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = icmp ult i32 %147, %158
  br i1 %159, label %160, label %190

160:                                              ; preds = %156, %185
  %161 = phi i32 [ %187, %185 ], [ %147, %156 ]
  %162 = phi i32 [ %186, %185 ], [ %149, %156 ]
  %163 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %5, i32 %161) #13
  %164 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %163, i64 0, i32 0
  %165 = load i32, i32* %148, align 4
  %166 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %163, i64 0, i32 0, i32 0, i32 0, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = icmp ult i32 %165, %167
  br i1 %168, label %169, label %185

169:                                              ; preds = %160
  %170 = icmp eq i32 %165, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %169, %177
  %172 = phi i32 [ %178, %177 ], [ %165, %169 ]
  %173 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZNK3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %164, i32 %172) #13
  %174 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %173, i64 0, i32 1
  %175 = load i8, i8* %174, align 8, !range !4
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %171
  %178 = add i32 %172, -1
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %171

180:                                              ; preds = %177, %171, %169
  %181 = phi i32 [ 0, %169 ], [ %172, %171 ], [ 0, %177 ]
  %182 = icmp ult i32 %162, %181
  %183 = select i1 %182, i32 %162, i32 %181
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %190, label %185

185:                                              ; preds = %180, %160
  %186 = phi i32 [ %183, %180 ], [ %162, %160 ]
  %187 = add nuw i32 %161, 1
  %188 = load i32, i32* %157, align 4
  %189 = icmp ult i32 %187, %188
  br i1 %189, label %160, label %190

190:                                              ; preds = %185, %180, %156
  %191 = phi i32 [ %149, %156 ], [ 0, %180 ], [ %186, %185 ]
  %192 = getelementptr inbounds %"class.blink::CellSpan", %"class.blink::CellSpan"* %3, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i64
  %195 = shl nuw i64 %194, 32
  %196 = zext i32 %191 to i64
  %197 = or i64 %195, %196
  store i64 %197, i64* %32, align 4
  br label %198

198:                                              ; preds = %146, %72, %9, %16, %190, %151
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink18LayoutTableSection11SpannedRowsERKNS_10LayoutRectE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = ptrtoint i32* %5 to i64
  %11 = icmp eq i32 %7, 0
  br i1 %11, label %36, label %12

12:                                               ; preds = %2
  %13 = zext i32 %7 to i64
  br label %14

14:                                               ; preds = %25, %12
  %15 = phi i64 [ %13, %12 ], [ %32, %25 ]
  %16 = phi i32* [ %5, %12 ], [ %31, %25 ]
  %17 = lshr i64 %15, 1
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 33554431
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = icmp slt i32 %19, -33554432
  %23 = shl i32 %19, 6
  %24 = select i1 %22, i32 -2147483648, i32 %23
  br label %25

25:                                               ; preds = %21, %14
  %26 = phi i32 [ 2147483647, %14 ], [ %24, %21 ]
  %27 = icmp slt i32 %9, %26
  %28 = getelementptr inbounds i32, i32* %18, i64 1
  %29 = xor i64 %17, -1
  %30 = add i64 %15, %29
  %31 = select i1 %27, i32* %16, i32* %28
  %32 = select i1 %27, i64 %17, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %14

34:                                               ; preds = %25
  %35 = ptrtoint i32* %31 to i64
  br label %36

36:                                               ; preds = %34, %2
  %37 = phi i64 [ %35, %34 ], [ %10, %2 ]
  %38 = sub i64 %37, %10
  %39 = lshr exact i64 %38, 2
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %7, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = add i32 %7, -1
  br label %109

44:                                               ; preds = %36
  %45 = icmp eq i32 %40, 0
  %46 = add i32 %40, -1
  %47 = select i1 %45, i32 0, i32 %46
  %48 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %3, i32 %40) #13
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* %8, align 4
  %51 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 %52) #13
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !3
  %59 = icmp sgt i32 %49, 33554431
  br i1 %59, label %109, label %60

60:                                               ; preds = %44
  %61 = icmp slt i32 %49, -33554432
  %62 = shl i32 %49, 6
  %63 = select i1 %61, i32 -2147483648, i32 %62
  %64 = icmp slt i32 %63, %58
  br i1 %64, label %65, label %109

65:                                               ; preds = %60
  %66 = load i32*, i32** %4, align 8
  %67 = and i64 %39, 4294967295
  %68 = getelementptr inbounds i32, i32* %66, i64 %67
  %69 = load i32, i32* %6, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %66, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = ptrtoint i32* %68 to i64
  %74 = sub i64 %72, %73
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %100, label %76

76:                                               ; preds = %65
  %77 = ashr exact i64 %74, 2
  br label %78

78:                                               ; preds = %89, %76
  %79 = phi i64 [ %77, %76 ], [ %96, %89 ]
  %80 = phi i32* [ %68, %76 ], [ %95, %89 ]
  %81 = lshr i64 %79, 1
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, 33554431
  br i1 %84, label %89, label %85

85:                                               ; preds = %78
  %86 = icmp slt i32 %83, -33554432
  %87 = shl i32 %83, 6
  %88 = select i1 %86, i32 -2147483648, i32 %87
  br label %89

89:                                               ; preds = %85, %78
  %90 = phi i32 [ 2147483647, %78 ], [ %88, %85 ]
  %91 = icmp slt i32 %58, %90
  %92 = getelementptr inbounds i32, i32* %82, i64 1
  %93 = xor i64 %81, -1
  %94 = add i64 %79, %93
  %95 = select i1 %91, i32* %80, i32* %92
  %96 = select i1 %91, i64 %81, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %78

98:                                               ; preds = %89
  %99 = ptrtoint i32* %95 to i64
  br label %100

100:                                              ; preds = %98, %65
  %101 = phi i64 [ %99, %98 ], [ %73, %65 ]
  %102 = ptrtoint i32* %66 to i64
  %103 = sub i64 %101, %102
  %104 = lshr exact i64 %103, 2
  %105 = trunc i64 %104 to i32
  %106 = icmp eq i32 %69, %105
  %107 = add i32 %69, -1
  %108 = select i1 %106, i32 %107, i32 %105
  br label %109

109:                                              ; preds = %60, %100, %44, %42
  %110 = phi i32 [ %43, %42 ], [ %47, %60 ], [ %47, %44 ], [ %47, %100 ]
  %111 = phi i32 [ %43, %42 ], [ %40, %60 ], [ %40, %44 ], [ %108, %100 ]
  %112 = zext i32 %111 to i64
  %113 = shl nuw i64 %112, 32
  %114 = zext i32 %110 to i64
  %115 = or i64 %113, %114
  ret i64 %115
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink18LayoutTableSection23SpannedEffectiveColumnsERKNS_10LayoutRectE(%"class.blink::LayoutTableSection"* nocapture readonly, %"class.blink::LayoutRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutTable"**
  %5 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %5, i64 0, i32 3
  %7 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %5, i64 0, i32 3, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = ptrtoint i32* %8 to i64
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %2
  %16 = zext i32 %10 to i64
  br label %17

17:                                               ; preds = %28, %15
  %18 = phi i64 [ %16, %15 ], [ %35, %28 ]
  %19 = phi i32* [ %8, %15 ], [ %34, %28 ]
  %20 = lshr i64 %18, 1
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 33554431
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = icmp slt i32 %22, -33554432
  %26 = shl i32 %22, 6
  %27 = select i1 %25, i32 -2147483648, i32 %26
  br label %28

28:                                               ; preds = %24, %17
  %29 = phi i32 [ 2147483647, %17 ], [ %27, %24 ]
  %30 = icmp slt i32 %12, %29
  %31 = getelementptr inbounds i32, i32* %21, i64 1
  %32 = xor i64 %20, -1
  %33 = add i64 %18, %32
  %34 = select i1 %30, i32* %19, i32* %31
  %35 = select i1 %30, i64 %20, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %17

37:                                               ; preds = %28
  %38 = ptrtoint i32* %34 to i64
  br label %39

39:                                               ; preds = %37, %2
  %40 = phi i64 [ %38, %37 ], [ %13, %2 ]
  %41 = sub i64 %40, %13
  %42 = lshr exact i64 %41, 2
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %10, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = add i32 %10, -1
  br label %112

47:                                               ; preds = %39
  %48 = icmp eq i32 %43, 0
  %49 = add i32 %43, -1
  %50 = select i1 %48, i32 0, i32 %49
  %51 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"* %6, i32 %43) #13
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* %11, align 4
  %54 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %55) #13
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !3
  %62 = icmp sgt i32 %52, 33554431
  br i1 %62, label %112, label %63

63:                                               ; preds = %47
  %64 = icmp slt i32 %52, -33554432
  %65 = shl i32 %52, 6
  %66 = select i1 %64, i32 -2147483648, i32 %65
  %67 = icmp slt i32 %66, %61
  br i1 %67, label %68, label %112

68:                                               ; preds = %63
  %69 = load i32*, i32** %7, align 8
  %70 = and i64 %42, 4294967295
  %71 = getelementptr inbounds i32, i32* %69, i64 %70
  %72 = load i32, i32* %9, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %69, i64 %73
  %75 = ptrtoint i32* %74 to i64
  %76 = ptrtoint i32* %71 to i64
  %77 = sub i64 %75, %76
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %103, label %79

79:                                               ; preds = %68
  %80 = ashr exact i64 %77, 2
  br label %81

81:                                               ; preds = %92, %79
  %82 = phi i64 [ %80, %79 ], [ %99, %92 ]
  %83 = phi i32* [ %71, %79 ], [ %98, %92 ]
  %84 = lshr i64 %82, 1
  %85 = getelementptr inbounds i32, i32* %83, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %86, 33554431
  br i1 %87, label %92, label %88

88:                                               ; preds = %81
  %89 = icmp slt i32 %86, -33554432
  %90 = shl i32 %86, 6
  %91 = select i1 %89, i32 -2147483648, i32 %90
  br label %92

92:                                               ; preds = %88, %81
  %93 = phi i32 [ 2147483647, %81 ], [ %91, %88 ]
  %94 = icmp slt i32 %61, %93
  %95 = getelementptr inbounds i32, i32* %85, i64 1
  %96 = xor i64 %84, -1
  %97 = add i64 %82, %96
  %98 = select i1 %94, i32* %83, i32* %95
  %99 = select i1 %94, i64 %84, i64 %97
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %81

101:                                              ; preds = %92
  %102 = ptrtoint i32* %98 to i64
  br label %103

103:                                              ; preds = %101, %68
  %104 = phi i64 [ %102, %101 ], [ %76, %68 ]
  %105 = ptrtoint i32* %69 to i64
  %106 = sub i64 %104, %105
  %107 = lshr exact i64 %106, 2
  %108 = trunc i64 %107 to i32
  %109 = icmp eq i32 %72, %108
  %110 = add i32 %72, -1
  %111 = select i1 %109, i32 %110, i32 %108
  br label %112

112:                                              ; preds = %63, %103, %47, %45
  %113 = phi i32 [ %46, %45 ], [ %50, %63 ], [ %50, %47 ], [ %50, %103 ]
  %114 = phi i32 [ %46, %45 ], [ %43, %63 ], [ %43, %47 ], [ %111, %103 ]
  %115 = zext i32 %114 to i64
  %116 = shl nuw i64 %115, 32
  %117 = zext i32 %113 to i64
  %118 = or i64 %116, %117
  ret i64 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection11RecalcCellsEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 9
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 9, i1 false)
  %8 = load i32, i32* %6, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %55, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %51, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %15, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %16, i64 %17
  br label %19

19:                                               ; preds = %47, %14
  %20 = phi %"struct.blink::LayoutTableSection::TableGridRow"* [ %48, %47 ], [ %16, %14 ]
  %21 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %20, i64 0, i32 3, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %20, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %25) #13
  br label %26

26:                                               ; preds = %24, %19
  %27 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %27, align 8
  %29 = icmp eq %"class.blink::TableGridCell"* %28, null
  br i1 %29, label %47, label %30, !prof !2

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::TableGridCell"* %28 to i8*
  %32 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %45, label %35, !prof !3

35:                                               ; preds = %30
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %28, i64 %36
  br label %38

38:                                               ; preds = %38, %35
  %39 = phi %"class.blink::TableGridCell"* [ %40, %38 ], [ %28, %35 ]
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %39) #13
  %40 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %39, i64 1
  %41 = icmp eq %"class.blink::TableGridCell"* %40, %37
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  store i32 0, i32* %32, align 4
  %43 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %20 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %30
  %46 = phi i8* [ %44, %42 ], [ %31, %30 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #13
  store %"class.blink::TableGridCell"* null, %"class.blink::TableGridCell"** %27, align 8
  br label %47

47:                                               ; preds = %45, %26
  %48 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %20, i64 1
  %49 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %48, %18
  br i1 %49, label %50, label %19

50:                                               ; preds = %47
  store i32 0, i32* %11, align 4
  br label %51

51:                                               ; preds = %50, %10
  %52 = bitcast %"class.WTF::Vector.2045"* %5 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.WTF::Vector.2045"* %5 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  store i32 0, i32* %6, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #13
  br label %55

55:                                               ; preds = %1, %51
  %56 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %57 = bitcast %"class.blink::LayoutObject"** %56 to %"class.blink::LayoutTableRow"**
  %58 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutTableRow"* %58, null
  br i1 %59, label %60, label %63

60:                                               ; preds = %106, %55
  %61 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  tail call void @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.2045"* %5, i32 %62) #13
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason8kUnknownE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #13
  ret void

63:                                               ; preds = %55, %106
  %64 = phi %"class.blink::LayoutTableRow"* [ %110, %106 ], [ %58, %55 ]
  %65 = phi i8 [ %107, %106 ], [ 0, %55 ]
  %66 = load i32, i32* %4, align 8
  %67 = add i32 %66, 1
  store i32 %67, i32* %4, align 8
  store i32 0, i32* %3, align 4
  tail call void @_ZN5blink18LayoutTableSection10EnsureRowsEj(%"class.blink::LayoutTableSection"* %0, i32 %67)
  %68 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %5, i32 %66) #13
  %69 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %68, i64 0, i32 1
  store %"class.blink::LayoutTableRow"* %64, %"class.blink::LayoutTableRow"** %69, align 8
  tail call void @_ZN5blink14LayoutTableRow11SetRowIndexEj(%"class.blink::LayoutTableRow"* nonnull %64, i32 %66)
  %70 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %5, i32 %66) #13
  %71 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %70, i64 0, i32 1
  %72 = bitcast %"class.blink::LayoutTableRow"** %71 to %"class.blink::LayoutObject"**
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 5, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = and i160 %78, 15211807202738752817960438464512
  %80 = icmp eq i160 %79, 0
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 5, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %82, i64 0, i32 3
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %82, i64 0, i32 8
  %85 = select i1 %80, %"class.blink::Length"* %83, %"class.blink::Length"* %84
  %86 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %70, i64 0, i32 3
  %87 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 2
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 8
  br i1 %89, label %90, label %91

90:                                               ; preds = %63
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %85) #13
  br label %91

91:                                               ; preds = %90, %63
  %92 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %70, i64 0, i32 3, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %86) #13
  br label %96

96:                                               ; preds = %91, %95
  %97 = bitcast %"class.blink::Length"* %85 to i64*
  %98 = bitcast %"class.blink::Length"* %86 to i64*
  %99 = load i64, i64* %97, align 4
  store i64 %99, i64* %98, align 4
  %100 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %64, i64 0, i32 0, i32 1, i32 0
  %101 = bitcast %"class.blink::LayoutObject"** %100 to %"class.blink::LayoutTableCell"**
  %102 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %101, align 8
  %103 = icmp eq %"class.blink::LayoutTableCell"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %64, i64 0, i32 3
  br label %112

106:                                              ; preds = %138, %96
  %107 = phi i8 [ %65, %96 ], [ %139, %138 ]
  %108 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %109 = bitcast %"class.blink::LayoutObject"** %108 to %"class.blink::LayoutTableRow"**
  %110 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %109, align 8
  %111 = icmp eq %"class.blink::LayoutTableRow"* %110, null
  br i1 %111, label %60, label %63

112:                                              ; preds = %104, %138
  %113 = phi %"class.blink::LayoutTableCell"* [ %102, %104 ], [ %142, %138 ]
  %114 = phi i8 [ %65, %104 ], [ %139, %138 ]
  %115 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %113, i64 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 134217728
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %138, label %119

119:                                              ; preds = %112
  %120 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* nonnull %113) #13
  %121 = icmp eq i32 %120, 0
  %122 = and i8 %114, 1
  %123 = icmp eq i8 %122, 0
  %124 = and i1 %123, %121
  br i1 %124, label %125, label %138

125:                                              ; preds = %119
  %126 = load i32, i32* %105, align 8
  %127 = and i32 %126, 2147483647
  %128 = add nuw i32 %127, 1
  br label %130

129:                                              ; preds = %130
  tail call void @_ZN5blink18LayoutTableSection10EnsureRowsEj(%"class.blink::LayoutTableSection"* %0, i32 %136)
  br label %138

130:                                              ; preds = %125, %130
  %131 = phi i32 [ %136, %130 ], [ %128, %125 ]
  %132 = phi %"class.blink::LayoutTableRow"* [ %135, %130 ], [ %64, %125 ]
  %133 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %134 = bitcast %"class.blink::LayoutObject"** %133 to %"class.blink::LayoutTableRow"**
  %135 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %134, align 8
  %136 = add i32 %131, 1
  %137 = icmp eq %"class.blink::LayoutTableRow"* %135, null
  br i1 %137, label %129, label %130

138:                                              ; preds = %112, %119, %129
  %139 = phi i8 [ %114, %119 ], [ 1, %129 ], [ %114, %112 ]
  tail call void @_ZN5blink18LayoutTableSection7AddCellEPNS_15LayoutTableCellEPNS_14LayoutTableRowE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutTableCell"* nonnull %113, %"class.blink::LayoutTableRow"* nonnull %64)
  %140 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %141 = bitcast %"class.blink::LayoutObject"** %140 to %"class.blink::LayoutTableCell"**
  %142 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %141, align 8
  %143 = icmp eq %"class.blink::LayoutTableCell"* %142, null
  br i1 %143, label %106, label %112
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection23RowLogicalHeightChangedEPNS_14LayoutTableRowE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableRow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 4, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %55

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 2147483647
  %10 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %11 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %10, i32 %9) #13
  %12 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %11, i64 0, i32 1
  %13 = bitcast %"class.blink::LayoutTableRow"** %12 to %"class.blink::LayoutObject"**
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 5, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 3
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 8
  %26 = select i1 %21, %"class.blink::Length"* %24, %"class.blink::Length"* %25
  %27 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %11, i64 0, i32 3
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %32

31:                                               ; preds = %6
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %26) #13
  br label %32

32:                                               ; preds = %31, %6
  %33 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %11, i64 0, i32 3, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %27) #13
  br label %37

37:                                               ; preds = %32, %36
  %38 = bitcast %"class.blink::Length"* %26 to i64*
  %39 = bitcast %"class.blink::Length"* %27 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 4
  %41 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %10, i32 %9) #13
  %42 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %41, i64 0, i32 1
  %43 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %43, i64 0, i32 0, i32 1, i32 0
  %45 = bitcast %"class.blink::LayoutObject"** %44 to %"class.blink::LayoutTableCell"**
  %46 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutTableCell"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %37, %48
  %49 = phi %"class.blink::LayoutTableCell"* [ %53, %48 ], [ %46, %37 ]
  %50 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %10, i32 %9) #13
  tail call void @_ZN5blink18LayoutTableSection12TableGridRow26UpdateLogicalHeightForCellEPKNS_15LayoutTableCellE(%"struct.blink::LayoutTableSection::TableGridRow"* %50, %"class.blink::LayoutTableCell"* nonnull %49)
  %51 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %52 = bitcast %"class.blink::LayoutObject"** %51 to %"class.blink::LayoutTableCell"**
  %53 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %52, align 8
  %54 = icmp eq %"class.blink::LayoutTableCell"* %53, null
  br i1 %54, label %55, label %48

55:                                               ; preds = %48, %37, %2
  ret void
}

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn256_N5blink18LayoutTableSection18SetNeedsCellRecalcEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to %"class.blink::LayoutTableSection"*
  tail call void @_ZN5blink18LayoutTableSection18SetNeedsCellRecalcEv(%"class.blink::LayoutTableSection"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18LayoutTableSection19NumEffectiveColumnsEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %16, %1
  %7 = phi i32 [ 0, %1 ], [ %17, %16 ]
  %8 = add i32 %7, 1
  ret i32 %8

9:                                                ; preds = %1, %16
  %10 = phi i32 [ %18, %16 ], [ 0, %1 ]
  %11 = phi i32 [ %17, %16 ], [ 0, %1 ]
  %12 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %2, i32 %10) #13
  %13 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %11, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %35, %9
  %17 = phi i32 [ %11, %9 ], [ %36, %35 ]
  %18 = add nuw i32 %10, 1
  %19 = load i32, i32* %3, align 4
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %9, label %6

21:                                               ; preds = %9, %35
  %22 = phi i32 [ %37, %35 ], [ %11, %9 ]
  %23 = phi i32 [ %36, %35 ], [ %11, %9 ]
  %24 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %2, i32 %10) #13
  %25 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %24, i64 0, i32 0
  %26 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZNK3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %25, i32 %22) #13
  %27 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %26, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %26, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %30, %21
  br label %35

35:                                               ; preds = %30, %34
  %36 = phi i32 [ %22, %34 ], [ %23, %30 ]
  %37 = add i32 %22, 1
  %38 = icmp eq i32 %37, %14
  br i1 %38, label %16, label %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn256_NK5blink18LayoutTableSection19NumEffectiveColumnsEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 16, i32 1
  %4 = bitcast %"class.blink::LayoutSize"* %3 to %"class.WTF::Vector.2045"*
  %5 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 17, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %38, label %8

8:                                                ; preds = %1, %15
  %9 = phi i32 [ %17, %15 ], [ 0, %1 ]
  %10 = phi i32 [ %16, %15 ], [ 0, %1 ]
  %11 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %4, i32 %9) #13
  %12 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %10, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %34, %8
  %16 = phi i32 [ %10, %8 ], [ %35, %34 ]
  %17 = add nuw i32 %9, 1
  %18 = load i32, i32* %5, align 4
  %19 = icmp ult i32 %17, %18
  br i1 %19, label %8, label %38

20:                                               ; preds = %8, %34
  %21 = phi i32 [ %36, %34 ], [ %10, %8 ]
  %22 = phi i32 [ %35, %34 ], [ %10, %8 ]
  %23 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %4, i32 %9) #13
  %24 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %23, i64 0, i32 0
  %25 = tail call dereferenceable(32) %"class.blink::TableGridCell"* @_ZNK3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %24, i32 %21) #13
  %26 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %25, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %25, i64 0, i32 1
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %29, %20
  br label %34

34:                                               ; preds = %33, %29
  %35 = phi i32 [ %21, %33 ], [ %22, %29 ]
  %36 = add i32 %21, 1
  %37 = icmp eq i32 %36, %13
  br i1 %37, label %15, label %20

38:                                               ; preds = %15, %1
  %39 = phi i32 [ 0, %1 ], [ %16, %15 ]
  %40 = add i32 %39, 1
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection21AppendEffectiveColumnEj(%"class.blink::LayoutTableSection"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = add i32 %1, 1
  br label %13

12:                                               ; preds = %13, %2
  ret void

13:                                               ; preds = %10, %13
  %14 = phi %"struct.blink::LayoutTableSection::TableGridRow"* [ %4, %10 ], [ %16, %13 ]
  %15 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %14, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector.2048"* %15, i32 %11)
  %16 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %14, i64 1
  %17 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %16, %8
  br i1 %17, label %12, label %13
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector.2048"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %59, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %15
  %16 = phi %"class.blink::TableGridCell"* [ %17, %15 ], [ %14, %12 ]
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %16) #13
  %17 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %16, i64 1
  %18 = icmp eq %"class.blink::TableGridCell"* %17, %10
  br i1 %18, label %59, label %15

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %1
  br i1 %22, label %23, label %45

23:                                               ; preds = %19
  %24 = lshr i32 %21, 2
  %25 = add nuw i32 %21, 1
  %26 = add i32 %25, %24
  %27 = icmp ugt i32 %26, 4
  %28 = select i1 %27, i32 %26, i32 4
  %29 = icmp ugt i32 %28, %1
  %30 = select i1 %29, i32 %28, i32 %1
  %31 = icmp ult i32 %21, %30
  br i1 %31, label %32, label %45, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %33, align 8
  %35 = icmp eq %"class.blink::TableGridCell"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = zext i32 %30 to i64
  %38 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13TableGridCellEEEmm(i64 %37) #13
  %39 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13TableGridCellEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2048"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 5
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %20, align 8
  br label %45

44:                                               ; preds = %32
  tail call void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2048"* %0, i32 %30) #13
  br label %45

45:                                               ; preds = %44, %36, %23, %19
  %46 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %46, align 8
  %48 = load i32, i32* %3, align 4
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %47, i64 %49
  %51 = icmp eq i32 %48, %1
  br i1 %51, label %59, label %52

52:                                               ; preds = %45
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %47, i64 %53
  br label %55

55:                                               ; preds = %52, %55
  %56 = phi %"class.blink::TableGridCell"* [ %57, %55 ], [ %54, %52 ]
  tail call void @_ZN5blink13TableGridCellC1Ev(%"class.blink::TableGridCell"* %56) #13
  %57 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %56, i64 1
  %58 = icmp eq %"class.blink::TableGridCell"* %57, %50
  br i1 %58, label %59, label %55

59:                                               ; preds = %15, %55, %6, %45
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18LayoutTableSection20SplitEffectiveColumnEjj(%"class.blink::LayoutTableSection"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TableGridCell", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = add i32 %6, 1
  store i32 %9, i32* %5, align 4
  br label %10

10:                                               ; preds = %8, %3
  %11 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %16 = add i32 %1, 1
  %17 = bitcast %"class.blink::TableGridCell"* %4 to i8*
  %18 = icmp eq i32 %2, 0
  br label %20

19:                                               ; preds = %71, %10
  ret void

20:                                               ; preds = %14, %71
  %21 = phi i32 [ 0, %14 ], [ %75, %71 ]
  %22 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %15, i32 %21) #13
  %23 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %22, i64 0, i32 0
  call void @_ZN5blink18LayoutTableSection10EnsureColsEjj(%"class.blink::LayoutTableSection"* %0, i32 %21, i32 %16)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #13
  call void @_ZN5blink13TableGridCellC1Ev(%"class.blink::TableGridCell"* nonnull %4) #13
  call void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_(%"class.WTF::Vector.2048"* %23, i32 %16, %"class.blink::TableGridCell"* nonnull dereferenceable(32) %4)
  call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #13
  %24 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %23, i32 %1) #13
  %25 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %24, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  %28 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %23, i32 %16) #13
  br i1 %27, label %71, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %28, i64 0, i32 0
  %31 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %23, i32 %1) #13
  %32 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %31, i64 0, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE6AppendIS3_EEvPKT_j(%"class.WTF::Vector.2051"* %30, %"class.blink::LayoutTableCell"** %33, i32 %35) #13
  %36 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %23, i32 %1) #13
  %37 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %36, i64 0, i32 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %36, i64 0, i32 0
  %42 = add i32 %38, -1
  %43 = call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"* %41, i32 %42) #13
  %44 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %43, align 8
  br label %45

45:                                               ; preds = %29, %40
  %46 = phi %"class.blink::LayoutTableCell"* [ %44, %40 ], [ null, %29 ]
  %47 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 67108864
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  %52 = call i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* %46) #13
  br label %53

53:                                               ; preds = %45, %51
  %54 = phi i32 [ %52, %51 ], [ 1, %45 ]
  %55 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %23, i32 %1) #13
  %56 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %55, i64 0, i32 1
  %57 = load i8, i8* %56, align 8, !range !4
  %58 = zext i8 %57 to i32
  %59 = sub i32 %54, %58
  %60 = icmp ult i32 %59, %2
  %61 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %23, i32 %16) #13
  br i1 %60, label %71, label %62

62:                                               ; preds = %53
  br i1 %18, label %63, label %68

63:                                               ; preds = %62
  %64 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %23, i32 %1) #13
  %65 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %64, i64 0, i32 1
  %66 = load i8, i8* %65, align 8, !range !4
  %67 = icmp ne i8 %66, 0
  br label %68

68:                                               ; preds = %62, %63
  %69 = phi i1 [ true, %62 ], [ %67, %63 ]
  %70 = zext i1 %69 to i8
  br label %71

71:                                               ; preds = %20, %53, %68
  %72 = phi %"class.blink::TableGridCell"* [ %61, %68 ], [ %61, %53 ], [ %28, %20 ]
  %73 = phi i8 [ %70, %68 ], [ 0, %53 ], [ 0, %20 ]
  %74 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %72, i64 0, i32 1
  store i8 %73, i8* %74, align 8
  %75 = add nuw i32 %21, 1
  %76 = load i32, i32* %11, align 4
  %77 = icmp ult i32 %75, %76
  br i1 %77, label %20, label %19
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_(%"class.WTF::Vector.2048"*, i32, %"class.blink::TableGridCell"* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %84

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %30, align 8
  %32 = icmp ugt %"class.blink::TableGridCell"* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %31, i64 %34
  %36 = icmp ugt %"class.blink::TableGridCell"* %35, %2
  br i1 %36, label %56, label %37

37:                                               ; preds = %33, %28
  %38 = lshr i32 %24, 2
  %39 = add i32 %29, %38
  %40 = icmp ugt i32 %39, 4
  %41 = select i1 %40, i32 %39, i32 4
  %42 = icmp ugt i32 %41, %29
  %43 = select i1 %42, i32 %41, i32 %29
  %44 = icmp ult i32 %24, %43
  br i1 %44, label %45, label %84, !prof !2

45:                                               ; preds = %37
  %46 = icmp eq %"class.blink::TableGridCell"* %31, null
  br i1 %46, label %47, label %55

47:                                               ; preds = %45
  %48 = zext i32 %43 to i64
  %49 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13TableGridCellEEEmm(i64 %48) #13
  %50 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %49, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13TableGridCellEEEPKcv, i64 0, i64 0)) #13
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast %"class.WTF::Vector.2048"* %0 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = lshr i64 %49, 5
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %25, align 8
  br label %84

55:                                               ; preds = %45
  call void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2048"* %0, i32 %43) #13
  br label %84

56:                                               ; preds = %33
  %57 = ptrtoint %"class.blink::TableGridCell"* %2 to i64
  %58 = ptrtoint %"class.blink::TableGridCell"* %31 to i64
  %59 = sub i64 %57, %58
  %60 = ashr exact i64 %59, 5
  %61 = lshr i32 %24, 2
  %62 = add i32 %29, %61
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %29
  %66 = select i1 %65, i32 %64, i32 %29
  %67 = icmp ult i32 %24, %66
  br i1 %67, label %68, label %81, !prof !2

68:                                               ; preds = %56
  %69 = icmp eq %"class.blink::TableGridCell"* %31, null
  br i1 %69, label %70, label %79

70:                                               ; preds = %68
  %71 = zext i32 %66 to i64
  %72 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13TableGridCellEEEmm(i64 %71) #13
  %73 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13TableGridCellEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  %75 = bitcast %"class.WTF::Vector.2048"* %0 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = lshr i64 %72, 5
  %77 = trunc i64 %76 to i32
  store i32 %77, i32* %25, align 8
  %78 = bitcast i8* %73 to %"class.blink::TableGridCell"*
  br label %81

79:                                               ; preds = %68
  call void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2048"* %0, i32 %66) #13
  %80 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %30, align 8
  br label %81

81:                                               ; preds = %56, %70, %79
  %82 = phi %"class.blink::TableGridCell"* [ %31, %56 ], [ %78, %70 ], [ %80, %79 ]
  %83 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %82, i64 %60
  br label %84

84:                                               ; preds = %81, %37, %47, %55, %23
  %85 = phi %"class.blink::TableGridCell"* [ %2, %23 ], [ %83, %81 ], [ %2, %37 ], [ %2, %47 ], [ %2, %55 ]
  %86 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %86, align 8
  %88 = zext i32 %1 to i64
  %89 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %87, i64 %88
  %90 = load i32, i32* %9, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %87, i64 %91
  %93 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %89, i64 1
  call void @_ZN3WTF11VectorMoverILb0EN5blink13TableGridCellENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b(%"class.blink::TableGridCell"* %89, %"class.blink::TableGridCell"* %92, %"class.blink::TableGridCell"* %93, i1 zeroext true) #13
  %94 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %85, i64 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %87, i64 %88, i32 0, i32 0, i32 1, i64 0
  %97 = bitcast %"class.blink::TableGridCell"* %89 to i8**
  store i8* %96, i8** %97, align 8
  %98 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %87, i64 %88, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %98, align 8
  %99 = icmp ugt i32 %95, 1
  br i1 %99, label %100, label %108

100:                                              ; preds = %84
  %101 = zext i32 %95 to i64
  %102 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %101) #13
  %103 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %102, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %104 = ptrtoint i8* %103 to i64
  %105 = bitcast %"class.blink::TableGridCell"* %89 to i64*
  store atomic i64 %104, i64* %105 monotonic, align 8
  %106 = lshr i64 %102, 3
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %98, align 8
  br label %108

108:                                              ; preds = %100, %84
  %109 = phi i8* [ %96, %84 ], [ %103, %100 ]
  %110 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %85, i64 0, i32 0, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %87, i64 %88, i32 0, i32 0, i32 0, i32 2
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %113, align 8
  %115 = icmp ne i8* %109, null
  %116 = icmp ne %"class.blink::LayoutTableCell"** %114, null
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %123, !prof !2

118:                                              ; preds = %108
  %119 = load i32, i32* %110, align 4
  %120 = zext i32 %119 to i64
  %121 = bitcast %"class.blink::LayoutTableCell"** %114 to i8*
  %122 = shl nuw nsw i64 %120, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %109, i8* nonnull align 8 %121, i64 %122, i1 false) #13
  br label %123

123:                                              ; preds = %108, %118
  %124 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %87, i64 %88, i32 1
  %125 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %85, i64 0, i32 1
  %126 = load i8, i8* %125, align 8, !range !4
  store i8 %126, i8* %124, align 8
  %127 = load i32, i32* %9, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %9, align 4
  ret void
}

declare void @_ZN5blink13TableGridCellC1Ev(%"class.blink::TableGridCell"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18LayoutTableSection11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutTableSection"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::PhysicalOffset"*
  %10 = alloca %"struct.blink::PhysicalRect", align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %"class.blink::LayoutRect"*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"struct.blink::PhysicalOffset"*
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %"struct.blink::PhysicalOffset"*
  %17 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 0
  %19 = bitcast %"class.blink::LayoutObject"** %18 to %"class.blink::LayoutTableRow"**
  %20 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutTableRow"* %20, null
  br i1 %21, label %149, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 12, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 13
  %28 = load i8, i8* %27, align 8, !range !4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %151, label %30

30:                                               ; preds = %26, %22
  %31 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 1, i32 1
  %32 = bitcast %"class.blink::LayoutObject"** %31 to %"class.blink::LayoutTableRow"**
  %33 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutTableRow"* %33, null
  br i1 %34, label %149, label %35

35:                                               ; preds = %30
  %36 = bitcast i64* %6 to i8*
  %37 = bitcast i64* %6 to i32*
  %38 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %7, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %40 = icmp eq %"class.blink::LayoutTableSection"* %0, null
  %41 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  br label %43

43:                                               ; preds = %35, %120
  %44 = phi %"class.blink::LayoutTableRow"* [ %33, %35 ], [ %123, %120 ]
  %45 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %45) #13
  br i1 %46, label %120, label %47

47:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  store i32 -1431655766, i32* %37, align 8
  store i32 -1431655766, i32* %38, align 4
  br i1 %40, label %48, label %56

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %44, i64 0, i32 0, i32 0
  %50 = bitcast %"class.blink::LayoutTableRow"* %44 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %51 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %51, i64 147
  %53 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %52, align 8
  %54 = call %"class.blink::LayoutBox"* %53(%"class.blink::LayoutBox"* %49) #13
  %55 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %55, label %65, label %56

56:                                               ; preds = %48, %47
  %57 = phi %"class.blink::LayoutBox"* [ %54, %48 ], [ %39, %47 ]
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %57, i64 0, i32 0, i32 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = and i160 %62, 15211807202738752817960438464512
  %64 = icmp eq i160 %63, 5070602400912917605986812821504
  br i1 %64, label %70, label %65, !prof !3

65:                                               ; preds = %56, %48
  %66 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %44, i64 0, i32 0, i32 0, i32 2
  %67 = bitcast %"class.blink::LayoutRect"* %66 to i64*
  %68 = load i64, i64* %67, align 4
  %69 = trunc i64 %68 to i32
  br label %95

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %57, i64 0, i32 2, i32 1
  %72 = bitcast %"class.blink::LayoutSize"* %71 to i64*
  %73 = load i64, i64* %72, align 4
  %74 = trunc i64 %73 to i32
  %75 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %44, i64 0, i32 0, i32 0, i32 2, i32 1
  %76 = bitcast %"class.blink::LayoutSize"* %75 to i64*
  %77 = load i64, i64* %76, align 4
  %78 = trunc i64 %77 to i32
  %79 = icmp sgt i32 %78, -1
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %74, i32 %78) #13
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !3
  %85 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %44, i64 0, i32 0, i32 0, i32 2
  %86 = bitcast %"class.blink::LayoutRect"* %85 to i64*
  %87 = load i64, i64* %86, align 4
  %88 = trunc i64 %87 to i32
  %89 = icmp sgt i32 %88, -1
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %84, i32 %88) #13
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !3
  br label %95

95:                                               ; preds = %65, %70
  %96 = phi i32 [ %69, %65 ], [ %94, %70 ]
  %97 = phi i64 [ %68, %65 ], [ %87, %70 ]
  %98 = lshr i64 %97, 32
  %99 = trunc i64 %98 to i32
  %100 = load i32, i32* %41, align 4
  %101 = icmp slt i32 %96, 0
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %100, i32 %96) #13
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %102, i32 %105, !prof !3
  %107 = load i32, i32* %42, align 4
  %108 = icmp slt i32 %99, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %99) #13
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %109, i32 %112, !prof !3
  %114 = zext i32 %113 to i64
  %115 = shl nuw i64 %114, 32
  %116 = zext i32 %106 to i64
  %117 = or i64 %115, %116
  store i64 %117, i64* %6, align 8
  %118 = call zeroext i1 @_ZN5blink14LayoutTableRow11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutTableRow"* nonnull %44, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7, i32 %4) #13
  br i1 %118, label %125, label %119

119:                                              ; preds = %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %120

120:                                              ; preds = %119, %43
  %121 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %122 = bitcast %"class.blink::LayoutObject"** %121 to %"class.blink::LayoutTableRow"**
  %123 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %122, align 8
  %124 = icmp eq %"class.blink::LayoutTableRow"* %123, null
  br i1 %124, label %149, label %43

125:                                              ; preds = %95
  %126 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = load i32, i32* %41, align 4
  %130 = icmp sgt i32 %129, -1
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %128, i32 %129) #13
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !3
  %136 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = load i32, i32* %42, align 4
  %139 = icmp sgt i32 %138, -1
  %140 = select i1 %139, i32 -2147483648, i32 2147483647
  %141 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %137, i32 %138) #13
  %142 = extractvalue { i32, i1 } %141, 1
  %143 = extractvalue { i32, i1 } %141, 0
  %144 = select i1 %142, i32 %140, i32 %143, !prof !3
  %145 = zext i32 %144 to i64
  %146 = shl nuw i64 %145, 32
  %147 = zext i32 %135 to i64
  %148 = or i64 %146, %147
  store i64 %148, i64* %8, align 8
  call void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"* %17, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %149

149:                                              ; preds = %120, %30, %373, %5, %125
  %150 = phi i1 [ true, %125 ], [ %374, %373 ], [ false, %5 ], [ false, %30 ], [ false, %120 ]
  ret i1 %150

151:                                              ; preds = %26
  %152 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 10
  %153 = load i8, i8* %152, align 4, !range !4
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %151
  tail call void @_ZN5blink18LayoutTableSection11RecalcCellsEv(%"class.blink::LayoutTableSection"* %0) #13
  br label %156

156:                                              ; preds = %151, %155
  %157 = bitcast %"struct.blink::PhysicalRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #13
  %158 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 0, i32 1, i32 0
  %160 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 1
  %161 = bitcast %"struct.blink::PhysicalRect"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %157, i8* align 4 %161, i64 16, i1 false)
  %162 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = tail call i1 @llvm.is.constant.i32(i32 %163) #13
  br i1 %164, label %165, label %169

165:                                              ; preds = %156
  %166 = sub i32 0, %163
  %167 = icmp eq i32 %166, -2147483648
  %168 = select i1 %167, i32 2147483647, i32 %166
  br label %174

169:                                              ; preds = %156
  %170 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %163) #13
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 2147483647, i32 %172
  br label %174

174:                                              ; preds = %169, %165
  %175 = phi i32 [ %168, %165 ], [ %173, %169 ]
  %176 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = tail call i1 @llvm.is.constant.i32(i32 %177) #13
  br i1 %178, label %179, label %183

179:                                              ; preds = %174
  %180 = sub i32 0, %177
  %181 = icmp eq i32 %180, -2147483648
  %182 = select i1 %181, i32 2147483647, i32 %180
  br label %188

183:                                              ; preds = %174
  %184 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %177) #13
  %185 = extractvalue { i32, i1 } %184, 1
  %186 = extractvalue { i32, i1 } %184, 0
  %187 = select i1 %185, i32 2147483647, i32 %186
  br label %188

188:                                              ; preds = %179, %183
  %189 = phi i32 [ %182, %179 ], [ %187, %183 ]
  %190 = load i32, i32* %158, align 8
  %191 = icmp slt i32 %175, 0
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %190, i32 %175) #13
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !3
  %197 = load i32, i32* %159, align 4
  %198 = icmp slt i32 %189, 0
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %197, i32 %189) #13
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !3
  %204 = zext i32 %203 to i64
  %205 = shl nuw i64 %204, 32
  %206 = zext i32 %196 to i64
  %207 = or i64 %205, %206
  %208 = bitcast %"struct.blink::PhysicalRect"* %10 to i64*
  store i64 %207, i64* %208, align 8
  %209 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %209) #13
  %210 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %211 = call { i64, i64 } @_ZNK5blink18LayoutTableSection37LogicalRectForWritingModeAndDirectionERKNS_12PhysicalRectE(%"class.blink::LayoutTableSection"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %10)
  %212 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %213 = extractvalue { i64, i64 } %211, 0
  store i64 %213, i64* %212, align 8
  %214 = extractvalue { i64, i64 } %211, 1
  store i64 %214, i64* %210, align 8
  %215 = call i64 @_ZNK5blink18LayoutTableSection11SpannedRowsERKNS_10LayoutRectE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %12)
  %216 = trunc i64 %215 to i32
  %217 = lshr i64 %215, 32
  %218 = trunc i64 %217 to i32
  %219 = call i64 @_ZNK5blink18LayoutTableSection23SpannedEffectiveColumnsERKNS_10LayoutRectE(%"class.blink::LayoutTableSection"* %0, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %12)
  %220 = trunc i64 %219 to i32
  %221 = lshr i64 %219, 32
  %222 = trunc i64 %221 to i32
  %223 = icmp ult i32 %216, %218
  br i1 %223, label %224, label %373

224:                                              ; preds = %188
  %225 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %226 = icmp ult i32 %220, %222
  %227 = bitcast i64* %13 to i8*
  %228 = bitcast i64* %13 to i32*
  %229 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %14, i64 0, i32 1, i32 0
  %230 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %231 = icmp eq %"class.blink::LayoutTableSection"* %0, null
  %232 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  br label %233

233:                                              ; preds = %342, %224
  %234 = phi i32 [ %216, %224 ], [ %346, %342 ]
  %235 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %225, i32 %234) #13
  %236 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %235, i64 0, i32 0, i32 0, i32 0, i32 2
  %237 = load i32, i32* %236, align 4
  %238 = icmp ugt i32 %237, %220
  %239 = and i1 %238, %226
  br i1 %239, label %240, label %342

240:                                              ; preds = %233, %337
  %241 = phi i32 [ %338, %337 ], [ %220, %233 ]
  %242 = call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %225, i32 %234) #13
  %243 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %242, i64 0, i32 0
  %244 = call dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"* %243, i32 %241) #13
  %245 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %244, i64 0, i32 0, i32 0, i32 0, i32 2
  %246 = load i32, i32* %245, align 4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %337, label %248

248:                                              ; preds = %240
  %249 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %244, i64 0, i32 0
  br label %250

250:                                              ; preds = %248, %331
  %251 = phi i32 [ %252, %331 ], [ %246, %248 ]
  %252 = add i32 %251, -1
  %253 = call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"* %249, i32 %252) #13
  %254 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %253, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #13
  store i32 -1431655766, i32* %228, align 8
  store i32 -1431655766, i32* %229, align 4
  br i1 %231, label %255, label %263

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %254, i64 0, i32 0, i32 0, i32 0
  %257 = bitcast %"class.blink::LayoutTableCell"* %254 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %258 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %257, align 8
  %259 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %258, i64 147
  %260 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %259, align 8
  %261 = call %"class.blink::LayoutBox"* %260(%"class.blink::LayoutBox"* %256) #13
  %262 = icmp eq %"class.blink::LayoutBox"* %261, null
  br i1 %262, label %272, label %263

263:                                              ; preds = %255, %250
  %264 = phi %"class.blink::LayoutBox"* [ %261, %255 ], [ %230, %250 ]
  %265 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %264, i64 0, i32 0, i32 0, i32 5, i32 0
  %266 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %265, align 8
  %267 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %266, i64 0, i32 0, i32 9
  %268 = bitcast [20 x i8]* %267 to i160*
  %269 = load i160, i160* %268, align 8
  %270 = and i160 %269, 15211807202738752817960438464512
  %271 = icmp eq i160 %270, 5070602400912917605986812821504
  br i1 %271, label %277, label %272, !prof !3

272:                                              ; preds = %263, %255
  %273 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %254, i64 0, i32 0, i32 0, i32 0, i32 2
  %274 = bitcast %"class.blink::LayoutRect"* %273 to i64*
  %275 = load i64, i64* %274, align 4
  %276 = trunc i64 %275 to i32
  br label %302

277:                                              ; preds = %263
  %278 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %264, i64 0, i32 2, i32 1
  %279 = bitcast %"class.blink::LayoutSize"* %278 to i64*
  %280 = load i64, i64* %279, align 4
  %281 = trunc i64 %280 to i32
  %282 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %254, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %283 = bitcast %"class.blink::LayoutSize"* %282 to i64*
  %284 = load i64, i64* %283, align 4
  %285 = trunc i64 %284 to i32
  %286 = icmp sgt i32 %285, -1
  %287 = select i1 %286, i32 -2147483648, i32 2147483647
  %288 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %281, i32 %285) #13
  %289 = extractvalue { i32, i1 } %288, 1
  %290 = extractvalue { i32, i1 } %288, 0
  %291 = select i1 %289, i32 %287, i32 %290, !prof !3
  %292 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %254, i64 0, i32 0, i32 0, i32 0, i32 2
  %293 = bitcast %"class.blink::LayoutRect"* %292 to i64*
  %294 = load i64, i64* %293, align 4
  %295 = trunc i64 %294 to i32
  %296 = icmp sgt i32 %295, -1
  %297 = select i1 %296, i32 -2147483648, i32 2147483647
  %298 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %291, i32 %295) #13
  %299 = extractvalue { i32, i1 } %298, 1
  %300 = extractvalue { i32, i1 } %298, 0
  %301 = select i1 %299, i32 %297, i32 %300, !prof !3
  br label %302

302:                                              ; preds = %272, %277
  %303 = phi i32 [ %276, %272 ], [ %301, %277 ]
  %304 = phi i64 [ %275, %272 ], [ %294, %277 ]
  %305 = lshr i64 %304, 32
  %306 = trunc i64 %305 to i32
  %307 = load i32, i32* %162, align 4
  %308 = icmp slt i32 %303, 0
  %309 = select i1 %308, i32 -2147483648, i32 2147483647
  %310 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %307, i32 %303) #13
  %311 = extractvalue { i32, i1 } %310, 1
  %312 = extractvalue { i32, i1 } %310, 0
  %313 = select i1 %311, i32 %309, i32 %312, !prof !3
  %314 = load i32, i32* %176, align 4
  %315 = icmp slt i32 %306, 0
  %316 = select i1 %315, i32 -2147483648, i32 2147483647
  %317 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %314, i32 %306) #13
  %318 = extractvalue { i32, i1 } %317, 1
  %319 = extractvalue { i32, i1 } %317, 0
  %320 = select i1 %318, i32 %316, i32 %319, !prof !3
  %321 = zext i32 %320 to i64
  %322 = shl nuw i64 %321, 32
  %323 = zext i32 %313 to i64
  %324 = or i64 %322, %323
  store i64 %324, i64* %13, align 8
  %325 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.blink::LayoutTableCell"* %254 to i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)***
  %327 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)**, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*** %326, align 8
  %328 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %327, i64 63
  %329 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %328, align 8
  %330 = call zeroext i1 %329(%"class.blink::LayoutObject"* %325, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %14, i32 %4) #13
  br i1 %330, label %349, label %331

331:                                              ; preds = %302
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #13
  %332 = icmp eq i32 %252, 0
  br i1 %332, label %333, label %250

333:                                              ; preds = %331
  %334 = load i32, i32* %232, align 8
  %335 = and i32 %334, 4096
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %342, label %337

337:                                              ; preds = %333, %240
  %338 = add nuw i32 %241, 1
  %339 = icmp ult i32 %338, %237
  %340 = icmp ult i32 %338, %222
  %341 = and i1 %339, %340
  br i1 %341, label %240, label %342

342:                                              ; preds = %337, %333, %233
  %343 = load i32, i32* %232, align 8
  %344 = and i32 %343, 4096
  %345 = icmp eq i32 %344, 0
  %346 = add nuw i32 %234, 1
  %347 = icmp eq i32 %346, %218
  %348 = or i1 %345, %347
  br i1 %348, label %373, label %233

349:                                              ; preds = %302
  %350 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #13
  %351 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %352 = load i32, i32* %351, align 4
  %353 = load i32, i32* %162, align 4
  %354 = icmp sgt i32 %353, -1
  %355 = select i1 %354, i32 -2147483648, i32 2147483647
  %356 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %352, i32 %353) #13
  %357 = extractvalue { i32, i1 } %356, 1
  %358 = extractvalue { i32, i1 } %356, 0
  %359 = select i1 %357, i32 %355, i32 %358, !prof !3
  %360 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %361 = load i32, i32* %360, align 4
  %362 = load i32, i32* %176, align 4
  %363 = icmp sgt i32 %362, -1
  %364 = select i1 %363, i32 -2147483648, i32 2147483647
  %365 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %361, i32 %362) #13
  %366 = extractvalue { i32, i1 } %365, 1
  %367 = extractvalue { i32, i1 } %365, 0
  %368 = select i1 %366, i32 %364, i32 %367, !prof !3
  %369 = zext i32 %368 to i64
  %370 = shl nuw i64 %369, 32
  %371 = zext i32 %359 to i64
  %372 = or i64 %370, %371
  store i64 %372, i64* %15, align 8
  call void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"* %17, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #13
  br label %373

373:                                              ; preds = %342, %188, %349
  %374 = phi i1 [ true, %349 ], [ false, %188 ], [ false, %342 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %209) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #13
  br label %149
}

declare zeroext i1 @_ZN5blink14LayoutTableRow11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutTableRow"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZNK5blink18LayoutTableSection32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutTableSection"* nocapture readnone, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::LayoutBox"* @_ZN5blink19LayoutObjectFactory37CreateAnonymousTableSectionWithParentERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %1) #13
  ret %"class.blink::LayoutBox"* %3
}

declare %"class.blink::LayoutBox"* @_ZN5blink19LayoutObjectFactory37CreateAnonymousTableSectionWithParentERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink15LayoutTableCell37SetOverrideLogicalHeightFromRowHeightENS_10LayoutUnitE(%"class.blink::LayoutTableCell"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18LayoutTableSection19LogicalHeightForRowERKNS_14LayoutTableRowE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableRow"* nocapture readonly dereferenceable(272)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2147483647
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3
  %7 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %5) #13
  %8 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  br label %25

20:                                               ; preds = %140, %2
  %21 = phi i32 [ 0, %2 ], [ %141, %140 ]
  %22 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %5) #13
  %23 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %22, i64 0, i32 3, i32 2
  %24 = load i8, i8* %23, align 1
  switch i8 %24, label %182 [
    i8 2, label %144
    i8 1, label %144
    i8 8, label %144
  ]

25:                                               ; preds = %15, %140
  %26 = phi %"class.blink::TableGridCell"* [ %9, %15 ], [ %142, %140 ]
  %27 = phi i32 [ 0, %15 ], [ %141, %140 ]
  %28 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %26, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %140, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %26, i64 0, i32 0
  %33 = add i32 %29, -1
  %34 = tail call dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"* %32, i32 %33) #13
  %35 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutTableCell"* %35, null
  br i1 %36, label %140, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %26, i64 0, i32 1
  %39 = load i8, i8* %38, align 8, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %140

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 134217728
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %67, label %46

46:                                               ; preds = %41
  %47 = tail call i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"* nonnull %35) #13
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %62

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 7
  %53 = bitcast %"class.blink::LayoutObject"** %52 to %"class.blink::LayoutTableSection"**
  %54 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %54, i64 0, i32 3, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 3
  %58 = bitcast %"class.blink::LayoutObject"* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 2147483647
  %61 = sub i32 %56, %60
  br label %62

62:                                               ; preds = %49, %46
  %63 = phi i32 [ %61, %49 ], [ %47, %46 ]
  %64 = icmp ult i32 %63, 2147483646
  br i1 %64, label %65, label %81

65:                                               ; preds = %62
  %66 = icmp eq i32 %63, 1
  br i1 %66, label %67, label %81

67:                                               ; preds = %41, %65
  %68 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 0, i32 0, i32 0
  %69 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %68) #13
  %70 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 5
  %73 = load i32, i32* %72, align 4
  %74 = sub i32 %69, %71
  %75 = sub i32 %74, %73
  %76 = tail call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* nonnull %35) #13
  %77 = icmp slt i32 %76, %75
  %78 = select i1 %77, i32 %75, i32 %76
  %79 = icmp slt i32 %27, %78
  %80 = select i1 %79, i32 %78, i32 %27
  br label %140

81:                                               ; preds = %62, %65
  %82 = phi i32 [ %63, %65 ], [ 2147483646, %62 ]
  %83 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %84 = bitcast %"class.blink::LayoutObject"** %83 to %"class.blink::LayoutTableRow"**
  %85 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %85, i64 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 2147483647
  %89 = load i32, i32* %16, align 4
  %90 = add i32 %89, -1
  %91 = icmp eq i32 %5, %90
  br i1 %91, label %98, label %92

92:                                               ; preds = %81
  %93 = icmp ugt i32 %82, 1
  br i1 %93, label %94, label %140

94:                                               ; preds = %92
  %95 = sub nsw i32 %5, %88
  %96 = add nsw i32 %82, -1
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %140

98:                                               ; preds = %94, %81
  %99 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %88) #13
  %100 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %99, i64 0, i32 1
  %101 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %100, align 8
  %102 = icmp eq %"class.blink::LayoutTableRow"* %101, null
  br i1 %102, label %140, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 0, i32 0, i32 0
  %105 = tail call i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"* %104) #13
  %106 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 4
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %35, i64 0, i32 5
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 %105, %107
  %111 = sub i32 %110, %109
  %112 = tail call i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"* nonnull %35) #13
  %113 = icmp slt i32 %112, %111
  %114 = select i1 %113, i32 %111, i32 %112
  %115 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %115, i64 0, i32 0, i32 9
  %117 = bitcast [20 x i8]* %116 to i160*
  %118 = load i160, i160* %117, align 8
  %119 = and i160 %118, 15211807202738752817960438464512
  %120 = icmp eq i160 %119, 0
  %121 = select i1 %120, i32* %18, i32* %19
  %122 = load i32, i32* %121, align 4
  %123 = sdiv i32 %122, 64
  %124 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 15211807202738752817960438464512
  %130 = icmp eq i160 %129, 0
  %131 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %101, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %132 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %101, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %133 = select i1 %130, i32* %131, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = sdiv i32 %134, 64
  %136 = sub nsw i32 %135, %123
  %137 = add i32 %136, %114
  %138 = icmp slt i32 %27, %137
  %139 = select i1 %138, i32 %137, i32 %27
  br label %140

140:                                              ; preds = %37, %25, %67, %103, %98, %94, %92, %31
  %141 = phi i32 [ %27, %31 ], [ %27, %37 ], [ %80, %67 ], [ %27, %98 ], [ %139, %103 ], [ %27, %94 ], [ %27, %92 ], [ %27, %25 ]
  %142 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %26, i64 1
  %143 = icmp eq %"class.blink::TableGridCell"* %142, %13
  br i1 %143, label %20, label %25

144:                                              ; preds = %20, %20, %20
  %145 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %6, i32 %5) #13
  %146 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %145, i64 0, i32 3
  %147 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %145, i64 0, i32 3, i32 2
  %148 = load i8, i8* %147, align 1
  %149 = icmp eq i8 %148, 2
  br i1 %149, label %150, label %171, !prof !2

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %145, i64 0, i32 3, i32 3
  %152 = load i8, i8* %151, align 2, !range !4
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %150
  %155 = bitcast %"class.blink::Length"* %146 to float*
  %156 = load float, float* %155, align 4
  br label %161

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %146, i64 0, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = sitofp i32 %159 to float
  br label %161

161:                                              ; preds = %157, %154
  %162 = phi float [ %156, %154 ], [ %160, %157 ]
  %163 = fmul float %162, 6.400000e+01
  %164 = fcmp ult float %163, 0xC1E0000000000000
  %165 = fcmp ugt float %163, 0x41DFFFFFE0000000
  %166 = fcmp ogt float %163, 0xC1E0000000000000
  %167 = select i1 %166, float %163, float 0xC1E0000000000000
  %168 = fptosi float %167 to i32
  %169 = select i1 %164, i32 0, i32 2147483647
  %170 = select i1 %165, i32 %169, i32 %168
  br label %173

171:                                              ; preds = %144
  %172 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %146, i32 0) #13
  br label %173

173:                                              ; preds = %161, %171
  %174 = phi i32 [ %170, %161 ], [ %172, %171 ]
  %175 = sdiv i32 %174, 64
  %176 = srem i32 %174, 64
  %177 = add nsw i32 %176, 32
  %178 = ashr i32 %177, 6
  %179 = add nsw i32 %178, %175
  %180 = icmp slt i32 %21, %179
  %181 = select i1 %180, i32 %179, i32 %21
  br label %182

182:                                              ; preds = %20, %173
  %183 = phi i32 [ %181, %173 ], [ %21, %20 ]
  ret i32 %183
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink18LayoutTableSection23OffsetForRepeatedHeaderEv(%"class.blink::LayoutTableSection"* readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTable"**
  %4 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %4, i64 0, i32 6
  %6 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %5, align 8
  %7 = icmp ne %"class.blink::LayoutTableSection"* %6, null
  %8 = icmp ne %"class.blink::LayoutTableSection"* %6, %0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %4, i64 0, i32 20, i32 0
  br label %36

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %16, %18
  %19 = phi %"class.blink::LayoutObject"* [ %21, %18 ], [ %17, %16 ]
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 7
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %12
  %26 = phi %"class.blink::Node"* [ %14, %12 ], [ %23, %18 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 113
  %32 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %32, i64 0, i32 3
  %34 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %34, i64 0, i32 4, i32 0
  br label %36

36:                                               ; preds = %25, %10
  %37 = phi i32* [ %11, %10 ], [ %35, %25 ]
  %38 = load i32, i32* %37, align 4
  %39 = sdiv i32 %38, 64
  ret i32 %39
}

declare void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #2

declare void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18LayoutTableSection17GroupShouldRepeatEv(%"class.blink::LayoutTableSection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %3 = bitcast %"class.blink::LayoutTableSection"* %0 to i32 (%"class.blink::LayoutBox"*, i32)***
  %4 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %4, i64 176
  %6 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::LayoutBox"* %2, i32 0) #13
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %95, label %9

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %2) #13
  br i1 %10, label %11, label %95

11:                                               ; preds = %9
  %12 = tail call i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"* %2, i32 0) #13
  %13 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  %20 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %21 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %22 = select i1 %19, i32* %20, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %25 = bitcast %"class.blink::LayoutObject"** %24 to %"class.blink::LayoutTable"**
  %26 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %26, i64 0, i32 6
  %28 = load %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"** %27, align 8
  %29 = icmp ne %"class.blink::LayoutTableSection"* %28, null
  %30 = icmp ne %"class.blink::LayoutTableSection"* %28, %0
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %11
  %33 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %26, i64 0, i32 20, i32 0
  br label %58

34:                                               ; preds = %11
  %35 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %38, label %47

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"class.blink::LayoutObject"* [ %43, %40 ], [ %39, %38 ]
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 7
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 6, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %40, label %47

47:                                               ; preds = %40, %34
  %48 = phi %"class.blink::Node"* [ %36, %34 ], [ %45, %40 ]
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 113
  %54 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %54, i64 0, i32 3
  %56 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %56, i64 0, i32 4, i32 0
  br label %58

58:                                               ; preds = %32, %47
  %59 = phi i32* [ %33, %32 ], [ %57, %47 ]
  %60 = load i32, i32* %59, align 4
  %61 = sdiv i32 %60, 64
  %62 = shl nsw i32 %61, 6
  %63 = icmp sgt i32 %60, -64
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %23, i32 %62) #13
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !3
  %69 = icmp sgt i32 %68, %12
  br i1 %69, label %95, label %70

70:                                               ; preds = %58
  %71 = icmp sgt i32 %68, 0
  br i1 %71, label %72, label %94

72:                                               ; preds = %70
  %73 = sext i32 %12 to i64
  %74 = shl nsw i64 %73, 6
  %75 = sext i32 %68 to i64
  %76 = sdiv i64 %74, %75
  %77 = tail call i1 @llvm.is.constant.i64(i64 %76) #13
  br i1 %77, label %85, label %78

78:                                               ; preds = %72
  %79 = icmp slt i64 %76, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = add i64 %76, 2147483648
  %82 = icmp ult i64 %81, 4294967296
  %83 = trunc i64 %76 to i32
  %84 = select i1 %82, i32 %83, i32 %80, !prof !2
  br label %91

85:                                               ; preds = %72
  %86 = icmp sgt i64 %76, 2147483647
  br i1 %86, label %94, label %87

87:                                               ; preds = %85
  %88 = icmp sgt i64 %76, -2147483648
  %89 = select i1 %88, i64 %76, i64 -2147483648
  %90 = trunc i64 %89 to i32
  br label %91

91:                                               ; preds = %78, %87
  %92 = phi i32 [ %84, %78 ], [ %90, %87 ]
  %93 = icmp slt i32 %92, 256
  br i1 %93, label %95, label %94

94:                                               ; preds = %85, %70, %91
  br label %95

95:                                               ; preds = %94, %58, %91, %9, %1
  %96 = phi i1 [ false, %1 ], [ true, %9 ], [ true, %94 ], [ false, %58 ], [ false, %91 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18LayoutTableSection38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutTableSection"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #7 align 2 {
  %5 = alloca %"class.blink::FloatQuad", align 4
  %6 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = icmp eq %"class.blink::LayoutBoxModelObject"* %6, %1
  br i1 %7, label %59, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 16
  %10 = load i8, i8* %9, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 17
  %14 = load i8, i8* %13, align 4, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %56, label %16

16:                                               ; preds = %12, %8
  tail call void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"* %2) #13
  %17 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %2, i64 0, i32 1
  %19 = bitcast %"class.blink::FloatQuad"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 8 %19, i64 32, i1 false) #13
  %20 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %5) #13
  %21 = extractvalue { <2 x float>, <2 x float> } %20, 0
  %22 = extractvalue { <2 x float>, <2 x float> } %20, 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #13
  %23 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %24 = bitcast %"class.blink::LayoutObject"** %23 to %"class.blink::LayoutTable"**
  %25 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 0
  %33 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %25, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %34 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %25, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %35 = select i1 %32, i32* %33, i32* %34
  %36 = load i32, i32* %35, align 4
  %37 = sitofp i32 %36 to float
  %38 = fmul float %37, 1.562500e-02
  %39 = extractelement <2 x float> %21, i32 0
  %40 = extractelement <2 x float> %22, i32 0
  %41 = fadd float %39, %40
  %42 = extractelement <2 x float> %21, i32 1
  %43 = fadd float %42, %38
  %44 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %2, i64 0, i32 3
  %45 = bitcast %"struct.blink::PhysicalOffset"* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = bitcast %"class.blink::FloatQuad"* %18 to <2 x float>*
  store <2 x float> %21, <2 x float>* %46, align 8
  %47 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %2, i64 0, i32 1, i32 1, i32 0
  store float %41, float* %47, align 8
  %48 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %2, i64 0, i32 1, i32 1, i32 1
  store float %42, float* %48, align 4
  %49 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %2, i64 0, i32 1, i32 2, i32 0
  store float %41, float* %49, align 8
  %50 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %2, i64 0, i32 1, i32 2, i32 1
  store float %43, float* %50, align 4
  %51 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %2, i64 0, i32 1, i32 3, i32 0
  store float %39, float* %51, align 8
  %52 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %2, i64 0, i32 1, i32 3, i32 1
  store float %43, float* %52, align 4
  %53 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %24, align 8
  %54 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %53, i64 0, i32 0, i32 0
  %55 = call zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"* %54, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %3) #13
  br label %59

56:                                               ; preds = %12
  %57 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0
  %58 = tail call zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"* %57, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %3) #13
  br label %59

59:                                               ; preds = %4, %56, %16
  %60 = phi i1 [ %55, %16 ], [ %58, %56 ], [ true, %4 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18LayoutTableSection22IsRepeatingHeaderGroupEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 16
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #2

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #2

declare void @_ZN5blink9LayoutBox12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBox"*, i8*, i32) unnamed_addr #2

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #2

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #2

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink18LayoutTableSection7GetNameEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink23LayoutTableBoxComponent15VirtualChildrenEv(%"class.blink::LayoutTableBoxComponent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableBoxComponent", %"class.blink::LayoutTableBoxComponent"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink23LayoutTableBoxComponent15VirtualChildrenEv(%"class.blink::LayoutTableBoxComponent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableBoxComponent", %"class.blink::LayoutTableBoxComponent"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #13
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #13
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsLayoutBlockEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink18LayoutTableSection31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 2
  ret %"class.blink::LayoutNGTableSectionInterface"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1650* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"*, %"class.WTF::Vector.2100"*, i32) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare i64 @_ZNK5blink9LayoutBox22PreferredLogicalWidthsEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink9LayoutBox14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBox"*, %"class.WTF::Vector.2101"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #2

declare void @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23LayoutTableBoxComponent28VisualRectRespectsVisibilityEv(%"class.blink::LayoutTableBoxComponent"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18LayoutTableSection8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutTableSection"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 50
  ret i1 %3
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #2

declare void @_ZN5blink9LayoutBox15WillBeDestroyedEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !3

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #13
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !3
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox15UpdateFromStyleEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !24

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #13
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !3
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !24

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #13
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !3

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #13
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #13
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #13
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #13
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #13
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink9LayoutBox10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i1 zeroext, i32, i32) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i32, i1 zeroext, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18LayoutTableSection33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutTableSection"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2100"*, i32) unnamed_addr #2

declare void @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2100"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !25
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1033, i64 0 }, %12 ], [ { i64 1041, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1017, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #13
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !28
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1041, i64 0 }, %12 ], [ { i64 1033, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1025, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #13
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 4
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox13StartPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox11EndPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #13
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #13
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #13
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #13
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #13
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 -64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink9LayoutBox33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink18LayoutTableSection29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare zeroext i8 @_ZNK5blink9LayoutBox23ComputeOverflowClipAxesEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18LayoutTableSection33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutTableSection"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZN5blink9LayoutBox15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #2

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableSection"* @_ZNK5blink18LayoutTableSection20ToLayoutTableSectionEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutTableSection"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink18LayoutTableSection14ToLayoutObjectEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::LayoutObject"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZN5blink18LayoutTableSection21ToMutableLayoutObjectEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::LayoutObject"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink18LayoutTableSection14TableInterfaceEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutTable"**
  %4 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutTable"* %4, null
  %6 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %4, i64 0, i32 1
  %7 = select i1 %5, %"class.blink::LayoutNGTableInterface"* null, %"class.blink::LayoutNGTableInterface"* %6
  ret %"class.blink::LayoutNGTableInterface"* %7
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableSection"* @_ZThn256_NK5blink18LayoutTableSection20ToLayoutTableSectionEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to %"class.blink::LayoutTableSection"*
  ret %"class.blink::LayoutTableSection"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZThn256_NK5blink18LayoutTableSection14ToLayoutObjectEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZThn256_N5blink18LayoutTableSection21ToMutableLayoutObjectEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZThn256_NK5blink18LayoutTableSection14TableInterfaceEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 3
  %4 = bitcast %"class.blink::LayoutRect"* %3 to %"class.blink::LayoutTable"**
  %5 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTable"* %5, null
  %7 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %5, i64 0, i32 1
  %8 = select i1 %6, %"class.blink::LayoutNGTableInterface"* null, %"class.blink::LayoutNGTableInterface"* %7
  ret %"class.blink::LayoutNGTableInterface"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn256_NK5blink18LayoutTableSection22IsRepeatingHeaderGroupEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to %"class.blink::LayoutTableSection"*
  %4 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %3, i64 0, i32 16
  %5 = load i8, i8* %4, align 1, !range !4
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn256_NK5blink18LayoutTableSection22IsRepeatingFooterGroupEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 22, i32 0, i32 1
  %4 = bitcast %"class.blink::LayoutUnit"* %3 to i8*
  %5 = load i8, i8* %4, align 4, !range !4
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn256_NK5blink18LayoutTableSection7NumRowsEv(%"class.blink::LayoutTableSection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 17, i32 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn256_NK5blink18LayoutTableSection7NumColsEj(%"class.blink::LayoutTableSection"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %0, i64 -1, i32 0, i32 0, i32 2
  %4 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %3, i64 16, i32 1
  %5 = bitcast %"class.blink::LayoutSize"* %4 to %"class.WTF::Vector.2045"*
  %6 = tail call dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"* %5, i32 %1) #13
  %7 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN5blink9LayoutBoxC2EPNS_13ContainerNodeE(%"class.blink::LayoutBox"*, %"class.blink::ContainerNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2045"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2045"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink18LayoutTableSection12TableGridRowENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"struct.blink::LayoutTableSection::TableGridRow"* %6, %"struct.blink::LayoutTableSection::TableGridRow"* %10, %"struct.blink::LayoutTableSection::TableGridRow"* null, i1 zeroext true) #13
  %13 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #13
  br label %32

14:                                               ; preds = %2
  %15 = zext i32 %1 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18LayoutTableSection12TableGridRowEEEmm(i64 %15) #13
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18LayoutTableSection12TableGridRowEEEPKcv, i64 0, i64 0)) #13
  %18 = udiv i64 %16, 40
  %19 = bitcast i8* %17 to %"struct.blink::LayoutTableSection::TableGridRow"*
  %20 = ptrtoint i8* %17 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %22, i64 %25
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink18LayoutTableSection12TableGridRowENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"struct.blink::LayoutTableSection::TableGridRow"* %22, %"struct.blink::LayoutTableSection::TableGridRow"* %26, %"struct.blink::LayoutTableSection::TableGridRow"* %19, i1 zeroext false) #13
  %27 = bitcast %"class.WTF::Vector.2045"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #13
  %29 = bitcast %"class.WTF::Vector.2045"* %0 to i64*
  store atomic i64 %20, i64* %29 monotonic, align 8
  %30 = trunc i64 %18 to i32
  %31 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18LayoutTableSection12TableGridRowEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink18LayoutTableSection12TableGridRowENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %0, %1
  br i1 %5, label %62, label %6

6:                                                ; preds = %4, %58
  %7 = phi %"struct.blink::LayoutTableSection::TableGridRow"* [ %60, %58 ], [ %0, %4 ]
  %8 = phi %"struct.blink::LayoutTableSection::TableGridRow"* [ %59, %58 ], [ %2, %4 ]
  %9 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %8 to i8*
  %10 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %7 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #13
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %8 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %10, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %10, align 4
  store i32 %16, i32* %15, align 4
  %18 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %11, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %11, align 4
  store i32 %19, i32* %18, align 4
  %21 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %8, i64 0, i32 1
  %22 = bitcast %"class.blink::LayoutTableRow"** %21 to i8*
  %23 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 1
  %24 = bitcast %"class.blink::LayoutTableRow"** %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %24, i64 12, i1 false) #13
  %25 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %8, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 3
  %27 = bitcast %"class.blink::Length"* %26 to i64*
  %28 = bitcast %"class.blink::Length"* %25 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 4
  %30 = and i64 %29, 280375465082880
  %31 = icmp eq i64 %30, 8796093022208
  br i1 %31, label %32, label %33

32:                                               ; preds = %6
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %25) #13
  br label %33

33:                                               ; preds = %32, %6
  %34 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 3, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #13
  br label %38

38:                                               ; preds = %37, %33
  %39 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %39, align 8
  %41 = icmp eq %"class.blink::TableGridCell"* %40, null
  br i1 %41, label %58, label %42, !prof !2

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::TableGridCell"* %40 to i8*
  %44 = load i32, i32* %18, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %56, label %46, !prof !3

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %40, i64 %47
  br label %49

49:                                               ; preds = %49, %46
  %50 = phi %"class.blink::TableGridCell"* [ %51, %49 ], [ %40, %46 ]
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %50) #13
  %51 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %50, i64 1
  %52 = icmp eq %"class.blink::TableGridCell"* %51, %48
  br i1 %52, label %53, label %49

53:                                               ; preds = %49
  store i32 0, i32* %18, align 4
  %54 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %7 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %42
  %57 = phi i8* [ %55, %53 ], [ %43, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #13
  store %"class.blink::TableGridCell"* null, %"class.blink::TableGridCell"** %39, align 8
  br label %58

58:                                               ; preds = %38, %56
  %59 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %8, i64 1
  %60 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %7, i64 1
  %61 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %60, %1
  br i1 %61, label %62, label %6

62:                                               ; preds = %58, %4
  ret void
}

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2048"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %55

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2048"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %53, label %14

14:                                               ; preds = %4, %46
  %15 = phi %"class.blink::TableGridCell"* [ %51, %46 ], [ %6, %4 ]
  %16 = phi %"class.blink::TableGridCell"* [ %50, %46 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %16, i64 0, i32 0, i32 0, i32 1, i64 0
  %20 = bitcast %"class.blink::TableGridCell"* %16 to i8**
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %16, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %21, align 8
  %22 = icmp ugt i32 %18, 1
  br i1 %22, label %23, label %31

23:                                               ; preds = %14
  %24 = zext i32 %18 to i64
  %25 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %24) #13
  %26 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %25, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.blink::TableGridCell"* %16 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = lshr i64 %25, 3
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %21, align 8
  br label %31

31:                                               ; preds = %23, %14
  %32 = phi i8* [ %19, %14 ], [ %26, %23 ]
  %33 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %15, i64 0, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %16, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %36, align 8
  %38 = icmp ne i8* %32, null
  %39 = icmp ne %"class.blink::LayoutTableCell"** %37, null
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %46, !prof !2

41:                                               ; preds = %31
  %42 = load i32, i32* %33, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::LayoutTableCell"** %37 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #13
  br label %46

46:                                               ; preds = %41, %31
  %47 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %16, i64 0, i32 1
  %48 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %15, i64 0, i32 1
  %49 = load i8, i8* %48, align 8, !range !4
  store i8 %49, i8* %47, align 8
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %15) #13
  %50 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %16, i64 1
  %51 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %15, i64 1
  %52 = icmp eq %"class.blink::TableGridCell"* %51, %10
  br i1 %52, label %53, label %14

53:                                               ; preds = %46, %4
  %54 = bitcast %"class.blink::TableGridCell"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #13
  br label %119

55:                                               ; preds = %2
  %56 = zext i32 %1 to i64
  %57 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13TableGridCellEEEmm(i64 %56) #13
  %58 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %57, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13TableGridCellEEEPKcv, i64 0, i64 0)) #13
  %59 = lshr i64 %57, 5
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %62, i64 %65
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = bitcast %"class.blink::TableGridCell"* %62 to i8*
  br label %114

70:                                               ; preds = %55
  %71 = bitcast i8* %58 to %"class.blink::TableGridCell"*
  br label %72

72:                                               ; preds = %70, %104
  %73 = phi %"class.blink::TableGridCell"* [ %109, %104 ], [ %62, %70 ]
  %74 = phi %"class.blink::TableGridCell"* [ %108, %104 ], [ %71, %70 ]
  %75 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %73, i64 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %74, i64 0, i32 0, i32 0, i32 1, i64 0
  %78 = bitcast %"class.blink::TableGridCell"* %74 to i8**
  store i8* %77, i8** %78, align 8
  %79 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %74, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %79, align 8
  %80 = icmp ugt i32 %76, 1
  br i1 %80, label %81, label %89

81:                                               ; preds = %72
  %82 = zext i32 %76 to i64
  %83 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %82) #13
  %84 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %83, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %85 = ptrtoint i8* %84 to i64
  %86 = bitcast %"class.blink::TableGridCell"* %74 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = lshr i64 %83, 3
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %79, align 8
  br label %89

89:                                               ; preds = %81, %72
  %90 = phi i8* [ %77, %72 ], [ %84, %81 ]
  %91 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %73, i64 0, i32 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %74, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %94, align 8
  %96 = icmp ne i8* %90, null
  %97 = icmp ne %"class.blink::LayoutTableCell"** %95, null
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %104, !prof !2

99:                                               ; preds = %89
  %100 = load i32, i32* %91, align 4
  %101 = zext i32 %100 to i64
  %102 = bitcast %"class.blink::LayoutTableCell"** %95 to i8*
  %103 = shl nuw nsw i64 %101, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %102, i64 %103, i1 false) #13
  br label %104

104:                                              ; preds = %99, %89
  %105 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %74, i64 0, i32 1
  %106 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %73, i64 0, i32 1
  %107 = load i8, i8* %106, align 8, !range !4
  store i8 %107, i8* %105, align 8
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %73) #13
  %108 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %74, i64 1
  %109 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %73, i64 1
  %110 = icmp eq %"class.blink::TableGridCell"* %109, %66
  br i1 %110, label %111, label %72

111:                                              ; preds = %104
  %112 = bitcast %"class.WTF::Vector.2048"* %0 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %68, %111
  %115 = phi i8* [ %113, %111 ], [ %69, %68 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %115) #13
  %116 = bitcast %"class.WTF::Vector.2048"* %0 to i64*
  store atomic i64 %60, i64* %116 monotonic, align 8
  %117 = trunc i64 %59 to i32
  %118 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %117, i32* %118, align 8
  br label %119

119:                                              ; preds = %114, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13TableGridCellEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2075"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2075", %"class.WTF::Vector.2075"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2075", %"class.WTF::Vector.2075"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %24, i64 %25
  ret %"struct.blink::LayoutTable::ColumnStruct"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox25PixelSnappedLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %36

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = srem i32 %13, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %63

30:                                               ; preds = %9
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %63, !prof !24

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %63

36:                                               ; preds = %1
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = srem i32 %40, 64
  %42 = icmp slt i32 %38, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %41, i32 %38) #13
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !3
  %48 = sdiv i32 %47, 64
  %49 = srem i32 %47, 64
  %50 = add nsw i32 %49, 32
  %51 = ashr i32 %50, 6
  %52 = add nsw i32 %41, 32
  %53 = ashr i32 %52, 6
  %54 = sub nsw i32 %48, %53
  %55 = add nsw i32 %51, %54
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %36
  %58 = add i32 %38, 4
  %59 = icmp ugt i32 %58, 8
  br i1 %59, label %60, label %63, !prof !24

60:                                               ; preds = %57
  %61 = icmp sgt i32 %38, 0
  %62 = select i1 %61, i32 1, i32 -1
  br label %63

63:                                               ; preds = %60, %57, %36, %33, %30, %9
  %64 = phi i32 [ %35, %33 ], [ %28, %9 ], [ 0, %30 ], [ %62, %60 ], [ %55, %36 ], [ 0, %57 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutTableCell22LogicalHeightFromStyleEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 0
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 3
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 8
  %20 = select i1 %15, %"class.blink::Length"* %18, %"class.blink::Length"* %19
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 2
  %22 = load i8, i8* %21, align 1
  switch i8 %22, label %26 [
    i8 2, label %23
    i8 1, label %23
    i8 8, label %23
  ]

23:                                               ; preds = %1, %1, %1
  %24 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %20, i32 0) #13
  %25 = sdiv i32 %24, 64
  br label %26

26:                                               ; preds = %1, %23
  %27 = phi i32 [ %25, %23 ], [ 0, %1 ]
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %31, label %38

31:                                               ; preds = %26, %31
  %32 = phi %"class.blink::LayoutObject"* [ %34, %31 ], [ %8, %26 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 7
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %26
  %39 = phi %"class.blink::Node"* [ %29, %26 ], [ %36, %31 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 33
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %184, label %47

47:                                               ; preds = %38
  %48 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %49 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %49, i64 0, i32 5, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %51, i64 0, i32 11
  %53 = load i8, i8* %52, align 4
  %54 = and i8 %53, 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %184, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58)
  %59 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  %60 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %49, i64 0, i32 9
  %62 = bitcast [20 x i8]* %61 to i160*
  %63 = load i160, i160* %62, align 8, !noalias !31
  %64 = lshr i160 %63, 102
  %65 = trunc i160 %64 to i8
  %66 = and i8 %65, 3
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %49, i64 0, i32 7, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %67, align 8, !noalias !31
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %68, i64 0, i32 16
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %68, i64 0, i32 15
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %68, i64 0, i32 14
  store %"class.blink::Length"* %69, %"class.blink::Length"** %2, align 8, !alias.scope !31
  store %"class.blink::Length"* %70, %"class.blink::Length"** %3, align 8, !alias.scope !31
  store %"class.blink::Length"* %71, %"class.blink::Length"** %4, align 8, !alias.scope !31
  %72 = icmp eq i8 %66, 0
  %73 = icmp eq i8 %66, 1
  %74 = select i1 %73, %"class.blink::Length"** %3, %"class.blink::Length"** %4
  %75 = select i1 %72, %"class.blink::Length"** %2, %"class.blink::Length"** %74
  %76 = load %"class.blink::Length"*, %"class.blink::Length"** %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  %77 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %57, %"class.blink::Length"* dereferenceable(8) %76) #13
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %79 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  %80 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80)
  %81 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  %82 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %83 = bitcast [20 x i8]* %82 to i160*
  %84 = load i160, i160* %83, align 8, !noalias !34
  %85 = lshr i160 %84, 102
  %86 = trunc i160 %85 to i8
  %87 = and i8 %86, 3
  %88 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 7, i32 0, i32 0
  %89 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %88, align 8, !noalias !34
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %89, i64 0, i32 15
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %89, i64 0, i32 13
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %89, i64 0, i32 14
  store %"class.blink::Length"* %90, %"class.blink::Length"** %5, align 8, !alias.scope !34
  store %"class.blink::Length"* %91, %"class.blink::Length"** %6, align 8, !alias.scope !34
  store %"class.blink::Length"* %92, %"class.blink::Length"** %7, align 8, !alias.scope !34
  %93 = icmp eq i8 %87, 0
  %94 = icmp eq i8 %87, 1
  %95 = select i1 %94, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %96 = select i1 %93, %"class.blink::Length"** %6, %"class.blink::Length"** %95
  %97 = load %"class.blink::Length"*, %"class.blink::Length"** %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  %98 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %57, %"class.blink::Length"* dereferenceable(8) %97) #13
  %99 = icmp slt i32 %98, 0
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %98) #13
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !3
  %105 = icmp slt i32 %104, -2147483584
  %106 = ashr i32 %104, 6
  %107 = select i1 %105, i32 -33554432, i32 %106, !prof !3
  %108 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8, !noalias !37
  %109 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %108, i64 0, i32 0, i32 9
  %110 = bitcast [20 x i8]* %109 to i160*
  %111 = load i160, i160* %110, align 8, !noalias !37
  %112 = lshr i160 %111, 102
  %113 = trunc i160 %112 to i8
  %114 = and i8 %113, 3
  %115 = bitcast %"class.blink::LayoutTableCell"* %0 to i8*
  switch i8 %114, label %116 [
    i8 0, label %125
    i8 1, label %117
  ]

116:                                              ; preds = %56
  br label %117

117:                                              ; preds = %116, %56
  %118 = phi { i64, i64 } [ { i64 993, i64 0 }, %116 ], [ { i64 1001, i64 0 }, %56 ]
  %119 = extractvalue { i64, i64 } %118, 0
  %120 = extractvalue { i64, i64 } %118, 1
  %121 = getelementptr inbounds i8, i8* %115, i64 %120
  %122 = bitcast i8* %121 to %"class.blink::LayoutBoxModelObject"*
  %123 = and i64 %119, 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %135, label %125

125:                                              ; preds = %117, %56
  %126 = phi %"class.blink::LayoutBoxModelObject"* [ %122, %117 ], [ %57, %56 ]
  %127 = phi i8* [ %121, %117 ], [ %115, %56 ]
  %128 = phi i64 [ %119, %117 ], [ 977, %56 ]
  %129 = bitcast i8* %127 to i8**
  %130 = load i8*, i8** %129, align 8
  %131 = add i64 %128, -1
  %132 = getelementptr i8, i8* %130, i64 %131
  %133 = bitcast i8* %132 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %134 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %133, align 8
  br label %137

135:                                              ; preds = %117
  %136 = inttoptr i64 %119 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %137

137:                                              ; preds = %125, %135
  %138 = phi %"class.blink::LayoutBoxModelObject"* [ %126, %125 ], [ %122, %135 ]
  %139 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %134, %125 ], [ %136, %135 ]
  %140 = tail call i32 %139(%"class.blink::LayoutBoxModelObject"* %138) #13
  %141 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8, !noalias !40
  %142 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %141, i64 0, i32 0, i32 9
  %143 = bitcast [20 x i8]* %142 to i160*
  %144 = load i160, i160* %143, align 8, !noalias !40
  %145 = lshr i160 %144, 102
  %146 = trunc i160 %145 to i8
  %147 = and i8 %146, 3
  switch i8 %147, label %148 [
    i8 0, label %157
    i8 1, label %149
  ]

148:                                              ; preds = %137
  br label %149

149:                                              ; preds = %148, %137
  %150 = phi { i64, i64 } [ { i64 1001, i64 0 }, %148 ], [ { i64 993, i64 0 }, %137 ]
  %151 = extractvalue { i64, i64 } %150, 0
  %152 = extractvalue { i64, i64 } %150, 1
  %153 = getelementptr inbounds i8, i8* %115, i64 %152
  %154 = bitcast i8* %153 to %"class.blink::LayoutBoxModelObject"*
  %155 = and i64 %151, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %167, label %157

157:                                              ; preds = %149, %137
  %158 = phi %"class.blink::LayoutBoxModelObject"* [ %154, %149 ], [ %57, %137 ]
  %159 = phi i8* [ %153, %149 ], [ %115, %137 ]
  %160 = phi i64 [ %151, %149 ], [ 985, %137 ]
  %161 = bitcast i8* %159 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = add i64 %160, -1
  %164 = getelementptr i8, i8* %162, i64 %163
  %165 = bitcast i8* %164 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %166 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %165, align 8
  br label %169

167:                                              ; preds = %149
  %168 = inttoptr i64 %151 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %169

169:                                              ; preds = %157, %167
  %170 = phi %"class.blink::LayoutBoxModelObject"* [ %158, %157 ], [ %154, %167 ]
  %171 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %166, %157 ], [ %168, %167 ]
  %172 = tail call i32 %171(%"class.blink::LayoutBoxModelObject"* %170) #13
  %173 = icmp slt i32 %172, 0
  %174 = select i1 %173, i32 -2147483648, i32 2147483647
  %175 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %140, i32 %172) #13
  %176 = extractvalue { i32, i1 } %175, 1
  %177 = extractvalue { i32, i1 } %175, 0
  %178 = select i1 %176, i32 %174, i32 %177, !prof !3
  %179 = icmp slt i32 %178, -2147483584
  %180 = ashr i32 %178, 6
  %181 = select i1 %179, i32 -33554432, i32 %180, !prof !3
  %182 = add nsw i32 %107, %27
  %183 = add nsw i32 %182, %181
  br label %184

184:                                              ; preds = %47, %169, %38
  %185 = phi i32 [ %27, %38 ], [ %183, %169 ], [ %27, %47 ]
  ret i32 %185
}

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #2

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #9

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2097"*, %"class.blink::LayoutTableCell"**) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutTableCell"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %24, i64 %25
  ret %"class.blink::LayoutTableCell"** %26
}

declare void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #2

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #2

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #2

declare i32 @_ZNK5blink15LayoutTableCell19ParseRowSpanFromDOMEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.2167, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !2

23:                                               ; preds = %19
  %24 = bitcast %class.anon.2167* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.anon.2167, %class.anon.2167* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.2167, %class.anon.2167* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), %class.anon.2167* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #13
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2167* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = tail call i8* @_Znwm(i64 192) #14
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #13
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #13
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #13
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #13
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #13
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #13
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #13
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds %class.anon.2167, %class.anon.2167* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #13
  %40 = getelementptr inbounds %class.anon.2167, %class.anon.2167* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #13
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #13
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #13
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #13
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #13
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #2

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #2

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !43

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !45

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !46

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #14
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #14, !noalias !47
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !47
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #14
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZN5blink11LayoutTable26InvalidateCollapsedBordersEv(%"class.blink::LayoutTable"*) local_unnamed_addr #2

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #2

declare void @_ZNK5blink15LayoutTableCell27UpdateCollapsedBorderValuesEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %24, i64 %25
  ret %"struct.blink::LayoutTableSection::TableGridRow"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::TableGridCell"* @_ZN3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %24, i64 %25
  ret %"class.blink::TableGridCell"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::LayoutTableSection::TableGridRow"* @_ZNK3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2045"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %24, i64 %25
  ret %"struct.blink::LayoutTableSection::TableGridRow"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::TableGridCell"* @_ZNK3WTF6VectorIN5blink13TableGridCellELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2048"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2048", %"class.WTF::Vector.2048"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %24, i64 %25
  ret %"class.blink::TableGridCell"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #13
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 -23
  %8 = icmp eq %"class.base::RefCounted.732"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 1
  %11 = bitcast %"class.base::RefCounted.732"* %10 to %"class.blink::StyleCachedData"**
  %12 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %11, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %11, align 8
  %13 = icmp eq %"class.blink::StyleCachedData"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %15, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %15, align 8
  %17 = icmp eq %"class.WTF::Vector.739"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22, !prof !3

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  br label %27

27:                                               ; preds = %22, %33
  %28 = phi %class.scoped_refptr* [ %34, %33 ], [ %24, %22 ]
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = icmp eq %"class.blink::ComputedStyle"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %30) #13
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %26
  br i1 %35, label %36, label %27

36:                                               ; preds = %33
  store i32 0, i32* %19, align 4
  br label %37

37:                                               ; preds = %36, %18
  %38 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.scoped_refptr*, %class.scoped_refptr** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast i8* %40 to %class.scoped_refptr*
  %42 = icmp eq %class.scoped_refptr* %39, %41
  br i1 %42, label %45, label %43, !prof !2

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2126"* %44, %class.scoped_refptr* %39) #13
  br label %45

45:                                               ; preds = %37, %43
  store %class.scoped_refptr* null, %class.scoped_refptr** %38, align 8
  %46 = bitcast %"class.WTF::Vector.739"* %16 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #13
  br label %47

47:                                               ; preds = %14, %45
  %48 = bitcast %"class.blink::StyleCachedData"* %12 to i8*
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %47, %9
  %50 = bitcast %"class.base::RefCounted.732"* %7 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* nonnull %50) #13
  %51 = bitcast %"class.base::RefCounted.732"* %7 to i8*
  tail call void @free(i8* %51) #13
  br label %52

52:                                               ; preds = %49, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #13
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #13
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #13
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #13
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #13
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #13
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #13
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #13
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #13
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #13
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #13
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #13
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #13
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #13
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #13
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #13
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #13
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #13
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #13
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #13
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #13
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #13
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #13
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #13
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #13
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #13
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #13
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #13
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #13
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #13
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #13
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #13
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #13
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %3) #13
  %4 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %51

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 -23
  %9 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 1
  %10 = bitcast %"class.base::RefCounted.732"* %9 to %"class.blink::StyleCachedData"**
  %11 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %10, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %10, align 8
  %12 = icmp eq %"class.blink::StyleCachedData"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %14, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %14, align 8
  %16 = icmp eq %"class.WTF::Vector.739"* %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %36, label %21, !prof !3

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr*, %class.scoped_refptr** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %24
  br label %26

26:                                               ; preds = %21, %32
  %27 = phi %class.scoped_refptr* [ %33, %32 ], [ %23, %21 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = icmp eq %"class.blink::ComputedStyle"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %29) #13
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %34 = icmp eq %class.scoped_refptr* %33, %25
  br i1 %34, label %35, label %26

35:                                               ; preds = %32
  store i32 0, i32* %18, align 4
  br label %36

36:                                               ; preds = %35, %17
  %37 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %38 = load %class.scoped_refptr*, %class.scoped_refptr** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %class.scoped_refptr*
  %41 = icmp eq %class.scoped_refptr* %38, %40
  br i1 %41, label %44, label %42, !prof !2

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2126"* %43, %class.scoped_refptr* %38) #13
  br label %44

44:                                               ; preds = %36, %42
  store %class.scoped_refptr* null, %class.scoped_refptr** %37, align 8
  %45 = bitcast %"class.WTF::Vector.739"* %15 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #13
  br label %46

46:                                               ; preds = %13, %44
  %47 = bitcast %"class.blink::StyleCachedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %46, %7
  %49 = bitcast %"class.base::RefCounted.732"* %8 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %49) #13
  %50 = bitcast %"class.base::RefCounted.732"* %8 to i8*
  tail call void @free(i8* %50) #13
  br label %51

51:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2126"*, %class.scoped_refptr*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #13
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #13
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !2

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #13
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #13
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #13
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #13
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !2

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #13
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #13
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #13
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #13
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #13
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #13
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #13
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #13
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #13
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #13
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #13
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !3

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #13
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #13
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #13
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #13
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #13
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #13
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #13
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #13
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #13
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #13
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #13
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #13
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #13
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #13
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #13
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #13
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #13
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #13
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #13
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !3

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #13
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #13
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #13
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #13
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !2

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !3

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #13
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #13
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #13
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #13
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !3

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #13
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !3

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !2

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #13
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #13
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !2

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !3

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #13
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #13
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #13
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #13
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #13
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #13
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #13
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #13
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #13
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #13
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #13
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #13
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !2

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !3

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #13
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #13
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #13
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #13
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !2

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !3

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #13
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #13
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #13
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #13
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #13
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #13
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !2

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #13
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #13
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #13
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #13
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #13
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #13
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #13
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #13
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #13
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #13
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !2

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !3

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #13
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #13
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #13
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #13
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !2

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !3

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #13
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #13
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #13
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #13
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !2

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !3

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #13
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !2

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #13
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #13
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #13
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #13
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !2

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #13
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !2

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !3

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #13
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #13
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !2

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !3

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #13
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #13
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #13
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !2

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !2

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #13
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #13
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !2

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !2

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !2

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !2

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !2

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !2

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !3

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #13
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #13
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !2

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !2

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !3

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #13
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #13
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !2

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !2

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !3

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #13
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #13
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !2

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !2

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !3

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #13
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #13
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !2

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !2

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !3

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #13
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #13
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !2

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !2

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !3

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #13
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #13
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #13
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !2

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !3

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #13
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #13
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #13
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #13
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #13
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #13
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !4
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #13
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #13
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !3

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #13
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #13
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !3

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #13
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #13
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #13
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #13
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #13
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #13
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #13
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #13
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #13
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #13
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #13
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #13
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #13
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #13
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #13
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #13
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #13
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #13
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #13
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #13
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #13
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #13
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #13
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !2

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !3

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #13
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #13
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #13
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #13
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !2

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !3

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #13
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #13
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #13
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #13
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !2

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !3

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #13
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #13
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #13
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #13
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !2

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !3

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #13
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #13
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #13
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !2

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !3

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #13
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !2

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #13
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #13
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #13
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #13
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #13
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !3

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !2

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #13
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #13
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #13
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !2

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !3

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #13
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #13
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #13
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #13
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #13
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !2

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !3

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #13
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #13
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #13
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #13
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #13
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #13
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #13
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #13
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #13
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !3

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #13
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #13
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #13
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZNK3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2075"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2075", %"class.WTF::Vector.2075"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2075", %"class.WTF::Vector.2075"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %24, i64 %25
  ret %"struct.blink::LayoutTable::ColumnStruct"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2051"*, %"class.blink::LayoutTableCell"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutTableCell"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutTableCell"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2051"* %0, i32 %5) #13
  %14 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::LayoutTableCell"** %1 to i64
  %17 = ptrtoint %"class.blink::LayoutTableCell"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2051"* %0, i32 %5) #13
  %20 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::LayoutTableCell"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::LayoutTableCell"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %23, i64 %26
  %28 = bitcast %"class.blink::LayoutTableCell"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::LayoutTableCell"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2051"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %31, align 8
  %33 = icmp eq %"class.blink::LayoutTableCell"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2051"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2051"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2051"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2051"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %5, align 8
  %7 = icmp eq %"class.blink::LayoutTableCell"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::LayoutTableCell"**
  %10 = icmp eq %"class.blink::LayoutTableCell"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2051"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2051"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::LayoutTableCell"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2052"* %19, %"class.blink::LayoutTableCell"** nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::LayoutTableCell"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::LayoutTableCell"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #13
  %46 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::LayoutTableCell"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::LayoutTableCell"**
  %51 = icmp eq %"class.blink::LayoutTableCell"** %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2052"* %53, %"class.blink::LayoutTableCell"** %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2051"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2052"*, %"class.blink::LayoutTableCell"**) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutTableCell"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZNK3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2051"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %24, i64 %25
  ret %"class.blink::LayoutTableCell"** %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEvT0_SA_T_(%"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %264, %3
  %5 = phi %"class.blink::LayoutTableCell"** [ %1, %3 ], [ %243, %264 ]
  %6 = phi %"class.blink::LayoutTableCell"** [ %0, %3 ], [ %17, %264 ]
  %7 = ptrtoint %"class.blink::LayoutTableCell"** %5 to i64
  %8 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, i64 -1
  %9 = bitcast %"class.blink::LayoutTableCell"** %8 to i64*
  %10 = bitcast %"class.blink::LayoutTableCell"** %8 to i64*
  %11 = bitcast %"class.blink::LayoutTableCell"** %8 to i64*
  %12 = bitcast %"class.blink::LayoutTableCell"** %8 to i64*
  %13 = ptrtoint %"class.blink::LayoutTableCell"** %5 to i64
  br label %14

14:                                               ; preds = %273, %4
  %15 = phi %"class.blink::LayoutTableCell"** [ %6, %4 ], [ %274, %273 ]
  br label %16

16:                                               ; preds = %187, %14
  %17 = phi %"class.blink::LayoutTableCell"** [ %15, %14 ], [ %174, %187 ]
  %18 = ptrtoint %"class.blink::LayoutTableCell"** %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %86 [
    i64 0, label %277
    i64 1, label %277
    i64 2, label %21
    i64 3, label %32
    i64 4, label %75
    i64 5, label %80
  ]

21:                                               ; preds = %16
  %22 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, i64 -1
  %24 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %23, align 8
  %25 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %26 = tail call zeroext i1 %22(%"class.blink::LayoutTableCell"* %24, %"class.blink::LayoutTableCell"* %25) #13
  br i1 %26, label %27, label %277

27:                                               ; preds = %21
  %28 = bitcast %"class.blink::LayoutTableCell"** %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::LayoutTableCell"** %23 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  br label %277

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 1
  %34 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, i64 -1
  %35 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %36 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %33, align 8
  %37 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %38 = tail call zeroext i1 %35(%"class.blink::LayoutTableCell"* %36, %"class.blink::LayoutTableCell"* %37) #13
  %39 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %40 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %34, align 8
  %41 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %33, align 8
  %42 = tail call zeroext i1 %39(%"class.blink::LayoutTableCell"* %40, %"class.blink::LayoutTableCell"* %41) #13
  br i1 %38, label %58, label %43

43:                                               ; preds = %32
  br i1 %42, label %44, label %277

44:                                               ; preds = %43
  %45 = bitcast %"class.blink::LayoutTableCell"** %33 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::LayoutTableCell"** %34 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %50 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %33, align 8
  %51 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %52 = tail call zeroext i1 %49(%"class.blink::LayoutTableCell"* %50, %"class.blink::LayoutTableCell"* %51) #13
  br i1 %52, label %53, label %277

53:                                               ; preds = %44
  %54 = bitcast %"class.blink::LayoutTableCell"** %17 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = shufflevector <2 x i64> %55, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %57 = bitcast %"class.blink::LayoutTableCell"** %17 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 8
  br label %277

58:                                               ; preds = %32
  %59 = bitcast %"class.blink::LayoutTableCell"** %17 to i64*
  %60 = load i64, i64* %59, align 8
  br i1 %42, label %61, label %64

61:                                               ; preds = %58
  %62 = bitcast %"class.blink::LayoutTableCell"** %34 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %59, align 8
  store i64 %60, i64* %62, align 8
  br label %277

64:                                               ; preds = %58
  %65 = bitcast %"class.blink::LayoutTableCell"** %33 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %59, align 8
  store i64 %60, i64* %65, align 8
  %67 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %68 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %34, align 8
  %69 = inttoptr i64 %60 to %"class.blink::LayoutTableCell"*
  %70 = tail call zeroext i1 %67(%"class.blink::LayoutTableCell"* %68, %"class.blink::LayoutTableCell"* %69) #13
  br i1 %70, label %71, label %277

71:                                               ; preds = %64
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"class.blink::LayoutTableCell"** %34 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %65, align 8
  store i64 %72, i64* %73, align 8
  br label %277

75:                                               ; preds = %16
  %76 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 1
  %77 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 2
  %78 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::LayoutTableCell"** %17, %"class.blink::LayoutTableCell"** %76, %"class.blink::LayoutTableCell"** %77, %"class.blink::LayoutTableCell"** %78, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  br label %277

80:                                               ; preds = %16
  %81 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 1
  %82 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 2
  %83 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 3
  %84 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, i64 -1
  %85 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::LayoutTableCell"** %17, %"class.blink::LayoutTableCell"** %81, %"class.blink::LayoutTableCell"** %82, %"class.blink::LayoutTableCell"** %83, %"class.blink::LayoutTableCell"** %84, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  br label %277

86:                                               ; preds = %16
  %87 = icmp slt i64 %19, 248
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEvT0_SA_T_(%"class.blink::LayoutTableCell"** %17, %"class.blink::LayoutTableCell"** %5, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  br label %277

89:                                               ; preds = %86
  %90 = icmp sgt i64 %19, 7992
  %91 = sdiv i64 %20, 2
  %92 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 %91
  br i1 %90, label %93, label %98

93:                                               ; preds = %89
  %94 = sdiv i64 %20, 4
  %95 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 %94
  %96 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %92, i64 %94
  %97 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::LayoutTableCell"** %17, %"class.blink::LayoutTableCell"** %95, %"class.blink::LayoutTableCell"** %92, %"class.blink::LayoutTableCell"** %96, %"class.blink::LayoutTableCell"** %8, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  br label %135

98:                                               ; preds = %89
  %99 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %100 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %92, align 8
  %101 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %102 = tail call zeroext i1 %99(%"class.blink::LayoutTableCell"* %100, %"class.blink::LayoutTableCell"* %101) #13
  %103 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %104 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %8, align 8
  %105 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %92, align 8
  %106 = tail call zeroext i1 %103(%"class.blink::LayoutTableCell"* %104, %"class.blink::LayoutTableCell"* %105) #13
  br i1 %102, label %120, label %107

107:                                              ; preds = %98
  br i1 %106, label %108, label %135

108:                                              ; preds = %107
  %109 = bitcast %"class.blink::LayoutTableCell"** %92 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %9, align 8
  store i64 %111, i64* %109, align 8
  store i64 %110, i64* %9, align 8
  %112 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %113 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %92, align 8
  %114 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %115 = tail call zeroext i1 %112(%"class.blink::LayoutTableCell"* %113, %"class.blink::LayoutTableCell"* %114) #13
  br i1 %115, label %116, label %135

116:                                              ; preds = %108
  %117 = bitcast %"class.blink::LayoutTableCell"** %17 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %109, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %109, align 8
  br label %135

120:                                              ; preds = %98
  %121 = bitcast %"class.blink::LayoutTableCell"** %17 to i64*
  %122 = load i64, i64* %121, align 8
  br i1 %106, label %123, label %125

123:                                              ; preds = %120
  %124 = load i64, i64* %11, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %11, align 8
  br label %135

125:                                              ; preds = %120
  %126 = bitcast %"class.blink::LayoutTableCell"** %92 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  store i64 %122, i64* %126, align 8
  %128 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %129 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %8, align 8
  %130 = inttoptr i64 %122 to %"class.blink::LayoutTableCell"*
  %131 = tail call zeroext i1 %128(%"class.blink::LayoutTableCell"* %129, %"class.blink::LayoutTableCell"* %130) #13
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = load i64, i64* %126, align 8
  %134 = load i64, i64* %10, align 8
  store i64 %134, i64* %126, align 8
  store i64 %133, i64* %10, align 8
  br label %135

135:                                              ; preds = %132, %125, %123, %116, %108, %107, %93
  %136 = phi i32 [ %97, %93 ], [ 1, %123 ], [ 0, %107 ], [ 2, %116 ], [ 1, %108 ], [ 2, %132 ], [ 1, %125 ]
  %137 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %138 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %139 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %92, align 8
  %140 = tail call zeroext i1 %137(%"class.blink::LayoutTableCell"* %138, %"class.blink::LayoutTableCell"* %139) #13
  br i1 %140, label %205, label %141

141:                                              ; preds = %135, %194
  %142 = phi %"class.blink::LayoutTableCell"** [ %143, %194 ], [ %8, %135 ]
  %143 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %142, i64 -1
  %144 = icmp eq %"class.blink::LayoutTableCell"** %17, %143
  br i1 %144, label %145, label %194

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 1
  %147 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %148 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %149 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %8, align 8
  %150 = tail call zeroext i1 %147(%"class.blink::LayoutTableCell"* %148, %"class.blink::LayoutTableCell"* %149) #13
  br i1 %150, label %167, label %151

151:                                              ; preds = %145
  %152 = icmp eq %"class.blink::LayoutTableCell"** %146, %8
  br i1 %152, label %277, label %153

153:                                              ; preds = %151, %164
  %154 = phi %"class.blink::LayoutTableCell"** [ %165, %164 ], [ %146, %151 ]
  %155 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %156 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %157 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %154, align 8
  %158 = tail call zeroext i1 %155(%"class.blink::LayoutTableCell"* %156, %"class.blink::LayoutTableCell"* %157) #13
  br i1 %158, label %159, label %164

159:                                              ; preds = %153
  %160 = bitcast %"class.blink::LayoutTableCell"** %154 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %12, align 8
  store i64 %162, i64* %160, align 8
  store i64 %161, i64* %12, align 8
  %163 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %154, i64 1
  br label %167

164:                                              ; preds = %153
  %165 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %154, i64 1
  %166 = icmp eq %"class.blink::LayoutTableCell"** %165, %8
  br i1 %166, label %277, label %153

167:                                              ; preds = %159, %145
  %168 = phi %"class.blink::LayoutTableCell"** [ %146, %145 ], [ %163, %159 ]
  %169 = icmp eq %"class.blink::LayoutTableCell"** %168, %8
  br i1 %169, label %277, label %170

170:                                              ; preds = %167, %189
  %171 = phi %"class.blink::LayoutTableCell"** [ %179, %189 ], [ %168, %167 ]
  %172 = phi %"class.blink::LayoutTableCell"** [ %184, %189 ], [ %8, %167 ]
  br label %173

173:                                              ; preds = %173, %170
  %174 = phi %"class.blink::LayoutTableCell"** [ %171, %170 ], [ %179, %173 ]
  %175 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %176 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %177 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %174, align 8
  %178 = tail call zeroext i1 %175(%"class.blink::LayoutTableCell"* %176, %"class.blink::LayoutTableCell"* %177) #13
  %179 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %174, i64 1
  br i1 %178, label %180, label %173

180:                                              ; preds = %173, %180
  %181 = phi %"class.blink::LayoutTableCell"** [ %184, %180 ], [ %172, %173 ]
  %182 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %183 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, align 8
  %184 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %181, i64 -1
  %185 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %184, align 8
  %186 = tail call zeroext i1 %182(%"class.blink::LayoutTableCell"* %183, %"class.blink::LayoutTableCell"* %185) #13
  br i1 %186, label %180, label %187

187:                                              ; preds = %180
  %188 = icmp ult %"class.blink::LayoutTableCell"** %174, %184
  br i1 %188, label %189, label %16

189:                                              ; preds = %187
  %190 = bitcast %"class.blink::LayoutTableCell"** %174 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.blink::LayoutTableCell"** %184 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %190, align 8
  store i64 %191, i64* %192, align 8
  br label %170

194:                                              ; preds = %141
  %195 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %196 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %143, align 8
  %197 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %92, align 8
  %198 = tail call zeroext i1 %195(%"class.blink::LayoutTableCell"* %196, %"class.blink::LayoutTableCell"* %197) #13
  br i1 %198, label %199, label %141

199:                                              ; preds = %194
  %200 = bitcast %"class.blink::LayoutTableCell"** %17 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.blink::LayoutTableCell"** %143 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %200, align 8
  store i64 %201, i64* %202, align 8
  %204 = add i32 %136, 1
  br label %205

205:                                              ; preds = %135, %199
  %206 = phi i32 [ %204, %199 ], [ %136, %135 ]
  %207 = phi %"class.blink::LayoutTableCell"** [ %143, %199 ], [ %8, %135 ]
  %208 = ptrtoint %"class.blink::LayoutTableCell"** %17 to i64
  %209 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %17, i64 1
  %210 = icmp ult %"class.blink::LayoutTableCell"** %209, %207
  br i1 %210, label %211, label %240

211:                                              ; preds = %205, %232
  %212 = phi %"class.blink::LayoutTableCell"** [ %239, %232 ], [ %92, %205 ]
  %213 = phi i32 [ %237, %232 ], [ %206, %205 ]
  %214 = phi %"class.blink::LayoutTableCell"** [ %222, %232 ], [ %209, %205 ]
  %215 = phi %"class.blink::LayoutTableCell"** [ %226, %232 ], [ %207, %205 ]
  br label %216

216:                                              ; preds = %216, %211
  %217 = phi %"class.blink::LayoutTableCell"** [ %214, %211 ], [ %222, %216 ]
  %218 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %219 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %217, align 8
  %220 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %212, align 8
  %221 = tail call zeroext i1 %218(%"class.blink::LayoutTableCell"* %219, %"class.blink::LayoutTableCell"* %220) #13
  %222 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %217, i64 1
  br i1 %221, label %216, label %223

223:                                              ; preds = %216, %223
  %224 = phi %"class.blink::LayoutTableCell"** [ %226, %223 ], [ %215, %216 ]
  %225 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %226 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %224, i64 -1
  %227 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %226, align 8
  %228 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %212, align 8
  %229 = tail call zeroext i1 %225(%"class.blink::LayoutTableCell"* %227, %"class.blink::LayoutTableCell"* %228) #13
  br i1 %229, label %230, label %223

230:                                              ; preds = %223
  %231 = icmp ugt %"class.blink::LayoutTableCell"** %217, %226
  br i1 %231, label %240, label %232

232:                                              ; preds = %230
  %233 = bitcast %"class.blink::LayoutTableCell"** %217 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.blink::LayoutTableCell"** %226 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %233, align 8
  store i64 %234, i64* %235, align 8
  %237 = add i32 %213, 1
  %238 = icmp eq %"class.blink::LayoutTableCell"** %212, %217
  %239 = select i1 %238, %"class.blink::LayoutTableCell"** %226, %"class.blink::LayoutTableCell"** %212
  br label %211

240:                                              ; preds = %230, %205
  %241 = phi %"class.blink::LayoutTableCell"** [ %92, %205 ], [ %212, %230 ]
  %242 = phi i32 [ %206, %205 ], [ %213, %230 ]
  %243 = phi %"class.blink::LayoutTableCell"** [ %209, %205 ], [ %217, %230 ]
  %244 = icmp eq %"class.blink::LayoutTableCell"** %243, %241
  br i1 %244, label %256, label %245

245:                                              ; preds = %240
  %246 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %247 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %241, align 8
  %248 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %243, align 8
  %249 = tail call zeroext i1 %246(%"class.blink::LayoutTableCell"* %247, %"class.blink::LayoutTableCell"* %248) #13
  br i1 %249, label %250, label %256

250:                                              ; preds = %245
  %251 = bitcast %"class.blink::LayoutTableCell"** %243 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.blink::LayoutTableCell"** %241 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %251, align 8
  store i64 %252, i64* %253, align 8
  %255 = add i32 %242, 1
  br label %256

256:                                              ; preds = %240, %250, %245
  %257 = phi i32 [ %255, %250 ], [ %242, %245 ], [ %242, %240 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %256
  %260 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEbT0_SA_T_(%"class.blink::LayoutTableCell"** %17, %"class.blink::LayoutTableCell"** %243, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  %261 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %243, i64 1
  %262 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEbT0_SA_T_(%"class.blink::LayoutTableCell"** %261, %"class.blink::LayoutTableCell"** %5, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  br i1 %260, label %277, label %264

264:                                              ; preds = %263, %275
  br label %4

265:                                              ; preds = %259
  br i1 %260, label %273, label %266

266:                                              ; preds = %265, %256
  %267 = ptrtoint %"class.blink::LayoutTableCell"** %243 to i64
  %268 = sub i64 %267, %208
  %269 = sub i64 %13, %267
  %270 = icmp slt i64 %268, %269
  br i1 %270, label %271, label %275

271:                                              ; preds = %266
  tail call void @_ZNSt3__16__sortIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEvT0_SA_T_(%"class.blink::LayoutTableCell"** %17, %"class.blink::LayoutTableCell"** %243, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  %272 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %243, i64 1
  br label %273

273:                                              ; preds = %271, %265
  %274 = phi %"class.blink::LayoutTableCell"** [ %261, %265 ], [ %272, %271 ]
  br label %14

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %243, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEvT0_SA_T_(%"class.blink::LayoutTableCell"** %276, %"class.blink::LayoutTableCell"** %5, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  br label %264

277:                                              ; preds = %263, %167, %16, %16, %151, %164, %71, %64, %61, %53, %44, %43, %21, %27, %75, %80, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %4, align 8
  %7 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, align 8
  %8 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.blink::LayoutTableCell"* %7, %"class.blink::LayoutTableCell"* %8) #13
  %10 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %4, align 8
  %11 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %2, align 8
  %12 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, align 8
  %13 = tail call zeroext i1 %10(%"class.blink::LayoutTableCell"* %11, %"class.blink::LayoutTableCell"* %12) #13
  br i1 %9, label %28, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %45

15:                                               ; preds = %14
  %16 = bitcast %"class.blink::LayoutTableCell"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::LayoutTableCell"** %2 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %4, align 8
  %21 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, align 8
  %22 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.blink::LayoutTableCell"* %21, %"class.blink::LayoutTableCell"* %22) #13
  br i1 %23, label %24, label %45

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::LayoutTableCell"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %16, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  br label %45

28:                                               ; preds = %5
  %29 = bitcast %"class.blink::LayoutTableCell"** %0 to i64*
  %30 = load i64, i64* %29, align 8
  br i1 %13, label %31, label %34

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::LayoutTableCell"** %2 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  br label %45

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::LayoutTableCell"** %1 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %30, i64* %35, align 8
  %37 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %4, align 8
  %38 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %2, align 8
  %39 = inttoptr i64 %30 to %"class.blink::LayoutTableCell"*
  %40 = tail call zeroext i1 %37(%"class.blink::LayoutTableCell"* %38, %"class.blink::LayoutTableCell"* %39) #13
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = load i64, i64* %35, align 8
  %43 = bitcast %"class.blink::LayoutTableCell"** %2 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %35, align 8
  store i64 %42, i64* %43, align 8
  br label %45

45:                                               ; preds = %14, %15, %24, %31, %34, %41
  %46 = phi i32 [ 1, %31 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %34 ]
  %47 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %4, align 8
  %48 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %3, align 8
  %49 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %2, align 8
  %50 = tail call zeroext i1 %47(%"class.blink::LayoutTableCell"* %48, %"class.blink::LayoutTableCell"* %49) #13
  br i1 %50, label %51, label %75

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::LayoutTableCell"** %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::LayoutTableCell"** %3 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  store i64 %53, i64* %54, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %4, align 8
  %58 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %2, align 8
  %59 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, align 8
  %60 = tail call zeroext i1 %57(%"class.blink::LayoutTableCell"* %58, %"class.blink::LayoutTableCell"* %59) #13
  br i1 %60, label %61, label %75

61:                                               ; preds = %51
  %62 = bitcast %"class.blink::LayoutTableCell"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %52, align 8
  store i64 %64, i64* %62, align 8
  store i64 %63, i64* %52, align 8
  %65 = add nuw nsw i32 %46, 2
  %66 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %4, align 8
  %67 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, align 8
  %68 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %69 = tail call zeroext i1 %66(%"class.blink::LayoutTableCell"* %67, %"class.blink::LayoutTableCell"* %68) #13
  br i1 %69, label %70, label %75

70:                                               ; preds = %61
  %71 = bitcast %"class.blink::LayoutTableCell"** %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %62, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %62, align 8
  %74 = add nuw nsw i32 %46, 3
  br label %75

75:                                               ; preds = %51, %70, %61, %45
  %76 = phi i32 [ %74, %70 ], [ %65, %61 ], [ %56, %51 ], [ %46, %45 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::LayoutTableCell"** %0, %"class.blink::LayoutTableCell"** %1, %"class.blink::LayoutTableCell"** %2, %"class.blink::LayoutTableCell"** %3, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %5, align 8
  %9 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %4, align 8
  %10 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %3, align 8
  %11 = tail call zeroext i1 %8(%"class.blink::LayoutTableCell"* %9, %"class.blink::LayoutTableCell"* %10) #13
  br i1 %11, label %12, label %45

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::LayoutTableCell"** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::LayoutTableCell"** %4 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = add i32 %7, 1
  %18 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %5, align 8
  %19 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %3, align 8
  %20 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %2, align 8
  %21 = tail call zeroext i1 %18(%"class.blink::LayoutTableCell"* %19, %"class.blink::LayoutTableCell"* %20) #13
  br i1 %21, label %22, label %45

22:                                               ; preds = %12
  %23 = bitcast %"class.blink::LayoutTableCell"** %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8
  store i64 %25, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %26 = add i32 %7, 2
  %27 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %5, align 8
  %28 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %2, align 8
  %29 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, align 8
  %30 = tail call zeroext i1 %27(%"class.blink::LayoutTableCell"* %28, %"class.blink::LayoutTableCell"* %29) #13
  br i1 %30, label %31, label %45

31:                                               ; preds = %22
  %32 = bitcast %"class.blink::LayoutTableCell"** %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %23, align 8
  store i64 %34, i64* %32, align 8
  store i64 %33, i64* %23, align 8
  %35 = add i32 %7, 3
  %36 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %5, align 8
  %37 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, align 8
  %38 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::LayoutTableCell"* %37, %"class.blink::LayoutTableCell"* %38) #13
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = bitcast %"class.blink::LayoutTableCell"** %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %32, align 8
  store i64 %43, i64* %41, align 8
  store i64 %42, i64* %32, align 8
  %44 = add i32 %7, 4
  br label %45

45:                                               ; preds = %12, %31, %40, %22, %6
  %46 = phi i32 [ %44, %40 ], [ %35, %31 ], [ %26, %22 ], [ %17, %12 ], [ %7, %6 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEvT0_SA_T_(%"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 2
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 1
  %6 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %7 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  %8 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.blink::LayoutTableCell"* %7, %"class.blink::LayoutTableCell"* %8) #13
  %10 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %11 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %4, align 8
  %12 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %5, align 8
  %13 = tail call zeroext i1 %10(%"class.blink::LayoutTableCell"* %11, %"class.blink::LayoutTableCell"* %12) #13
  br i1 %9, label %29, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %"class.blink::LayoutTableCell"** %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::LayoutTableCell"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %21 = inttoptr i64 %19 to %"class.blink::LayoutTableCell"*
  %22 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.blink::LayoutTableCell"* %21, %"class.blink::LayoutTableCell"* %22) #13
  br i1 %23, label %24, label %47

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::LayoutTableCell"** %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = shufflevector <2 x i64> %26, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %28 = bitcast %"class.blink::LayoutTableCell"** %0 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  br label %47

29:                                               ; preds = %3
  %30 = bitcast %"class.blink::LayoutTableCell"** %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %13, label %32, label %35

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::LayoutTableCell"** %4 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  br label %47

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::LayoutTableCell"** %5 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store i64 %31, i64* %36, align 8
  %38 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %39 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %4, align 8
  %40 = inttoptr i64 %31 to %"class.blink::LayoutTableCell"*
  %41 = tail call zeroext i1 %38(%"class.blink::LayoutTableCell"* %39, %"class.blink::LayoutTableCell"* %40) #13
  br i1 %41, label %42, label %47

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::LayoutTableCell"** %5 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %46 = bitcast %"class.blink::LayoutTableCell"** %5 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  br label %47

47:                                               ; preds = %14, %15, %24, %32, %35, %42
  %48 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 3
  %49 = icmp eq %"class.blink::LayoutTableCell"** %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %"class.blink::LayoutTableCell"** [ %78, %77 ], [ %48, %47 ]
  %53 = phi %"class.blink::LayoutTableCell"** [ %52, %77 ], [ %4, %47 ]
  %54 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %55 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %52, align 8
  %56 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %53, align 8
  %57 = tail call zeroext i1 %54(%"class.blink::LayoutTableCell"* %55, %"class.blink::LayoutTableCell"* %56) #13
  br i1 %57, label %58, label %77

58:                                               ; preds = %51
  %59 = bitcast %"class.blink::LayoutTableCell"** %52 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"class.blink::LayoutTableCell"*
  br label %62

62:                                               ; preds = %69, %58
  %63 = phi %"class.blink::LayoutTableCell"** [ %52, %58 ], [ %64, %69 ]
  %64 = phi %"class.blink::LayoutTableCell"** [ %53, %58 ], [ %71, %69 ]
  %65 = bitcast %"class.blink::LayoutTableCell"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.blink::LayoutTableCell"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %"class.blink::LayoutTableCell"** %64, %0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %71 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %64, i64 -1
  %72 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %71, align 8
  %73 = tail call zeroext i1 %70(%"class.blink::LayoutTableCell"* %61, %"class.blink::LayoutTableCell"* %72) #13
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %69
  %75 = phi %"class.blink::LayoutTableCell"** [ %64, %69 ], [ %0, %62 ]
  %76 = bitcast %"class.blink::LayoutTableCell"** %75 to i64*
  store i64 %60, i64* %76, align 8
  br label %77

77:                                               ; preds = %74, %51
  %78 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %52, i64 1
  %79 = icmp eq %"class.blink::LayoutTableCell"** %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEbT0_SA_T_(%"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"**, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.blink::LayoutTableCell"** %1 to i64
  %5 = ptrtoint %"class.blink::LayoutTableCell"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %156
    i64 1, label %156
    i64 2, label %8
    i64 3, label %19
    i64 4, label %62
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, i64 -1
  %11 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %10, align 8
  %12 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %13 = tail call zeroext i1 %9(%"class.blink::LayoutTableCell"* %11, %"class.blink::LayoutTableCell"* %12) #13
  br i1 %13, label %14, label %156

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::LayoutTableCell"** %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::LayoutTableCell"** %10 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  br label %156

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 1
  %21 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, i64 -1
  %22 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %23 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %20, align 8
  %24 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %25 = tail call zeroext i1 %22(%"class.blink::LayoutTableCell"* %23, %"class.blink::LayoutTableCell"* %24) #13
  %26 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %27 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %21, align 8
  %28 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %20, align 8
  %29 = tail call zeroext i1 %26(%"class.blink::LayoutTableCell"* %27, %"class.blink::LayoutTableCell"* %28) #13
  br i1 %25, label %45, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %156

31:                                               ; preds = %30
  %32 = bitcast %"class.blink::LayoutTableCell"** %20 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::LayoutTableCell"** %21 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %37 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %20, align 8
  %38 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::LayoutTableCell"* %37, %"class.blink::LayoutTableCell"* %38) #13
  br i1 %39, label %40, label %156

40:                                               ; preds = %31
  %41 = bitcast %"class.blink::LayoutTableCell"** %0 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = shufflevector <2 x i64> %42, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %44 = bitcast %"class.blink::LayoutTableCell"** %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  br label %156

45:                                               ; preds = %19
  %46 = bitcast %"class.blink::LayoutTableCell"** %0 to i64*
  %47 = load i64, i64* %46, align 8
  br i1 %29, label %48, label %51

48:                                               ; preds = %45
  %49 = bitcast %"class.blink::LayoutTableCell"** %21 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  store i64 %47, i64* %49, align 8
  br label %156

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::LayoutTableCell"** %20 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %46, align 8
  store i64 %47, i64* %52, align 8
  %54 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %55 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %21, align 8
  %56 = inttoptr i64 %47 to %"class.blink::LayoutTableCell"*
  %57 = tail call zeroext i1 %54(%"class.blink::LayoutTableCell"* %55, %"class.blink::LayoutTableCell"* %56) #13
  br i1 %57, label %58, label %156

58:                                               ; preds = %51
  %59 = load i64, i64* %52, align 8
  %60 = bitcast %"class.blink::LayoutTableCell"** %21 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %52, align 8
  store i64 %59, i64* %60, align 8
  br label %156

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 1
  %64 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 2
  %65 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::LayoutTableCell"** %0, %"class.blink::LayoutTableCell"** %63, %"class.blink::LayoutTableCell"** %64, %"class.blink::LayoutTableCell"** %65, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  br label %156

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 1
  %69 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 2
  %70 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 3
  %71 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink15LayoutTableCellES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::LayoutTableCell"** %0, %"class.blink::LayoutTableCell"** %68, %"class.blink::LayoutTableCell"** %69, %"class.blink::LayoutTableCell"** %70, %"class.blink::LayoutTableCell"** %71, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** dereferenceable(8) %2)
  br label %156

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 2
  %75 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 1
  %76 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %77 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %75, align 8
  %78 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %79 = tail call zeroext i1 %76(%"class.blink::LayoutTableCell"* %77, %"class.blink::LayoutTableCell"* %78) #13
  %80 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %81 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %74, align 8
  %82 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %75, align 8
  %83 = tail call zeroext i1 %80(%"class.blink::LayoutTableCell"* %81, %"class.blink::LayoutTableCell"* %82) #13
  br i1 %79, label %99, label %84

84:                                               ; preds = %73
  br i1 %83, label %85, label %117

85:                                               ; preds = %84
  %86 = bitcast %"class.blink::LayoutTableCell"** %75 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::LayoutTableCell"** %74 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %90 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %91 = inttoptr i64 %89 to %"class.blink::LayoutTableCell"*
  %92 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, align 8
  %93 = tail call zeroext i1 %90(%"class.blink::LayoutTableCell"* %91, %"class.blink::LayoutTableCell"* %92) #13
  br i1 %93, label %94, label %117

94:                                               ; preds = %85
  %95 = bitcast %"class.blink::LayoutTableCell"** %0 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = shufflevector <2 x i64> %96, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %98 = bitcast %"class.blink::LayoutTableCell"** %0 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  br label %117

99:                                               ; preds = %73
  %100 = bitcast %"class.blink::LayoutTableCell"** %0 to i64*
  %101 = load i64, i64* %100, align 8
  br i1 %83, label %102, label %105

102:                                              ; preds = %99
  %103 = bitcast %"class.blink::LayoutTableCell"** %74 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %100, align 8
  store i64 %101, i64* %103, align 8
  br label %117

105:                                              ; preds = %99
  %106 = bitcast %"class.blink::LayoutTableCell"** %75 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %100, align 8
  store i64 %101, i64* %106, align 8
  %108 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %109 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %74, align 8
  %110 = inttoptr i64 %101 to %"class.blink::LayoutTableCell"*
  %111 = tail call zeroext i1 %108(%"class.blink::LayoutTableCell"* %109, %"class.blink::LayoutTableCell"* %110) #13
  br i1 %111, label %112, label %117

112:                                              ; preds = %105
  %113 = bitcast %"class.blink::LayoutTableCell"** %75 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  %115 = shufflevector <2 x i64> %114, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %116 = bitcast %"class.blink::LayoutTableCell"** %75 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %116, align 8
  br label %117

117:                                              ; preds = %84, %85, %94, %102, %105, %112
  %118 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %0, i64 3
  %119 = icmp eq %"class.blink::LayoutTableCell"** %118, %1
  br i1 %119, label %156, label %120

120:                                              ; preds = %117, %149
  %121 = phi %"class.blink::LayoutTableCell"** [ %151, %149 ], [ %118, %117 ]
  %122 = phi i32 [ %150, %149 ], [ 0, %117 ]
  %123 = phi %"class.blink::LayoutTableCell"** [ %121, %149 ], [ %74, %117 ]
  %124 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %125 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %121, align 8
  %126 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %123, align 8
  %127 = tail call zeroext i1 %124(%"class.blink::LayoutTableCell"* %125, %"class.blink::LayoutTableCell"* %126) #13
  br i1 %127, label %128, label %149

128:                                              ; preds = %120
  %129 = bitcast %"class.blink::LayoutTableCell"** %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = inttoptr i64 %130 to %"class.blink::LayoutTableCell"*
  br label %132

132:                                              ; preds = %139, %128
  %133 = phi %"class.blink::LayoutTableCell"** [ %121, %128 ], [ %134, %139 ]
  %134 = phi %"class.blink::LayoutTableCell"** [ %123, %128 ], [ %141, %139 ]
  %135 = bitcast %"class.blink::LayoutTableCell"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.blink::LayoutTableCell"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = icmp eq %"class.blink::LayoutTableCell"** %134, %0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)*, i1 (%"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"*)** %2, align 8
  %141 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %134, i64 -1
  %142 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %141, align 8
  %143 = tail call zeroext i1 %140(%"class.blink::LayoutTableCell"* %131, %"class.blink::LayoutTableCell"* %142) #13
  br i1 %143, label %132, label %144

144:                                              ; preds = %132, %139
  %145 = phi %"class.blink::LayoutTableCell"** [ %134, %139 ], [ %0, %132 ]
  %146 = bitcast %"class.blink::LayoutTableCell"** %145 to i64*
  store i64 %130, i64* %146, align 8
  %147 = add i32 %122, 1
  %148 = icmp eq i32 %147, 8
  br i1 %148, label %153, label %149

149:                                              ; preds = %144, %120
  %150 = phi i32 [ %147, %144 ], [ %122, %120 ]
  %151 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %121, i64 1
  %152 = icmp eq %"class.blink::LayoutTableCell"** %151, %1
  br i1 %152, label %156, label %120

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %121, i64 1
  %155 = icmp eq %"class.blink::LayoutTableCell"** %154, %1
  br label %156

156:                                              ; preds = %149, %153, %117, %58, %51, %48, %40, %31, %30, %8, %14, %3, %3, %67, %62
  %157 = phi i1 [ true, %67 ], [ true, %62 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %30 ], [ true, %31 ], [ true, %40 ], [ true, %48 ], [ true, %51 ], [ true, %58 ], [ true, %117 ], [ %155, %153 ], [ true, %149 ]
  ret i1 %157
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.2066"*, i32* dereferenceable(4)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2066"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.2066"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.2066"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2066"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.2066"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.2066"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutTableCell"** @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2096"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %24, i64 %25
  ret %"class.blink::LayoutTableCell"** %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2096"*, %"class.blink::LayoutTableCell"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutTableCell"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutTableCell"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2096"* %0, i32 %5) #13
  %14 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::LayoutTableCell"** %1 to i64
  %17 = ptrtoint %"class.blink::LayoutTableCell"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2096"* %0, i32 %5) #13
  %20 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::LayoutTableCell"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::LayoutTableCell"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %23, i64 %26
  %28 = bitcast %"class.blink::LayoutTableCell"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::LayoutTableCell"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2096"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %31, align 8
  %33 = icmp eq %"class.blink::LayoutTableCell"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 2
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2096"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2096"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 2, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2096"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2096"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 3
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %5, align 8
  %7 = icmp eq %"class.blink::LayoutTableCell"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::LayoutTableCell"**
  %10 = icmp eq %"class.blink::LayoutTableCell"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2096"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 2, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2096"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 2, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::LayoutTableCell"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2097"* %19, %"class.blink::LayoutTableCell"** nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::LayoutTableCell"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::LayoutTableCell"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #13
  %46 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::LayoutTableCell"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::LayoutTableCell"**
  %51 = icmp eq %"class.blink::LayoutTableCell"** %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPN5blink15LayoutTableCellELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2097"* %53, %"class.blink::LayoutTableCell"** %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2096"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2096", %"class.WTF::Vector.2096"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector.2045"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %28

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE6ShrinkEj(%"class.WTF::Vector.2045"* %0, i32 %1)
  br label %11

11:                                               ; preds = %10, %6
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18LayoutTableSection12TableGridRowEEEmm(i64 %14) #13
  %16 = load i32, i32* %3, align 8
  %17 = zext i32 %16 to i64
  %18 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18LayoutTableSection12TableGridRowEEEmm(i64 %17) #13
  %19 = icmp eq i64 %18, %15
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = udiv i64 %15, 40
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %3, align 8
  br label %28

23:                                               ; preds = %13
  tail call void @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2045"* %0, i32 %1)
  br label %28

24:                                               ; preds = %11
  %25 = bitcast %"class.WTF::Vector.2045"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.WTF::Vector.2045"* %0 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %20, %23, %24, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18LayoutTableSection12TableGridRowELj0ENS_18PartitionAllocatorEE6ShrinkEj(%"class.WTF::Vector.2045"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::LayoutTableSection::TableGridRow"*, %"struct.blink::LayoutTableSection::TableGridRow"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.2045", %"class.WTF::Vector.2045"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %4, i64 %7
  %9 = icmp eq i32 %6, %1
  br i1 %9, label %44, label %10

10:                                               ; preds = %2
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %4, i64 %11
  br label %13

13:                                               ; preds = %10, %41
  %14 = phi %"struct.blink::LayoutTableSection::TableGridRow"* [ %42, %41 ], [ %12, %10 ]
  %15 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %14, i64 0, i32 3, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 8
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %14, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %19) #13
  br label %20

20:                                               ; preds = %18, %13
  %21 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"** %21, align 8
  %23 = icmp eq %"class.blink::TableGridCell"* %22, null
  br i1 %23, label %41, label %24, !prof !2

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::TableGridCell"* %22 to i8*
  %26 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %29, !prof !3

29:                                               ; preds = %24
  %30 = zext i32 %27 to i64
  %31 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %22, i64 %30
  br label %32

32:                                               ; preds = %32, %29
  %33 = phi %"class.blink::TableGridCell"* [ %34, %32 ], [ %22, %29 ]
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %33) #13
  %34 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %33, i64 1
  %35 = icmp eq %"class.blink::TableGridCell"* %34, %31
  br i1 %35, label %36, label %32

36:                                               ; preds = %32
  store i32 0, i32* %26, align 4
  %37 = bitcast %"struct.blink::LayoutTableSection::TableGridRow"* %14 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %24
  %40 = phi i8* [ %38, %36 ], [ %25, %24 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #13
  store %"class.blink::TableGridCell"* null, %"class.blink::TableGridCell"** %21, align 8
  br label %41

41:                                               ; preds = %39, %20
  %42 = getelementptr inbounds %"struct.blink::LayoutTableSection::TableGridRow", %"struct.blink::LayoutTableSection::TableGridRow"* %14, i64 1
  %43 = icmp eq %"struct.blink::LayoutTableSection::TableGridRow"* %42, %8
  br i1 %43, label %44, label %13

44:                                               ; preds = %41, %2
  store i32 %1, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2066"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2066", %"class.WTF::Vector.2066"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutTableCell"**, i8 } @_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS2_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2071"*, %"class.blink::LayoutTableCell"** dereferenceable(8), %"class.blink::LayoutTableCell"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %4, align 8
  %6 = icmp eq %"class.blink::LayoutTableCell"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::LayoutTableCell"** @_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2071"* %0, %"class.blink::LayoutTableCell"** null)
  %9 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::LayoutTableCell"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutTableCell"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %11, i64 %38
  %40 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutTableCell"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::LayoutTableCell"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::LayoutTableCell"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::LayoutTableCell"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::LayoutTableCell"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::LayoutTableCell"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::LayoutTableCell"* %58, inttoptr (i64 -1 to %"class.blink::LayoutTableCell"*)
  %66 = select i1 %65, %"class.blink::LayoutTableCell"** %59, %"class.blink::LayoutTableCell"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %11, i64 %70
  %72 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutTableCell"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::LayoutTableCell"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::LayoutTableCell"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::LayoutTableCell"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::LayoutTableCell"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::LayoutTableCell"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::LayoutTableCell"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::LayoutTableCell"** @_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2071"* %0, %"class.blink::LayoutTableCell"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::LayoutTableCell"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::LayoutTableCell"**, i8 } undef, %"class.blink::LayoutTableCell"** %105, 0
  %107 = insertvalue { %"class.blink::LayoutTableCell"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::LayoutTableCell"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableCell"** @_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2071"*, %"class.blink::LayoutTableCell"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"class.blink::LayoutTableCell"**
  %37 = call %"class.blink::LayoutTableCell"** @_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2071"* %0, %"class.blink::LayoutTableCell"** %36, i32 %32, %"class.blink::LayoutTableCell"** %1) #13
  ret %"class.blink::LayoutTableCell"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutTableCell"** @_ZN3WTF9HashTableIPKN5blink15LayoutTableCellES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2071"*, %"class.blink::LayoutTableCell"**, i32, %"class.blink::LayoutTableCell"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::LayoutTableCell"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2071"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %9, align 8
  %17 = ptrtoint %"class.blink::LayoutTableCell"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.2071"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::LayoutTableCell"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.2071", %"class.WTF::HashTable.2071"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::LayoutTableCell"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::LayoutTableCell"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::LayoutTableCell"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %34, i64 %37
  %39 = bitcast %"class.blink::LayoutTableCell"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, i64 %62
  %64 = ptrtoint %"class.blink::LayoutTableCell"** %63 to i64
  %65 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %63, align 8
  %66 = icmp eq %"class.blink::LayoutTableCell"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::LayoutTableCell"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::LayoutTableCell"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::LayoutTableCell"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::LayoutTableCell"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::LayoutTableCell"** %87, null
  %89 = ptrtoint %"class.blink::LayoutTableCell"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::LayoutTableCell"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::LayoutTableCell"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::LayoutTableCell"* %93, inttoptr (i64 -1 to %"class.blink::LayoutTableCell"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %1, i64 %104
  %106 = ptrtoint %"class.blink::LayoutTableCell"** %105 to i64
  %107 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %105, align 8
  %108 = icmp eq %"class.blink::LayoutTableCell"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::LayoutTableCell"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %113, i64 %37
  %115 = icmp eq %"class.blink::LayoutTableCell"** %114, %3
  %116 = select i1 %115, %"class.blink::LayoutTableCell"** %111, %"class.blink::LayoutTableCell"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::LayoutTableCell"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::LayoutTableCell"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::LayoutTableCell"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink13TableGridCellENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b(%"class.blink::TableGridCell"*, %"class.blink::TableGridCell"*, %"class.blink::TableGridCell"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ugt %"class.blink::TableGridCell"* %0, %2
  br i1 %5, label %6, label %47

6:                                                ; preds = %4
  %7 = icmp eq %"class.blink::TableGridCell"* %0, %1
  br i1 %7, label %94, label %8

8:                                                ; preds = %6, %40
  %9 = phi %"class.blink::TableGridCell"* [ %45, %40 ], [ %0, %6 ]
  %10 = phi %"class.blink::TableGridCell"* [ %44, %40 ], [ %2, %6 ]
  %11 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %10, i64 0, i32 0, i32 0, i32 1, i64 0
  %14 = bitcast %"class.blink::TableGridCell"* %10 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  %16 = icmp ugt i32 %12, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %8
  %18 = zext i32 %12 to i64
  %19 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %18) #13
  %20 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %19, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.blink::TableGridCell"* %10 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = lshr i64 %19, 3
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %15, align 8
  br label %25

25:                                               ; preds = %17, %8
  %26 = phi i8* [ %13, %8 ], [ %20, %17 ]
  %27 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %30, align 8
  %32 = icmp ne i8* %26, null
  %33 = icmp ne %"class.blink::LayoutTableCell"** %31, null
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %40, !prof !2

35:                                               ; preds = %25
  %36 = load i32, i32* %27, align 4
  %37 = zext i32 %36 to i64
  %38 = bitcast %"class.blink::LayoutTableCell"** %31 to i8*
  %39 = shl nuw nsw i64 %37, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %38, i64 %39, i1 false) #13
  br label %40

40:                                               ; preds = %35, %25
  %41 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %10, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %9, i64 0, i32 1
  %43 = load i8, i8* %42, align 8, !range !4
  store i8 %43, i8* %41, align 8
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %9) #13
  %44 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %10, i64 1
  %45 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %9, i64 1
  %46 = icmp eq %"class.blink::TableGridCell"* %45, %1
  br i1 %46, label %94, label %8

47:                                               ; preds = %4
  %48 = icmp eq %"class.blink::TableGridCell"* %1, %0
  br i1 %48, label %94, label %49

49:                                               ; preds = %47
  %50 = ptrtoint %"class.blink::TableGridCell"* %1 to i64
  %51 = ptrtoint %"class.blink::TableGridCell"* %0 to i64
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 5
  %54 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %2, i64 %53
  br label %55

55:                                               ; preds = %49, %89
  %56 = phi %"class.blink::TableGridCell"* [ %59, %89 ], [ %54, %49 ]
  %57 = phi %"class.blink::TableGridCell"* [ %58, %89 ], [ %1, %49 ]
  %58 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %57, i64 -1
  %59 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %56, i64 -1
  %60 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %57, i64 -1, i32 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %56, i64 -1, i32 0, i32 0, i32 1, i64 0
  %63 = bitcast %"class.blink::TableGridCell"* %59 to i8**
  store i8* %62, i8** %63, align 8
  %64 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %56, i64 -1, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %64, align 8
  %65 = icmp ugt i32 %61, 1
  br i1 %65, label %66, label %74

66:                                               ; preds = %55
  %67 = zext i32 %61 to i64
  %68 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutTableCellEEEmm(i64 %67) #13
  %69 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %68, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutTableCellEEEPKcv, i64 0, i64 0)) #13
  %70 = ptrtoint i8* %69 to i64
  %71 = bitcast %"class.blink::TableGridCell"* %59 to i64*
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = lshr i64 %68, 3
  %73 = trunc i64 %72 to i32
  store i32 %73, i32* %64, align 8
  br label %74

74:                                               ; preds = %66, %55
  %75 = phi i8* [ %62, %55 ], [ %69, %66 ]
  %76 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %57, i64 -1, i32 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %56, i64 -1, i32 0, i32 0, i32 0, i32 2
  store i32 %77, i32* %78, align 4
  %79 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %79, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne %"class.blink::LayoutTableCell"** %80, null
  %83 = and i1 %81, %82
  br i1 %83, label %84, label %89, !prof !2

84:                                               ; preds = %74
  %85 = load i32, i32* %76, align 4
  %86 = zext i32 %85 to i64
  %87 = bitcast %"class.blink::LayoutTableCell"** %80 to i8*
  %88 = shl nuw nsw i64 %86, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* nonnull align 8 %87, i64 %88, i1 false) #13
  br label %89

89:                                               ; preds = %74, %84
  %90 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %56, i64 -1, i32 1
  %91 = getelementptr inbounds %"class.blink::TableGridCell", %"class.blink::TableGridCell"* %57, i64 -1, i32 1
  %92 = load i8, i8* %91, align 8, !range !4
  store i8 %92, i8* %90, align 8
  tail call void @_ZN5blink13TableGridCellD1Ev(%"class.blink::TableGridCell"* %58) #13
  %93 = icmp eq %"class.blink::TableGridCell"* %58, %0
  br i1 %93, label %94, label %55

94:                                               ; preds = %89, %40, %47, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE6AppendIS3_EEvPKT_j(%"class.WTF::Vector.2051"*, %"class.blink::LayoutTableCell"**, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %29

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %14, align 8
  %16 = icmp ugt %"class.blink::LayoutTableCell"** %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %15, i64 %18
  %20 = icmp ugt %"class.blink::LayoutTableCell"** %19, %1
  br i1 %20, label %22, label %21

21:                                               ; preds = %17, %13
  tail call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2051"* %0, i32 %9) #13
  br label %29

22:                                               ; preds = %17
  %23 = ptrtoint %"class.blink::LayoutTableCell"** %1 to i64
  %24 = ptrtoint %"class.blink::LayoutTableCell"** %15 to i64
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 3
  tail call void @_ZN3WTF6VectorIPN5blink15LayoutTableCellELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2051"* %0, i32 %9) #13
  %27 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %14, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %27, i64 %26
  br label %29

29:                                               ; preds = %22, %21, %3
  %30 = phi %"class.blink::LayoutTableCell"** [ %1, %3 ], [ %1, %21 ], [ %28, %22 ]
  %31 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %32, align 8
  %33 = load i32, i32* %7, align 4
  %34 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp ult i32 %9, %33
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %32, align 8
  br label %46

37:                                               ; preds = %29
  %38 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %39 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %33) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8* %38, i8* %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %32, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %47 = getelementptr inbounds %"class.WTF::Vector.2051", %"class.WTF::Vector.2051"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::LayoutTableCell"**, %"class.blink::LayoutTableCell"*** %47, align 8
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %48, i64 %50
  %52 = icmp ne %"class.blink::LayoutTableCell"** %51, null
  %53 = icmp ne %"class.blink::LayoutTableCell"** %30, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %60, !prof !2

55:                                               ; preds = %46
  %56 = zext i32 %2 to i64
  %57 = bitcast %"class.blink::LayoutTableCell"** %51 to i8*
  %58 = bitcast %"class.blink::LayoutTableCell"** %30 to i8*
  %59 = shl nuw nsw i64 %56, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %58, i64 %59, i1 false) #13
  br label %60

60:                                               ; preds = %46, %55
  store i32 %9, i32* %7, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind readnone }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!11 = !{!"branch_weights", i32 1, i32 4001}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!24 = !{!"branch_weights", i32 4001, i32 4000000}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!42 = distinct !{!42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!43 = distinct !{!43, !44}
!44 = !{!"llvm.loop.unroll.disable"}
!45 = distinct !{!45, !44}
!46 = distinct !{!46, !44}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
