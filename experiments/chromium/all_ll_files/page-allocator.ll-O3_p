; ModuleID = '../../v8/src/base/page-allocator.cc'
source_filename = "../../v8/src/base/page-allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.v8::base::PageAllocator" = type { %"class.v8::PageAllocator", i64, i64 }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::PageAllocator::SharedMemory" = type { i32 (...)** }
%"class.v8::base::SharedMemory" = type { %"class.v8::PageAllocator::SharedMemory", %"class.v8::base::PageAllocator"*, i8*, i64 }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.v8::base::SharedMemoryMapping" = type { %"class.v8::PageAllocator::SharedMemoryMapping", %"class.v8::base::PageAllocator"*, i8*, i64 }

$_ZN2v84base13PageAllocatorD0Ev = comdat any

$_ZN2v84base13PageAllocator16AllocatePageSizeEv = comdat any

$_ZN2v84base13PageAllocator14CommitPageSizeEv = comdat any

$_ZN2v813PageAllocator29ReserveForSharedMemoryMappingEPvm = comdat any

$_ZN2v813PageAllocatorD2Ev = comdat any

$_ZN2v84base12SharedMemoryD2Ev = comdat any

$_ZN2v84base12SharedMemoryD0Ev = comdat any

$_ZNK2v84base12SharedMemory7RemapToEPv = comdat any

$_ZNK2v84base12SharedMemory9GetMemoryEv = comdat any

$_ZNK2v84base12SharedMemory7GetSizeEv = comdat any

$_ZN2v84base19SharedMemoryMappingD2Ev = comdat any

$_ZN2v84base19SharedMemoryMappingD0Ev = comdat any

$_ZNK2v84base19SharedMemoryMapping9GetMemoryEv = comdat any

$_ZTVN2v84base12SharedMemoryE = comdat any

$_ZTVN2v84base19SharedMemoryMappingE = comdat any

@_ZTVN2v84base13PageAllocatorE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::PageAllocator"*)* @_ZN2v813PageAllocatorD2Ev to i8*), i8* bitcast (void (%"class.v8::base::PageAllocator"*)* @_ZN2v84base13PageAllocatorD0Ev to i8*), i8* bitcast (i64 (%"class.v8::base::PageAllocator"*)* @_ZN2v84base13PageAllocator16AllocatePageSizeEv to i8*), i8* bitcast (i64 (%"class.v8::base::PageAllocator"*)* @_ZN2v84base13PageAllocator14CommitPageSizeEv to i8*), i8* bitcast (void (%"class.v8::base::PageAllocator"*, i64)* @_ZN2v84base13PageAllocator17SetRandomMmapSeedEl to i8*), i8* bitcast (i8* (%"class.v8::base::PageAllocator"*)* @_ZN2v84base13PageAllocator17GetRandomMmapAddrEv to i8*), i8* bitcast (i8* (%"class.v8::base::PageAllocator"*, i8*, i64, i64, i32)* @_ZN2v84base13PageAllocator13AllocatePagesEPvmmNS_13PageAllocator10PermissionE to i8*), i8* bitcast (i1 (%"class.v8::base::PageAllocator"*, i8*, i64)* @_ZN2v84base13PageAllocator9FreePagesEPvm to i8*), i8* bitcast (i1 (%"class.v8::base::PageAllocator"*, i8*, i64, i64)* @_ZN2v84base13PageAllocator12ReleasePagesEPvmm to i8*), i8* bitcast (i1 (%"class.v8::base::PageAllocator"*, i8*, i64, i32)* @_ZN2v84base13PageAllocator14SetPermissionsEPvmNS_13PageAllocator10PermissionE to i8*), i8* bitcast (i1 (%"class.v8::base::PageAllocator"*, i8*, i64)* @_ZN2v84base13PageAllocator18DiscardSystemPagesEPvm to i8*), i8* bitcast (i1 (%"class.v8::PageAllocator"*, i8*, i64)* @_ZN2v813PageAllocator29ReserveForSharedMemoryMappingEPvm to i8*), i8* bitcast (%"class.v8::PageAllocator::SharedMemory"* (%"class.v8::base::PageAllocator"*, i64, i8*)* @_ZN2v84base13PageAllocator19AllocateSharedPagesEmPKv to i8*), i8* bitcast (i1 (%"class.v8::base::PageAllocator"*)* @_ZN2v84base13PageAllocator22CanAllocateSharedPagesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"(ptr) != nullptr\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@_ZTVN2v84base12SharedMemoryE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::base::SharedMemory"*)* @_ZN2v84base12SharedMemoryD2Ev to i8*), i8* bitcast (void (%"class.v8::base::SharedMemory"*)* @_ZN2v84base12SharedMemoryD0Ev to i8*), i8* bitcast (%"class.v8::PageAllocator::SharedMemoryMapping"* (%"class.v8::base::SharedMemory"*, i8*)* @_ZNK2v84base12SharedMemory7RemapToEPv to i8*), i8* bitcast (i8* (%"class.v8::base::SharedMemory"*)* @_ZNK2v84base12SharedMemory9GetMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::base::SharedMemory"*)* @_ZNK2v84base12SharedMemory7GetSizeEv to i8*)] }, comdat, align 8
@_ZTVN2v84base19SharedMemoryMappingE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::base::SharedMemoryMapping"*)* @_ZN2v84base19SharedMemoryMappingD2Ev to i8*), i8* bitcast (void (%"class.v8::base::SharedMemoryMapping"*)* @_ZN2v84base19SharedMemoryMappingD0Ev to i8*), i8* bitcast (i8* (%"class.v8::base::SharedMemoryMapping"*)* @_ZNK2v84base19SharedMemoryMapping9GetMemoryEv to i8*)] }, comdat, align 8

@_ZN2v84base13PageAllocatorC1Ev = hidden unnamed_addr alias void (%"class.v8::base::PageAllocator"*), void (%"class.v8::base::PageAllocator"*)* @_ZN2v84base13PageAllocatorC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base13PageAllocatorC2Ev(%"class.v8::base::PageAllocator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::base::PageAllocator", %"class.v8::base::PageAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2v84base13PageAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::base::PageAllocator", %"class.v8::base::PageAllocator"* %0, i64 0, i32 1
  %4 = tail call i64 @_ZN2v84base2OS16AllocatePageSizeEv() #7
  store i64 %4, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::base::PageAllocator", %"class.v8::base::PageAllocator"* %0, i64 0, i32 2
  %6 = tail call i64 @_ZN2v84base2OS14CommitPageSizeEv() #7
  store i64 %6, i64* %5, align 8
  ret void
}

declare i64 @_ZN2v84base2OS16AllocatePageSizeEv() local_unnamed_addr #1

declare i64 @_ZN2v84base2OS14CommitPageSizeEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base13PageAllocator17SetRandomMmapSeedEl(%"class.v8::base::PageAllocator"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  tail call void @_ZN2v84base2OS17SetRandomMmapSeedEl(i64 %1) #7
  ret void
}

declare void @_ZN2v84base2OS17SetRandomMmapSeedEl(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v84base13PageAllocator17GetRandomMmapAddrEv(%"class.v8::base::PageAllocator"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN2v84base2OS17GetRandomMmapAddrEv() #7
  ret i8* %2
}

declare i8* @_ZN2v84base2OS17GetRandomMmapAddrEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v84base13PageAllocator13AllocatePagesEPvmmNS_13PageAllocator10PermissionE(%"class.v8::base::PageAllocator"* nocapture readnone, i8*, i64, i64, i32) unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %4, 5
  %7 = select i1 %6, i32 0, i32 %4
  %8 = tail call i8* @_ZN2v84base2OS8AllocateEPvmmNS1_16MemoryPermissionE(i8* %1, i64 %2, i64 %3, i32 %7) #7
  ret i8* %8
}

declare i8* @_ZN2v84base2OS8AllocateEPvmmNS1_16MemoryPermissionE(i8*, i64, i64, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v84base13PageAllocator22CanAllocateSharedPagesEv(%"class.v8::base::PageAllocator"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::PageAllocator::SharedMemory"* @_ZN2v84base13PageAllocator19AllocateSharedPagesEmPKv(%"class.v8::base::PageAllocator"*, i64, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN2v84base2OS14AllocateSharedEmNS1_16MemoryPermissionE(i64 %1, i32 2) #7
  %5 = ptrtoint i8* %4 to i64
  %6 = icmp eq i8* %4, null
  br i1 %6, label %7, label %8, !prof !2

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #8
  unreachable

8:                                                ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %2, i64 %1, i1 false) #7
  %9 = tail call zeroext i1 @_ZN2v84base2OS14SetPermissionsEPvmNS1_16MemoryPermissionE(i8* nonnull %4, i64 %1, i32 2) #7
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable

11:                                               ; preds = %8
  %12 = ptrtoint %"class.v8::base::PageAllocator"* %0 to i64
  %13 = tail call i8* @_Znwm(i64 32) #9
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v84base12SharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 %5, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 24
  %20 = bitcast i8* %19 to i64*
  store i64 %1, i64* %20, align 8
  %21 = bitcast i8* %13 to %"class.v8::PageAllocator::SharedMemory"*
  ret %"class.v8::PageAllocator::SharedMemory"* %21
}

declare i8* @_ZN2v84base2OS14AllocateSharedEmNS1_16MemoryPermissionE(i64, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare zeroext i1 @_ZN2v84base2OS14SetPermissionsEPvmNS1_16MemoryPermissionE(i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v84base13PageAllocator11RemapSharedEPvS2_m(%"class.v8::base::PageAllocator"* nocapture readnone, i8*, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_ZN2v84base2OS11RemapSharedEPvS2_m(i8* %1, i8* %2, i64 %3) #7
  ret i8* %5
}

declare i8* @_ZN2v84base2OS11RemapSharedEPvS2_m(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v84base13PageAllocator9FreePagesEPvm(%"class.v8::base::PageAllocator"* nocapture readnone, i8*, i64) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN2v84base2OS4FreeEPvm(i8* %1, i64 %2) #7
  ret i1 %4
}

declare zeroext i1 @_ZN2v84base2OS4FreeEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v84base13PageAllocator12ReleasePagesEPvmm(%"class.v8::base::PageAllocator"* nocapture readnone, i8*, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %3
  %6 = sub i64 %2, %3
  %7 = tail call zeroext i1 @_ZN2v84base2OS7ReleaseEPvm(i8* %5, i64 %6) #7
  ret i1 %7
}

declare zeroext i1 @_ZN2v84base2OS7ReleaseEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v84base13PageAllocator14SetPermissionsEPvmNS_13PageAllocator10PermissionE(%"class.v8::base::PageAllocator"* nocapture readnone, i8*, i64, i32) unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZN2v84base2OS14SetPermissionsEPvmNS1_16MemoryPermissionE(i8* %1, i64 %2, i32 %3) #7
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v84base13PageAllocator18DiscardSystemPagesEPvm(%"class.v8::base::PageAllocator"* nocapture readnone, i8*, i64) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN2v84base2OS18DiscardSystemPagesEPvm(i8* %1, i64 %2) #7
  ret i1 %4
}

declare zeroext i1 @_ZN2v84base2OS18DiscardSystemPagesEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base13PageAllocatorD0Ev(%"class.v8::base::PageAllocator"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::base::PageAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v84base13PageAllocator16AllocatePageSizeEv(%"class.v8::base::PageAllocator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::PageAllocator", %"class.v8::base::PageAllocator"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v84base13PageAllocator14CommitPageSizeEv(%"class.v8::base::PageAllocator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::PageAllocator", %"class.v8::base::PageAllocator"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v813PageAllocator29ReserveForSharedMemoryMappingEPvm(%"class.v8::PageAllocator"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v813PageAllocatorD2Ev(%"class.v8::PageAllocator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base12SharedMemoryD2Ev(%"class.v8::base::SharedMemory"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v84base12SharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 1
  %4 = load %"class.v8::base::PageAllocator"*, %"class.v8::base::PageAllocator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::base::PageAllocator"* %4 to i1 (%"class.v8::base::PageAllocator"*, i8*, i64)***
  %10 = load i1 (%"class.v8::base::PageAllocator"*, i8*, i64)**, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)** %10, i64 7
  %12 = load i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.v8::base::PageAllocator"* %4, i8* %6, i64 %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base12SharedMemoryD0Ev(%"class.v8::base::SharedMemory"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v84base12SharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 1
  %4 = load %"class.v8::base::PageAllocator"*, %"class.v8::base::PageAllocator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::base::PageAllocator"* %4 to i1 (%"class.v8::base::PageAllocator"*, i8*, i64)***
  %10 = load i1 (%"class.v8::base::PageAllocator"*, i8*, i64)**, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)** %10, i64 7
  %12 = load i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.v8::base::PageAllocator"* %4, i8* %6, i64 %8) #7
  %14 = bitcast %"class.v8::base::SharedMemory"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::PageAllocator::SharedMemoryMapping"* @_ZNK2v84base12SharedMemory7RemapToEPv(%"class.v8::base::SharedMemory"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = tail call i8* @_ZN2v84base2OS11RemapSharedEPvS2_m(i8* %4, i8* %1, i64 %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = ptrtoint i8* %1 to i64
  %11 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 1
  %12 = tail call i8* @_Znwm(i64 32) #9
  %13 = bitcast %"class.v8::base::PageAllocator"** %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = load i64, i64* %5, align 8
  %16 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v84base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %12, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 %10, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %12, i64 24
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = bitcast i8* %12 to %"class.v8::PageAllocator::SharedMemoryMapping"*
  br label %24

24:                                               ; preds = %2, %9
  %25 = phi %"class.v8::PageAllocator::SharedMemoryMapping"* [ %23, %9 ], [ null, %2 ]
  ret %"class.v8::PageAllocator::SharedMemoryMapping"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v84base12SharedMemory9GetMemoryEv(%"class.v8::base::SharedMemory"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v84base12SharedMemory7GetSizeEv(%"class.v8::base::SharedMemory"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::SharedMemory", %"class.v8::base::SharedMemory"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19SharedMemoryMappingD2Ev(%"class.v8::base::SharedMemoryMapping"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v84base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 1
  %4 = load %"class.v8::base::PageAllocator"*, %"class.v8::base::PageAllocator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::base::PageAllocator"* %4 to i1 (%"class.v8::base::PageAllocator"*, i8*, i64)***
  %10 = load i1 (%"class.v8::base::PageAllocator"*, i8*, i64)**, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)** %10, i64 7
  %12 = load i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.v8::base::PageAllocator"* %4, i8* %6, i64 %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19SharedMemoryMappingD0Ev(%"class.v8::base::SharedMemoryMapping"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v84base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 1
  %4 = load %"class.v8::base::PageAllocator"*, %"class.v8::base::PageAllocator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::base::PageAllocator"* %4 to i1 (%"class.v8::base::PageAllocator"*, i8*, i64)***
  %10 = load i1 (%"class.v8::base::PageAllocator"*, i8*, i64)**, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)** %10, i64 7
  %12 = load i1 (%"class.v8::base::PageAllocator"*, i8*, i64)*, i1 (%"class.v8::base::PageAllocator"*, i8*, i64)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.v8::base::PageAllocator"* %4, i8* %6, i64 %8) #7
  %14 = bitcast %"class.v8::base::SharedMemoryMapping"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v84base19SharedMemoryMapping9GetMemoryEv(%"class.v8::base::SharedMemoryMapping"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::SharedMemoryMapping", %"class.v8::base::SharedMemoryMapping"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
