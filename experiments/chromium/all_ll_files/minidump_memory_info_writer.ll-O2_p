; ModuleID = '../../third_party/crashpad/crashpad/minidump/minidump_memory_info_writer.cc'
source_filename = "../../third_party/crashpad/crashpad/minidump/minidump_memory_info_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.crashpad::MinidumpMemoryInfoListWriter" = type { %"class.crashpad::internal::MinidumpStreamWriter", %struct.MINIDUMP_MEMORY_INFO_LIST, %"class.std::__1::vector.8" }
%"class.crashpad::internal::MinidumpStreamWriter" = type { %"class.crashpad::internal::MinidumpWritable.base", %struct.MINIDUMP_DIRECTORY }
%"class.crashpad::internal::MinidumpWritable.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32**, i32**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %"class.std::__1::__compressed_pair.3" }
%struct.MINIDUMP_LOCATION_DESCRIPTOR = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR** }
%struct.MINIDUMP_DIRECTORY = type { i32, %struct.MINIDUMP_LOCATION_DESCRIPTOR }
%struct.MINIDUMP_MEMORY_INFO_LIST = type { i32, i32, i64 }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO*, %"class.std::__1::__compressed_pair.10" }
%struct.MINIDUMP_MEMORY_INFO = type { i64, i64, i32, i32, i64, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %struct.MINIDUMP_MEMORY_INFO* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.crashpad::MemoryMapRegionSnapshot"**, %"class.crashpad::MemoryMapRegionSnapshot"**, %"class.std::__1::__compressed_pair.17" }
%"class.crashpad::MemoryMapRegionSnapshot" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.crashpad::MemoryMapRegionSnapshot"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"**, %"class.std::__1::__compressed_pair.24" }
%"class.crashpad::internal::MinidumpWritable" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.crashpad::internal::MinidumpWritable"** }
%"class.crashpad::FileWriterInterface" = type { %"class.crashpad::FileSeekerInterface" }
%"class.crashpad::FileSeekerInterface" = type { i32 (...)** }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"*, %"class.std::__1::__compressed_pair.31" }
%"struct.crashpad::WritableIoVec" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.crashpad::WritableIoVec"* }

@_ZTVN8crashpad28MinidumpMemoryInfoListWriterE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::MinidumpMemoryInfoListWriter"*)* @_ZN8crashpad28MinidumpMemoryInfoListWriterD2Ev to i8*), i8* bitcast (void (%"class.crashpad::MinidumpMemoryInfoListWriter"*)* @_ZN8crashpad28MinidumpMemoryInfoListWriterD0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::MinidumpMemoryInfoListWriter"*)* @_ZN8crashpad28MinidumpMemoryInfoListWriter6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::MinidumpMemoryInfoListWriter"*)* @_ZN8crashpad28MinidumpMemoryInfoListWriter12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void (%"class.std::__1::vector.22"*, %"class.crashpad::MinidumpMemoryInfoListWriter"*)* @_ZN8crashpad28MinidumpMemoryInfoListWriter8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::MinidumpMemoryInfoListWriter"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad28MinidumpMemoryInfoListWriter11WriteObjectEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i32 (%"class.crashpad::MinidumpMemoryInfoListWriter"*)* @_ZNK8crashpad28MinidumpMemoryInfoListWriter10StreamTypeEv to i8*)] }, align 8

@_ZN8crashpad28MinidumpMemoryInfoListWriterC1Ev = hidden unnamed_addr alias void (%"class.crashpad::MinidumpMemoryInfoListWriter"*), void (%"class.crashpad::MinidumpMemoryInfoListWriter"*)* @_ZN8crashpad28MinidumpMemoryInfoListWriterC2Ev
@_ZN8crashpad28MinidumpMemoryInfoListWriterD1Ev = hidden unnamed_addr alias void (%"class.crashpad::MinidumpMemoryInfoListWriter"*), void (%"class.crashpad::MinidumpMemoryInfoListWriter"*)* @_ZN8crashpad28MinidumpMemoryInfoListWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad28MinidumpMemoryInfoListWriterC2Ev(%"class.crashpad::MinidumpMemoryInfoListWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal20MinidumpStreamWriterC2Ev(%"class.crashpad::internal::MinidumpStreamWriter"* %2) #10
  %3 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad28MinidumpMemoryInfoListWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 1
  %5 = bitcast %struct.MINIDUMP_MEMORY_INFO_LIST* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 40, i1 false)
  ret void
}

declare void @_ZN8crashpad8internal20MinidumpStreamWriterC2Ev(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad28MinidumpMemoryInfoListWriterD2Ev(%"class.crashpad::MinidumpMemoryInfoListWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad28MinidumpMemoryInfoListWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO** %3, align 8
  %5 = icmp eq %struct.MINIDUMP_MEMORY_INFO* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %4 to i64
  %8 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %struct.MINIDUMP_MEMORY_INFO** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %struct.MINIDUMP_MEMORY_INFO* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"* %12) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad28MinidumpMemoryInfoListWriterD0Ev(%"class.crashpad::MinidumpMemoryInfoListWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad28MinidumpMemoryInfoListWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO** %3, align 8
  %5 = icmp eq %struct.MINIDUMP_MEMORY_INFO* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %4 to i64
  %8 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %struct.MINIDUMP_MEMORY_INFO** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %struct.MINIDUMP_MEMORY_INFO* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"* %12) #10
  %13 = bitcast %"class.crashpad::MinidumpMemoryInfoListWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad28MinidumpMemoryInfoListWriter22InitializeFromSnapshotERKNSt3__16vectorIPKNS_23MemoryMapRegionSnapshotENS1_9allocatorIS5_EEEE(%"class.crashpad::MinidumpMemoryInfoListWriter"*, %"class.std::__1::vector.15"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.crashpad::MemoryMapRegionSnapshot"**, %"class.crashpad::MemoryMapRegionSnapshot"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.crashpad::MemoryMapRegionSnapshot"**, %"class.crashpad::MemoryMapRegionSnapshot"*** %5, align 8
  %7 = icmp eq %"class.crashpad::MemoryMapRegionSnapshot"** %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %struct.MINIDUMP_MEMORY_INFO** %10 to i64*
  %13 = bitcast %"class.std::__1::vector.8"* %9 to i64*
  %14 = bitcast %struct.MINIDUMP_MEMORY_INFO** %11 to i64*
  %15 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %9, i64 0, i32 0, i32 0
  br label %17

16:                                               ; preds = %84, %2
  ret void

17:                                               ; preds = %8, %84
  %18 = phi %"class.crashpad::MemoryMapRegionSnapshot"** [ %4, %8 ], [ %85, %84 ]
  %19 = load %"class.crashpad::MemoryMapRegionSnapshot"*, %"class.crashpad::MemoryMapRegionSnapshot"** %18, align 8
  %20 = bitcast %"class.crashpad::MemoryMapRegionSnapshot"* %19 to %struct.MINIDUMP_MEMORY_INFO* (%"class.crashpad::MemoryMapRegionSnapshot"*)***
  %21 = load %struct.MINIDUMP_MEMORY_INFO* (%"class.crashpad::MemoryMapRegionSnapshot"*)**, %struct.MINIDUMP_MEMORY_INFO* (%"class.crashpad::MemoryMapRegionSnapshot"*)*** %20, align 8
  %22 = getelementptr inbounds %struct.MINIDUMP_MEMORY_INFO* (%"class.crashpad::MemoryMapRegionSnapshot"*)*, %struct.MINIDUMP_MEMORY_INFO* (%"class.crashpad::MemoryMapRegionSnapshot"*)** %21, i64 2
  %23 = load %struct.MINIDUMP_MEMORY_INFO* (%"class.crashpad::MemoryMapRegionSnapshot"*)*, %struct.MINIDUMP_MEMORY_INFO* (%"class.crashpad::MemoryMapRegionSnapshot"*)** %22, align 8
  %24 = tail call dereferenceable(48) %struct.MINIDUMP_MEMORY_INFO* %23(%"class.crashpad::MemoryMapRegionSnapshot"* %19) #10
  %25 = load %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO** %10, align 8
  %26 = load %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO** %11, align 8
  %27 = icmp eq %struct.MINIDUMP_MEMORY_INFO* %25, %26
  %28 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %26 to i64
  br i1 %27, label %34, label %29

29:                                               ; preds = %17
  %30 = bitcast %struct.MINIDUMP_MEMORY_INFO* %25 to i8*
  %31 = bitcast %struct.MINIDUMP_MEMORY_INFO* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %31, i64 48, i1 false) #10
  %32 = getelementptr inbounds %struct.MINIDUMP_MEMORY_INFO, %struct.MINIDUMP_MEMORY_INFO* %25, i64 1
  %33 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %32 to i64
  store i64 %33, i64* %12, align 8
  br label %84

34:                                               ; preds = %17
  %35 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %25 to i64
  %36 = load i64, i64* %13, align 8
  %37 = sub i64 %35, %36
  %38 = sdiv exact i64 %37, 48
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 384307168202282325
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::vector.8"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #12
  unreachable

43:                                               ; preds = %34
  %44 = sub i64 %28, %36
  %45 = sdiv exact i64 %44, 48
  %46 = icmp ult i64 %45, 192153584101141162
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = shl nsw i64 %45, 1
  %49 = icmp ult i64 %48, %39
  %50 = select i1 %49, i64 %39, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %47, %43
  %53 = phi i64 [ %50, %47 ], [ 384307168202282325, %43 ]
  %54 = mul i64 %53, 48
  %55 = tail call i8* @_Znwm(i64 %54) #11
  %56 = bitcast i8* %55 to %struct.MINIDUMP_MEMORY_INFO*
  br label %57

57:                                               ; preds = %52, %47
  %58 = phi i64 [ %53, %52 ], [ 0, %47 ]
  %59 = phi %struct.MINIDUMP_MEMORY_INFO* [ %56, %52 ], [ null, %47 ]
  %60 = getelementptr inbounds %struct.MINIDUMP_MEMORY_INFO, %struct.MINIDUMP_MEMORY_INFO* %59, i64 %38
  %61 = getelementptr inbounds %struct.MINIDUMP_MEMORY_INFO, %struct.MINIDUMP_MEMORY_INFO* %59, i64 %58
  %62 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %61 to i64
  %63 = bitcast %struct.MINIDUMP_MEMORY_INFO* %60 to i8*
  %64 = bitcast %struct.MINIDUMP_MEMORY_INFO* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 48, i1 false) #10
  %65 = getelementptr inbounds %struct.MINIDUMP_MEMORY_INFO, %struct.MINIDUMP_MEMORY_INFO* %60, i64 1
  %66 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %65 to i64
  %67 = load %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO** %15, align 8
  %68 = load i64, i64* %12, align 8
  %69 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %67 to i64
  %70 = sub i64 %68, %69
  %71 = sdiv exact i64 %70, -48
  %72 = getelementptr inbounds %struct.MINIDUMP_MEMORY_INFO, %struct.MINIDUMP_MEMORY_INFO* %60, i64 %71
  %73 = ptrtoint %struct.MINIDUMP_MEMORY_INFO* %72 to i64
  %74 = icmp sgt i64 %70, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %57
  %76 = bitcast %struct.MINIDUMP_MEMORY_INFO* %72 to i8*
  %77 = bitcast %struct.MINIDUMP_MEMORY_INFO* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %70, i1 false) #10
  %78 = load %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO** %15, align 8
  br label %79

79:                                               ; preds = %75, %57
  %80 = phi %struct.MINIDUMP_MEMORY_INFO* [ %67, %57 ], [ %78, %75 ]
  store i64 %73, i64* %13, align 8
  store i64 %66, i64* %12, align 8
  store i64 %62, i64* %14, align 8
  %81 = icmp eq %struct.MINIDUMP_MEMORY_INFO* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %struct.MINIDUMP_MEMORY_INFO* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %29, %79, %82
  %85 = getelementptr inbounds %"class.crashpad::MemoryMapRegionSnapshot"*, %"class.crashpad::MemoryMapRegionSnapshot"** %18, i64 1
  %86 = icmp eq %"class.crashpad::MemoryMapRegionSnapshot"** %85, %6
  br i1 %86, label %16, label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad28MinidumpMemoryInfoListWriter6FreezeEv(%"class.crashpad::MinidumpMemoryInfoListWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZN8crashpad8internal20MinidumpStreamWriter6FreezeEv(%"class.crashpad::internal::MinidumpStreamWriter"* %2) #10
  br i1 %3, label %4, label %16

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 1, i32 0
  store i32 16, i32* %5, align 8
  %6 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 1, i32 1
  store i32 48, i32* %6, align 4
  %7 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %struct.MINIDUMP_MEMORY_INFO** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.8"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 1, i32 2
  store i64 %14, i64* %15, align 8
  br label %16

16:                                               ; preds = %1, %4
  %17 = phi i1 [ true, %4 ], [ false, %1 ]
  ret i1 %17
}

declare zeroext i1 @_ZN8crashpad8internal20MinidumpStreamWriter6FreezeEv(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN8crashpad28MinidumpMemoryInfoListWriter12SizeOfObjectEv(%"class.crashpad::MinidumpMemoryInfoListWriter"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast %struct.MINIDUMP_MEMORY_INFO** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.8"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, 16
  %9 = sub i64 %8, %7
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad28MinidumpMemoryInfoListWriter8ChildrenEv(%"class.std::__1::vector.22"* noalias nocapture sret, %"class.crashpad::MinidumpMemoryInfoListWriter"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad28MinidumpMemoryInfoListWriter11WriteObjectEPNS_19FileWriterInterfaceE(%"class.crashpad::MinidumpMemoryInfoListWriter"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.29", align 8
  %4 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.29"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 16) #11
  %10 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 16
  %12 = bitcast %"struct.crashpad::WritableIoVec"** %8 to i8**
  store i8* %11, i8** %12, align 8
  %13 = bitcast i8* %9 to %struct.MINIDUMP_MEMORY_INFO_LIST**
  store %struct.MINIDUMP_MEMORY_INFO_LIST* %4, %struct.MINIDUMP_MEMORY_INFO_LIST** %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 16, i64* %15, align 8
  %16 = bitcast %"struct.crashpad::WritableIoVec"** %7 to i64*
  %17 = ptrtoint i8* %11 to i64
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO** %18, align 8
  %20 = getelementptr inbounds %"class.crashpad::MinidumpMemoryInfoListWriter", %"class.crashpad::MinidumpMemoryInfoListWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load %struct.MINIDUMP_MEMORY_INFO*, %struct.MINIDUMP_MEMORY_INFO** %20, align 8
  %22 = icmp eq %struct.MINIDUMP_MEMORY_INFO* %19, %21
  br i1 %22, label %28, label %23

23:                                               ; preds = %2
  %24 = bitcast i8* %11 to %"struct.crashpad::WritableIoVec"*
  %25 = bitcast i8* %11 to %"struct.crashpad::WritableIoVec"*
  %26 = bitcast %"class.std::__1::vector.29"* %3 to i64*
  %27 = bitcast %"struct.crashpad::WritableIoVec"** %8 to i64*
  br label %40

28:                                               ; preds = %98, %2
  %29 = bitcast %"class.crashpad::FileWriterInterface"* %1 to i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.29"*)***
  %30 = load i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.29"*)**, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.29"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.29"*)*, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.29"*)** %30, i64 4
  %32 = load i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.29"*)*, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.29"*)** %31, align 8
  %33 = call zeroext i1 %32(%"class.crashpad::FileWriterInterface"* %1, %"class.std::__1::vector.29"* nonnull %3) #10
  %34 = load %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"** %6, align 8
  %35 = icmp eq %"struct.crashpad::WritableIoVec"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %28
  %37 = ptrtoint %"struct.crashpad::WritableIoVec"* %34 to i64
  store i64 %37, i64* %16, align 8
  %38 = bitcast %"struct.crashpad::WritableIoVec"* %34 to i8*
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %28, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret i1 %33

40:                                               ; preds = %103, %23
  %41 = phi i64 [ %17, %23 ], [ %99, %103 ]
  %42 = phi %"struct.crashpad::WritableIoVec"* [ %24, %23 ], [ %104, %103 ]
  %43 = phi %"struct.crashpad::WritableIoVec"* [ %25, %23 ], [ %100, %103 ]
  %44 = phi %struct.MINIDUMP_MEMORY_INFO* [ %19, %23 ], [ %101, %103 ]
  %45 = icmp eq %"struct.crashpad::WritableIoVec"* %43, %42
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = bitcast %"struct.crashpad::WritableIoVec"* %43 to %struct.MINIDUMP_MEMORY_INFO**
  store %struct.MINIDUMP_MEMORY_INFO* %44, %struct.MINIDUMP_MEMORY_INFO** %47, align 8
  %48 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %43, i64 0, i32 1
  store i64 48, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %43, i64 1
  %50 = ptrtoint %"struct.crashpad::WritableIoVec"* %49 to i64
  store i64 %50, i64* %16, align 8
  br label %98

51:                                               ; preds = %40
  %52 = ptrtoint %"struct.crashpad::WritableIoVec"* %42 to i64
  %53 = load i64, i64* %26, align 8
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 4
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 1152921504606846975
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::vector.29"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %59) #12
  unreachable

60:                                               ; preds = %51
  %61 = icmp ult i64 %55, 576460752303423487
  br i1 %61, label %62, label %70

62:                                               ; preds = %60
  %63 = ashr exact i64 %54, 3
  %64 = icmp ult i64 %63, %56
  %65 = select i1 %64, i64 %56, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %62
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @abort() #12
  unreachable

70:                                               ; preds = %67, %60
  %71 = phi i64 [ %65, %67 ], [ 1152921504606846975, %60 ]
  %72 = shl i64 %71, 4
  %73 = tail call i8* @_Znwm(i64 %72) #11
  %74 = bitcast i8* %73 to %"struct.crashpad::WritableIoVec"*
  br label %75

75:                                               ; preds = %70, %62
  %76 = phi i64 [ %71, %70 ], [ 0, %62 ]
  %77 = phi %"struct.crashpad::WritableIoVec"* [ %74, %70 ], [ null, %62 ]
  %78 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %77, i64 %55
  %79 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %77, i64 %76
  %80 = ptrtoint %"struct.crashpad::WritableIoVec"* %79 to i64
  %81 = bitcast %"struct.crashpad::WritableIoVec"* %78 to %struct.MINIDUMP_MEMORY_INFO**
  store %struct.MINIDUMP_MEMORY_INFO* %44, %struct.MINIDUMP_MEMORY_INFO** %81, align 8
  %82 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %77, i64 %55, i32 1
  store i64 48, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %78, i64 1
  %84 = ptrtoint %"struct.crashpad::WritableIoVec"* %83 to i64
  %85 = sub i64 %41, %53
  %86 = ashr exact i64 %85, 4
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %78, i64 %87
  %89 = ptrtoint %"struct.crashpad::WritableIoVec"* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %75
  %92 = bitcast %"struct.crashpad::WritableIoVec"* %88 to i8*
  %93 = inttoptr i64 %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %85, i1 false) #10
  br label %94

94:                                               ; preds = %91, %75
  store i64 %89, i64* %26, align 8
  store i64 %84, i64* %16, align 8
  store i64 %80, i64* %27, align 8
  %95 = icmp eq i64 %53, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %53 to i8*
  tail call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %46, %94, %96
  %99 = phi i64 [ %50, %46 ], [ %84, %94 ], [ %84, %96 ]
  %100 = phi %"struct.crashpad::WritableIoVec"* [ %49, %46 ], [ %83, %94 ], [ %83, %96 ]
  %101 = getelementptr inbounds %struct.MINIDUMP_MEMORY_INFO, %struct.MINIDUMP_MEMORY_INFO* %44, i64 1
  %102 = icmp eq %struct.MINIDUMP_MEMORY_INFO* %101, %21
  br i1 %102, label %28, label %103

103:                                              ; preds = %98
  %104 = load %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"** %8, align 8
  br label %40
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8crashpad28MinidumpMemoryInfoListWriter10StreamTypeEv(%"class.crashpad::MinidumpMemoryInfoListWriter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 16
}

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #1

declare i64 @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

declare i32 @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl(%"class.crashpad::internal::MinidumpWritable"*, i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
