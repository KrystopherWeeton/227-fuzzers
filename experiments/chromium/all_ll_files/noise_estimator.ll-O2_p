; ModuleID = '../../third_party/webrtc/modules/audio_processing/ns/noise_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/ns/noise_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [129 x float] }
%"class.webrtc::NoiseEstimator" = type { %"struct.webrtc::SuppressionParams"*, float, float, float, %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array", %"class.webrtc::QuantileNoiseEstimator" }
%"class.webrtc::QuantileNoiseEstimator" = type { %"struct.std::__1::array.0", %"struct.std::__1::array.0", %"struct.std::__1::array", %"struct.std::__1::array.1", i32 }
%"struct.std::__1::array.0" = type { [387 x float] }
%"struct.std::__1::array.1" = type { [3 x i32] }
%"struct.webrtc::SuppressionParams" = type <{ float, float, i8, [3 x i8] }>

@_ZN6webrtc12_GLOBAL__N_19log_tableE = internal unnamed_addr constant %"struct.std::__1::array" { [129 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FF9C04200000000, float 0x3FFCAB0B80000000, float 0x3FFF227280000000, float 0x4000A2B280000000, float 0x400193EAC0000000, float 0x40026BB1A0000000, float 0x40032EE3A0000000, float 0x4003E116E0000000, float 0x4004850400000000, float 0x40051CC9E0000000, float 0x4005AA1620000000, float 0x40062E4320000000, float 0x4006AA6BA0000000, float 0x40071F7B60000000, float 0x40078E3600000000, float 0x4007F74260000000, float 0x40085B2E60000000, float 0x4008BA74C0000000, float 0x4009157DE0000000, float 0x40096CA7A0000000, float 0x4009C04200000000, float 0x400A109520000000, float 0x400A5DDFC0000000, float 0x400AA85B20000000, float 0x400AF038E0000000, float 0x400B35A6C0000000, float 0x400B78CE20000000, float 0x400BB9D3C0000000, float 0x400BF8D8A0000000, float 0x400C35FCC0000000, float 0x400C715A40000000, float 0x400CAB0C00000000, float 0x400CE32900000000, float 0x400D19C6C0000000, float 0x400D4EF9A0000000, float 0x400D82D300000000, float 0x400DB56540000000, float 0x400DE6BF00000000, float 0x400E16F000000000, float 0x400E460560000000, float 0x400E740BC0000000, float 0x400EA10E80000000, float 0x400ECD19E0000000, float 0x400EF83840000000, float 0x400F227280000000, float 0x400F4BD2C0000000, float 0x400F746140000000, float 0x400F9C25E0000000, float 0x400FC32880000000, float 0x400FE97080000000, float 0x4010078240000000, float 0x401019F5E0000000, float 0x40102C1580000000, float 0x40103DE4C0000000, float 0x40104F6620000000, float 0x4010609C00000000, float 0x4010718900000000, float 0x4010822F60000000, float 0x4010929200000000, float 0x4010A2B240000000, float 0x4010B29280000000, float 0x4010C234E0000000, float 0x4010D19B00000000, float 0x4010E0C6C0000000, float 0x4010EFB9C0000000, float 0x4010FE7580000000, float 0x40110CFC00000000, float 0x40111B4E60000000, float 0x4011296E60000000, float 0x4011375CE0000000, float 0x4011451BA0000000, float 0x401152ABA0000000, float 0x4011600E60000000, float 0x40116D4520000000, float 0x40117A50A0000000, float 0x4011873220000000, float 0x401193EA80000000, float 0x4011A07B00000000, float 0x4011ACE4A0000000, float 0x4011B92820000000, float 0x4011C54640000000, float 0x4011D14060000000, float 0x4011DD1700000000, float 0x4011E8CB00000000, float 0x4011F45D00000000, float 0x4011FFCE40000000, float 0x40120B1EA0000000, float 0x4012164FE0000000, float 0x40122161A0000000, float 0x40122C5580000000, float 0x4012372B80000000, float 0x401241E480000000, float 0x40124C8100000000, float 0x40125701E0000000, float 0x40126166E0000000, float 0x40126BB1A0000000, float 0x401275E240000000, float 0x40127FF8E0000000, float 0x401289F660000000, float 0x401293DB40000000, float 0x40129DA7C0000000, float 0x4012A75C80000000, float 0x4012B0FA20000000, float 0x4012BA8080000000, float 0x4012C3F0C0000000, float 0x4012CD4AA0000000, float 0x4012D68F00000000, float 0x4012DFBE40000000, float 0x4012E8D860000000, float 0x4012F1DDE0000000, float 0x4012FACF80000000, float 0x401303AD60000000, float 0x40130C7760000000, float 0x4013152E80000000, float 0x40131DD2A0000000, float 0x4013266440000000, float 0x40132EE3E0000000, float 0x4013375140000000, float 0x40133FAD20000000, float 0x401347F800000000, float 0x4013503180000000, float 0x4013585A40000000, float 0x4013607280000000, float 0x4013687A80000000] }, align 4

@_ZN6webrtc14NoiseEstimatorC1ERKNS_17SuppressionParamsE = hidden unnamed_addr alias void (%"class.webrtc::NoiseEstimator"*, %"struct.webrtc::SuppressionParams"*), void (%"class.webrtc::NoiseEstimator"*, %"struct.webrtc::SuppressionParams"*)* @_ZN6webrtc14NoiseEstimatorC2ERKNS_17SuppressionParamsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14NoiseEstimatorC2ERKNS_17SuppressionParamsE(%"class.webrtc::NoiseEstimator"*, %"struct.webrtc::SuppressionParams"* dereferenceable(12)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 0
  store %"struct.webrtc::SuppressionParams"* %1, %"struct.webrtc::SuppressionParams"** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 8
  tail call void @_ZN6webrtc22QuantileNoiseEstimatorC1Ev(%"class.webrtc::QuantileNoiseEstimator"* %7) #3
  %8 = getelementptr %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 4, i32 0, i64 0
  %9 = bitcast float* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 2064, i1 false)
  ret void
}

declare void @_ZN6webrtc22QuantileNoiseEstimatorC1Ev(%"class.webrtc::QuantileNoiseEstimator"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14NoiseEstimator15PrepareAnalysisEv(%"class.webrtc::NoiseEstimator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 4, i32 0, i64 0
  %4 = bitcast float* %3 to i8*
  %5 = bitcast %"struct.std::__1::array"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 516, i1 false) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14NoiseEstimator9PreUpdateEiN3rtc9ArrayViewIKfLl129EEEf(%"class.webrtc::NoiseEstimator"*, i32, float*, float) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 7, i32 0, i64 0
  tail call void @_ZN6webrtc22QuantileNoiseEstimator8EstimateEN3rtc9ArrayViewIKfLl129EEENS2_IfLl129EEE(%"class.webrtc::QuantileNoiseEstimator"* %8, float* %2, float* %9) #3
  %10 = icmp slt i32 %1, 50
  br i1 %10, label %60, label %158

11:                                               ; preds = %60
  %12 = fmul float %3, 0x3F7FC07F00000000
  %13 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 0
  %14 = load %"struct.webrtc::SuppressionParams"*, %"struct.webrtc::SuppressionParams"** %13, align 8
  %15 = getelementptr inbounds %"struct.webrtc::SuppressionParams", %"struct.webrtc::SuppressionParams"* %14, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = fmul float %12, %16
  %18 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 1
  %19 = load float, float* %18, align 8
  %20 = fadd float %19, %17
  store float %20, float* %18, align 8
  %21 = shufflevector <2 x float> <float undef, float 1.240000e+02>, <2 x float> %72, <2 x i32> <i32 3, i32 1>
  %22 = fmul <2 x float> %72, %21
  %23 = extractelement <2 x float> %76, i32 1
  %24 = shufflevector <2 x float> %76, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %25 = extractelement <2 x float> %76, i32 0
  %26 = fmul <2 x float> %24, %76
  %27 = fsub <2 x float> %22, %26
  %28 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  %29 = extractelement <2 x float> %27, i32 0
  %30 = extractelement <2 x float> %27, i32 1
  %31 = fdiv float %29, %30
  %32 = bitcast i32* %5 to float*
  store float %31, float* %32, align 4
  %33 = fcmp olt float %31, 0.000000e+00
  %34 = select i1 %33, float 0.000000e+00, float %31
  %35 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 2
  %36 = load float, float* %35, align 4
  %37 = fadd float %36, %34
  store float %37, float* %35, align 4
  %38 = extractelement <2 x float> %72, i32 0
  %39 = fmul float %38, %23
  %40 = fmul float %25, 1.240000e+02
  %41 = fsub float %39, %40
  %42 = fdiv float %41, %30
  store float %42, float* %32, align 4
  %43 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  store float 1.000000e+00, float* %6, align 4
  %44 = fcmp ogt float %42, 1.000000e+00
  %45 = select i1 %44, float* %6, float* %32
  %46 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46)
  store float 0.000000e+00, float* %7, align 4
  %47 = load float, float* %45, align 4
  %48 = fcmp olt float %47, 0.000000e+00
  %49 = select i1 %48, float* %7, float* %45
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  %52 = bitcast i32 %51 to float
  %53 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 3
  %54 = load float, float* %53, align 8
  %55 = fadd float %54, %52
  store float %55, float* %53, align 8
  %56 = sitofp i32 %1 to float
  %57 = fadd float %56, 1.000000e+00
  %58 = fdiv float 1.000000e+00, %57
  %59 = fcmp ogt float %55, 0.000000e+00
  br i1 %59, label %79, label %85

60:                                               ; preds = %4, %60
  %61 = phi i64 [ %77, %60 ], [ 5, %4 ]
  %62 = phi <2 x float> [ %72, %60 ], [ zeroinitializer, %4 ]
  %63 = phi <2 x float> [ %76, %60 ], [ zeroinitializer, %4 ]
  %64 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* @_ZN6webrtc12_GLOBAL__N_19log_tableE, i64 0, i32 0, i64 %61
  %65 = load float, float* %64, align 4
  %66 = fmul float %65, %65
  %67 = getelementptr inbounds float, float* %2, i64 %61
  %68 = load float, float* %67, align 4
  %69 = tail call float @_ZN6webrtc16LogApproximationEf(float %68) #3
  %70 = insertelement <2 x float> undef, float %69, i32 0
  %71 = insertelement <2 x float> %70, float %66, i32 1
  %72 = fadd <2 x float> %62, %71
  %73 = fmul float %65, %69
  %74 = insertelement <2 x float> undef, float %73, i32 0
  %75 = insertelement <2 x float> %74, float %65, i32 1
  %76 = fadd <2 x float> %63, %75
  %77 = add nuw nsw i64 %61, 1
  %78 = icmp eq i64 %77, 129
  br i1 %78, label %11, label %60

79:                                               ; preds = %11
  %80 = fmul float %58, %37
  %81 = tail call float @_ZN6webrtc16ExpApproximationEf(float %80) #3
  %82 = fmul float %57, %81
  %83 = load float, float* %53, align 8
  %84 = fmul float %58, %83
  br label %85

85:                                               ; preds = %79, %11
  %86 = phi float [ %83, %79 ], [ %55, %11 ]
  %87 = phi float [ %84, %79 ], [ 0.000000e+00, %11 ]
  %88 = phi float [ %82, %79 ], [ 0.000000e+00, %11 ]
  %89 = bitcast float* %18 to i32*
  br label %128

90:                                               ; preds = %143
  %91 = sub nsw i32 50, %1
  %92 = sitofp i32 %91 to float
  %93 = insertelement <4 x float> undef, float %56, i32 0
  %94 = shufflevector <4 x float> %93, <4 x float> undef, <4 x i32> zeroinitializer
  %95 = insertelement <4 x float> undef, float %92, i32 0
  %96 = shufflevector <4 x float> %95, <4 x float> undef, <4 x i32> zeroinitializer
  %97 = insertelement <4 x float> undef, float %58, i32 0
  %98 = shufflevector <4 x float> %97, <4 x float> undef, <4 x i32> zeroinitializer
  br label %99

99:                                               ; preds = %99, %90
  %100 = phi i64 [ 0, %90 ], [ %126, %99 ]
  %101 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 7, i32 0, i64 %100
  %102 = bitcast float* %101 to <4 x float>*
  %103 = load <4 x float>, <4 x float>* %102, align 4
  %104 = fmul <4 x float> %103, %94
  %105 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 6, i32 0, i64 %100
  %106 = bitcast float* %105 to <4 x float>*
  %107 = load <4 x float>, <4 x float>* %106, align 4
  %108 = fmul <4 x float> %107, %96
  %109 = fmul <4 x float> %98, %108
  %110 = fadd <4 x float> %104, %109
  %111 = fmul <4 x float> %110, <float 0x3F947AE140000000, float 0x3F947AE140000000, float 0x3F947AE140000000, float 0x3F947AE140000000>
  %112 = bitcast float* %101 to <4 x float>*
  store <4 x float> %111, <4 x float>* %112, align 4
  %113 = or i64 %100, 4
  %114 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 7, i32 0, i64 %113
  %115 = bitcast float* %114 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 4
  %117 = fmul <4 x float> %116, %94
  %118 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 6, i32 0, i64 %113
  %119 = bitcast float* %118 to <4 x float>*
  %120 = load <4 x float>, <4 x float>* %119, align 4
  %121 = fmul <4 x float> %120, %96
  %122 = fmul <4 x float> %98, %121
  %123 = fadd <4 x float> %117, %122
  %124 = fmul <4 x float> %123, <float 0x3F947AE140000000, float 0x3F947AE140000000, float 0x3F947AE140000000, float 0x3F947AE140000000>
  %125 = bitcast float* %114 to <4 x float>*
  store <4 x float> %124, <4 x float>* %125, align 4
  %126 = add nuw nsw i64 %100, 8
  %127 = icmp eq i64 %126, 128
  br i1 %127, label %148, label %99, !llvm.loop !2

128:                                              ; preds = %146, %85
  %129 = phi float [ %86, %85 ], [ %147, %146 ]
  %130 = phi i64 [ 0, %85 ], [ %144, %146 ]
  %131 = fcmp oeq float %129, 0.000000e+00
  br i1 %131, label %132, label %136

132:                                              ; preds = %128
  %133 = load i32, i32* %89, align 8
  %134 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 6, i32 0, i64 %130
  %135 = bitcast float* %134 to i32*
  store i32 %133, i32* %135, align 4
  br label %143

136:                                              ; preds = %128
  %137 = icmp ugt i64 %130, 5
  %138 = select i1 %137, i64 %130, i64 5
  %139 = uitofp i64 %138 to float
  %140 = tail call float @_ZN6webrtc16PowApproximationEff(float %139, float %87) #3
  %141 = fdiv float %88, %140
  %142 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 6, i32 0, i64 %130
  store float %141, float* %142, align 4
  br label %143

143:                                              ; preds = %132, %136
  %144 = add nuw nsw i64 %130, 1
  %145 = icmp eq i64 %144, 129
  br i1 %145, label %90, label %146

146:                                              ; preds = %143
  %147 = load float, float* %53, align 8
  br label %128

148:                                              ; preds = %99
  %149 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 7, i32 0, i64 128
  %150 = load float, float* %149, align 4
  %151 = fmul float %150, %56
  %152 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 6, i32 0, i64 128
  %153 = load float, float* %152, align 4
  %154 = fmul float %153, %92
  %155 = fmul float %58, %154
  %156 = fadd float %151, %155
  %157 = fmul float %156, 0x3F947AE140000000
  store float %157, float* %149, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  br label %158

158:                                              ; preds = %148, %4
  ret void
}

declare void @_ZN6webrtc22QuantileNoiseEstimator8EstimateEN3rtc9ArrayViewIKfLl129EEENS2_IfLl129EEE(%"class.webrtc::QuantileNoiseEstimator"*, float*, float*) local_unnamed_addr #1

declare float @_ZN6webrtc16LogApproximationEf(float) local_unnamed_addr #1

declare float @_ZN6webrtc16ExpApproximationEf(float) local_unnamed_addr #1

declare float @_ZN6webrtc16PowApproximationEff(float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14NoiseEstimator10PostUpdateEN3rtc9ArrayViewIKfLln4711EEENS2_IS3_Ll129EEE(%"class.webrtc::NoiseEstimator"* nocapture, float*, i64, float*) local_unnamed_addr #0 align 2 {
  br label %6

5:                                                ; preds = %47
  ret void

6:                                                ; preds = %47, %4
  %7 = phi float [ 0x3FECCCCCC0000000, %4 ], [ %24, %47 ]
  %8 = phi i64 [ 0, %4 ], [ %48, %47 ]
  %9 = getelementptr inbounds float, float* %1, i64 %8
  %10 = load float, float* %9, align 4
  %11 = fsub float 1.000000e+00, %10
  %12 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 4, i32 0, i64 %8
  %13 = load float, float* %12, align 4
  %14 = fmul float %7, %13
  %15 = fsub float 1.000000e+00, %7
  %16 = getelementptr inbounds float, float* %3, i64 %8
  %17 = load float, float* %16, align 4
  %18 = fmul float %11, %17
  %19 = fmul float %10, %13
  %20 = fadd float %19, %18
  %21 = fmul float %15, %20
  %22 = fadd float %14, %21
  %23 = fcmp ogt float %10, 0x3FC99999A0000000
  %24 = select i1 %23, float 0x3FEFAE1480000000, float 0x3FECCCCCC0000000
  %25 = fcmp olt float %10, 0x3FC99999A0000000
  br i1 %25, label %26, label %32

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 5, i32 0, i64 %8
  %28 = load float, float* %27, align 4
  %29 = fsub float %17, %28
  %30 = fmul float %29, 0x3FA99999A0000000
  %31 = fadd float %28, %30
  store float %31, float* %27, align 4
  br label %32

32:                                               ; preds = %26, %6
  %33 = fcmp oeq float %24, %7
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 7, i32 0, i64 %8
  store float %22, float* %35, align 4
  br label %47

36:                                               ; preds = %32
  %37 = fmul float %24, %13
  %38 = fsub float 1.000000e+00, %24
  %39 = load float, float* %16, align 4
  %40 = fmul float %11, %39
  %41 = fadd float %19, %40
  %42 = fmul float %38, %41
  %43 = fadd float %37, %42
  %44 = getelementptr inbounds %"class.webrtc::NoiseEstimator", %"class.webrtc::NoiseEstimator"* %0, i64 0, i32 7, i32 0, i64 %8
  %45 = fcmp olt float %22, %43
  %46 = select i1 %45, float %22, float %43
  store float %46, float* %44, align 4
  br label %47

47:                                               ; preds = %36, %34
  %48 = add nuw nsw i64 %8, 1
  %49 = icmp eq i64 %48, 129
  br i1 %49, label %5, label %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
