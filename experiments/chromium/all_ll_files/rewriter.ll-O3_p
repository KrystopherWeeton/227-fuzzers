; ModuleID = '../../v8/src/parsing/rewriter.cc'
source_filename = "../../v8/src/parsing/rewriter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1247" = type { %"struct.std::__1::__atomic_base.1248" }
%"struct.std::__1::__atomic_base.1248" = type { %"struct.std::__1::__atomic_base.1249" }
%"struct.std::__1::__atomic_base.1249" = type { %"struct.std::__1::__cxx_atomic_impl.1250" }
%"struct.std::__1::__cxx_atomic_impl.1250" = type { %"struct.std::__1::__cxx_atomic_base_impl.1251" }
%"struct.std::__1::__cxx_atomic_base_impl.1251" = type { i32 }
%"class.v8::internal::Processor" = type <{ %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::Zone"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstNodeFactory", i64, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.20", %"class.v8::internal::Handle.21", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::base::ThreadedListBase.18" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon, %"class.v8::internal::VariableProxy"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%union.anon = type { %"class.v8::internal::AstRawString"* }
%"class.v8::base::ThreadedListBase.20" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.21" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.19, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.19 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::DeclarationScope" = type <{ %"class.v8::internal::Scope.base", i16, i8, [2 x i8], i32, [4 x i8], %"class.v8::internal::ZoneList", %"class.v8::base::ThreadedListBase.22", %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::PreparseDataBuilder"*, %"struct.v8::internal::DeclarationScope::RareData"* }>
%"class.v8::internal::Scope.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.20", %"class.v8::internal::Handle.21", i32, i32, i32, i32, i8, i16 }>
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Variable"**, i32, i32 }
%"class.v8::base::ThreadedListBase.22" = type { %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** }
%"class.v8::internal::SloppyBlockFunctionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::SloppyBlockFunctionStatement"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::PreparseDataBuilder" = type <{ %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder::ByteData", %union.anon.30, %"class.v8::internal::DeclarationScope"*, i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::PreparseDataBuilder::ByteData" = type <{ %union.anon.23, i8, [7 x i8] }>
%union.anon.23 = type { %struct.anon }
%struct.anon = type { %"class.std::__1::vector"*, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i8* }
%union.anon.30 = type { %"class.v8::internal::ScopedList" }
%"class.v8::internal::ScopedList" = type { %"class.std::__1::vector.31"*, i64, i64 }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i8**, i8**, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i8** }
%"struct.v8::internal::DeclarationScope::RareData" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::AstNodeFactory" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::EmptyStatement"*, %"class.v8::internal::ThisExpression"*, %"class.v8::internal::FailureExpression"* }
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl.39", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.v8::base::TemplateHashMapImpl.39" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry.40"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.40" = type <{ %union.anon.1238, i32, [4 x i8] }>
%union.anon.1238 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl.39", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle", %"struct.v8::internal::AstConsString::Segment" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::EmptyStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::ThisExpression" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::FailureExpression" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::Literal" = type { %"class.v8::internal::Expression", %union.anon.41 }
%union.anon.41 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Block" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::ZoneList.42", %"class.v8::internal::Scope"* }
%"class.v8::internal::BreakableStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::ZoneList.42" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::ExpressionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Expression"* }
%"class.v8::internal::Assignment" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::IfStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Expression"*, %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"* }
%"class.v8::internal::IterationStatement" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::Statement"* }
%"class.v8::internal::DoWhileStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Expression"* }
%"class.v8::internal::WhileStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Expression"* }
%"class.v8::internal::ForStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Statement"*, %"class.v8::internal::Expression"*, %"class.v8::internal::Statement"* }
%"class.v8::internal::ForInStatement" = type { %"class.v8::internal::ForEachStatement" }
%"class.v8::internal::ForEachStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::ForOfStatement" = type <{ %"class.v8::internal::ForEachStatement", i32, [4 x i8] }>
%"class.v8::internal::TryCatchStatement" = type <{ %"class.v8::internal::TryStatement", %"class.v8::internal::Scope"*, %"class.v8::internal::Block"*, i32, [4 x i8] }>
%"class.v8::internal::TryStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Block"* }
%"class.v8::internal::TryFinallyStatement" = type { %"class.v8::internal::TryStatement", %"class.v8::internal::Block"* }
%"class.v8::internal::SwitchStatement" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.43" }
%"class.v8::internal::ZoneList.43" = type { %"class.v8::internal::CaseClause"**, i32, i32 }
%"class.v8::internal::CaseClause" = type { %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.42" }
%"class.v8::internal::ContinueStatement" = type { %"class.v8::internal::JumpStatement", %"class.v8::internal::IterationStatement"* }
%"class.v8::internal::JumpStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::BreakStatement" = type { %"class.v8::internal::JumpStatement", %"class.v8::internal::BreakableStatement"* }
%"class.v8::internal::WithStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Scope"*, %"class.v8::internal::Expression"*, %"class.v8::internal::Statement"* }
%"class.v8::internal::ReturnStatement" = type <{ %"class.v8::internal::JumpStatement", %"class.v8::internal::Expression"*, i32, [4 x i8] }>
%"class.v8::internal::DebuggerStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::InitializeClassMembersStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::ZoneList.44"* }
%"class.v8::internal::ZoneList.44" = type { %"class.v8::internal::ClassLiteralProperty"**, i32, i32 }
%"class.v8::internal::ClassLiteralProperty" = type { %"class.v8::internal::LiteralProperty", i8, i8, i8, %"class.v8::internal::Variable"* }
%"class.v8::internal::LiteralProperty" = type { %"class.v8::internal::PointerWithPayload", %"class.v8::internal::Expression"* }
%"class.v8::internal::PointerWithPayload" = type { i64 }
%"class.v8::internal::InitializeClassStaticElementsStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::ZoneList.45"* }
%"class.v8::internal::ZoneList.45" = type { %"class.v8::internal::ClassLiteralStaticElement"**, i32, i32 }
%"class.v8::internal::ClassLiteralStaticElement" = type { i8, %union.anon.1246 }
%union.anon.1246 = type { %"class.v8::internal::ClassLiteralProperty"* }
%"class.v8::internal::RegExpLiteral" = type { %"class.v8::internal::MaterializedLiteral", i32, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::MaterializedLiteral" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::ObjectLiteral" = type { %"class.v8::internal::AggregateLiteral", i32, %"class.v8::internal::Handle.46", %"class.v8::internal::ZoneList.47", %"class.v8::internal::Variable"* }
%"class.v8::internal::AggregateLiteral" = type { %"class.v8::internal::MaterializedLiteral", i32 }
%"class.v8::internal::Handle.46" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList.47" = type { %"class.v8::internal::ObjectLiteralProperty"**, i32, i32 }
%"class.v8::internal::ObjectLiteralProperty" = type <{ %"class.v8::internal::LiteralProperty", i8, i8, [6 x i8] }>
%"class.v8::internal::ArrayLiteral" = type { %"class.v8::internal::AggregateLiteral", i32, %"class.v8::internal::Handle.48", %"class.v8::internal::ZoneList.49" }
%"class.v8::internal::Handle.48" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList.49" = type { %"class.v8::internal::Expression"**, i32, i32 }
%"class.v8::internal::Await" = type { %"class.v8::internal::Suspend" }
%"class.v8::internal::Suspend" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::BinaryOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::NaryOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.50" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"struct.v8::internal::NaryOperation::NaryOperationEntry"*, %"struct.v8::internal::NaryOperation::NaryOperationEntry"*, %"class.std::__1::__compressed_pair.52" }
%"struct.v8::internal::NaryOperation::NaryOperationEntry" = type <{ %"class.v8::internal::Expression"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53", %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.v8::internal::NaryOperation::NaryOperationEntry"* }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Call" = type { %"class.v8::internal::CallBase" }
%"class.v8::internal::CallBase" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.49" }
%"class.v8::internal::CallNew" = type { %"class.v8::internal::CallBase" }
%"class.v8::internal::CallRuntime" = type { %"class.v8::internal::Expression", i32, %"struct.v8::internal::Runtime::Function"*, %"class.v8::internal::ZoneList.49" }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::ClassLiteral" = type { %"class.v8::internal::Expression", i32, %"class.v8::internal::ClassScope"*, %"class.v8::internal::Expression"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::ZoneList.44"*, %"class.v8::internal::ZoneList.44"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::ClassScope" = type <{ %"class.v8::internal::Scope.base", [5 x i8], %"class.v8::internal::PointerWithPayload.55", %"class.v8::internal::Variable"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::PointerWithPayload.55" = type { i64 }
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList.42", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::CompareOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::CompoundAssignment" = type { %"class.v8::internal::Assignment", %"class.v8::internal::BinaryOperation"* }
%"class.v8::internal::Conditional" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::CountOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::EmptyParentheses" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::GetTemplateObject" = type { %"class.v8::internal::Expression", %"class.v8::internal::ZoneList.56"*, %"class.v8::internal::ZoneList.56"* }
%"class.v8::internal::ZoneList.56" = type { %"class.v8::internal::AstRawString"**, i32, i32 }
%"class.v8::internal::ImportCallExpression" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::NativeFunctionLiteral" = type { %"class.v8::internal::Expression", %"class.v8::internal::AstRawString"*, %"class.v8::Extension"* }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::internal::OptionalChain" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::Property" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::Spread" = type { %"class.v8::internal::Expression", i32, %"class.v8::internal::Expression"* }
%"class.v8::internal::SuperCallReference" = type { %"class.v8::internal::Expression", %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"* }
%"class.v8::internal::SuperPropertyReference" = type { %"class.v8::internal::Expression", %"class.v8::internal::VariableProxy"* }
%"class.v8::internal::TemplateLiteral" = type { %"class.v8::internal::Expression", %"class.v8::internal::ZoneList.56"*, %"class.v8::internal::ZoneList.49"* }
%"class.v8::internal::Throw" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::UnaryOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::Yield" = type { %"class.v8::internal::Suspend" }
%"class.v8::internal::YieldStar" = type { %"class.v8::internal::Suspend" }
%"class.v8::internal::VariableDeclaration" = type { %"class.v8::internal::Declaration" }
%"class.v8::internal::FunctionDeclaration" = type { %"class.v8::internal::Declaration", %"class.v8::internal::FunctionLiteral"* }
%"class.v8::internal::ParseInfo" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState"*, %"class.std::__1::unique_ptr.1194", %"class.v8::Extension"*, %"class.v8::internal::DeclarationScope"*, i64, i32, i32, %"class.std::__1::unique_ptr.1200", %"class.std::__1::unique_ptr.1206", %"class.std::__1::unique_ptr.1212", %"class.v8::internal::AstRawString"*, %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::FunctionLiteral"*, i8, [7 x i8] }>
%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.v8::internal::UnoptimizedCompileState" = type { i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::PendingCompilationErrorHandler", %"class.v8::internal::Logger"*, %"class.std::__1::unique_ptr.1179" }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.57, i32, [4 x i8] }>
%union.anon.57 = type { %"class.v8::internal::AstRawString"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1129", %"class.std::__1::unique_ptr.1135", %"struct.std::__1::atomic.224", %"class.std::__1::unique_ptr.1141", %"class.std::__1::unique_ptr.1147", %"class.std::__1::unique_ptr.1153", %"class.std::__1::unique_ptr.1159", %"class.std::__1::unique_ptr.1165", %"class.std::__1::set.1171", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.69", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.699", %"class.std::__1::unique_ptr.720", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.730", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.814", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.827", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.837", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.224", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.976", i32, i8, i8, i32, i32, %"class.std::__1::vector.982", %"class.std::__1::vector.982", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.989", i64, %"class.std::__1::unordered_map.990", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.595", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.232", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1046", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1084", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1118", %"class.std::__1::vector.1122", %"class.std::__1::vector.1122", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.63", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.67", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.67" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.98", %"class.std::__1::vector.102", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.233", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.237", %"class.std::__1::vector.237", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.386", %"class.std::__1::unique_ptr.392", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.506", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.528", %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.540", %"class.std::__1::unique_ptr.546", %"class.std::__1::shared_ptr.552", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.557", %"class.std::__1::unique_ptr.583", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.589", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.602", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.402", i8, [7 x i8], %"class.std::__1::unordered_map.608", %"class.std::__1::unordered_map.634", %"class.std::__1::unordered_map.608", %"class.std::__1::unordered_map.658", %"class.std::__1::vector.686", i8, %"class.std::__1::unique_ptr.693", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.75", %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.90", [4 x i8] }>
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77", %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.93", %"struct.std::__1::atomic.93", %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i64 }
%"struct.std::__1::atomic.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { i32 }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.104" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.175" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.169" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.109", %"class.std::__1::vector.109", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.111" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.116" }
%"class.std::__1::__hash_table.116" = type <{ %"class.std::__1::unique_ptr.117", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base.120"** }
%"struct.std::__1::__hash_node_base.120" = type { %"struct.std::__1::__hash_node_base.120"* }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::__bucket_list_deallocator.122" }
%"class.std::__1::__bucket_list_deallocator.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.std::__1::__hash_node_base.120" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.93", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.150"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.158", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.93", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.93", %"struct.std::__1::atomic.139", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.139" = type { %"struct.std::__1::__atomic_base.140" }
%"struct.std::__1::__atomic_base.140" = type { %"struct.std::__1::__cxx_atomic_impl.141" }
%"struct.std::__1::__cxx_atomic_impl.141" = type { %"struct.std::__1::__cxx_atomic_base_impl.142" }
%"struct.std::__1::__cxx_atomic_base_impl.142" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.143" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.145" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.150" = type { %"class.std::__1::__tree.151" }
%"class.std::__1::__tree.151" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.162", i8, [7 x i8] }>
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { i64*, i64*, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.std::__1::pair.177"*, %"struct.std::__1::pair.177"*, %"class.std::__1::__compressed_pair.178" }
%"struct.std::__1::pair.177" = type { i32, i64 }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::pair.177"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.183" }
%"class.std::__1::unordered_map.183" = type { %"class.std::__1::__hash_table.184" }
%"class.std::__1::__hash_table.184" = type <{ %"class.std::__1::unique_ptr.185", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.205", [4 x i8] }>
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187", %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base.188"** }
%"struct.std::__1::__hash_node_base.188" = type { %"struct.std::__1::__hash_node_base.188"* }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.std::__1::__bucket_list_deallocator.190" }
%"class.std::__1::__bucket_list_deallocator.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::__hash_node_base.188" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.211", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.213" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1051", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.546", %"class.std::__1::vector.1067", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1051" = type { %"struct.std::__1::__atomic_base.1052" }
%"struct.std::__1::__atomic_base.1052" = type { %"struct.std::__1::__cxx_atomic_impl.1053" }
%"struct.std::__1::__cxx_atomic_impl.1053" = type { %"struct.std::__1::__cxx_atomic_base_impl.1054" }
%"struct.std::__1::__cxx_atomic_base_impl.1054" = type { i32 }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.807" }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { i64**, i64**, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { i64** }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.807", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1067" = type { %"class.std::__1::__vector_base.1068" }
%"class.std::__1::__vector_base.1068" = type { %"struct.std::__1::pair.1069"*, %"struct.std::__1::pair.1069"*, %"class.std::__1::__compressed_pair.1070" }
%"struct.std::__1::pair.1069" = type opaque
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::pair.1069"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.224", %"struct.std::__1::atomic.228", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__cxx_atomic_impl.230" }
%"struct.std::__1::__cxx_atomic_impl.230" = type { %"struct.std::__1::__cxx_atomic_base_impl.231" }
%"struct.std::__1::__cxx_atomic_base_impl.231" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.232" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.233" = type { %"struct.std::__1::__atomic_base.234" }
%"struct.std::__1::__atomic_base.234" = type { %"struct.std::__1::__cxx_atomic_impl.235" }
%"struct.std::__1::__cxx_atomic_impl.235" = type { %"struct.std::__1::__cxx_atomic_base_impl.236" }
%"struct.std::__1::__cxx_atomic_base_impl.236" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.239" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.298", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.352", %"class.std::__1::vector.352", %"class.std::__1::vector.352", %"class.std::__1::vector.359", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.253", %"class.std::__1::vector.254", %"class.std::__1::vector.261", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.253" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.256" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { %"class.std::__1::unique_ptr.263"*, %"class.std::__1::unique_ptr.263"*, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::unique_ptr.263" = type opaque
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::unique_ptr.263"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.269", %"class.v8::internal::Worklist.271", %"class.v8::internal::Worklist.271", %"class.v8::internal::Worklist.271", %"class.v8::internal::Worklist.273", %"class.v8::internal::Worklist.275", %"class.v8::internal::Worklist.277", %"class.v8::internal::Worklist.279", %"class.v8::internal::Worklist.281", %"class.v8::internal::Worklist.283" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.269" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.271" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.273" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.275" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.277" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.279" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.281" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.283" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.285", i8, i64 }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.301" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.253"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.301" = type { %"class.std::__1::__hash_table.302" }
%"class.std::__1::__hash_table.302" = type <{ %"class.std::__1::unique_ptr.303", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.321", [4 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305", %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::__hash_node_base.306"** }
%"struct.std::__1::__hash_node_base.306" = type { %"struct.std::__1::__hash_node_base.306"* }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::__bucket_list_deallocator.308" }
%"class.std::__1::__bucket_list_deallocator.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base.306" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::vector.352" = type { %"class.std::__1::__vector_base.353" }
%"class.std::__1::__vector_base.353" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { %"struct.std::__1::pair.361"*, %"struct.std::__1::pair.361"*, %"class.std::__1::__compressed_pair.362" }
%"struct.std::__1::pair.361" = type opaque
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::pair.361"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.367", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.352"], [3 x %"class.std::__1::vector.352"], i8, %"struct.std::__1::atomic.224", [6 x i8], %"class.std::__1::vector.352", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.377"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.352", %"class.std::__1::vector.352", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.377" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.402", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.395"], %"class.std::__1::unique_ptr.367" }
%"class.std::__1::vector.395" = type { %"class.std::__1::__vector_base.396" }
%"class.std::__1::__vector_base.396" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.434", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.438", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.443" }
%"struct.std::__1::atomic.434" = type { %"struct.std::__1::__atomic_base.435" }
%"struct.std::__1::__atomic_base.435" = type { %"struct.std::__1::__cxx_atomic_impl.436" }
%"struct.std::__1::__cxx_atomic_impl.436" = type { %"struct.std::__1::__cxx_atomic_base_impl.437" }
%"struct.std::__1::__cxx_atomic_base_impl.437" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.438" = type { %"struct.std::__1::__atomic_base.439" }
%"struct.std::__1::__atomic_base.439" = type { %"struct.std::__1::__cxx_atomic_impl.440" }
%"struct.std::__1::__cxx_atomic_impl.440" = type { %"struct.std::__1::__cxx_atomic_base_impl.441" }
%"struct.std::__1::__cxx_atomic_base_impl.441" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.443" = type { %"class.std::__1::__hash_table.444" }
%"class.std::__1::__hash_table.444" = type <{ %"class.std::__1::unique_ptr.445", %"class.std::__1::__compressed_pair.455", %"class.std::__1::__compressed_pair.460", %"class.std::__1::__compressed_pair.463", [4 x i8] }>
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447", %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"struct.std::__1::__hash_node_base.448"** }
%"struct.std::__1::__hash_node_base.448" = type { %"struct.std::__1::__hash_node_base.448"* }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.std::__1::__bucket_list_deallocator.450" }
%"class.std::__1::__bucket_list_deallocator.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"struct.std::__1::__hash_node_base.448" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.367", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.224", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.473", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.473" = type { %"class.std::__1::__hash_table.474" }
%"class.std::__1::__hash_table.474" = type <{ %"class.std::__1::unique_ptr.475", %"class.std::__1::__compressed_pair.485", %"class.std::__1::__compressed_pair.490", %"class.std::__1::__compressed_pair.493", [4 x i8] }>
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477", %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"struct.std::__1::__hash_node_base.478"** }
%"struct.std::__1::__hash_node_base.478" = type { %"struct.std::__1::__hash_node_base.478"* }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.std::__1::__bucket_list_deallocator.480" }
%"class.std::__1::__bucket_list_deallocator.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.std::__1::__hash_node_base.478" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.509" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.552" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.553", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.553" = type { %"struct.std::__1::__atomic_base.554" }
%"struct.std::__1::__atomic_base.554" = type { %"struct.std::__1::__cxx_atomic_impl.555" }
%"struct.std::__1::__cxx_atomic_impl.555" = type { %"struct.std::__1::__cxx_atomic_base_impl.556" }
%"struct.std::__1::__cxx_atomic_base_impl.556" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.557" = type { %"class.std::__1::__hash_table.558" }
%"class.std::__1::__hash_table.558" = type <{ %"class.std::__1::unique_ptr.559", %"class.std::__1::__compressed_pair.569", %"class.std::__1::__compressed_pair.574", %"class.std::__1::__compressed_pair.577", [4 x i8] }>
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561", %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.std::__1::__hash_node_base.562"** }
%"struct.std::__1::__hash_node_base.562" = type { %"struct.std::__1::__hash_node_base.562"* }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.std::__1::__bucket_list_deallocator.564" }
%"class.std::__1::__bucket_list_deallocator.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.562" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.595", %"class.std::__1::vector.595" }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unordered_map.634" = type { %"class.std::__1::__hash_table.635" }
%"class.std::__1::__hash_table.635" = type <{ %"class.std::__1::unique_ptr.636", %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.651", %"class.std::__1::__compressed_pair.654", [4 x i8] }>
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638", %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"struct.std::__1::__hash_node_base.639"** }
%"struct.std::__1::__hash_node_base.639" = type { %"struct.std::__1::__hash_node_base.639"* }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.std::__1::__bucket_list_deallocator.641" }
%"class.std::__1::__bucket_list_deallocator.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.std::__1::__hash_node_base.639" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unordered_map.608" = type { %"class.std::__1::__hash_table.609" }
%"class.std::__1::__hash_table.609" = type <{ %"class.std::__1::unique_ptr.610", %"class.std::__1::__compressed_pair.620", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.628", [4 x i8] }>
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612", %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"struct.std::__1::__hash_node_base.613"** }
%"struct.std::__1::__hash_node_base.613" = type { %"struct.std::__1::__hash_node_base.613"* }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.std::__1::__bucket_list_deallocator.615" }
%"class.std::__1::__bucket_list_deallocator.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.std::__1::__hash_node_base.613" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unordered_map.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.680", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::vector.686" = type { %"class.std::__1::__vector_base.687" }
%"class.std::__1::__vector_base.687" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.688" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.595" }
%"class.std::__1::shared_ptr.699" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.211", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.714" }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.703" }
%"class.std::__1::vector.703" = type { %"class.std::__1::__vector_base.704" }
%"class.std::__1::__vector_base.704" = type { %"class.std::__1::unique_ptr.705"*, %"class.std::__1::unique_ptr.705"*, %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.std::__1::unique_ptr.705"* }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.723", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.723" = type { %"struct.std::__1::__atomic_base.724" }
%"struct.std::__1::__atomic_base.724" = type { %"struct.std::__1::__cxx_atomic_impl.725" }
%"struct.std::__1::__cxx_atomic_impl.725" = type { %"struct.std::__1::__cxx_atomic_base_impl.726" }
%"struct.std::__1::__cxx_atomic_base_impl.726" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.730" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.731", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.731" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.732", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.732" = type { %"class.std::__1::__vector_base.733" }
%"class.std::__1::__vector_base.733" = type { %"class.std::__1::unique_ptr.734"*, %"class.std::__1::unique_ptr.734"*, %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::unique_ptr.734" = type opaque
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.std::__1::unique_ptr.734"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.740 }
%union.anon.740 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.742" }
%"class.v8::internal::TaggedImpl.742" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.741" }
%"class.v8::internal::TaggedImpl.741" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.743", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.749", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.749", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.749" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.751", %"class.std::__1::vector.757", %"class.std::__1::unique_ptr.764", %"class.std::__1::vector.771", %"class.std::__1::unique_ptr.778", i64, %"class.std::__1::vector.784", %"class.std::__1::vector.792", %"class.std::__1::vector.800", i8, i8, i32 }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.757" = type { %"class.std::__1::__vector_base.758" }
%"class.std::__1::__vector_base.758" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.759" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.v8::internal::GlobalHandles::NodeSpace.767"* }
%"class.v8::internal::GlobalHandles::NodeSpace.767" = type opaque
%"class.std::__1::vector.771" = type { %"class.std::__1::__vector_base.772" }
%"class.std::__1::__vector_base.772" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.773" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.784" = type { %"class.std::__1::__vector_base.785" }
%"class.std::__1::__vector_base.785" = type { %"struct.std::__1::pair.786"*, %"struct.std::__1::pair.786"*, %"class.std::__1::__compressed_pair.787" }
%"struct.std::__1::pair.786" = type opaque
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.std::__1::pair.786"* }
%"class.std::__1::vector.792" = type { %"class.std::__1::__vector_base.793" }
%"class.std::__1::__vector_base.793" = type { %"struct.std::__1::pair.794"*, %"struct.std::__1::pair.794"*, %"class.std::__1::__compressed_pair.795" }
%"struct.std::__1::pair.794" = type opaque
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"struct.std::__1::pair.794"* }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.802" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.807", %"class.std::__1::vector.814" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.821" }
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"struct.v8::internal::Runtime::Function"* }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { i32*, i32*, %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.827" = type { %"struct.std::__1::__atomic_base.828" }
%"struct.std::__1::__atomic_base.828" = type { %"struct.std::__1::__cxx_atomic_impl.829" }
%"struct.std::__1::__cxx_atomic_impl.829" = type { %"struct.std::__1::__cxx_atomic_base_impl.830" }
%"struct.std::__1::__cxx_atomic_base_impl.830" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.837" = type { %"struct.std::__1::__atomic_base.838" }
%"struct.std::__1::__atomic_base.838" = type { %"struct.std::__1::__cxx_atomic_impl.839" }
%"struct.std::__1::__cxx_atomic_impl.839" = type { %"struct.std::__1::__cxx_atomic_base_impl.840" }
%"struct.std::__1::__cxx_atomic_base_impl.840" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.844 }
%union.anon.844 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.68"*, i16, i8*)*, i8* }
%"class.v8::Local.68" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.975", [128 x i8] }
%"class.v8::internal::Vector.975" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.832", i32, %"class.v8::Local.68" }
%"class.v8::Local.832" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.989" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.990" = type { %"class.std::__1::__hash_table.991" }
%"class.std::__1::__hash_table.991" = type <{ %"class.std::__1::unique_ptr.992", %"class.std::__1::__compressed_pair.1002", %"class.std::__1::__compressed_pair.1007", %"class.std::__1::__compressed_pair.1010", [4 x i8] }>
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994", %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"struct.std::__1::__hash_node_base.995"** }
%"struct.std::__1::__hash_node_base.995" = type { %"struct.std::__1::__hash_node_base.995"* }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.std::__1::__bucket_list_deallocator.997" }
%"class.std::__1::__bucket_list_deallocator.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::__hash_node_base.995" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.595" = type { %"class.std::__1::__vector_base.596" }
%"class.std::__1::__vector_base.596" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.232" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1014", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1043", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1044", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1014" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1039, %union.anon.1041, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1039 = type { i64 }
%union.anon.1041 = type { i64 }
%"class.std::__1::weak_ptr.1043" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1044" = type { %"class.v8::PersistentBase.1045" }
%"class.v8::PersistentBase.1045" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1015", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1015" = type { %"class.std::__1::__hash_table.1016" }
%"class.std::__1::__hash_table.1016" = type <{ %"class.std::__1::unique_ptr.1017", %"class.std::__1::__compressed_pair.1027", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1035", [4 x i8] }>
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019", %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.std::__1::__hash_node_base.1020"** }
%"struct.std::__1::__hash_node_base.1020" = type { %"struct.std::__1::__hash_node_base.1020"* }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.std::__1::__bucket_list_deallocator.1022" }
%"class.std::__1::__bucket_list_deallocator.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"struct.std::__1::__hash_node_base.1020" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1075", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.833", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.833" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1092" }
%"class.std::__1::unordered_map.1092" = type { %"class.std::__1::__hash_table.1093" }
%"class.std::__1::__hash_table.1093" = type <{ %"class.std::__1::unique_ptr.1094", %"class.std::__1::__compressed_pair.1104", %"class.std::__1::__compressed_pair.1109", %"class.std::__1::__compressed_pair.1112", [4 x i8] }>
%"class.std::__1::unique_ptr.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096", %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.std::__1::__hash_node_base.1097"** }
%"struct.std::__1::__hash_node_base.1097" = type { %"struct.std::__1::__hash_node_base.1097"* }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.std::__1::__bucket_list_deallocator.1099" }
%"class.std::__1::__bucket_list_deallocator.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"struct.std::__1::__hash_node_base.1097" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::atomic.1118" = type { %"struct.std::__1::__atomic_base.1119" }
%"struct.std::__1::__atomic_base.1119" = type { %"struct.std::__1::__cxx_atomic_impl.1120" }
%"struct.std::__1::__cxx_atomic_impl.1120" = type { %"struct.std::__1::__cxx_atomic_base_impl.1121" }
%"struct.std::__1::__cxx_atomic_base_impl.1121" = type { %"class.std::__1::vector.1122"* }
%"class.std::__1::vector.1122" = type { %"class.std::__1::__vector_base.1123" }
%"class.std::__1::__vector_base.1123" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1124" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"struct.std::__1::atomic.224" = type { %"struct.std::__1::__atomic_base.225" }
%"struct.std::__1::__atomic_base.225" = type { %"struct.std::__1::__cxx_atomic_impl.226" }
%"struct.std::__1::__cxx_atomic_impl.226" = type { %"struct.std::__1::__cxx_atomic_base_impl.227" }
%"struct.std::__1::__cxx_atomic_base_impl.227" = type { i8 }
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.1171" = type { %"class.std::__1::__tree.1172" }
%"class.std::__1::__tree.1172" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1173", %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* }
%"class.v8::internal::UnoptimizedCompileState::ParallelTasks" = type { %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::forward_list.1182" }
%"class.std::__1::forward_list.1182" = type { %"class.std::__1::__forward_list_base.1183" }
%"class.std::__1::__forward_list_base.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"struct.std::__1::__forward_begin_node.1186" }
%"struct.std::__1::__forward_begin_node.1186" = type { %"struct.std::__1::__forward_list_node.1187"* }
%"struct.std::__1::__forward_list_node.1187" = type { %"struct.std::__1::__forward_begin_node.1186", %"struct.std::__1::pair.1240" }
%"struct.std::__1::pair.1240" = type { %"class.v8::internal::FunctionLiteral"*, i64 }
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.v8::internal::Utf16CharacterStream"* }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.v8::internal::ConsumedPreparseData"* }
%"class.v8::internal::ConsumedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.v8::internal::AstValueFactory"* }
%"class.v8::internal::SourceRangeMap" = type { %"class.v8::internal::ZoneMap" }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1218" }
%"class.std::__1::__tree.1218" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1219", %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.v8::internal::ZoneAllocator.1221" }
%"class.v8::internal::ZoneAllocator.1221" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }

$_ZN2v88internal9Processor9SetResultEPNS0_10ExpressionE = comdat any

$_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE = comdat any

$_ZN2v88internal8Variable16SetMaybeAssignedEv = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"(closure_scope()) != nullptr\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1247", align 4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::Statement"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::Statement"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 4, i32 0
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 16
  br i1 %11, label %12, label %14, !prof !2

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 16) #6
  br label %16

14:                                               ; preds = %2
  %15 = add i64 %7, 16
  store i64 %15, i64* %6, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %7, %14 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::Literal"*
  %19 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %18, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %18, i64 0, i32 0, i32 0, i32 1
  store i32 681, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %18, i64 0, i32 0
  %22 = tail call %"class.v8::internal::Expression"* @_ZN2v88internal9Processor9SetResultEPNS0_10ExpressionE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Expression"* %21)
  %23 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ult i64 %28, 32
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %16
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %23, i64 32) #6
  br label %34

32:                                               ; preds = %16
  %33 = add i64 %25, 32
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::Block"*
  %37 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %36, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 7, i32* %39, align 4
  %40 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %36, i64 0, i32 1, i32 0
  store %"class.v8::internal::Statement"** null, %"class.v8::internal::Statement"*** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %36, i64 0, i32 1, i32 1
  store i32 2, i32* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %36, i64 0, i32 1, i32 2
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %37, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %37, i64 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %44
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %49, label %51, !prof !2

49:                                               ; preds = %34
  %50 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %37, i64 16) #6
  br label %53

51:                                               ; preds = %34
  %52 = add i64 %44, 16
  store i64 %52, i64* %43, align 8
  br label %53

53:                                               ; preds = %49, %51
  %54 = phi i64 [ %50, %49 ], [ %44, %51 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::Statement"**
  store %"class.v8::internal::Statement"** %55, %"class.v8::internal::Statement"*** %40, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %36, i64 0, i32 2
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %36, i64 0, i32 1
  %58 = ptrtoint %"class.v8::internal::Expression"* %22 to i64
  %59 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %61
  %65 = icmp ult i64 %64, 16
  br i1 %65, label %66, label %68, !prof !2

66:                                               ; preds = %53
  %67 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %59, i64 16) #6
  br label %70

68:                                               ; preds = %53
  %69 = add i64 %61, 16
  store i64 %69, i64* %60, align 8
  br label %70

70:                                               ; preds = %66, %68
  %71 = phi i64 [ %67, %66 ], [ %61, %68 ]
  %72 = inttoptr i64 %71 to %"class.v8::internal::ExpressionStatement"*
  %73 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %72, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %72, i64 0, i32 0, i32 0, i32 1
  store i32 9, i32* %74, align 4
  %75 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %72, i64 0, i32 1
  %76 = bitcast %"class.v8::internal::Expression"** %75 to i64*
  store i64 %58, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 2
  %78 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %77, align 8
  %79 = load i32, i32* %42, align 4
  %80 = load i32, i32* %41, align 8
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %70
  %83 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %57, i64 0, i32 0
  %84 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %83, align 8
  br label %120

85:                                               ; preds = %70
  %86 = shl nsw i32 %80, 1
  %87 = or i32 %86, 1
  %88 = sext i32 %87 to i64
  %89 = shl nsw i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %78, i64 0, i32 2
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %78, i64 0, i32 3
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %93, %91
  %95 = icmp ugt i64 %89, %94
  br i1 %95, label %96, label %98, !prof !2

96:                                               ; preds = %85
  %97 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %78, i64 %89) #6
  br label %100

98:                                               ; preds = %85
  %99 = add i64 %91, %89
  store i64 %99, i64* %90, align 8
  br label %100

100:                                              ; preds = %98, %96
  %101 = phi i64 [ %97, %96 ], [ %91, %98 ]
  %102 = inttoptr i64 %101 to %"class.v8::internal::Statement"**
  %103 = load i32, i32* %42, align 4
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %117

105:                                              ; preds = %100
  %106 = inttoptr i64 %101 to i8*
  %107 = bitcast %"class.v8::internal::ZoneList.42"* %57 to i8**
  %108 = load i8*, i8** %107, align 8
  %109 = sext i32 %103 to i64
  %110 = shl nsw i64 %109, 3
  switch i64 %110, label %116 [
    i64 16, label %115
    i64 8, label %111
  ]

111:                                              ; preds = %105
  %112 = bitcast i8* %108 to i64*
  %113 = inttoptr i64 %101 to i64*
  %114 = load i64, i64* %112, align 1
  store i64 %114, i64* %113, align 1
  br label %117

115:                                              ; preds = %105
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %108, i64 16, i1 false) #6
  br label %117

116:                                              ; preds = %105
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %108, i64 %110, i1 false) #6
  br label %117

117:                                              ; preds = %116, %115, %111, %100
  %118 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %57, i64 0, i32 0
  store %"class.v8::internal::Statement"** %102, %"class.v8::internal::Statement"*** %118, align 8
  store i32 %87, i32* %41, align 8
  %119 = load i32, i32* %42, align 4
  br label %120

120:                                              ; preds = %82, %117
  %121 = phi i32 [ %79, %82 ], [ %119, %117 ]
  %122 = phi %"class.v8::internal::Statement"** [ %84, %82 ], [ %102, %117 ]
  %123 = add nsw i32 %121, 1
  store i32 %123, i32* %42, align 4
  %124 = sext i32 %121 to i64
  %125 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %122, i64 %124
  %126 = bitcast %"class.v8::internal::Statement"** %125 to i64*
  store i64 %71, i64* %126, align 8
  %127 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %77, align 8
  %128 = load i32, i32* %42, align 4
  %129 = load i32, i32* %41, align 8
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %131, label %134

131:                                              ; preds = %120
  %132 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %57, i64 0, i32 0
  %133 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %132, align 8
  br label %169

134:                                              ; preds = %120
  %135 = shl nsw i32 %129, 1
  %136 = or i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = shl nsw i64 %137, 3
  %139 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %127, i64 0, i32 2
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %127, i64 0, i32 3
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %142, %140
  %144 = icmp ugt i64 %138, %143
  br i1 %144, label %145, label %147, !prof !2

145:                                              ; preds = %134
  %146 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %127, i64 %138) #6
  br label %149

147:                                              ; preds = %134
  %148 = add i64 %140, %138
  store i64 %148, i64* %139, align 8
  br label %149

149:                                              ; preds = %147, %145
  %150 = phi i64 [ %146, %145 ], [ %140, %147 ]
  %151 = inttoptr i64 %150 to %"class.v8::internal::Statement"**
  %152 = load i32, i32* %42, align 4
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %166

154:                                              ; preds = %149
  %155 = inttoptr i64 %150 to i8*
  %156 = bitcast %"class.v8::internal::ZoneList.42"* %57 to i8**
  %157 = load i8*, i8** %156, align 8
  %158 = sext i32 %152 to i64
  %159 = shl nsw i64 %158, 3
  switch i64 %159, label %165 [
    i64 16, label %164
    i64 8, label %160
  ]

160:                                              ; preds = %154
  %161 = bitcast i8* %157 to i64*
  %162 = inttoptr i64 %150 to i64*
  %163 = load i64, i64* %161, align 1
  store i64 %163, i64* %162, align 1
  br label %166

164:                                              ; preds = %154
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %155, i8* align 1 %157, i64 16, i1 false) #6
  br label %166

165:                                              ; preds = %154
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %155, i8* align 1 %157, i64 %159, i1 false) #6
  br label %166

166:                                              ; preds = %165, %164, %160, %149
  %167 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %57, i64 0, i32 0
  store %"class.v8::internal::Statement"** %151, %"class.v8::internal::Statement"*** %167, align 8
  store i32 %136, i32* %41, align 8
  %168 = load i32, i32* %42, align 4
  br label %169

169:                                              ; preds = %131, %166
  %170 = phi i32 [ %128, %131 ], [ %168, %166 ]
  %171 = phi %"class.v8::internal::Statement"** [ %133, %131 ], [ %151, %166 ]
  %172 = add nsw i32 %170, 1
  store i32 %172, i32* %42, align 4
  %173 = sext i32 %170 to i64
  %174 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %171, i64 %173
  %175 = bitcast %"class.v8::internal::Statement"** %174 to i64*
  store i64 %3, i64* %175, align 8
  %176 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %36, i64 0, i32 0, i32 0
  ret %"class.v8::internal::Statement"* %176
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Expression"* @_ZN2v88internal9Processor9SetResultEPNS0_10ExpressionE(%"class.v8::internal::Processor"*, %"class.v8::internal::Expression"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 7
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 24
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %2
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 24) #6
  br label %18

16:                                               ; preds = %2
  %17 = add i64 %9, 24
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"class.v8::internal::VariableProxy"*
  tail call void @_ZN2v88internal13VariableProxyC1EPNS0_8VariableEi(%"class.v8::internal::VariableProxy"* %20, %"class.v8::internal::Variable"* %5, i32 -1) #6
  %21 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %20, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 63
  %25 = icmp eq i32 %24, 52
  br i1 %25, label %26, label %34

26:                                               ; preds = %18
  %27 = or i32 %23, 128
  store i32 %27, i32* %22, align 4
  %28 = and i32 %23, 256
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %21, i64 1
  %32 = bitcast %"class.v8::internal::Expression"* %31 to %"class.v8::internal::Variable"**
  %33 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %32, align 8
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %33) #6
  br label %34

34:                                               ; preds = %30, %26, %18
  %35 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %35, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %35, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %37
  %41 = icmp ult i64 %40, 24
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %34
  %43 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %35, i64 24) #6
  br label %46

44:                                               ; preds = %34
  %45 = add i64 %37, 24
  store i64 %45, i64* %36, align 8
  br label %46

46:                                               ; preds = %42, %44
  %47 = phi i64 [ %43, %42 ], [ %37, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::Assignment"*
  tail call void @_ZN2v88internal10AssignmentC1ENS0_7AstNode8NodeTypeENS0_5Token5ValueEPNS0_10ExpressionES7_i(%"class.v8::internal::Assignment"* %48, i8 zeroext 25, i8 zeroext 17, %"class.v8::internal::Expression"* %21, %"class.v8::internal::Expression"* %1, i32 -1) #6
  %49 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %48, i64 0, i32 0
  ret %"class.v8::internal::Expression"* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor7ProcessEPNS0_8ZoneListIPNS0_9StatementEEE(%"class.v8::internal::Processor"*, %"class.v8::internal::ZoneList.42"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %23

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %9 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %13 = bitcast %"class.v8::internal::Statement"** %12 to i64*
  %14 = sext i32 %4 to i64
  br label %15

15:                                               ; preds = %7, %37
  %16 = phi i64 [ %14, %7 ], [ %17, %37 ]
  %17 = add nsw i64 %16, -1
  %18 = load i8, i8* %8, align 1, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = load i8, i8* %5, align 2, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20, %37, %2
  ret void

24:                                               ; preds = %15, %20
  %25 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %9, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %25, i64 %17
  %27 = bitcast %"class.v8::internal::Statement"** %26 to %"class.v8::internal::AstNode"**
  %28 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %27, align 8
  %29 = load i8, i8* %10, align 8, !range !3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %24
  %32 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %33 = load i64, i64* %11, align 8
  %34 = icmp ult i64 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  store i8 1, i8* %10, align 8
  br label %37

36:                                               ; preds = %31
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %28) #6
  br label %37

37:                                               ; preds = %24, %35, %36
  %38 = load i64, i64* %13, align 8
  %39 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %9, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %39, i64 %17
  %41 = bitcast %"class.v8::internal::Statement"** %40 to i64*
  store i64 %38, i64* %41, align 8
  %42 = icmp sgt i64 %17, 0
  br i1 %42, label %15, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor10VisitBlockEPNS0_5BlockE(%"class.v8::internal::Processor"*, %"class.v8::internal::Block"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 64
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %54

7:                                                ; preds = %2
  %8 = trunc i32 %4 to i8
  %9 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = lshr i8 %8, 7
  %12 = or i8 %10, %11
  store i8 %12, i8* %9, align 1
  %13 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 1, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %16 = icmp sgt i32 %14, 0
  br i1 %16, label %17, label %53

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %20 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %22 = bitcast %"class.v8::internal::Statement"** %21 to i64*
  %23 = sext i32 %14 to i64
  br label %24

24:                                               ; preds = %51, %17
  %25 = phi i8 [ %12, %17 ], [ %52, %51 ]
  %26 = phi i64 [ %23, %17 ], [ %27, %51 ]
  %27 = add nsw i64 %26, -1
  %28 = icmp eq i8 %25, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = load i8, i8* %15, align 2, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %53

32:                                               ; preds = %29, %24
  %33 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %18, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %33, i64 %27
  %35 = bitcast %"class.v8::internal::Statement"** %34 to %"class.v8::internal::AstNode"**
  %36 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %35, align 8
  %37 = load i8, i8* %19, align 8, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %32
  %40 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %41 = load i64, i64* %20, align 8
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  store i8 1, i8* %19, align 8
  br label %45

44:                                               ; preds = %39
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %36) #6
  br label %45

45:                                               ; preds = %32, %43, %44
  %46 = load i64, i64* %22, align 8
  %47 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %18, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %47, i64 %27
  %49 = bitcast %"class.v8::internal::Statement"** %48 to i64*
  store i64 %46, i64* %49, align 8
  %50 = icmp sgt i64 %27, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = load i8, i8* %9, align 1, !range !3
  br label %24

53:                                               ; preds = %29, %45, %7
  store i8 %10, i8* %9, align 1
  br label %54

54:                                               ; preds = %2, %53
  %55 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %55, %"class.v8::internal::Statement"** %56, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor24VisitExpressionStatementEPNS0_19ExpressionStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::ExpressionStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %1, i64 0, i32 1
  %8 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %7, align 8
  %9 = tail call %"class.v8::internal::Expression"* @_ZN2v88internal9Processor9SetResultEPNS0_10ExpressionE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Expression"* %8)
  store %"class.v8::internal::Expression"* %9, %"class.v8::internal::Expression"** %7, align 8
  store i8 1, i8* %3, align 2
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %11, %"class.v8::internal::Statement"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor16VisitIfStatementEPNS0_11IfStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::IfStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 2
  %6 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %18

17:                                               ; preds = %11
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %7) #6
  br label %18

18:                                               ; preds = %2, %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Statement"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Statement"** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = load i8, i8* %3, align 2, !range !3
  %24 = icmp eq i8 %23, 0
  store i8 %4, i8* %3, align 2
  %25 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 3
  %26 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %26, i64 0, i32 0
  %28 = load i8, i8* %8, align 8, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %18
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %32 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i8 1, i8* %8, align 8
  br label %37

36:                                               ; preds = %30
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %27) #6
  br label %37

37:                                               ; preds = %18, %35, %36
  %38 = load i64, i64* %20, align 8
  %39 = bitcast %"class.v8::internal::Statement"** %25 to i64*
  store i64 %38, i64* %39, align 8
  br i1 %24, label %45, label %40

40:                                               ; preds = %37
  %41 = load i8, i8* %3, align 2, !range !3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 0
  br label %48

45:                                               ; preds = %40, %37
  %46 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 0
  %47 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %46)
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi %"class.v8::internal::Statement"* [ %44, %43 ], [ %47, %45 ]
  store %"class.v8::internal::Statement"* %49, %"class.v8::internal::Statement"** %19, align 8
  store i8 1, i8* %3, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor23VisitIterationStatementEPNS0_18IterationStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::IterationStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.v8::internal::IterationStatement", %"class.v8::internal::IterationStatement"* %1, i64 0, i32 1
  %6 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %18

17:                                               ; preds = %11
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %7) #6
  br label %18

18:                                               ; preds = %2, %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Statement"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Statement"** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::IterationStatement", %"class.v8::internal::IterationStatement"* %1, i64 0, i32 0, i32 0
  %24 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %23)
  store %"class.v8::internal::Statement"* %24, %"class.v8::internal::Statement"** %19, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 2
  store i8 %4, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor21VisitDoWhileStatementEPNS0_16DoWhileStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::DoWhileStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.v8::internal::DoWhileStatement", %"class.v8::internal::DoWhileStatement"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %18

17:                                               ; preds = %11
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %7) #6
  br label %18

18:                                               ; preds = %2, %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Statement"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Statement"** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::DoWhileStatement", %"class.v8::internal::DoWhileStatement"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %23) #6
  store %"class.v8::internal::Statement"* %24, %"class.v8::internal::Statement"** %19, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 2
  store i8 %4, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor19VisitWhileStatementEPNS0_14WhileStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::WhileStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.v8::internal::WhileStatement", %"class.v8::internal::WhileStatement"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %18

17:                                               ; preds = %11
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %7) #6
  br label %18

18:                                               ; preds = %2, %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Statement"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Statement"** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::WhileStatement", %"class.v8::internal::WhileStatement"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %23) #6
  store %"class.v8::internal::Statement"* %24, %"class.v8::internal::Statement"** %19, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 2
  store i8 %4, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor17VisitForStatementEPNS0_12ForStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::ForStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %18

17:                                               ; preds = %11
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %7) #6
  br label %18

18:                                               ; preds = %2, %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Statement"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Statement"** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %23) #6
  store %"class.v8::internal::Statement"* %24, %"class.v8::internal::Statement"** %19, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 2
  store i8 %4, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor19VisitForInStatementEPNS0_14ForInStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::ForInStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.v8::internal::ForInStatement", %"class.v8::internal::ForInStatement"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %18

17:                                               ; preds = %11
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %7) #6
  br label %18

18:                                               ; preds = %2, %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Statement"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Statement"** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::ForInStatement", %"class.v8::internal::ForInStatement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %23) #6
  store %"class.v8::internal::Statement"* %24, %"class.v8::internal::Statement"** %19, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 2
  store i8 %4, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor19VisitForOfStatementEPNS0_14ForOfStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::ForOfStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %18

17:                                               ; preds = %11
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %7) #6
  br label %18

18:                                               ; preds = %2, %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Statement"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Statement"** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %23) #6
  store %"class.v8::internal::Statement"* %24, %"class.v8::internal::Statement"** %19, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 2
  store i8 %4, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor22VisitTryCatchStatementEPNS0_17TryCatchStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::TryCatchStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = getelementptr inbounds %"class.v8::internal::TryCatchStatement", %"class.v8::internal::TryCatchStatement"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 1, i8* %8, align 8
  br label %18

17:                                               ; preds = %11
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %7) #6
  br label %18

18:                                               ; preds = %2, %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::Statement"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Block"** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = load i8, i8* %3, align 2, !range !3
  store i8 %4, i8* %3, align 2
  %24 = getelementptr inbounds %"class.v8::internal::TryCatchStatement", %"class.v8::internal::TryCatchStatement"* %1, i64 0, i32 2
  %25 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %8, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %18
  %30 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %31 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i8 1, i8* %8, align 8
  br label %36

35:                                               ; preds = %29
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %26) #6
  br label %36

36:                                               ; preds = %18, %34, %35
  %37 = load i64, i64* %20, align 8
  %38 = bitcast %"class.v8::internal::Block"** %24 to i64*
  store i64 %37, i64* %38, align 8
  %39 = load i8, i8* %3, align 2, !range !3
  %40 = icmp eq i8 %39, 0
  %41 = icmp eq i8 %23, 0
  %42 = or i1 %41, %40
  %43 = getelementptr inbounds %"class.v8::internal::TryCatchStatement", %"class.v8::internal::TryCatchStatement"* %1, i64 0, i32 0, i32 0
  br i1 %42, label %44, label %46

44:                                               ; preds = %36
  %45 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %43)
  br label %46

46:                                               ; preds = %36, %44
  %47 = phi %"class.v8::internal::Statement"* [ %45, %44 ], [ %43, %36 ]
  store %"class.v8::internal::Statement"* %47, %"class.v8::internal::Statement"** %19, align 8
  store i8 1, i8* %3, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor24VisitTryFinallyStatementEPNS0_19TryFinallyStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::TryFinallyStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %528, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %7, align 2
  %8 = getelementptr inbounds %"class.v8::internal::TryFinallyStatement", %"class.v8::internal::TryFinallyStatement"* %1, i64 0, i32 1
  %9 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %6
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %16 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %10) #6
  br label %21

21:                                               ; preds = %6, %19, %20
  %22 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %23 = bitcast %"class.v8::internal::Statement"** %22 to %"class.v8::internal::AstNode"**
  %24 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 63
  %28 = icmp eq i32 %27, 7
  %29 = bitcast %"class.v8::internal::AstNode"* %24 to %"class.v8::internal::Block"*
  %30 = select i1 %28, %"class.v8::internal::Block"* %29, %"class.v8::internal::Block"* null
  store %"class.v8::internal::Block"* %30, %"class.v8::internal::Block"** %8, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 3
  %32 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::DeclarationScope"* %32, null
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

35:                                               ; preds = %21
  %36 = load i8, i8* %7, align 2, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %356, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.v8::internal::DeclarationScope"* %32 to %"class.v8::internal::Scope"*
  %40 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 4, i32 1
  %41 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %41, i64 0, i32 3
  %43 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %43, i64 0, i32 22
  %45 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %44, align 8
  %46 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope12NewTemporaryEPKNS0_12AstRawStringE(%"class.v8::internal::Scope"* nonnull %39, %"class.v8::internal::AstRawString"* %45) #6
  %47 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 4, i32 0
  %48 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %48, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %48, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %52, %50
  %54 = icmp ult i64 %53, 24
  br i1 %54, label %55, label %57, !prof !2

55:                                               ; preds = %38
  %56 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %48, i64 24) #6
  br label %59

57:                                               ; preds = %38
  %58 = add i64 %50, 24
  store i64 %58, i64* %49, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi i64 [ %56, %55 ], [ %50, %57 ]
  %61 = inttoptr i64 %60 to %"class.v8::internal::VariableProxy"*
  tail call void @_ZN2v88internal13VariableProxyC1EPNS0_8VariableEi(%"class.v8::internal::VariableProxy"* %61, %"class.v8::internal::Variable"* %46, i32 -1) #6
  %62 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 0
  %64 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %63, align 8
  %65 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %65, i64 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %65, i64 0, i32 3
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %69, %67
  %71 = icmp ult i64 %70, 24
  br i1 %71, label %72, label %74, !prof !2

72:                                               ; preds = %59
  %73 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %65, i64 24) #6
  br label %76

74:                                               ; preds = %59
  %75 = add i64 %67, 24
  store i64 %75, i64* %66, align 8
  br label %76

76:                                               ; preds = %72, %74
  %77 = phi i64 [ %73, %72 ], [ %67, %74 ]
  %78 = inttoptr i64 %77 to %"class.v8::internal::VariableProxy"*
  tail call void @_ZN2v88internal13VariableProxyC1EPNS0_8VariableEi(%"class.v8::internal::VariableProxy"* %78, %"class.v8::internal::Variable"* %64, i32 -1) #6
  %79 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %78, i64 0, i32 0
  %80 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %61, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 63
  %83 = icmp eq i32 %82, 52
  br i1 %83, label %84, label %92

84:                                               ; preds = %76
  %85 = or i32 %81, 128
  store i32 %85, i32* %80, align 4
  %86 = and i32 %81, 256
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %62, i64 1
  %90 = bitcast %"class.v8::internal::Expression"* %89 to %"class.v8::internal::Variable"**
  %91 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %90, align 8
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %91) #6
  br label %92

92:                                               ; preds = %88, %84, %76
  %93 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %93, i64 0, i32 2
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %93, i64 0, i32 3
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %97, %95
  %99 = icmp ult i64 %98, 24
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %92
  %101 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %93, i64 24) #6
  br label %104

102:                                              ; preds = %92
  %103 = add i64 %95, 24
  store i64 %103, i64* %94, align 8
  br label %104

104:                                              ; preds = %100, %102
  %105 = phi i64 [ %101, %100 ], [ %95, %102 ]
  %106 = inttoptr i64 %105 to %"class.v8::internal::Assignment"*
  tail call void @_ZN2v88internal10AssignmentC1ENS0_7AstNode8NodeTypeENS0_5Token5ValueEPNS0_10ExpressionES7_i(%"class.v8::internal::Assignment"* %106, i8 zeroext 25, i8 zeroext 17, %"class.v8::internal::Expression"* %62, %"class.v8::internal::Expression"* %79, i32 -1) #6
  %107 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %78, i64 0, i32 0, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, 63
  %110 = icmp eq i32 %109, 52
  br i1 %110, label %111, label %119

111:                                              ; preds = %104
  %112 = or i32 %108, 128
  store i32 %112, i32* %107, align 4
  %113 = and i32 %108, 256
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %79, i64 1
  %117 = bitcast %"class.v8::internal::Expression"* %116 to %"class.v8::internal::Variable"**
  %118 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %117, align 8
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %118) #6
  br label %119

119:                                              ; preds = %115, %111, %104
  %120 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %120, i64 0, i32 2
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %120, i64 0, i32 3
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 %124, %122
  %126 = icmp ult i64 %125, 24
  br i1 %126, label %127, label %129, !prof !2

127:                                              ; preds = %119
  %128 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %120, i64 24) #6
  br label %131

129:                                              ; preds = %119
  %130 = add i64 %122, 24
  store i64 %130, i64* %121, align 8
  br label %131

131:                                              ; preds = %127, %129
  %132 = phi i64 [ %128, %127 ], [ %122, %129 ]
  %133 = inttoptr i64 %132 to %"class.v8::internal::Assignment"*
  tail call void @_ZN2v88internal10AssignmentC1ENS0_7AstNode8NodeTypeENS0_5Token5ValueEPNS0_10ExpressionES7_i(%"class.v8::internal::Assignment"* %133, i8 zeroext 25, i8 zeroext 17, %"class.v8::internal::Expression"* %79, %"class.v8::internal::Expression"* %62, i32 -1) #6
  %134 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %8, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %134, i64 0, i32 1
  %136 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %136, i64 0, i32 2
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %136, i64 0, i32 3
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %140, %138
  %142 = icmp ult i64 %141, 16
  br i1 %142, label %143, label %145, !prof !2

143:                                              ; preds = %131
  %144 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %136, i64 16) #6
  br label %147

145:                                              ; preds = %131
  %146 = add i64 %138, 16
  store i64 %146, i64* %137, align 8
  br label %147

147:                                              ; preds = %143, %145
  %148 = phi i64 [ %144, %143 ], [ %138, %145 ]
  %149 = inttoptr i64 %148 to %"class.v8::internal::ExpressionStatement"*
  %150 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %149, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %149, i64 0, i32 0, i32 0, i32 1
  store i32 9, i32* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %149, i64 0, i32 1
  %153 = bitcast %"class.v8::internal::Expression"** %152 to i64*
  store i64 %105, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 2
  %155 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %134, i64 0, i32 1, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %134, i64 0, i32 1, i32 1
  %159 = load i32, i32* %158, align 8
  %160 = icmp slt i32 %157, %159
  br i1 %160, label %161, label %164

161:                                              ; preds = %147
  %162 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %135, i64 0, i32 0
  %163 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %162, align 8
  br label %199

164:                                              ; preds = %147
  %165 = shl nsw i32 %159, 1
  %166 = or i32 %165, 1
  %167 = sext i32 %166 to i64
  %168 = shl nsw i64 %167, 3
  %169 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %155, i64 0, i32 2
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %155, i64 0, i32 3
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %172, %170
  %174 = icmp ugt i64 %168, %173
  br i1 %174, label %175, label %177, !prof !2

175:                                              ; preds = %164
  %176 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %155, i64 %168) #6
  br label %179

177:                                              ; preds = %164
  %178 = add i64 %170, %168
  store i64 %178, i64* %169, align 8
  br label %179

179:                                              ; preds = %177, %175
  %180 = phi i64 [ %176, %175 ], [ %170, %177 ]
  %181 = inttoptr i64 %180 to %"class.v8::internal::Statement"**
  %182 = load i32, i32* %156, align 4
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %184, label %196

184:                                              ; preds = %179
  %185 = inttoptr i64 %180 to i8*
  %186 = bitcast %"class.v8::internal::ZoneList.42"* %135 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = sext i32 %182 to i64
  %189 = shl nsw i64 %188, 3
  switch i64 %189, label %195 [
    i64 16, label %194
    i64 8, label %190
  ]

190:                                              ; preds = %184
  %191 = bitcast i8* %187 to i64*
  %192 = inttoptr i64 %180 to i64*
  %193 = load i64, i64* %191, align 1
  store i64 %193, i64* %192, align 1
  br label %196

194:                                              ; preds = %184
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %185, i8* align 1 %187, i64 16, i1 false) #6
  br label %196

195:                                              ; preds = %184
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %185, i8* align 1 %187, i64 %189, i1 false) #6
  br label %196

196:                                              ; preds = %195, %194, %190, %179
  %197 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %135, i64 0, i32 0
  store %"class.v8::internal::Statement"** %181, %"class.v8::internal::Statement"*** %197, align 8
  store i32 %166, i32* %158, align 8
  %198 = load i32, i32* %156, align 4
  br label %199

199:                                              ; preds = %161, %196
  %200 = phi i32 [ %157, %161 ], [ %198, %196 ]
  %201 = phi %"class.v8::internal::Statement"** [ %163, %161 ], [ %181, %196 ]
  %202 = add nsw i32 %200, 1
  store i32 %202, i32* %156, align 4
  %203 = sext i32 %200 to i64
  %204 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %201, i64 %203
  %205 = bitcast %"class.v8::internal::Statement"** %204 to i64*
  store i64 %148, i64* %205, align 8
  %206 = load i32, i32* %156, align 4
  %207 = add i32 %206, -1
  %208 = icmp sgt i32 %207, 0
  br i1 %208, label %209, label %281

209:                                              ; preds = %199
  %210 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %135, i64 0, i32 0
  %211 = sext i32 %207 to i64
  %212 = add nsw i64 %211, -1
  %213 = and i64 %211, 3
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %233, label %215

215:                                              ; preds = %209, %215
  %216 = phi i64 [ %227, %215 ], [ %211, %209 ]
  %217 = phi i32 [ %228, %215 ], [ %206, %209 ]
  %218 = phi i64 [ %229, %215 ], [ %213, %209 ]
  %219 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %210, align 8
  %220 = add nsw i32 %217, -2
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %219, i64 %221
  %223 = bitcast %"class.v8::internal::Statement"** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %219, i64 %216
  %226 = bitcast %"class.v8::internal::Statement"** %225 to i64*
  store i64 %224, i64* %226, align 8
  %227 = add nsw i64 %216, -1
  %228 = trunc i64 %216 to i32
  %229 = add i64 %218, -1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %215, !llvm.loop !4

231:                                              ; preds = %215
  %232 = trunc i64 %216 to i32
  br label %233

233:                                              ; preds = %209, %231
  %234 = phi i64 [ %211, %209 ], [ %227, %231 ]
  %235 = phi i32 [ %206, %209 ], [ %232, %231 ]
  %236 = icmp ult i64 %212, 3
  br i1 %236, label %281, label %237

237:                                              ; preds = %233, %237
  %238 = phi i64 [ %278, %237 ], [ %234, %233 ]
  %239 = phi i32 [ %280, %237 ], [ %235, %233 ]
  %240 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %210, align 8
  %241 = add nsw i32 %239, -2
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %240, i64 %242
  %244 = bitcast %"class.v8::internal::Statement"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %240, i64 %238
  %247 = bitcast %"class.v8::internal::Statement"** %246 to i64*
  store i64 %245, i64* %247, align 8
  %248 = add nsw i64 %238, -1
  %249 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %210, align 8
  %250 = shl i64 %238, 32
  %251 = add i64 %250, -8589934592
  %252 = ashr exact i64 %251, 32
  %253 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %249, i64 %252
  %254 = bitcast %"class.v8::internal::Statement"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %249, i64 %248
  %257 = bitcast %"class.v8::internal::Statement"** %256 to i64*
  store i64 %255, i64* %257, align 8
  %258 = add nsw i64 %238, -2
  %259 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %210, align 8
  %260 = shl i64 %248, 32
  %261 = add i64 %260, -8589934592
  %262 = ashr exact i64 %261, 32
  %263 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %259, i64 %262
  %264 = bitcast %"class.v8::internal::Statement"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %259, i64 %258
  %267 = bitcast %"class.v8::internal::Statement"** %266 to i64*
  store i64 %265, i64* %267, align 8
  %268 = add nsw i64 %238, -3
  %269 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %210, align 8
  %270 = shl i64 %258, 32
  %271 = add i64 %270, -8589934592
  %272 = ashr exact i64 %271, 32
  %273 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %269, i64 %272
  %274 = bitcast %"class.v8::internal::Statement"** %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %269, i64 %268
  %277 = bitcast %"class.v8::internal::Statement"** %276 to i64*
  store i64 %275, i64* %277, align 8
  %278 = add nsw i64 %238, -4
  %279 = icmp sgt i64 %278, 0
  %280 = trunc i64 %268 to i32
  br i1 %279, label %237, label %281

281:                                              ; preds = %233, %237, %199
  %282 = bitcast %"class.v8::internal::ZoneList.42"* %135 to i64**
  %283 = load i64*, i64** %282, align 8
  store i64 %148, i64* %283, align 8
  %284 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %8, align 8
  %285 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %284, i64 0, i32 1
  %286 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %287 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %286, i64 0, i32 2
  %288 = load i64, i64* %287, align 8
  %289 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %286, i64 0, i32 3
  %290 = load i64, i64* %289, align 8
  %291 = sub i64 %290, %288
  %292 = icmp ult i64 %291, 16
  br i1 %292, label %293, label %295, !prof !2

293:                                              ; preds = %281
  %294 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %286, i64 16) #6
  br label %297

295:                                              ; preds = %281
  %296 = add i64 %288, 16
  store i64 %296, i64* %287, align 8
  br label %297

297:                                              ; preds = %293, %295
  %298 = phi i64 [ %294, %293 ], [ %288, %295 ]
  %299 = inttoptr i64 %298 to %"class.v8::internal::ExpressionStatement"*
  %300 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %299, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %300, align 4
  %301 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %299, i64 0, i32 0, i32 0, i32 1
  store i32 9, i32* %301, align 4
  %302 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %299, i64 0, i32 1
  %303 = bitcast %"class.v8::internal::Expression"** %302 to i64*
  store i64 %132, i64* %303, align 8
  %304 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %154, align 8
  %305 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %284, i64 0, i32 1, i32 2
  %306 = load i32, i32* %305, align 4
  %307 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %284, i64 0, i32 1, i32 1
  %308 = load i32, i32* %307, align 8
  %309 = icmp slt i32 %306, %308
  br i1 %309, label %310, label %317

310:                                              ; preds = %297
  %311 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %285, i64 0, i32 0
  %312 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %311, align 8
  %313 = add nsw i32 %306, 1
  store i32 %313, i32* %305, align 4
  %314 = sext i32 %306 to i64
  %315 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %312, i64 %314
  %316 = bitcast %"class.v8::internal::Statement"** %315 to i64*
  store i64 %298, i64* %316, align 8
  br label %527

317:                                              ; preds = %297
  %318 = shl nsw i32 %308, 1
  %319 = or i32 %318, 1
  %320 = sext i32 %319 to i64
  %321 = shl nsw i64 %320, 3
  %322 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %304, i64 0, i32 2
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %304, i64 0, i32 3
  %325 = load i64, i64* %324, align 8
  %326 = sub i64 %325, %323
  %327 = icmp ugt i64 %321, %326
  br i1 %327, label %328, label %330, !prof !2

328:                                              ; preds = %317
  %329 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %304, i64 %321) #6
  br label %332

330:                                              ; preds = %317
  %331 = add i64 %323, %321
  store i64 %331, i64* %322, align 8
  br label %332

332:                                              ; preds = %330, %328
  %333 = phi i64 [ %329, %328 ], [ %323, %330 ]
  %334 = inttoptr i64 %333 to %"class.v8::internal::Statement"**
  %335 = load i32, i32* %305, align 4
  %336 = icmp sgt i32 %335, 0
  br i1 %336, label %337, label %349

337:                                              ; preds = %332
  %338 = inttoptr i64 %333 to i8*
  %339 = bitcast %"class.v8::internal::ZoneList.42"* %285 to i8**
  %340 = load i8*, i8** %339, align 8
  %341 = sext i32 %335 to i64
  %342 = shl nsw i64 %341, 3
  switch i64 %342, label %348 [
    i64 16, label %347
    i64 8, label %343
  ]

343:                                              ; preds = %337
  %344 = bitcast i8* %340 to i64*
  %345 = inttoptr i64 %333 to i64*
  %346 = load i64, i64* %344, align 1
  store i64 %346, i64* %345, align 1
  br label %349

347:                                              ; preds = %337
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %338, i8* align 1 %340, i64 16, i1 false) #6
  br label %349

348:                                              ; preds = %337
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %338, i8* align 1 %340, i64 %342, i1 false) #6
  br label %349

349:                                              ; preds = %348, %347, %343, %332
  %350 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %285, i64 0, i32 0
  store %"class.v8::internal::Statement"** %334, %"class.v8::internal::Statement"*** %350, align 8
  store i32 %319, i32* %307, align 8
  %351 = load i32, i32* %305, align 4
  %352 = add nsw i32 %351, 1
  store i32 %352, i32* %305, align 4
  %353 = sext i32 %351 to i64
  %354 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %334, i64 %353
  %355 = bitcast %"class.v8::internal::Statement"** %354 to i64*
  store i64 %298, i64* %355, align 8
  br label %527

356:                                              ; preds = %35
  %357 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 4, i32 0
  %358 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %357, align 8
  %359 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %358, i64 0, i32 2
  %360 = load i64, i64* %359, align 8
  %361 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %358, i64 0, i32 3
  %362 = load i64, i64* %361, align 8
  %363 = sub i64 %362, %360
  %364 = icmp ult i64 %363, 16
  br i1 %364, label %365, label %367, !prof !2

365:                                              ; preds = %356
  %366 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %358, i64 16) #6
  br label %369

367:                                              ; preds = %356
  %368 = add i64 %360, 16
  store i64 %368, i64* %359, align 8
  br label %369

369:                                              ; preds = %365, %367
  %370 = phi i64 [ %366, %365 ], [ %360, %367 ]
  %371 = inttoptr i64 %370 to %"class.v8::internal::Literal"*
  %372 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %371, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %372, align 4
  %373 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %371, i64 0, i32 0, i32 0, i32 1
  store i32 681, i32* %373, align 4
  %374 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %371, i64 0, i32 0
  %375 = tail call %"class.v8::internal::Expression"* @_ZN2v88internal9Processor9SetResultEPNS0_10ExpressionE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Expression"* %374)
  %376 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %8, align 8
  %377 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %376, i64 0, i32 1
  %378 = ptrtoint %"class.v8::internal::Expression"* %375 to i64
  %379 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %357, align 8
  %380 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %379, i64 0, i32 2
  %381 = load i64, i64* %380, align 8
  %382 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %379, i64 0, i32 3
  %383 = load i64, i64* %382, align 8
  %384 = sub i64 %383, %381
  %385 = icmp ult i64 %384, 16
  br i1 %385, label %386, label %388, !prof !2

386:                                              ; preds = %369
  %387 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %379, i64 16) #6
  br label %390

388:                                              ; preds = %369
  %389 = add i64 %381, 16
  store i64 %389, i64* %380, align 8
  br label %390

390:                                              ; preds = %386, %388
  %391 = phi i64 [ %387, %386 ], [ %381, %388 ]
  %392 = inttoptr i64 %391 to %"class.v8::internal::ExpressionStatement"*
  %393 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %392, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %393, align 4
  %394 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %392, i64 0, i32 0, i32 0, i32 1
  store i32 9, i32* %394, align 4
  %395 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %392, i64 0, i32 1
  %396 = bitcast %"class.v8::internal::Expression"** %395 to i64*
  store i64 %378, i64* %396, align 8
  %397 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 2
  %398 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %397, align 8
  %399 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %376, i64 0, i32 1, i32 2
  %400 = load i32, i32* %399, align 4
  %401 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %376, i64 0, i32 1, i32 1
  %402 = load i32, i32* %401, align 8
  %403 = icmp slt i32 %400, %402
  br i1 %403, label %404, label %407

404:                                              ; preds = %390
  %405 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %377, i64 0, i32 0
  %406 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %405, align 8
  br label %442

407:                                              ; preds = %390
  %408 = shl nsw i32 %402, 1
  %409 = or i32 %408, 1
  %410 = sext i32 %409 to i64
  %411 = shl nsw i64 %410, 3
  %412 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %398, i64 0, i32 2
  %413 = load i64, i64* %412, align 8
  %414 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %398, i64 0, i32 3
  %415 = load i64, i64* %414, align 8
  %416 = sub i64 %415, %413
  %417 = icmp ugt i64 %411, %416
  br i1 %417, label %418, label %420, !prof !2

418:                                              ; preds = %407
  %419 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %398, i64 %411) #6
  br label %422

420:                                              ; preds = %407
  %421 = add i64 %413, %411
  store i64 %421, i64* %412, align 8
  br label %422

422:                                              ; preds = %420, %418
  %423 = phi i64 [ %419, %418 ], [ %413, %420 ]
  %424 = inttoptr i64 %423 to %"class.v8::internal::Statement"**
  %425 = load i32, i32* %399, align 4
  %426 = icmp sgt i32 %425, 0
  br i1 %426, label %427, label %439

427:                                              ; preds = %422
  %428 = inttoptr i64 %423 to i8*
  %429 = bitcast %"class.v8::internal::ZoneList.42"* %377 to i8**
  %430 = load i8*, i8** %429, align 8
  %431 = sext i32 %425 to i64
  %432 = shl nsw i64 %431, 3
  switch i64 %432, label %438 [
    i64 16, label %437
    i64 8, label %433
  ]

433:                                              ; preds = %427
  %434 = bitcast i8* %430 to i64*
  %435 = inttoptr i64 %423 to i64*
  %436 = load i64, i64* %434, align 1
  store i64 %436, i64* %435, align 1
  br label %439

437:                                              ; preds = %427
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %428, i8* align 1 %430, i64 16, i1 false) #6
  br label %439

438:                                              ; preds = %427
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %428, i8* align 1 %430, i64 %432, i1 false) #6
  br label %439

439:                                              ; preds = %438, %437, %433, %422
  %440 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %377, i64 0, i32 0
  store %"class.v8::internal::Statement"** %424, %"class.v8::internal::Statement"*** %440, align 8
  store i32 %409, i32* %401, align 8
  %441 = load i32, i32* %399, align 4
  br label %442

442:                                              ; preds = %404, %439
  %443 = phi i32 [ %400, %404 ], [ %441, %439 ]
  %444 = phi %"class.v8::internal::Statement"** [ %406, %404 ], [ %424, %439 ]
  %445 = add nsw i32 %443, 1
  store i32 %445, i32* %399, align 4
  %446 = sext i32 %443 to i64
  %447 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %444, i64 %446
  %448 = bitcast %"class.v8::internal::Statement"** %447 to i64*
  store i64 %391, i64* %448, align 8
  %449 = load i32, i32* %399, align 4
  %450 = add i32 %449, -1
  %451 = icmp sgt i32 %450, 0
  br i1 %451, label %452, label %524

452:                                              ; preds = %442
  %453 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %377, i64 0, i32 0
  %454 = sext i32 %450 to i64
  %455 = add nsw i64 %454, -1
  %456 = and i64 %454, 3
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %476, label %458

458:                                              ; preds = %452, %458
  %459 = phi i64 [ %470, %458 ], [ %454, %452 ]
  %460 = phi i32 [ %471, %458 ], [ %449, %452 ]
  %461 = phi i64 [ %472, %458 ], [ %456, %452 ]
  %462 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %453, align 8
  %463 = add nsw i32 %460, -2
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %462, i64 %464
  %466 = bitcast %"class.v8::internal::Statement"** %465 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %462, i64 %459
  %469 = bitcast %"class.v8::internal::Statement"** %468 to i64*
  store i64 %467, i64* %469, align 8
  %470 = add nsw i64 %459, -1
  %471 = trunc i64 %459 to i32
  %472 = add i64 %461, -1
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %458, !llvm.loop !6

474:                                              ; preds = %458
  %475 = trunc i64 %459 to i32
  br label %476

476:                                              ; preds = %452, %474
  %477 = phi i64 [ %454, %452 ], [ %470, %474 ]
  %478 = phi i32 [ %449, %452 ], [ %475, %474 ]
  %479 = icmp ult i64 %455, 3
  br i1 %479, label %524, label %480

480:                                              ; preds = %476, %480
  %481 = phi i64 [ %521, %480 ], [ %477, %476 ]
  %482 = phi i32 [ %523, %480 ], [ %478, %476 ]
  %483 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %453, align 8
  %484 = add nsw i32 %482, -2
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %483, i64 %485
  %487 = bitcast %"class.v8::internal::Statement"** %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %483, i64 %481
  %490 = bitcast %"class.v8::internal::Statement"** %489 to i64*
  store i64 %488, i64* %490, align 8
  %491 = add nsw i64 %481, -1
  %492 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %453, align 8
  %493 = shl i64 %481, 32
  %494 = add i64 %493, -8589934592
  %495 = ashr exact i64 %494, 32
  %496 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %492, i64 %495
  %497 = bitcast %"class.v8::internal::Statement"** %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %492, i64 %491
  %500 = bitcast %"class.v8::internal::Statement"** %499 to i64*
  store i64 %498, i64* %500, align 8
  %501 = add nsw i64 %481, -2
  %502 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %453, align 8
  %503 = shl i64 %491, 32
  %504 = add i64 %503, -8589934592
  %505 = ashr exact i64 %504, 32
  %506 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %502, i64 %505
  %507 = bitcast %"class.v8::internal::Statement"** %506 to i64*
  %508 = load i64, i64* %507, align 8
  %509 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %502, i64 %501
  %510 = bitcast %"class.v8::internal::Statement"** %509 to i64*
  store i64 %508, i64* %510, align 8
  %511 = add nsw i64 %481, -3
  %512 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %453, align 8
  %513 = shl i64 %501, 32
  %514 = add i64 %513, -8589934592
  %515 = ashr exact i64 %514, 32
  %516 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %512, i64 %515
  %517 = bitcast %"class.v8::internal::Statement"** %516 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %512, i64 %511
  %520 = bitcast %"class.v8::internal::Statement"** %519 to i64*
  store i64 %518, i64* %520, align 8
  %521 = add nsw i64 %481, -4
  %522 = icmp sgt i64 %521, 0
  %523 = trunc i64 %511 to i32
  br i1 %522, label %480, label %524

524:                                              ; preds = %476, %480, %442
  %525 = bitcast %"class.v8::internal::ZoneList.42"* %377 to i64**
  %526 = load i64*, i64** %525, align 8
  store i64 %391, i64* %526, align 8
  br label %527

527:                                              ; preds = %349, %310, %524
  store i8 0, i8* %7, align 2
  br label %528

528:                                              ; preds = %2, %527
  %529 = getelementptr inbounds %"class.v8::internal::TryFinallyStatement", %"class.v8::internal::TryFinallyStatement"* %1, i64 0, i32 0, i32 1
  %530 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %529, align 8
  %531 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %530, i64 0, i32 0, i32 0, i32 0
  %532 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %533 = load i8, i8* %532, align 8, !range !3
  %534 = icmp eq i8 %533, 0
  br i1 %534, label %535, label %542

535:                                              ; preds = %528
  %536 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %537 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %538 = load i64, i64* %537, align 8
  %539 = icmp ult i64 %536, %538
  br i1 %539, label %540, label %541

540:                                              ; preds = %535
  store i8 1, i8* %532, align 8
  br label %542

541:                                              ; preds = %535
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %531) #6
  br label %542

542:                                              ; preds = %528, %540, %541
  %543 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %544 = bitcast %"class.v8::internal::Statement"** %543 to %"class.v8::internal::AstNode"**
  %545 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %544, align 8
  %546 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %545, i64 0, i32 1
  %547 = load i32, i32* %546, align 4
  %548 = and i32 %547, 63
  %549 = icmp eq i32 %548, 7
  %550 = bitcast %"class.v8::internal::AstNode"* %545 to %"class.v8::internal::Block"*
  %551 = select i1 %549, %"class.v8::internal::Block"* %550, %"class.v8::internal::Block"* null
  store %"class.v8::internal::Block"* %551, %"class.v8::internal::Block"** %529, align 8
  %552 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %553 = load i8, i8* %552, align 2, !range !3
  %554 = icmp eq i8 %553, 0
  %555 = getelementptr inbounds %"class.v8::internal::TryFinallyStatement", %"class.v8::internal::TryFinallyStatement"* %1, i64 0, i32 0, i32 0
  br i1 %554, label %556, label %558

556:                                              ; preds = %542
  %557 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %555)
  br label %558

558:                                              ; preds = %542, %556
  %559 = phi %"class.v8::internal::Statement"* [ %557, %556 ], [ %555, %542 ]
  store %"class.v8::internal::Statement"* %559, %"class.v8::internal::Statement"** %543, align 8
  store i8 1, i8* %552, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

declare %"class.v8::internal::Variable"* @_ZN2v88internal5Scope12NewTemporaryEPKNS0_12AstRawStringE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor20VisitSwitchStatementEPNS0_15SwitchStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::SwitchStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 2, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %14 = bitcast %"class.v8::internal::Statement"** %13 to i64*
  %15 = sext i32 %6 to i64
  br label %21

16:                                               ; preds = %60, %2
  %17 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 0, i32 0
  %18 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %17)
  %19 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %18, %"class.v8::internal::Statement"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %20, align 2
  store i8 %4, i8* %3, align 1
  ret void

21:                                               ; preds = %8, %60
  %22 = phi i64 [ %15, %8 ], [ %23, %60 ]
  %23 = add nsw i64 %22, -1
  %24 = load %"class.v8::internal::CaseClause"**, %"class.v8::internal::CaseClause"*** %9, align 8
  %25 = getelementptr inbounds %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %24, i64 %23
  %26 = load %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %26, i64 0, i32 1, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %60

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %26, i64 0, i32 1, i32 0
  %32 = sext i32 %28 to i64
  br label %33

33:                                               ; preds = %30, %54
  %34 = phi i64 [ %32, %30 ], [ %35, %54 ]
  %35 = add nsw i64 %34, -1
  %36 = load i8, i8* %3, align 1, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = load i8, i8* %10, align 2, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %60

41:                                               ; preds = %38, %33
  %42 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %31, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %42, i64 %35
  %44 = bitcast %"class.v8::internal::Statement"** %43 to %"class.v8::internal::AstNode"**
  %45 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %44, align 8
  %46 = load i8, i8* %11, align 8, !range !3
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %50 = load i64, i64* %12, align 8
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  store i8 1, i8* %11, align 8
  br label %54

53:                                               ; preds = %48
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %45) #6
  br label %54

54:                                               ; preds = %41, %52, %53
  %55 = load i64, i64* %14, align 8
  %56 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %31, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %56, i64 %35
  %58 = bitcast %"class.v8::internal::Statement"** %57 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp sgt i64 %35, 0
  br i1 %59, label %33, label %60

60:                                               ; preds = %38, %54, %21
  %61 = icmp sgt i64 %23, 0
  br i1 %61, label %21, label %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal9Processor22VisitContinueStatementEPNS0_17ContinueStatementE(%"class.v8::internal::Processor"* nocapture, %"class.v8::internal::ContinueStatement"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 0, i8* %3, align 2
  %4 = getelementptr inbounds %"class.v8::internal::ContinueStatement", %"class.v8::internal::ContinueStatement"* %1, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %4, %"class.v8::internal::Statement"** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal9Processor19VisitBreakStatementEPNS0_14BreakStatementE(%"class.v8::internal::Processor"* nocapture, %"class.v8::internal::BreakStatement"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 0, i8* %3, align 2
  %4 = getelementptr inbounds %"class.v8::internal::BreakStatement", %"class.v8::internal::BreakStatement"* %1, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %4, %"class.v8::internal::Statement"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor18VisitWithStatementEPNS0_13WithStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::WithStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::WithStatement", %"class.v8::internal::WithStatement"* %1, i64 0, i32 3
  %4 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %11 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i8 1, i8* %6, align 8
  br label %16

15:                                               ; preds = %9
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %5) #6
  br label %16

16:                                               ; preds = %2, %14, %15
  %17 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %18 = bitcast %"class.v8::internal::Statement"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::Statement"** %3 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %22 = load i8, i8* %21, align 2, !range !3
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.v8::internal::WithStatement", %"class.v8::internal::WithStatement"* %1, i64 0, i32 0
  br i1 %23, label %25, label %27

25:                                               ; preds = %16
  %26 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %24)
  br label %27

27:                                               ; preds = %16, %25
  %28 = phi %"class.v8::internal::Statement"* [ %26, %25 ], [ %24, %16 ]
  store %"class.v8::internal::Statement"* %28, %"class.v8::internal::Statement"** %17, align 8
  store i8 1, i8* %21, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor33VisitSloppyBlockFunctionStatementEPNS0_28SloppyBlockFunctionStatementE(%"class.v8::internal::Processor"*, %"class.v8::internal::SloppyBlockFunctionStatement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %1, i64 0, i32 2
  %4 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %11 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i8 1, i8* %6, align 8
  br label %16

15:                                               ; preds = %9
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %5) #6
  br label %16

16:                                               ; preds = %2, %14, %15
  %17 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %18 = bitcast %"class.v8::internal::Statement"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::Statement"** %3 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %1, i64 0, i32 0
  store %"class.v8::internal::Statement"* %21, %"class.v8::internal::Statement"** %17, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal9Processor19VisitEmptyStatementEPNS0_14EmptyStatementE(%"class.v8::internal::Processor"* nocapture, %"class.v8::internal::EmptyStatement"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %3, %"class.v8::internal::Statement"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal9Processor20VisitReturnStatementEPNS0_15ReturnStatementE(%"class.v8::internal::Processor"* nocapture, %"class.v8::internal::ReturnStatement"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %3, align 2
  %4 = getelementptr inbounds %"class.v8::internal::ReturnStatement", %"class.v8::internal::ReturnStatement"* %1, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %4, %"class.v8::internal::Statement"** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal9Processor22VisitDebuggerStatementEPNS0_17DebuggerStatementE(%"class.v8::internal::Processor"* nocapture, %"class.v8::internal::DebuggerStatement"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DebuggerStatement", %"class.v8::internal::DebuggerStatement"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %3, %"class.v8::internal::Statement"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal9Processor36VisitInitializeClassMembersStatementEPNS0_31InitializeClassMembersStatementE(%"class.v8::internal::Processor"* nocapture, %"class.v8::internal::InitializeClassMembersStatement"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::InitializeClassMembersStatement", %"class.v8::internal::InitializeClassMembersStatement"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %3, %"class.v8::internal::Statement"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal9Processor43VisitInitializeClassStaticElementsStatementEPNS0_38InitializeClassStaticElementsStatementE(%"class.v8::internal::Processor"* nocapture, %"class.v8::internal::InitializeClassStaticElementsStatement"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::InitializeClassStaticElementsStatement", %"class.v8::internal::InitializeClassStaticElementsStatement"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %3, %"class.v8::internal::Statement"** %4, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor18VisitRegExpLiteralEPNS0_13RegExpLiteralE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::RegExpLiteral"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor18VisitObjectLiteralEPNS0_13ObjectLiteralE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::ObjectLiteral"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor17VisitArrayLiteralEPNS0_12ArrayLiteralE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::ArrayLiteral"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Assignment"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor10VisitAwaitEPNS0_5AwaitE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Await"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor20VisitBinaryOperationEPNS0_15BinaryOperationE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::BinaryOperation"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor18VisitNaryOperationEPNS0_13NaryOperationE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::NaryOperation"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor9VisitCallEPNS0_4CallE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Call"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor12VisitCallNewEPNS0_7CallNewE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::CallNew"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor16VisitCallRuntimeEPNS0_11CallRuntimeE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::CallRuntime"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor17VisitClassLiteralEPNS0_12ClassLiteralE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::ClassLiteral"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor21VisitCompareOperationEPNS0_16CompareOperationE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::CompareOperation"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor23VisitCompoundAssignmentEPNS0_18CompoundAssignmentE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::CompoundAssignment"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor16VisitConditionalEPNS0_11ConditionalE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Conditional"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor19VisitCountOperationEPNS0_14CountOperationE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::CountOperation"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor21VisitEmptyParenthesesEPNS0_16EmptyParenthesesE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::EmptyParentheses"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor20VisitFunctionLiteralEPNS0_15FunctionLiteralE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::FunctionLiteral"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor22VisitGetTemplateObjectEPNS0_17GetTemplateObjectE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::GetTemplateObject"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor25VisitImportCallExpressionEPNS0_20ImportCallExpressionE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::ImportCallExpression"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor12VisitLiteralEPNS0_7LiteralE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Literal"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor26VisitNativeFunctionLiteralEPNS0_21NativeFunctionLiteralE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::NativeFunctionLiteral"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor18VisitOptionalChainEPNS0_13OptionalChainE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::OptionalChain"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor13VisitPropertyEPNS0_8PropertyE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Property"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor11VisitSpreadEPNS0_6SpreadE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Spread"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor23VisitSuperCallReferenceEPNS0_18SuperCallReferenceE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::SuperCallReference"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor27VisitSuperPropertyReferenceEPNS0_22SuperPropertyReferenceE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::SuperPropertyReference"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor20VisitTemplateLiteralEPNS0_15TemplateLiteralE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::TemplateLiteral"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor19VisitThisExpressionEPNS0_14ThisExpressionE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::ThisExpression"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor10VisitThrowEPNS0_5ThrowE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Throw"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor19VisitUnaryOperationEPNS0_14UnaryOperationE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::UnaryOperation"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor18VisitVariableProxyEPNS0_13VariableProxyE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::VariableProxy"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor10VisitYieldEPNS0_5YieldE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::Yield"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor14VisitYieldStarEPNS0_9YieldStarE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::YieldStar"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor24VisitVariableDeclarationEPNS0_19VariableDeclarationE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::VariableDeclaration"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal9Processor24VisitFunctionDeclarationEPNS0_19FunctionDeclarationE(%"class.v8::internal::Processor"* nocapture readnone, %"class.v8::internal::FunctionDeclaration"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8Rewriter7RewriteEPNS0_9ParseInfoE(%"class.v8::internal::ParseInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %3 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #6
  %4 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 13
  %5 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 40, i1 false) #6
  %7 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1247", %"struct.std::__1::atomic.1247"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  %9 = icmp eq %"class.v8::internal::RuntimeCallStats"* %5, null
  %10 = or i1 %9, %8
  br i1 %10, label %17, label %11, !prof !7

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  store %"class.v8::internal::RuntimeCallStats"* %5, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::RuntimeCallStats"* %5, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  %16 = select i1 %15, i32 1243, i32 1242
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* nonnull %5, %"class.v8::internal::RuntimeCallTimer"* %6, i32 %16) #6
  br label %17

17:                                               ; preds = %1, %11
  %18 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 15
  %19 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %19, i64 0, i32 8
  %21 = bitcast %"class.v8::internal::DeclarationScope"** %20 to %"class.v8::internal::Scope"**
  %22 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %22, i64 0, i32 13
  %24 = load i16, i16* %23, align 1
  %25 = and i16 %24, 2048
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %22, i64 0, i32 12
  %29 = load i8, i8* %28, align 8
  switch i8 %29, label %35 [
    i8 4, label %30
    i8 1, label %30
    i8 3, label %30
  ]

30:                                               ; preds = %27, %27, %27
  %31 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %19, i64 0, i32 9
  %32 = call { i8, %"class.v8::internal::VariableProxy"* } @_ZN2v88internal8Rewriter11RewriteBodyEPNS0_9ParseInfoEPNS0_5ScopeEPNS0_8ZoneListIPNS0_9StatementEEE(%"class.v8::internal::ParseInfo"* %0, %"class.v8::internal::Scope"* %22, %"class.v8::internal::ZoneList.42"* %31)
  %33 = extractvalue { i8, %"class.v8::internal::VariableProxy"* } %32, 0
  %34 = icmp ne i8 %33, 0
  br label %35

35:                                               ; preds = %17, %27, %30
  %36 = phi i1 [ %34, %30 ], [ true, %17 ], [ true, %27 ]
  %37 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  %38 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %37, align 8
  %39 = icmp eq %"class.v8::internal::RuntimeCallStats"* %38, null
  br i1 %39, label %41, label %40, !prof !7

40:                                               ; preds = %35
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %38, %"class.v8::internal::RuntimeCallTimer"* %6) #6
  br label %41

41:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #6
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %"class.v8::internal::VariableProxy"* } @_ZN2v88internal8Rewriter11RewriteBodyEPNS0_9ParseInfoEPNS0_5ScopeEPNS0_8ZoneListIPNS0_9StatementEEE(%"class.v8::internal::ParseInfo"* nocapture readonly, %"class.v8::internal::Scope"*, %"class.v8::internal::ZoneList.42"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Processor", align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %2, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %218, label %8

8:                                                ; preds = %3
  %9 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #6
  %10 = bitcast %"class.v8::internal::DeclarationScope"* %9 to %"class.v8::internal::Scope"*
  %11 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %12, i64 0, i32 3
  %14 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %14, i64 0, i32 22
  %16 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %15, align 8
  %17 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope12NewTemporaryEPKNS0_12AstRawStringE(%"class.v8::internal::Scope"* %10, %"class.v8::internal::AstRawString"* %16) #6
  %18 = bitcast %"class.v8::internal::Processor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 6
  %20 = load i64, i64* %19, align 8
  %21 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #6
  %22 = bitcast %"class.v8::internal::AstValueFactory"** %11 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 0
  store %"class.v8::internal::Variable"* %17, %"class.v8::internal::Variable"** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 1
  store %"class.v8::internal::Statement"* null, %"class.v8::internal::Statement"** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 2
  store %"class.v8::internal::Zone"* %25, %"class.v8::internal::Zone"** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 3
  store %"class.v8::internal::DeclarationScope"* %21, %"class.v8::internal::DeclarationScope"** %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 4, i32 0
  store %"class.v8::internal::Zone"* %25, %"class.v8::internal::Zone"** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 4, i32 1
  %32 = bitcast %"class.v8::internal::AstValueFactory"** %31 to i64*
  store i64 %23, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 4, i32 2
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %35
  %39 = icmp ult i64 %38, 8
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %8
  %41 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %25, i64 8) #6
  br label %44

42:                                               ; preds = %8
  %43 = add i64 %35, 8
  store i64 %43, i64* %34, align 8
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %41, %40 ], [ %35, %42 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::EmptyStatement"*
  %47 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %46, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %46, i64 0, i32 0, i32 0, i32 1
  store i32 10, i32* %48, align 4
  store %"class.v8::internal::EmptyStatement"* %46, %"class.v8::internal::EmptyStatement"** %33, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 4, i32 3
  %50 = load i64, i64* %34, align 8
  %51 = load i64, i64* %36, align 8
  %52 = sub i64 %51, %50
  %53 = icmp ult i64 %52, 8
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %44
  %55 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %25, i64 8) #6
  br label %58

56:                                               ; preds = %44
  %57 = add i64 %50, 8
  store i64 %57, i64* %34, align 8
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i64 [ %55, %54 ], [ %50, %56 ]
  %60 = inttoptr i64 %59 to %"class.v8::internal::ThisExpression"*
  %61 = getelementptr inbounds %"class.v8::internal::ThisExpression", %"class.v8::internal::ThisExpression"* %60, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %61, align 4
  %62 = getelementptr inbounds %"class.v8::internal::ThisExpression", %"class.v8::internal::ThisExpression"* %60, i64 0, i32 0, i32 0, i32 1
  store i32 49, i32* %62, align 4
  store %"class.v8::internal::ThisExpression"* %60, %"class.v8::internal::ThisExpression"** %49, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 4, i32 4
  %64 = load i64, i64* %34, align 8
  %65 = load i64, i64* %36, align 8
  %66 = sub i64 %65, %64
  %67 = icmp ult i64 %66, 8
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %25, i64 8) #6
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %64, 8
  store i64 %71, i64* %34, align 8
  br label %72

72:                                               ; preds = %68, %70
  %73 = phi i64 [ %69, %68 ], [ %64, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::FailureExpression"*
  %75 = getelementptr inbounds %"class.v8::internal::FailureExpression", %"class.v8::internal::FailureExpression"* %74, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %75, align 4
  %76 = getelementptr inbounds %"class.v8::internal::FailureExpression", %"class.v8::internal::FailureExpression"* %74, i64 0, i32 0, i32 0, i32 1
  store i32 55, i32* %76, align 4
  store %"class.v8::internal::FailureExpression"* %74, %"class.v8::internal::FailureExpression"** %63, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 7
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 8
  store i8 0, i8* %78, align 2
  %79 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 9
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 5
  store i64 %20, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %4, i64 0, i32 6
  store i8 0, i8* %81, align 8
  %82 = load i32, i32* %5, align 4
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %215

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %2, i64 0, i32 0
  %86 = bitcast %"class.v8::internal::Statement"** %27 to i64*
  %87 = sext i32 %82 to i64
  br label %88

88:                                               ; preds = %84, %109
  %89 = phi i64 [ %87, %84 ], [ %90, %109 ]
  %90 = add nsw i64 %89, -1
  %91 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %85, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %91, i64 %90
  %93 = bitcast %"class.v8::internal::Statement"** %92 to %"class.v8::internal::AstNode"**
  %94 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %93, align 8
  %95 = load i8, i8* %81, align 8, !range !3
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %103

97:                                               ; preds = %88
  %98 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %99 = load i64, i64* %80, align 8
  %100 = icmp ult i64 %98, %99
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  store i8 1, i8* %81, align 8
  br label %103

102:                                              ; preds = %97
  call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* nonnull %4, %"class.v8::internal::AstNode"* %94) #6
  br label %103

103:                                              ; preds = %102, %101, %88
  %104 = load i64, i64* %86, align 8
  %105 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %85, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %105, i64 %90
  %107 = bitcast %"class.v8::internal::Statement"** %106 to i64*
  store i64 %104, i64* %107, align 8
  %108 = icmp sgt i64 %90, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %103
  %110 = load i8, i8* %79, align 1, !range !3
  %111 = load i8, i8* %78, align 2
  %112 = icmp ne i8 %110, 0
  %113 = icmp eq i8 %111, 0
  %114 = or i1 %112, %113
  br i1 %114, label %88, label %115

115:                                              ; preds = %109, %103
  %116 = load i8, i8* %77, align 1, !range !3
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %207, label %118

118:                                              ; preds = %115
  %119 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %30, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %119, i64 0, i32 2
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %119, i64 0, i32 3
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %123, %121
  %125 = icmp ult i64 %124, 24
  br i1 %125, label %126, label %128, !prof !2

126:                                              ; preds = %118
  %127 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %119, i64 24) #6
  br label %130

128:                                              ; preds = %118
  %129 = add i64 %121, 24
  store i64 %129, i64* %120, align 8
  br label %130

130:                                              ; preds = %126, %128
  %131 = phi i64 [ %127, %126 ], [ %121, %128 ]
  %132 = inttoptr i64 %131 to %"class.v8::internal::VariableProxy"*
  call void @_ZN2v88internal13VariableProxyC1EPNS0_8VariableEi(%"class.v8::internal::VariableProxy"* %132, %"class.v8::internal::Variable"* %17, i32 -1) #6
  %133 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = and i32 %134, 1048576
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %215

137:                                              ; preds = %130
  %138 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %30, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %138, i64 0, i32 2
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %138, i64 0, i32 3
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %142, %140
  %144 = icmp ult i64 %143, 24
  br i1 %144, label %145, label %147, !prof !2

145:                                              ; preds = %137
  %146 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %138, i64 24) #6
  br label %149

147:                                              ; preds = %137
  %148 = add i64 %140, 24
  store i64 %148, i64* %139, align 8
  br label %149

149:                                              ; preds = %145, %147
  %150 = phi i64 [ %146, %145 ], [ %140, %147 ]
  %151 = inttoptr i64 %150 to %"class.v8::internal::ReturnStatement"*
  %152 = getelementptr inbounds %"class.v8::internal::ReturnStatement", %"class.v8::internal::ReturnStatement"* %151, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::ReturnStatement", %"class.v8::internal::ReturnStatement"* %151, i64 0, i32 0, i32 0, i32 0, i32 1
  %154 = getelementptr inbounds %"class.v8::internal::ReturnStatement", %"class.v8::internal::ReturnStatement"* %151, i64 0, i32 1
  %155 = bitcast %"class.v8::internal::Expression"** %154 to i64*
  store i64 %131, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::ReturnStatement", %"class.v8::internal::ReturnStatement"* %151, i64 0, i32 2
  store i32 -2, i32* %156, align 8
  store i32 15, i32* %153, align 4
  %157 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, align 8
  %158 = load i32, i32* %5, align 4
  %159 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %2, i64 0, i32 1
  %160 = load i32, i32* %159, align 8
  %161 = icmp slt i32 %158, %160
  br i1 %161, label %162, label %165

162:                                              ; preds = %149
  %163 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %2, i64 0, i32 0
  %164 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %163, align 8
  br label %200

165:                                              ; preds = %149
  %166 = shl nsw i32 %160, 1
  %167 = or i32 %166, 1
  %168 = sext i32 %167 to i64
  %169 = shl nsw i64 %168, 3
  %170 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %157, i64 0, i32 2
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %157, i64 0, i32 3
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %171
  %175 = icmp ugt i64 %169, %174
  br i1 %175, label %176, label %178, !prof !2

176:                                              ; preds = %165
  %177 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %157, i64 %169) #6
  br label %180

178:                                              ; preds = %165
  %179 = add i64 %171, %169
  store i64 %179, i64* %170, align 8
  br label %180

180:                                              ; preds = %178, %176
  %181 = phi i64 [ %177, %176 ], [ %171, %178 ]
  %182 = inttoptr i64 %181 to %"class.v8::internal::Statement"**
  %183 = load i32, i32* %5, align 4
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %197

185:                                              ; preds = %180
  %186 = inttoptr i64 %181 to i8*
  %187 = bitcast %"class.v8::internal::ZoneList.42"* %2 to i8**
  %188 = load i8*, i8** %187, align 8
  %189 = sext i32 %183 to i64
  %190 = shl nsw i64 %189, 3
  switch i64 %190, label %196 [
    i64 16, label %195
    i64 8, label %191
  ]

191:                                              ; preds = %185
  %192 = bitcast i8* %188 to i64*
  %193 = inttoptr i64 %181 to i64*
  %194 = load i64, i64* %192, align 1
  store i64 %194, i64* %193, align 1
  br label %197

195:                                              ; preds = %185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %186, i8* align 1 %188, i64 16, i1 false) #6
  br label %197

196:                                              ; preds = %185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %186, i8* align 1 %188, i64 %190, i1 false) #6
  br label %197

197:                                              ; preds = %196, %195, %191, %180
  %198 = getelementptr inbounds %"class.v8::internal::ZoneList.42", %"class.v8::internal::ZoneList.42"* %2, i64 0, i32 0
  store %"class.v8::internal::Statement"** %182, %"class.v8::internal::Statement"*** %198, align 8
  store i32 %167, i32* %159, align 8
  %199 = load i32, i32* %5, align 4
  br label %200

200:                                              ; preds = %162, %197
  %201 = phi i32 [ %199, %197 ], [ %158, %162 ]
  %202 = phi %"class.v8::internal::Statement"** [ %182, %197 ], [ %164, %162 ]
  %203 = add nsw i32 %201, 1
  store i32 %203, i32* %5, align 4
  %204 = sext i32 %201 to i64
  %205 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %202, i64 %204
  %206 = bitcast %"class.v8::internal::Statement"** %205 to i64*
  store i64 %150, i64* %206, align 8
  br label %215

207:                                              ; preds = %115
  %208 = load i8, i8* %81, align 8
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %215, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 2
  %212 = load %"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::UnoptimizedCompileState"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %212, i64 0, i32 3, i32 0
  store i8 1, i8* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %212, i64 0, i32 3, i32 1
  store i8 1, i8* %214, align 1
  br label %215

215:                                              ; preds = %207, %72, %130, %200, %210
  %216 = phi i8 [ 0, %210 ], [ 1, %200 ], [ 1, %130 ], [ 1, %72 ], [ 1, %207 ]
  %217 = phi i64 [ 0, %210 ], [ %131, %200 ], [ %131, %130 ], [ 0, %72 ], [ 0, %207 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %18) #6
  br label %218

218:                                              ; preds = %215, %3
  %219 = phi i8 [ 1, %3 ], [ %216, %215 ]
  %220 = phi i64 [ 0, %3 ], [ %217, %215 ]
  %221 = insertvalue { i8, %"class.v8::internal::VariableProxy"* } undef, i8 %219, 0
  %222 = inttoptr i64 %220 to %"class.v8::internal::VariableProxy"*
  %223 = insertvalue { i8, %"class.v8::internal::VariableProxy"* } %221, %"class.v8::internal::VariableProxy"* %222, 1
  ret { i8, %"class.v8::internal::VariableProxy"* } %223
}

declare %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"*, %"class.v8::internal::AstNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i8
  %6 = and i8 %5, 63
  switch i8 %6, label %467 [
    i8 0, label %7
    i8 1, label %8
    i8 2, label %9
    i8 3, label %34
    i8 4, label %59
    i8 5, label %84
    i8 6, label %109
    i8 7, label %134
    i8 8, label %187
    i8 9, label %248
    i8 10, label %260
    i8 11, label %263
    i8 12, label %284
    i8 13, label %334
    i8 14, label %338
    i8 15, label %342
    i8 16, label %346
    i8 17, label %374
    i8 18, label %422
    i8 19, label %424
    i8 20, label %427
    i8 21, label %430
    i8 22, label %433
    i8 23, label %434
    i8 24, label %435
    i8 25, label %436
    i8 26, label %437
    i8 27, label %438
    i8 28, label %439
    i8 29, label %440
    i8 30, label %441
    i8 31, label %442
    i8 32, label %443
    i8 33, label %444
    i8 34, label %445
    i8 35, label %446
    i8 36, label %447
    i8 37, label %448
    i8 38, label %449
    i8 39, label %450
    i8 40, label %451
    i8 41, label %452
    i8 42, label %453
    i8 43, label %454
    i8 44, label %455
    i8 45, label %456
    i8 46, label %457
    i8 47, label %458
    i8 48, label %459
    i8 49, label %460
    i8 50, label %461
    i8 51, label %462
    i8 52, label %463
    i8 53, label %464
    i8 54, label %465
    i8 55, label %466
  ]

7:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 1, !range !3
  store i8 1, i8* %10, align 1
  %12 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %13 = bitcast %"class.v8::internal::AstNode"* %12 to %"class.v8::internal::Statement"**
  %14 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %9
  %20 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %21 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  store i8 1, i8* %16, align 8
  br label %26

25:                                               ; preds = %19
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %15) #6
  br label %26

26:                                               ; preds = %9, %24, %25
  %27 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %28 = bitcast %"class.v8::internal::Statement"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.v8::internal::AstNode"* %12 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  %32 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %31) #6
  store %"class.v8::internal::Statement"* %32, %"class.v8::internal::Statement"** %27, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %33, align 2
  store i8 %11, i8* %10, align 1
  br label %467

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %36 = load i8, i8* %35, align 1, !range !3
  store i8 1, i8* %35, align 1
  %37 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %38 = bitcast %"class.v8::internal::AstNode"* %37 to %"class.v8::internal::Statement"**
  %39 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %39, i64 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %42 = load i8, i8* %41, align 8, !range !3
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %46 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %47 = load i64, i64* %46, align 8
  %48 = icmp ult i64 %45, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  store i8 1, i8* %41, align 8
  br label %51

50:                                               ; preds = %44
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %40) #6
  br label %51

51:                                               ; preds = %34, %49, %50
  %52 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %53 = bitcast %"class.v8::internal::Statement"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.v8::internal::AstNode"* %37 to i64*
  store i64 %54, i64* %55, align 8
  %56 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  %57 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %56) #6
  store %"class.v8::internal::Statement"* %57, %"class.v8::internal::Statement"** %52, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %58, align 2
  store i8 %36, i8* %35, align 1
  br label %467

59:                                               ; preds = %2
  %60 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %61 = load i8, i8* %60, align 1, !range !3
  store i8 1, i8* %60, align 1
  %62 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %63 = bitcast %"class.v8::internal::AstNode"* %62 to %"class.v8::internal::Statement"**
  %64 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %64, i64 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %67 = load i8, i8* %66, align 8, !range !3
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %71 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %72 = load i64, i64* %71, align 8
  %73 = icmp ult i64 %70, %72
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  store i8 1, i8* %66, align 8
  br label %76

75:                                               ; preds = %69
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %65) #6
  br label %76

76:                                               ; preds = %59, %74, %75
  %77 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %78 = bitcast %"class.v8::internal::Statement"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.v8::internal::AstNode"* %62 to i64*
  store i64 %79, i64* %80, align 8
  %81 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  %82 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %81) #6
  store %"class.v8::internal::Statement"* %82, %"class.v8::internal::Statement"** %77, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %83, align 2
  store i8 %61, i8* %60, align 1
  br label %467

84:                                               ; preds = %2
  %85 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %86 = load i8, i8* %85, align 1, !range !3
  store i8 1, i8* %85, align 1
  %87 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %88 = bitcast %"class.v8::internal::AstNode"* %87 to %"class.v8::internal::Statement"**
  %89 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %89, i64 0, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %92 = load i8, i8* %91, align 8, !range !3
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %84
  %95 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %96 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %97 = load i64, i64* %96, align 8
  %98 = icmp ult i64 %95, %97
  br i1 %98, label %99, label %100

99:                                               ; preds = %94
  store i8 1, i8* %91, align 8
  br label %101

100:                                              ; preds = %94
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %90) #6
  br label %101

101:                                              ; preds = %84, %99, %100
  %102 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %103 = bitcast %"class.v8::internal::Statement"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.v8::internal::AstNode"* %87 to i64*
  store i64 %104, i64* %105, align 8
  %106 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  %107 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %106) #6
  store %"class.v8::internal::Statement"* %107, %"class.v8::internal::Statement"** %102, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %108, align 2
  store i8 %86, i8* %85, align 1
  br label %467

109:                                              ; preds = %2
  %110 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %111 = load i8, i8* %110, align 1, !range !3
  store i8 1, i8* %110, align 1
  %112 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %113 = bitcast %"class.v8::internal::AstNode"* %112 to %"class.v8::internal::Statement"**
  %114 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %114, i64 0, i32 0
  %116 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %117 = load i8, i8* %116, align 8, !range !3
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %126

119:                                              ; preds = %109
  %120 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %121 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %122 = load i64, i64* %121, align 8
  %123 = icmp ult i64 %120, %122
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  store i8 1, i8* %116, align 8
  br label %126

125:                                              ; preds = %119
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %115) #6
  br label %126

126:                                              ; preds = %109, %124, %125
  %127 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %128 = bitcast %"class.v8::internal::Statement"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::AstNode"* %112 to i64*
  store i64 %129, i64* %130, align 8
  %131 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  %132 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %131) #6
  store %"class.v8::internal::Statement"* %132, %"class.v8::internal::Statement"** %127, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %133, align 2
  store i8 %111, i8* %110, align 1
  br label %467

134:                                              ; preds = %2
  %135 = and i32 %4, 64
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %184

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %139 = load i8, i8* %138, align 1, !range !3
  %140 = lshr i8 %5, 7
  %141 = or i8 %139, %140
  store i8 %141, i8* %138, align 1
  %142 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %145 = icmp sgt i32 %143, 0
  br i1 %145, label %146, label %183

146:                                              ; preds = %137
  %147 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %148 = bitcast %"class.v8::internal::AstNode"* %147 to %"class.v8::internal::Statement"***
  %149 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %150 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %151 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %152 = bitcast %"class.v8::internal::Statement"** %151 to i64*
  %153 = sext i32 %143 to i64
  br label %154

154:                                              ; preds = %181, %146
  %155 = phi i8 [ %141, %146 ], [ %182, %181 ]
  %156 = phi i64 [ %153, %146 ], [ %157, %181 ]
  %157 = add nsw i64 %156, -1
  %158 = icmp eq i8 %155, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %154
  %160 = load i8, i8* %144, align 2, !range !3
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %183

162:                                              ; preds = %159, %154
  %163 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %148, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %163, i64 %157
  %165 = bitcast %"class.v8::internal::Statement"** %164 to %"class.v8::internal::AstNode"**
  %166 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %165, align 8
  %167 = load i8, i8* %149, align 8, !range !3
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %175

169:                                              ; preds = %162
  %170 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %171 = load i64, i64* %150, align 8
  %172 = icmp ult i64 %170, %171
  br i1 %172, label %173, label %174

173:                                              ; preds = %169
  store i8 1, i8* %149, align 8
  br label %175

174:                                              ; preds = %169
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %166) #6
  br label %175

175:                                              ; preds = %162, %173, %174
  %176 = load i64, i64* %152, align 8
  %177 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %148, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %177, i64 %157
  %179 = bitcast %"class.v8::internal::Statement"** %178 to i64*
  store i64 %176, i64* %179, align 8
  %180 = icmp sgt i64 %157, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %175
  %182 = load i8, i8* %138, align 1, !range !3
  br label %154

183:                                              ; preds = %159, %175, %137
  store i8 %139, i8* %138, align 1
  br label %184

184:                                              ; preds = %134, %183
  %185 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %186 = bitcast %"class.v8::internal::Statement"** %185 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %186, align 8
  br label %467

187:                                              ; preds = %2
  %188 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 9
  %189 = load i8, i8* %188, align 1, !range !3
  store i8 1, i8* %188, align 1
  %190 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %243

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %195 = bitcast %"class.v8::internal::AstNode"* %194 to %"class.v8::internal::CaseClause"***
  %196 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %197 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %198 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %199 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %200 = bitcast %"class.v8::internal::Statement"** %199 to i64*
  %201 = sext i32 %191 to i64
  br label %202

202:                                              ; preds = %193, %241
  %203 = phi i64 [ %201, %193 ], [ %204, %241 ]
  %204 = add nsw i64 %203, -1
  %205 = load %"class.v8::internal::CaseClause"**, %"class.v8::internal::CaseClause"*** %195, align 8
  %206 = getelementptr inbounds %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %205, i64 %204
  %207 = load %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %207, i64 0, i32 1, i32 2
  %209 = load i32, i32* %208, align 4
  %210 = icmp sgt i32 %209, 0
  br i1 %210, label %211, label %241

211:                                              ; preds = %202
  %212 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %207, i64 0, i32 1, i32 0
  %213 = sext i32 %209 to i64
  br label %214

214:                                              ; preds = %211, %235
  %215 = phi i64 [ %213, %211 ], [ %216, %235 ]
  %216 = add nsw i64 %215, -1
  %217 = load i8, i8* %188, align 1, !range !3
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %214
  %220 = load i8, i8* %196, align 2, !range !3
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %241

222:                                              ; preds = %219, %214
  %223 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %212, align 8
  %224 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %223, i64 %216
  %225 = bitcast %"class.v8::internal::Statement"** %224 to %"class.v8::internal::AstNode"**
  %226 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %225, align 8
  %227 = load i8, i8* %197, align 8, !range !3
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %235

229:                                              ; preds = %222
  %230 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %231 = load i64, i64* %198, align 8
  %232 = icmp ult i64 %230, %231
  br i1 %232, label %233, label %234

233:                                              ; preds = %229
  store i8 1, i8* %197, align 8
  br label %235

234:                                              ; preds = %229
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %226) #6
  br label %235

235:                                              ; preds = %222, %233, %234
  %236 = load i64, i64* %200, align 8
  %237 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %212, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %237, i64 %216
  %239 = bitcast %"class.v8::internal::Statement"** %238 to i64*
  store i64 %236, i64* %239, align 8
  %240 = icmp sgt i64 %216, 0
  br i1 %240, label %214, label %241

241:                                              ; preds = %219, %235, %202
  %242 = icmp sgt i64 %204, 0
  br i1 %242, label %202, label %243

243:                                              ; preds = %241, %187
  %244 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  %245 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %244) #6
  %246 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  store %"class.v8::internal::Statement"* %245, %"class.v8::internal::Statement"** %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %247, align 2
  store i8 %189, i8* %188, align 1
  br label %467

248:                                              ; preds = %2
  %249 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %250 = load i8, i8* %249, align 2, !range !3
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %252, label %257

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %254 = bitcast %"class.v8::internal::AstNode"* %253 to %"class.v8::internal::Expression"**
  %255 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %254, align 8
  %256 = tail call %"class.v8::internal::Expression"* @_ZN2v88internal9Processor9SetResultEPNS0_10ExpressionE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Expression"* %255) #6
  store %"class.v8::internal::Expression"* %256, %"class.v8::internal::Expression"** %254, align 8
  store i8 1, i8* %249, align 2
  br label %257

257:                                              ; preds = %248, %252
  %258 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %259 = bitcast %"class.v8::internal::Statement"** %258 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %259, align 8
  br label %467

260:                                              ; preds = %2
  %261 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %262 = bitcast %"class.v8::internal::Statement"** %261 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %262, align 8
  br label %467

263:                                              ; preds = %2
  %264 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %265 = bitcast %"class.v8::internal::AstNode"* %264 to %"class.v8::internal::Statement"**
  %266 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %265, align 8
  %267 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %266, i64 0, i32 0
  %268 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %269 = load i8, i8* %268, align 8, !range !3
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %271, label %278

271:                                              ; preds = %263
  %272 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %273 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %274 = load i64, i64* %273, align 8
  %275 = icmp ult i64 %272, %274
  br i1 %275, label %276, label %277

276:                                              ; preds = %271
  store i8 1, i8* %268, align 8
  br label %278

277:                                              ; preds = %271
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %267) #6
  br label %278

278:                                              ; preds = %263, %276, %277
  %279 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %280 = bitcast %"class.v8::internal::Statement"** %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = bitcast %"class.v8::internal::AstNode"* %264 to i64*
  store i64 %281, i64* %282, align 8
  %283 = bitcast %"class.v8::internal::Statement"** %279 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %283, align 8
  br label %467

284:                                              ; preds = %2
  %285 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %286 = load i8, i8* %285, align 2, !range !3
  %287 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 2
  %288 = bitcast %"class.v8::internal::AstNode"* %287 to %"class.v8::internal::Statement"**
  %289 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %288, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %289, i64 0, i32 0
  %291 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %292 = load i8, i8* %291, align 8, !range !3
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %294, label %301

294:                                              ; preds = %284
  %295 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %296 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %297 = load i64, i64* %296, align 8
  %298 = icmp ult i64 %295, %297
  br i1 %298, label %299, label %300

299:                                              ; preds = %294
  store i8 1, i8* %291, align 8
  br label %301

300:                                              ; preds = %294
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %290) #6
  br label %301

301:                                              ; preds = %284, %299, %300
  %302 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %303 = bitcast %"class.v8::internal::Statement"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.v8::internal::AstNode"* %287 to i64*
  store i64 %304, i64* %305, align 8
  %306 = load i8, i8* %285, align 2, !range !3
  %307 = icmp eq i8 %306, 0
  store i8 %286, i8* %285, align 2
  %308 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %309 = bitcast %"class.v8::internal::AstNode"* %308 to %"class.v8::internal::Statement"**
  %310 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %309, align 8
  %311 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %310, i64 0, i32 0
  %312 = load i8, i8* %291, align 8, !range !3
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %314, label %321

314:                                              ; preds = %301
  %315 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %316 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %317 = load i64, i64* %316, align 8
  %318 = icmp ult i64 %315, %317
  br i1 %318, label %319, label %320

319:                                              ; preds = %314
  store i8 1, i8* %291, align 8
  br label %321

320:                                              ; preds = %314
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %311) #6
  br label %321

321:                                              ; preds = %301, %319, %320
  %322 = load i64, i64* %303, align 8
  %323 = bitcast %"class.v8::internal::AstNode"* %308 to i64*
  store i64 %322, i64* %323, align 8
  br i1 %307, label %329, label %324

324:                                              ; preds = %321
  %325 = load i8, i8* %285, align 2, !range !3
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %324
  %328 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  br label %332

329:                                              ; preds = %324, %321
  %330 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  %331 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %330) #6
  br label %332

332:                                              ; preds = %327, %329
  %333 = phi %"class.v8::internal::Statement"* [ %328, %327 ], [ %331, %329 ]
  store %"class.v8::internal::Statement"* %333, %"class.v8::internal::Statement"** %302, align 8
  store i8 1, i8* %285, align 2
  br label %467

334:                                              ; preds = %2
  %335 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 0, i8* %335, align 2
  %336 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %337 = bitcast %"class.v8::internal::Statement"** %336 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %337, align 8
  br label %467

338:                                              ; preds = %2
  %339 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 0, i8* %339, align 2
  %340 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %341 = bitcast %"class.v8::internal::Statement"** %340 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %341, align 8
  br label %467

342:                                              ; preds = %2
  %343 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  store i8 1, i8* %343, align 2
  %344 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %345 = bitcast %"class.v8::internal::Statement"** %344 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %345, align 8
  br label %467

346:                                              ; preds = %2
  %347 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %348 = bitcast %"class.v8::internal::AstNode"* %347 to %"class.v8::internal::Statement"**
  %349 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %348, align 8
  %350 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %349, i64 0, i32 0
  %351 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %352 = load i8, i8* %351, align 8, !range !3
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %346
  %355 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %356 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %357 = load i64, i64* %356, align 8
  %358 = icmp ult i64 %355, %357
  br i1 %358, label %359, label %360

359:                                              ; preds = %354
  store i8 1, i8* %351, align 8
  br label %361

360:                                              ; preds = %354
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %350) #6
  br label %361

361:                                              ; preds = %346, %359, %360
  %362 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %363 = bitcast %"class.v8::internal::Statement"** %362 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = bitcast %"class.v8::internal::AstNode"* %347 to i64*
  store i64 %364, i64* %365, align 8
  %366 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %367 = load i8, i8* %366, align 2, !range !3
  %368 = icmp eq i8 %367, 0
  %369 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  br i1 %368, label %370, label %372

370:                                              ; preds = %361
  %371 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %369) #6
  br label %372

372:                                              ; preds = %361, %370
  %373 = phi %"class.v8::internal::Statement"* [ %371, %370 ], [ %369, %361 ]
  store %"class.v8::internal::Statement"* %373, %"class.v8::internal::Statement"** %362, align 8
  store i8 1, i8* %366, align 2
  br label %467

374:                                              ; preds = %2
  %375 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 8
  %376 = load i8, i8* %375, align 2, !range !3
  %377 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 1
  %378 = bitcast %"class.v8::internal::AstNode"* %377 to %"class.v8::internal::Block"**
  %379 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %379, i64 0, i32 0, i32 0, i32 0
  %381 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 6
  %382 = load i8, i8* %381, align 8, !range !3
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %384, label %391

384:                                              ; preds = %374
  %385 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %386 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %387 = load i64, i64* %386, align 8
  %388 = icmp ult i64 %385, %387
  br i1 %388, label %389, label %390

389:                                              ; preds = %384
  store i8 1, i8* %381, align 8
  br label %391

390:                                              ; preds = %384
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %380) #6
  br label %391

391:                                              ; preds = %374, %389, %390
  %392 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %393 = bitcast %"class.v8::internal::Statement"** %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = bitcast %"class.v8::internal::AstNode"* %377 to i64*
  store i64 %394, i64* %395, align 8
  %396 = load i8, i8* %375, align 2, !range !3
  store i8 %376, i8* %375, align 2
  %397 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %1, i64 3
  %398 = bitcast %"class.v8::internal::AstNode"* %397 to %"class.v8::internal::Block"**
  %399 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %398, align 8
  %400 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %399, i64 0, i32 0, i32 0, i32 0
  %401 = load i8, i8* %381, align 8, !range !3
  %402 = icmp eq i8 %401, 0
  br i1 %402, label %403, label %410

403:                                              ; preds = %391
  %404 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #6
  %405 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 5
  %406 = load i64, i64* %405, align 8
  %407 = icmp ult i64 %404, %406
  br i1 %407, label %408, label %409

408:                                              ; preds = %403
  store i8 1, i8* %381, align 8
  br label %410

409:                                              ; preds = %403
  tail call void @_ZN2v88internal9Processor25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::AstNode"* %400) #6
  br label %410

410:                                              ; preds = %391, %408, %409
  %411 = load i64, i64* %393, align 8
  %412 = bitcast %"class.v8::internal::AstNode"* %397 to i64*
  store i64 %411, i64* %412, align 8
  %413 = load i8, i8* %375, align 2, !range !3
  %414 = icmp eq i8 %413, 0
  %415 = icmp eq i8 %396, 0
  %416 = or i1 %415, %414
  %417 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::Statement"*
  br i1 %416, label %418, label %420

418:                                              ; preds = %410
  %419 = tail call %"class.v8::internal::Statement"* @_ZN2v88internal9Processor21AssignUndefinedBeforeEPNS0_9StatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::Statement"* %417) #6
  br label %420

420:                                              ; preds = %410, %418
  %421 = phi %"class.v8::internal::Statement"* [ %419, %418 ], [ %417, %410 ]
  store %"class.v8::internal::Statement"* %421, %"class.v8::internal::Statement"** %392, align 8
  store i8 1, i8* %375, align 2
  br label %467

422:                                              ; preds = %2
  %423 = bitcast %"class.v8::internal::AstNode"* %1 to %"class.v8::internal::TryFinallyStatement"*
  tail call void @_ZN2v88internal9Processor24VisitTryFinallyStatementEPNS0_19TryFinallyStatementE(%"class.v8::internal::Processor"* %0, %"class.v8::internal::TryFinallyStatement"* %423)
  br label %467

424:                                              ; preds = %2
  %425 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %426 = bitcast %"class.v8::internal::Statement"** %425 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %426, align 8
  br label %467

427:                                              ; preds = %2
  %428 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %429 = bitcast %"class.v8::internal::Statement"** %428 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %429, align 8
  br label %467

430:                                              ; preds = %2
  %431 = getelementptr inbounds %"class.v8::internal::Processor", %"class.v8::internal::Processor"* %0, i64 0, i32 1
  %432 = bitcast %"class.v8::internal::Statement"** %431 to %"class.v8::internal::AstNode"**
  store %"class.v8::internal::AstNode"* %1, %"class.v8::internal::AstNode"** %432, align 8
  br label %467

433:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

434:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

435:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

436:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

437:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

438:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

439:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

440:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

441:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

442:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

443:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

444:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

445:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

446:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

447:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

448:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

449:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

450:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

451:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

452:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

453:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

454:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

455:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

456:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

457:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

458:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

459:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

460:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

461:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

462:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

463:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

464:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

465:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

466:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

467:                                              ; preds = %26, %51, %76, %101, %126, %184, %243, %257, %260, %278, %332, %334, %338, %342, %372, %420, %422, %424, %427, %430, %2
  ret void
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #3

declare void @_ZN2v88internal13VariableProxyC1EPNS0_8VariableEi(%"class.v8::internal::VariableProxy"*, %"class.v8::internal::Variable"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 15
  %5 = icmp eq i16 %4, 1
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %8, i64 0, i32 3
  %10 = load i8, i8* %9, align 4, !range !3
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %8, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = sdiv i32 %14, 2
  %16 = select i1 %11, i32 %15, i32 %14
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %6
  %19 = tail call zeroext i16 @_ZNK2v88internal12AstRawString14FirstCharacterEv(%"class.v8::internal::AstRawString"* %8) #6
  %20 = icmp eq i16 %19, 35
  br i1 %20, label %33, label %21

21:                                               ; preds = %6, %18
  %22 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 2
  %23 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Variable"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = load i16, i16* %2, align 8
  %27 = and i16 %26, 16384
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %23)
  br label %30

30:                                               ; preds = %21, %25, %29
  %31 = load i16, i16* %2, align 8
  %32 = or i16 %31, 16384
  store i16 %32, i16* %2, align 8
  br label %33

33:                                               ; preds = %18, %1, %30
  ret void
}

declare zeroext i16 @_ZNK2v88internal12AstRawString14FirstCharacterEv(%"class.v8::internal::AstRawString"*) local_unnamed_addr #3

declare void @_ZN2v88internal10AssignmentC1ENS0_7AstNode8NodeTypeENS0_5Token5ValueEPNS0_10ExpressionES7_i(%"class.v8::internal::Assignment"*, i8 zeroext, i8 zeroext, %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"*, i32) unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = !{!"branch_weights", i32 2000, i32 1}
