; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_page_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_page_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.1060 }
%class.scoped_refptr.1060 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1061", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1061" = type { %"class.base::RefCounted.1062" }
%"class.base::RefCounted.1062" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.175", i32, [4 x i8], %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.313", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.348", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.355", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.293", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.211" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.211" = type { %"struct.std::__1::__atomic_base.212" }
%"struct.std::__1::__atomic_base.212" = type { %"struct.std::__1::__atomic_base.213" }
%"struct.std::__1::__atomic_base.213" = type { %"struct.std::__1::__cxx_atomic_impl.214" }
%"struct.std::__1::__cxx_atomic_impl.214" = type { %"struct.std::__1::__cxx_atomic_base_impl.215" }
%"struct.std::__1::__cxx_atomic_base_impl.215" = type { i64 }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.211" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.211" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.211" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.211" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::Worklist.250"* }
%"class.blink::Worklist.250" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.211" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::Worklist.257"* }
%"class.blink::Worklist.257" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.211" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::Worklist.264"* }
%"class.blink::Worklist.264" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.211" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.271", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273", %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { i64 }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { float }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.296", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.305" }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"struct.std::__1::pair.323"*, i32, i32 }
%"struct.std::__1::pair.323" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.336" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.222"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.229"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.236"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.243"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.250"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.374", i64 }
%"class.std::__1::vector.374" = type { %"class.std::__1::__vector_base.375" }
%"class.std::__1::__vector_base.375" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.376" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.354 }
%class.scoped_refptr.354 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.71" }
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__cxx_atomic_impl.74" }
%"struct.std::__1::__cxx_atomic_impl.74" = type { %"struct.std::__1::__cxx_atomic_base_impl.75" }
%"struct.std::__1::__cxx_atomic_base_impl.75" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.162", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.162" = type { %"class.base::RefCounted.163" }
%"class.base::RefCounted.163" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.168" }
%"class.WTF::HashMap.168" = type { %"class.WTF::HashTable.169" }
%"class.WTF::HashTable.169" = type <{ %"struct.WTF::KeyValuePair.171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.171" = type { %"class.blink::WeakMember.172", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.172" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::InspectorPageAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.708", %"class.WTF::HashMap.714", %"class.WTF::HashMap.722", %"class.blink::HeapHashMap.727", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::InspectorPageAgent::Client"*, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.741", i8, i32, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Page::Backend", %"class.blink::Member.461", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.702" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Page::Backend" = type { i32 (...)** }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.472", %"class.blink::HeapListHashSet.483", %"class.blink::HeapListHashSet.494", %"class.blink::HeapListHashSet.505", %"class.blink::HeapListHashSet.516", %"class.blink::HeapListHashSet.527", %"class.blink::HeapListHashSet.538", %"class.blink::HeapListHashSet.549", %"class.blink::HeapListHashSet.560", %"class.blink::HeapListHashSet.571", %"class.blink::HeapListHashSet.582", %"class.blink::HeapListHashSet.593", %"class.blink::HeapListHashSet.604", %"class.blink::HeapListHashSet.615", %"class.blink::HeapListHashSet.626", %"class.blink::HeapListHashSet.637", %"class.blink::HeapListHashSet.648", %"class.blink::HeapListHashSet.659", %"class.blink::HeapListHashSet.670" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.468", %"class.blink::Member.470", %"class.blink::Member.470", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.468" = type <{ %"class.blink::Member.470"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1091", %"class.blink::Member.470", %"class.blink::Member.470" }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.712", %"class.WTF::Vector.1095", i32, [4 x i8], %"class.blink::HeapHashMap.1100", i32, i8, [3 x i8] }>
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1013", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1027", %"class.blink::FrameLoader", %"class.blink::Member.1048", %"class.blink::Member.1050", %"class.blink::Member.1080", %"class.blink::Member.1082", %"class.blink::Member.1084", %"class.blink::Member.1086", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.461", %class.scoped_refptr.1088, %"class.blink::Member.1089", %"class.blink::Member.1091", %"class.blink::Member.1107", %"class.blink::Member.1109", %"class.blink::Member.1111", %"class.blink::Member.1115", %"class.blink::Member.1117", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1121", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1143", %"class.std::__1::unique_ptr.1144", %"class.absl::optional.101", i32, [4 x i8], %"class.std::__1::unique_ptr.1150", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1158", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1163", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1168", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1171", %"class.blink::Member.1173", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.mojo::StructPtr.1180", %"class.blink::Member.1188", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1190", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.777", %"class.blink::Member.779", %"class.blink::Member.781", i8, i32, i8, i32, %"class.blink::Member.980", %"class.blink::Member.804", %"class.blink::FrameLifecycle", %"class.blink::Member.775", %"class.blink::Member.775", %"class.blink::Member.775", %"class.blink::Member.775", %"class.blink::Member.775", %"class.blink::Member.775", %"class.blink::Member.712", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.992", i8, %"class.base::UnguessableToken", %"class.absl::optional.994", %"class.absl::optional.101", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.775", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.3117", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.775", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.3143", %"class.blink::Member.3147", %"class.blink::Member.3149", %"class.blink::Member.3153", %"class.blink::Member.3155", %"class.blink::Member.3157", %"class.blink::Member.3159", %"class.blink::Member.3161", %"class.blink::HeapObserverSet.3163", %"class.blink::Member.3171", %"class.blink::Member.3173", %"class.blink::Member.3175", %"class.blink::Member.3177", %"class.blink::Member.3179", %"class.blink::Member.3181", %"class.blink::Member.3187", %"class.blink::Member.3189", %"class.blink::Member.3191", %"class.blink::Member.3193", %"class.blink::Member.3195", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.3220", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.3227", %"class.blink::Member.777", %"class.blink::Member.777", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.3234", %"class.std::__1::unique_ptr.3240", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.3117" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3118" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.3118" = type { %"class.WTF::HashMap.3121" }
%"class.WTF::HashMap.3121" = type { %"class.WTF::HashTable.3122" }
%"class.WTF::HashTable.3122" = type <{ %"struct.WTF::KeyValuePair.3124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3124" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.3125" }
%"class.std::__1::unique_ptr.3125" = type { %"class.std::__1::__compressed_pair.3126" }
%"class.std::__1::__compressed_pair.3126" = type { %"struct.std::__1::__compressed_pair_elem.3127" }
%"struct.std::__1::__compressed_pair_elem.3127" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.3128", %"class.WTF::HashMap.3128", %"class.WTF::HashMap.3128", %"class.WTF::HashMap.3128", %"class.WTF::HashMap.3128", %"class.WTF::HashMap.3128", %"class.WTF::HashMap.3128", %"class.std::__1::unique_ptr.3133" }
%"class.WTF::HashMap.3128" = type { %"class.WTF::HashTable.3129" }
%"class.WTF::HashTable.3129" = type <{ %"struct.WTF::KeyValuePair.3132"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3132" = type opaque
%"class.std::__1::unique_ptr.3133" = type { %"class.std::__1::__compressed_pair.3134" }
%"class.std::__1::__compressed_pair.3134" = type { %"struct.std::__1::__compressed_pair_elem.3135" }
%"struct.std::__1::__compressed_pair_elem.3135" = type { %"class.WTF::Vector.3136"* }
%"class.WTF::Vector.3136" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.3143" = type { %"class.blink::MemberBase.3144" }
%"class.blink::MemberBase.3144" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.777", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.3147" = type { %"class.blink::MemberBase.3148" }
%"class.blink::MemberBase.3148" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.3149" = type { %"class.blink::MemberBase.3150" }
%"class.blink::MemberBase.3150" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.2496", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WeakMember.2496" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1052", %"class.blink::Member.1054", %"class.blink::Member.1052", %"class.blink::Member.1052", %"class.blink::Member.1056" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1199", %"class.blink::Member.1201", %"class.blink::Member.1054", %"class.blink::Member.1203", %"class.blink::Member.1203", %"class.blink::Member.1225", %"class.blink::Member.1227", %"class.blink::Member.1229", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1234", %"class.blink::HeapVector.1236" }
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1052", %"class.blink::Member.1052" }
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1295", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1303", %"class.WTF::Vector.1303", i8, i32, %"class.blink::Member.1308", %"class.blink::Member.1378", %"class.blink::Member.2267", %"class.blink::Member.2269", %"class.blink::Member.2271", %"class.blink::Member.2273", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2275", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.2281", %"class.blink::Member.2283", %"class.blink::Member.1242", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.2285", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2290", %"class.blink::HeapVector.1218", %"class.blink::Member.1050", %"class.blink::Member.2247", %"class.blink::Member.1050", %"class.blink::Member.1050", %"class.blink::Member.1050", %"class.blink::UserActionElementSet", %"class.blink::Member.2299", double, double, i64, i64, %"class.blink::HeapHashSet.2301", %"class.blink::HeapHashSet.2308", i16, i8, %"class.blink::Member.2315", %"class.blink::Member.2317", %"class.blink::Member.2319", %"class.blink::Member.2321", %"class.blink::TextLinkColors", %"class.blink::Member.2323", i8, [7 x i8], %"class.blink::HeapHashMap.2325", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1050", %"class.WTF::Vector.2332", %"class.blink::Member.2337", %"class.blink::Member.2341", i8, %"class.blink::Member.1050", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.2343", %"class.blink::HeapVector.2345", %"class.std::__1::unique_ptr.2353", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2359", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.2372", %"class.WTF::Vector.2374", i8, i8, %"class.std::__1::unique_ptr.2379", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1218", %"class.blink::HeapVector.2385", i32, i8, %"class.blink::HeapTaskRunnerTimer.2290", %"class.blink::HeapTaskRunnerTimer.2290", %"class.blink::DocumentTiming", %"class.blink::Member.2393", i8, i32, %"class.blink::Member.2395", %"class.blink::Member.2397", %"class.blink::Member.2399", %"class.blink::HeapTaskRunnerTimer.2290", %"class.blink::Member.2401", %"class.WTF::HashMap.2403", %"class.blink::Member.2408", %"class.blink::Member.2410", %"class.blink::Member.2412", %"class.blink::Member.2414", %"class.blink::Member.1201", %"class.blink::Member.1201", %"class.blink::HeapTaskRunnerTimer.2290", %"class.blink::HeapHashSet.2416", i8, i32, %"class.blink::Member.2423", %"class.blink::Member.2425", i32, %"class.blink::Member.2427", %"class.blink::Member.2429", %"class.blink::Member.2431", %"class.std::__1::unique_ptr.2433", i64, %"class.std::__1::unique_ptr.2439", i32, i32, %"class.blink::Member.2450", %"class.blink::Member.2452", %"class.blink::Member.2454", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2456", %"class.WTF::Vector.1095", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2458", %"class.blink::Member.2465", %"class.std::__1::unique_ptr.2467", %"class.blink::Member.2473", i8, i8, %"class.WTF::String", %"class.blink::Member.2475", i8, [7 x i8], %"class.blink::HeapHashMap.2477", %"class.blink::HeapObserverSet.2484", %"class.blink::Member.2492", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2494", i32, i8, i8, %"class.blink::WeakMember.2496", %"class.blink::Member.2497" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1295" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1296" }
%"class.blink::HeapHashMap.1296" = type { %"class.WTF::HashMap.1299" }
%"class.WTF::HashMap.1299" = type { %"class.WTF::HashTable.1300" }
%"class.WTF::HashTable.1300" = type <{ %"struct.WTF::KeyValuePair.1302"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1302" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1303" = type { %"class.WTF::VectorBuffer.1304" }
%"class.WTF::VectorBuffer.1304" = type { %"class.WTF::VectorBufferBase.1305" }
%"class.WTF::VectorBufferBase.1305" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.432 }
%class.scoped_refptr.432 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.433", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.433" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.71" }
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1510", %"class.blink::ThreadState::PrefinalizerRegistration.1518", %"class.blink::Member.1519", %"class.blink::Member.1201", %"class.blink::Member.1521", i8, %"class.blink::Member.1523", %"class.blink::Member.1525", %"class.blink::Member.1527", %"class.blink::Member.1527", %"class.blink::Member.1527", %"class.blink::Member.1527", %"class.blink::Member.1527", %"class.blink::Member.1527", %"class.blink::Member.1529", %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::Member.1535", %"class.blink::Member.1537", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.46", %"class.blink::Member.1539", %class.scoped_refptr.1541, %"class.blink::HeapHashSet.1604", %"class.blink::Member.1611", %"class.blink::HeapHashMap.1624", %"class.std::__1::unique_ptr.1631", %"class.blink::Member.1637", %"class.blink::Member.2251", %"class.blink::Member.2253", %"class.blink::Member.2255", %"class.WTF::Vector.1095", %"class.util::TokenType", %"class.WTF::HashSet.2258", %"class.WTF::Deque.2262" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.775", %"class.blink::Member.804", %"class.blink::Member.819", %"class.blink::Member.821", i8, %"class.WTF::Vector.823" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.797" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.785" }
%"class.blink::HeapVector.785" = type { %"class.WTF::Vector.788" }
%"class.WTF::Vector.788" = type { %"class.WTF::VectorBuffer.789" }
%"class.WTF::VectorBuffer.789" = type { %"class.WTF::VectorBufferBase.790", [32 x i8] }
%"class.WTF::VectorBufferBase.790" = type { %"struct.std::__1::pair.791"*, i32, i32 }
%"struct.std::__1::pair.791" = type { %"class.WTF::AtomicString", %"class.blink::Member.792" }
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::HeapVector.794"* }
%"class.blink::HeapVector.794" = type opaque
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.WTF::Vector.800"* }
%"class.WTF::Vector.800" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.823" = type { %"class.WTF::VectorBuffer.824" }
%"class.WTF::VectorBuffer.824" = type { %"class.WTF::VectorBufferBase.825" }
%"class.WTF::VectorBufferBase.825" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.972" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.827, %"class.std::__1::unique_ptr.927", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.428, i32 }>
%class.scoped_refptr.827 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.428, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.893", %"class.absl::optional.898", %"class.absl::optional.852", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.918", i8, [7 x i8], %class.scoped_refptr.428, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.828" }>
%"class.base::RefCountedThreadSafe.828" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.34 }
%union.anon.34 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.829", %"class.std::__1::unique_ptr.835", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.841" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.841" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.434 }
%class.scoped_refptr.434 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.435", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.435" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.436" }
%"struct.std::__1::atomic.436" = type { %"struct.std::__1::__atomic_base.437" }
%"struct.std::__1::__atomic_base.437" = type { %"struct.std::__1::__atomic_base.438" }
%"struct.std::__1::__atomic_base.438" = type { %"struct.std::__1::__cxx_atomic_impl.439" }
%"struct.std::__1::__cxx_atomic_impl.439" = type { %"struct.std::__1::__cxx_atomic_base_impl.440" }
%"struct.std::__1::__cxx_atomic_base_impl.440" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.428, %"class.std::__1::unique_ptr.425", %"class.absl::optional.842", %"struct.std::__1::atomic.355", i8, i8, i8, i8, i32, i32, %"class.absl::optional.852", %"class.std::__1::unique_ptr.857", i8, i64, %class.scoped_refptr.889, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.892" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.428, i8, %"class.mojo::ScopedHandleBase.430", %class.scoped_refptr.431, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.430" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.431 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.842" = type { %"class.absl::optional_internal::optional_data.843" }
%"class.absl::optional_internal::optional_data.843" = type { %"class.absl::optional_internal::optional_data_base.844" }
%"class.absl::optional_internal::optional_data_base.844" = type { %"class.absl::optional_internal::optional_data_dtor_base.845" }
%"class.absl::optional_internal::optional_data_dtor_base.845" = type { i8, %union.anon.846 }
%union.anon.846 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.847", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.847" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.860", i8, i64, %class.scoped_refptr.861, %class.scoped_refptr.884 }
%"class.base::RepeatingCallback.860" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.861 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.862", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.873", i8, [7 x i8] }>
%"class.base::RefCounted.862" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.863 }
%class.scoped_refptr.863 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.864" }
%"class.std::__1::__tree.864" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.865", %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.std::__1::map.873" = type { %"class.std::__1::__tree.874" }
%"class.std::__1::__tree.874" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.875", %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%class.scoped_refptr.884 = type { %"class.base::RefCountedData.885"* }
%"class.base::RefCountedData.885" = type opaque
%class.scoped_refptr.889 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.890 }
%class.scoped_refptr.890 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3114", [4 x i8], %"class.base::RepeatingCallback.930", %class.scoped_refptr.428, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3114" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.930" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.891 }
%class.scoped_refptr.891 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.892" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.893" = type { %"class.absl::optional_internal::optional_data.894" }
%"class.absl::optional_internal::optional_data.894" = type { %"class.absl::optional_internal::optional_data_base.895" }
%"class.absl::optional_internal::optional_data_base.895" = type { %"class.absl::optional_internal::optional_data_dtor_base.896" }
%"class.absl::optional_internal::optional_data_dtor_base.896" = type { i8, %union.anon.897 }
%union.anon.897 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.898" = type { %"class.absl::optional_internal::optional_data.899" }
%"class.absl::optional_internal::optional_data.899" = type { %"class.absl::optional_internal::optional_data_base.900" }
%"class.absl::optional_internal::optional_data_base.900" = type { %"class.absl::optional_internal::optional_data_dtor_base.901" }
%"class.absl::optional_internal::optional_data_dtor_base.901" = type { i8, [7 x i8], %union.anon.902 }
%union.anon.902 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.852" = type { %"class.absl::optional_internal::optional_data.853" }
%"class.absl::optional_internal::optional_data.853" = type { %"class.absl::optional_internal::optional_data_base.854" }
%"class.absl::optional_internal::optional_data_base.854" = type { %"class.absl::optional_internal::optional_data_dtor_base.855" }
%"class.absl::optional_internal::optional_data_dtor_base.855" = type { i8, %union.anon.856 }
%union.anon.856 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.903 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.903 = type { %"class.std::__1::map.906" }
%"class.std::__1::map.906" = type { %"class.std::__1::__tree.907" }
%"class.std::__1::__tree.907" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.908", %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.917"*, i64 }
%"class.std::__1::unique_ptr.917" = type opaque
%"class.std::__1::map.918" = type { %"class.std::__1::__tree.919" }
%"class.std::__1::__tree.919" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.920", %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.930", %"class.base::OnceCallback.931", %"class.absl::optional.96", %"class.absl::optional.932", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.939", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.947", %"class.std::__1::map.958", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.967", i8, %class.scoped_refptr.428, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.968" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.931" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, %union.anon.100 }
%union.anon.100 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.932" = type { %"class.absl::optional_internal::optional_data.933" }
%"class.absl::optional_internal::optional_data.933" = type { %"class.absl::optional_internal::optional_data_base.934" }
%"class.absl::optional_internal::optional_data_base.934" = type { %"class.absl::optional_internal::optional_data_dtor_base.935" }
%"class.absl::optional_internal::optional_data_dtor_base.935" = type { i8, %union.anon.936 }
%union.anon.936 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.428, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.937" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.937" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.938 }
%class.scoped_refptr.938 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.942", %class.scoped_refptr.943 }
%"class.base::RepeatingCallback.942" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.943 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.828", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.947" = type { %"class.std::__1::__tree.948" }
%"class.std::__1::__tree.948" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.std::__1::map.958" = type { %"class.std::__1::__tree.959" }
%"class.std::__1::__tree.959" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.base::OnceCallback.967" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.968" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.428 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.429" }>
%"class.base::RefCountedThreadSafe.429" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1310", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1384", i32, i8, [3 x i8], %"class.blink::HeapVector.1389", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1397", %"class.blink::Member.1399", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1408", %"class.blink::Member.1464", %"class.blink::Member.1498", i8 }>
%"class.blink::Supplementable.1310" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1311" }
%"class.blink::HeapHashMap.1311" = type { %"class.WTF::HashMap.1314" }
%"class.WTF::HashMap.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"struct.WTF::KeyValuePair.1317"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1317" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1325" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1318" }
%"class.blink::HeapHashSet.1318" = type { %"class.WTF::HashSet.1321" }
%"class.WTF::HashSet.1321" = type { %"class.WTF::HashTable.1322" }
%"class.WTF::HashTable.1322" = type <{ %"class.blink::WeakMember.1324"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1324" = type opaque
%"class.blink::Supplementable.1325" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type { i8*, %"class.blink::Member.3919" }
%"class.blink::Member.3919" = type { %"class.blink::MemberBase.3920" }
%"class.blink::MemberBase.3920" = type { %"class.blink::Supplement.3921"* }
%"class.blink::Supplement.3921" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3922" }
%"class.blink::Member.3922" = type { %"class.blink::MemberBase.3923" }
%"class.blink::MemberBase.3923" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1333, %"class.std::__1::unique_ptr.1334", %"class.std::__1::unique_ptr.1334", %"class.std::__1::unique_ptr.1361", %"class.std::__1::unique_ptr.1361", %"class.blink::Member.1378", i32, [4 x i8], %"class.WTF::HashSet.1380", i32, i32 }
%class.scoped_refptr.1333 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.381", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.54", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.59 }
%"class.WTF::RefCounted.381" = type { %"class.base::RefCounted.382" }
%"class.base::RefCounted.382" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.59 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1337", %"class.std::__1::map.1348", %"class.std::__1::map.1357"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.54" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.1337" = type { %"class.std::__1::__tree.1338" }
%"class.std::__1::__tree.1338" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1339", %"class.std::__1::__compressed_pair.1343" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.std::__1::map.1348" = type { %"class.std::__1::__tree.1349" }
%"class.std::__1::__tree.1349" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1350", %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.std::__1::map.1357" = type opaque
%"class.std::__1::unique_ptr.1361" = type { %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.1363" }
%"struct.std::__1::__compressed_pair_elem.1363" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array.1364", %"class.base::flat_map.1365" }
%"struct.std::__1::array.1364" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map.1365" = type { %"class.base::internal::flat_tree.1366" }
%"class.base::internal::flat_tree.1366" = type { %"class.std::__1::vector.1367" }
%"class.std::__1::vector.1367" = type { %"class.std::__1::__vector_base.1368" }
%"class.std::__1::__vector_base.1368" = type { %"struct.std::__1::pair.1369"*, %"struct.std::__1::pair.1369"*, %"class.std::__1::__compressed_pair.1370" }
%"struct.std::__1::pair.1369" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1370" = type { %"struct.std::__1::__compressed_pair_elem.1371" }
%"struct.std::__1::__compressed_pair_elem.1371" = type { %"struct.std::__1::pair.1369"* }
%"class.WTF::HashSet.1380" = type { %"class.WTF::HashTable.1381" }
%"class.WTF::HashTable.1381" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type <{ i32 (...)**, %class.scoped_refptr.1388, %"class.base::UnguessableToken", i8, [7 x i8] }>
%class.scoped_refptr.1388 = type { %"class.blink::scheduler::EventLoop"* }
%"class.blink::scheduler::EventLoop" = type opaque
%"class.blink::HeapVector.1389" = type { %"class.WTF::Vector.1392" }
%"class.WTF::Vector.1392" = type { %"class.WTF::VectorBuffer.1393" }
%"class.WTF::VectorBuffer.1393" = type { %"class.WTF::VectorBufferBase.1394" }
%"class.WTF::VectorBufferBase.1394" = type { %"class.blink::Member.1395"*, i32, i32 }
%"class.blink::Member.1395" = type opaque
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1401", i32, i32 }
%"class.blink::HeapHashMap.1401" = type { %"class.WTF::HashMap.1404" }
%"class.WTF::HashMap.1404" = type { %"class.WTF::HashTable.1405" }
%"class.WTF::HashTable.1405" = type <{ %"struct.WTF::KeyValuePair.1407"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1407" = type opaque
%"class.std::__1::unique_ptr.1408" = type { %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1411", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1411" = type { %"class.std::__1::unique_ptr.1412" }
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1415" }
%"class.WTF::Vector.1415" = type { %"class.WTF::VectorBuffer.1416" }
%"class.WTF::VectorBuffer.1416" = type { %"class.WTF::VectorBufferBase.1417" }
%"class.WTF::VectorBufferBase.1417" = type { %"class.mojo::StructPtr.1418"*, i32, i32 }
%"class.mojo::StructPtr.1418" = type { %"class.std::__1::unique_ptr.1419" }
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1422", %"class.WTF::HashMap.1429", %"class.WTF::HashMap.1434", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1439", i8, %"class.WTF::Vector.46", i32, %"class.mojo::StructPtr.1440", %"class.WTF::Vector.46" }
%"class.mojo::StructPtr.1422" = type { %"class.std::__1::unique_ptr.1423" }
%"class.std::__1::unique_ptr.1423" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1429" = type { %"class.WTF::HashTable.1430" }
%"class.WTF::HashTable.1430" = type <{ %"struct.WTF::KeyValuePair.1433"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1433" = type opaque
%"class.WTF::HashMap.1434" = type { %"class.WTF::HashTable.1435" }
%"class.WTF::HashTable.1435" = type <{ %"struct.WTF::KeyValuePair.1438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1438" = type opaque
%"class.mojo::InlinedStructPtr.1439" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1440" = type { %"class.std::__1::unique_ptr.1441" }
%"class.std::__1::unique_ptr.1441" = type { %"class.std::__1::__compressed_pair.1442" }
%"class.std::__1::__compressed_pair.1442" = type { %"struct.std::__1::__compressed_pair_elem.1443" }
%"struct.std::__1::__compressed_pair_elem.1443" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.46", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1455" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.927", i32 }>
%"class.std::__1::unique_ptr.1455" = type { %"class.std::__1::__compressed_pair.1456" }
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet.1468", %"class.WTF::HashSet.1468", %"class.WTF::HashSet.1468", %"class.WTF::HashMap.1472", %"class.std::__1::unique_ptr.1477", %"class.blink::Member.1378", %"class.WTF::HashMap.1483" }
%"class.WTF::HashSet.1468" = type { %"class.WTF::HashTable.1469" }
%"class.WTF::HashTable.1469" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1472" = type { %"class.WTF::HashTable.1473" }
%"class.WTF::HashTable.1473" = type <{ %"struct.WTF::KeyValuePair.1476"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1476" = type opaque
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.WTF::HashMap.1483" = type { %"class.WTF::HashTable.1484" }
%"class.WTF::HashTable.1484" = type <{ %"struct.WTF::KeyValuePair.1487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1487" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector.1488" }
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional.1491" }
%"class.absl::optional.1491" = type { %"class.absl::optional_internal::optional_data.1492" }
%"class.absl::optional_internal::optional_data.1492" = type { %"class.absl::optional_internal::optional_data_base.1493" }
%"class.absl::optional_internal::optional_data_base.1493" = type { %"class.absl::optional_internal::optional_data_dtor_base.1494" }
%"class.absl::optional_internal::optional_data_dtor_base.1494" = type { i8, %union.anon.1495 }
%union.anon.1495 = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.112" }
%"class.base::time_internal::TimeBase.112" = type { i64 }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1399", i8, [7 x i8], %"class.WTF::Vector.1415", %"class.blink::HeapVector.1502", i8, [7 x i8], %"class.WTF::HashSet.1380", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1502" = type { %"class.WTF::Vector.1505" }
%"class.WTF::Vector.1505" = type { %"class.WTF::VectorBuffer.1506" }
%"class.WTF::VectorBuffer.1506" = type { %"class.WTF::VectorBufferBase.1507" }
%"class.WTF::VectorBufferBase.1507" = type { %"class.blink::Member.1508"*, i32, i32 }
%"class.blink::Member.1508" = type opaque
%"class.blink::Supplementable.1510" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1511" }
%"class.blink::HeapHashMap.1511" = type { %"class.WTF::HashMap.1514" }
%"class.WTF::HashMap.1514" = type { %"class.WTF::HashTable.1515" }
%"class.WTF::HashTable.1515" = type <{ %"struct.WTF::KeyValuePair.1517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1517" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1518" = type { i8 }
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type { %"class.blink::Member.1308", %"class.blink::Member.2657" }
%"class.blink::Member.2657" = type { %"class.blink::MemberBase.2658" }
%"class.blink::MemberBase.2658" = type { %"class.blink::LocalWindowProxyManager"* }
%"class.blink::LocalWindowProxyManager" = type { %"class.blink::WindowProxyManagerImplHelper" }
%"class.blink::WindowProxyManagerImplHelper" = type { %"class.blink::WindowProxyManager" }
%"class.blink::WindowProxyManager" = type { %"class.v8::Isolate"*, %"class.blink::Member.775", i32, %"class.blink::Member.808", %"class.blink::HeapHashMap.812" }
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::WindowProxy"* }
%"class.blink::WindowProxy" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member.775", %class.scoped_refptr.740, %"class.blink::TraceWrapperV8Reference", i32, [4 x i8] }>
%class.scoped_refptr.740 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::HeapHashMap.812" = type { %"class.WTF::HashMap.815" }
%"class.WTF::HashMap.815" = type { %"class.WTF::HashTable.816" }
%"class.WTF::HashTable.816" = type <{ %"struct.WTF::KeyValuePair.818"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.818" = type opaque
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.46" = type { %"class.WTF::VectorBuffer.47" }
%"class.WTF::VectorBuffer.47" = type { %"class.WTF::VectorBufferBase.48" }
%"class.WTF::VectorBufferBase.48" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1541 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1543", i64, %"class.WTF::Vector.1547", %"class.WTF::Vector.1552", %"class.WTF::Vector.1558", %"class.WTF::Vector.1576", %class.scoped_refptr.1333, %"class.WTF::HashMap.1582", %"class.WTF::Vector.1587", %"class.WTF::Vector.1547", %"class.WTF::Vector.1593", %"class.WTF::HashMap.1599", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1542" }
%"class.base::RefCountedThreadSafe.1542" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1543" = type { %"class.std::__1::__compressed_pair.1544" }
%"class.std::__1::__compressed_pair.1544" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"struct.std::__1::__compressed_pair_elem.1545" = type { i8* }
%"class.WTF::Vector.1552" = type { %"class.WTF::VectorBuffer.1553" }
%"class.WTF::VectorBuffer.1553" = type { %"class.WTF::VectorBufferBase.1554", [8 x i8] }
%"class.WTF::VectorBufferBase.1554" = type { %class.scoped_refptr.1555*, i32, i32 }
%class.scoped_refptr.1555 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1558" = type { %"class.WTF::VectorBuffer.1559" }
%"class.WTF::VectorBuffer.1559" = type { %"class.WTF::VectorBufferBase.1560" }
%"class.WTF::VectorBufferBase.1560" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1562", %"class.std::__1::unique_ptr.1568" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1561 }
%class.scoped_refptr.1561 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1562" = type { %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1568" = type { %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.1570" }
%"struct.std::__1::__compressed_pair_elem.1570" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1576" = type { %"class.WTF::VectorBuffer.1577" }
%"class.WTF::VectorBuffer.1577" = type { %"class.WTF::VectorBufferBase.1578" }
%"class.WTF::VectorBufferBase.1578" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1579", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1579" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1582" = type { %"class.WTF::HashTable.1583" }
%"class.WTF::HashTable.1583" = type <{ %"struct.WTF::KeyValuePair.1586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1586" = type opaque
%"class.WTF::Vector.1587" = type { %"class.WTF::VectorBuffer.1588" }
%"class.WTF::VectorBuffer.1588" = type { %"class.WTF::VectorBufferBase.1589" }
%"class.WTF::VectorBufferBase.1589" = type { %"class.mojo::ScopedHandleBase.1590"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1590" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1547" = type { %"class.WTF::VectorBuffer.1548" }
%"class.WTF::VectorBuffer.1548" = type { %"class.WTF::VectorBufferBase.1549", [16 x i8] }
%"class.WTF::VectorBufferBase.1549" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1593" = type { %"class.WTF::VectorBuffer.1594" }
%"class.WTF::VectorBuffer.1594" = type { %"class.WTF::VectorBufferBase.1595" }
%"class.WTF::VectorBufferBase.1595" = type { %"class.mojo::PendingRemote.1596"*, i32, i32 }
%"class.mojo::PendingRemote.1596" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1599" = type { %"class.WTF::HashTable.1600" }
%"class.WTF::HashTable.1600" = type <{ %"struct.WTF::KeyValuePair.1603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1603" = type { i8**, %"class.std::__1::unique_ptr.3924" }
%"class.std::__1::unique_ptr.3924" = type { %"class.std::__1::__compressed_pair.3925" }
%"class.std::__1::__compressed_pair.3925" = type { %"struct.std::__1::__compressed_pair_elem.3926" }
%"struct.std::__1::__compressed_pair_elem.3926" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1604" = type { %"class.WTF::HashSet.1607" }
%"class.WTF::HashSet.1607" = type { %"class.WTF::HashTable.1608" }
%"class.WTF::HashTable.1608" = type <{ %"class.blink::WeakMember.1610"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1610" = type opaque
%"class.blink::Member.1611" = type { %"class.blink::MemberBase.1612" }
%"class.blink::MemberBase.1612" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1618", %"class.blink::Member.1618", %"class.blink::Member.1620", %"class.blink::Member.1622", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1613" }
%"class.absl::optional.1613" = type { %"class.absl::optional_internal::optional_data.1614" }
%"class.absl::optional_internal::optional_data.1614" = type { %"class.absl::optional_internal::optional_data_base.1615" }
%"class.absl::optional_internal::optional_data_base.1615" = type { %"class.absl::optional_internal::optional_data_dtor_base.1616" }
%"class.absl::optional_internal::optional_data_dtor_base.1616" = type { i8, %union.anon.1617 }
%union.anon.1617 = type { i64 }
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::Event"* }
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1624" = type { %"class.WTF::HashMap.1627" }
%"class.WTF::HashMap.1627" = type { %"class.WTF::HashTable.1628" }
%"class.WTF::HashTable.1628" = type <{ %"struct.WTF::KeyValuePair.1630"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1630" = type opaque
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1016", %"class.base::WeakPtrFactory.1021" }
%"class.WTF::HashMap.1016" = type { %"class.WTF::HashTable.1017" }
%"class.WTF::HashTable.1017" = type <{ %"struct.WTF::KeyValuePair.1020"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1020" = type opaque
%"class.base::WeakPtrFactory.1021" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.712", %"class.blink::CachedTextInputInfo", %"class.blink::Member.2247", %"class.blink::Member.2249", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1641" }
%"class.blink::WeakMember.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1643", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.2240", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::ContainerNode"* }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1645, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.1645 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.2071", %"class.std::__1::unique_ptr.2073" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1710", %"class.blink::DataRef.1787", %"class.blink::DataRef.1791", %"class.blink::DataRef.1987", %"class.blink::DataRef.2054", %"class.blink::DataRef.2058", %"class.blink::DataRef.2062", %"class.blink::DataRef.2066", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1646 }
%class.scoped_refptr.1646 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1647", %"class.blink::DataRef.1649", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1649" = type { %class.scoped_refptr.1650 }
%class.scoped_refptr.1650 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1651", %"class.blink::Font" }
%"class.WTF::RefCounted.1651" = type { %"class.base::RefCounted.1652" }
%"class.base::RefCounted.1652" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1679 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1654, %class.scoped_refptr.1662, %class.scoped_refptr.1672, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1678 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1653 }
%class.scoped_refptr.1653 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2653", [4 x i8] }>
%"class.WTF::RefCounted.2653" = type { %"class.base::RefCounted.2654" }
%"class.base::RefCounted.2654" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1654 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1660", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1655" }
%"class.WTF::Vector.1655" = type { %"class.WTF::VectorBuffer.1656" }
%"class.WTF::VectorBuffer.1656" = type { %"class.WTF::VectorBufferBase.1657" }
%"class.WTF::VectorBufferBase.1657" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1660" = type { %"class.base::RefCounted.1661" }
%"class.base::RefCounted.1661" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1662 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1663", %"class.WTF::RefCounted.1670", [4 x i8] }>
%"class.blink::FontSettings.1663" = type { %"class.WTF::Vector.1664" }
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"class.blink::FontTagValuePair.1667"*, i32, i32 }
%"class.blink::FontTagValuePair.1667" = type { i32, float }
%"class.WTF::RefCounted.1670" = type { %"class.base::RefCounted.1671" }
%"class.base::RefCounted.1671" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1672 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1673", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1675, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1673" = type { %"class.base::RefCounted.1674" }
%"class.base::RefCounted.1674" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1675 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1676", [4 x i8] }>
%"class.WTF::RefCounted.1676" = type { %"class.base::RefCounted.1677" }
%"class.base::RefCounted.1677" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1678 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1679 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1680", %"class.WTF::Vector.1682", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.1708" }
%"class.WTF::RefCounted.1680" = type { %"class.base::RefCounted.1681" }
%"class.base::RefCounted.1681" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1682" = type { %"class.WTF::VectorBuffer.1683" }
%"class.WTF::VectorBuffer.1683" = type { %"class.WTF::VectorBufferBase.1684", [8 x i8] }
%"class.WTF::VectorBufferBase.1684" = type { %class.scoped_refptr.1685*, i32, i32 }
%class.scoped_refptr.1685 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1686", [4 x i8] }>
%"class.WTF::RefCounted.1686" = type { %"class.base::RefCounted.1687" }
%"class.base::RefCounted.1687" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1696", %class.scoped_refptr.1703, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1686" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1690", %"class.absl::optional.1690", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1690" = type { %"class.absl::optional_internal::optional_data.1691" }
%"class.absl::optional_internal::optional_data.1691" = type { %"class.absl::optional_internal::optional_data_base.1692" }
%"class.absl::optional_internal::optional_data_base.1692" = type { %"class.absl::optional_internal::optional_data_dtor_base.1693" }
%"class.absl::optional_internal::optional_data_dtor_base.1693" = type { i8, %union.anon.1694 }
%union.anon.1694 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1695, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.71" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.71" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.436" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1695 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1699, %class.scoped_refptr.1699 }
%class.scoped_refptr.1699 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1703 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1704", [4 x i8] }>
%"class.WTF::RefCounted.1704" = type { %"class.base::RefCounted.1705" }
%"class.base::RefCounted.1705" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1706" }
%"class.blink::PersistentBase.1706" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.1707" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.1707" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1708" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1709, i8, i8, i8, i8 }>
%union.anon.1709 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.1710" = type { %class.scoped_refptr.1711 }
%class.scoped_refptr.1711 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1712", [4 x i8], %"class.blink::DataRef.1714", %"class.blink::DataRef.1756", %"class.WTF::Vector.118", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1760, %class.scoped_refptr.1769, %"class.blink::Persistent.1777", %"class.blink::Persistent.1779", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1712" = type { %"class.base::RefCounted.1713" }
%"class.base::RefCounted.1713" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1714" = type { %class.scoped_refptr.1715 }
%class.scoped_refptr.1715 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1716", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1718, %class.scoped_refptr.1726, %"class.blink::Persistent.1743", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1716" = type { %"class.base::RefCounted.1717" }
%"class.base::RefCounted.1717" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1718 = type { %"class.base::RefCountedData.1719"* }
%"class.base::RefCountedData.1719" = type { %"class.base::RefCountedThreadSafe.1720", %"class.WTF::Vector.1721" }
%"class.base::RefCountedThreadSafe.1720" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1726 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1727", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1727" = type { %"class.base::RefCounted.1728" }
%"class.base::RefCounted.1728" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1729", %"class.blink::Persistent.1734" }
%"class.WTF::HashMap.1729" = type { %"class.WTF::HashTable.1730" }
%"class.WTF::HashTable.1730" = type <{ %"struct.WTF::KeyValuePair.1733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1733" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4041 }
%class.scoped_refptr.4041 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.4042", %"class.WTF::Vector.46", %"class.WTF::Vector.4044", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.4042" = type { %"class.base::RefCounted.4043" }
%"class.base::RefCounted.4043" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.4044" = type { %"class.WTF::VectorBuffer.4045" }
%"class.WTF::VectorBuffer.4045" = type { %"class.WTF::VectorBufferBase.4046" }
%"class.WTF::VectorBufferBase.4046" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.4047 }
%union.anon.4047 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent.1734" = type { %"class.blink::PersistentBase.1735" }
%"class.blink::PersistentBase.1735" = type { %"class.blink::HeapHashMap.1736"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1736" = type { %"class.WTF::HashMap.1739" }
%"class.WTF::HashMap.1739" = type { %"class.WTF::HashTable.1740" }
%"class.WTF::HashTable.1740" = type <{ %"struct.WTF::KeyValuePair.1742"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1742" = type opaque
%"class.blink::Persistent.1743" = type { %"class.blink::PersistentBase.1744" }
%"class.blink::PersistentBase.1744" = type { %"class.blink::HeapVector.1745"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1745" = type { %"class.WTF::Vector.1748" }
%"class.WTF::Vector.1748" = type { %"class.WTF::VectorBuffer.1749" }
%"class.WTF::VectorBuffer.1749" = type { %"class.WTF::VectorBufferBase.1750" }
%"class.WTF::VectorBufferBase.1750" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1751", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.1756" = type { %class.scoped_refptr.1757 }
%class.scoped_refptr.1757 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1758", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1758" = type { %"class.base::RefCounted.1759" }
%"class.base::RefCounted.1759" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.118" = type { %"class.WTF::VectorBuffer.119" }
%"class.WTF::VectorBuffer.119" = type { %"class.WTF::VectorBufferBase.120" }
%"class.WTF::VectorBufferBase.120" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.1760 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1761", %"class.WTF::Vector.1763" }
%"class.WTF::RefCounted.1761" = type { %"class.base::RefCounted.1762" }
%"class.base::RefCounted.1762" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1763" = type { %"class.WTF::VectorBuffer.1764" }
%"class.WTF::VectorBuffer.1764" = type { %"class.WTF::VectorBufferBase.1765" }
%"class.WTF::VectorBufferBase.1765" = type { %"struct.std::__1::pair.1766"*, i32, i32 }
%"struct.std::__1::pair.1766" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1769 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1770", [4 x i8], %"class.WTF::Vector.1772" }
%"class.WTF::RefCounted.1770" = type { %"class.base::RefCounted.1771" }
%"class.base::RefCounted.1771" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1774", [28 x i8] }>
%"class.WTF::VectorBufferBase.1774" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1777" = type { %"class.blink::PersistentBase.1778" }
%"class.blink::PersistentBase.1778" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1779" = type { %"class.blink::PersistentBase.1780" }
%"class.blink::PersistentBase.1780" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1783", %"class.blink::Member.1785" }
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1787" = type { %class.scoped_refptr.1788 }
%class.scoped_refptr.1788 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1789", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1789" = type { %"class.base::RefCounted.1790" }
%"class.base::RefCounted.1790" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1791" = type { %class.scoped_refptr.1792 }
%class.scoped_refptr.1792 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1793", [4 x i8], %"class.blink::DataRef.1795", %"class.blink::DataRef.1861", %"class.blink::TransformOperations", %class.scoped_refptr.1769, %"class.blink::Persistent.1981", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1793" = type { %"class.base::RefCounted.1794" }
%"class.base::RefCounted.1794" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1795" = type { %class.scoped_refptr.1796 }
%class.scoped_refptr.1796 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1797", [4 x i8], %"class.blink::DataRef.1799", %"class.blink::Persistent.1837", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1797" = type { %"class.base::RefCounted.1798" }
%"class.base::RefCounted.1798" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1799" = type { %class.scoped_refptr.1800 }
%class.scoped_refptr.1800 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1801", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1819, %class.scoped_refptr.1822, %class.scoped_refptr.1825, %class.scoped_refptr.1828, %class.scoped_refptr.1829, %class.scoped_refptr.1830, %"class.blink::Persistent.1837", %"class.blink::Persistent.1852", %"class.absl::optional.1856", %"class.absl::optional.1856", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1803", %"class.std::__1::unique_ptr.1808" }
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1808" = type { %"class.std::__1::__compressed_pair.1809" }
%"class.std::__1::__compressed_pair.1809" = type { %"struct.std::__1::__compressed_pair_elem.1810" }
%"struct.std::__1::__compressed_pair_elem.1810" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1811", %"class.WTF::Vector.1803", i32, i32 }
%"class.WTF::Vector.1811" = type { %"class.WTF::VectorBuffer.1812" }
%"class.WTF::VectorBuffer.1812" = type { %"class.WTF::VectorBufferBase.1813" }
%"class.WTF::VectorBufferBase.1813" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1819 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1820", [4 x i8] }>
%"class.WTF::RefCounted.1820" = type { %"class.base::RefCounted.1821" }
%"class.base::RefCounted.1821" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1822 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1823", [4 x i8] }>
%"class.WTF::RefCounted.1823" = type { %"class.base::RefCounted.1824" }
%"class.base::RefCounted.1824" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1825 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1826" }>
%"class.WTF::RefCounted.1826" = type { %"class.base::RefCounted.1827" }
%"class.base::RefCounted.1827" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1828 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1829 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1830 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1831", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1831" = type { %"class.base::RefCounted.1832" }
%"class.base::RefCounted.1832" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1833" }
%"class.blink::DataRef.1833" = type { %class.scoped_refptr.1834 }
%class.scoped_refptr.1834 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1777", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1835" }
%"class.WTF::RefCounted.1835" = type { %"class.base::RefCounted.1836" }
%"class.base::RefCounted.1836" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1852" = type { %"class.blink::PersistentBase.1853" }
%"class.blink::PersistentBase.1853" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1822, %"class.blink::Member.1751", i32, [4 x i8] }>
%"class.absl::optional.1856" = type { %"class.absl::optional_internal::optional_data.1857" }
%"class.absl::optional_internal::optional_data.1857" = type { %"class.absl::optional_internal::optional_data_base.1858" }
%"class.absl::optional_internal::optional_data_base.1858" = type { %"class.absl::optional_internal::optional_data_dtor_base.1859" }
%"class.absl::optional_internal::optional_data_dtor_base.1859" = type { i8, [3 x i8], %union.anon.1860 }
%union.anon.1860 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1837" = type { %"class.blink::PersistentBase.1838" }
%"class.blink::PersistentBase.1838" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1841" }
%"class.blink::HeapVector.1841" = type { %"class.WTF::Vector.1844" }
%"class.WTF::Vector.1844" = type { %"class.WTF::VectorBuffer.1845" }
%"class.WTF::VectorBuffer.1845" = type { %"class.WTF::VectorBufferBase.1846" }
%"class.WTF::VectorBufferBase.1846" = type { %"class.blink::Member.1847"*, i32, i32 }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1861" = type { %class.scoped_refptr.1862 }
%class.scoped_refptr.1862 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1863", %"class.blink::DataRef.1865", %"class.blink::DataRef.1869", %"class.blink::DataRef.1878", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1897", %"class.std::__1::unique_ptr.1908", %"class.std::__1::unique_ptr.1947", %"class.std::__1::unique_ptr.1958", %"class.std::__1::unique_ptr.1969", %"class.WTF::Vector.46", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1863" = type { %"class.base::RefCounted.1864" }
%"class.base::RefCounted.1864" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1865" = type { %class.scoped_refptr.1866 }
%class.scoped_refptr.1866 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1867", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1867" = type { %"class.base::RefCounted.1868" }
%"class.base::RefCounted.1868" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1869" = type { %class.scoped_refptr.1870 }
%class.scoped_refptr.1870 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1871", [4 x i8], %"class.WTF::Vector.1873", i8, [7 x i8] }>
%"class.WTF::RefCounted.1871" = type { %"class.base::RefCounted.1872" }
%"class.base::RefCounted.1872" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1873" = type { %"class.WTF::VectorBuffer.1874" }
%"class.WTF::VectorBuffer.1874" = type { %"class.WTF::VectorBufferBase.1875" }
%"class.WTF::VectorBufferBase.1875" = type { i32*, i32, i32 }
%"class.blink::DataRef.1878" = type { %class.scoped_refptr.1879 }
%class.scoped_refptr.1879 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1880", [4 x i8], %"class.WTF::HashMap.1882", %"class.WTF::HashMap.1882", %"class.WTF::HashMap.1882", %"class.WTF::HashMap.1882", %"class.WTF::HashMap.1882", %"class.WTF::HashMap.1882", %"class.WTF::HashMap.1887", %"class.WTF::HashMap.1887", %"class.WTF::HashMap.1887", %"class.WTF::HashMap.1887", %"class.WTF::HashMap.1892", %"class.WTF::Vector.1803", %"class.WTF::Vector.1803", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1880" = type { %"class.base::RefCounted.1881" }
%"class.base::RefCounted.1881" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1882" = type { %"class.WTF::HashTable.1883" }
%"class.WTF::HashTable.1883" = type <{ %"struct.WTF::KeyValuePair.1886"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1886" = type { %"class.WTF::String", %"class.WTF::Vector.4031" }
%"class.WTF::Vector.4031" = type { %"class.WTF::VectorBuffer.4032" }
%"class.WTF::VectorBuffer.4032" = type { %"class.WTF::VectorBufferBase.4033" }
%"class.WTF::VectorBufferBase.4033" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"struct.WTF::KeyValuePair.1891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1891" = type { i64, %"class.WTF::Vector.46" }
%"class.WTF::HashMap.1892" = type { %"class.WTF::HashTable.1893" }
%"class.WTF::HashTable.1893" = type <{ %"struct.WTF::KeyValuePair.1896"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1896" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1897" = type { %"class.std::__1::__compressed_pair.1898" }
%"class.std::__1::__compressed_pair.1898" = type { %"struct.std::__1::__compressed_pair_elem.1899" }
%"struct.std::__1::__compressed_pair_elem.1899" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1900" }
%"class.WTF::HashMap.1900" = type { %"class.WTF::HashTable.1901" }
%"class.WTF::HashTable.1901" = type <{ %"struct.WTF::KeyValuePair.1904"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1904" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.4036", %"class.absl::optional.4036", %"class.absl::optional.4036" }
%"class.absl::optional.4036" = type { %"class.absl::optional_internal::optional_data.4037" }
%"class.absl::optional_internal::optional_data.4037" = type { %"class.absl::optional_internal::optional_data_base.4038" }
%"class.absl::optional_internal::optional_data_base.4038" = type { %"class.absl::optional_internal::optional_data_dtor_base.4039" }
%"class.absl::optional_internal::optional_data_dtor_base.4039" = type { i8, %union.anon.4040 }
%union.anon.4040 = type { i32 }
%"class.std::__1::unique_ptr.1908" = type { %"class.std::__1::__compressed_pair.1909" }
%"class.std::__1::__compressed_pair.1909" = type { %"struct.std::__1::__compressed_pair_elem.1910" }
%"struct.std::__1::__compressed_pair_elem.1910" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.118", %"class.WTF::Vector.1924", %"class.WTF::Vector.1911", %"class.WTF::Vector.1929", %"class.WTF::Vector.1934", %"class.WTF::Vector.1939" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1911", %"class.WTF::Vector.1911", %"class.WTF::Vector.1916" }
%"class.WTF::Vector.1916" = type { %"class.WTF::VectorBuffer.1917" }
%"class.WTF::VectorBuffer.1917" = type { %"class.WTF::VectorBufferBase.1918" }
%"class.WTF::VectorBufferBase.1918" = type { %class.scoped_refptr.1919*, i32, i32 }
%class.scoped_refptr.1919 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1920", i32 }
%"class.WTF::ThreadSafeRefCounted.1920" = type { %"class.base::RefCountedThreadSafe.1921" }
%"class.base::RefCountedThreadSafe.1921" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1924" = type { %"class.WTF::VectorBuffer.1925" }
%"class.WTF::VectorBuffer.1925" = type { %"class.WTF::VectorBufferBase.1926" }
%"class.WTF::VectorBufferBase.1926" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1911" = type { %"class.WTF::VectorBuffer.1912" }
%"class.WTF::VectorBuffer.1912" = type { %"class.WTF::VectorBufferBase.1913" }
%"class.WTF::VectorBufferBase.1913" = type { double*, i32, i32 }
%"class.WTF::Vector.1929" = type { %"class.WTF::VectorBuffer.1930" }
%"class.WTF::VectorBuffer.1930" = type { %"class.WTF::VectorBufferBase.1931" }
%"class.WTF::VectorBufferBase.1931" = type { i32*, i32, i32 }
%"class.WTF::Vector.1934" = type { %"class.WTF::VectorBuffer.1935" }
%"class.WTF::VectorBuffer.1935" = type { %"class.WTF::VectorBufferBase.1936" }
%"class.WTF::VectorBufferBase.1936" = type { i32*, i32, i32 }
%"class.WTF::Vector.1939" = type { %"class.WTF::VectorBuffer.1940" }
%"class.WTF::VectorBuffer.1940" = type { %"class.WTF::VectorBufferBase.1941" }
%"class.WTF::VectorBufferBase.1941" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1947" = type { %"class.std::__1::__compressed_pair.1948" }
%"class.std::__1::__compressed_pair.1948" = type { %"struct.std::__1::__compressed_pair_elem.1949" }
%"struct.std::__1::__compressed_pair_elem.1949" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1950" }
%"class.WTF::Vector.1950" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1952" }
%"class.WTF::VectorBufferBase.1952" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1958" = type { %"class.std::__1::__compressed_pair.1959" }
%"class.std::__1::__compressed_pair.1959" = type { %"struct.std::__1::__compressed_pair_elem.1960" }
%"struct.std::__1::__compressed_pair_elem.1960" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1961" }
%"class.WTF::Vector.1961" = type { %"class.WTF::VectorBuffer.1962" }
%"class.WTF::VectorBuffer.1962" = type { %"class.WTF::VectorBufferBase.1963" }
%"class.WTF::VectorBufferBase.1963" = type { %"class.blink::Persistent.1777"*, i32, i32 }
%"class.std::__1::unique_ptr.1969" = type { %"class.std::__1::__compressed_pair.1970" }
%"class.std::__1::__compressed_pair.1970" = type { %"struct.std::__1::__compressed_pair_elem.1971" }
%"struct.std::__1::__compressed_pair_elem.1971" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1777", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1975" }
%"class.WTF::Vector.1975" = type { %"class.WTF::VectorBuffer.1976" }
%"class.WTF::VectorBuffer.1976" = type { %"class.WTF::VectorBufferBase.1977" }
%"class.WTF::VectorBufferBase.1977" = type { %class.scoped_refptr.1978*, i32, i32 }
%class.scoped_refptr.1978 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1826", [4 x i8] }>
%"class.blink::Persistent.1981" = type { %"class.blink::PersistentBase.1982" }
%"class.blink::PersistentBase.1982" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1985" }
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1987" = type { %class.scoped_refptr.1988 }
%class.scoped_refptr.1988 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1989", [4 x i8], %"class.blink::DataRef.1991", %"class.blink::DataRef.1995", %"class.blink::DataRef.2016", %"class.blink::DataRef.2034", %"class.blink::DataRef.2046", %"class.blink::DataRef.2050", %class.scoped_refptr.2020, i32, [4 x i8] }>
%"class.WTF::RefCounted.1989" = type { %"class.base::RefCounted.1990" }
%"class.base::RefCounted.1990" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1991" = type { %class.scoped_refptr.1992 }
%class.scoped_refptr.1992 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1993", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1993" = type { %"class.base::RefCounted.1994" }
%"class.base::RefCounted.1994" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1995" = type { %class.scoped_refptr.1996 }
%class.scoped_refptr.1996 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1997", %class.scoped_refptr.1999, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1997" = type { %"class.base::RefCounted.1998" }
%"class.base::RefCounted.1998" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1999 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.2000", %"class.std::__1::unique_ptr.2006", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1823" }>
%"class.std::__1::unique_ptr.2000" = type { %"class.std::__1::__compressed_pair.2001" }
%"class.std::__1::__compressed_pair.2001" = type { %"struct.std::__1::__compressed_pair_elem.2002" }
%"struct.std::__1::__compressed_pair_elem.2002" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.2006" = type { %"class.std::__1::__compressed_pair.2007" }
%"class.std::__1::__compressed_pair.2007" = type { %"struct.std::__1::__compressed_pair_elem.2008" }
%"struct.std::__1::__compressed_pair_elem.2008" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.2009, i32, %"struct.std::__1::atomic.436", %"struct.std::__1::atomic.436", i8, i8 }>
%class.sk_sp.2009 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.2010, %class.SkTDArray.2011, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.71" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.2010 = type { i8*, i32, i32 }
%class.SkTDArray.2011 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.2012 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.71", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.2012 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.355", [3 x i8] }
%"class.blink::DataRef.2016" = type { %class.scoped_refptr.2017 }
%class.scoped_refptr.2017 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.2018", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.2018" = type { %"class.base::RefCounted.2019" }
%"class.base::RefCounted.2019" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.2020, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.2034" = type { %class.scoped_refptr.2035 }
%class.scoped_refptr.2035 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.2036", [4 x i8], %class.scoped_refptr.2038, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.2036" = type { %"class.base::RefCounted.2037" }
%"class.base::RefCounted.2037" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2038 = type { %"class.base::RefCountedData.2039"* }
%"class.base::RefCountedData.2039" = type { %"class.base::RefCountedThreadSafe.2040", %"class.WTF::Vector.2041" }
%"class.base::RefCountedThreadSafe.2040" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2041" = type { %"class.WTF::VectorBuffer.2042" }
%"class.WTF::VectorBuffer.2042" = type { %"class.WTF::VectorBufferBase.2043" }
%"class.WTF::VectorBufferBase.2043" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.2046" = type { %class.scoped_refptr.2047 }
%class.scoped_refptr.2047 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.2048", %class.scoped_refptr.2020, %class.scoped_refptr.2020, %class.scoped_refptr.2020 }
%"class.WTF::RefCounted.2048" = type { %"class.base::RefCounted.2049" }
%"class.base::RefCounted.2049" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.2050" = type { %class.scoped_refptr.2051 }
%class.scoped_refptr.2051 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.2052", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.2052" = type { %"class.base::RefCounted.2053" }
%"class.base::RefCounted.2053" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2020 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.2021", %"class.blink::Persistent.2023", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.2021" = type { %"class.base::RefCounted.2022" }
%"class.base::RefCounted.2022" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.2023" = type { %"class.blink::PersistentBase.2024" }
%"class.blink::PersistentBase.2024" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.1050", %"class.blink::HeapHashMap.2027" }
%"class.blink::HeapHashMap.2027" = type { %"class.WTF::HashMap.2030" }
%"class.WTF::HashMap.2030" = type { %"class.WTF::HashTable.2031" }
%"class.WTF::HashTable.2031" = type <{ %"struct.WTF::KeyValuePair.2033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2033" = type opaque
%"class.blink::DataRef.2054" = type { %class.scoped_refptr.2055 }
%class.scoped_refptr.2055 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.2056", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.2056" = type { %"class.base::RefCounted.2057" }
%"class.base::RefCounted.2057" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.2058" = type { %class.scoped_refptr.2059 }
%class.scoped_refptr.2059 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.2060", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.2060" = type { %"class.base::RefCounted.2061" }
%"class.base::RefCounted.2061" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.2062" = type { %class.scoped_refptr.2063 }
%class.scoped_refptr.2063 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.2064", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.2064" = type { %"class.base::RefCounted.2065" }
%"class.base::RefCounted.2065" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.2066" = type { %class.scoped_refptr.2067 }
%class.scoped_refptr.2067 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.2068", %class.scoped_refptr.2070 }
%"class.WTF::RefCounted.2068" = type { %"class.base::RefCounted.2069" }
%"class.base::RefCounted.2069" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2070 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.2651", %"class.blink::StyleVariables", %class.scoped_refptr.2070 }
%"class.WTF::RefCounted.2651" = type { %"class.base::RefCounted.2652" }
%"class.base::RefCounted.2652" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.2071" = type { %"class.base::RefCounted.2072" }
%"class.base::RefCounted.2072" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2073" = type { %"class.std::__1::__compressed_pair.2074" }
%"class.std::__1::__compressed_pair.2074" = type { %"struct.std::__1::__compressed_pair_elem.2075" }
%"struct.std::__1::__compressed_pair_elem.2075" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.2076" }
%"class.std::__1::unique_ptr.2076" = type { %"class.std::__1::__compressed_pair.2077" }
%"class.std::__1::__compressed_pair.2077" = type { %"struct.std::__1::__compressed_pair_elem.2078" }
%"struct.std::__1::__compressed_pair_elem.2078" = type { %"class.WTF::Vector.2079"* }
%"class.WTF::Vector.2079" = type { %"class.WTF::VectorBuffer.4051" }
%"class.WTF::VectorBuffer.4051" = type { %"class.WTF::VectorBufferBase.4052", [32 x i8] }
%"class.WTF::VectorBufferBase.4052" = type { %class.scoped_refptr.1645*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2087" }
%"class.std::__1::unique_ptr.2087" = type { %"class.std::__1::__compressed_pair.2088" }
%"class.std::__1::__compressed_pair.2088" = type { %"struct.std::__1::__compressed_pair_elem.2089" }
%"struct.std::__1::__compressed_pair_elem.2089" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.2090", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.2096", %"class.std::__1::unique_ptr.2220", i8, %"class.absl::optional.2226", %class.scoped_refptr.2202, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2231" }
%"class.std::__1::unique_ptr.2090" = type { %"class.std::__1::__compressed_pair.2091" }
%"class.std::__1::__compressed_pair.2091" = type { %"struct.std::__1::__compressed_pair_elem.2092" }
%"struct.std::__1::__compressed_pair_elem.2092" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.2096" = type { %"class.std::__1::__compressed_pair.2097" }
%"class.std::__1::__compressed_pair.2097" = type { %"struct.std::__1::__compressed_pair_elem.2098" }
%"struct.std::__1::__compressed_pair_elem.2098" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.2099, %class.scoped_refptr.2099, %class.scoped_refptr.2099, %class.scoped_refptr.2099, %class.scoped_refptr.2099, %class.scoped_refptr.2099, %class.scoped_refptr.2134, %class.scoped_refptr.2150, %class.scoped_refptr.2151, %class.scoped_refptr.2151, %class.scoped_refptr.2151, %class.scoped_refptr.2151, %class.scoped_refptr.2151, %class.scoped_refptr.2151, %class.scoped_refptr.2192, %class.scoped_refptr.2193, %class.scoped_refptr.2193, %class.scoped_refptr.2193, %class.scoped_refptr.2193, %class.scoped_refptr.2193, %class.scoped_refptr.2193, %class.scoped_refptr.2193, %class.scoped_refptr.2193, %class.scoped_refptr.2216 }
%class.scoped_refptr.2099 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2116" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2100", i8, i8, %class.scoped_refptr.2102, i32, i32 }
%"class.WTF::RefCounted.2100" = type { %"class.base::RefCounted.2101" }
%"class.base::RefCounted.2101" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2102 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2109, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2110", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2103" }
%"class.std::__1::unique_ptr.2103" = type { %"class.std::__1::__compressed_pair.2104" }
%"class.std::__1::__compressed_pair.2104" = type { %"struct.std::__1::__compressed_pair_elem.2105" }
%"struct.std::__1::__compressed_pair_elem.2105" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.2109 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2135", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2135" = type { %"class.WTF::RefCounted.2136", i8, i8, %class.scoped_refptr.2109, i32, i32 }
%"class.WTF::RefCounted.2136" = type { %"class.base::RefCounted.2137" }
%"class.base::RefCounted.2137" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2138" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2138" = type { %"class.absl::optional_internal::optional_data.2139" }
%"class.absl::optional_internal::optional_data.2139" = type { %"class.absl::optional_internal::optional_data_base.2140" }
%"class.absl::optional_internal::optional_data_base.2140" = type { %"class.absl::optional_internal::optional_data_dtor_base.2141" }
%"class.absl::optional_internal::optional_data_dtor_base.2141" = type { i8, %union.anon.2142 }
%union.anon.2142 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2143", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2143" = type { %"class.std::__1::__vector_base.2144" }
%"class.std::__1::__vector_base.2144" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2145" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.2145" = type { %"struct.std::__1::__compressed_pair_elem.2146" }
%"struct.std::__1::__compressed_pair_elem.2146" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2110" = type { %"class.std::__1::__compressed_pair.2111" }
%"class.std::__1::__compressed_pair.2111" = type { %"struct.std::__1::__compressed_pair_elem.2112" }
%"struct.std::__1::__compressed_pair_elem.2112" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2116" = type { %"class.std::__1::__compressed_pair.2117" }
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.2118" }
%"struct.std::__1::__compressed_pair_elem.2118" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2119", %"class.std::__1::unique_ptr.2125", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2119" = type { %"class.std::__1::__compressed_pair.2120" }
%"class.std::__1::__compressed_pair.2120" = type { %"struct.std::__1::__compressed_pair_elem.2121" }
%"struct.std::__1::__compressed_pair_elem.2121" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2125" = type { %"class.std::__1::__compressed_pair.2126" }
%"class.std::__1::__compressed_pair.2126" = type { %"struct.std::__1::__compressed_pair_elem.2127" }
%"struct.std::__1::__compressed_pair_elem.2127" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.2134 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.2150 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.2151 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2152" }
%"class.blink::PaintPropertyNode.2152" = type { %"class.WTF::RefCounted.2153", i8, i8, %class.scoped_refptr.2155, i32, i32 }
%"class.WTF::RefCounted.2153" = type { %"class.base::RefCounted.2154" }
%"class.base::RefCounted.2154" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2155 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.2102, %class.scoped_refptr.2156, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.2178", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.2156 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2194" }
%"class.blink::PaintPropertyNode.2194" = type { %"class.WTF::RefCounted.2195", i8, i8, %class.scoped_refptr.2156, i32, i32 }
%"class.WTF::RefCounted.2195" = type { %"class.base::RefCounted.2196" }
%"class.base::RefCounted.2196" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.2157" }
%"class.std::__1::vector.2157" = type { %"class.std::__1::__vector_base.2158" }
%"class.std::__1::__vector_base.2158" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.2173" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.2159, [20 x float], i32, [4 x i8], %"class.std::__1::vector.2166", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.2159 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.2160, i32, %"class.absl::optional.2161", i8, i32 }
%class.sk_sp.2160 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.2161" = type { %"class.absl::optional_internal::optional_data.2162" }
%"class.absl::optional_internal::optional_data.2162" = type { %"class.absl::optional_internal::optional_data_base.2163" }
%"class.absl::optional_internal::optional_data_base.2163" = type { %"class.absl::optional_internal::optional_data_dtor_base.2164" }
%"class.absl::optional_internal::optional_data_dtor_base.2164" = type { i8, %union.anon.2165 }
%union.anon.2165 = type { %struct.SkRect }
%"class.std::__1::vector.2166" = type { %"class.std::__1::__vector_base.2167" }
%"class.std::__1::__vector_base.2167" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.2168" }
%"class.std::__1::__compressed_pair.2168" = type { %"struct.std::__1::__compressed_pair_elem.2169" }
%"struct.std::__1::__compressed_pair_elem.2169" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.2173" = type { %"struct.std::__1::__compressed_pair_elem.2174" }
%"struct.std::__1::__compressed_pair_elem.2174" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.2178" = type { %"class.std::__1::__compressed_pair.2179" }
%"class.std::__1::__compressed_pair.2179" = type { %"struct.std::__1::__compressed_pair_elem.2180" }
%"struct.std::__1::__compressed_pair_elem.2180" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.2184" }
%"class.base::internal::flat_tree.2184" = type { %"class.std::__1::vector.2185" }
%"class.std::__1::vector.2185" = type { %"class.std::__1::__vector_base.2186" }
%"class.std::__1::__vector_base.2186" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2187" }
%"class.std::__1::__compressed_pair.2187" = type { %"struct.std::__1::__compressed_pair_elem.2188" }
%"struct.std::__1::__compressed_pair_elem.2188" = type { i32* }
%class.scoped_refptr.2192 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.2193 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.2205" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.2102, %"class.absl::optional.2197", %class.scoped_refptr.2202, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.2197" = type { %"class.absl::optional_internal::optional_data.2198" }
%"class.absl::optional_internal::optional_data.2198" = type { %"class.absl::optional_internal::optional_data_base.2199" }
%"class.absl::optional_internal::optional_data_base.2199" = type { %"class.absl::optional_internal::optional_data_dtor_base.2200" }
%"class.absl::optional_internal::optional_data_dtor_base.2200" = type { i8, [3 x i8], %union.anon.2201 }
%union.anon.2201 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.2205" = type { %"class.std::__1::__compressed_pair.2206" }
%"class.std::__1::__compressed_pair.2206" = type { %"struct.std::__1::__compressed_pair_elem.2207" }
%"struct.std::__1::__compressed_pair_elem.2207" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.2208", i32, [4 x i8] }>
%"class.WTF::Vector.2208" = type { %"class.WTF::VectorBuffer.2209" }
%"class.WTF::VectorBuffer.2209" = type { %"class.WTF::VectorBufferBase.2210" }
%"class.WTF::VectorBufferBase.2210" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.2216 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.2220" = type { %"class.std::__1::__compressed_pair.2221" }
%"class.std::__1::__compressed_pair.2221" = type { %"struct.std::__1::__compressed_pair_elem.2222" }
%"struct.std::__1::__compressed_pair_elem.2222" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2102, %class.scoped_refptr.2156, %class.scoped_refptr.2155 }
%"class.absl::optional.2226" = type { %"class.absl::optional_internal::optional_data.2227" }
%"class.absl::optional_internal::optional_data.2227" = type { %"class.absl::optional_internal::optional_data_base.2228" }
%"class.absl::optional_internal::optional_data_base.2228" = type { %"class.absl::optional_internal::optional_data_dtor_base.2229" }
%"class.absl::optional_internal::optional_data_dtor_base.2229" = type { i8, %union.anon.2230 }
%union.anon.2230 = type { %"class.blink::IntRect" }
%class.scoped_refptr.2202 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.2203", [4 x i8] }
%"class.WTF::RefCounted.2203" = type { %"class.base::RefCounted.2204" }
%"class.base::RefCounted.2204" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.2231" = type { %"class.std::__1::__compressed_pair.2232" }
%"class.std::__1::__compressed_pair.2232" = type { %"struct.std::__1::__compressed_pair_elem.2233" }
%"struct.std::__1::__compressed_pair_elem.2233" = type { %"class.blink::FragmentData"* }
%"class.blink::HeapHashMap.2240" = type { %"class.WTF::HashMap.2243" }
%"class.WTF::HashMap.2243" = type { %"class.WTF::HashTable.2244" }
%"class.WTF::HashTable.2244" = type <{ %"struct.WTF::KeyValuePair.2246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2246" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.1052", i32, i32 }
%"class.blink::Member.2249" = type { %"class.blink::MemberBase.2250" }
%"class.blink::MemberBase.2250" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.2251" = type { %"class.blink::MemberBase.2252" }
%"class.blink::MemberBase.2252" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1308", %"class.blink::Member.2647", %"class.blink::Member.2649" }
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2649" = type { %"class.blink::MemberBase.2650" }
%"class.blink::MemberBase.2650" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.2253" = type { %"class.blink::MemberBase.2254" }
%"class.blink::MemberBase.2254" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1308", %"class.blink::HeapMojoRemote.2642" }
%"class.blink::HeapMojoRemote.2642" = type { %"class.blink::Member.2643" }
%"class.blink::Member.2643" = type { %"class.blink::MemberBase.2644" }
%"class.blink::MemberBase.2644" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2255" = type { %"class.blink::MemberBase.2256" }
%"class.blink::MemberBase.2256" = type { %"class.blink::HeapHashMap.2257"* }
%"class.blink::HeapHashMap.2257" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias.826" }
%"class.base::StrongAlias.826" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.2258" = type { %"class.WTF::HashTable.2259" }
%"class.WTF::HashTable.2259" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.2262" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2265" }
%"class.WTF::VectorBuffer.2265" = type { %"class.WTF::VectorBufferBase.2266" }
%"class.WTF::VectorBufferBase.2266" = type { i64*, i32, i32 }
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1310", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1384", i32, i8, [3 x i8], %"class.blink::HeapVector.1389", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1397", %"class.blink::Member.1399", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1408", %"class.blink::Member.1464", %"class.blink::Member.1498", i8, [7 x i8] }>
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.2512", %"class.blink::Member.2513", %"class.blink::Member.2515", %"class.blink::Member.2517", %class.scoped_refptr.456, %class.scoped_refptr.456, %"class.blink::Member.2519", %"class.blink::Member.2521", %"class.blink::Member.2527", %"class.blink::Member.2531", %"class.blink::Member.2582", %"class.blink::HeapHashMap.2584", %"class.blink::HeapHashSet.2592", %"class.blink::HeapHashSet.2592", %"class.blink::HeapHashMap.2598", %"class.blink::HeapVector", %"class.blink::Member.2605", %"class.blink::HeapTaskRunnerTimer.2607", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.2609", %"class.WTF::Vector.2616", %"class.blink::HeapHashSet.2622", %"class.blink::HeapHashSet.2622", %"class.std::__1::unique_ptr.2628", %"class.base::WeakPtr.2576", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.2634", %"class.blink::Member.2637", i8, i8, %"class.base::WeakPtrFactory.2639" }
%"class.blink::ThreadState::PrefinalizerRegistration.2512" = type { i8 }
%"class.blink::Member.2513" = type { %"class.blink::MemberBase.2514" }
%"class.blink::MemberBase.2514" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.2515" = type { %"class.blink::MemberBase.2516" }
%"class.blink::MemberBase.2516" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.456 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.2519" = type { %"class.blink::MemberBase.2520" }
%"class.blink::MemberBase.2520" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.2521" = type { %"class.blink::MemberBase.2522" }
%"class.blink::MemberBase.2522" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.2525" }
%"class.blink::Member.2525" = type { %"class.blink::MemberBase.2526" }
%"class.blink::MemberBase.2526" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.2527" = type { %"class.blink::MemberBase.2528" }
%"class.blink::MemberBase.2528" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.2535", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.2537", %"class.WTF::HashSet.2542", i8, [3 x i8], i32, %"class.blink::HeapHashMap.2546", %"class.std::__1::map.2553", %"class.std::__1::map.2564", %"class.std::__1::unique_ptr.2573", %"class.blink::Member.2521", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.2580", %"class.mojo::InlinedStructPtr.1184", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.2535" = type { %"class.blink::MemberBase.2536" }
%"class.blink::MemberBase.2536" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.2537" = type { %"class.WTF::HashTable.2538" }
%"class.WTF::HashTable.2538" = type <{ %"struct.WTF::KeyValuePair.2541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2541" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.2542" = type { %"class.WTF::HashTable.2543" }
%"class.WTF::HashTable.2543" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.2546" = type { %"class.WTF::HashMap.2549" }
%"class.WTF::HashMap.2549" = type { %"class.WTF::HashTable.2550" }
%"class.WTF::HashTable.2550" = type <{ %"struct.WTF::KeyValuePair.2552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2552" = type opaque
%"class.std::__1::map.2553" = type { %"class.std::__1::__tree.2554" }
%"class.std::__1::__tree.2554" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2555", %"class.std::__1::__compressed_pair.2559" }
%"class.std::__1::__compressed_pair.2555" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.2559" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.std::__1::map.2564" = type { %"class.std::__1::__tree.2565" }
%"class.std::__1::__tree.2565" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2566", %"class.std::__1::__compressed_pair.2570" }
%"class.std::__1::__compressed_pair.2566" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.2570" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.std::__1::unique_ptr.2573" = type { %"class.std::__1::__compressed_pair.2574" }
%"class.std::__1::__compressed_pair.2574" = type { %"struct.std::__1::__compressed_pair_elem.2575" }
%"struct.std::__1::__compressed_pair_elem.2575" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.2576", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.2580" = type { %"class.blink::MemberBase.2581" }
%"class.blink::MemberBase.2581" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1184" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2582" = type { %"class.blink::MemberBase.2583" }
%"class.blink::MemberBase.2583" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.2584" = type { %"class.WTF::HashMap.2587" }
%"class.WTF::HashMap.2587" = type { %"class.WTF::HashTable.2588" }
%"class.WTF::HashTable.2588" = type <{ %"struct.WTF::KeyValuePair.2590"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2590" = type { %"class.WTF::String", %"class.blink::WeakMember.2591" }
%"class.blink::WeakMember.2591" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.51", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member", %"class.blink::ResourceResponse", %class.scoped_refptr.365, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.27", i8, %"class.absl::optional.36", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, [7 x i8], %union.anon.31 }
%union.anon.31 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.41", %"class.WTF::Vector.46" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { i32*, i32, i32 }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.149" }
%"class.WTF::HashMap.149" = type { %"class.WTF::HashTable.150" }
%"class.WTF::HashTable.150" = type <{ %"struct.WTF::KeyValuePair.152"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.152" = type <{ %"class.blink::WeakMember.4005", i32, [4 x i8] }>
%"class.blink::WeakMember.4005" = type { %"class.blink::MemberBase.4006" }
%"class.blink::MemberBase.4006" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.4007", [7 x i8], %"class.blink::Member.762", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.4007" = type { i8 }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.155" }
%"class.WTF::HashTable.155" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.157", i8, i8, %class.scoped_refptr.161, %class.scoped_refptr.359, %class.scoped_refptr.361 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.157" = type { %"class.WTF::HashTable.158" }
%"class.WTF::HashTable.158" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.161 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.359 = type { %"class.base::RefCountedData.360"* }
%"class.base::RefCountedData.360" = type opaque
%class.scoped_refptr.361 = type { %"class.base::RefCountedData.362"* }
%"class.base::RefCountedData.362" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.59, %class.scoped_refptr.59, %class.scoped_refptr.59, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.62, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.76", %"class.absl::optional.81", %"class.absl::optional.91", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.101", %"class.absl::optional.91", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.91", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.101", %"class.absl::optional.106", i8, %class.scoped_refptr.111 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.62 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.63", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.70, i8, %"class.url::Origin" }
%"class.base::RefCounted.63" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.3991" }
%"class.std::__1::__compressed_pair.3991" = type { %"struct.std::__1::__compressed_pair_elem.3992" }
%"struct.std::__1::__compressed_pair_elem.3992" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.std::__1::unique_ptr.64"* }
%class.scoped_refptr.70 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.76" = type { %"class.absl::optional_internal::optional_data.77" }
%"class.absl::optional_internal::optional_data.77" = type { %"class.absl::optional_internal::optional_data_base.78" }
%"class.absl::optional_internal::optional_data_base.78" = type { %"class.absl::optional_internal::optional_data_dtor_base.79" }
%"class.absl::optional_internal::optional_data_dtor_base.79" = type { i8, %union.anon.80 }
%union.anon.80 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.86", %"class.WTF::Vector.46", %"class.WTF::String" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %class.scoped_refptr.59*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.96", %"class.absl::optional.96" }
%"class.absl::optional.91" = type { %"class.absl::optional_internal::optional_data.92" }
%"class.absl::optional_internal::optional_data.92" = type { %"class.absl::optional_internal::optional_data_base.93" }
%"class.absl::optional_internal::optional_data_base.93" = type { %"class.absl::optional_internal::optional_data_dtor_base.94" }
%"class.absl::optional_internal::optional_data_dtor_base.94" = type { i8, %union.anon.95 }
%union.anon.95 = type { %"class.WTF::String" }
%"class.absl::optional.106" = type { %"class.absl::optional_internal::optional_data.107" }
%"class.absl::optional_internal::optional_data.107" = type { %"class.absl::optional_internal::optional_data_base.108" }
%"class.absl::optional_internal::optional_data_base.108" = type { %"class.absl::optional_internal::optional_data_dtor_base.109" }
%"class.absl::optional_internal::optional_data_dtor_base.109" = type { i8, %union.anon.110 }
%union.anon.110 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.111 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.3996", %"class.base::internal::flat_tree.3997" }
%"class.base::RefCountedThreadSafe.3996" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.3997" = type { %"class.std::__1::vector.3998" }
%"class.std::__1::vector.3998" = type { %"class.std::__1::__vector_base.3999" }
%"class.std::__1::__vector_base.3999" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4000" }
%"class.std::__1::__compressed_pair.4000" = type { %"struct.std::__1::__compressed_pair_elem.4001" }
%"struct.std::__1::__compressed_pair_elem.4001" = type { i32* }
%"class.blink::Member" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.113", %class.scoped_refptr.128, %class.scoped_refptr.129, %"struct.blink::CacheControlHeader", %"class.absl::optional.96", %"class.absl::optional.130", %"class.absl::optional.130", %"class.absl::optional.130", i64, %"class.blink::KURL", %"class.WTF::Vector.135", %"class.WTF::String", %"class.WTF::Vector.46", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.101", %"class.WTF::Vector.46", %"class.blink::KURL", %"class.absl::optional.140" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, %union.anon.117 }
%union.anon.117 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.46", %"class.WTF::String", i64, i64, %"class.WTF::Vector.118", %"class.WTF::Vector.123" }
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.128 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.129 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.130" = type { %"class.absl::optional_internal::optional_data.131" }
%"class.absl::optional_internal::optional_data.131" = type { %"class.absl::optional_internal::optional_data_base.132" }
%"class.absl::optional_internal::optional_data_base.132" = type { %"class.absl::optional_internal::optional_data_dtor_base.133" }
%"class.absl::optional_internal::optional_data_dtor_base.133" = type { i8, %union.anon.134 }
%union.anon.134 = type { %"class.base::Time" }
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.365 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.3" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.3" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5" }
%"class.WTF::VectorBufferBase.5" = type { %"class.std::__1::unique_ptr.6"*, i32, i32 }
%"class.std::__1::unique_ptr.6" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.blink::HeapHashSet.2592" = type { %"class.WTF::HashSet.2595" }
%"class.WTF::HashSet.2595" = type { %"class.WTF::HashTable.2596" }
%"class.WTF::HashTable.2596" = type <{ %"class.blink::WeakMember.2591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.2598" = type { %"class.WTF::HashMap.2601" }
%"class.WTF::HashMap.2601" = type { %"class.WTF::HashTable.2602" }
%"class.WTF::HashTable.2602" = type <{ %"struct.WTF::KeyValuePair.2604"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2604" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.759" }
%"class.WTF::Vector.759" = type { %"class.WTF::VectorBuffer.760" }
%"class.WTF::VectorBuffer.760" = type { %"class.WTF::VectorBufferBase.761" }
%"class.WTF::VectorBufferBase.761" = type { %"class.blink::Member.762"*, i32, i32 }
%"class.blink::Member.2605" = type { %"class.blink::MemberBase.2606" }
%"class.blink::MemberBase.2606" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.2607" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2608", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.456, %"class.base::WeakPtrFactory.1197" }
%"class.base::WeakPtrFactory.1197" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2608" = type { %"class.blink::MemberBase.2268" }
%"class.blink::HeapHashMap.2609" = type { %"class.WTF::HashMap.2612" }
%"class.WTF::HashMap.2612" = type { %"class.WTF::HashTable.2613" }
%"class.WTF::HashTable.2613" = type <{ %"struct.WTF::KeyValuePair.2615"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2615" = type opaque
%"class.WTF::Vector.2616" = type { %"class.WTF::VectorBuffer.2617" }
%"class.WTF::VectorBuffer.2617" = type { %"class.WTF::VectorBufferBase.2618" }
%"class.WTF::VectorBufferBase.2618" = type { %class.scoped_refptr.2619*, i32, i32 }
%class.scoped_refptr.2619 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.2622" = type { %"class.WTF::HashSet.2625" }
%"class.WTF::HashSet.2625" = type { %"class.WTF::HashTable.2626" }
%"class.WTF::HashTable.2626" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2628" = type { %"class.std::__1::__compressed_pair.2629" }
%"class.std::__1::__compressed_pair.2629" = type { %"struct.std::__1::__compressed_pair_elem.2630" }
%"struct.std::__1::__compressed_pair_elem.2630" = type { %"class.WTF::HashSet.1044"* }
%"class.WTF::HashSet.1044" = type { %"class.WTF::HashTable.1045" }
%"class.WTF::HashTable.1045" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.2576" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.2634" = type { %"class.blink::Member.2635" }
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2637" = type { %"class.blink::MemberBase.2638" }
%"class.blink::MemberBase.2638" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.2639" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2269" = type { %"class.blink::MemberBase.2270" }
%"class.blink::MemberBase.2270" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.2271" = type { %"class.blink::MemberBase.2272" }
%"class.blink::MemberBase.2272" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.2273" = type { %"class.blink::MemberBase.2274" }
%"class.blink::MemberBase.2274" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.2275" = type { %"class.std::__1::__compressed_pair.2276" }
%"class.std::__1::__compressed_pair.2276" = type { %"struct.std::__1::__compressed_pair_elem.2277" }
%"struct.std::__1::__compressed_pair_elem.2277" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.2283" = type { %"class.blink::MemberBase.2284" }
%"class.blink::MemberBase.2284" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.384", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1244, %"class.WTF::Vector.1263", %"class.WTF::Vector.1263", %"class.blink::Member.1052", %"class.blink::Member.1268", %"class.blink::HeapHashSet.1272", %"class.blink::Member.1201", %"class.WTF::HashSet.1279", %"class.WTF::TextPosition", %"class.blink::Member.1283", %"class.blink::HeapVector.1285", %"class.blink::Member.1292" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1244 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.1245", %"class.WTF::Vector.1247" }
%"class.WTF::RefCounted.1245" = type { %"class.base::RefCounted.1246" }
%"class.base::RefCounted.1246" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1247" = type { %"class.WTF::VectorBuffer.1248" }
%"class.WTF::VectorBuffer.1248" = type { %"class.WTF::VectorBufferBase.1249" }
%"class.WTF::VectorBufferBase.1249" = type { %"class.std::__1::unique_ptr.1250"*, i32, i32 }
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.1253", %"class.WTF::String" }
%"class.WTF::Vector.1253" = type { %"class.WTF::VectorBuffer.1254" }
%"class.WTF::VectorBuffer.1254" = type { %"class.WTF::VectorBufferBase.1255" }
%"class.WTF::VectorBufferBase.1255" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type opaque
%"class.WTF::Vector.1263" = type { %"class.WTF::VectorBuffer.1264" }
%"class.WTF::VectorBuffer.1264" = type { %"class.WTF::VectorBufferBase.1265" }
%"class.WTF::VectorBufferBase.1265" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1270" }
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1272" = type { %"class.WTF::HashSet.1275" }
%"class.WTF::HashSet.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"class.blink::WeakMember.1278"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1278" = type { %"class.blink::MemberBase.1055" }
%"class.WTF::HashSet.1279" = type { %"class.WTF::HashTable.1280" }
%"class.WTF::HashTable.1280" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.1244, %"class.blink::Member.1242", %"class.blink::Member.1268" }
%"class.blink::HeapVector.1285" = type { %"class.WTF::Vector.1288" }
%"class.WTF::Vector.1288" = type { %"class.WTF::VectorBuffer.1289" }
%"class.WTF::VectorBuffer.1289" = type { %"class.WTF::VectorBufferBase.1290" }
%"class.WTF::VectorBufferBase.1290" = type { %"class.blink::Member.1268"*, i32, i32 }
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.WTF::Vector.2285" = type { %"class.WTF::VectorBuffer.2286" }
%"class.WTF::VectorBuffer.2286" = type { %"class.WTF::VectorBufferBase.2287" }
%"class.WTF::VectorBufferBase.2287" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.161 }
%"class.blink::Member.2247" = type { %"class.blink::MemberBase.2248" }
%"class.blink::MemberBase.2248" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1201", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1052", %"class.blink::Member.1052", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.2292" }
%"class.blink::HeapHashMap.2292" = type { %"class.WTF::HashMap.2295" }
%"class.WTF::HashMap.2295" = type { %"class.WTF::HashTable.2296" }
%"class.WTF::HashTable.2296" = type <{ %"struct.WTF::KeyValuePair.2298"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2298" = type opaque
%"class.blink::Member.2299" = type { %"class.blink::MemberBase.2300" }
%"class.blink::MemberBase.2300" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.2301" = type { %"class.WTF::HashSet.2304" }
%"class.WTF::HashSet.2304" = type { %"class.WTF::HashTable.2305" }
%"class.WTF::HashTable.2305" = type <{ %"class.blink::WeakMember.2307"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2307" = type opaque
%"class.blink::HeapHashSet.2308" = type { %"class.WTF::HashSet.2311" }
%"class.WTF::HashSet.2311" = type { %"class.WTF::HashTable.2312" }
%"class.WTF::HashTable.2312" = type <{ %"class.blink::WeakMember.2314"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2314" = type opaque
%"class.blink::Member.2315" = type { %"class.blink::MemberBase.2316" }
%"class.blink::MemberBase.2316" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.2317" = type { %"class.blink::MemberBase.2318" }
%"class.blink::MemberBase.2318" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.2319" = type { %"class.blink::MemberBase.2320" }
%"class.blink::MemberBase.2320" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1054", %"class.blink::HeapVector.1236" }
%"class.blink::Member.2321" = type { %"class.blink::MemberBase.2322" }
%"class.blink::MemberBase.2322" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.2325" = type { %"class.WTF::HashMap.2328" }
%"class.WTF::HashMap.2328" = type { %"class.WTF::HashTable.2329" }
%"class.WTF::HashTable.2329" = type <{ %"struct.WTF::KeyValuePair.2331"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2331" = type opaque
%"class.WTF::Vector.2332" = type { %"class.WTF::VectorBuffer.2333" }
%"class.WTF::VectorBuffer.2333" = type { %"class.WTF::VectorBufferBase.2334" }
%"class.WTF::VectorBufferBase.2334" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.2337" = type { %"class.blink::MemberBase.2338" }
%"class.blink::MemberBase.2338" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.2341" = type { %"class.blink::MemberBase.2342" }
%"class.blink::MemberBase.2342" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.2343" = type { %"class.blink::MemberBase.2344" }
%"class.blink::MemberBase.2344" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.2345" = type { %"class.WTF::Vector.2348" }
%"class.WTF::Vector.2348" = type { %"class.WTF::VectorBuffer.2349" }
%"class.WTF::VectorBuffer.2349" = type { %"class.WTF::VectorBufferBase.2350" }
%"class.WTF::VectorBufferBase.2350" = type { %"class.blink::Member.2351"*, i32, i32 }
%"class.blink::Member.2351" = type opaque
%"class.std::__1::unique_ptr.2353" = type { %"class.std::__1::__compressed_pair.2354" }
%"class.std::__1::__compressed_pair.2354" = type { %"struct.std::__1::__compressed_pair_elem.2355" }
%"struct.std::__1::__compressed_pair_elem.2355" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.2359" = type { %"class.WTF::HashSet.2362" }
%"class.WTF::HashSet.2362" = type { %"class.WTF::HashTable.2363" }
%"class.WTF::HashTable.2363" = type <{ %"class.blink::WeakMember.2365"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2365" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.2366", i32, [4 x i8] }>
%"class.WTF::Vector.2366" = type { %"class.WTF::VectorBuffer.2367" }
%"class.WTF::VectorBuffer.2367" = type { %"class.WTF::VectorBufferBase.2368" }
%"class.WTF::VectorBufferBase.2368" = type { %"struct.std::__1::pair.2369"*, i32, i32 }
%"struct.std::__1::pair.2369" = type opaque
%"class.blink::Member.2372" = type { %"class.blink::MemberBase.2373" }
%"class.blink::MemberBase.2373" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.2374" = type { %"class.WTF::VectorBuffer.2375" }
%"class.WTF::VectorBuffer.2375" = type { %"class.WTF::VectorBufferBase.2376" }
%"class.WTF::VectorBufferBase.2376" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2379" = type { %"class.std::__1::__compressed_pair.2380" }
%"class.std::__1::__compressed_pair.2380" = type { %"struct.std::__1::__compressed_pair_elem.2381" }
%"struct.std::__1::__compressed_pair_elem.2381" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1218" = type { %"class.WTF::Vector.1221" }
%"class.WTF::Vector.1221" = type { %"class.WTF::VectorBuffer.1222" }
%"class.WTF::VectorBuffer.1222" = type { %"class.WTF::VectorBufferBase.1223" }
%"class.WTF::VectorBufferBase.1223" = type { %"class.blink::Member.1050"*, i32, i32 }
%"class.blink::HeapVector.2385" = type { %"class.WTF::Vector.2388" }
%"class.WTF::Vector.2388" = type { %"class.WTF::VectorBuffer.2389" }
%"class.WTF::VectorBuffer.2389" = type { %"class.WTF::VectorBufferBase.2390" }
%"class.WTF::VectorBufferBase.2390" = type { %"class.blink::Member.2391"*, i32, i32 }
%"class.blink::Member.2391" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1201" }
%"class.blink::Member.2393" = type { %"class.blink::MemberBase.2394" }
%"class.blink::MemberBase.2394" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2395" = type { %"class.blink::MemberBase.2396" }
%"class.blink::MemberBase.2396" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2401" = type { %"class.blink::MemberBase.2402" }
%"class.blink::MemberBase.2402" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2403" = type { %"class.WTF::HashTable.2404" }
%"class.WTF::HashTable.2404" = type <{ %"struct.WTF::KeyValuePair.2407"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2407" = type opaque
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2412" = type { %"class.blink::MemberBase.2413" }
%"class.blink::MemberBase.2413" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2414" = type { %"class.blink::MemberBase.2415" }
%"class.blink::MemberBase.2415" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.2290" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2291", { i64, i64 } }
%"class.blink::WeakMember.2291" = type { %"class.blink::MemberBase.1202" }
%"class.blink::HeapHashSet.2416" = type { %"class.WTF::HashSet.2419" }
%"class.WTF::HashSet.2419" = type { %"class.WTF::HashTable.2420" }
%"class.WTF::HashTable.2420" = type <{ %"class.blink::Member.2422"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2422" = type opaque
%"class.blink::Member.2423" = type { %"class.blink::MemberBase.2424" }
%"class.blink::MemberBase.2424" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2425" = type { %"class.blink::MemberBase.2426" }
%"class.blink::MemberBase.2426" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2431" = type { %"class.blink::MemberBase.2432" }
%"class.blink::MemberBase.2432" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2433" = type { %"class.std::__1::__compressed_pair.2434" }
%"class.std::__1::__compressed_pair.2434" = type { %"struct.std::__1::__compressed_pair_elem.2435" }
%"struct.std::__1::__compressed_pair_elem.2435" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2439" = type { %"class.std::__1::__compressed_pair.2440" }
%"class.std::__1::__compressed_pair.2440" = type { %"struct.std::__1::__compressed_pair_elem.2441" }
%"struct.std::__1::__compressed_pair_elem.2441" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1279", %"class.WTF::HashSet.1279", %"class.WTF::HashSet.1279", %"class.WTF::HashSet.1279", %"class.WTF::HashSet.1279", %"class.WTF::HashSet.1279", i32, [4 x i8], %"class.WTF::HashMap.2442", %"class.WTF::HashMap.2442", %"class.WTF::HashMap.2442", %"class.WTF::HashMap.2442", %"class.WTF::HashMap.2442", %"class.WTF::HashMap.2442", %"class.WTF::HashMap.2442", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.2442" = type { %"class.WTF::HashTable.2443" }
%"class.WTF::HashTable.2443" = type <{ %"struct.WTF::KeyValuePair.2446"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2446" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.2450" = type { %"class.blink::MemberBase.2451" }
%"class.blink::MemberBase.2451" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2452" = type { %"class.blink::MemberBase.2453" }
%"class.blink::MemberBase.2453" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2456" = type { %"class.blink::MemberBase.2457" }
%"class.blink::MemberBase.2457" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.2458" = type { %"class.WTF::HashMap.2461" }
%"class.WTF::HashMap.2461" = type { %"class.WTF::HashTable.2462" }
%"class.WTF::HashTable.2462" = type <{ %"struct.WTF::KeyValuePair.2464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2464" = type opaque
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2467" = type { %"class.std::__1::__compressed_pair.2468" }
%"class.std::__1::__compressed_pair.2468" = type { %"struct.std::__1::__compressed_pair_elem.2469" }
%"struct.std::__1::__compressed_pair_elem.2469" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2475" = type { %"class.blink::MemberBase.2476" }
%"class.blink::MemberBase.2476" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2477" = type { %"class.WTF::HashMap.2480" }
%"class.WTF::HashMap.2480" = type { %"class.WTF::HashTable.2481" }
%"class.WTF::HashTable.2481" = type <{ %"struct.WTF::KeyValuePair.2483"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2483" = type opaque
%"class.blink::HeapObserverSet.2484" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2485" }
%"class.blink::HeapHashSet.2485" = type { %"class.WTF::HashSet.2488" }
%"class.WTF::HashSet.2488" = type { %"class.WTF::HashTable.2489" }
%"class.WTF::HashTable.2489" = type <{ %"class.blink::WeakMember.2491"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2491" = type opaque
%"class.blink::Member.2492" = type { %"class.blink::MemberBase.2493" }
%"class.blink::MemberBase.2493" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2494" = type { %"class.blink::MemberBase.2495" }
%"class.blink::MemberBase.2495" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1201", %"class.blink::HeapHashSet.2501", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2508", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2501" = type { %"class.WTF::HashSet.2504" }
%"class.WTF::HashSet.2504" = type { %"class.WTF::HashTable.2505" }
%"class.WTF::HashTable.2505" = type <{ %"class.blink::Member.2507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2507" = type opaque
%"class.blink::HeapTaskRunnerTimer.2508" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2509", { i64, i64 } }
%"class.blink::WeakMember.2509" = type { %"class.blink::MemberBase.2495" }
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1207" }
%"class.blink::HeapHashMap.1207" = type { %"class.WTF::HashMap.1210" }
%"class.WTF::HashMap.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %"struct.WTF::KeyValuePair.1213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1213" = type { %"class.WTF::AtomicString", %"class.blink::Member.1214" }
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1050", i32, %"class.blink::HeapVector.1218" }
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1227" = type { %"class.blink::MemberBase.1228" }
%"class.blink::MemberBase.1228" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1229" = type { %"class.blink::MemberBase.1230" }
%"class.blink::MemberBase.1230" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1231" }
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::HeapHashMap.1233"* }
%"class.blink::HeapHashMap.1233" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1236" = type { %"class.WTF::Vector.1239" }
%"class.WTF::Vector.1239" = type { %"class.WTF::VectorBuffer.1240" }
%"class.WTF::VectorBuffer.1240" = type { %"class.WTF::VectorBufferBase.1241" }
%"class.WTF::VectorBufferBase.1241" = type { %"class.blink::Member.1242"*, i32, i32 }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member.3153" = type { %"class.blink::MemberBase.3154" }
%"class.blink::MemberBase.3154" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.3155" = type { %"class.blink::MemberBase.3156" }
%"class.blink::MemberBase.3156" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.3157" = type { %"class.blink::MemberBase.3158" }
%"class.blink::MemberBase.3158" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.3159" = type { %"class.blink::MemberBase.3160" }
%"class.blink::MemberBase.3160" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.3161" = type { %"class.blink::MemberBase.3162" }
%"class.blink::MemberBase.3162" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.3163" = type { i32, [4 x i8], %"class.blink::HeapHashSet.3164" }
%"class.blink::HeapHashSet.3164" = type { %"class.WTF::HashSet.3167" }
%"class.WTF::HashSet.3167" = type { %"class.WTF::HashTable.3168" }
%"class.WTF::HashTable.3168" = type <{ %"class.blink::WeakMember.3170"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3170" = type opaque
%"class.blink::Member.3171" = type { %"class.blink::MemberBase.3172" }
%"class.blink::MemberBase.3172" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.3173" = type { %"class.blink::MemberBase.3174" }
%"class.blink::MemberBase.3174" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.3175" = type { %"class.blink::MemberBase.3176" }
%"class.blink::MemberBase.3176" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.3177" = type { %"class.blink::MemberBase.3178" }
%"class.blink::MemberBase.3178" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.3179" = type { %"class.blink::MemberBase.3180" }
%"class.blink::MemberBase.3180" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.3181" = type { %"class.blink::MemberBase.3182" }
%"class.blink::MemberBase.3182" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type <{ %"class.blink::ScrollableArea", %"class.blink::Member.777", %class.scoped_refptr.3185, %class.scoped_refptr.3186, %class.scoped_refptr.3186, %"class.blink::PropertyTreeStateOrAlias", %class.scoped_refptr.2099, %class.scoped_refptr.2099, %class.scoped_refptr.2099, %class.scoped_refptr.2099, %class.scoped_refptr.2134, %class.scoped_refptr.2151, %class.scoped_refptr.2151, %"class.blink::FloatSize", float, i8, [3 x i8], %"class.blink::IntSize", float, float, i8, [7 x i8], %"struct.cc::ElementId", %"struct.cc::ElementId", i8, [7 x i8] }>
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2872", %"class.blink::Member.2873", %"class.blink::Member.2875", %"class.blink::Member.2877", %"class.blink::Member.2879", %"class.WTF::Vector.1303", i16, %class.scoped_refptr.456 }
%"class.blink::ThreadState::PrefinalizerRegistration.2872" = type { i8 }
%"class.blink::Member.2873" = type { %"class.blink::MemberBase.2874" }
%"class.blink::MemberBase.2874" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2875" = type { %"class.blink::MemberBase.2876" }
%"class.blink::MemberBase.2876" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2877" = type { %"class.blink::MemberBase.2878" }
%"class.blink::MemberBase.2878" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2879" = type { %"class.blink::MemberBase.2880" }
%"class.blink::MemberBase.2880" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%class.scoped_refptr.3185 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.3186 = type { %"class.cc::ScrollbarLayerBase"* }
%"class.cc::ScrollbarLayerBase" = type opaque
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Member.3187" = type { %"class.blink::MemberBase.3188" }
%"class.blink::MemberBase.3188" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.3189" = type { %"class.blink::MemberBase.3190" }
%"class.blink::MemberBase.3190" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.3191" = type { %"class.blink::MemberBase.3192" }
%"class.blink::MemberBase.3192" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.3193" = type { %"class.blink::MemberBase.3194" }
%"class.blink::MemberBase.3194" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.3195" = type { %"class.blink::MemberBase.3196" }
%"class.blink::MemberBase.3196" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.3197" }
%"class.WTF::Deque.3197" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3200" }
%"class.WTF::VectorBuffer.3200" = type { %"class.WTF::VectorBufferBase.3201" }
%"class.WTF::VectorBufferBase.3201" = type { %"class.std::__1::unique_ptr.3202"*, i32, i32 }
%"class.std::__1::unique_ptr.3202" = type { %"class.std::__1::__compressed_pair.3203" }
%"class.std::__1::__compressed_pair.3203" = type { %"struct.std::__1::__compressed_pair_elem.3204" }
%"struct.std::__1::__compressed_pair_elem.3204" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.3208", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.3208" = type { %"class.std::__1::__bitset.3209" }
%"class.std::__1::__bitset.3209" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.3210" }
%"class.absl::optional.3210" = type { %"class.absl::optional_internal::optional_data.3211" }
%"class.absl::optional_internal::optional_data.3211" = type { %"class.absl::optional_internal::optional_data_base.3212" }
%"class.absl::optional_internal::optional_data_base.3212" = type { %"class.absl::optional_internal::optional_data_dtor_base.3213" }
%"class.absl::optional_internal::optional_data_dtor_base.3213" = type { i8, %union.anon.3214 }
%union.anon.3214 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.3215", i64, %"class.absl::optional.96", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2888" }
%"class.blink::WebPrivatePtr.2888" = type { i8* }
%"class.absl::optional.3215" = type { %"class.absl::optional_internal::optional_data.3216" }
%"class.absl::optional_internal::optional_data.3216" = type { %"class.absl::optional_internal::optional_data_base.3217" }
%"class.absl::optional_internal::optional_data_base.3217" = type { %"class.absl::optional_internal::optional_data_dtor_base.3218" }
%"class.absl::optional_internal::optional_data_dtor_base.3218" = type { i8, %union.anon.3219 }
%union.anon.3219 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.3220" = type { %"class.std::__1::unique_ptr.3221" }
%"class.std::__1::unique_ptr.3221" = type { %"class.std::__1::__compressed_pair.3222" }
%"class.std::__1::__compressed_pair.3222" = type { %"struct.std::__1::__compressed_pair_elem.3223" }
%"struct.std::__1::__compressed_pair_elem.3223" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.3227" = type { %"class.WTF::HashSet.3230" }
%"class.WTF::HashSet.3230" = type { %"class.WTF::HashTable.3231" }
%"class.WTF::HashTable.3231" = type <{ %"class.blink::WeakMember.3233"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3233" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2576" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.std::__1::unique_ptr.3234" = type { %"class.std::__1::__compressed_pair.3235" }
%"class.std::__1::__compressed_pair.3235" = type { %"struct.std::__1::__compressed_pair_elem.3236" }
%"struct.std::__1::__compressed_pair_elem.3236" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3240" = type { %"class.std::__1::__compressed_pair.3241" }
%"class.std::__1::__compressed_pair.3241" = type { %"struct.std::__1::__compressed_pair_elem.3242" }
%"struct.std::__1::__compressed_pair_elem.3242" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.775", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.984" }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { %"struct.std::__1::pair.986"*, %"struct.std::__1::pair.986"*, %"class.std::__1::__compressed_pair.987" }
%"struct.std::__1::pair.986" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"struct.std::__1::pair.986"* }
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.994" = type { %"class.absl::optional_internal::optional_data.995" }
%"class.absl::optional_internal::optional_data.995" = type { %"class.absl::optional_internal::optional_data_base.996" }
%"class.absl::optional_internal::optional_data_base.996" = type { %"class.absl::optional_internal::optional_data_dtor_base.997" }
%"class.absl::optional_internal::optional_data_dtor_base.997" = type { i8, %union.anon.998 }
%union.anon.998 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.363 }
%class.scoped_refptr.363 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.999" }
%"class.blink::HeapHashSet.999" = type { %"class.WTF::HashSet.1002" }
%"class.WTF::HashSet.1002" = type { %"class.WTF::HashTable.1003" }
%"class.WTF::HashTable.1003" = type <{ %"class.blink::WeakMember.1005"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1005" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1006" }
%"class.blink::HeapHashMap.1006" = type { %"class.WTF::HashMap.1009" }
%"class.WTF::HashMap.1009" = type { %"class.WTF::HashTable.1010" }
%"class.WTF::HashTable.1010" = type <{ %"struct.WTF::KeyValuePair.1012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1012" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1025" }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.930", %"class.base::RepeatingCallback.3932", i64, %"class.std::__1::map.3933", i8*, i64, %"class.base::WeakPtrFactory.3942" }
%"class.base::RepeatingCallback.3932" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3933" = type { %"class.std::__1::__tree.3934" }
%"class.std::__1::__tree.3934" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3935", %"class.std::__1::__compressed_pair.3939" }
%"class.std::__1::__compressed_pair.3935" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.3939" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.base::WeakPtrFactory.3942" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1027" = type { %"class.WTF::HashSet.1030" }
%"class.WTF::HashSet.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"class.blink::WeakMember.1033"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1033" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.712", %"class.blink::Member.1034", %"class.blink::Member.1036", %"class.std::__1::unique_ptr.1038", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1044" }
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.135", %"class.blink::Member.2605", %"class.std::__1::unique_ptr.2885", %"class.std::__1::unique_ptr.1408", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.3039, %"class.WTF::AtomicString", i32, %"class.absl::optional.2938", %class.scoped_refptr.59, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2903", i8, %"class.absl::optional.2910", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.712", %"class.blink::Member.3040", %"class.blink::Member.2269", %"class.blink::Member.3051", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.3053", %class.scoped_refptr.1333, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.3066", %"class.std::__1::unique_ptr.2915", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.3068", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.365, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2619, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.3073", %"class.blink::Member.3088", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.3101", %"class.WTF::Vector.46", i8, i8, i8, %"class.blink::WebVector.3028", %"class.blink::WebVector.3028", %"class.mojo::Remote.3106" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2885" = type { %"class.std::__1::__compressed_pair.2886" }
%"class.std::__1::__compressed_pair.2886" = type { %"struct.std::__1::__compressed_pair_elem.2887" }
%"struct.std::__1::__compressed_pair_elem.2887" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2889", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2903", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2910", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2915", %"class.base::UnguessableToken", %"class.blink::WebVector.2921", %"class.base::TickClock"*, %"class.blink::WebVector.2930", %"class.absl::optional.2938", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2943", %"class.blink::WebVector.1126", i8, %"class.blink::WebVector.2962", i8, %"class.std::__1::unique_ptr.2970", %"class.blink::WebVector.3028", %"class.blink::WebVector.3028" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.2889" = type { %"class.std::__1::vector.2890" }
%"class.std::__1::vector.2890" = type { %"class.std::__1::__vector_base.2891" }
%"class.std::__1::__vector_base.2891" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2898" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2898" = type { %"struct.std::__1::__compressed_pair_elem.2899" }
%"struct.std::__1::__compressed_pair_elem.2899" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2892", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2892" = type { %"class.std::__1::__compressed_pair.2893" }
%"class.std::__1::__compressed_pair.2893" = type { %"struct.std::__1::__compressed_pair_elem.2894" }
%"struct.std::__1::__compressed_pair_elem.2894" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2909", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2909" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2921" = type { %"class.std::__1::vector.2922" }
%"class.std::__1::vector.2922" = type { %"class.std::__1::__vector_base.2923" }
%"class.std::__1::__vector_base.2923" = type { %"class.std::__1::unique_ptr.2924"*, %"class.std::__1::unique_ptr.2924"*, %"class.std::__1::__compressed_pair.2925" }
%"class.std::__1::unique_ptr.2924" = type opaque
%"class.std::__1::__compressed_pair.2925" = type { %"struct.std::__1::__compressed_pair_elem.2926" }
%"struct.std::__1::__compressed_pair_elem.2926" = type { %"class.std::__1::unique_ptr.2924"* }
%"class.blink::WebVector.2930" = type { %"class.std::__1::vector.2931" }
%"class.std::__1::vector.2931" = type { %"class.std::__1::__vector_base.2932" }
%"class.std::__1::__vector_base.2932" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2933" }
%"class.std::__1::__compressed_pair.2933" = type { %"struct.std::__1::__compressed_pair_elem.2934" }
%"struct.std::__1::__compressed_pair_elem.2934" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2943" = type { %"class.absl::optional_internal::optional_data.2944" }
%"class.absl::optional_internal::optional_data.2944" = type { %"class.absl::optional_internal::optional_data_base.2945" }
%"class.absl::optional_internal::optional_data_base.2945" = type { %"class.absl::optional_internal::optional_data_dtor_base.2946" }
%"class.absl::optional_internal::optional_data_dtor_base.2946" = type { i8, [7 x i8], %union.anon.2947 }
%union.anon.2947 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.1126" = type { %"class.std::__1::vector.1127" }
%"class.std::__1::vector.1127" = type { %"class.std::__1::__vector_base.1128" }
%"class.std::__1::__vector_base.1128" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2962" = type { %"class.std::__1::vector.2963" }
%"class.std::__1::vector.2963" = type { %"class.std::__1::__vector_base.2964" }
%"class.std::__1::__vector_base.2964" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2965" }
%"class.std::__1::__compressed_pair.2965" = type { %"struct.std::__1::__compressed_pair_elem.2966" }
%"struct.std::__1::__compressed_pair_elem.2966" = type { i32* }
%"class.std::__1::unique_ptr.2970" = type { %"class.std::__1::__compressed_pair.2971" }
%"class.std::__1::__compressed_pair.2971" = type { %"struct.std::__1::__compressed_pair_elem.2972" }
%"struct.std::__1::__compressed_pair_elem.2972" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2973" }
%"class.blink::WebVector.2973" = type { %"class.std::__1::vector.2974" }
%"class.std::__1::vector.2974" = type { %"class.std::__1::__vector_base.2975" }
%"class.std::__1::__vector_base.2975" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.3020" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2976", %"class.blink::WebVector.2984", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.1126", i32, [4 x i8], %"class.absl::optional.3015", %"class.blink::WebVector.1126" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2976" = type { %"class.std::__1::vector.2977" }
%"class.std::__1::vector.2977" = type { %"class.std::__1::__vector_base.2978" }
%"class.std::__1::__vector_base.2978" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2979" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2979" = type { %"struct.std::__1::__compressed_pair_elem.2980" }
%"struct.std::__1::__compressed_pair_elem.2980" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2984" = type { %"class.std::__1::vector.2985" }
%"class.std::__1::vector.2985" = type { %"class.std::__1::__vector_base.2986" }
%"class.std::__1::__vector_base.2986" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.3010" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2987", %"class.blink::WebVector.1126", %"class.blink::WebVector.2995", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2987" = type { %"class.std::__1::vector.2988" }
%"class.std::__1::vector.2988" = type { %"class.std::__1::__vector_base.2989" }
%"class.std::__1::__vector_base.2989" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2990" }
%"class.std::__1::__compressed_pair.2990" = type { %"struct.std::__1::__compressed_pair_elem.2991" }
%"struct.std::__1::__compressed_pair_elem.2991" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2995" = type { %"class.std::__1::vector.2996" }
%"class.std::__1::vector.2996" = type { %"class.std::__1::__vector_base.2997" }
%"class.std::__1::__vector_base.2997" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.3005" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2998" }
%"class.blink::WebVector.2998" = type { %"class.std::__1::vector.2999" }
%"class.std::__1::vector.2999" = type { %"class.std::__1::__vector_base.3000" }
%"class.std::__1::__vector_base.3000" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3001" }
%"class.std::__1::__compressed_pair.3001" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"class.std::__1::__compressed_pair.3005" = type { %"struct.std::__1::__compressed_pair_elem.3006" }
%"struct.std::__1::__compressed_pair_elem.3006" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.3010" = type { %"struct.std::__1::__compressed_pair_elem.3011" }
%"struct.std::__1::__compressed_pair_elem.3011" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.3015" = type { %"class.absl::optional_internal::optional_data.3016" }
%"class.absl::optional_internal::optional_data.3016" = type { %"class.absl::optional_internal::optional_data_base.3017" }
%"class.absl::optional_internal::optional_data_base.3017" = type { %"class.absl::optional_internal::optional_data_dtor_base.3018" }
%"class.absl::optional_internal::optional_data_dtor_base.3018" = type { i8, [7 x i8], %union.anon.3019 }
%union.anon.3019 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.1126", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.3020" = type { %"struct.std::__1::__compressed_pair_elem.3021" }
%"struct.std::__1::__compressed_pair_elem.3021" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.3039 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2938" = type { %"class.absl::optional_internal::optional_data.2939" }
%"class.absl::optional_internal::optional_data.2939" = type { %"class.absl::optional_internal::optional_data_base.2940" }
%"class.absl::optional_internal::optional_data_base.2940" = type { %"class.absl::optional_internal::optional_data_dtor_base.2941" }
%"class.absl::optional_internal::optional_data_dtor_base.2941" = type { i8, %union.anon.2942 }
%union.anon.2942 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.1126", %"class.blink::WebString", %"class.blink::WebVector.1126", %"class.blink::WebVector.1126" }
%"class.std::__1::unique_ptr.2903" = type { %"class.std::__1::__compressed_pair.2904" }
%"class.std::__1::__compressed_pair.2904" = type { %"struct.std::__1::__compressed_pair_elem.2905" }
%"struct.std::__1::__compressed_pair_elem.2905" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2910" = type { %"class.absl::optional_internal::optional_data.2911" }
%"class.absl::optional_internal::optional_data.2911" = type { %"class.absl::optional_internal::optional_data_base.2912" }
%"class.absl::optional_internal::optional_data_base.2912" = type { %"class.absl::optional_internal::optional_data_dtor_base.2913" }
%"class.absl::optional_internal::optional_data_dtor_base.2913" = type { i8, %union.anon.2914 }
%union.anon.2914 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2948", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.2948" = type { %"class.std::__1::__vector_base.2949" }
%"class.std::__1::__vector_base.2949" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2957" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2950", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2950" = type { %"class.std::__1::__vector_base.2951" }
%"class.std::__1::__vector_base.2951" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2952" }
%"class.std::__1::__compressed_pair.2952" = type { %"struct.std::__1::__compressed_pair_elem.2953" }
%"struct.std::__1::__compressed_pair_elem.2953" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2957" = type { %"struct.std::__1::__compressed_pair_elem.2958" }
%"struct.std::__1::__compressed_pair_elem.2958" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.3040" = type { %"class.blink::MemberBase.3041" }
%"class.blink::MemberBase.3041" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.46", %"class.blink::Member.3044", %"class.absl::optional.3046", i64, i64, i32, %class.scoped_refptr.1541, %class.scoped_refptr.3039, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1541 }
%"class.blink::Member.3044" = type { %"class.blink::MemberBase.3045" }
%"class.blink::MemberBase.3045" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.3046" = type { %"class.absl::optional_internal::optional_data.3047" }
%"class.absl::optional_internal::optional_data.3047" = type { %"class.absl::optional_internal::optional_data_base.3048" }
%"class.absl::optional_internal::optional_data_base.3048" = type { %"class.absl::optional_internal::optional_data_dtor_base.3049" }
%"class.absl::optional_internal::optional_data_dtor_base.3049" = type { i8, %union.anon.3050 }
%union.anon.3050 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::Member.3051" = type { %"class.blink::MemberBase.3052" }
%"class.blink::MemberBase.3052" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.mojo::Remote.3053" = type { %"class.mojo::internal::InterfacePtrState.3054" }
%"class.mojo::internal::InterfacePtrState.3054" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3055" }
%"class.std::__1::unique_ptr.3055" = type { %"class.std::__1::__compressed_pair.3056" }
%"class.std::__1::__compressed_pair.3056" = type { %"struct.std::__1::__compressed_pair_elem.3057" }
%"struct.std::__1::__compressed_pair_elem.3057" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.96", %"class.absl::optional.96", %"class.absl::optional.96", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.3061", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1036" }
%"class.WTF::Vector.3061" = type { %"class.WTF::VectorBuffer.3062" }
%"class.WTF::VectorBuffer.3062" = type { %"class.WTF::VectorBufferBase.3063" }
%"class.WTF::VectorBufferBase.3063" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.blink::Member.3066" = type { %"class.blink::MemberBase.3067" }
%"class.blink::MemberBase.3067" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2915" = type { %"class.std::__1::__compressed_pair.2916" }
%"class.std::__1::__compressed_pair.2916" = type { %"struct.std::__1::__compressed_pair_elem.2917" }
%"struct.std::__1::__compressed_pair_elem.2917" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.1365" }
%"class.WTF::Vector.3068" = type { %"class.WTF::VectorBuffer.3069" }
%"class.WTF::VectorBuffer.3069" = type { %"class.WTF::VectorBufferBase.3070" }
%"class.WTF::VectorBufferBase.3070" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%"class.blink::Member.3073" = type { %"class.blink::MemberBase.3074" }
%"class.blink::MemberBase.3074" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.3077", %"class.std::__1::unique_ptr.3082", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.3077" = type { %"class.WTF::HashTable.3078" }
%"class.WTF::HashTable.3078" = type <{ %"struct.WTF::KeyValuePair.3081"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3081" = type { %"class.WTF::Vector.409", %class.scoped_refptr.4009 }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.397", [32 x i8] }
%"class.WTF::VectorBufferBase.397" = type { i8*, i32, i32 }
%class.scoped_refptr.4009 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.4010", %"class.WTF::Vector.395", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.4010" = type { %"class.base::RefCounted.4011" }
%"class.base::RefCounted.4011" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.4012", i64, %"class.absl::optional.4017" }
%"class.std::__1::unique_ptr.4012" = type { %"class.std::__1::__compressed_pair.4013" }
%"class.std::__1::__compressed_pair.4013" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"class.absl::optional.4017" = type { %"class.absl::optional_internal::optional_data.4018" }
%"class.absl::optional_internal::optional_data.4018" = type { %"class.absl::optional_internal::optional_data_base.4019" }
%"class.absl::optional_internal::optional_data_base.4019" = type { %"class.absl::optional_internal::optional_data_dtor_base.4020" }
%"class.absl::optional_internal::optional_data_dtor_base.4020" = type { i8, %union.anon.4021 }
%union.anon.4021 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.4022", %"class.std::__1::unique_ptr.4023" }
%"class.mojo::ScopedHandleBase.4022" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.4023" = type { %"class.std::__1::__compressed_pair.4024" }
%"class.std::__1::__compressed_pair.4024" = type { %"struct.std::__1::__compressed_pair_elem.4025" }
%"struct.std::__1::__compressed_pair_elem.4025" = type { i8* }
%"class.std::__1::unique_ptr.3082" = type { %"class.std::__1::__compressed_pair.3083" }
%"class.std::__1::__compressed_pair.3083" = type { %"struct.std::__1::__compressed_pair_elem.3084" }
%"struct.std::__1::__compressed_pair_elem.3084" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.3088" = type { %"class.blink::MemberBase.3089" }
%"class.blink::MemberBase.3089" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.3094" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.3090", %"class.std::__1::bitset.3090", %"class.std::__1::bitset.3092" }
%"class.std::__1::bitset.3090" = type { %"class.std::__1::__bitset.3091" }
%"class.std::__1::__bitset.3091" = type { [11 x i64] }
%"class.std::__1::bitset.3092" = type { %"class.std::__1::__bitset.3093" }
%"class.std::__1::__bitset.3093" = type { [2 x i64] }
%"class.blink::HeapHashSet.3094" = type { %"class.WTF::HashSet.3097" }
%"class.WTF::HashSet.3097" = type { %"class.WTF::HashTable.3098" }
%"class.WTF::HashTable.3098" = type <{ %"class.blink::Member.3100"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3100" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.3101" = type { %"class.WTF::VectorBuffer.3102" }
%"class.WTF::VectorBuffer.3102" = type { %"class.WTF::VectorBufferBase.3103" }
%"class.WTF::VectorBufferBase.3103" = type { i32*, i32, i32 }
%"class.blink::WebVector.3028" = type { %"class.std::__1::vector.3029" }
%"class.std::__1::vector.3029" = type { %"class.std::__1::__vector_base.3030" }
%"class.std::__1::__vector_base.3030" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.3031" }
%"class.std::__1::__compressed_pair.3031" = type { %"struct.std::__1::__compressed_pair_elem.3032" }
%"struct.std::__1::__compressed_pair_elem.3032" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.3106" = type { %"class.mojo::internal::InterfacePtrState.3107" }
%"class.mojo::internal::InterfacePtrState.3107" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3108" }
%"class.std::__1::unique_ptr.3108" = type { %"class.std::__1::__compressed_pair.3109" }
%"class.std::__1::__compressed_pair.3109" = type { %"struct.std::__1::__compressed_pair_elem.3110" }
%"struct.std::__1::__compressed_pair_elem.3110" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2661", %"class.blink::Member.712", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2666", i8, i32, %"class.blink::Color", %"class.absl::optional.2668", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2673", %"class.blink::Member.2675", %"class.blink::Member.2675", %"class.std::__1::unique_ptr.2678", i32, [4 x i8], %"class.WTF::HashSet.2681", %"class.blink::Member.2688", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2690", %"class.blink::HeapHashSet.2697", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2705", i8, %"class.blink::Member.2711", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2723", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2737", i8, %"class.std::__1::unique_ptr.2743", %"class.std::__1::unique_ptr.2824", %"class.WTF::Vector.2830", i32, %class.scoped_refptr.2835, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2836", %"class.blink::Member.2838", %"class.blink::Member.2840", %"class.blink::HeapHashSet.2842", %"class.blink::HeapHashSet.2849", %"class.std::__1::unique_ptr.2856", %"class.std::__1::unique_ptr.2862", %"class.WTF::Vector.1303" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2661" = type { %"class.WTF::HashTable.2662" }
%"class.WTF::HashTable.2662" = type <{ %class.scoped_refptr.2665*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2665 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2666" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2667", { i64, i64 } }
%"class.blink::WeakMember.2667" = type { %"class.blink::MemberBase.1049" }
%"class.absl::optional.2668" = type { %"class.absl::optional_internal::optional_data.2669" }
%"class.absl::optional_internal::optional_data.2669" = type { %"class.absl::optional_internal::optional_data_base.2670" }
%"class.absl::optional_internal::optional_data_base.2670" = type { %"class.absl::optional_internal::optional_data_dtor_base.2671" }
%"class.absl::optional_internal::optional_data_dtor_base.2671" = type { i8, %union.anon.2672 }
%union.anon.2672 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2673" = type { %"class.blink::MemberBase.2674" }
%"class.blink::MemberBase.2674" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2675" = type { %"class.blink::MemberBase.2676" }
%"class.blink::MemberBase.2676" = type { %"class.blink::HeapHashSet.2677"* }
%"class.blink::HeapHashSet.2677" = type opaque
%"class.std::__1::unique_ptr.2678" = type { %"class.std::__1::__compressed_pair.2679" }
%"class.std::__1::__compressed_pair.2679" = type { %"struct.std::__1::__compressed_pair_elem.2680" }
%"struct.std::__1::__compressed_pair_elem.2680" = type { %"class.WTF::HashSet.2681"* }
%"class.WTF::HashSet.2681" = type { %"class.WTF::HashTable.2682" }
%"class.WTF::HashTable.2682" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2688" = type { %"class.blink::MemberBase.2689" }
%"class.blink::MemberBase.2689" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2690" = type { %"class.WTF::HashSet.2693" }
%"class.WTF::HashSet.2693" = type { %"class.WTF::HashTable.2694" }
%"class.WTF::HashTable.2694" = type <{ %"class.blink::Member.2696"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2696" = type opaque
%"class.blink::HeapHashSet.2697" = type { %"class.WTF::HashSet.2700" }
%"class.WTF::HashSet.2700" = type { %"class.WTF::HashTable.2701" }
%"class.WTF::HashTable.2701" = type <{ %"class.blink::Member.2703"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2703" = type { %"class.blink::MemberBase.2704" }
%"class.blink::MemberBase.2704" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2870", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2881", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.1050" }
%"class.blink::Member.2870" = type { %"class.blink::MemberBase.2871" }
%"class.blink::MemberBase.2871" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2881" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2882", { i64, i64 } }
%"class.blink::WeakMember.2882" = type { %"class.blink::MemberBase.2704" }
%"class.std::__1::unique_ptr.2705" = type { %"class.std::__1::__compressed_pair.2706" }
%"class.std::__1::__compressed_pair.2706" = type { %"struct.std::__1::__compressed_pair_elem.2707" }
%"struct.std::__1::__compressed_pair_elem.2707" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2711" = type { %"class.blink::MemberBase.2712" }
%"class.blink::MemberBase.2712" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2715", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2715" = type { %"class.WTF::HashTable.2716" }
%"class.WTF::HashTable.2716" = type <{ %"struct.WTF::KeyValuePair.2718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2718" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2719", i32, i32 }
%"class.WTF::Vector.2719" = type { %"class.WTF::VectorBuffer.2720" }
%"class.WTF::VectorBuffer.2720" = type { %"class.WTF::VectorBufferBase.2721" }
%"class.WTF::VectorBufferBase.2721" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2723" = type { %"class.WTF::LinkedHashSet.2726" }
%"class.WTF::LinkedHashSet.2726" = type { %"class.WTF::HashMap.2727", %"class.WTF::VectorBackedLinkedList.2731" }
%"class.WTF::HashMap.2727" = type { %"class.WTF::HashTable.2728" }
%"class.WTF::HashTable.2728" = type <{ %"struct.WTF::KeyValuePair.2730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2730" = type opaque
%"class.WTF::VectorBackedLinkedList.2731" = type { %"class.WTF::Vector.2732", i32, i32 }
%"class.WTF::Vector.2732" = type { %"class.WTF::VectorBuffer.2733" }
%"class.WTF::VectorBuffer.2733" = type { %"class.WTF::VectorBufferBase.2734" }
%"class.WTF::VectorBufferBase.2734" = type { %"class.WTF::VectorBackedLinkedListNode.2735"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2735" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2737" = type { %"class.std::__1::__compressed_pair.2738" }
%"class.std::__1::__compressed_pair.2738" = type { %"struct.std::__1::__compressed_pair_elem.2739" }
%"struct.std::__1::__compressed_pair_elem.2739" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2743" = type { %"class.std::__1::__compressed_pair.2744" }
%"class.std::__1::__compressed_pair.2744" = type { %"struct.std::__1::__compressed_pair_elem.2745" }
%"struct.std::__1::__compressed_pair_elem.2745" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2746, %class.scoped_refptr.2746, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2801", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2806", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2746 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2747", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2754" }
%"class.WTF::RefCounted.2747" = type { %"class.base::RefCounted.2748" }
%"class.base::RefCounted.2748" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2749", i32, [4 x i8] }>
%"class.WTF::Vector.2749" = type { %"class.WTF::VectorBuffer.2750" }
%"class.WTF::VectorBuffer.2750" = type { %"class.WTF::VectorBufferBase.2751" }
%"class.WTF::VectorBufferBase.2751" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2754" = type { %"class.WTF::VectorBuffer.2755" }
%"class.WTF::VectorBuffer.2755" = type { %"class.WTF::VectorBufferBase.2756" }
%"class.WTF::VectorBufferBase.2756" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2757", %"class.std::__1::unique_ptr.2773", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2757" = type { %"class.std::__1::__compressed_pair.2758" }
%"class.std::__1::__compressed_pair.2758" = type { %"struct.std::__1::__compressed_pair_elem.2759" }
%"struct.std::__1::__compressed_pair_elem.2759" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2760", %"class.WTF::Vector.2765", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2760" = type { %"class.WTF::VectorBuffer.2761" }
%"class.WTF::VectorBuffer.2761" = type { %"class.WTF::VectorBufferBase.2762" }
%"class.WTF::VectorBufferBase.2762" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2765" = type { %"class.WTF::VectorBuffer.2766" }
%"class.WTF::VectorBuffer.2766" = type { %"class.WTF::VectorBufferBase.2767" }
%"class.WTF::VectorBufferBase.2767" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2773" = type { %"class.std::__1::__compressed_pair.2774" }
%"class.std::__1::__compressed_pair.2774" = type { %"struct.std::__1::__compressed_pair_elem.2775" }
%"struct.std::__1::__compressed_pair_elem.2775" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2776", %"class.absl::optional.2776" }
%"class.absl::optional.2776" = type { %"class.absl::optional_internal::optional_data.2777" }
%"class.absl::optional_internal::optional_data.2777" = type { %"class.absl::optional_internal::optional_data_base.2778" }
%"class.absl::optional_internal::optional_data_base.2778" = type { %"class.absl::optional_internal::optional_data_dtor_base.2779" }
%"class.absl::optional_internal::optional_data_dtor_base.2779" = type { i8, [3 x i8], %union.anon.2780 }
%union.anon.2780 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2754"*, %"class.absl::optional.2786", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2786" = type { %"class.absl::optional_internal::optional_data.2787" }
%"class.absl::optional_internal::optional_data.2787" = type { %"class.absl::optional_internal::optional_data_base.2788" }
%"class.absl::optional_internal::optional_data_base.2788" = type { %"class.absl::optional_internal::optional_data_dtor_base.2789" }
%"class.absl::optional_internal::optional_data_dtor_base.2789" = type { i8, %union.anon.2790 }
%union.anon.2790 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2791", %"class.WTF::Vector.2796" }
%"class.WTF::Vector.2791" = type { %"class.WTF::VectorBuffer.2792" }
%"class.WTF::VectorBuffer.2792" = type { %"class.WTF::VectorBufferBase.2793", [128 x i8] }
%"class.WTF::VectorBufferBase.2793" = type { i32*, i32, i32 }
%"class.WTF::Vector.2796" = type { %"class.WTF::VectorBuffer.2797" }
%"class.WTF::VectorBuffer.2797" = type { %"class.WTF::VectorBufferBase.2798", [128 x i8] }
%"class.WTF::VectorBufferBase.2798" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2801" = type { %"class.WTF::VectorBuffer.2802" }
%"class.WTF::VectorBuffer.2802" = type { %"class.WTF::VectorBufferBase.2803" }
%"class.WTF::VectorBufferBase.2803" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2806" = type { %"class.WTF::HashTable.2807" }
%"class.WTF::HashTable.2807" = type <{ %"struct.WTF::KeyValuePair.2810"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2810" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2811", %"class.WTF::Vector.2816" }
%"class.WTF::HashMap.2811" = type { %"class.WTF::HashTable.2812" }
%"class.WTF::HashTable.2812" = type <{ %"struct.WTF::KeyValuePair.2815"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2815" = type opaque
%"class.WTF::Vector.2816" = type { %"class.WTF::VectorBuffer.2817" }
%"class.WTF::VectorBuffer.2817" = type { %"class.WTF::VectorBufferBase.2818" }
%"class.WTF::VectorBufferBase.2818" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2824" = type { %"class.std::__1::__compressed_pair.2825" }
%"class.std::__1::__compressed_pair.2825" = type { %"struct.std::__1::__compressed_pair_elem.2826" }
%"struct.std::__1::__compressed_pair_elem.2826" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2830" = type { %"class.WTF::VectorBuffer.2831" }
%"class.WTF::VectorBuffer.2831" = type { %"class.WTF::VectorBufferBase.2832" }
%"class.WTF::VectorBufferBase.2832" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2835 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2836" = type { %"class.blink::MemberBase.2837" }
%"class.blink::MemberBase.2837" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2838" = type { %"class.blink::MemberBase.2839" }
%"class.blink::MemberBase.2839" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2840" = type { %"class.blink::MemberBase.2841" }
%"class.blink::MemberBase.2841" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2842" = type { %"class.WTF::HashSet.2845" }
%"class.WTF::HashSet.2845" = type { %"class.WTF::HashTable.2846" }
%"class.WTF::HashTable.2846" = type <{ %"class.blink::WeakMember.2848"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2848" = type opaque
%"class.blink::HeapHashSet.2849" = type { %"class.WTF::HashSet.2852" }
%"class.WTF::HashSet.2852" = type { %"class.WTF::HashTable.2853" }
%"class.WTF::HashTable.2853" = type <{ %"class.blink::WeakMember.2855"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2855" = type opaque
%"class.std::__1::unique_ptr.2856" = type { %"class.std::__1::__compressed_pair.2857" }
%"class.std::__1::__compressed_pair.2857" = type { %"struct.std::__1::__compressed_pair_elem.2858" }
%"struct.std::__1::__compressed_pair_elem.2858" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2862" = type { %"class.std::__1::__compressed_pair.2863" }
%"class.std::__1::__compressed_pair.2863" = type { %"struct.std::__1::__compressed_pair_elem.2864" }
%"struct.std::__1::__compressed_pair_elem.2864" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.130", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1063" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1067", %"class.blink::Member.1069", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1067" = type { %"class.WTF::SingleThreadedBitField.1068" }
%"class.WTF::SingleThreadedBitField.1068" = type { i32 }
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1073 }
%class.scoped_refptr.1073 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1074", %"class.WTF::AtomicString", %"class.WTF::Vector.1076" }
%"class.WTF::RefCounted.1074" = type { %"class.base::RefCounted.1075" }
%"class.base::RefCounted.1075" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.120", [32 x i8] }
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.1088 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type { %"class.base::sequence_manager::TaskTimeObserver", %"class.blink::Member.712", i8, i8, i8, %"class.base::TickClock"*, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::HeapTaskRunnerTimer" }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1198", { i64, i64 } }
%"class.blink::WeakMember.1198" = type { %"class.blink::MemberBase.1108" }
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1119" }
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3945" }
%"class.mojo::Remote.3945" = type { %"class.mojo::internal::InterfacePtrState.3946" }
%"class.mojo::internal::InterfacePtrState.3946" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3947" }
%"class.std::__1::unique_ptr.3947" = type { %"class.std::__1::__compressed_pair.3948" }
%"class.std::__1::__compressed_pair.3948" = type { %"struct.std::__1::__compressed_pair_elem.3949" }
%"struct.std::__1::__compressed_pair_elem.3949" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1124, %"class.blink::WebVector.1126", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1124 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1125", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1125" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1134, i8, [7 x i8] }>
%class.scoped_refptr.1134 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1135", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1135" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1136" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1143" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.101" = type { %"class.absl::optional_internal::optional_data.102" }
%"class.absl::optional_internal::optional_data.102" = type { %"class.absl::optional_internal::optional_data_base.103" }
%"class.absl::optional_internal::optional_data_base.103" = type { %"class.absl::optional_internal::optional_data_dtor_base.104" }
%"class.absl::optional_internal::optional_data_dtor_base.104" = type { i8, %union.anon.105 }
%union.anon.105 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1156" }
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3955" }
%"class.mojo::AssociatedRemote.3955" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3956" }
%"class.mojo::internal::AssociatedInterfacePtrState.3956" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3957" }
%"class.std::__1::unique_ptr.3957" = type { %"class.std::__1::__compressed_pair.3958" }
%"class.std::__1::__compressed_pair.3958" = type { %"struct.std::__1::__compressed_pair_elem.3959" }
%"struct.std::__1::__compressed_pair_elem.3959" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1158" = type { %"class.blink::Member.1159" }
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3965" }
%"class.mojo::AssociatedRemote.3965" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3966" }
%"class.mojo::internal::AssociatedInterfacePtrState.3966" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3967" }
%"class.std::__1::unique_ptr.3967" = type { %"class.std::__1::__compressed_pair.3968" }
%"class.std::__1::__compressed_pair.3968" = type { %"struct.std::__1::__compressed_pair_elem.3969" }
%"struct.std::__1::__compressed_pair_elem.3969" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1161" }
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3975", %"class.blink::Member.712", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3975" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3976" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.927" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3976" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1163" = type { %"class.blink::Member.1164" }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3979", %"class.blink::Member.712", %"class.mojo::AssociatedReceiver.3980" }
%"class.blink::ThreadState::PrefinalizerRegistration.3979" = type { i8 }
%"class.mojo::AssociatedReceiver.3980" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3981" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3981" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1166" }
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3984", %"class.blink::Member.712", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3984" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.827, %"class.std::__1::unique_ptr.927", %"class.base::WeakPtrFactory.3985" }
%"class.base::WeakPtrFactory.3985" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1168" = type { %"class.blink::Member.1169" }
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3988", %"class.blink::Member.712", %"class.mojo::AssociatedReceiver.3989" }
%"class.blink::ThreadState::PrefinalizerRegistration.3988" = type { i8 }
%"class.mojo::AssociatedReceiver.3989" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3990" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3990" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::HeapHashMap.1179"* }
%"class.blink::HeapHashMap.1179" = type opaque
%"class.mojo::StructPtr.1180" = type { %"class.std::__1::unique_ptr.1181" }
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.1184" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1190" = type { %"class.absl::optional_internal::optional_data.1191" }
%"class.absl::optional_internal::optional_data.1191" = type { %"class.absl::optional_internal::optional_data_base.1192" }
%"class.absl::optional_internal::optional_data_base.1192" = type { %"class.absl::optional_internal::optional_data_dtor_base.1193" }
%"class.absl::optional_internal::optional_data_dtor_base.1193" = type { i8, %union.anon.1194 }
%union.anon.1194 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.1095" = type { %"class.WTF::VectorBuffer.1096" }
%"class.WTF::VectorBuffer.1096" = type { %"class.WTF::VectorBufferBase.1097" }
%"class.WTF::VectorBufferBase.1097" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1100" = type { %"class.WTF::HashMap.1103" }
%"class.WTF::HashMap.1103" = type { %"class.WTF::HashTable.1104" }
%"class.WTF::HashTable.1104" = type <{ %"struct.WTF::KeyValuePair.1106"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1106" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.472" = type { %"class.WTF::ListHashSet.base.482", [7 x i8] }
%"class.WTF::ListHashSet.base.482" = type <{ %"class.WTF::HashTable.477", %"class.blink::Member.479", %"class.blink::Member.479", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.477" = type <{ %"class.blink::Member.479"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::HeapListHashSetNode.481"* }
%"class.blink::HeapListHashSetNode.481" = type { %"class.blink::Member.3449", %"class.blink::Member.479", %"class.blink::Member.479" }
%"class.blink::Member.3449" = type { %"class.blink::MemberBase.3450" }
%"class.blink::MemberBase.3450" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.483" = type { %"class.WTF::ListHashSet.base.493", [7 x i8] }
%"class.WTF::ListHashSet.base.493" = type <{ %"class.WTF::HashTable.488", %"class.blink::Member.490", %"class.blink::Member.490", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.488" = type <{ %"class.blink::Member.490"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::HeapListHashSetNode.492"* }
%"class.blink::HeapListHashSetNode.492" = type { %"class.blink::Member.3445", %"class.blink::Member.490", %"class.blink::Member.490" }
%"class.blink::Member.3445" = type { %"class.blink::MemberBase.3446" }
%"class.blink::MemberBase.3446" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.494" = type { %"class.WTF::ListHashSet.base.504", [7 x i8] }
%"class.WTF::ListHashSet.base.504" = type <{ %"class.WTF::HashTable.499", %"class.blink::Member.501", %"class.blink::Member.501", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.499" = type <{ %"class.blink::Member.501"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::HeapListHashSetNode.503"* }
%"class.blink::HeapListHashSetNode.503" = type { %"class.blink::Member.3441", %"class.blink::Member.501", %"class.blink::Member.501" }
%"class.blink::Member.3441" = type { %"class.blink::MemberBase.3442" }
%"class.blink::MemberBase.3442" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.505" = type { %"class.WTF::ListHashSet.base.515", [7 x i8] }
%"class.WTF::ListHashSet.base.515" = type <{ %"class.WTF::HashTable.510", %"class.blink::Member.512", %"class.blink::Member.512", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.510" = type <{ %"class.blink::Member.512"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::HeapListHashSetNode.514"* }
%"class.blink::HeapListHashSetNode.514" = type { %"class.blink::Member.3437", %"class.blink::Member.512", %"class.blink::Member.512" }
%"class.blink::Member.3437" = type { %"class.blink::MemberBase.3438" }
%"class.blink::MemberBase.3438" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.516" = type { %"class.WTF::ListHashSet.base.526", [7 x i8] }
%"class.WTF::ListHashSet.base.526" = type <{ %"class.WTF::HashTable.521", %"class.blink::Member.523", %"class.blink::Member.523", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.521" = type <{ %"class.blink::Member.523"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::HeapListHashSetNode.525"* }
%"class.blink::HeapListHashSetNode.525" = type { %"class.blink::Member.3365", %"class.blink::Member.523", %"class.blink::Member.523" }
%"class.blink::Member.3365" = type { %"class.blink::MemberBase.3366" }
%"class.blink::MemberBase.3366" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type { %"class.blink::InspectorBaseAgent.3367", %"struct.blink::InspectorDOMAgent::DOMListener", %"class.blink::InspectorStyleSheetBase::Listener", %"class.blink::Member.3294", %"class.blink::Member.708", %"class.blink::Member.3264", %"class.blink::Member.741", %"class.blink::Member.3374", %"class.blink::HeapHashMap.3376", %"class.blink::HeapHashMap.3383", %"class.blink::HeapHashMap.3390", %"class.blink::HeapHashMap.3397", %"class.blink::HeapHashSet.3404", %"class.blink::HeapHashMap.3410", %"class.WTF::HashMap.3417", %"class.WTF::HashMap.3417", %"class.blink::Member.3422", %"class.blink::Member.1242", i32, [4 x i8], %"class.blink::InspectorAgentState::SimpleField", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.WTF::HashMap.3424", %"class.std::__1::unique_ptr.3429", %"class.WTF::HashSet.3341" }
%"class.blink::InspectorBaseAgent.3367" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::CSS::Backend", %"class.blink::Member.461", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.3368" }
%"class.blink::protocol::CSS::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3368" = type { %"class.std::__1::__compressed_pair.3369" }
%"class.std::__1::__compressed_pair.3369" = type { %"struct.std::__1::__compressed_pair_elem.3370" }
%"struct.std::__1::__compressed_pair_elem.3370" = type { %"class.blink::protocol::CSS::Frontend"* }
%"class.blink::protocol::CSS::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"struct.blink::InspectorDOMAgent::DOMListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::InspectorStyleSheetBase::Listener" = type { i32 (...)** }
%"class.blink::Member.3294" = type { %"class.blink::MemberBase.3295" }
%"class.blink::MemberBase.3295" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.3296", %"class.v8::Isolate"*, %"class.blink::Member.708", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.3303", %"class.blink::Member.3310", %"class.blink::HeapVector.3313", %"class.blink::HeapHashMap.3320", %"class.blink::HeapHashMap.3327", %"class.blink::HeapHashMap.3334", %"class.WTF::HashSet.3341", %"class.WTF::HashSet.3341", %"class.WTF::HashMap.3345", i32, %"class.blink::Member.1201", %"class.blink::HeapHashMap.3350", %"class.blink::Member.3357", %"class.blink::Member.3359", %"class.blink::Member.3361", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.3296" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.461", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.3297" }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3297" = type { %"class.std::__1::__compressed_pair.3298" }
%"class.std::__1::__compressed_pair.3298" = type { %"struct.std::__1::__compressed_pair_elem.3299" }
%"struct.std::__1::__compressed_pair_elem.3299" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::HeapHashSet.3303" = type { %"class.WTF::HashSet.3306" }
%"class.WTF::HashSet.3306" = type { %"class.WTF::HashTable.3307" }
%"class.WTF::HashTable.3307" = type <{ %"class.blink::Member.3309"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3309" = type opaque
%"class.blink::Member.3310" = type { %"class.blink::MemberBase.3311" }
%"class.blink::MemberBase.3311" = type { %"class.blink::HeapHashMap.3312"* }
%"class.blink::HeapHashMap.3312" = type opaque
%"class.blink::HeapVector.3313" = type { %"class.WTF::Vector.3316" }
%"class.WTF::Vector.3316" = type { %"class.WTF::VectorBuffer.3317" }
%"class.WTF::VectorBuffer.3317" = type { %"class.WTF::VectorBufferBase.3318" }
%"class.WTF::VectorBufferBase.3318" = type { %"class.blink::Member.3310"*, i32, i32 }
%"class.blink::HeapHashMap.3320" = type { %"class.WTF::HashMap.3323" }
%"class.WTF::HashMap.3323" = type { %"class.WTF::HashTable.3324" }
%"class.WTF::HashTable.3324" = type <{ %"struct.WTF::KeyValuePair.3326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3326" = type opaque
%"class.blink::HeapHashMap.3327" = type { %"class.WTF::HashMap.3330" }
%"class.WTF::HashMap.3330" = type { %"class.WTF::HashTable.3331" }
%"class.WTF::HashTable.3331" = type <{ %"struct.WTF::KeyValuePair.3333"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3333" = type opaque
%"class.blink::HeapHashMap.3334" = type { %"class.WTF::HashMap.3337" }
%"class.WTF::HashMap.3337" = type { %"class.WTF::HashTable.3338" }
%"class.WTF::HashTable.3338" = type <{ %"struct.WTF::KeyValuePair.3340"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3340" = type opaque
%"class.WTF::HashMap.3345" = type { %"class.WTF::HashTable.3346" }
%"class.WTF::HashTable.3346" = type <{ %"struct.WTF::KeyValuePair.3349"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3349" = type opaque
%"class.blink::HeapHashMap.3350" = type { %"class.WTF::HashMap.3353" }
%"class.WTF::HashMap.3353" = type { %"class.WTF::HashTable.3354" }
%"class.WTF::HashTable.3354" = type <{ %"struct.WTF::KeyValuePair.3356"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3356" = type opaque
%"class.blink::Member.3357" = type { %"class.blink::MemberBase.3358" }
%"class.blink::MemberBase.3358" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.3359" = type { %"class.blink::MemberBase.3360" }
%"class.blink::MemberBase.3360" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.3361" = type { %"class.blink::MemberBase.3362" }
%"class.blink::MemberBase.3362" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::Member.3264" = type { %"class.blink::MemberBase.3265" }
%"class.blink::MemberBase.3265" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::Member.3374" = type { %"class.blink::MemberBase.3375" }
%"class.blink::MemberBase.3375" = type { %"class.blink::InspectorResourceContainer"* }
%"class.blink::InspectorResourceContainer" = type opaque
%"class.blink::HeapHashMap.3376" = type { %"class.WTF::HashMap.3379" }
%"class.WTF::HashMap.3379" = type { %"class.WTF::HashTable.3380" }
%"class.WTF::HashTable.3380" = type <{ %"struct.WTF::KeyValuePair.3382"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3382" = type opaque
%"class.blink::HeapHashMap.3383" = type { %"class.WTF::HashMap.3386" }
%"class.WTF::HashMap.3386" = type { %"class.WTF::HashTable.3387" }
%"class.WTF::HashTable.3387" = type <{ %"struct.WTF::KeyValuePair.3389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3389" = type opaque
%"class.blink::HeapHashMap.3390" = type { %"class.WTF::HashMap.3393" }
%"class.WTF::HashMap.3393" = type { %"class.WTF::HashTable.3394" }
%"class.WTF::HashTable.3394" = type <{ %"struct.WTF::KeyValuePair.3396"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3396" = type opaque
%"class.blink::HeapHashMap.3397" = type { %"class.WTF::HashMap.3400" }
%"class.WTF::HashMap.3400" = type { %"class.WTF::HashTable.3401" }
%"class.WTF::HashTable.3401" = type <{ %"struct.WTF::KeyValuePair.3403"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3403" = type opaque
%"class.blink::HeapHashSet.3404" = type { %"class.WTF::HashSet.3407" }
%"class.WTF::HashSet.3407" = type { %"class.WTF::HashTable.3408" }
%"class.WTF::HashTable.3408" = type <{ %"class.blink::Member.1201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.3410" = type { %"class.WTF::HashMap.3413" }
%"class.WTF::HashMap.3413" = type { %"class.WTF::HashTable.3414" }
%"class.WTF::HashTable.3414" = type <{ %"struct.WTF::KeyValuePair.3416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3416" = type opaque
%"class.WTF::HashMap.3417" = type { %"class.WTF::HashTable.3418" }
%"class.WTF::HashTable.3418" = type <{ %"struct.WTF::KeyValuePair.3421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3421" = type opaque
%"class.blink::Member.3422" = type { %"class.blink::MemberBase.3423" }
%"class.blink::MemberBase.3423" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.WTF::HashMap.3424" = type { %"class.WTF::HashTable.3425" }
%"class.WTF::HashTable.3425" = type <{ %"struct.WTF::KeyValuePair.3428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3428" = type opaque
%"class.std::__1::unique_ptr.3429" = type { %"class.std::__1::__compressed_pair.3430" }
%"class.std::__1::__compressed_pair.3430" = type { %"struct.std::__1::__compressed_pair_elem.3431" }
%"struct.std::__1::__compressed_pair_elem.3431" = type { %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* }
%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback" = type { i32 (...)** }
%"class.WTF::HashSet.3341" = type { %"class.WTF::HashTable.3342" }
%"class.WTF::HashTable.3342" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapListHashSet.527" = type { %"class.WTF::ListHashSet.base.537", [7 x i8] }
%"class.WTF::ListHashSet.base.537" = type <{ %"class.WTF::HashTable.532", %"class.blink::Member.534", %"class.blink::Member.534", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.532" = type <{ %"class.blink::Member.534"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::HeapListHashSetNode.536"* }
%"class.blink::HeapListHashSetNode.536" = type { %"class.blink::Member.3294", %"class.blink::Member.534", %"class.blink::Member.534" }
%"class.blink::HeapListHashSet.538" = type { %"class.WTF::ListHashSet.base.548", [7 x i8] }
%"class.WTF::ListHashSet.base.548" = type <{ %"class.WTF::HashTable.543", %"class.blink::Member.545", %"class.blink::Member.545", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.543" = type <{ %"class.blink::Member.545"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::HeapListHashSetNode.547"* }
%"class.blink::HeapListHashSetNode.547" = type { %"class.blink::Member.3290", %"class.blink::Member.545", %"class.blink::Member.545" }
%"class.blink::Member.3290" = type { %"class.blink::MemberBase.3291" }
%"class.blink::MemberBase.3291" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.549" = type { %"class.WTF::ListHashSet.base.559", [7 x i8] }
%"class.WTF::ListHashSet.base.559" = type <{ %"class.WTF::HashTable.554", %"class.blink::Member.556", %"class.blink::Member.556", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.554" = type <{ %"class.blink::Member.556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::HeapListHashSetNode.558"* }
%"class.blink::HeapListHashSetNode.558" = type { %"class.blink::Member.3286", %"class.blink::Member.556", %"class.blink::Member.556" }
%"class.blink::Member.3286" = type { %"class.blink::MemberBase.3287" }
%"class.blink::MemberBase.3287" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.560" = type { %"class.WTF::ListHashSet.base.570", [7 x i8] }
%"class.WTF::ListHashSet.base.570" = type <{ %"class.WTF::HashTable.565", %"class.blink::Member.567", %"class.blink::Member.567", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.565" = type <{ %"class.blink::Member.567"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::HeapListHashSetNode.569"* }
%"class.blink::HeapListHashSetNode.569" = type { %"class.blink::Member.3282", %"class.blink::Member.567", %"class.blink::Member.567" }
%"class.blink::Member.3282" = type { %"class.blink::MemberBase.3283" }
%"class.blink::MemberBase.3283" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.571" = type { %"class.WTF::ListHashSet.base.581", [7 x i8] }
%"class.WTF::ListHashSet.base.581" = type <{ %"class.WTF::HashTable.576", %"class.blink::Member.578", %"class.blink::Member.578", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.576" = type <{ %"class.blink::Member.578"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::HeapListHashSetNode.580"* }
%"class.blink::HeapListHashSetNode.580" = type { %"class.blink::Member.1109", %"class.blink::Member.578", %"class.blink::Member.578" }
%"class.blink::HeapListHashSet.582" = type { %"class.WTF::ListHashSet.base.592", [7 x i8] }
%"class.WTF::ListHashSet.base.592" = type <{ %"class.WTF::HashTable.587", %"class.blink::Member.589", %"class.blink::Member.589", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.587" = type <{ %"class.blink::Member.589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::HeapListHashSetNode.591"* }
%"class.blink::HeapListHashSetNode.591" = type { %"class.blink::Member.3276", %"class.blink::Member.589", %"class.blink::Member.589" }
%"class.blink::Member.3276" = type { %"class.blink::MemberBase.3277" }
%"class.blink::MemberBase.3277" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.593" = type { %"class.WTF::ListHashSet.base.603", [7 x i8] }
%"class.WTF::ListHashSet.base.603" = type <{ %"class.WTF::HashTable.598", %"class.blink::Member.600", %"class.blink::Member.600", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.598" = type <{ %"class.blink::Member.600"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::HeapListHashSetNode.602"* }
%"class.blink::HeapListHashSetNode.602" = type { %"class.blink::Member.3272", %"class.blink::Member.600", %"class.blink::Member.600" }
%"class.blink::Member.3272" = type { %"class.blink::MemberBase.3273" }
%"class.blink::MemberBase.3273" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.604" = type { %"class.WTF::ListHashSet.base.614", [7 x i8] }
%"class.WTF::ListHashSet.base.614" = type <{ %"class.WTF::HashTable.609", %"class.blink::Member.611", %"class.blink::Member.611", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.609" = type <{ %"class.blink::Member.611"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::HeapListHashSetNode.613"* }
%"class.blink::HeapListHashSetNode.613" = type { %"class.blink::Member.3268", %"class.blink::Member.611", %"class.blink::Member.611" }
%"class.blink::Member.3268" = type { %"class.blink::MemberBase.3269" }
%"class.blink::MemberBase.3269" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.615" = type { %"class.WTF::ListHashSet.base.625", [7 x i8] }
%"class.WTF::ListHashSet.base.625" = type <{ %"class.WTF::HashTable.620", %"class.blink::Member.622", %"class.blink::Member.622", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.620" = type <{ %"class.blink::Member.622"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::HeapListHashSetNode.624"* }
%"class.blink::HeapListHashSetNode.624" = type { %"class.blink::Member.3264", %"class.blink::Member.622", %"class.blink::Member.622" }
%"class.blink::HeapListHashSet.626" = type { %"class.WTF::ListHashSet.base.636", [7 x i8] }
%"class.WTF::ListHashSet.base.636" = type <{ %"class.WTF::HashTable.631", %"class.blink::Member.633", %"class.blink::Member.633", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.631" = type <{ %"class.blink::Member.633"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::HeapListHashSetNode.635"* }
%"class.blink::HeapListHashSetNode.635" = type { %"class.blink::Member.3260", %"class.blink::Member.633", %"class.blink::Member.633" }
%"class.blink::Member.3260" = type { %"class.blink::MemberBase.3261" }
%"class.blink::MemberBase.3261" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::HeapListHashSet.637" = type { %"class.WTF::ListHashSet.base.647", [7 x i8] }
%"class.WTF::ListHashSet.base.647" = type <{ %"class.WTF::HashTable.642", %"class.blink::Member.644", %"class.blink::Member.644", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.642" = type <{ %"class.blink::Member.644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::HeapListHashSetNode.646"* }
%"class.blink::HeapListHashSetNode.646" = type { %"class.blink::Member.3256", %"class.blink::Member.644", %"class.blink::Member.644" }
%"class.blink::Member.3256" = type { %"class.blink::MemberBase.3257" }
%"class.blink::MemberBase.3257" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.648" = type { %"class.WTF::ListHashSet.base.658", [7 x i8] }
%"class.WTF::ListHashSet.base.658" = type <{ %"class.WTF::HashTable.653", %"class.blink::Member.655", %"class.blink::Member.655", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.653" = type <{ %"class.blink::Member.655"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::HeapListHashSetNode.657"* }
%"class.blink::HeapListHashSetNode.657" = type { %"class.blink::Member.3252", %"class.blink::Member.655", %"class.blink::Member.655" }
%"class.blink::Member.3252" = type { %"class.blink::MemberBase.3253" }
%"class.blink::MemberBase.3253" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.659" = type { %"class.WTF::ListHashSet.base.669", [7 x i8] }
%"class.WTF::ListHashSet.base.669" = type <{ %"class.WTF::HashTable.664", %"class.blink::Member.666", %"class.blink::Member.666", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.664" = type <{ %"class.blink::Member.666"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::HeapListHashSetNode.668"* }
%"class.blink::HeapListHashSetNode.668" = type { %"class.blink::Member.1111", %"class.blink::Member.666", %"class.blink::Member.666" }
%"class.blink::HeapListHashSet.670" = type { %"class.WTF::ListHashSet.base.680", [7 x i8] }
%"class.WTF::ListHashSet.base.680" = type <{ %"class.WTF::HashTable.675", %"class.blink::Member.677", %"class.blink::Member.677", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.675" = type <{ %"class.blink::Member.677"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::HeapListHashSetNode.679"* }
%"class.blink::HeapListHashSetNode.679" = type { %"class.blink::Member.1089", %"class.blink::Member.677", %"class.blink::Member.677" }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.681" }
%"class.WTF::Vector.681" = type { %"class.WTF::VectorBuffer.682" }
%"class.WTF::VectorBuffer.682" = type { %"class.WTF::VectorBufferBase.683" }
%"class.WTF::VectorBufferBase.683" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.684" }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.687" }
%"class.WTF::HashMap.687" = type { %"class.WTF::HashTable.688" }
%"class.WTF::HashTable.688" = type <{ %"struct.WTF::KeyValuePair.691"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.691" = type { %"class.WTF::String", %"class.absl::optional.692" }
%"class.absl::optional.692" = type { %"class.absl::optional_internal::optional_data.693" }
%"class.absl::optional_internal::optional_data.693" = type { %"class.absl::optional_internal::optional_data_base.694" }
%"class.absl::optional_internal::optional_data_base.694" = type { %"class.absl::optional_internal::optional_data_dtor_base.695" }
%"class.absl::optional_internal::optional_data_dtor_base.695" = type { i8, %union.anon.696 }
%union.anon.696 = type { %"class.WTF::Vector.395" }
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.blink::protocol::Page::Frontend"* }
%"class.blink::protocol::Page::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::InspectedFrames"* }
%"class.WTF::HashMap.714" = type { %"class.WTF::HashTable.715" }
%"class.WTF::HashTable.715" = type <{ %"struct.WTF::KeyValuePair.718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.718" = type { %"class.WTF::String", %"class.blink::protocol::Binary" }
%"class.blink::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr.719 }
%"class.crdtp::Serializable" = type { i32 (...)** }
%class.scoped_refptr.719 = type { %"class.blink::protocol::Binary::Impl"* }
%"class.blink::protocol::Binary::Impl" = type <{ i32 (...)**, %"class.WTF::RefCounted.720", [4 x i8] }>
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.722" = type { %"class.WTF::HashTable.723" }
%"class.WTF::HashTable.723" = type <{ %"struct.WTF::KeyValuePair.726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.726" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::HeapHashMap.727" = type { %"class.WTF::HashMap.730" }
%"class.WTF::HashMap.730" = type { %"class.WTF::HashTable.731" }
%"class.WTF::HashTable.731" = type <{ %"struct.WTF::KeyValuePair.733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.733" = type { %"class.blink::WeakMember.734", %"class.WTF::HashMap.735" }
%"class.blink::WeakMember.734" = type { %"class.blink::MemberBase.713" }
%"class.WTF::HashMap.735" = type { %"class.WTF::HashTable.736" }
%"class.WTF::HashTable.736" = type <{ %"struct.WTF::KeyValuePair.739"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.739" = type { %"class.WTF::String", %class.scoped_refptr.740 }
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::InspectorResourceContentLoader"* }
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::HashMap.765" }
%"class.WTF::HashMap.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"struct.WTF::KeyValuePair.769"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.769" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::MapField.770" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.722" }
%"class.blink::InspectorAgentState::SimpleField.771" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::SimpleField.772" = type { %"class.blink::InspectorAgentState::Field", i32, i32 }
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.712" }
%"class.blink::InspectorPageAgent::Client" = type { i32 (...)** }
%"class.blink::InspectorResourceContentLoader" = type <{ %"class.WTF::HashMap.745", i8, i8, [6 x i8], %"class.blink::Member.712", %"class.blink::HeapHashSet.750", %"class.blink::HeapVector", i32, [4 x i8] }>
%"class.WTF::HashMap.745" = type { %"class.WTF::HashTable.746" }
%"class.WTF::HashTable.746" = type <{ %"struct.WTF::KeyValuePair.749"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.749" = type opaque
%"class.blink::HeapHashSet.750" = type { %"class.WTF::HashSet.753" }
%"class.WTF::HashSet.753" = type { %"class.WTF::HashTable.754" }
%"class.WTF::HashTable.754" = type <{ %"class.blink::Member.756"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.756" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::SharedBuffer::DeprecatedFlatData" = type { %class.scoped_refptr.2, %"class.WTF::Vector", i8* }
%class.scoped_refptr.2 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::StringAppend" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.12", i32, %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.4165" }
%"class.WTF::StringTypeAdapter.4165" = type { %"class.WTF::StringView" }
%"class.blink::CSSStyleSheetResource" = type { %"class.blink::TextResource", %"class.WTF::String", %"class.blink::Member.384" }
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::CSSParserContext" = type opaque
%"class.blink::ScriptResource" = type <{ %"class.blink::TextResource", %"class.blink::ParkableString", %"class.blink::Member.416", i32, i32, %"class.blink::Member.457", i32, [4 x i8] }>
%"class.blink::ParkableString" = type { %class.scoped_refptr.386 }
%class.scoped_refptr.386 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.387", %"class.WTF::String", %"class.std::__1::unique_ptr.389" }
%"class.WTF::RefCounted.387" = type { %"class.base::RefCounted.388" }
%"class.base::RefCounted.388" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.392", %"class.std::__1::unique_ptr.403", %"class.WTF::Vector.409", i8, i32 }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.WTF::Vector.395"* }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.420", %"class.blink::Member.422", %"class.mojo::ScopedHandleBase.424", %"class.std::__1::unique_ptr.425", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.444", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.456 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::ScriptResource"* }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase.424" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.447" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::ValueMaybe.3453" = type { i8, i8 }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::InspectedFrames::Iterator" = type { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* }
%"class.std::__1::unique_ptr.3454" = type { %"class.std::__1::__compressed_pair.3455" }
%"class.std::__1::__compressed_pair.3455" = type { %"struct.std::__1::__compressed_pair_elem.3456" }
%"struct.std::__1::__compressed_pair_elem.3456" = type { %"class.blink::protocol::Page::FrameResourceTree"* }
%"class.blink::protocol::Page::FrameResourceTree" = type { %"class.crdtp::ProtocolObject", %"class.std::__1::unique_ptr.3457", %"class.crdtp::detail::PtrMaybe.3533", %"class.std::__1::unique_ptr.3547" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3457" = type { %"class.std::__1::__compressed_pair.3458" }
%"class.std::__1::__compressed_pair.3458" = type { %"struct.std::__1::__compressed_pair_elem.3459" }
%"struct.std::__1::__compressed_pair_elem.3459" = type { %"class.blink::protocol::Page::Frame"* }
%"class.blink::protocol::Page::Frame" = type { %"class.crdtp::ProtocolObject.3460", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.3463", %"class.crdtp::detail::PtrMaybe" }
%"class.crdtp::ProtocolObject.3460" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3463" = type { %"class.std::__1::__compressed_pair.3464" }
%"class.std::__1::__compressed_pair.3464" = type { %"struct.std::__1::__compressed_pair_elem.3465" }
%"struct.std::__1::__compressed_pair_elem.3465" = type { %"class.std::__1::vector.3466"* }
%"class.std::__1::vector.3466" = type { %"class.std::__1::__vector_base.3467" }
%"class.std::__1::__vector_base.3467" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.3468" }
%"class.std::__1::__compressed_pair.3468" = type { %"struct.std::__1::__compressed_pair_elem.3469" }
%"struct.std::__1::__compressed_pair_elem.3469" = type { %"class.WTF::String"* }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.3476" }
%"class.std::__1::unique_ptr.3476" = type { %"class.std::__1::__compressed_pair.3477" }
%"class.std::__1::__compressed_pair.3477" = type { %"struct.std::__1::__compressed_pair_elem.3478" }
%"struct.std::__1::__compressed_pair_elem.3478" = type { %"class.std::__1::vector.3479"* }
%"class.std::__1::vector.3479" = type { %"class.std::__1::__vector_base.3480" }
%"class.std::__1::__vector_base.3480" = type { %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::__compressed_pair.3522" }
%"class.std::__1::unique_ptr.3481" = type { %"class.std::__1::__compressed_pair.3482" }
%"class.std::__1::__compressed_pair.3482" = type { %"struct.std::__1::__compressed_pair_elem.3483" }
%"struct.std::__1::__compressed_pair_elem.3483" = type { %"class.blink::protocol::Page::OriginTrial"* }
%"class.blink::protocol::Page::OriginTrial" = type { %"class.crdtp::ProtocolObject.3484", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.3487" }
%"class.crdtp::ProtocolObject.3484" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3487" = type { %"class.std::__1::__compressed_pair.3488" }
%"class.std::__1::__compressed_pair.3488" = type { %"struct.std::__1::__compressed_pair_elem.3489" }
%"struct.std::__1::__compressed_pair_elem.3489" = type { %"class.std::__1::vector.3490"* }
%"class.std::__1::vector.3490" = type { %"class.std::__1::__vector_base.3491" }
%"class.std::__1::__vector_base.3491" = type { %"class.std::__1::unique_ptr.3492"*, %"class.std::__1::unique_ptr.3492"*, %"class.std::__1::__compressed_pair.3511" }
%"class.std::__1::unique_ptr.3492" = type { %"class.std::__1::__compressed_pair.3493" }
%"class.std::__1::__compressed_pair.3493" = type { %"struct.std::__1::__compressed_pair_elem.3494" }
%"struct.std::__1::__compressed_pair_elem.3494" = type { %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* }
%"class.blink::protocol::Page::OriginTrialTokenWithStatus" = type { %"class.crdtp::ProtocolObject.3495", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.3498", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3495" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3498" = type { %"class.std::__1::unique_ptr.3499" }
%"class.std::__1::unique_ptr.3499" = type { %"class.std::__1::__compressed_pair.3500" }
%"class.std::__1::__compressed_pair.3500" = type { %"struct.std::__1::__compressed_pair_elem.3501" }
%"struct.std::__1::__compressed_pair_elem.3501" = type { %"class.blink::protocol::Page::OriginTrialToken"* }
%"class.blink::protocol::Page::OriginTrialToken" = type { %"class.crdtp::ProtocolObject.3502", %"class.WTF::String", i8, %"class.WTF::String", double, i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3502" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3511" = type { %"struct.std::__1::__compressed_pair_elem.3512" }
%"struct.std::__1::__compressed_pair_elem.3512" = type { %"class.std::__1::unique_ptr.3492"* }
%"class.std::__1::__compressed_pair.3522" = type { %"struct.std::__1::__compressed_pair_elem.3523" }
%"struct.std::__1::__compressed_pair_elem.3523" = type { %"class.std::__1::unique_ptr.3481"* }
%"class.crdtp::detail::PtrMaybe.3533" = type { %"class.std::__1::unique_ptr.3534" }
%"class.std::__1::unique_ptr.3534" = type { %"class.std::__1::__compressed_pair.3535" }
%"class.std::__1::__compressed_pair.3535" = type { %"struct.std::__1::__compressed_pair_elem.3536" }
%"struct.std::__1::__compressed_pair_elem.3536" = type { %"class.std::__1::vector.3537"* }
%"class.std::__1::vector.3537" = type { %"class.std::__1::__vector_base.3538" }
%"class.std::__1::__vector_base.3538" = type { %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::__compressed_pair.3539" }
%"class.std::__1::__compressed_pair.3539" = type { %"struct.std::__1::__compressed_pair_elem.3540" }
%"struct.std::__1::__compressed_pair_elem.3540" = type { %"class.std::__1::unique_ptr.3454"* }
%"class.std::__1::unique_ptr.3547" = type { %"class.std::__1::__compressed_pair.3548" }
%"class.std::__1::__compressed_pair.3548" = type { %"struct.std::__1::__compressed_pair_elem.3549" }
%"struct.std::__1::__compressed_pair_elem.3549" = type { %"class.std::__1::vector.3550"* }
%"class.std::__1::vector.3550" = type { %"class.std::__1::__vector_base.3551" }
%"class.std::__1::__vector_base.3551" = type { %"class.std::__1::unique_ptr.3552"*, %"class.std::__1::unique_ptr.3552"*, %"class.std::__1::__compressed_pair.3562" }
%"class.std::__1::unique_ptr.3552" = type { %"class.std::__1::__compressed_pair.3553" }
%"class.std::__1::__compressed_pair.3553" = type { %"struct.std::__1::__compressed_pair_elem.3554" }
%"struct.std::__1::__compressed_pair_elem.3554" = type { %"class.blink::protocol::Page::FrameResource"* }
%"class.blink::protocol::Page::FrameResource" = type <{ %"class.crdtp::ProtocolObject.3555", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.3558", %"class.crdtp::detail::ValueMaybe.3558", %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453", [4 x i8] }>
%"class.crdtp::ProtocolObject.3555" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.3558" = type { i8, double }
%"class.std::__1::__compressed_pair.3562" = type { %"struct.std::__1::__compressed_pair_elem.3563" }
%"struct.std::__1::__compressed_pair_elem.3563" = type { %"class.std::__1::unique_ptr.3552"* }
%"class.std::__1::unique_ptr.3573" = type { %"class.std::__1::__compressed_pair.3574" }
%"class.std::__1::__compressed_pair.3574" = type { %"struct.std::__1::__compressed_pair_elem.3575" }
%"struct.std::__1::__compressed_pair_elem.3575" = type { %"class.blink::protocol::Page::FrameTree"* }
%"class.blink::protocol::Page::FrameTree" = type { %"class.crdtp::ProtocolObject.3576", %"class.std::__1::unique_ptr.3457", %"class.crdtp::detail::PtrMaybe.3579" }
%"class.crdtp::ProtocolObject.3576" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3579" = type { %"class.std::__1::unique_ptr.3580" }
%"class.std::__1::unique_ptr.3580" = type { %"class.std::__1::__compressed_pair.3581" }
%"class.std::__1::__compressed_pair.3581" = type { %"struct.std::__1::__compressed_pair_elem.3582" }
%"struct.std::__1::__compressed_pair_elem.3582" = type { %"class.std::__1::vector.3583"* }
%"class.std::__1::vector.3583" = type { %"class.std::__1::__vector_base.3584" }
%"class.std::__1::__vector_base.3584" = type { %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::__compressed_pair.3585" }
%"class.std::__1::__compressed_pair.3585" = type { %"struct.std::__1::__compressed_pair_elem.3586" }
%"struct.std::__1::__compressed_pair_elem.3586" = type { %"class.std::__1::unique_ptr.3573"* }
%"class.blink::protocol::Page::Backend::GetResourceContentCallback" = type { i32 (...)** }
%"class.blink::MemoryCache" = type { %"class.blink::MemoryCacheDumpClient", %"class.blink::MemoryPressureListener", %"class.blink::HeapHashMap.4058", i8, i8, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.base::TimeDelta", i64, %class.scoped_refptr.456 }
%"class.blink::MemoryCacheDumpClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashMap.4058" = type { %"class.WTF::HashMap.4061" }
%"class.WTF::HashMap.4061" = type { %"class.WTF::HashTable.4062" }
%"class.WTF::HashTable.4062" = type <{ %"struct.WTF::KeyValuePair.4064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4064" = type opaque
%"class.std::__1::unique_ptr.3596" = type { %"class.std::__1::__compressed_pair.3597" }
%"class.std::__1::__compressed_pair.3597" = type { %"struct.std::__1::__compressed_pair_elem.3598" }
%"struct.std::__1::__compressed_pair_elem.3598" = type { %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* }
%"class.blink::Persistent.3602" = type { %"class.blink::PersistentBase.3603" }
%"class.blink::PersistentBase.3603" = type { %"class.blink::InspectorPageAgent"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.4176", %"class.std::__1::__tuple_leaf.4177", %"class.std::__1::__tuple_leaf.4178" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.3602" }
%"class.std::__1::__tuple_leaf.4176" = type { %"class.WTF::String" }
%"class.std::__1::__tuple_leaf.4177" = type { %"class.WTF::String" }
%"class.std::__1::__tuple_leaf.4178" = type { %"class.std::__1::unique_ptr.3596" }
%"class.std::__1::vector.3610" = type { %"class.std::__1::__vector_base.3611" }
%"class.std::__1::__vector_base.3611" = type { %"class.std::__1::unique_ptr.3612"*, %"class.std::__1::unique_ptr.3612"*, %"class.std::__1::__compressed_pair.3618" }
%"class.std::__1::unique_ptr.3612" = type { %"class.std::__1::__compressed_pair.3613" }
%"class.std::__1::__compressed_pair.3613" = type { %"struct.std::__1::__compressed_pair_elem.3614" }
%"struct.std::__1::__compressed_pair_elem.3614" = type { %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* }
%"class.v8_inspector::protocol::Debugger::API::SearchMatch" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.3618" = type { %"struct.std::__1::__compressed_pair_elem.3619" }
%"struct.std::__1::__compressed_pair_elem.3619" = type { %"class.std::__1::unique_ptr.3612"* }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.3623 }
%union.anon.3623 = type { i8* }
%"class.blink::protocol::Page::Backend::SearchInResourceCallback" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3604" = type { %"class.std::__1::__compressed_pair.3605" }
%"class.std::__1::__compressed_pair.3605" = type { %"struct.std::__1::__compressed_pair_elem.3606" }
%"struct.std::__1::__compressed_pair_elem.3606" = type { %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* }
%"struct.std::__1::__tuple_impl.4183" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.4176", %"class.std::__1::__tuple_leaf.4177", %"class.std::__1::__tuple_leaf.4184", %"class.std::__1::__tuple_leaf.4185", %"class.std::__1::__tuple_leaf.4186", %"class.std::__1::__tuple_leaf.4187" }
%"class.std::__1::__tuple_leaf.4184" = type { %"class.WTF::String" }
%"class.std::__1::__tuple_leaf.4185" = type { i8 }
%"class.std::__1::__tuple_leaf.4186" = type { i8 }
%"class.std::__1::__tuple_leaf.4187" = type { %"class.std::__1::unique_ptr.3604" }
%"class.std::__1::unique_ptr.3630" = type { %"class.std::__1::__compressed_pair.3631" }
%"class.std::__1::__compressed_pair.3631" = type { %"struct.std::__1::__compressed_pair_elem.3632" }
%"struct.std::__1::__compressed_pair_elem.3632" = type { %"class.std::__1::vector.3633"* }
%"class.std::__1::vector.3633" = type { %"class.std::__1::__vector_base.3634" }
%"class.std::__1::__vector_base.3634" = type { %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::__compressed_pair.3654" }
%"class.std::__1::unique_ptr.3635" = type { %"class.std::__1::__compressed_pair.3636" }
%"class.std::__1::__compressed_pair.3636" = type { %"struct.std::__1::__compressed_pair_elem.3637" }
%"struct.std::__1::__compressed_pair_elem.3637" = type { %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* }
%"class.blink::protocol::Page::PermissionsPolicyFeatureState" = type { %"class.crdtp::ProtocolObject.3638", %"class.WTF::String", i8, %"class.crdtp::detail::PtrMaybe.3641" }
%"class.crdtp::ProtocolObject.3638" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3641" = type { %"class.std::__1::unique_ptr.3642" }
%"class.std::__1::unique_ptr.3642" = type { %"class.std::__1::__compressed_pair.3643" }
%"class.std::__1::__compressed_pair.3643" = type { %"struct.std::__1::__compressed_pair_elem.3644" }
%"struct.std::__1::__compressed_pair_elem.3644" = type { %"class.blink::protocol::Page::PermissionsPolicyBlockLocator"* }
%"class.blink::protocol::Page::PermissionsPolicyBlockLocator" = type { %"class.crdtp::ProtocolObject.3645", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3645" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3654" = type { %"struct.std::__1::__compressed_pair_elem.3655" }
%"struct.std::__1::__compressed_pair_elem.3655" = type { %"class.std::__1::unique_ptr.3635"* }
%"class.absl::optional.3668" = type { %"class.absl::optional_internal::optional_data.3669" }
%"class.absl::optional_internal::optional_data.3669" = type { %"class.absl::optional_internal::optional_data_base.3670" }
%"class.absl::optional_internal::optional_data_base.3670" = type { %"class.absl::optional_internal::optional_data_dtor_base.3671" }
%"class.absl::optional_internal::optional_data_dtor_base.3671" = type { i8, [7 x i8], %union.anon.3672 }
%union.anon.3672 = type { %"struct.blink::PermissionsPolicyBlockLocator" }
%"struct.blink::PermissionsPolicyBlockLocator" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::HashMap.3662" = type { %"class.WTF::HashTable.3663" }
%"class.WTF::HashTable.3663" = type <{ %"struct.WTF::KeyValuePair.3666"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3666" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::ConditionalDestructor.737" = type { i8 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::ScriptSourceCode" = type <{ %"class.blink::ParkableString", %"class.blink::Member.3698", %"class.blink::Member.416", i32, [4 x i8], %"class.blink::KURL", %"class.WTF::String", %"class.WTF::TextPosition", i32, [4 x i8] }>
%"class.blink::Member.3698" = type { %"class.blink::MemberBase.3699" }
%"class.blink::MemberBase.3699" = type { %"class.blink::SingleCachedMetadataHandler"* }
%"class.blink::SingleCachedMetadataHandler" = type <{ %"class.blink::CachedMetadataHandler", i8, [7 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.740, %"class.blink::Member.3684", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3688" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::Member.3684" = type { %"class.blink::MemberBase.3685" }
%"class.blink::MemberBase.3685" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3686" }
%"class.blink::Persistent.3686" = type { %"class.blink::PersistentBase.3687" }
%"class.blink::PersistentBase.3687" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.3688" = type { %"class.base::StrongAlias.3689" }
%"class.base::StrongAlias.3689" = type { %"class.base::UnguessableToken" }
%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope" = type { i32 (...)** }
%"class.blink::ClassicScript" = type <{ %"class.blink::Script", %"class.blink::ScriptSourceCode", i32, [4 x i8] }>
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.157", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.WTF::StringAppend.3729" = type { i8*, %"class.WTF::String" }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.775", %"class.blink::Member.3730", %"struct.blink::FramePolicy", %"class.blink::Member.3732", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.3730" = type { %"class.blink::MemberBase.3731" }
%"class.blink::MemberBase.3731" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.3732" = type { %"class.blink::MemberBase.3733" }
%"class.blink::MemberBase.3733" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.1069", %"class.WTF::Vector.4069" }
%"class.WTF::Vector.4069" = type { %"class.WTF::VectorBuffer.4070" }
%"class.WTF::VectorBuffer.4070" = type { %"class.WTF::VectorBufferBase.4071", [64 x i8] }
%"class.WTF::VectorBufferBase.4071" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.crdtp::detail::PtrMaybe.3713" = type { %"class.std::__1::unique_ptr.3714" }
%"class.std::__1::unique_ptr.3714" = type { %"class.std::__1::__compressed_pair.3715" }
%"class.std::__1::__compressed_pair.3715" = type { %"struct.std::__1::__compressed_pair_elem.3716" }
%"struct.std::__1::__compressed_pair_elem.3716" = type { %"class.v8_inspector::protocol::Runtime::API::StackTrace"* }
%"class.v8_inspector::protocol::Runtime::API::StackTrace" = type { %"class.v8_inspector::protocol::Exported" }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.3704", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.3704" = type { %"class.std::__1::__compressed_pair.3705" }
%"class.std::__1::__compressed_pair.3705" = type { %"struct.std::__1::__compressed_pair_elem.3706" }
%"struct.std::__1::__compressed_pair_elem.3706" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::probe::UpdateLayout" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::Document"* }
%"class.blink::probe::ProbeBase" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::probe::RecalculateStyle" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::Document"* }
%"class.WTF::StringTypeAdapter.4219" = type <{ i8*, i32, [4 x i8] }>
%"class.crdtp::detail::ValueMaybe.3740" = type { i8, i32 }
%"class.std::__1::unique_ptr.3741" = type { %"class.std::__1::__compressed_pair.3742" }
%"class.std::__1::__compressed_pair.3742" = type { %"struct.std::__1::__compressed_pair_elem.3743" }
%"struct.std::__1::__compressed_pair_elem.3743" = type { %"class.blink::protocol::Page::LayoutViewport"* }
%"class.blink::protocol::Page::LayoutViewport" = type { %"class.crdtp::ProtocolObject.3744", i32, i32, i32, i32 }
%"class.crdtp::ProtocolObject.3744" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3750" = type { %"class.std::__1::__compressed_pair.3751" }
%"class.std::__1::__compressed_pair.3751" = type { %"struct.std::__1::__compressed_pair_elem.3752" }
%"struct.std::__1::__compressed_pair_elem.3752" = type { %"class.blink::protocol::Page::VisualViewport"* }
%"class.blink::protocol::Page::VisualViewport" = type { %"class.crdtp::ProtocolObject.3753", double, double, double, double, double, double, double, %"class.crdtp::detail::ValueMaybe.3558" }
%"class.crdtp::ProtocolObject.3753" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3759" = type { %"class.std::__1::__compressed_pair.3760" }
%"class.std::__1::__compressed_pair.3760" = type { %"struct.std::__1::__compressed_pair_elem.3761" }
%"struct.std::__1::__compressed_pair_elem.3761" = type { %"class.blink::protocol::DOM::Rect"* }
%"class.blink::protocol::DOM::Rect" = type { %"class.crdtp::ProtocolObject.3762", double, double, double, double }
%"class.crdtp::ProtocolObject.3762" = type { %"class.crdtp::Serializable" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.3772", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.3046" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.3770", %"class.blink::Member.2703", %"class.blink::Member.2703", i8, [7 x i8] }>
%"class.blink::Member.3770" = type { %"class.blink::MemberBase.3771" }
%"class.blink::MemberBase.3771" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2870", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.3772" = type { %"class.std::__1::__compressed_pair.3773" }
%"class.std::__1::__compressed_pair.3773" = type { %"struct.std::__1::__compressed_pair_elem.3774" }
%"struct.std::__1::__compressed_pair_elem.3774" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.3775", %"class.absl::optional.2138", i8, i8, %"class.WTF::Vector.2765" }
%"class.WTF::HashMap.3775" = type { %"class.WTF::HashTable.3776" }
%"class.WTF::HashTable.3776" = type <{ %"struct.WTF::KeyValuePair.3779"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3779" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3783" }
%"class.blink::Member.3783" = type { %"class.blink::MemberBase.3784" }
%"class.blink::MemberBase.3784" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3783" }
%"class.blink::protocol::Page::FontFamilies" = type { %"class.crdtp::ProtocolObject.3805", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.3805" = type { %"class.crdtp::Serializable" }
%"class.blink::protocol::Page::FontSizes" = type { %"class.crdtp::ProtocolObject.3814", %"class.crdtp::detail::ValueMaybe.3740", %"class.crdtp::detail::ValueMaybe.3740" }
%"class.crdtp::ProtocolObject.3814" = type { %"class.crdtp::Serializable" }
%"struct.v8::ScriptCompiler::CachedData" = type <{ i8*, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::Script" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::UnboundScript" = type { i8 }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.3843", %"class.blink::Member.3845", %"class.blink::Member.3847", %"class.blink::Member.3849", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.3841", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3835", %"class.blink::Member.3837", %"class.blink::Member.3839", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.3835" = type { %"class.blink::MemberBase.3836" }
%"class.blink::MemberBase.3836" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.3837" = type { %"class.blink::MemberBase.3838" }
%"class.blink::MemberBase.3838" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3839" = type { %"class.blink::MemberBase.3840" }
%"class.blink::MemberBase.3840" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3841" = type { %"class.blink::MemberBase.3842" }
%"class.blink::MemberBase.3842" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.3843" = type { %"class.blink::MemberBase.3844" }
%"class.blink::MemberBase.3844" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.3845" = type { %"class.blink::MemberBase.3846" }
%"class.blink::MemberBase.3846" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.3847" = type { %"class.blink::MemberBase.3848" }
%"class.blink::MemberBase.3848" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.3849" = type { %"class.blink::MemberBase.3850" }
%"class.blink::MemberBase.3850" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.std::__1::vector.3854" = type { %"class.std::__1::__vector_base.3855" }
%"class.std::__1::__vector_base.3855" = type { %"class.std::__1::unique_ptr.3856"*, %"class.std::__1::unique_ptr.3856"*, %"class.std::__1::__compressed_pair.3865" }
%"class.std::__1::unique_ptr.3856" = type { %"class.std::__1::__compressed_pair.3857" }
%"class.std::__1::__compressed_pair.3857" = type { %"struct.std::__1::__compressed_pair_elem.3858" }
%"struct.std::__1::__compressed_pair_elem.3858" = type { %"class.blink::protocol::Page::CompilationCacheParams"* }
%"class.blink::protocol::Page::CompilationCacheParams" = type <{ %"class.crdtp::ProtocolObject.3859", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.3453", [6 x i8] }>
%"class.crdtp::ProtocolObject.3859" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3865" = type { %"struct.std::__1::__compressed_pair_elem.3866" }
%"struct.std::__1::__compressed_pair_elem.3866" = type { %"class.std::__1::unique_ptr.3856"* }
%"class.blink::TestReportBody" = type { %"class.blink::ReportBody", %"class.WTF::String" }
%"class.blink::ReportBody" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Report" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.3874" }
%"class.blink::Member.3874" = type { %"class.blink::MemberBase.3875" }
%"class.blink::MemberBase.3875" = type { %"class.blink::ReportBody"* }
%"class.blink::ReportingContext" = type { %"class.blink::mojom::blink::ReportingObserver", %"class.blink::Supplement", %"class.blink::HeapListHashSet.3878", %"class.blink::HeapHashMap.3889", %"class.blink::Member.1378", %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver.3896" }
%"class.blink::mojom::blink::ReportingObserver" = type { i32 (...)** }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1378" }
%"class.blink::HeapListHashSet.3878" = type { %"class.WTF::ListHashSet.base.3888", [7 x i8] }
%"class.WTF::ListHashSet.base.3888" = type <{ %"class.WTF::HashTable.3883", %"class.blink::Member.3885", %"class.blink::Member.3885", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.3883" = type <{ %"class.blink::Member.3885"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3885" = type { %"class.blink::MemberBase.3886" }
%"class.blink::MemberBase.3886" = type { %"class.blink::HeapListHashSetNode.3887"* }
%"class.blink::HeapListHashSetNode.3887" = type { %"class.blink::Member.3901", %"class.blink::Member.3885", %"class.blink::Member.3885" }
%"class.blink::Member.3901" = type { %"class.blink::MemberBase.3902" }
%"class.blink::MemberBase.3902" = type { %"class.blink::ReportingObserver"* }
%"class.blink::ReportingObserver" = type opaque
%"class.blink::HeapHashMap.3889" = type { %"class.WTF::HashMap.3892" }
%"class.WTF::HashMap.3892" = type { %"class.WTF::HashTable.3893" }
%"class.WTF::HashTable.3893" = type <{ %"struct.WTF::KeyValuePair.3895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3895" = type opaque
%"class.blink::HeapMojoReceiver.3896" = type { %"class.blink::Member.3897" }
%"class.blink::Member.3897" = type { %"class.blink::MemberBase.3898" }
%"class.blink::MemberBase.3898" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::ReportingObserver, blink::ReportingContext, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::ReportingObserver, blink::ReportingContext, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.3903", %"class.std::__1::vector.3911" }
%"class.std::__1::vector.3903" = type { %"class.std::__1::__vector_base.3904" }
%"class.std::__1::__vector_base.3904" = type { %"struct.std::__1::pair.3905"*, %"struct.std::__1::pair.3905"*, %"class.std::__1::__compressed_pair.3906" }
%"struct.std::__1::pair.3905" = type opaque
%"class.std::__1::__compressed_pair.3906" = type { %"struct.std::__1::__compressed_pair_elem.3907" }
%"struct.std::__1::__compressed_pair_elem.3907" = type { %"struct.std::__1::pair.3905"* }
%"class.std::__1::vector.3911" = type { %"class.std::__1::__vector_base.3912" }
%"class.std::__1::__vector_base.3912" = type { %"struct.std::__1::pair.3913"*, %"struct.std::__1::pair.3913"*, %"class.std::__1::__compressed_pair.3914" }
%"struct.std::__1::pair.3913" = type opaque
%"class.std::__1::__compressed_pair.3914" = type { %"struct.std::__1::__compressed_pair_elem.3915" }
%"struct.std::__1::__compressed_pair_elem.3915" = type { %"struct.std::__1::pair.3913"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::tuple.4182" = type { %"struct.std::__1::__tuple_impl.4183" }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_ = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink18InspectorPageAgentD2Ev = comdat any

$_ZN5blink18InspectorPageAgentD0Ev = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7DisposeEv = comdat any

$_ZThn8_N5blink18InspectorPageAgentD1Ev = comdat any

$_ZThn8_N5blink18InspectorPageAgentD0Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA8_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA7_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA11_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA10_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA9_KcEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_SC_SD_EERKS1_RKS5_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm = comdat any

$_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN5blink22OriginTrialTokenResultaSERKS0_ = comdat any

$_ZN5blink10TrialTokenaSERKS0_ = comdat any

$_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJRKS2_EEEPS2_PvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page11OriginTrialENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page26OriginTrialTokenWithStatusENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN7logging15CheckOpValueStrIN2v814ScriptCompiler10CachedData12BufferPolicyEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED2Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbED2Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7disableEv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18InspectorPageAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_18InspectorPageAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol4Page7Backend26GetResourceContentCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES6_S6_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES7_NSt3__110unique_ptrINS2_8protocol4Page7Backend26GetResourceContentCallbackENS8_14default_deleteISD_EEEEEJNS2_10PersistentIS3_EES5_S5_SG_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__15tupleIJN5blink10PersistentINS1_18InspectorPageAgentEEEN3WTF6StringES6_NS_10unique_ptrINS1_8protocol4Page7Backend26GetResourceContentCallbackENS_14default_deleteISB_EEEEEEC2IJS4_RKS6_SI_SE_ELb0ELb0EEEDpOT_ = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_NS_10unique_ptrINS3_8protocol4Page7Backend26GetResourceContentCallbackENS_14default_deleteISD_EEEEEED2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_S8_bbNSt3__110unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES6_S6_S6_bbSH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES7_S7_bbNSt3__110unique_ptrINS2_8protocol4Page7Backend24SearchInResourceCallbackENS8_14default_deleteISD_EEEEEJNS2_10PersistentIS3_EES5_S5_S5_bbSG_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_S8_bbNS_10unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS_14default_deleteISD_EEEEEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_S8_bbNS_10unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS_14default_deleteISD_EEEEEEC2IJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEJS6_S8_S8_S8_bbSG_EJEJEJS6_RKS8_SK_SK_RKbSM_SG_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSO_IJDpT2_EEEDpOT3_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page29PermissionsPolicyFeatureStateENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorISK_SO_SP_EEPS3_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISO_SK_SP_EERPS3_SG_EENS_18HashTableAddResultISQ_SH_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6ExpandEPSH_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6RehashEjPSH_ = comdat any

$_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSH_EEEPSH_PvDpOT_ = comdat any

$_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE12ExpandBufferEjPSH_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE8RehashToEPSH_jSR_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEELb1EE4MoveEOSH_RSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS1_12KeyValuePairIS5_NS1_7HashMapINS1_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS1_10StringHashENS1_10HashTraitsIS8_EENSD_ISB_EENS1_18PartitionAllocatorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESN_NS_13HeapAllocatorEEEE14AllocateObjectISS_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS3_12KeyValuePairIS7_NS3_7HashMapINS3_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS3_10StringHashENS3_10HashTraitsISA_EENSF_ISD_EENS3_18PartitionAllocatorEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINSF_IS7_EENSF_ISJ_EEEESP_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_I13scoped_refptrIN5blink15DOMWrapperWorldEEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_RS8_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page9FrameTreeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page13FrameResourceENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page17FrameResourceTreeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS8_SD_SE_EES1_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS1_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink8protocol6BinaryEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERS3_RS7_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8ReinsertEOS6_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EES1_bEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_bEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS1_RKS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink8protocol6BinaryEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERKS3_RKS7_EEvRT_OT0_OT1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA5_KcRKN3WTF6StringERPNS_14TestReportBodyEEEEPS1_DpOT_ = comdat any

$_ZN5blink6ReportD2Ev = comdat any

$_ZN5blink6ReportD0Ev = comdat any

$_ZNK5blink6Report5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink6Report18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10LocalFrameEEENS_12KeyValuePairIS5_NS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS8_EENSD_ISB_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESN_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE = comdat any

$_ZTVN5blink19InspectorAgentState8MapFieldIbEE = comdat any

$_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink6ReportE = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"WinLatin1\00", align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum8DocumentE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum4FontE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum5ImageE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum5MediaE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum6ScriptE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum10StylesheetE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum9TextTrackE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum3XHRE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum5FetchE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum11EventSourceE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum9WebSocketE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum8ManifestE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum14SignedExchangeE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum4PingE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16ResourceTypeEnum5OtherE = external constant [0 x i8], align 1
@_ZTVN5blink18InspectorPageAgentE = hidden unnamed_addr constant { [40 x i8*], [34 x i8*] } { [40 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorPageAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorPageAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink18InspectorPageAgent25addScriptToEvaluateOnLoadERKN3WTF6StringEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*)* @_ZN5blink18InspectorPageAgent28removeScriptToEvaluateOnLoadERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3453"*, %"class.WTF::String"*)* @_ZN5blink18InspectorPageAgent32addScriptToEvaluateOnNewDocumentERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*)* @_ZN5blink18InspectorPageAgent35removeScriptToEvaluateOnNewDocumentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZN5blink18InspectorPageAgent25setLifecycleEventsEnabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.crdtp::detail::ValueMaybe.3453"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink18InspectorPageAgent6reloadEN5crdtp6detail10ValueMaybeIbEENS3_IN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgent11stopLoadingEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZN5blink18InspectorPageAgent20setAdBlockingEnabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.std::__1::unique_ptr.3454"*)* @_ZN5blink18InspectorPageAgent15getResourceTreeEPNSt3__110unique_ptrINS_8protocol4Page17FrameResourceTreeENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.std::__1::unique_ptr.3573"*)* @_ZN5blink18InspectorPageAgent12getFrameTreeEPNSt3__110unique_ptrINS_8protocol4Page9FrameTreeENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)* @_ZN5blink18InspectorPageAgent18getResourceContentERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol4Page7Backend26GetResourceContentCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3453"*, %"class.crdtp::detail::ValueMaybe.3453"*, i64)* @_ZN5blink18InspectorPageAgent16searchInResourceERKN3WTF6StringES4_S4_N5crdtp6detail10ValueMaybeIbEES8_NSt3__110unique_ptrINS_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink18InspectorPageAgent18setDocumentContentERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZN5blink18InspectorPageAgent12setBypassCSPEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.3630"*)* @_ZN5blink18InspectorPageAgent25getPermissionsPolicyStateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol4Page29PermissionsPolicyFeatureStateENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3740"*, %"class.crdtp::detail::ValueMaybe.3740"*, %"class.crdtp::detail::ValueMaybe.3740"*, %"class.crdtp::detail::ValueMaybe.3740"*)* @_ZN5blink18InspectorPageAgent15startScreencastEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS3_IiEES7_S7_S7_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgent14stopScreencastEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.std::__1::unique_ptr.3741"*, %"class.std::__1::unique_ptr.3750"*, %"class.std::__1::unique_ptr.3759"*, %"class.std::__1::unique_ptr.3741"*, %"class.std::__1::unique_ptr.3750"*, %"class.std::__1::unique_ptr.3759"*)* @_ZN5blink18InspectorPageAgent16getLayoutMetricsEPNSt3__110unique_ptrINS_8protocol4Page14LayoutViewportENS1_14default_deleteIS5_EEEEPNS2_INS4_14VisualViewportENS6_ISA_EEEEPNS2_INS3_3DOM4RectENS6_ISF_EEEES9_SD_SI_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3453"*, i32*)* @_ZN5blink18InspectorPageAgent19createIsolatedWorldERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.blink::protocol::Page::FontFamilies"*)* @_ZN5blink18InspectorPageAgent15setFontFamiliesENSt3__110unique_ptrINS_8protocol4Page12FontFamiliesENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.blink::protocol::Page::FontSizes"*)* @_ZN5blink18InspectorPageAgent12setFontSizesENSt3__110unique_ptrINS_8protocol4Page9FontSizesENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink18InspectorPageAgent18generateTestReportERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZN5blink18InspectorPageAgent26setProduceCompilationCacheEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.std::__1::vector.3854"*)* @_ZN5blink18InspectorPageAgent23produceCompilationCacheENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol4Page22CompilationCacheParamsENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.blink::protocol::Binary"*)* @_ZN5blink18InspectorPageAgent19addCompilationCacheERKN3WTF6StringERKNS_8protocol6BinaryE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgent21clearCompilationCacheEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZN5blink18InspectorPageAgent15waitForDebuggerEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZN5blink18InspectorPageAgent29setInterceptFileChooserDialogEb to i8*)], [34 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorPageAgent"*)* @_ZThn8_N5blink18InspectorPageAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorPageAgent"*)* @_ZThn8_N5blink18InspectorPageAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn8_N5blink18InspectorPageAgent25addScriptToEvaluateOnLoadERKN3WTF6StringEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3453"*, %"class.WTF::String"*)* @_ZThn8_N5blink18InspectorPageAgent32addScriptToEvaluateOnNewDocumentERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3453"*, i32*)* @_ZThn8_N5blink18InspectorPageAgent19createIsolatedWorldERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPi to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZThn8_N5blink18InspectorPageAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZThn8_N5blink18InspectorPageAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.std::__1::unique_ptr.3573"*)* @_ZThn8_N5blink18InspectorPageAgent12getFrameTreeEPNSt3__110unique_ptrINS_8protocol4Page9FrameTreeENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.std::__1::unique_ptr.3741"*, %"class.std::__1::unique_ptr.3750"*, %"class.std::__1::unique_ptr.3759"*, %"class.std::__1::unique_ptr.3741"*, %"class.std::__1::unique_ptr.3750"*, %"class.std::__1::unique_ptr.3759"*)* @_ZThn8_N5blink18InspectorPageAgent16getLayoutMetricsEPNSt3__110unique_ptrINS_8protocol4Page14LayoutViewportENS1_14default_deleteIS5_EEEEPNS2_INS4_14VisualViewportENS6_ISA_EEEEPNS2_INS3_3DOM4RectENS6_ISF_EEEES9_SD_SI_ to i8*), i8* bitcast (void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)* @_ZThn8_N5blink18InspectorPageAgent18getResourceContentERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol4Page7Backend26GetResourceContentCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.std::__1::unique_ptr.3454"*)* @_ZThn8_N5blink18InspectorPageAgent15getResourceTreeEPNSt3__110unique_ptrINS_8protocol4Page17FrameResourceTreeENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.crdtp::detail::ValueMaybe.3453"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink18InspectorPageAgent6reloadEN5crdtp6detail10ValueMaybeIbEENS3_IN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink18InspectorPageAgent28removeScriptToEvaluateOnLoadERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink18InspectorPageAgent35removeScriptToEvaluateOnNewDocumentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3453"*, %"class.crdtp::detail::ValueMaybe.3453"*, i64)* @_ZThn8_N5blink18InspectorPageAgent16searchInResourceERKN3WTF6StringES4_S4_N5crdtp6detail10ValueMaybeIbEES8_NSt3__110unique_ptrINS_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZThn8_N5blink18InspectorPageAgent20setAdBlockingEnabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZThn8_N5blink18InspectorPageAgent12setBypassCSPEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.3630"*)* @_ZThn8_N5blink18InspectorPageAgent25getPermissionsPolicyStateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol4Page29PermissionsPolicyFeatureStateENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.blink::protocol::Page::FontFamilies"*)* @_ZThn8_N5blink18InspectorPageAgent15setFontFamiliesENSt3__110unique_ptrINS_8protocol4Page12FontFamiliesENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.blink::protocol::Page::FontSizes"*)* @_ZThn8_N5blink18InspectorPageAgent12setFontSizesENSt3__110unique_ptrINS_8protocol4Page9FontSizesENS1_14default_deleteIS5_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn8_N5blink18InspectorPageAgent18setDocumentContentERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZThn8_N5blink18InspectorPageAgent25setLifecycleEventsEnabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3740"*, %"class.crdtp::detail::ValueMaybe.3740"*, %"class.crdtp::detail::ValueMaybe.3740"*, %"class.crdtp::detail::ValueMaybe.3740"*)* @_ZThn8_N5blink18InspectorPageAgent15startScreencastEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS3_IiEES7_S7_S7_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZThn8_N5blink18InspectorPageAgent11stopLoadingEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZThn8_N5blink18InspectorPageAgent14stopScreencastEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZThn8_N5blink18InspectorPageAgent26setProduceCompilationCacheEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.std::__1::vector.3854"*)* @_ZThn8_N5blink18InspectorPageAgent23produceCompilationCacheENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol4Page22CompilationCacheParamsENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.blink::protocol::Binary"*)* @_ZThn8_N5blink18InspectorPageAgent19addCompilationCacheERKN3WTF6StringERKNS_8protocol6BinaryE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZThn8_N5blink18InspectorPageAgent21clearCompilationCacheEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink18InspectorPageAgent18generateTestReportERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*)* @_ZThn8_N5blink18InspectorPageAgent15waitForDebuggerEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorPageAgent"*, i1)* @_ZThn8_N5blink18InspectorPageAgent29setInterceptFileChooserDialogEb to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [17 x i8] c"Script not found\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"commit\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"DOMContentLoaded\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"networkAlmostIdle\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"networkIdle\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"No frame for given id found\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"No resource with given URL found\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"Agent is not enabled.\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"No frame for given id found in this target\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"Frame not ready\00", align 1
@.str.13 = private unnamed_addr constant [37 x i8] c"No Document instance to set HTML for\00", align 1
@_ZN5blink8protocol4Page18NavigationTypeEnum10NavigationE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page18NavigationTypeEnum23BackForwardCacheRestoreE = external constant [0 x i8], align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"init\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink8protocol4Page15AdFrameTypeEnum4RootE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page15AdFrameTypeEnum5ChildE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page15AdFrameTypeEnum4NoneE = external constant [0 x i8], align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"Could not create isolated world\00", align 1
@.str.17 = private unnamed_addr constant [74 x i8] c"cached_data->buffer_policy == v8::ScriptCompiler::CachedData::BufferOwned\00", align 1
@.str.18 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/core/inspector/inspector_page_agent.cc\00", align 1
@_ZN5blink8protocol4Page17FileChooserOpened8ModeEnum14SelectMultipleE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol4Page17FileChooserOpened8ModeEnum12SelectSingleE = external local_unnamed_addr global i8*, align 8
@.str.19 = private unnamed_addr constant [32 x i8] c"Agent needs to be enabled first\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"ISO-8859-1\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink8protocol4Page29PermissionsPolicyFeatureStateE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol4Page32PermissionsPolicyBlockReasonEnum6HeaderE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page32PermissionsPolicyBlockReasonEnum15IframeAttributeE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol4Page29PermissionsPolicyBlockLocatorE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol4Page13FrameDetached10ReasonEnum6RemoveE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol4Page13FrameDetached10ReasonEnum4SwapE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol4Page26ClientNavigationReasonEnum11AnchorClickE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26ClientNavigationReasonEnum17FormSubmissionGetE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26ClientNavigationReasonEnum18FormSubmissionPostE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26ClientNavigationReasonEnum17HttpHeaderRefreshE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26ClientNavigationReasonEnum15ScriptInitiatedE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26ClientNavigationReasonEnum14MetaTagRefreshE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26ClientNavigationReasonEnum21PageBlockInterstitialE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26ClientNavigationReasonEnum6ReloadE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page31ClientNavigationDispositionEnum8DownloadE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page31ClientNavigationDispositionEnum10CurrentTabE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page31ClientNavigationDispositionEnum6NewTabE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page31ClientNavigationDispositionEnum9NewWindowE = external constant [0 x i8], align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"left=%d\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"top=%d\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"width=%d\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"height=%d\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"menubar\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"toolbar\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"scrollbars\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"resizable\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"noopener\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"background\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"persistent\00", align 1
@_ZTVN5blink8protocol4Page5FrameE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol4Page21SecureContextTypeEnum6SecureE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page21SecureContextTypeEnum16InsecureAncestorE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page21SecureContextTypeEnum14InsecureSchemeE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page21SecureContextTypeEnum15SecureLocalhostE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page34CrossOriginIsolatedContextTypeEnum8IsolatedE = external constant [0 x i8], align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink8protocol4Page34CrossOriginIsolatedContextTypeEnum11NotIsolatedE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page34CrossOriginIsolatedContextTypeEnum26NotIsolatedFeatureDisabledE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page20GatedAPIFeaturesEnum18SharedArrayBuffersE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page20GatedAPIFeaturesEnum33SharedArrayBuffersTransferAllowedE = external constant [0 x i8], align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_shared_array_buffer_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.37 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.38 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink17OriginTrialResultEEEEEPKcv = private unnamed_addr constant [104 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::OriginTrialResult>]\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.40 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.41 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22OriginTrialTokenResultEEEPKcv = private unnamed_addr constant [77 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::OriginTrialTokenResult]\00", align 1
@.str.42 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZTVN5blink8protocol4Page26OriginTrialTokenWithStatusE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum7SuccessE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum12NotSupportedE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum8InsecureE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum7ExpiredE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum11WrongOriginE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum16InvalidSignatureE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum9MalformedE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum12WrongVersionE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum15FeatureDisabledE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum13TokenDisabledE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum22FeatureDisabledForUserE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol4Page16OriginTrialTokenE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol4Page31OriginTrialUsageRestrictionEnum4NoneE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page31OriginTrialUsageRestrictionEnum6SubsetE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol4Page11OriginTrialE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol4Page21OriginTrialStatusEnum7EnabledE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page21OriginTrialStatusEnum21ValidTokenNotProvidedE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page21OriginTrialStatusEnum14OSNotSupportedE = external constant [0 x i8], align 1
@_ZN5blink8protocol4Page21OriginTrialStatusEnum15TrialNotAllowedE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol4Page9FrameTreeE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.44 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.46 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.48 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.49 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8ResourceEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Resource>, WTF::VectorTraits<blink::Member<blink::Resource> > >]\00", align 1
@_ZTVN5blink8protocol4Page13FrameResourceE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol4Page17FrameResourceTreeE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol4Page14LayoutViewportE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3DOM4RectE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol4Page14VisualViewportE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6BinaryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.771"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.771"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.771"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.771"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState8MapFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.770"*)* @_ZN5blink19InspectorAgentState8MapFieldIbED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.770"*)* @_ZN5blink19InspectorAgentState8MapFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.770"*)* @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.770"*)* @_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, bool>]\00", align 1
@_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [34 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7disableEv to i8*)], [34 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.50 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.51 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.772"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.772"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.772"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol4Page8Metainfo10domainNameE = external constant [0 x i8], align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.53 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS3_12KeyValuePairIS7_NS3_7HashMapINS3_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS3_10StringHashENS3_10HashTraitsISA_EENSF_ISD_EENS3_18PartitionAllocatorEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINSF_IS7_EENSF_ISJ_EEEESP_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS6_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [823 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::LocalFrame>, WTF::KeyValuePair<blink::WeakMember<blink::LocalFrame>, WTF::HashMap<WTF::String, scoped_refptr<blink::DOMWrapperWorld>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<scoped_refptr<blink::DOMWrapperWorld> >, WTF::PartitionAllocator> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::LocalFrame>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<blink::LocalFrame> >, WTF::HashTraits<WTF::HashMap<WTF::String, scoped_refptr<blink::DOMWrapperWorld>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<scoped_refptr<blink::DOMWrapperWorld> >, WTF::PartitionAllocator> > >, WTF::HashTraits<blink::WeakMember<blink::LocalFrame> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink15DOMWrapperWorldEEEEEEPKcv = private unnamed_addr constant [118 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, scoped_refptr<blink::DOMWrapperWorld> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink8protocol6BinaryEEEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::protocol::Binary>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink14TestReportBodyE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink6ReportE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Report"*)* @_ZN5blink6ReportD2Ev to i8*), i8* bitcast (void (%"class.blink::Report"*)* @_ZN5blink6ReportD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Report"*, %"class.blink::Visitor"*)* @_ZNK5blink6Report5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Report"*)* @_ZNK5blink6Report18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink6Report18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@switch.table._ZN5blink18InspectorPageAgent26BuildObjectForResourceTreeEPNS_10LocalFrameE = private unnamed_addr constant [12 x i32] [i32 2, i32 1, i32 5, i32 3, i32 14, i32 14, i32 1, i32 14, i32 6, i32 4, i32 4, i32 11], align 4

@_ZN5blink18InspectorPageAgentC1EPNS_15InspectedFramesEPNS0_6ClientEPNS_30InspectorResourceContentLoaderEPN12v8_inspector18V8InspectorSessionE = hidden unnamed_addr alias void (%"class.blink::InspectorPageAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorResourceContentLoader"*, %"class.v8_inspector::V8InspectorSession"*), void (%"class.blink::InspectorPageAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorResourceContentLoader"*, %"class.v8_inspector::V8InspectorSession"*)* @_ZN5blink18InspectorPageAgentC2EPNS_15InspectedFramesEPNS0_6ClientEPNS_30InspectorResourceContentLoaderEPN12v8_inspector18V8InspectorSessionE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent18UrlWithoutFragmentERKNS_4KURLE(%"class.blink::KURL"* noalias sret, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 112, i1 false)
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %1) #17
  tail call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* %0) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18InspectorPageAgent19SharedBufferContentE13scoped_refptrIKN3WTF12SharedBufferEERKNS2_6StringES8_PS6_Pb(%"class.WTF::SharedBuffer"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %8 = alloca %"class.WTF::TextEncoding", align 8
  %9 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %10 = alloca %"class.WTF::TextEncoding", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %13 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %14 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %15 = alloca %"class.WTF::TextEncoding", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::TextEncoding", align 8
  %18 = alloca %"class.WTF::SharedBuffer::DeprecatedFlatData", align 8
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = icmp eq %"class.WTF::SharedBuffer"* %0, null
  br i1 %20, label %264, label %21

21:                                               ; preds = %5
  %22 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::TextResourceDecoderOptions"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %32) #17
  %33 = bitcast %"class.WTF::TextEncoding"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"* nonnull %8, %"class.WTF::String"* dereferenceable(8) %2) #17
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %7, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %8) #17
  %34 = call noalias i8* @malloc(i64 208) #17
  %35 = bitcast i8* %34 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %35, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %7) #17
  %36 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %7, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %36) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  br label %91

37:                                               ; preds = %27, %21
  %38 = tail call zeroext i1 @_ZN5blink16MIMETypeRegistry13IsXMLMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #17
  br i1 %38, label %39, label %47

39:                                               ; preds = %37
  %40 = bitcast %"class.blink::TextResourceDecoderOptions"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %40) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 152, i1 false) #17
  %41 = bitcast %"class.WTF::TextEncoding"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %10, i64 0, i32 0
  store i8* null, i8** %42, align 8
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %9, i32 3, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %43 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %9, i64 0, i32 4
  store i8 1, i8* %43, align 1
  %44 = call noalias i8* @malloc(i64 208) #17
  %45 = bitcast i8* %44 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %45, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %9) #17
  %46 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %9, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %46) #17
  br label %91

47:                                               ; preds = %37
  %48 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #17
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %55 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %54, i64* %55, align 8
  br label %63

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %62 = bitcast i8** %61 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %62, align 8
  br label %63

63:                                               ; preds = %56, %52
  %64 = phi i32 [ %59, %56 ], [ 0, %52 ]
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %64, i32* %65, align 8
  %66 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, [10 x i8]* nonnull dereferenceable(10) @.str.22) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #17
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %"class.blink::TextResourceDecoderOptions"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %68) #17
  %69 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #17
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %12, i32 1, %"class.WTF::TextEncoding"* dereferenceable(8) %69) #17
  %70 = call noalias i8* @malloc(i64 208) #17
  %71 = bitcast i8* %70 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %71, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %12) #17
  %72 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %12, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %72) #17
  br label %91

73:                                               ; preds = %63
  %74 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #17
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = call zeroext i1 @_ZN5blink16MIMETypeRegistry14IsJSONMimeTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #17
  br i1 %76, label %77, label %83

77:                                               ; preds = %75, %73
  %78 = bitcast %"class.blink::TextResourceDecoderOptions"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %78) #17
  %79 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #17
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %13, i32 0, %"class.WTF::TextEncoding"* dereferenceable(8) %79) #17
  %80 = call noalias i8* @malloc(i64 208) #17
  %81 = bitcast i8* %80 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %81, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %13) #17
  %82 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %13, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %82) #17
  br label %91

83:                                               ; preds = %75
  %84 = call zeroext i1 @_ZN5blink16MIMETypeRegistry19IsPlainTextMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #17
  br i1 %84, label %85, label %95

85:                                               ; preds = %83
  %86 = bitcast %"class.blink::TextResourceDecoderOptions"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %86) #17
  %87 = bitcast %"class.WTF::TextEncoding"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #17
  call void @_ZN3WTF12TextEncodingC1EPKc(%"class.WTF::TextEncoding"* nonnull %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0)) #17
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %14, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %15) #17
  %88 = call noalias i8* @malloc(i64 208) #17
  %89 = bitcast i8* %88 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %89, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %14) #17
  %90 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %14, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %90) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #17
  br label %91

91:                                               ; preds = %85, %77, %67, %39, %31
  %92 = phi i8* [ %32, %31 ], [ %40, %39 ], [ %68, %67 ], [ %78, %77 ], [ %86, %85 ]
  %93 = phi i8* [ %34, %31 ], [ %44, %39 ], [ %70, %67 ], [ %80, %77 ], [ %88, %85 ]
  %94 = ptrtoint i8* %93 to i64
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %92) #17
  br label %95

95:                                               ; preds = %91, %83
  %96 = phi i64 [ 0, %83 ], [ %94, %91 ]
  %97 = inttoptr i64 %96 to %"class.blink::TextResourceDecoder"*
  %98 = bitcast %"class.WTF::TextEncoding"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #17
  %99 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %17, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %99, align 8
  call void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"* nonnull %17, %"class.WTF::String"* dereferenceable(8) %2) #17
  %100 = bitcast %"class.WTF::SharedBuffer::DeprecatedFlatData"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #17
  %101 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %18, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %18, i64 0, i32 1, i32 0, i32 0, i32 2
  %104 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %18, i64 0, i32 2
  %105 = bitcast %"class.WTF::SharedBuffer::DeprecatedFlatData"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 32, i1 false)
  call void @_ZN3WTF12SharedBuffer18DeprecatedFlatDataC1E13scoped_refptrIKS0_E(%"class.WTF::SharedBuffer::DeprecatedFlatData"* nonnull %18, %"class.WTF::SharedBuffer"* nonnull %0) #17
  %106 = icmp eq i64 %96, 0
  br i1 %106, label %188, label %107

107:                                              ; preds = %95
  %108 = load i8*, i8** %104, align 8
  %109 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %101, align 8
  %110 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %109, i64 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"* nonnull %97, i8* %108, i64 %111) #17
  %113 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %114 = bitcast %"class.WTF::String"* %16 to i64*
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %113, i64* %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #17
  br label %130

130:                                              ; preds = %129, %126, %107
  %131 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #17
  %132 = call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"* nonnull %97) #17
  %133 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::StringImpl"* %132)
  %134 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 0, i32 0
  %135 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %133, 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %134, align 8
  %136 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1, i32 0, i32 0
  %137 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %133, 1
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %136, align 8
  %138 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %19)
  %139 = ptrtoint %"class.WTF::StringImpl"* %138 to i64
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %139, i64* %114, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %130
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #17
  br label %155

155:                                              ; preds = %154, %151, %130
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #17
  br label %171

171:                                              ; preds = %170, %167, %155
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #17
  br label %187

187:                                              ; preds = %171, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #17
  br label %218

188:                                              ; preds = %95
  %189 = load i8*, i8** %99, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %218, label %191

191:                                              ; preds = %188
  %192 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %101, align 8
  %193 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %192, i64 0, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = icmp ult i64 %194, 4294967296
  br i1 %195, label %197, label %196, !prof !2

196:                                              ; preds = %191
  call void @llvm.trap() #17
  unreachable

197:                                              ; preds = %191
  %198 = load i8*, i8** %104, align 8
  %199 = trunc i64 %194 to i32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #17
  store i8 -86, i8* %6, align 1
  %200 = call %"class.WTF::StringImpl"* @_ZNK3WTF12TextEncoding6DecodeEPKcjbRb(%"class.WTF::TextEncoding"* nonnull %17, i8* %198, i32 %199, i1 zeroext false, i8* nonnull dereferenceable(1) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #17
  %201 = ptrtoint %"class.WTF::StringImpl"* %200 to i64
  %202 = bitcast %"class.WTF::String"* %16 to i64*
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 %201, i64* %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %197
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #17
  br label %218

218:                                              ; preds = %188, %197, %214, %217, %187
  %219 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %101, align 8
  %220 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %219, i64 0, i32 1
  %221 = load i64, i64* %220, align 8
  %222 = icmp ult i64 %221, 4294967296
  br i1 %222, label %224, label %223, !prof !2

223:                                              ; preds = %218
  call void @llvm.trap() #17
  unreachable

224:                                              ; preds = %218
  %225 = load i8*, i8** %104, align 8
  %226 = trunc i64 %221 to i32
  call fastcc void @_ZN5blinkL22MaybeEncodeTextContentERKN3WTF6StringEPKcjPS1_Pb(%"class.WTF::String"* nonnull dereferenceable(8) %16, i8* %225, i32 %226, %"class.WTF::String"* %3, i8* %4)
  %227 = load i8*, i8** %102, align 8
  %228 = icmp eq i8* %227, null
  br i1 %228, label %234, label %229, !prof !2

229:                                              ; preds = %224
  %230 = load i32, i32* %103, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %233, label %232, !prof !3

232:                                              ; preds = %229
  store i32 0, i32* %103, align 4
  br label %233

233:                                              ; preds = %232, %229
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %227) #17
  store i8* null, i8** %102, align 8
  br label %234

234:                                              ; preds = %233, %224
  %235 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %101, align 8
  %236 = icmp eq %"class.WTF::SharedBuffer"* %235, null
  br i1 %236, label %244, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %235, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #17
  %239 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %235, i64 0, i32 0, i32 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %235) #17
  %243 = bitcast %"class.WTF::SharedBuffer"* %235 to i8*
  call void @free(i8* %243) #17
  br label %244

244:                                              ; preds = %234, %237, %242
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #17
  br i1 %106, label %247, label %245

245:                                              ; preds = %244
  call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %97) #17
  %246 = inttoptr i64 %96 to i8*
  call void @free(i8* %246) #17
  br label %247

247:                                              ; preds = %244, %245
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %263, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %259

257:                                              ; preds = %250
  %258 = add i32 %256, -1
  store i32 %258, i32* %255, align 4
  br label %259

259:                                              ; preds = %257, %250
  %260 = phi i32 [ %258, %257 ], [ %256, %250 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %259
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %248) #17
  br label %263

263:                                              ; preds = %262, %259, %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  br label %264

264:                                              ; preds = %5, %263
  %265 = phi i1 [ true, %263 ], [ false, %5 ]
  ret i1 %265
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3WTF12SharedBuffer18DeprecatedFlatDataC1E13scoped_refptrIKS0_E(%"class.WTF::SharedBuffer::DeprecatedFlatData"*, %"class.WTF::SharedBuffer"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #17
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #17
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #17
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #17
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #17
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #17
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4165"* nonnull %67, i8* %30) #17
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4165"* nonnull %68, i8* %71) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #17
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #17
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #17
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #17
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #17
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #17
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #17
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #17
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4165"* nonnull %144, i16* %107) #17
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4165"* nonnull %145, i16* %148) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #17
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #17
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #17
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #17
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #17
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL22MaybeEncodeTextContentERKN3WTF6StringEPKcjPS1_Pb(%"class.WTF::String"* dereferenceable(8), i8*, i32, %"class.WTF::String"* nocapture, i8* nocapture) unnamed_addr #0 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %46, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #17
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #17
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::String"* %3 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %108, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %108

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #17
  br label %108

46:                                               ; preds = %5
  %47 = icmp eq i8* %1, null
  br i1 %47, label %69, label %48

48:                                               ; preds = %46
  %49 = zext i32 %2 to i64
  %50 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64 %49, i8* nonnull %1, i32 0) #17
  %51 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %52 = bitcast %"class.WTF::String"* %3 to i64*
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %108, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %108

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #17
  br label %108

69:                                               ; preds = %46
  %70 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %72 = bitcast %"class.WTF::String"* %6 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  %74 = bitcast %"class.WTF::String"* %3 to i64*
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  store i64 %73, i64* %74, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #17
  br label %91

91:                                               ; preds = %69, %87, %90
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #17
  br label %107

107:                                              ; preds = %91, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #17
  br label %108

108:                                              ; preds = %48, %65, %68, %45, %42, %27, %107
  %109 = phi i8 [ 0, %107 ], [ 0, %27 ], [ 0, %42 ], [ 0, %45 ], [ 1, %68 ], [ 1, %65 ], [ 1, %48 ]
  store i8 %109, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18InspectorPageAgent21CachedResourceContentEPKNS_8ResourceEPN3WTF6StringEPb(%"class.blink::Resource"*, %"class.WTF::String"* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::SharedBuffer::DeprecatedFlatData", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = icmp eq %"class.blink::Resource"* %0, null
  br i1 %10, label %277, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 23, i32 1
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %277, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  %19 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  switch i8 %20, label %21 [
    i8 7, label %86
    i8 3, label %86
    i8 2, label %86
    i8 5, label %86
  ]

21:                                               ; preds = %15
  br i1 %18, label %22, label %26

22:                                               ; preds = %21
  %23 = tail call noalias i8* @malloc(i64 48) #17
  %24 = bitcast i8* %23 to %"class.WTF::SharedBuffer"*
  tail call void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"* %24) #17
  %25 = ptrtoint i8* %23 to i64
  br label %33

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::Resource"* %0 to %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)***
  %28 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %28, i64 13
  %30 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %29, align 8
  %31 = tail call %"class.WTF::SharedBuffer"* %30(%"class.blink::Resource"* nonnull %0) #17
  %32 = ptrtoint %"class.WTF::SharedBuffer"* %31 to i64
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i64 [ %32, %26 ], [ %25, %22 ]
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %277, label %36

36:                                               ; preds = %33
  %37 = inttoptr i64 %34 to %"class.WTF::SharedBuffer"*
  %38 = bitcast %"class.WTF::SharedBuffer::DeprecatedFlatData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #17
  %39 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %4, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %42 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %4, i64 0, i32 2
  %43 = bitcast %"class.WTF::SharedBuffer::DeprecatedFlatData"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 32, i1 false)
  call void @_ZN3WTF12SharedBuffer18DeprecatedFlatDataC1E13scoped_refptrIKS0_E(%"class.WTF::SharedBuffer::DeprecatedFlatData"* nonnull %4, %"class.WTF::SharedBuffer"* nonnull %37) #17
  %44 = load i8*, i8** %42, align 8
  %45 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %39, align 8
  %46 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %45, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64 %47, i8* %44, i32 0) #17
  %49 = ptrtoint %"class.WTF::StringImpl"* %48 to i64
  %50 = bitcast %"class.WTF::String"* %1 to i64*
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %49, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %36
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #17
  br label %67

67:                                               ; preds = %66, %63, %36
  store i8 1, i8* %2, align 1
  %68 = load i8*, i8** %40, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %75, label %70, !prof !2

70:                                               ; preds = %67
  %71 = load i32, i32* %41, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %70
  store i32 0, i32* %41, align 4
  br label %74

74:                                               ; preds = %73, %70
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #17
  store i8* null, i8** %40, align 8
  br label %75

75:                                               ; preds = %74, %67
  %76 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %39, align 8
  %77 = icmp eq %"class.WTF::SharedBuffer"* %76, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %76, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %79) #17
  %80 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %76) #17
  %84 = bitcast %"class.WTF::SharedBuffer"* %76 to i8*
  call void @free(i8* %84) #17
  br label %85

85:                                               ; preds = %83, %78, %75
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #17
  br label %277

86:                                               ; preds = %15, %15, %15, %15
  br i1 %18, label %87, label %126

87:                                               ; preds = %86
  %88 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %5 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %92 = bitcast %"class.WTF::String"* %1 to i64*
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #17
  br label %109

109:                                              ; preds = %87, %105, %108
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #17
  br label %125

125:                                              ; preds = %109, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #17
  store i8 0, i8* %2, align 1
  br label %277

126:                                              ; preds = %86
  switch i8 %20, label %179 [
    i8 2, label %127
    i8 3, label %153
  ]

127:                                              ; preds = %126
  %128 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #17
  %129 = bitcast %"class.blink::Resource"* %0 to %"class.blink::CSSStyleSheetResource"*
  %130 = tail call %"class.WTF::StringImpl"* @_ZNK5blink21CSSStyleSheetResource9SheetTextEPKNS_16CSSParserContextENS0_13MIMETypeCheckE(%"class.blink::CSSStyleSheetResource"* nonnull %129, %"class.blink::CSSParserContext"* null, i32 1) #17
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %131, align 8
  %132 = bitcast %"class.blink::Resource"* %0 to %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)***
  %133 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*** %132, align 8
  %134 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %133, i64 13
  %135 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %134, align 8
  %136 = tail call %"class.WTF::SharedBuffer"* %135(%"class.blink::Resource"* nonnull %0) #17
  call fastcc void @_ZN5blinkL22MaybeEncodeTextContentERKN3WTF6StringE13scoped_refptrIKNS0_12SharedBufferEEPS1_Pb(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::SharedBuffer"* %136, %"class.WTF::String"* %1, i8* %2)
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %127
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #17
  br label %152

152:                                              ; preds = %127, %148, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #17
  br label %277

153:                                              ; preds = %126
  %154 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #17
  %155 = bitcast %"class.blink::Resource"* %0 to %"class.blink::ScriptResource"*
  %156 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14ScriptResource16TextForInspectorEv(%"class.blink::ScriptResource"* nonnull %155) #17
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %157, align 8
  %158 = bitcast %"class.blink::Resource"* %0 to %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)***
  %159 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*** %158, align 8
  %160 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %159, i64 13
  %161 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %160, align 8
  %162 = tail call %"class.WTF::SharedBuffer"* %161(%"class.blink::Resource"* nonnull %0) #17
  call fastcc void @_ZN5blinkL22MaybeEncodeTextContentERKN3WTF6StringE13scoped_refptrIKNS0_12SharedBufferEEPS1_Pb(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::SharedBuffer"* %162, %"class.WTF::String"* %1, i8* %2)
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %153
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #17
  br label %178

178:                                              ; preds = %153, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #17
  br label %277

179:                                              ; preds = %126
  %180 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #17
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %181, align 8
  %182 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 29
  %183 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse16TextEncodingNameEv(%"class.blink::ResourceResponse"* %182) #17
  %184 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %181, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %211, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %206

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i33
  %196 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %195, i33 1) #17
  %197 = extractvalue { i33, i1 } %196, 1
  %198 = extractvalue { i33, i1 } %196, 0
  %199 = icmp slt i33 %198, 0
  %200 = or i1 %197, %199
  br i1 %200, label %201, label %202, !prof !3

201:                                              ; preds = %192
  tail call void @llvm.trap() #17
  unreachable

202:                                              ; preds = %192
  %203 = trunc i33 %198 to i32
  store i32 %203, i32* %193, align 4
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %187, %202
  %207 = phi %"class.WTF::StringImpl"* [ %204, %202 ], [ %185, %187 ]
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %252

211:                                              ; preds = %179, %202, %206
  %212 = load i8, i8* %19, align 8
  %213 = icmp eq i8 %212, 5
  br i1 %213, label %252, label %214

214:                                              ; preds = %211
  %215 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9) #17
  %216 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %217 = bitcast %"class.WTF::String"* %9 to i64*
  %218 = load i64, i64* %217, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %216, align 8
  %219 = bitcast %"class.WTF::String"* %8 to i64*
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  store i64 %218, i64* %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %251, label %222

222:                                              ; preds = %214
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #17
  br label %235

235:                                              ; preds = %231, %234
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #17
  br label %251

251:                                              ; preds = %214, %235, %247, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #17
  br label %252

252:                                              ; preds = %211, %251, %206
  %253 = bitcast %"class.blink::Resource"* %0 to %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)***
  %254 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*** %253, align 8
  %255 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %254, i64 13
  %256 = load %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)** %255, align 8
  %257 = call %"class.WTF::SharedBuffer"* %256(%"class.blink::Resource"* nonnull %0) #17
  %258 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"* %182) #17
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %258, i64 0, i32 0
  %260 = call zeroext i1 @_ZN5blink18InspectorPageAgent19SharedBufferContentE13scoped_refptrIKN3WTF12SharedBufferEERKNS2_6StringES8_PS6_Pb(%"class.WTF::SharedBuffer"* %257, %"class.WTF::String"* dereferenceable(8) %259, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* %1, i8* %2)
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %262, label %276, label %263

263:                                              ; preds = %252
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  br i1 %267, label %270, label %272

270:                                              ; preds = %263
  %271 = add i32 %269, -1
  store i32 %271, i32* %268, align 4
  br label %272

272:                                              ; preds = %270, %263
  %273 = phi i32 [ %271, %270 ], [ %269, %263 ]
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %261) #17
  br label %276

276:                                              ; preds = %252, %272, %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #17
  br label %277

277:                                              ; preds = %33, %85, %11, %3, %276, %178, %152, %125
  %278 = phi i1 [ true, %125 ], [ %260, %276 ], [ true, %178 ], [ true, %152 ], [ false, %3 ], [ false, %11 ], [ true, %85 ], [ false, %33 ]
  ret i1 %278
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL22MaybeEncodeTextContentERKN3WTF6StringE13scoped_refptrIKNS0_12SharedBufferEEPS1_Pb(%"class.WTF::String"* dereferenceable(8), %"class.WTF::SharedBuffer"*, %"class.WTF::String"* nocapture, i8* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.WTF::SharedBuffer::DeprecatedFlatData", align 8
  %6 = icmp eq %"class.WTF::SharedBuffer"* %1, null
  br i1 %6, label %40, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.WTF::SharedBuffer::DeprecatedFlatData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = bitcast %"class.WTF::SharedBuffer::DeprecatedFlatData"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  call void @_ZN3WTF12SharedBuffer18DeprecatedFlatDataC1E13scoped_refptrIKS0_E(%"class.WTF::SharedBuffer::DeprecatedFlatData"* nonnull %5, %"class.WTF::SharedBuffer"* nonnull %1) #17
  %13 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %14 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %13, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 4294967296
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %7
  call void @llvm.trap() #17
  unreachable

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %5, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = trunc i64 %15 to i32
  call fastcc void @_ZN5blinkL22MaybeEncodeTextContentERKN3WTF6StringEPKcjPS1_Pb(%"class.WTF::String"* dereferenceable(8) %0, i8* %20, i32 %21, %"class.WTF::String"* %2, i8* %3)
  %22 = load i8*, i8** %10, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %29, label %24, !prof !2

24:                                               ; preds = %18
  %25 = load i32, i32* %11, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %24
  store i32 0, i32* %11, align 4
  br label %28

28:                                               ; preds = %27, %24
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #17
  store i8* null, i8** %10, align 8
  br label %29

29:                                               ; preds = %28, %18
  %30 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %31 = icmp eq %"class.WTF::SharedBuffer"* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %30, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #17
  %34 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %30) #17
  %38 = bitcast %"class.WTF::SharedBuffer"* %30 to i8*
  call void @free(i8* %38) #17
  br label %39

39:                                               ; preds = %37, %32, %29
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #17
  br label %41

40:                                               ; preds = %4
  tail call fastcc void @_ZN5blinkL22MaybeEncodeTextContentERKN3WTF6StringEPKcjPS1_Pb(%"class.WTF::String"* dereferenceable(8) %0, i8* null, i32 0, %"class.WTF::String"* %2, i8* %3)
  br label %41

41:                                               ; preds = %40, %39
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink21CSSStyleSheetResource9SheetTextEPKNS_16CSSParserContextENS0_13MIMETypeCheckE(%"class.blink::CSSStyleSheetResource"*, %"class.blink::CSSParserContext"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink14ScriptResource16TextForInspectorEv(%"class.blink::ScriptResource"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse16TextEncodingNameEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent16ResourceTypeJsonENS0_12ResourceTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %17 [
    i32 0, label %18
    i32 3, label %3
    i32 2, label %4
    i32 4, label %5
    i32 5, label %6
    i32 1, label %7
    i32 6, label %8
    i32 7, label %9
    i32 8, label %10
    i32 9, label %11
    i32 10, label %12
    i32 11, label %13
    i32 12, label %14
    i32 13, label %15
    i32 14, label %16
  ]

3:                                                ; preds = %1
  br label %18

4:                                                ; preds = %1
  br label %18

5:                                                ; preds = %1
  br label %18

6:                                                ; preds = %1
  br label %18

7:                                                ; preds = %1
  br label %18

8:                                                ; preds = %1
  br label %18

9:                                                ; preds = %1
  br label %18

10:                                               ; preds = %1
  br label %18

11:                                               ; preds = %1
  br label %18

12:                                               ; preds = %1
  br label %18

13:                                               ; preds = %1
  br label %18

14:                                               ; preds = %1
  br label %18

15:                                               ; preds = %1
  br label %18

16:                                               ; preds = %1
  br label %18

17:                                               ; preds = %1
  br label %18

18:                                               ; preds = %1, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3
  %19 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum5OtherE, i64 0, i64 0), %17 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum5OtherE, i64 0, i64 0), %16 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum4PingE, i64 0, i64 0), %15 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum14SignedExchangeE, i64 0, i64 0), %14 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum8ManifestE, i64 0, i64 0), %13 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum9WebSocketE, i64 0, i64 0), %12 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum11EventSourceE, i64 0, i64 0), %11 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum5FetchE, i64 0, i64 0), %10 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum3XHRE, i64 0, i64 0), %9 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum9TextTrackE, i64 0, i64 0), %8 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum10StylesheetE, i64 0, i64 0), %7 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum6ScriptE, i64 0, i64 0), %6 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum5MediaE, i64 0, i64 0), %5 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum5ImageE, i64 0, i64 0), %4 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum4FontE, i64 0, i64 0), %3 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network16ResourceTypeEnum8DocumentE, i64 0, i64 0), %1 ]
  %20 = tail call i64 @strlen(i8* nonnull %19) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %19, i64 %20) #17
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  ret %"class.WTF::StringImpl"* %22
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink18InspectorPageAgent14ToResourceTypeENS_12ResourceTypeE(i8 zeroext) local_unnamed_addr #4 align 2 {
  %2 = add i8 %0, -1
  %3 = icmp ult i8 %2, 12
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i8 %2 to i64
  %6 = getelementptr inbounds [12 x i32], [12 x i32]* @switch.table._ZN5blink18InspectorPageAgent26BuildObjectForResourceTreeEPNS_10LocalFrameE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent22CachedResourceTypeJsonERKNS_8ResourceE(%"class.blink::Resource"* nocapture readonly dereferenceable(2728)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = add i8 %3, -1
  %5 = icmp ult i8 %4, 12
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = sext i8 %4 to i64
  %8 = getelementptr inbounds [12 x i32], [12 x i32]* @switch.table._ZN5blink18InspectorPageAgent26BuildObjectForResourceTreeEPNS_10LocalFrameE, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i32 [ %9, %6 ], [ 14, %1 ]
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent16ResourceTypeJsonENS0_12ResourceTypeE(i32 %11)
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgentC2EPNS_15InspectedFramesEPNS0_6ClientEPNS_30InspectorResourceContentLoaderEPN12v8_inspector18V8InspectorSessionE(%"class.blink::InspectorPageAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorResourceContentLoader"*, %"class.v8_inspector::V8InspectorSession"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.blink::InspectorPageAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [34 x i8*] }, { [11 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [34 x i8*] }, { [11 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 3
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page8Metainfo10domainNameE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page8Metainfo10domainNameE, i64 0, i64 0), i64 %11) #17
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #17
  br label %28

28:                                               ; preds = %27, %24, %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  %29 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4
  %30 = bitcast %"class.std::__1::unique_ptr.702"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = bitcast %"class.blink::InspectorPageAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [34 x i8*] }, { [40 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorPageAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [34 x i8*] }, { [40 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorPageAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %31, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %1, %"class.blink::InspectedFrames"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 2
  %34 = bitcast %"class.WTF::HashMap.714"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 20, i1 false) #17
  %35 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 3
  %36 = bitcast %"class.WTF::HashMap.722"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 20, i1 false) #17
  %37 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 4
  %38 = bitcast %"class.blink::HeapHashMap.727"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 20, i1 false) #17
  %39 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 5
  store %"class.v8_inspector::V8InspectorSession"* %4, %"class.v8_inspector::V8InspectorSession"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 6
  store %"class.blink::InspectorPageAgent::Client"* %2, %"class.blink::InspectorPageAgent::Client"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 7, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 9, i32 0, i32 0
  %43 = bitcast %"class.WTF::StringImpl"** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false)
  store %"class.blink::InspectorResourceContentLoader"* %3, %"class.blink::InspectorResourceContentLoader"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 10
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 11
  %46 = call i32 @_ZN5blink30InspectorResourceContentLoader14CreateClientIdEv(%"class.blink::InspectorResourceContentLoader"* %3) #17
  store i32 %46, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12
  %48 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %47, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %47, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %48) #17
  %51 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %52 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 1
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 13
  %55 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %54, i64 0, i32 0
  %56 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %54, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %55) #17
  %58 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %58, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %59 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 13, i32 1
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 13, i32 2
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 14
  %62 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %61, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %62) #17
  %65 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %65, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %66 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 14, i32 1
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 14, i32 2
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 15
  %69 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %68, i64 0, i32 0
  %70 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %68, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %69) #17
  %72 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %72, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %73 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 15, i32 1
  store i8 0, i8* %73, align 8
  %74 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 15, i32 2
  store i8 0, i8* %74, align 1
  %75 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16
  %76 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %75, i64 0, i32 0
  %77 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %75, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %76) #17
  %79 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %79, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %80 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 1, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17
  %82 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %81, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %81, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::StringImpl"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 28, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %85 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %82) #17
  %86 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %86, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %87 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 1, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18
  %89 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %88, i64 0, i32 0
  %90 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %88, i64 0, i32 0, i32 0
  %91 = bitcast %"class.WTF::StringImpl"** %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 28, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %92 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %89) #17
  %93 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %93, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %94 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 1
  store i8 0, i8* %94, align 8
  %95 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 3
  %96 = bitcast %"class.WTF::HashMap.722"* %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 20, i1 false) #17
  %97 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 19
  %98 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %97, i64 0, i32 0
  %99 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %97, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %100 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %98) #17
  %101 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %101, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %102 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 19, i32 1, i32 0, i32 0
  %103 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 20
  %104 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %103, i64 0, i32 0
  %105 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %103, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::StringImpl"** %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %107 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %104) #17
  %108 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %108, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %109 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 20, i32 1, i32 0, i32 0
  %110 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 21
  %111 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %110, i64 0, i32 0
  %112 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %110, i64 0, i32 0, i32 0
  %113 = bitcast %"class.WTF::StringImpl"** %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %114 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %111) #17
  %115 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %115, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %116 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 21, i32 1, i32 0, i32 0
  %117 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 22
  %118 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %117, i64 0, i32 0
  %119 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %117, i64 0, i32 0, i32 0
  %120 = bitcast %"class.WTF::StringImpl"** %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %121 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %118) #17
  %122 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %122, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %123 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 22, i32 1, i32 0, i32 0
  %124 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 23
  %125 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %124, i64 0, i32 0
  %126 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %124, i64 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::StringImpl"** %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %128 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %125) #17
  %129 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %129, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %130 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 23, i32 1, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 24
  %132 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %131, i64 0, i32 0
  %133 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %131, i64 0, i32 0, i32 0
  %134 = bitcast %"class.WTF::StringImpl"** %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %135 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %132) #17
  %136 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %137 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 24, i32 1, i32 0, i32 0
  %138 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 25
  %139 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %138, i64 0, i32 0
  %140 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %138, i64 0, i32 0, i32 0
  %141 = bitcast %"class.WTF::StringImpl"** %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %142 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %139) #17
  %143 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 25, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %143, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %144 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 25, i32 1, i32 0, i32 0
  %145 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 26
  %146 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %145, i64 0, i32 0
  %147 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %145, i64 0, i32 0, i32 0
  %148 = bitcast %"class.WTF::StringImpl"** %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %149 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %146) #17
  %150 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 26, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %150, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %151 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 26, i32 1
  store i32 0, i32* %151, align 8
  %152 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 26, i32 2
  store i32 0, i32* %152, align 4
  %153 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 27
  %154 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %153, i64 0, i32 0
  %155 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %153, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %154) #17
  %157 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 27, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %157, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %158 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 27, i32 1
  store i32 0, i32* %158, align 8
  %159 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 27, i32 2
  store i32 0, i32* %159, align 4
  %160 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 28
  %161 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %160, i64 0, i32 0
  %162 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %160, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %9, %"class.blink::InspectorAgentState::Field"* %161) #17
  %164 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 28, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %164, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %165 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 28, i32 1
  store i8 0, i8* %165, align 8
  %166 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 28, i32 2
  store i8 0, i8* %166, align 1
  ret void
}

declare i32 @_ZN5blink30InspectorResourceContentLoader14CreateClientIdEv(%"class.blink::InspectorResourceContentLoader"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent7RestoreEv(%"class.blink::InspectorPageAgent"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %1
  call void @_ZN5blink18InspectorPageAgent6enableEv(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorPageAgent"* %0)
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #19
  br label %23

23:                                               ; preds = %1, %20, %14
  %24 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 15, i32 2
  %25 = load i8, i8* %24, align 1, !range !4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %23
  call void @_ZN5blink18InspectorPageAgent12setBypassCSPEb(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.blink::InspectorPageAgent"* %0, i1 zeroext true)
  %28 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #19
  br label %36

36:                                               ; preds = %23, %33, %27
  %37 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %38, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %40, i64 0, i32 0
  %42 = call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %41) #17
  %43 = icmp eq %"class.blink::Settings"* %42, null
  br i1 %43, label %413, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %42, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 19, i32 2, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %95, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #17
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = and i32 %52, 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %71, label %55

55:                                               ; preds = %49
  %56 = load atomic i32, i32* %51 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %73

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #17
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %59
  call void @llvm.trap() #17
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %73

71:                                               ; preds = %49
  %72 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %47) #17
  br label %73

73:                                               ; preds = %55, %69, %71
  %74 = phi %"class.WTF::StringImpl"* [ %72, %71 ], [ %47, %55 ], [ %47, %69 ]
  %75 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %76 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %75, i64* %76, align 8
  %77 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings14UpdateStandardERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, i32 0) #17
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #17
  br label %94

94:                                               ; preds = %73, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #17
  br label %95

95:                                               ; preds = %94, %44
  %96 = phi i1 [ false, %44 ], [ true, %94 ]
  %97 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 20, i32 2, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %146, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #17
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 acquire, align 4
  %104 = and i32 %103, 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %122, label %106

106:                                              ; preds = %100
  %107 = load atomic i32, i32* %102 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %124

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i33
  %114 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %113, i33 1) #17
  %115 = extractvalue { i33, i1 } %114, 1
  %116 = extractvalue { i33, i1 } %114, 0
  %117 = icmp slt i33 %116, 0
  %118 = or i1 %115, %117
  br i1 %118, label %119, label %120, !prof !3

119:                                              ; preds = %110
  call void @llvm.trap() #17
  unreachable

120:                                              ; preds = %110
  %121 = trunc i33 %116 to i32
  store i32 %121, i32* %111, align 4
  br label %124

122:                                              ; preds = %100
  %123 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %98) #17
  br label %124

124:                                              ; preds = %106, %120, %122
  %125 = phi %"class.WTF::StringImpl"* [ %123, %122 ], [ %98, %106 ], [ %98, %120 ]
  %126 = ptrtoint %"class.WTF::StringImpl"* %125 to i64
  %127 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %126, i64* %127, align 8
  %128 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings11UpdateFixedERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, i32 0) #17
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #17
  br label %145

145:                                              ; preds = %124, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #17
  br label %146

146:                                              ; preds = %145, %95
  %147 = phi i1 [ %96, %95 ], [ true, %145 ]
  %148 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 21, i32 2, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %197, label %151

151:                                              ; preds = %146
  %152 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #17
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 acquire, align 4
  %155 = and i32 %154, 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %173, label %157

157:                                              ; preds = %151
  %158 = load atomic i32, i32* %153 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %175

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i33
  %165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %164, i33 1) #17
  %166 = extractvalue { i33, i1 } %165, 1
  %167 = extractvalue { i33, i1 } %165, 0
  %168 = icmp slt i33 %167, 0
  %169 = or i1 %166, %168
  br i1 %169, label %170, label %171, !prof !3

170:                                              ; preds = %161
  call void @llvm.trap() #17
  unreachable

171:                                              ; preds = %161
  %172 = trunc i33 %167 to i32
  store i32 %172, i32* %162, align 4
  br label %175

173:                                              ; preds = %151
  %174 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %149) #17
  br label %175

175:                                              ; preds = %157, %171, %173
  %176 = phi %"class.WTF::StringImpl"* [ %174, %173 ], [ %149, %157 ], [ %149, %171 ]
  %177 = ptrtoint %"class.WTF::StringImpl"* %176 to i64
  %178 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  store i64 %177, i64* %178, align 8
  %179 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings11UpdateSerifERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, i32 0) #17
  %180 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %175
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #17
  br label %196

196:                                              ; preds = %175, %192, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #17
  br label %197

197:                                              ; preds = %196, %146
  %198 = phi i1 [ %147, %146 ], [ true, %196 ]
  %199 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 22, i32 2, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %248, label %202

202:                                              ; preds = %197
  %203 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #17
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 acquire, align 4
  %206 = and i32 %205, 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %224, label %208

208:                                              ; preds = %202
  %209 = load atomic i32, i32* %204 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %226

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i33
  %216 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %215, i33 1) #17
  %217 = extractvalue { i33, i1 } %216, 1
  %218 = extractvalue { i33, i1 } %216, 0
  %219 = icmp slt i33 %218, 0
  %220 = or i1 %217, %219
  br i1 %220, label %221, label %222, !prof !3

221:                                              ; preds = %212
  call void @llvm.trap() #17
  unreachable

222:                                              ; preds = %212
  %223 = trunc i33 %218 to i32
  store i32 %223, i32* %213, align 4
  br label %226

224:                                              ; preds = %202
  %225 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %200) #17
  br label %226

226:                                              ; preds = %208, %222, %224
  %227 = phi %"class.WTF::StringImpl"* [ %225, %224 ], [ %200, %208 ], [ %200, %222 ]
  %228 = ptrtoint %"class.WTF::StringImpl"* %227 to i64
  %229 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  store i64 %228, i64* %229, align 8
  %230 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings15UpdateSansSerifERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, i32 0) #17
  %231 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %226
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #17
  br label %247

247:                                              ; preds = %226, %243, %246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #17
  br label %248

248:                                              ; preds = %247, %197
  %249 = phi i1 [ %198, %197 ], [ true, %247 ]
  %250 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 23, i32 2, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %299, label %253

253:                                              ; preds = %248
  %254 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #17
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 acquire, align 4
  %257 = and i32 %256, 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %275, label %259

259:                                              ; preds = %253
  %260 = load atomic i32, i32* %255 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %277

263:                                              ; preds = %259
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = zext i32 %265 to i33
  %267 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %266, i33 1) #17
  %268 = extractvalue { i33, i1 } %267, 1
  %269 = extractvalue { i33, i1 } %267, 0
  %270 = icmp slt i33 %269, 0
  %271 = or i1 %268, %270
  br i1 %271, label %272, label %273, !prof !3

272:                                              ; preds = %263
  call void @llvm.trap() #17
  unreachable

273:                                              ; preds = %263
  %274 = trunc i33 %269 to i32
  store i32 %274, i32* %264, align 4
  br label %277

275:                                              ; preds = %253
  %276 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %251) #17
  br label %277

277:                                              ; preds = %259, %273, %275
  %278 = phi %"class.WTF::StringImpl"* [ %276, %275 ], [ %251, %259 ], [ %251, %273 ]
  %279 = ptrtoint %"class.WTF::StringImpl"* %278 to i64
  %280 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 %279, i64* %280, align 8
  %281 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings13UpdateCursiveERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, i32 0) #17
  %282 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #17
  br label %298

298:                                              ; preds = %277, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #17
  br label %299

299:                                              ; preds = %298, %248
  %300 = phi i1 [ %249, %248 ], [ true, %298 ]
  %301 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 24, i32 2, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %350, label %304

304:                                              ; preds = %299
  %305 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #17
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 acquire, align 4
  %308 = and i32 %307, 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %326, label %310

310:                                              ; preds = %304
  %311 = load atomic i32, i32* %306 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %328

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  %317 = zext i32 %316 to i33
  %318 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %317, i33 1) #17
  %319 = extractvalue { i33, i1 } %318, 1
  %320 = extractvalue { i33, i1 } %318, 0
  %321 = icmp slt i33 %320, 0
  %322 = or i1 %319, %321
  br i1 %322, label %323, label %324, !prof !3

323:                                              ; preds = %314
  call void @llvm.trap() #17
  unreachable

324:                                              ; preds = %314
  %325 = trunc i33 %320 to i32
  store i32 %325, i32* %315, align 4
  br label %328

326:                                              ; preds = %304
  %327 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %302) #17
  br label %328

328:                                              ; preds = %310, %324, %326
  %329 = phi %"class.WTF::StringImpl"* [ %327, %326 ], [ %302, %310 ], [ %302, %324 ]
  %330 = ptrtoint %"class.WTF::StringImpl"* %329 to i64
  %331 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %330, i64* %331, align 8
  %332 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings13UpdateFantasyERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, i32 0) #17
  %333 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %333, align 8
  %335 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %335, label %349, label %336

336:                                              ; preds = %328
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %345

343:                                              ; preds = %336
  %344 = add i32 %342, -1
  store i32 %344, i32* %341, align 4
  br label %345

345:                                              ; preds = %343, %336
  %346 = phi i32 [ %344, %343 ], [ %342, %336 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #17
  br label %349

349:                                              ; preds = %328, %345, %348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #17
  br label %350

350:                                              ; preds = %349, %299
  %351 = phi i1 [ %300, %299 ], [ true, %349 ]
  %352 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 25, i32 2, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %401, label %355

355:                                              ; preds = %350
  %356 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #17
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 acquire, align 4
  %359 = and i32 %358, 4
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %377, label %361

361:                                              ; preds = %355
  %362 = load atomic i32, i32* %357 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %379

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  %368 = zext i32 %367 to i33
  %369 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %368, i33 1) #17
  %370 = extractvalue { i33, i1 } %369, 1
  %371 = extractvalue { i33, i1 } %369, 0
  %372 = icmp slt i33 %371, 0
  %373 = or i1 %370, %372
  br i1 %373, label %374, label %375, !prof !3

374:                                              ; preds = %365
  call void @llvm.trap() #17
  unreachable

375:                                              ; preds = %365
  %376 = trunc i33 %371 to i32
  store i32 %376, i32* %366, align 4
  br label %379

377:                                              ; preds = %355
  %378 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %353) #17
  br label %379

379:                                              ; preds = %361, %375, %377
  %380 = phi %"class.WTF::StringImpl"* [ %378, %377 ], [ %353, %361 ], [ %353, %375 ]
  %381 = ptrtoint %"class.WTF::StringImpl"* %380 to i64
  %382 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  store i64 %381, i64* %382, align 8
  %383 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings16UpdatePictographERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %45, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, i32 0) #17
  %384 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %384, align 8
  %386 = icmp eq %"class.WTF::StringImpl"* %385, null
  br i1 %386, label %400, label %387

387:                                              ; preds = %379
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = load atomic i32, i32* %388 monotonic, align 4
  %390 = and i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %393 = load i32, i32* %392, align 4
  br i1 %391, label %394, label %396

394:                                              ; preds = %387
  %395 = add i32 %393, -1
  store i32 %395, i32* %392, align 4
  br label %396

396:                                              ; preds = %394, %387
  %397 = phi i32 [ %395, %394 ], [ %393, %387 ]
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %400

399:                                              ; preds = %396
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %385) #17
  br label %400

400:                                              ; preds = %379, %396, %399
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #17
  br label %402

401:                                              ; preds = %350
  br i1 %351, label %402, label %403

402:                                              ; preds = %400, %401
  call void @_ZN5blink8Settings10InvalidateENS_16SettingsDelegate10ChangeTypeE(%"class.blink::Settings"* nonnull %42, i32 7) #17
  br label %403

403:                                              ; preds = %402, %401
  %404 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 26, i32 2
  %405 = load i32, i32* %404, align 4
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %408, label %407

407:                                              ; preds = %403
  call void @_ZN5blink8Settings18SetDefaultFontSizeEi(%"class.blink::Settings"* nonnull %42, i32 %405) #17
  br label %408

408:                                              ; preds = %403, %407
  %409 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 27, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %413, label %412

412:                                              ; preds = %408
  call void @_ZN5blink8Settings23SetDefaultFixedFontSizeEi(%"class.blink::Settings"* nonnull %42, i32 %410) #17
  br label %413

413:                                              ; preds = %36, %408, %412
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.2998", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 12
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 12, i32 2
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 12, i32 1
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %14 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %14, i64 2
  %16 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %15, align 8
  tail call void %16(%"class.blink::InspectorAgentState::SimpleField"* %4) #17
  br label %30

17:                                               ; preds = %8
  store i8 1, i8* %5, align 1
  %18 = bitcast %"class.blink::WebVector.2998"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.2998"* nonnull %3) #17
  %20 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 12, i32 0, i32 2
  %21 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 12, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %21, %"class.WTF::String"* dereferenceable(8) %22, %"class.blink::WebVector.2998"* nonnull %3) #17
  %23 = load i8*, i8** %19, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 1
  %27 = ptrtoint i8* %23 to i64
  %28 = bitcast i8** %26 to i64*
  store i64 %27, i64* %28, align 8
  call void @_ZdlPv(i8* nonnull %23) #19
  br label %29

29:                                               ; preds = %25, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  br label %30

30:                                               ; preds = %2, %12, %29
  %31 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %31, align 8
  call void @_ZN5blink13CoreProbeSink21AddInspectorPageAgentEPNS_18InspectorPageAgentE(%"class.blink::CoreProbeSink"* %32, %"class.blink::InspectorPageAgent"* %1) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent12setBypassCSPEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.2998", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %8, i64 0, i32 0
  %10 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %9) #17
  tail call void @_ZN5blink8Settings12SetBypassCSPEb(%"class.blink::Settings"* %10, i1 zeroext %2) #17
  %11 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 15
  %12 = zext i1 %2 to i8
  %13 = zext i1 %2 to i32
  %14 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 15, i32 2
  %15 = load i8, i8* %14, align 1, !range !4
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %41, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 15, i32 1
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %13, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %11 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %25 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %25, i64 2
  %27 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %26, align 8
  tail call void %27(%"class.blink::InspectorAgentState::SimpleField"* %11) #17
  br label %41

28:                                               ; preds = %18
  store i8 %12, i8* %14, align 1
  %29 = bitcast %"class.blink::WebVector.2998"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #17
  %30 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.2998"* nonnull %4) #17
  %31 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 15, i32 0, i32 2
  %32 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 15, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %32, %"class.WTF::String"* dereferenceable(8) %33, %"class.blink::WebVector.2998"* nonnull %4) #17
  %34 = load i8*, i8** %30, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 1
  %38 = ptrtoint i8* %34 to i64
  %39 = bitcast i8** %37 to i64*
  store i64 %38, i64* %39, align 8
  call void @_ZdlPv(i8* nonnull %34) #19
  br label %40

40:                                               ; preds = %36, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #17
  br label %41

41:                                               ; preds = %3, %23, %40
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25GenericFontFamilySettings14UpdateStandardERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25GenericFontFamilySettings11UpdateFixedERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25GenericFontFamilySettings11UpdateSerifERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25GenericFontFamilySettings15UpdateSansSerifERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25GenericFontFamilySettings13UpdateCursiveERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25GenericFontFamilySettings13UpdateFantasyERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25GenericFontFamilySettings16UpdatePictographERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2

declare void @_ZN5blink8Settings18SetDefaultFontSizeEi(%"class.blink::Settings"*, i32) local_unnamed_addr #2

declare void @_ZN5blink8Settings23SetDefaultFixedFontSizeEi(%"class.blink::Settings"*, i32) local_unnamed_addr #2

declare void @_ZN5blink13CoreProbeSink21AddInspectorPageAgentEPNS_18InspectorPageAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorPageAgent"*) local_unnamed_addr #2

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent6enableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.2998", align 8
  %4 = alloca %"class.crdtp::DispatchResponse", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState14ClearAllFieldsEv(%"class.blink::InspectorAgentState"* %5) #17
  %6 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 8
  %7 = bitcast %"class.WTF::String"* %6 to i64*
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 0, i64* %7, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #17
  br label %24

24:                                               ; preds = %23, %20, %2
  %25 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 7
  %26 = bitcast %"class.WTF::String"* %25 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 0, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %44, align 8
  tail call void @_ZN5blink13CoreProbeSink24RemoveInspectorPageAgentEPNS_18InspectorPageAgentE(%"class.blink::CoreProbeSink"* %45, %"class.blink::InspectorPageAgent"* %1) #17
  %46 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 9, i32 0, i32 0
  %47 = load %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 11
  %49 = load i32, i32* %48, align 4
  tail call void @_ZN5blink30InspectorResourceContentLoader6CancelEi(%"class.blink::InspectorResourceContentLoader"* %47, i32 %49) #17
  %50 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 3
  %51 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %50, i64 0, i32 0, i32 0
  %52 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %51, align 8
  %53 = icmp eq %"struct.WTF::KeyValuePair.726"* %52, null
  br i1 %53, label %88, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 3, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %84, label %58

58:                                               ; preds = %54
  %59 = zext i32 %56 to i64
  br label %60

60:                                               ; preds = %81, %58
  %61 = phi i64 [ 0, %58 ], [ %82, %81 ]
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %52, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.726"* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast i8* %64 to %"class.WTF::StringImpl"*
  %66 = ptrtoint i8* %64 to i64
  switch i64 %66, label %67 [
    i64 -1, label %81
    i64 0, label %81
  ]

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %64, i64 8
  %69 = bitcast i8* %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = bitcast i8* %64 to i32*
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %67
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %67
  %78 = phi i32 [ %76, %75 ], [ %74, %67 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #17
  br label %81

81:                                               ; preds = %80, %77, %60, %60
  %82 = add nuw nsw i64 %61, 1
  %83 = icmp eq i64 %82, %59
  br i1 %83, label %84, label %60

84:                                               ; preds = %81, %54
  %85 = bitcast %"struct.WTF::KeyValuePair.726"* %52 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %85) #17
  %86 = bitcast %"class.WTF::HashMap.722"* %50 to i64*
  store atomic i64 0, i64* %86 monotonic, align 8
  store i32 0, i32* %55, align 8
  %87 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 3, i32 0, i32 2
  store i32 0, i32* %87, align 4
  br label %88

88:                                               ; preds = %43, %84
  %89 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 2
  %90 = getelementptr inbounds %"class.WTF::HashMap.714", %"class.WTF::HashMap.714"* %89, i64 0, i32 0, i32 0
  %91 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %90, align 8
  %92 = icmp eq %"struct.WTF::KeyValuePair.718"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 2, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.718"* nonnull %91, i32 %95) #17
  %96 = bitcast %"class.WTF::HashMap.714"* %89 to i64*
  store atomic i64 0, i64* %96 monotonic, align 8
  store i32 0, i32* %94, align 8
  %97 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %97, align 4
  br label %98

98:                                               ; preds = %88, %93
  %99 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13
  %100 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 2
  %101 = load i8, i8* %100, align 1, !range !4, !noalias !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %125, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 1
  %105 = load i8, i8* %104, align 8, !range !4, !noalias !5
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %112

107:                                              ; preds = %103
  %108 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %99 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %109 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %108, align 8, !noalias !5
  %110 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %109, i64 2
  %111 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %110, align 8
  tail call void %111(%"class.blink::InspectorAgentState::SimpleField"* %99) #17
  br label %125

112:                                              ; preds = %103
  store i8 0, i8* %100, align 1, !noalias !5
  %113 = bitcast %"class.blink::WebVector.2998"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #17, !noalias !5
  %114 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 0, i64 24, i1 false) #17, !noalias !5
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector.2998"* nonnull %3) #17
  %115 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 0, i32 2
  %116 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %115, align 8, !noalias !5
  %117 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %116, %"class.WTF::String"* dereferenceable(8) %117, %"class.blink::WebVector.2998"* nonnull %3) #17
  %118 = load i8*, i8** %114, align 8, !noalias !5
  %119 = icmp eq i8* %118, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 1
  %122 = ptrtoint i8* %118 to i64
  %123 = bitcast i8** %121 to i64*
  store i64 %122, i64* %123, align 8, !noalias !5
  call void @_ZdlPv(i8* nonnull %118) #19
  br label %124

124:                                              ; preds = %120, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #17, !noalias !5
  br label %125

125:                                              ; preds = %98, %107, %124
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %4) #17
  %126 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %4, i64 0, i32 1
  %127 = bitcast %"class.std::__1::basic_string"* %126 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #19
  br label %134

134:                                              ; preds = %125, %131
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

declare void @_ZN5blink19InspectorAgentState14ClearAllFieldsEv(%"class.blink::InspectorAgentState"*) local_unnamed_addr #2

declare void @_ZN5blink13CoreProbeSink24RemoveInspectorPageAgentEPNS_18InspectorPageAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorPageAgent"*) local_unnamed_addr #2

declare void @_ZN5blink30InspectorResourceContentLoader6CancelEi(%"class.blink::InspectorResourceContentLoader"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent14stopScreencastEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.2998", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 2
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 1
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %14 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %14, i64 2
  %16 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %15, align 8
  tail call void %16(%"class.blink::InspectorAgentState::SimpleField"* %4) #17
  br label %30

17:                                               ; preds = %8
  store i8 0, i8* %5, align 1
  %18 = bitcast %"class.blink::WebVector.2998"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector.2998"* nonnull %3) #17
  %20 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 0, i32 2
  %21 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %21, %"class.WTF::String"* dereferenceable(8) %22, %"class.blink::WebVector.2998"* nonnull %3) #17
  %23 = load i8*, i8** %19, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 1
  %27 = ptrtoint i8* %23 to i64
  %28 = bitcast i8** %26 to i64*
  store i64 %27, i64* %28, align 8
  call void @_ZdlPv(i8* nonnull %23) #19
  br label %29

29:                                               ; preds = %25, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #17
  br label %30

30:                                               ; preds = %2, %12, %29
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent32addScriptToEvaluateOnNewDocumentERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3453"* nocapture readonly, %"class.WTF::String"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.WTF::Vector.46", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca i8, align 1
  %14 = bitcast %"class.WTF::Vector.46"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %10, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %10, i64 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 16
  %18 = bitcast %"class.WTF::Vector.46"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv(%"class.WTF::Vector.46"* nonnull sret %10, %"class.blink::InspectorAgentState::MapField"* %17)
  %19 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %20 = load i32, i32* %16, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 %21
  %23 = icmp ult i32 %20, 2
  br i1 %23, label %39, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 1
  %26 = bitcast %"class.blink::Decimal"* %8 to i8*
  %27 = bitcast %"class.blink::Decimal"* %9 to i8*
  br label %28

28:                                               ; preds = %28, %24
  %29 = phi %"class.WTF::String"* [ %25, %24 ], [ %33, %28 ]
  %30 = phi %"class.WTF::String"* [ %19, %24 ], [ %32, %28 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %30) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %9, %"class.WTF::String"* dereferenceable(8) %29) #17
  %31 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #17
  %32 = select i1 %31, %"class.WTF::String"* %29, %"class.WTF::String"* %30
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %22
  br i1 %34, label %35, label %28

35:                                               ; preds = %28
  %36 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %37 = load i32, i32* %16, align 4
  %38 = zext i32 %37 to i64
  br label %39

39:                                               ; preds = %35, %6
  %40 = phi i64 [ %38, %35 ], [ %21, %6 ]
  %41 = phi %"class.WTF::String"* [ %36, %35 ], [ %19, %6 ]
  %42 = phi %"class.WTF::String"* [ %32, %35 ], [ %19, %6 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 %40
  %44 = icmp eq %"class.WTF::String"* %42, %43
  br i1 %44, label %45, label %69

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  %48 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 32, i1 false) #17
  store i8* %47, i8** %48, align 8
  store i8 49, i8* %47, align 4
  store i32 1, i32* %49, align 8
  %50 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %47, i32 1) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #17
  %51 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %52 = bitcast %"class.WTF::String"* %5 to i64*
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %93, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %93

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #17
  br label %93

69:                                               ; preds = %39
  %70 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %11, %"class.WTF::String"* dereferenceable(8) %42) #17
  %71 = call double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"* nonnull %11) #17
  %72 = fadd double %71, 1.000000e+00
  %73 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %72, i32 6) #17
  %74 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  %75 = bitcast %"class.WTF::String"* %5 to i64*
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  store i64 %74, i64* %75, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #17
  br label %92

92:                                               ; preds = %91, %88, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #17
  br label %93

93:                                               ; preds = %45, %65, %68, %92
  call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_(%"class.blink::InspectorAgentState::MapField"* %17, %"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %2)
  %94 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 17
  %95 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  %96 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  %97 = load i8, i8* %96, align 8, !range !4
  %98 = icmp eq i8 %97, 0
  %99 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 1
  %100 = select i1 %98, %"class.WTF::String"* %12, %"class.WTF::String"* %99
  call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_(%"class.blink::InspectorAgentState::MapField"* %94, %"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %100)
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #17
  br label %117

117:                                              ; preds = %93, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #17
  %118 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 18
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13)
  store i8 0, i8* %13, align 1
  %119 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %4, i64 0, i32 0
  %120 = load i8, i8* %119, align 1, !range !4
  %121 = icmp eq i8 %120, 0
  %122 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %4, i64 0, i32 1
  %123 = select i1 %121, i8* %13, i8* %122
  %124 = load i8, i8* %123, align 1, !range !4
  %125 = icmp ne i8 %124, 0
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField.770"* %118, %"class.WTF::String"* dereferenceable(8) %5, i1 zeroext %125)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %126 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %127 = icmp eq %"class.WTF::String"* %126, null
  br i1 %127, label %161, label %128, !prof !2

128:                                              ; preds = %117
  %129 = bitcast %"class.WTF::String"* %126 to i8*
  %130 = load i32, i32* %16, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %159, label %132, !prof !3

132:                                              ; preds = %128
  %133 = zext i32 %130 to i64
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 %133
  br label %135

135:                                              ; preds = %153, %132
  %136 = phi %"class.WTF::String"* [ %154, %153 ], [ %126, %132 ]
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #17
  br label %153

153:                                              ; preds = %152, %149, %135
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 1
  %155 = icmp eq %"class.WTF::String"* %154, %134
  br i1 %155, label %156, label %135

156:                                              ; preds = %153
  store i32 0, i32* %16, align 4
  %157 = bitcast %"class.WTF::Vector.46"* %10 to i8**
  %158 = load i8*, i8** %157, align 8
  br label %159

159:                                              ; preds = %156, %128
  %160 = phi i8* [ %158, %156 ], [ %129, %128 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %160) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %161

161:                                              ; preds = %117, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv(%"class.WTF::Vector.46"* noalias sret, %"class.blink::InspectorAgentState::MapField"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.46"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #17
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.769"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.769"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.769"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.769"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.769"* %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %63, %73, %70, %2, %25
  ret void

29:                                               ; preds = %25, %75
  %30 = phi i32 [ %77, %75 ], [ 0, %25 ]
  %31 = phi i32 [ %76, %75 ], [ 0, %25 ]
  %32 = phi %"struct.WTF::KeyValuePair.769"* [ %67, %75 ], [ %26, %25 ]
  %33 = icmp eq i32 %31, %30
  br i1 %33, label %61, label %34, !prof !3

34:                                               ; preds = %29
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %36, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #17
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #17
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %34
  %59 = load i32, i32* %5, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %63

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %32, i64 0, i32 0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.46"* %0, %"class.WTF::String"* dereferenceable(8) %62) #17
  br label %63

63:                                               ; preds = %58, %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %32, i64 1
  %65 = icmp eq %"struct.WTF::KeyValuePair.769"* %64, %15
  br i1 %65, label %28, label %66

66:                                               ; preds = %63, %70
  %67 = phi %"struct.WTF::KeyValuePair.769"* [ %71, %70 ], [ %64, %63 ]
  %68 = bitcast %"struct.WTF::KeyValuePair.769"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  switch i64 %69, label %73 [
    i64 -1, label %70
    i64 0, label %70
  ]

70:                                               ; preds = %66, %66
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %67, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair.769"* %71, %15
  br i1 %72, label %28, label %66

73:                                               ; preds = %66
  %74 = icmp eq %"struct.WTF::KeyValuePair.769"* %67, %15
  br i1 %74, label %28, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* %4, align 8
  br label %29
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double, i32) local_unnamed_addr #2

declare void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* sret, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::WebVector.2998", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %10) #17
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_(%"class.blink::InspectorAgentState::MapField"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %167

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %14, i64 0, i32 0
  %16 = tail call { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.766"* %15, %"class.WTF::String"* dereferenceable(8) %1) #17
  %17 = extractvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %16, 0
  %18 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %14, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair.769"* %17, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %17, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %29 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"* %28) #17
  br i1 %29, label %167, label %30

30:                                               ; preds = %13, %25
  %31 = tail call { %"struct.WTF::KeyValuePair.769"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.766"* %15, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #17
  %32 = extractvalue { %"struct.WTF::KeyValuePair.769"*, i8 } %31, 1
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %76

35:                                               ; preds = %30
  %36 = extractvalue { %"struct.WTF::KeyValuePair.769"*, i8 } %31, 0
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %36, i64 0, i32 1
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #17
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  tail call void @llvm.trap() #17
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %55, %40, %35
  %58 = ptrtoint %"class.WTF::StringImpl"* %38 to i64
  %59 = bitcast %"class.WTF::String"* %37 to i64*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  store i64 %58, i64* %59, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #17
  br label %76

76:                                               ; preds = %30, %57, %72, %75
  %77 = bitcast %"class.blink::WebVector.2998"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #17
  %78 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeERKN3WTF6StringEPNS_9WebVectorIhEE(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::WebVector.2998"* nonnull %4) #17
  %80 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %81 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %80, align 8
  %82 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #17
  %83 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #17
  %84 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #17
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %93
  call void @llvm.trap() #17
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %105

105:                                              ; preds = %76, %88, %103
  %106 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %84, %"class.WTF::StringImpl"* %86)
  %107 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0
  %108 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %106, 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1, i32 0, i32 0
  %110 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %106, 1
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %109, align 8
  %111 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %112, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %81, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::WebVector.2998"* nonnull %4) #17
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #17
  br label %128

128:                                              ; preds = %105, %124, %127
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #17
  br label %144

144:                                              ; preds = %143, %140, %128
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #17
  br label %160

160:                                              ; preds = %144, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #17
  %161 = load i8*, i8** %78, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = ptrtoint i8* %161 to i64
  %165 = bitcast i8** %79 to i64*
  store i64 %164, i64* %165, align 8
  call void @_ZdlPv(i8* nonnull %161) #19
  br label %166

166:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #17
  br label %167

167:                                              ; preds = %166, %25, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField.770"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::WebVector.2998", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %4, align 1
  %9 = zext i1 %2 to i32
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !4
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField.770"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %135

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %16, i64 0, i32 0
  %18 = tail call { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.723"* %17, %"class.WTF::String"* dereferenceable(8) %1) #17
  %19 = extractvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %18, 0
  %20 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %16, i64 0, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %21, i64 %24
  %26 = icmp eq %"struct.WTF::KeyValuePair.726"* %19, %25
  br i1 %26, label %31, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %19, i64 0, i32 1
  %29 = load i8, i8* %28, align 8, !range !4
  %30 = icmp eq i8 %29, %8
  br i1 %30, label %135, label %31

31:                                               ; preds = %15, %27
  %32 = call { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.723"* %17, %"class.WTF::String"* dereferenceable(8) %1, i8* nonnull dereferenceable(1) %4) #17
  %33 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %32, 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = load i8, i8* %4, align 1, !range !4
  br label %42

38:                                               ; preds = %31
  %39 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %32, 0
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %39, i64 0, i32 1
  %41 = load i8, i8* %4, align 1, !range !4
  store i8 %41, i8* %40, align 1
  br label %42

42:                                               ; preds = %36, %38
  %43 = phi i8 [ %37, %36 ], [ %41, %38 ]
  %44 = bitcast %"class.blink::WebVector.2998"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %5, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #17
  %47 = icmp ne i8 %43, 0
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %47, %"class.blink::WebVector.2998"* nonnull %5) #17
  %48 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 2
  %49 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %48, align 8
  %50 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #17
  %51 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #17
  %52 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #17
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !3

70:                                               ; preds = %61
  call void @llvm.trap() #17
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %42, %56, %71
  %74 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %52, %"class.WTF::StringImpl"* %54)
  %75 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 0
  %76 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %74, 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1, i32 0, i32 0
  %78 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %74, 1
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %77, align 8
  %79 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %80, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %49, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::WebVector.2998"* nonnull %5) #17
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #17
  br label %96

96:                                               ; preds = %73, %92, %95
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #17
  br label %112

112:                                              ; preds = %111, %108, %96
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #17
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #17
  %129 = load i8*, i8** %45, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = ptrtoint i8* %129 to i64
  %133 = bitcast i8** %46 to i64*
  store i64 %132, i64* %133, align 8
  call void @_ZdlPv(i8* nonnull %129) #19
  br label %134

134:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #17
  br label %135

135:                                              ; preds = %134, %27, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent32addScriptToEvaluateOnNewDocumentERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3453"* nocapture readonly, %"class.WTF::String"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent32addScriptToEvaluateOnNewDocumentERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPS2_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe"* %3, %"class.crdtp::detail::ValueMaybe.3453"* %4, %"class.WTF::String"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent35removeScriptToEvaluateOnNewDocumentERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 16, i32 2
  %6 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.766"* %6, %"class.WTF::String"* dereferenceable(8) %2) #17
  %8 = extractvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 16, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.769"* %8, %14
  %16 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 16, i32 1
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %8, i64 0, i32 1
  %18 = select i1 %15, %"class.WTF::String"* %16, %"class.WTF::String"* %17
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %33

22:                                               ; preds = %3
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 16, i8* %24, align 1
  %25 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i64 16, i1 false) #17
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = bitcast i64* %26 to i8*
  store i8 0, i8* %27, align 8
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #17
  %28 = load i8, i8* %24, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #19
  br label %37

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 16
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_(%"class.blink::InspectorAgentState::MapField"* %34, %"class.WTF::String"* dereferenceable(8) %2)
  %35 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 17
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_(%"class.blink::InspectorAgentState::MapField"* %35, %"class.WTF::String"* dereferenceable(8) %2)
  %36 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 18
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField.770"* %36, %"class.WTF::String"* dereferenceable(8) %2)
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %37

37:                                               ; preds = %30, %22, %33
  ret void
}

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.766"* %6, %"class.WTF::String"* dereferenceable(8) %1) #17
  %8 = extractvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.769"* %8, %14
  br i1 %15, label %98, label %16

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.766"* %6, %"struct.WTF::KeyValuePair.769"* %8) #17
  %17 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #17
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %30
  tail call void @llvm.trap() #17
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %16, %25, %40
  %43 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::StringImpl"* %23)
  %44 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1, i32 0, i32 0
  %47 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 1
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebVector.2998"* null) #17
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #17
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #17
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #17
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField.770"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.723"* %6, %"class.WTF::String"* dereferenceable(8) %1) #17
  %8 = extractvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.726"* %8, %14
  br i1 %15, label %98, label %16

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.723"* %6, %"struct.WTF::KeyValuePair.726"* %8) #17
  %17 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #17
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %30
  tail call void @llvm.trap() #17
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %16, %25, %40
  %43 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::StringImpl"* %23)
  %44 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1, i32 0, i32 0
  %47 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 1
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebVector.2998"* null) #17
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #17
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #17
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #17
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent35removeScriptToEvaluateOnNewDocumentERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent35removeScriptToEvaluateOnNewDocumentERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent25addScriptToEvaluateOnLoadERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.crdtp::detail::ValueMaybe.3453", align 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  %8 = bitcast %"class.WTF::String"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %5, i64 0, i32 0
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %5, i64 0, i32 1
  %12 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %7, i64 0, i32 0
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %7, i64 0, i32 1
  store i8 0, i8* %14, align 1
  call void @_ZN5blink18InspectorPageAgent32addScriptToEvaluateOnNewDocumentERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPS2_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe"* nonnull %5, %"class.crdtp::detail::ValueMaybe.3453"* nonnull %7, %"class.WTF::String"* %3)
  %15 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %5, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #17
  br label %31

31:                                               ; preds = %4, %27, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent25addScriptToEvaluateOnLoadERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.crdtp::detail::ValueMaybe.3453", align 1
  %8 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %9 = bitcast i8* %8 to %"class.blink::InspectorPageAgent"*
  %10 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17, !noalias !8
  %13 = bitcast %"class.WTF::String"* %6 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !8
  store i8 1, i8* %10, align 8, !noalias !8
  %15 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %5, i64 0, i32 1
  %16 = bitcast %"class.WTF::String"* %15 to i64*
  store i64 %14, i64* %16, align 8, !noalias !8
  store i8 1, i8* %12, align 1, !noalias !8
  %17 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %7, i64 0, i32 1
  store i8 0, i8* %17, align 1, !noalias !8
  call void @_ZN5blink18InspectorPageAgent32addScriptToEvaluateOnNewDocumentERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPS2_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %9, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe"* nonnull %5, %"class.crdtp::detail::ValueMaybe.3453"* nonnull %7, %"class.WTF::String"* %3) #17
  %18 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %5, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8, !noalias !8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #17
  br label %34

34:                                               ; preds = %4, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent28removeScriptToEvaluateOnLoadERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink18InspectorPageAgent35removeScriptToEvaluateOnNewDocumentERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent28removeScriptToEvaluateOnLoadERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent35removeScriptToEvaluateOnNewDocumentERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent25setLifecycleEventsEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.2998", align 8
  %5 = alloca %"class.blink::InspectedFrames::Iterator", align 8
  %6 = alloca %"class.blink::InspectedFrames::Iterator", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 14
  %8 = zext i1 %2 to i8
  %9 = zext i1 %2 to i32
  %10 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 14, i32 2
  %11 = load i8, i8* %10, align 1, !range !4
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %37, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 14, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %9, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %7 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %21 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %21, i64 2
  %23 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %22, align 8
  tail call void %23(%"class.blink::InspectorAgentState::SimpleField"* %7) #17
  br label %37

24:                                               ; preds = %14
  store i8 %8, i8* %10, align 1
  %25 = bitcast %"class.blink::WebVector.2998"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  %26 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.2998"* nonnull %4) #17
  %27 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 14, i32 0, i32 2
  %28 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 14, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %28, %"class.WTF::String"* dereferenceable(8) %29, %"class.blink::WebVector.2998"* nonnull %4) #17
  %30 = load i8*, i8** %26, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 1
  %34 = ptrtoint i8* %30 to i64
  %35 = bitcast i8** %33 to i64*
  store i64 %34, i64* %35, align 8
  call void @_ZdlPv(i8* nonnull %30) #19
  br label %36

36:                                               ; preds = %32, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17
  br label %37

37:                                               ; preds = %3, %19, %36
  br i1 %2, label %38, label %141

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %39, align 8
  %41 = bitcast %"class.blink::InspectedFrames::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %5, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %5, i64 0, i32 1
  %44 = call { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames5beginEv(%"class.blink::InspectedFrames"* %40) #17
  %45 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %44, 0
  store %"class.blink::LocalFrame"* %45, %"class.blink::LocalFrame"** %42, align 8
  %46 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %44, 1
  store %"class.blink::LocalFrame"* %46, %"class.blink::LocalFrame"** %43, align 8
  %47 = bitcast %"class.blink::InspectedFrames::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #17
  %48 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %6, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %6, i64 0, i32 1
  %50 = call { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames3endEv(%"class.blink::InspectedFrames"* %40) #17
  %51 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %50, 0
  store %"class.blink::LocalFrame"* %51, %"class.blink::LocalFrame"** %48, align 8
  %52 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %50, 1
  store %"class.blink::LocalFrame"* %52, %"class.blink::LocalFrame"** %49, align 8
  %53 = call zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"* nonnull %5, %"class.blink::InspectedFrames::Iterator"* nonnull dereferenceable(16) %6) #17
  br i1 %53, label %55, label %54

54:                                               ; preds = %138, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #17
  br label %141

55:                                               ; preds = %38, %138
  %56 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %43, align 8
  %57 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %56) #17
  %58 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %56, i64 0, i32 10, i32 2, i32 0, i32 0
  %59 = load %"class.blink::DocumentLoader"*, %"class.blink::DocumentLoader"** %58, align 8
  %60 = icmp ne %"class.blink::Document"* %57, null
  %61 = icmp ne %"class.blink::DocumentLoader"* %59, null
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %138

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %59, i64 0, i32 37, i32 15, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %63
  %68 = add i64 %65, -9223372036854775807
  %69 = icmp ult i64 %68, 2
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = sitofp i64 %65 to double
  %72 = fdiv double %71, 1.000000e+06
  br label %76

73:                                               ; preds = %67
  %74 = icmp slt i64 %65, 0
  %75 = select i1 %74, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi double [ %75, %73 ], [ %72, %70 ]
  call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %1, %"class.blink::LocalFrame"* %56, %"class.blink::DocumentLoader"* nonnull %59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), double %77)
  br label %78

78:                                               ; preds = %76, %63
  %79 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %57, i64 0, i32 120, i32 3, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %93, label %82

82:                                               ; preds = %78
  %83 = add i64 %80, -9223372036854775807
  %84 = icmp ult i64 %83, 2
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = sitofp i64 %80 to double
  %87 = fdiv double %86, 1.000000e+06
  br label %91

88:                                               ; preds = %82
  %89 = icmp slt i64 %80, 0
  %90 = select i1 %89, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %91

91:                                               ; preds = %85, %88
  %92 = phi double [ %90, %88 ], [ %87, %85 ]
  call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %1, %"class.blink::LocalFrame"* %56, %"class.blink::DocumentLoader"* nonnull %59, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), double %92)
  br label %93

93:                                               ; preds = %91, %78
  %94 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %59, i64 0, i32 37, i32 17, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %108, label %97

97:                                               ; preds = %93
  %98 = add i64 %95, -9223372036854775807
  %99 = icmp ult i64 %98, 2
  br i1 %99, label %103, label %100

100:                                              ; preds = %97
  %101 = sitofp i64 %95 to double
  %102 = fdiv double %101, 1.000000e+06
  br label %106

103:                                              ; preds = %97
  %104 = icmp slt i64 %95, 0
  %105 = select i1 %104, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %106

106:                                              ; preds = %100, %103
  %107 = phi double [ %105, %103 ], [ %102, %100 ]
  call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %1, %"class.blink::LocalFrame"* %56, %"class.blink::DocumentLoader"* nonnull %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), double %107)
  br label %108

108:                                              ; preds = %106, %93
  %109 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %56, i64 0, i32 27, i32 0, i32 0
  %110 = load %"class.blink::IdlenessDetector"*, %"class.blink::IdlenessDetector"** %109, align 8
  %111 = call i64 @_ZN5blink16IdlenessDetector24GetNetworkAlmostIdleTimeEv(%"class.blink::IdlenessDetector"* %110) #17
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %124, label %113

113:                                              ; preds = %108
  %114 = add i64 %111, -9223372036854775807
  %115 = icmp ult i64 %114, 2
  br i1 %115, label %119, label %116

116:                                              ; preds = %113
  %117 = sitofp i64 %111 to double
  %118 = fdiv double %117, 1.000000e+06
  br label %122

119:                                              ; preds = %113
  %120 = icmp slt i64 %111, 0
  %121 = select i1 %120, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %122

122:                                              ; preds = %116, %119
  %123 = phi double [ %121, %119 ], [ %118, %116 ]
  call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %1, %"class.blink::LocalFrame"* %56, %"class.blink::DocumentLoader"* nonnull %59, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), double %123)
  br label %124

124:                                              ; preds = %122, %108
  %125 = call i64 @_ZN5blink16IdlenessDetector18GetNetworkIdleTimeEv(%"class.blink::IdlenessDetector"* %110) #17
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %124
  %128 = add i64 %125, -9223372036854775807
  %129 = icmp ult i64 %128, 2
  br i1 %129, label %133, label %130

130:                                              ; preds = %127
  %131 = sitofp i64 %125 to double
  %132 = fdiv double %131, 1.000000e+06
  br label %136

133:                                              ; preds = %127
  %134 = icmp slt i64 %125, 0
  %135 = select i1 %134, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %136

136:                                              ; preds = %130, %133
  %137 = phi double [ %135, %133 ], [ %132, %130 ]
  call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %1, %"class.blink::LocalFrame"* %56, %"class.blink::DocumentLoader"* nonnull %59, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), double %137)
  br label %138

138:                                              ; preds = %124, %136, %55
  %139 = call dereferenceable(16) %"class.blink::InspectedFrames::Iterator"* @_ZN5blink15InspectedFrames8IteratorppEv(%"class.blink::InspectedFrames::Iterator"* nonnull %5) #17
  %140 = call zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"* nonnull %5, %"class.blink::InspectedFrames::Iterator"* nonnull dereferenceable(16) %6) #17
  br i1 %140, label %55, label %54

141:                                              ; preds = %37, %54
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

declare { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames5beginEv(%"class.blink::InspectedFrames"*) local_unnamed_addr #2

declare { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames3endEv(%"class.blink::InspectedFrames"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"*, %"class.blink::InspectedFrames::Iterator"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*, %"class.blink::DocumentLoader"*, i8*, double) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = icmp eq %"class.blink::DocumentLoader"* %2, null
  br i1 %9, label %80, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 14, i32 2
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %80, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %15, align 8
  %17 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %19 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %18) #17
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory8LoaderIdEPNS_14DocumentLoaderE(%"class.blink::DocumentLoader"* nonnull %2) #17
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = icmp eq i8* %3, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %14
  %27 = tail call i64 @strlen(i8* nonnull %3) #18
  br label %28

28:                                               ; preds = %14, %26
  %29 = phi i64 [ %27, %26 ], [ 0, %14 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %3, i64 %29) #17
  call void @_ZN5blink8protocol4Page8Frontend14lifecycleEventERKN3WTF6StringES6_S6_d(%"class.blink::protocol::Page::Frontend"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8, double %4) #17
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #17
  br label %46

46:                                               ; preds = %28, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #17
  br label %62

62:                                               ; preds = %46, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #17
  br label %78

78:                                               ; preds = %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %79 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %15, align 8
  call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %79) #17
  br label %80

80:                                               ; preds = %10, %5, %78
  ret void
}

declare i64 @_ZN5blink16IdlenessDetector24GetNetworkAlmostIdleTimeEv(%"class.blink::IdlenessDetector"*) local_unnamed_addr #2

declare i64 @_ZN5blink16IdlenessDetector18GetNetworkIdleTimeEv(%"class.blink::IdlenessDetector"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::InspectedFrames::Iterator"* @_ZN5blink15InspectedFrames8IteratorppEv(%"class.blink::InspectedFrames::Iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent25setLifecycleEventsEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent25setLifecycleEventsEnabledEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent20setAdBlockingEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readnone, i1 zeroext) unnamed_addr #0 align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent20setAdBlockingEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readnone, i1 zeroext) unnamed_addr #0 align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent6reloadEN5crdtp6detail10ValueMaybeIbEENS3_IN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture, %"class.crdtp::detail::ValueMaybe.3453"* nocapture readnone, %"class.crdtp::detail::ValueMaybe"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  %7 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 1
  %11 = select i1 %9, %"class.WTF::String"* %5, %"class.WTF::String"* %10
  %12 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 7
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #17
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  call void @llvm.trap() #17
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %4
  %34 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %35 = bitcast %"class.WTF::String"* %12 to i64*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #17
  br label %52

52:                                               ; preds = %33, %48, %51
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #17
  br label %69

69:                                               ; preds = %52, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %70 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 5
  %71 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %70, align 8
  %72 = bitcast %"class.v8_inspector::V8InspectorSession"* %71 to void (%"class.v8_inspector::V8InspectorSession"*, i1)***
  %73 = load void (%"class.v8_inspector::V8InspectorSession"*, i1)**, void (%"class.v8_inspector::V8InspectorSession"*, i1)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*, i1)*, void (%"class.v8_inspector::V8InspectorSession"*, i1)** %73, i64 10
  %75 = load void (%"class.v8_inspector::V8InspectorSession"*, i1)*, void (%"class.v8_inspector::V8InspectorSession"*, i1)** %74, align 8
  call void %75(%"class.v8_inspector::V8InspectorSession"* %71, i1 zeroext true) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent6reloadEN5crdtp6detail10ValueMaybeIbEENS3_IN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture, %"class.crdtp::detail::ValueMaybe.3453"* nocapture readnone, %"class.crdtp::detail::ValueMaybe"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent6reloadEN5crdtp6detail10ValueMaybeIbEENS3_IN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %6, %"class.crdtp::detail::ValueMaybe.3453"* undef, %"class.crdtp::detail::ValueMaybe"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent11stopLoadingEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent11stopLoadingEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent15getResourceTreeEPNSt3__110unique_ptrINS_8protocol4Page17FrameResourceTreeENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture, %"class.std::__1::unique_ptr.3454"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %6, align 8
  %8 = tail call %"class.blink::protocol::Page::FrameResourceTree"* @_ZN5blink18InspectorPageAgent26BuildObjectForResourceTreeEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* %1, %"class.blink::LocalFrame"* %7)
  %9 = ptrtoint %"class.blink::protocol::Page::FrameResourceTree"* %8 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::protocol::Page::FrameResourceTree"*, %"class.blink::protocol::Page::FrameResourceTree"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.3454"* %2 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq %"class.blink::protocol::Page::FrameResourceTree"* %11, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::protocol::Page::FrameResourceTree"* %11 to void (%"class.blink::protocol::Page::FrameResourceTree"*)***
  %16 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)**, void (%"class.blink::protocol::Page::FrameResourceTree"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %16, i64 2
  %18 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %17, align 8
  tail call void %18(%"class.blink::protocol::Page::FrameResourceTree"* nonnull %11) #17
  br label %19

19:                                               ; preds = %14, %3
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::Page::FrameResourceTree"* @_ZN5blink18InspectorPageAgent26BuildObjectForResourceTreeEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Resource"*, align 8
  %4 = alloca %"class.blink::HeapVector", align 8
  %5 = alloca %"class.std::__1::unique_ptr.3552", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.absl::optional.130", align 8
  %8 = alloca %"class.std::__1::unique_ptr.3454", align 8
  %9 = tail call %"class.blink::protocol::Page::Frame"* @_ZN5blink18InspectorPageAgent19BuildObjectForFrameEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* undef, %"class.blink::LocalFrame"* %1)
  %10 = ptrtoint %"class.blink::protocol::Page::Frame"* %9 to i64
  %11 = tail call i8* @_Znwm(i64 24) #19
  %12 = bitcast i8* %11 to %"class.std::__1::vector.3550"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #17
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.blink::HeapVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #17, !alias.scope !11
  %18 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #17, !noalias !11
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 14, i32 0, i32 0
  %20 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %19, align 8, !noalias !11
  %21 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %20, i64 0, i32 12, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4, !noalias !11
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %20, i64 0, i32 12, i32 0, i32 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair.2590"*, %"struct.WTF::KeyValuePair.2590"** %24, align 8, !noalias !11
  %26 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %20, i64 0, i32 12, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8, !noalias !11
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2590", %"struct.WTF::KeyValuePair.2590"* %25, i64 %28
  br i1 %23, label %89, label %30

30:                                               ; preds = %2
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"struct.WTF::KeyValuePair.2590"* [ %37, %36 ], [ %25, %30 ]
  %34 = bitcast %"struct.WTF::KeyValuePair.2590"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.2590", %"struct.WTF::KeyValuePair.2590"* %33, i64 1
  %38 = icmp eq %"struct.WTF::KeyValuePair.2590"* %37, %29
  br i1 %38, label %89, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"struct.WTF::KeyValuePair.2590"* [ %25, %30 ], [ %33, %32 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair.2590"* %40, %29
  br i1 %41, label %89, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::Resource"** %3 to i8*
  %44 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0
  br label %45

45:                                               ; preds = %87, %42
  %46 = phi %"struct.WTF::KeyValuePair.2590"* [ %40, %42 ], [ %81, %87 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #17, !noalias !11
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2590", %"struct.WTF::KeyValuePair.2590"* %46, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.blink::Resource"*, %"class.blink::Resource"** %47, align 8
  store %"class.blink::Resource"* %48, %"class.blink::Resource"** %3, align 8, !noalias !11
  %49 = icmp eq %"class.blink::Resource"* %48, null
  %50 = ptrtoint %"class.blink::Resource"* %48 to i64
  br i1 %49, label %77, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %48, i64 0, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %77, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %48, i64 0, i32 1
  %57 = load i8, i8* %56, align 8
  %58 = icmp eq i8 %57, 5
  br i1 %58, label %77, label %59

59:                                               ; preds = %55
  %60 = load i32, i32* %17, align 4, !alias.scope !11
  %61 = load i32, i32* %16, align 8, !alias.scope !11
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %76, label %63, !prof !3

63:                                               ; preds = %59
  %64 = load %"class.blink::Member.762"*, %"class.blink::Member.762"** %15, align 8, !alias.scope !11
  %65 = zext i32 %60 to i64
  %66 = getelementptr inbounds %"class.blink::Member.762", %"class.blink::Member.762"* %64, i64 %65
  %67 = bitcast %"class.blink::Member.762"* %66 to i64*
  store atomic i64 %50, i64* %67 monotonic, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = bitcast %"class.blink::Resource"* %48 to i8*
  %72 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %71) #17
  br label %73

73:                                               ; preds = %70, %63
  %74 = load i32, i32* %17, align 4, !alias.scope !11
  %75 = add i32 %74, 1
  store i32 %75, i32* %17, align 4, !alias.scope !11
  br label %77

76:                                               ; preds = %59
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.759"* nonnull %44, %"class.blink::Resource"** nonnull dereferenceable(8) %3) #17
  br label %77

77:                                               ; preds = %45, %51, %55, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17, !noalias !11
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2590", %"struct.WTF::KeyValuePair.2590"* %46, i64 1
  %79 = icmp eq %"struct.WTF::KeyValuePair.2590"* %78, %29
  br i1 %79, label %89, label %80

80:                                               ; preds = %77, %84
  %81 = phi %"struct.WTF::KeyValuePair.2590"* [ %85, %84 ], [ %78, %77 ]
  %82 = bitcast %"struct.WTF::KeyValuePair.2590"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  switch i64 %83, label %87 [
    i64 -1, label %84
    i64 0, label %84
  ]

84:                                               ; preds = %80, %80
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.2590", %"struct.WTF::KeyValuePair.2590"* %81, i64 1
  %86 = icmp eq %"struct.WTF::KeyValuePair.2590"* %85, %29
  br i1 %86, label %89, label %80

87:                                               ; preds = %80
  %88 = icmp eq %"struct.WTF::KeyValuePair.2590"* %81, %29
  br i1 %88, label %89, label %45

89:                                               ; preds = %36, %77, %87, %84, %2, %39
  %90 = load %"class.blink::Member.762"*, %"class.blink::Member.762"** %15, align 8
  %91 = load i32, i32* %17, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"class.blink::Member.762", %"class.blink::Member.762"* %90, i64 %92
  %94 = icmp eq i32 %91, 0
  br i1 %94, label %110, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.std::__1::unique_ptr.3552"* %5 to i8*
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %5, i64 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  %99 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 4, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3552"* %5 to i8**
  %101 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %104 = getelementptr inbounds i8, i8* %11, i64 8
  %105 = bitcast i8* %104 to %"class.std::__1::unique_ptr.3552"**
  %106 = getelementptr inbounds i8, i8* %11, i64 16
  %107 = bitcast i8* %106 to %"class.std::__1::unique_ptr.3552"**
  %108 = bitcast %"class.std::__1::unique_ptr.3552"* %5 to i64*
  %109 = bitcast i8* %104 to i64*
  br label %129

110:                                              ; preds = %340, %89
  %111 = call i8* @_Znwm(i64 32) #19
  %112 = bitcast i8* %111 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page17FrameResourceTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 8
  %114 = getelementptr inbounds i8, i8* %111, i64 16
  %115 = bitcast i8* %114 to i64*
  store i64 0, i64* %115, align 8
  %116 = bitcast i8* %111 to %"class.blink::protocol::Page::FrameResourceTree"*
  %117 = bitcast i8* %113 to i64*
  store i64 %10, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %111, i64 24
  %119 = bitcast i8* %118 to i64*
  store i64 %13, i64* %119, align 8
  %120 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0, i32 1
  %121 = call %"class.blink::Frame"* @_ZNK5blink9FrameTree10FirstChildEv(%"class.blink::FrameTree"* %120) #17
  %122 = icmp eq %"class.blink::Frame"* %121, null
  br i1 %122, label %123, label %126

123:                                              ; preds = %110
  %124 = getelementptr inbounds i8, i8* %111, i64 16
  %125 = bitcast i8* %124 to i64*
  store i64 0, i64* %125, align 8
  br label %379

126:                                              ; preds = %110
  %127 = bitcast %"class.std::__1::unique_ptr.3454"* %8 to i8*
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %8, i64 0, i32 0, i32 0, i32 0
  br label %380

129:                                              ; preds = %95, %340
  %130 = phi %"class.blink::Member.762"* [ %90, %95 ], [ %341, %340 ]
  %131 = getelementptr inbounds %"class.blink::Member.762", %"class.blink::Member.762"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.blink::Resource"*, %"class.blink::Resource"** %131, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #17
  store %"class.blink::protocol::Page::FrameResource"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::Page::FrameResource"*), %"class.blink::protocol::Page::FrameResource"** %97, align 8
  %133 = call i8* @_Znwm(i64 72) #19
  %134 = bitcast i8* %133 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page13FrameResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  %135 = getelementptr inbounds i8, i8* %133, i64 8
  %136 = getelementptr inbounds i8, i8* %133, i64 40
  %137 = bitcast i8* %136 to double*
  store double 0.000000e+00, double* %137, align 8
  %138 = getelementptr inbounds i8, i8* %133, i64 48
  store i8 0, i8* %138, align 8
  %139 = getelementptr inbounds i8, i8* %133, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 25, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 12, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %98) #17
  %140 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %132, i64 0, i32 26
  %141 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %140) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 112, i1 false) #17, !alias.scope !14
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %6, %"class.blink::KURL"* dereferenceable(112) %141) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %6) #17
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %161, label %144

144:                                              ; preds = %129
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i33
  %153 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #17
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !3

158:                                              ; preds = %149
  call void @llvm.trap() #17
  unreachable

159:                                              ; preds = %149
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %150, align 4
  br label %161

161:                                              ; preds = %159, %144, %129
  %162 = ptrtoint %"class.WTF::StringImpl"* %142 to i64
  %163 = bitcast i8* %135 to i64*
  %164 = bitcast i8* %135 to %"class.WTF::StringImpl"**
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  store i64 %162, i64* %163, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #17
  br label %180

180:                                              ; preds = %161, %176, %179
  %181 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %132, i64 0, i32 1
  %182 = load i8, i8* %181, align 8
  %183 = add i8 %182, -1
  %184 = icmp ult i8 %183, 12
  br i1 %184, label %185, label %189

185:                                              ; preds = %180
  %186 = sext i8 %183 to i64
  %187 = getelementptr inbounds [12 x i32], [12 x i32]* @switch.table._ZN5blink18InspectorPageAgent26BuildObjectForResourceTreeEPNS_10LocalFrameE, i64 0, i64 %186
  %188 = load i32, i32* %187, align 4
  br label %189

189:                                              ; preds = %180, %185
  %190 = phi i32 [ %188, %185 ], [ 14, %180 ]
  %191 = call %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent16ResourceTypeJsonENS0_12ResourceTypeE(i32 %190) #17
  %192 = getelementptr inbounds i8, i8* %133, i64 16
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #17
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !3

208:                                              ; preds = %199
  call void @llvm.trap() #17
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %189
  %212 = ptrtoint %"class.WTF::StringImpl"* %191 to i64
  %213 = bitcast i8* %192 to i64*
  %214 = bitcast i8* %192 to %"class.WTF::StringImpl"**
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  store i64 %212, i64* %213, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #17
  br label %230

230:                                              ; preds = %211, %226, %229
  %231 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %132, i64 0, i32 29
  %232 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"* %231) #17
  %233 = getelementptr inbounds i8, i8* %133, i64 24
  %234 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %232, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %254, label %237

237:                                              ; preds = %230
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %254

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = zext i32 %244 to i33
  %246 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %245, i33 1) #17
  %247 = extractvalue { i33, i1 } %246, 1
  %248 = extractvalue { i33, i1 } %246, 0
  %249 = icmp slt i33 %248, 0
  %250 = or i1 %247, %249
  br i1 %250, label %251, label %252, !prof !3

251:                                              ; preds = %242
  call void @llvm.trap() #17
  unreachable

252:                                              ; preds = %242
  %253 = trunc i33 %248 to i32
  store i32 %253, i32* %243, align 4
  br label %254

254:                                              ; preds = %252, %237, %230
  %255 = ptrtoint %"class.WTF::StringImpl"* %235 to i64
  %256 = bitcast i8* %233 to i64*
  %257 = bitcast i8* %233 to %"class.WTF::StringImpl"**
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  store i64 %255, i64* %256, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #17
  br label %273

273:                                              ; preds = %254, %269, %272
  %274 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %132, i64 0, i32 29, i32 60
  %275 = load i64, i64* %274, align 8
  %276 = sitofp i64 %275 to double
  %277 = bitcast i8* %139 to double*
  store double %276, double* %277, align 8
  store i8 1, i8* %138, align 8
  store i8* %133, i8** %100, align 8
  br i1 %193, label %291, label %278

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #17
  br label %291

291:                                              ; preds = %290, %287, %273
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %98) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false)
  %292 = call { i8, i64 } @_ZNK5blink16ResourceResponse12LastModifiedEv(%"class.blink::ResourceResponse"* %231) #17
  %293 = extractvalue { i8, i64 } %292, 0
  store i8 %293, i8* %101, align 8
  %294 = extractvalue { i8, i64 } %292, 1
  store i64 %294, i64* %102, align 8
  %295 = icmp eq i8 %293, 0
  br i1 %295, label %301, label %296

296:                                              ; preds = %291
  %297 = load %"class.blink::protocol::Page::FrameResource"*, %"class.blink::protocol::Page::FrameResource"** %97, align 8
  %298 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* %103) #17
  %299 = getelementptr inbounds %"class.blink::protocol::Page::FrameResource", %"class.blink::protocol::Page::FrameResource"* %297, i64 0, i32 4, i32 1
  store double %298, double* %299, align 8
  %300 = getelementptr inbounds %"class.blink::protocol::Page::FrameResource", %"class.blink::protocol::Page::FrameResource"* %297, i64 0, i32 4, i32 0
  store i8 1, i8* %300, align 8
  br label %301

301:                                              ; preds = %291, %296
  %302 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %132, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %303 = load i8, i8* %302, align 8, !range !4
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %312, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %132, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %307 = call zeroext i1 @_ZNK5blink13ResourceError14IsCancellationEv(%"class.blink::ResourceError"* %306) #17
  br i1 %307, label %308, label %312

308:                                              ; preds = %305
  %309 = load %"class.blink::protocol::Page::FrameResource"*, %"class.blink::protocol::Page::FrameResource"** %97, align 8
  %310 = getelementptr inbounds %"class.blink::protocol::Page::FrameResource", %"class.blink::protocol::Page::FrameResource"* %309, i64 0, i32 7, i32 1
  store i8 1, i8* %310, align 1
  %311 = getelementptr inbounds %"class.blink::protocol::Page::FrameResource", %"class.blink::protocol::Page::FrameResource"* %309, i64 0, i32 7, i32 0
  br label %320

312:                                              ; preds = %301, %305
  %313 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %132, i64 0, i32 2
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i8 %314, 3
  br i1 %315, label %316, label %322

316:                                              ; preds = %312
  %317 = load %"class.blink::protocol::Page::FrameResource"*, %"class.blink::protocol::Page::FrameResource"** %97, align 8
  %318 = getelementptr inbounds %"class.blink::protocol::Page::FrameResource", %"class.blink::protocol::Page::FrameResource"* %317, i64 0, i32 6, i32 1
  store i8 1, i8* %318, align 1
  %319 = getelementptr inbounds %"class.blink::protocol::Page::FrameResource", %"class.blink::protocol::Page::FrameResource"* %317, i64 0, i32 6, i32 0
  br label %320

320:                                              ; preds = %308, %316
  %321 = phi i8* [ %319, %316 ], [ %311, %308 ]
  store i8 1, i8* %321, align 1
  br label %322

322:                                              ; preds = %320, %312
  %323 = load %"class.std::__1::unique_ptr.3552"*, %"class.std::__1::unique_ptr.3552"** %105, align 8
  %324 = load %"class.std::__1::unique_ptr.3552"*, %"class.std::__1::unique_ptr.3552"** %107, align 8
  %325 = icmp ult %"class.std::__1::unique_ptr.3552"* %323, %324
  br i1 %325, label %326, label %331

326:                                              ; preds = %322
  %327 = load i64, i64* %108, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %97, align 8
  %328 = bitcast %"class.std::__1::unique_ptr.3552"* %323 to i64*
  store i64 %327, i64* %328, align 8
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %323, i64 1
  %330 = ptrtoint %"class.std::__1::unique_ptr.3552"* %329 to i64
  store i64 %330, i64* %109, align 8
  br label %332

331:                                              ; preds = %322
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page13FrameResourceENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3550"* nonnull %12, %"class.std::__1::unique_ptr.3552"* nonnull dereferenceable(8) %5) #17
  br label %332

332:                                              ; preds = %326, %331
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #17
  %333 = load %"class.blink::protocol::Page::FrameResource"*, %"class.blink::protocol::Page::FrameResource"** %97, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %97, align 8
  %334 = icmp eq %"class.blink::protocol::Page::FrameResource"* %333, null
  br i1 %334, label %340, label %335

335:                                              ; preds = %332
  %336 = bitcast %"class.blink::protocol::Page::FrameResource"* %333 to void (%"class.blink::protocol::Page::FrameResource"*)***
  %337 = load void (%"class.blink::protocol::Page::FrameResource"*)**, void (%"class.blink::protocol::Page::FrameResource"*)*** %336, align 8
  %338 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameResource"*)*, void (%"class.blink::protocol::Page::FrameResource"*)** %337, i64 2
  %339 = load void (%"class.blink::protocol::Page::FrameResource"*)*, void (%"class.blink::protocol::Page::FrameResource"*)** %338, align 8
  call void %339(%"class.blink::protocol::Page::FrameResource"* nonnull %333) #17
  br label %340

340:                                              ; preds = %332, %335
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #17
  %341 = getelementptr inbounds %"class.blink::Member.762", %"class.blink::Member.762"* %130, i64 1
  %342 = icmp eq %"class.blink::Member.762"* %341, %93
  br i1 %342, label %110, label %129

343:                                              ; preds = %419
  %344 = getelementptr inbounds i8, i8* %111, i64 16
  %345 = bitcast i8* %344 to %"class.std::__1::vector.3537"**
  %346 = load %"class.std::__1::vector.3537"*, %"class.std::__1::vector.3537"** %345, align 8
  %347 = bitcast %"class.std::__1::vector.3537"* %346 to i8**
  %348 = getelementptr inbounds i8, i8* %111, i64 16
  %349 = bitcast i8* %348 to i64*
  store i64 %420, i64* %349, align 8
  %350 = icmp eq %"class.std::__1::vector.3537"* %346, null
  br i1 %350, label %379, label %351

351:                                              ; preds = %343
  %352 = getelementptr inbounds %"class.std::__1::vector.3537", %"class.std::__1::vector.3537"* %346, i64 0, i32 0, i32 0
  %353 = load %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::unique_ptr.3454"** %352, align 8
  %354 = icmp eq %"class.std::__1::unique_ptr.3454"* %353, null
  br i1 %354, label %377, label %355

355:                                              ; preds = %351
  %356 = bitcast %"class.std::__1::unique_ptr.3454"* %353 to i8*
  %357 = getelementptr inbounds %"class.std::__1::vector.3537", %"class.std::__1::vector.3537"* %346, i64 0, i32 0, i32 1
  %358 = load %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::unique_ptr.3454"** %357, align 8
  %359 = icmp eq %"class.std::__1::unique_ptr.3454"* %358, %353
  br i1 %359, label %375, label %360

360:                                              ; preds = %355, %371
  %361 = phi %"class.std::__1::unique_ptr.3454"* [ %362, %371 ], [ %358, %355 ]
  %362 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %361, i64 -1
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %362, i64 0, i32 0, i32 0, i32 0
  %364 = load %"class.blink::protocol::Page::FrameResourceTree"*, %"class.blink::protocol::Page::FrameResourceTree"** %363, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %363, align 8
  %365 = icmp eq %"class.blink::protocol::Page::FrameResourceTree"* %364, null
  br i1 %365, label %371, label %366

366:                                              ; preds = %360
  %367 = bitcast %"class.blink::protocol::Page::FrameResourceTree"* %364 to void (%"class.blink::protocol::Page::FrameResourceTree"*)***
  %368 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)**, void (%"class.blink::protocol::Page::FrameResourceTree"*)*** %367, align 8
  %369 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %368, i64 2
  %370 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %369, align 8
  call void %370(%"class.blink::protocol::Page::FrameResourceTree"* nonnull %364) #17
  br label %371

371:                                              ; preds = %366, %360
  %372 = icmp eq %"class.std::__1::unique_ptr.3454"* %362, %353
  br i1 %372, label %373, label %360

373:                                              ; preds = %371
  %374 = load i8*, i8** %347, align 8
  br label %375

375:                                              ; preds = %373, %355
  %376 = phi i8* [ %374, %373 ], [ %356, %355 ]
  store %"class.std::__1::unique_ptr.3454"* %353, %"class.std::__1::unique_ptr.3454"** %357, align 8
  call void @_ZdlPv(i8* %376) #19
  br label %377

377:                                              ; preds = %375, %351
  %378 = bitcast %"class.std::__1::vector.3537"* %346 to i8*
  call void @_ZdlPv(i8* %378) #19
  br label %379

379:                                              ; preds = %123, %377, %343
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #17
  ret %"class.blink::protocol::Page::FrameResourceTree"* %116

380:                                              ; preds = %126, %419
  %381 = phi %"class.blink::Frame"* [ %121, %126 ], [ %422, %419 ]
  %382 = phi i64 [ 0, %126 ], [ %420, %419 ]
  %383 = bitcast %"class.blink::Frame"* %381 to i1 (%"class.blink::Frame"*)***
  %384 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %383, align 8
  %385 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %384, i64 3
  %386 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %385, align 8
  %387 = call zeroext i1 %386(%"class.blink::Frame"* nonnull %381) #17
  %388 = bitcast %"class.blink::Frame"* %381 to %"class.blink::LocalFrame"*
  br i1 %387, label %389, label %419

389:                                              ; preds = %380
  %390 = icmp eq i64 %382, 0
  br i1 %390, label %391, label %394

391:                                              ; preds = %389
  %392 = call i8* @_Znwm(i64 24) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %392, i8 0, i64 24, i1 false) #17
  %393 = ptrtoint i8* %392 to i64
  br label %394

394:                                              ; preds = %389, %391
  %395 = phi i64 [ %382, %389 ], [ %393, %391 ]
  %396 = inttoptr i64 %395 to %"class.std::__1::vector.3537"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #17
  %397 = call %"class.blink::protocol::Page::FrameResourceTree"* @_ZN5blink18InspectorPageAgent26BuildObjectForResourceTreeEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* %0, %"class.blink::LocalFrame"* nonnull %388)
  store %"class.blink::protocol::Page::FrameResourceTree"* %397, %"class.blink::protocol::Page::FrameResourceTree"** %128, align 8
  %398 = getelementptr inbounds %"class.std::__1::vector.3537", %"class.std::__1::vector.3537"* %396, i64 0, i32 0, i32 1
  %399 = load %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::unique_ptr.3454"** %398, align 8
  %400 = getelementptr inbounds %"class.std::__1::vector.3537", %"class.std::__1::vector.3537"* %396, i64 0, i32 0, i32 2, i32 0, i32 0
  %401 = load %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::unique_ptr.3454"** %400, align 8
  %402 = icmp ult %"class.std::__1::unique_ptr.3454"* %399, %401
  br i1 %402, label %403, label %409

403:                                              ; preds = %394
  %404 = ptrtoint %"class.blink::protocol::Page::FrameResourceTree"* %397 to i64
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %128, align 8
  %405 = bitcast %"class.std::__1::unique_ptr.3454"* %399 to i64*
  store i64 %404, i64* %405, align 8
  %406 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %399, i64 1
  %407 = ptrtoint %"class.std::__1::unique_ptr.3454"* %406 to i64
  %408 = bitcast %"class.std::__1::unique_ptr.3454"** %398 to i64*
  store i64 %407, i64* %408, align 8
  br label %410

409:                                              ; preds = %394
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page17FrameResourceTreeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3537"* %396, %"class.std::__1::unique_ptr.3454"* nonnull dereferenceable(8) %8) #17
  br label %410

410:                                              ; preds = %403, %409
  %411 = load %"class.blink::protocol::Page::FrameResourceTree"*, %"class.blink::protocol::Page::FrameResourceTree"** %128, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %128, align 8
  %412 = icmp eq %"class.blink::protocol::Page::FrameResourceTree"* %411, null
  br i1 %412, label %418, label %413

413:                                              ; preds = %410
  %414 = bitcast %"class.blink::protocol::Page::FrameResourceTree"* %411 to void (%"class.blink::protocol::Page::FrameResourceTree"*)***
  %415 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)**, void (%"class.blink::protocol::Page::FrameResourceTree"*)*** %414, align 8
  %416 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %415, i64 2
  %417 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %416, align 8
  call void %417(%"class.blink::protocol::Page::FrameResourceTree"* nonnull %411) #17
  br label %418

418:                                              ; preds = %410, %413
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #17
  br label %419

419:                                              ; preds = %380, %418
  %420 = phi i64 [ %382, %380 ], [ %395, %418 ]
  %421 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %381, i64 0, i32 1
  %422 = call %"class.blink::Frame"* @_ZNK5blink9FrameTree11NextSiblingEv(%"class.blink::FrameTree"* %421) #17
  %423 = icmp eq %"class.blink::Frame"* %422, null
  br i1 %423, label %343, label %380
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent15getResourceTreeEPNSt3__110unique_ptrINS_8protocol4Page17FrameResourceTreeENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture, %"class.std::__1::unique_ptr.3454"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  %6 = getelementptr inbounds i8, i8* %4, i64 56
  %7 = bitcast i8* %6 to %"class.blink::InspectedFrames"**
  %8 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %7, align 8, !noalias !17
  %9 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %9, align 8, !noalias !17
  %11 = tail call %"class.blink::protocol::Page::FrameResourceTree"* @_ZN5blink18InspectorPageAgent26BuildObjectForResourceTreeEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* %5, %"class.blink::LocalFrame"* %10) #17, !noalias !17
  %12 = ptrtoint %"class.blink::protocol::Page::FrameResourceTree"* %11 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::protocol::Page::FrameResourceTree"*, %"class.blink::protocol::Page::FrameResourceTree"** %13, align 8, !noalias !17
  %15 = bitcast %"class.std::__1::unique_ptr.3454"* %2 to i64*
  store i64 %12, i64* %15, align 8, !noalias !17
  %16 = icmp eq %"class.blink::protocol::Page::FrameResourceTree"* %14, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.blink::protocol::Page::FrameResourceTree"* %14 to void (%"class.blink::protocol::Page::FrameResourceTree"*)***
  %19 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)**, void (%"class.blink::protocol::Page::FrameResourceTree"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %19, i64 2
  %21 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Page::FrameResourceTree"* nonnull %14) #17
  br label %22

22:                                               ; preds = %3, %17
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent12getFrameTreeEPNSt3__110unique_ptrINS_8protocol4Page9FrameTreeENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture, %"class.std::__1::unique_ptr.3573"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %6, align 8
  %8 = tail call %"class.blink::protocol::Page::FrameTree"* @_ZN5blink18InspectorPageAgent23BuildObjectForFrameTreeEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* %1, %"class.blink::LocalFrame"* %7)
  %9 = ptrtoint %"class.blink::protocol::Page::FrameTree"* %8 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::protocol::Page::FrameTree"*, %"class.blink::protocol::Page::FrameTree"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.3573"* %2 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq %"class.blink::protocol::Page::FrameTree"* %11, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::protocol::Page::FrameTree"* %11 to void (%"class.blink::protocol::Page::FrameTree"*)***
  %16 = load void (%"class.blink::protocol::Page::FrameTree"*)**, void (%"class.blink::protocol::Page::FrameTree"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %16, i64 2
  %18 = load void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %17, align 8
  tail call void %18(%"class.blink::protocol::Page::FrameTree"* nonnull %11) #17
  br label %19

19:                                               ; preds = %14, %3
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::Page::FrameTree"* @_ZN5blink18InspectorPageAgent23BuildObjectForFrameTreeEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.3573", align 8
  %4 = tail call i8* @_Znwm(i64 24) #19
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page9FrameTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = getelementptr inbounds i8, i8* %4, i64 16
  %8 = bitcast i8* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = bitcast i8* %4 to %"class.blink::protocol::Page::FrameTree"*
  %10 = tail call %"class.blink::protocol::Page::Frame"* @_ZN5blink18InspectorPageAgent19BuildObjectForFrameEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* undef, %"class.blink::LocalFrame"* %1)
  %11 = ptrtoint %"class.blink::protocol::Page::Frame"* %10 to i64
  %12 = bitcast i8* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0, i32 1
  %14 = tail call %"class.blink::Frame"* @_ZNK5blink9FrameTree10FirstChildEv(%"class.blink::FrameTree"* %13) #17
  %15 = icmp eq %"class.blink::Frame"* %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %4, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  br label %58

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::unique_ptr.3573"* %3 to i8*
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %3, i64 0, i32 0, i32 0, i32 0
  br label %59

22:                                               ; preds = %98
  %23 = getelementptr inbounds i8, i8* %4, i64 16
  %24 = bitcast i8* %23 to %"class.std::__1::vector.3583"**
  %25 = load %"class.std::__1::vector.3583"*, %"class.std::__1::vector.3583"** %24, align 8
  %26 = bitcast %"class.std::__1::vector.3583"* %25 to i8**
  %27 = getelementptr inbounds i8, i8* %4, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 %99, i64* %28, align 8
  %29 = icmp eq %"class.std::__1::vector.3583"* %25, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::vector.3583", %"class.std::__1::vector.3583"* %25, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::unique_ptr.3573"** %31, align 8
  %33 = icmp eq %"class.std::__1::unique_ptr.3573"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::unique_ptr.3573"* %32 to i8*
  %36 = getelementptr inbounds %"class.std::__1::vector.3583", %"class.std::__1::vector.3583"* %25, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::unique_ptr.3573"** %36, align 8
  %38 = icmp eq %"class.std::__1::unique_ptr.3573"* %37, %32
  br i1 %38, label %54, label %39

39:                                               ; preds = %34, %50
  %40 = phi %"class.std::__1::unique_ptr.3573"* [ %41, %50 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::protocol::Page::FrameTree"*, %"class.blink::protocol::Page::FrameTree"** %42, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %42, align 8
  %44 = icmp eq %"class.blink::protocol::Page::FrameTree"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::protocol::Page::FrameTree"* %43 to void (%"class.blink::protocol::Page::FrameTree"*)***
  %47 = load void (%"class.blink::protocol::Page::FrameTree"*)**, void (%"class.blink::protocol::Page::FrameTree"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %47, i64 2
  %49 = load void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %48, align 8
  call void %49(%"class.blink::protocol::Page::FrameTree"* nonnull %43) #17
  br label %50

50:                                               ; preds = %45, %39
  %51 = icmp eq %"class.std::__1::unique_ptr.3573"* %41, %32
  br i1 %51, label %52, label %39

52:                                               ; preds = %50
  %53 = load i8*, i8** %26, align 8
  br label %54

54:                                               ; preds = %52, %34
  %55 = phi i8* [ %53, %52 ], [ %35, %34 ]
  store %"class.std::__1::unique_ptr.3573"* %32, %"class.std::__1::unique_ptr.3573"** %36, align 8
  call void @_ZdlPv(i8* %55) #19
  br label %56

56:                                               ; preds = %54, %30
  %57 = bitcast %"class.std::__1::vector.3583"* %25 to i8*
  call void @_ZdlPv(i8* %57) #19
  br label %58

58:                                               ; preds = %16, %56, %22
  ret %"class.blink::protocol::Page::FrameTree"* %9

59:                                               ; preds = %19, %98
  %60 = phi %"class.blink::Frame"* [ %14, %19 ], [ %101, %98 ]
  %61 = phi i64 [ 0, %19 ], [ %99, %98 ]
  %62 = bitcast %"class.blink::Frame"* %60 to i1 (%"class.blink::Frame"*)***
  %63 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %63, i64 3
  %65 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %64, align 8
  %66 = call zeroext i1 %65(%"class.blink::Frame"* nonnull %60) #17
  %67 = bitcast %"class.blink::Frame"* %60 to %"class.blink::LocalFrame"*
  br i1 %66, label %68, label %98

68:                                               ; preds = %59
  %69 = icmp eq i64 %61, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %68
  %71 = call i8* @_Znwm(i64 24) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #17
  %72 = ptrtoint i8* %71 to i64
  br label %73

73:                                               ; preds = %68, %70
  %74 = phi i64 [ %61, %68 ], [ %72, %70 ]
  %75 = inttoptr i64 %74 to %"class.std::__1::vector.3583"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %76 = call %"class.blink::protocol::Page::FrameTree"* @_ZN5blink18InspectorPageAgent23BuildObjectForFrameTreeEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* %0, %"class.blink::LocalFrame"* nonnull %67)
  store %"class.blink::protocol::Page::FrameTree"* %76, %"class.blink::protocol::Page::FrameTree"** %21, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.3583", %"class.std::__1::vector.3583"* %75, i64 0, i32 0, i32 1
  %78 = load %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::unique_ptr.3573"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::vector.3583", %"class.std::__1::vector.3583"* %75, i64 0, i32 0, i32 2, i32 0, i32 0
  %80 = load %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::unique_ptr.3573"** %79, align 8
  %81 = icmp ult %"class.std::__1::unique_ptr.3573"* %78, %80
  br i1 %81, label %82, label %88

82:                                               ; preds = %73
  %83 = ptrtoint %"class.blink::protocol::Page::FrameTree"* %76 to i64
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %21, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3573"* %78 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 1
  %86 = ptrtoint %"class.std::__1::unique_ptr.3573"* %85 to i64
  %87 = bitcast %"class.std::__1::unique_ptr.3573"** %77 to i64*
  store i64 %86, i64* %87, align 8
  br label %89

88:                                               ; preds = %73
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page9FrameTreeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3583"* %75, %"class.std::__1::unique_ptr.3573"* nonnull dereferenceable(8) %3) #17
  br label %89

89:                                               ; preds = %82, %88
  %90 = load %"class.blink::protocol::Page::FrameTree"*, %"class.blink::protocol::Page::FrameTree"** %21, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %21, align 8
  %91 = icmp eq %"class.blink::protocol::Page::FrameTree"* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %89
  %93 = bitcast %"class.blink::protocol::Page::FrameTree"* %90 to void (%"class.blink::protocol::Page::FrameTree"*)***
  %94 = load void (%"class.blink::protocol::Page::FrameTree"*)**, void (%"class.blink::protocol::Page::FrameTree"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %94, i64 2
  %96 = load void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %95, align 8
  call void %96(%"class.blink::protocol::Page::FrameTree"* nonnull %90) #17
  br label %97

97:                                               ; preds = %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %98

98:                                               ; preds = %59, %97
  %99 = phi i64 [ %61, %59 ], [ %74, %97 ]
  %100 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %60, i64 0, i32 1
  %101 = call %"class.blink::Frame"* @_ZNK5blink9FrameTree11NextSiblingEv(%"class.blink::FrameTree"* %100) #17
  %102 = icmp eq %"class.blink::Frame"* %101, null
  br i1 %102, label %22, label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent12getFrameTreeEPNSt3__110unique_ptrINS_8protocol4Page9FrameTreeENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture, %"class.std::__1::unique_ptr.3573"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  %6 = getelementptr inbounds i8, i8* %4, i64 56
  %7 = bitcast i8* %6 to %"class.blink::InspectedFrames"**
  %8 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %7, align 8, !noalias !20
  %9 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %9, align 8, !noalias !20
  %11 = tail call %"class.blink::protocol::Page::FrameTree"* @_ZN5blink18InspectorPageAgent23BuildObjectForFrameTreeEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* %5, %"class.blink::LocalFrame"* %10) #17, !noalias !20
  %12 = ptrtoint %"class.blink::protocol::Page::FrameTree"* %11 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::protocol::Page::FrameTree"*, %"class.blink::protocol::Page::FrameTree"** %13, align 8, !noalias !20
  %15 = bitcast %"class.std::__1::unique_ptr.3573"* %2 to i64*
  store i64 %12, i64* %15, align 8, !noalias !20
  %16 = icmp eq %"class.blink::protocol::Page::FrameTree"* %14, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.blink::protocol::Page::FrameTree"* %14 to void (%"class.blink::protocol::Page::FrameTree"*)***
  %19 = load void (%"class.blink::protocol::Page::FrameTree"*)**, void (%"class.blink::protocol::Page::FrameTree"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %19, i64 2
  %21 = load void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %20, align 8
  tail call void %21(%"class.blink::protocol::Page::FrameTree"* nonnull %14) #17
  br label %22

22:                                               ; preds = %3, %17
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent45GetResourceContentAfterResourcesContentLoadedERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol4Page7Backend26GetResourceContentCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*) #0 align 2 {
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %12, align 8
  %14 = tail call %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"* %13, %"class.WTF::String"* dereferenceable(8) %1) #17
  %15 = icmp eq %"class.blink::LocalFrame"* %14, null
  br i1 %15, label %16, label %43

16:                                               ; preds = %4
  %17 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #17
  %18 = tail call i8* @_Znwm(i64 32) #19
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast i64* %20 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 27, i1 false) #17
  %22 = getelementptr inbounds i8, i8* %18, i64 27
  store i8 0, i8* %22, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull %6) #17
  %23 = bitcast %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3 to void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)***
  %24 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)** %24, i64 1
  %26 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)** %25, align 8
  call void %26(%"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %5) #17
  %27 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #19
  br label %35

35:                                               ; preds = %16, %32
  %36 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %41) #19
  br label %42

42:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #17
  br label %101

43:                                               ; preds = %4
  %44 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #17
  store i8 -86, i8* %8, align 1
  %46 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %46) #17
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %2) #17
  %47 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 9, i32 0, i32 0
  %48 = load %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader"** %47, align 8
  %49 = call fastcc %"class.blink::Resource"* @_ZN5blink12_GLOBAL__N_114CachedResourceEPNS_10LocalFrameERKNS_4KURLEPNS_30InspectorResourceContentLoaderE(%"class.blink::LocalFrame"* nonnull %14, %"class.blink::KURL"* nonnull dereferenceable(112) %9, %"class.blink::InspectorResourceContentLoader"* %48)
  %50 = call zeroext i1 @_ZN5blink18InspectorPageAgent21CachedResourceContentEPKNS_8ResourceEPN3WTF6StringEPb(%"class.blink::Resource"* %49, %"class.WTF::String"* nonnull %7, i8* nonnull %8)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %46) #17
  br i1 %50, label %51, label %57

51:                                               ; preds = %43
  %52 = load i8, i8* %8, align 1, !range !4
  %53 = icmp ne i8 %52, 0
  %54 = bitcast %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3 to void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.WTF::String"*, i1)***
  %55 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.WTF::String"*, i1)**, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.WTF::String"*, i1)*** %54, align 8
  %56 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.WTF::String"*, i1)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.WTF::String"*, i1)** %55, align 8
  call void %56(%"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext %53) #17
  br label %84

57:                                               ; preds = %43
  %58 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #17
  %59 = call i8* @_Znwm(i64 48) #19
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast i64* %61 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %62, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i64 32, i1 false) #17
  %63 = getelementptr inbounds i8, i8* %59, i64 32
  store i8 0, i8* %63, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.std::__1::basic_string"* nonnull %11) #17
  %64 = bitcast %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3 to void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)***
  %65 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)** %65, i64 1
  %67 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)** %66, align 8
  call void %67(%"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %10) #17
  %68 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %57
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #19
  br label %76

76:                                               ; preds = %57, %73
  %77 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %82) #19
  br label %83

83:                                               ; preds = %76, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #17
  br label %84

84:                                               ; preds = %83, %51
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #17
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #17
  br label %100

100:                                              ; preds = %84, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17
  br label %101

101:                                              ; preds = %100, %42
  %102 = icmp eq %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = bitcast %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3 to void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)***
  %105 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)**, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)** %105, i64 4
  %107 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)** %106, align 8
  call void %107(%"class.blink::protocol::Page::Backend::GetResourceContentCallback"* nonnull %3) #17
  br label %108

108:                                              ; preds = %101, %103
  ret void
}

declare %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::Resource"* @_ZN5blink12_GLOBAL__N_114CachedResourceEPNS_10LocalFrameERKNS_4KURLEPNS_30InspectorResourceContentLoaderE(%"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::InspectorResourceContentLoader"*) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %0) #17
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %38, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 14, i32 0, i32 0
  %9 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %8, align 8
  %10 = tail call %"class.blink::Resource"* @_ZNK5blink15ResourceFetcher14CachedResourceERKNS_4KURLE(%"class.blink::ResourceFetcher"* %9, %"class.blink::KURL"* dereferenceable(112) %1) #17
  %11 = icmp eq %"class.blink::Resource"* %10, null
  br i1 %11, label %12, label %38

12:                                               ; preds = %7
  %13 = tail call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() #17
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %8, align 8
  %16 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15ResourceFetcher18GetCacheIdentifierERKNS_4KURLE(%"class.blink::ResourceFetcher"* %15, %"class.blink::KURL"* dereferenceable(112) %1) #17
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = call %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLERKN3WTF6StringE(%"class.blink::MemoryCache"* %13, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #17
  br label %34

34:                                               ; preds = %33, %30, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %35 = icmp eq %"class.blink::Resource"* %18, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = call %"class.blink::Resource"* @_ZN5blink30InspectorResourceContentLoader14ResourceForURLERKNS_4KURLE(%"class.blink::InspectorResourceContentLoader"* %2, %"class.blink::KURL"* dereferenceable(112) %1) #17
  br label %38

38:                                               ; preds = %7, %36, %34, %3
  %39 = phi %"class.blink::Resource"* [ null, %3 ], [ %18, %34 ], [ %37, %36 ], [ %10, %7 ]
  ret %"class.blink::Resource"* %39
}

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent18getResourceContentERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol4Page7Backend26GetResourceContentCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.3596", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.blink::Persistent.3602", align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.3596", %"class.std::__1::unique_ptr.3596"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %39

14:                                               ; preds = %4
  %15 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #17
  %16 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 21, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i64 21, i1 false) #17
  %19 = getelementptr inbounds i8, i8* %18, i64 21
  store i8 0, i8* %19, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %7) #17
  %20 = bitcast %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3 to void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)***
  %21 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)** %21, i64 1
  %23 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.crdtp::DispatchResponse"*)** %22, align 8
  call void %23(%"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %6) #17
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #19
  br label %32

32:                                               ; preds = %14, %29
  %33 = load i8, i8* %17, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #19
  br label %38

38:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #17
  br label %106

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 9, i32 0, i32 0
  %41 = load %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 11
  %43 = load i32, i32* %42, align 4
  %44 = bitcast %"class.blink::Persistent.3602"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.blink::Persistent.3602", %"class.blink::Persistent.3602"* %9, i64 0, i32 0
  %46 = getelementptr inbounds %"class.blink::Persistent.3602", %"class.blink::Persistent.3602"* %9, i64 0, i32 0, i32 0
  store %"class.blink::InspectorPageAgent"* %0, %"class.blink::InspectorPageAgent"** %46, align 8, !alias.scope !23
  %47 = getelementptr inbounds %"class.blink::Persistent.3602", %"class.blink::Persistent.3602"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %47, align 8, !alias.scope !23
  %48 = ptrtoint %"class.blink::InspectorPageAgent"* %0 to i64
  switch i64 %48, label %49 [
    i64 0, label %75
    i64 -1, label %75
  ]

49:                                               ; preds = %39
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !23
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #17, !noalias !23
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #17
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8, !noalias !23
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %60, align 8, !noalias !23
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8, !noalias !23
  %64 = icmp eq %"class.blink::PersistentNode"* %63, null
  br i1 %64, label %65, label %68, !prof !3

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %66) #17
  %67 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8
  br label %68

68:                                               ; preds = %65, %56
  %69 = phi %"class.blink::PersistentNode"* [ %67, %65 ], [ %63, %56 ]
  %70 = bitcast %"class.blink::PersistentNode"* %69 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !23
  %72 = bitcast %"class.blink::PersistentRegion"* %61 to i64*
  store i64 %71, i64* %72, align 8, !noalias !23
  %73 = bitcast %"class.blink::PersistentNode"* %69 to %"class.blink::PersistentBase.3603"**
  store %"class.blink::PersistentBase.3603"* %45, %"class.blink::PersistentBase.3603"** %73, align 8, !noalias !23
  %74 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %69, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18InspectorPageAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %74, align 8
  store %"class.blink::PersistentNode"* %69, %"class.blink::PersistentNode"** %47, align 8, !alias.scope !23
  br label %75

75:                                               ; preds = %39, %39, %68
  %76 = call i8* @_Znwm(i64 88) #19, !noalias !26
  %77 = bitcast i8* %76 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %77, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol4Page7Backend26GetResourceContentCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES6_S6_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES7_NSt3__110unique_ptrINS2_8protocol4Page7Backend26GetResourceContentCallbackENS8_14default_deleteISD_EEEEEJNS2_10PersistentIS3_EES5_S5_SG_EE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !26
  %78 = getelementptr inbounds i8, i8* %76, i64 32
  %79 = bitcast i8* %78 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)* @_ZN5blink18InspectorPageAgent45GetResourceContentAfterResourcesContentLoadedERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol4Page7Backend26GetResourceContentCallbackENS5_14default_deleteISA_EEEE to i64), i64 0>, <2 x i64>* %79, align 8, !noalias !26
  %80 = getelementptr inbounds i8, i8* %76, i64 48
  %81 = bitcast i8* %80 to %"class.std::__1::tuple"*
  call void @_ZNSt3__15tupleIJN5blink10PersistentINS1_18InspectorPageAgentEEEN3WTF6StringES6_NS_10unique_ptrINS1_8protocol4Page7Backend26GetResourceContentCallbackENS_14default_deleteISB_EEEEEEC2IJS4_RKS6_SI_SE_ELb0ELb0EEEDpOT_(%"class.std::__1::tuple"* %81, %"class.blink::Persistent.3602"* nonnull dereferenceable(16) %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.std::__1::unique_ptr.3596"* nonnull dereferenceable(8) %5) #17, !noalias !26
  %82 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %76, i8** %82, align 8, !alias.scope !26
  call void @_ZN5blink30InspectorResourceContentLoader28EnsureResourcesContentLoadedEiN4base12OnceCallbackIFvvEEE(%"class.blink::InspectorResourceContentLoader"* %41, i32 %43, %"class.base::OnceCallback"* nonnull %8) #17
  %83 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %83) #17
  %84 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  %85 = icmp eq %"class.blink::PersistentNode"* %84, null
  br i1 %85, label %105, label %86

86:                                               ; preds = %75
  %87 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %88 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %87, i64 0, i32 1
  %89 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %88) #17
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %93, !prof !3

91:                                               ; preds = %86
  %92 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %88, i8* %92) #17
  br label %93

93:                                               ; preds = %91, %86
  %94 = phi i8* [ %92, %91 ], [ %89, %86 ]
  %95 = bitcast i8* %94 to %"class.blink::ThreadState"**
  %96 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %96, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %97, align 8
  %99 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  %100 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %98, i64 0, i32 0, i32 0
  %101 = bitcast %"class.blink::PersistentRegion"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.blink::PersistentNode"* %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %99, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %104, align 8
  store %"class.blink::PersistentNode"* %99, %"class.blink::PersistentNode"** %100, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %47, align 8
  br label %105

105:                                              ; preds = %75, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #17
  br label %106

106:                                              ; preds = %105, %38
  %107 = load %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"** %10, align 8
  store %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* null, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"** %10, align 8
  %108 = icmp eq %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %106
  %110 = bitcast %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %107 to void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)***
  %111 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)**, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)** %111, i64 4
  %113 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)** %112, align 8
  call void %113(%"class.blink::protocol::Page::Backend::GetResourceContentCallback"* nonnull %107) #17
  br label %114

114:                                              ; preds = %106, %109
  ret void
}

declare void @_ZN5blink30InspectorResourceContentLoader28EnsureResourcesContentLoadedEiN4base12OnceCallbackIFvvEEE(%"class.blink::InspectorResourceContentLoader"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent18getResourceContentERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol4Page7Backend26GetResourceContentCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 -1, i32 28, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent18getResourceContentERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol4Page7Backend26GetResourceContentCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorPageAgent"* %6, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent40SearchContentAfterResourcesContentLoadedERKN3WTF6StringES4_S4_bbNSt3__110unique_ptrINS_8protocol4Page7Backend24SearchInResourceCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext, i64) #0 align 2 {
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.crdtp::DispatchResponse", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::vector.3610", align 16
  %16 = alloca %"class.v8_inspector::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.v8_inspector::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = inttoptr i64 %6 to %"class.blink::protocol::Page::Backend::SearchInResourceCallback"*
  %21 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %21, align 8
  %23 = tail call %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"* %22, %"class.WTF::String"* dereferenceable(8) %1) #17
  %24 = icmp eq %"class.blink::LocalFrame"* %23, null
  br i1 %24, label %25, label %52

25:                                               ; preds = %7
  %26 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #17
  %27 = tail call i8* @_Znwm(i64 32) #19
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast i64* %29 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %30, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 27, i1 false) #17
  %31 = getelementptr inbounds i8, i8* %27, i64 27
  store i8 0, i8* %31, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull %9) #17
  %32 = inttoptr i64 %6 to void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)***
  %33 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)** %33, i64 1
  %35 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)** %34, align 8
  call void %35(%"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %20, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %8) #17
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %25
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #19
  br label %44

44:                                               ; preds = %25, %41
  %45 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %50) #19
  br label %51

51:                                               ; preds = %44, %49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #17
  br label %188

52:                                               ; preds = %7
  %53 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #17
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #17
  store i8 -86, i8* %11, align 1
  %55 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %55) #17
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %12, %"class.WTF::String"* dereferenceable(8) %2) #17
  %56 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 9, i32 0, i32 0
  %57 = load %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader"** %56, align 8
  %58 = call fastcc %"class.blink::Resource"* @_ZN5blink12_GLOBAL__N_114CachedResourceEPNS_10LocalFrameERKNS_4KURLEPNS_30InspectorResourceContentLoaderE(%"class.blink::LocalFrame"* nonnull %23, %"class.blink::KURL"* nonnull dereferenceable(112) %12, %"class.blink::InspectorResourceContentLoader"* %57)
  %59 = call zeroext i1 @_ZN5blink18InspectorPageAgent21CachedResourceContentEPKNS_8ResourceEPN3WTF6StringEPb(%"class.blink::Resource"* %58, %"class.WTF::String"* nonnull %10, i8* nonnull %11)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %55) #17
  br i1 %59, label %87, label %60

60:                                               ; preds = %52
  %61 = bitcast %"class.crdtp::DispatchResponse"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61) #17
  %62 = call i8* @_Znwm(i64 48) #19
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %65, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i64 32, i1 false) #17
  %66 = getelementptr inbounds i8, i8* %62, i64 32
  store i8 0, i8* %66, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %13, %"class.std::__1::basic_string"* nonnull %14) #17
  %67 = inttoptr i64 %6 to void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)***
  %68 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)** %68, i64 1
  %70 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)** %69, align 8
  call void %70(%"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %20, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %13) #17
  %71 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %13, i64 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #19
  br label %79

79:                                               ; preds = %60, %76
  %80 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %85) #19
  br label %86

86:                                               ; preds = %79, %84
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61) #17
  br label %171

87:                                               ; preds = %52
  %88 = bitcast %"class.std::__1::vector.3610"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #17
  %89 = getelementptr inbounds %"class.std::__1::vector.3610", %"class.std::__1::vector.3610"* %15, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::vector.3610", %"class.std::__1::vector.3610"* %15, i64 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.std::__1::vector.3610", %"class.std::__1::vector.3610"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 5
  %93 = bitcast %"class.std::__1::vector.3610"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %93, i8 -86, i64 24, i1 false)
  %94 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %92, align 8
  %95 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #17
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %87
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %101 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %100, i64* %101, align 8
  br label %109

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 1
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %108 = bitcast i8** %107 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %108, align 8
  br label %109

109:                                              ; preds = %98, %102
  %110 = phi i32 [ %105, %102 ], [ 0, %98 ]
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %110, i32* %111, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #17
  %112 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #17
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %116, label %120

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* null, i8** %117, align 8
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %119 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %118, i64* %119, align 8
  br label %127

120:                                              ; preds = %109
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %121, align 8
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 1
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %126 = bitcast i8** %125 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %126, align 8
  br label %127

127:                                              ; preds = %116, %120
  %128 = phi i32 [ %123, %120 ], [ 0, %116 ]
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %128, i32* %129, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %18, %"class.WTF::StringView"* nonnull dereferenceable(24) %19) #17
  %130 = bitcast %"class.v8_inspector::V8InspectorSession"* %94 to void (%"class.std::__1::vector.3610"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)***
  %131 = load void (%"class.std::__1::vector.3610"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)**, void (%"class.std::__1::vector.3610"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.std::__1::vector.3610"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)*, void (%"class.std::__1::vector.3610"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)** %131, i64 13
  %133 = load void (%"class.std::__1::vector.3610"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)*, void (%"class.std::__1::vector.3610"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)** %132, align 8
  call void %133(%"class.std::__1::vector.3610"* nonnull sret %15, %"class.v8_inspector::V8InspectorSession"* %94, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %16, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %18, i1 zeroext %4, i1 zeroext %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #17
  %134 = call i8* @_Znwm(i64 24) #19
  %135 = bitcast i8* %134 to %"class.std::__1::vector.3610"*
  %136 = bitcast %"class.std::__1::vector.3610"* %15 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 16
  %138 = bitcast i8* %134 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %138, align 8
  %139 = bitcast %"class.std::__1::unique_ptr.3612"** %91 to i64*
  %140 = load i64, i64* %139, align 16
  %141 = getelementptr inbounds i8, i8* %134, i64 16
  %142 = bitcast i8* %141 to i64*
  store i64 %140, i64* %142, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %88, i8 0, i64 24, i1 false) #17
  %143 = inttoptr i64 %6 to void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.std::__1::vector.3610"*)***
  %144 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.std::__1::vector.3610"*)**, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.std::__1::vector.3610"*)*** %143, align 8
  %145 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.std::__1::vector.3610"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.std::__1::vector.3610"*)** %144, align 8
  call void %145(%"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %20, %"class.std::__1::vector.3610"* nonnull %135) #17
  %146 = load %"class.std::__1::unique_ptr.3612"*, %"class.std::__1::unique_ptr.3612"** %89, align 16
  %147 = icmp eq %"class.std::__1::unique_ptr.3612"* %146, null
  br i1 %147, label %170, label %148

148:                                              ; preds = %127
  %149 = bitcast %"class.std::__1::unique_ptr.3612"* %146 to i8*
  %150 = load %"class.std::__1::unique_ptr.3612"*, %"class.std::__1::unique_ptr.3612"** %90, align 8
  %151 = icmp eq %"class.std::__1::unique_ptr.3612"* %150, %146
  br i1 %151, label %168, label %152

152:                                              ; preds = %148, %163
  %153 = phi %"class.std::__1::unique_ptr.3612"* [ %154, %163 ], [ %150, %148 ]
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.3612", %"class.std::__1::unique_ptr.3612"* %153, i64 -1
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr.3612", %"class.std::__1::unique_ptr.3612"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.v8_inspector::protocol::Debugger::API::SearchMatch"*, %"class.v8_inspector::protocol::Debugger::API::SearchMatch"** %155, align 8
  store %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* null, %"class.v8_inspector::protocol::Debugger::API::SearchMatch"** %155, align 8
  %157 = icmp eq %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %152
  %159 = bitcast %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* %156 to void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)***
  %160 = load void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)**, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)** %160, i64 2
  %162 = load void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)** %161, align 8
  call void %162(%"class.v8_inspector::protocol::Debugger::API::SearchMatch"* nonnull %156) #17
  br label %163

163:                                              ; preds = %158, %152
  %164 = icmp eq %"class.std::__1::unique_ptr.3612"* %154, %146
  br i1 %164, label %165, label %152

165:                                              ; preds = %163
  %166 = bitcast %"class.std::__1::vector.3610"* %15 to i8**
  %167 = load i8*, i8** %166, align 16
  br label %168

168:                                              ; preds = %165, %148
  %169 = phi i8* [ %167, %165 ], [ %149, %148 ]
  store %"class.std::__1::unique_ptr.3612"* %146, %"class.std::__1::unique_ptr.3612"** %90, align 8
  call void @_ZdlPv(i8* %169) #19
  br label %170

170:                                              ; preds = %127, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #17
  br label %171

171:                                              ; preds = %170, %86
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #17
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #17
  br label %187

187:                                              ; preds = %171, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #17
  br label %188

188:                                              ; preds = %187, %51
  %189 = icmp eq i64 %6, 0
  br i1 %189, label %195, label %190

190:                                              ; preds = %188
  %191 = inttoptr i64 %6 to void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)***
  %192 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)**, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)** %192, i64 4
  %194 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)** %193, align 8
  call void %194(%"class.blink::protocol::Page::Backend::SearchInResourceCallback"* nonnull %20) #17
  br label %195

195:                                              ; preds = %188, %190
  ret void
}

declare void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* sret, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent16searchInResourceERKN3WTF6StringES4_S4_N5crdtp6detail10ValueMaybeIbEES8_NSt3__110unique_ptrINS_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEE(%"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3453"*, %"class.crdtp::detail::ValueMaybe.3453"*, i64) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.3604", align 8
  %9 = alloca %"class.crdtp::DispatchResponse", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.blink::Persistent.3602", align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.3604", %"class.std::__1::unique_ptr.3604"* %8, i64 0, i32 0, i32 0, i32 0
  %16 = inttoptr i64 %6 to %"class.blink::protocol::Page::Backend::SearchInResourceCallback"*
  store %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %16, %"class.blink::protocol::Page::Backend::SearchInResourceCallback"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %18 = load i8, i8* %17, align 1, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %45

20:                                               ; preds = %7
  %21 = bitcast %"class.crdtp::DispatchResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #17
  %22 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 21, i8* %23, align 1
  %24 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i64 21, i1 false) #17
  %25 = getelementptr inbounds i8, i8* %24, i64 21
  store i8 0, i8* %25, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull %10) #17
  %26 = inttoptr i64 %6 to void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)***
  %27 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)** %27, i64 1
  %29 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.crdtp::DispatchResponse"*)** %28, align 8
  call void %29(%"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %16, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %9) #17
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #19
  br label %38

38:                                               ; preds = %20, %35
  %39 = load i8, i8* %23, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #19
  br label %44

44:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #17
  br label %122

45:                                               ; preds = %7
  %46 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 9, i32 0, i32 0
  %47 = load %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 11
  %49 = load i32, i32* %48, align 4
  %50 = bitcast %"class.blink::Persistent.3602"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #17
  %51 = getelementptr inbounds %"class.blink::Persistent.3602", %"class.blink::Persistent.3602"* %12, i64 0, i32 0
  %52 = getelementptr inbounds %"class.blink::Persistent.3602", %"class.blink::Persistent.3602"* %12, i64 0, i32 0, i32 0
  store %"class.blink::InspectorPageAgent"* %0, %"class.blink::InspectorPageAgent"** %52, align 8, !alias.scope !33
  %53 = getelementptr inbounds %"class.blink::Persistent.3602", %"class.blink::Persistent.3602"* %12, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %53, align 8, !alias.scope !33
  %54 = ptrtoint %"class.blink::InspectorPageAgent"* %0 to i64
  switch i64 %54, label %55 [
    i64 0, label %81
    i64 -1, label %81
  ]

55:                                               ; preds = %45
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !33
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #17, !noalias !33
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !3

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #17
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8, !noalias !33
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %66, align 8, !noalias !33
  %68 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8, !noalias !33
  %70 = icmp eq %"class.blink::PersistentNode"* %69, null
  br i1 %70, label %71, label %74, !prof !3

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %67, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %72) #17
  %73 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8
  br label %74

74:                                               ; preds = %71, %62
  %75 = phi %"class.blink::PersistentNode"* [ %73, %71 ], [ %69, %62 ]
  %76 = bitcast %"class.blink::PersistentNode"* %75 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !33
  %78 = bitcast %"class.blink::PersistentRegion"* %67 to i64*
  store i64 %77, i64* %78, align 8, !noalias !33
  %79 = bitcast %"class.blink::PersistentNode"* %75 to %"class.blink::PersistentBase.3603"**
  store %"class.blink::PersistentBase.3603"* %51, %"class.blink::PersistentBase.3603"** %79, align 8, !noalias !33
  %80 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %75, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18InspectorPageAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %80, align 8
  store %"class.blink::PersistentNode"* %75, %"class.blink::PersistentNode"** %53, align 8, !alias.scope !33
  br label %81

81:                                               ; preds = %45, %45, %74
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #17
  store i8 0, i8* %13, align 1
  %82 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %4, i64 0, i32 0
  %83 = load i8, i8* %82, align 1, !range !4
  %84 = icmp eq i8 %83, 0
  %85 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %4, i64 0, i32 1
  %86 = select i1 %84, i8* %13, i8* %85
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #17
  store i8 0, i8* %14, align 1
  %87 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %5, i64 0, i32 0
  %88 = load i8, i8* %87, align 1, !range !4
  %89 = icmp eq i8 %88, 0
  %90 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %5, i64 0, i32 1
  %91 = select i1 %89, i8* %14, i8* %90
  %92 = call i8* @_Znwm(i64 104) #19, !noalias !36
  %93 = bitcast i8* %92 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %93, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_S8_bbNSt3__110unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES6_S6_S6_bbSH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES7_S7_bbNSt3__110unique_ptrINS2_8protocol4Page7Backend24SearchInResourceCallbackENS8_14default_deleteISD_EEEEEJNS2_10PersistentIS3_EES5_S5_S5_bbSG_EE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !36
  %94 = getelementptr inbounds i8, i8* %92, i64 32
  %95 = bitcast i8* %94 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i1, i1, i64)* @_ZN5blink18InspectorPageAgent40SearchContentAfterResourcesContentLoadedERKN3WTF6StringES4_S4_bbNSt3__110unique_ptrINS_8protocol4Page7Backend24SearchInResourceCallbackENS5_14default_deleteISA_EEEE to i64), i64 0>, <2 x i64>* %95, align 8, !noalias !36
  %96 = getelementptr inbounds i8, i8* %92, i64 48
  %97 = bitcast i8* %96 to %"struct.std::__1::__tuple_impl.4183"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_S8_bbNS_10unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS_14default_deleteISD_EEEEEEC2IJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEJS6_S8_S8_S8_bbSG_EJEJEJS6_RKS8_SK_SK_RKbSM_SG_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSO_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.4183"* %97, %"class.blink::Persistent.3602"* nonnull dereferenceable(16) %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, i8* dereferenceable(1) %86, i8* dereferenceable(1) %91, %"class.std::__1::unique_ptr.3604"* nonnull dereferenceable(8) %8) #17, !noalias !36
  %98 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %92, i8** %98, align 8, !alias.scope !36
  call void @_ZN5blink30InspectorResourceContentLoader28EnsureResourcesContentLoadedEiN4base12OnceCallbackIFvvEEE(%"class.blink::InspectorResourceContentLoader"* %47, i32 %49, %"class.base::OnceCallback"* nonnull %11) #17
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %99) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #17
  %100 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %53, align 8
  %101 = icmp eq %"class.blink::PersistentNode"* %100, null
  br i1 %101, label %121, label %102

102:                                              ; preds = %81
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #17
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !3

107:                                              ; preds = %102
  %108 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #17
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 3, i32 0, i32 0, i32 0
  %114 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %113, align 8
  %115 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %53, align 8
  %116 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %114, i64 0, i32 0, i32 0
  %117 = bitcast %"class.blink::PersistentRegion"* %114 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.blink::PersistentNode"* %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %115, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %120, align 8
  store %"class.blink::PersistentNode"* %115, %"class.blink::PersistentNode"** %116, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %53, align 8
  br label %121

121:                                              ; preds = %81, %109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #17
  br label %122

122:                                              ; preds = %121, %44
  %123 = load %"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.blink::protocol::Page::Backend::SearchInResourceCallback"** %15, align 8
  store %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* null, %"class.blink::protocol::Page::Backend::SearchInResourceCallback"** %15, align 8
  %124 = icmp eq %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %122
  %126 = bitcast %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %123 to void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)***
  %127 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)**, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)** %127, i64 4
  %129 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)** %128, align 8
  call void %129(%"class.blink::protocol::Page::Backend::SearchInResourceCallback"* nonnull %123) #17
  br label %130

130:                                              ; preds = %122, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent16searchInResourceERKN3WTF6StringES4_S4_N5crdtp6detail10ValueMaybeIbEES8_NSt3__110unique_ptrINS_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEE(%"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3453"*, %"class.crdtp::detail::ValueMaybe.3453"*, i64) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 -1, i32 28, i32 1
  %9 = bitcast i8* %8 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent16searchInResourceERKN3WTF6StringES4_S4_N5crdtp6detail10ValueMaybeIbEES8_NSt3__110unique_ptrINS_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEE(%"class.blink::InspectorPageAgent"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3453"* %4, %"class.crdtp::detail::ValueMaybe.3453"* %5, i64 %6)
  ret void
}

declare void @_ZN5blink8Settings12SetBypassCSPEb(%"class.blink::Settings"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent12setBypassCSPEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent12setBypassCSPEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent25getPermissionsPolicyStateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol4Page29PermissionsPolicyFeatureStateENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.3630"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.absl::optional.3668", align 8
  %10 = alloca %"class.std::__1::unique_ptr.3635", align 8
  %11 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %11, align 8
  %13 = tail call %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"* %12, %"class.WTF::String"* dereferenceable(8) %2) #17
  %14 = icmp eq %"class.blink::LocalFrame"* %13, null
  br i1 %14, label %15, label %27

15:                                               ; preds = %4
  %16 = tail call i8* @_Znwm(i64 48) #19
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %19, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i64 42, i1 false) #17
  %20 = getelementptr inbounds i8, i8* %16, i64 42
  store i8 0, i8* %20, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %21 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %350

25:                                               ; preds = %15
  %26 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %26) #19
  br label %350

27:                                               ; preds = %4
  %28 = tail call %"class.blink::SecurityContext"* @_ZNK5blink10LocalFrame18GetSecurityContextEv(%"class.blink::LocalFrame"* nonnull %13) #17
  %29 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %29, align 8
  %31 = icmp eq %"class.blink::PermissionsPolicy"* %30, null
  br i1 %31, label %32, label %42

32:                                               ; preds = %27
  %33 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 15, i8* %34, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 15, i1 false) #17
  %36 = getelementptr inbounds i8, i8* %35, i64 15
  store i8 0, i8* %36, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #17
  %37 = load i8, i8* %34, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %350

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #19
  br label %350

42:                                               ; preds = %27
  %43 = tail call i8* @_Znwm(i64 24) #19
  %44 = bitcast i8* %43 to %"class.std::__1::vector.3633"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #17
  %45 = ptrtoint i8* %43 to i64
  %46 = tail call dereferenceable(24) %"class.WTF::HashMap.3662"* @_ZN5blink24GetDefaultFeatureNameMapEv() #17
  %47 = getelementptr inbounds %"class.WTF::HashMap.3662", %"class.WTF::HashMap.3662"* %46, i64 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.3662", %"class.WTF::HashMap.3662"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.3666"*, %"struct.WTF::KeyValuePair.3666"** %50, align 8
  %52 = getelementptr inbounds %"class.WTF::HashMap.3662", %"class.WTF::HashMap.3662"* %46, i64 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3666", %"struct.WTF::KeyValuePair.3666"* %51, i64 %54
  br i1 %49, label %84, label %56

56:                                               ; preds = %42
  %57 = icmp eq i32 %53, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %56, %62
  %59 = phi %"struct.WTF::KeyValuePair.3666"* [ %63, %62 ], [ %51, %56 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.3666"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  switch i64 %61, label %65 [
    i64 -1, label %62
    i64 0, label %62
  ]

62:                                               ; preds = %58, %58
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3666", %"struct.WTF::KeyValuePair.3666"* %59, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair.3666"* %63, %55
  br i1 %64, label %84, label %58

65:                                               ; preds = %58, %56
  %66 = phi %"struct.WTF::KeyValuePair.3666"* [ %51, %56 ], [ %59, %58 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.3666"* %66, %55
  br i1 %67, label %84, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.absl::optional.3668", %"class.absl::optional.3668"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.absl::optional.3668", %"class.absl::optional.3668"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.absl::optional.3668", %"class.absl::optional.3668"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %72 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %13, i64 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr.3635"* %10 to i8*
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %10, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::unique_ptr.3635"* %10 to i8**
  %76 = bitcast %"class.WTF::String"* %6 to i8*
  %77 = bitcast %"class.WTF::String"* %5 to i8*
  %78 = getelementptr inbounds i8, i8* %43, i64 8
  %79 = bitcast i8* %78 to %"class.std::__1::unique_ptr.3635"**
  %80 = getelementptr inbounds i8, i8* %43, i64 16
  %81 = bitcast i8* %80 to %"class.std::__1::unique_ptr.3635"**
  %82 = bitcast %"class.std::__1::unique_ptr.3635"* %10 to i64*
  %83 = bitcast i8* %78 to i64*
  br label %119

84:                                               ; preds = %62, %338, %348, %345, %42, %65
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3630", %"class.std::__1::unique_ptr.3630"* %3, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.std::__1::vector.3633"*, %"class.std::__1::vector.3633"** %85, align 8
  %87 = bitcast %"class.std::__1::unique_ptr.3630"* %3 to i64*
  store i64 %45, i64* %87, align 8
  %88 = icmp eq %"class.std::__1::vector.3633"* %86, null
  br i1 %88, label %118, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::vector.3633", %"class.std::__1::vector.3633"* %86, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::unique_ptr.3635"** %90, align 8
  %92 = icmp eq %"class.std::__1::unique_ptr.3635"* %91, null
  br i1 %92, label %116, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.std::__1::unique_ptr.3635"* %91 to i8*
  %95 = getelementptr inbounds %"class.std::__1::vector.3633", %"class.std::__1::vector.3633"* %86, i64 0, i32 0, i32 1
  %96 = load %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::unique_ptr.3635"** %95, align 8
  %97 = icmp eq %"class.std::__1::unique_ptr.3635"* %96, %91
  br i1 %97, label %114, label %98

98:                                               ; preds = %93, %109
  %99 = phi %"class.std::__1::unique_ptr.3635"* [ %100, %109 ], [ %96, %93 ]
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %99, i64 -1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::protocol::Page::PermissionsPolicyFeatureState"*, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %101, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %101, align 8
  %103 = icmp eq %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %98
  %105 = bitcast %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* %102 to void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)***
  %106 = load void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)**, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)** %106, i64 2
  %108 = load void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)** %107, align 8
  call void %108(%"class.blink::protocol::Page::PermissionsPolicyFeatureState"* nonnull %102) #17
  br label %109

109:                                              ; preds = %104, %98
  %110 = icmp eq %"class.std::__1::unique_ptr.3635"* %100, %91
  br i1 %110, label %111, label %98

111:                                              ; preds = %109
  %112 = bitcast %"class.std::__1::vector.3633"* %86 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %93
  %115 = phi i8* [ %113, %111 ], [ %94, %93 ]
  store %"class.std::__1::unique_ptr.3635"* %91, %"class.std::__1::unique_ptr.3635"** %95, align 8
  call void @_ZdlPv(i8* %115) #19
  br label %116

116:                                              ; preds = %114, %89
  %117 = bitcast %"class.std::__1::vector.3633"* %86 to i8*
  call void @_ZdlPv(i8* %117) #19
  br label %118

118:                                              ; preds = %84, %116
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %350

119:                                              ; preds = %68, %348
  %120 = phi %"struct.WTF::KeyValuePair.3666"* [ %66, %68 ], [ %342, %348 ]
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.3666", %"struct.WTF::KeyValuePair.3666"* %120, i64 0, i32 0
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.3666", %"struct.WTF::KeyValuePair.3666"* %120, i64 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* nonnull %13) #17
  %125 = icmp eq %"class.blink::LocalDOMWindow"* %124, null
  %126 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %124, i64 0, i32 1, i32 4
  %127 = select i1 %125, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %126
  %128 = call zeroext i1 @_ZN5blink21DisabledByOriginTrialERKN3WTF6StringEPNS_14FeatureContextE(%"class.WTF::String"* dereferenceable(8) %121, %"class.blink::FeatureContext"* %127) #17
  br i1 %128, label %338, label %129

129:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 24, i1 false)
  call void @_ZN5blink33TracePermissionsPolicyBlockSourceEPNS_5FrameENS_5mojom24PermissionsPolicyFeatureE(%"class.absl::optional.3668"* nonnull sret %9, %"class.blink::Frame"* %72, i32 %123) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #17
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::Page::PermissionsPolicyFeatureState"*), %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %74, align 8
  %130 = call i8* @_Znwm(i64 32) #19
  %131 = bitcast i8* %130 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page29PermissionsPolicyFeatureStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %132 = getelementptr inbounds i8, i8* %130, i64 8
  %133 = bitcast i8* %132 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %133, align 8
  %134 = getelementptr inbounds i8, i8* %130, i64 24
  %135 = bitcast i8* %134 to i64*
  store i64 0, i64* %135, align 8
  %136 = getelementptr inbounds i8, i8* %130, i64 16
  store i8 0, i8* %136, align 8
  %137 = call %"class.WTF::StringImpl"* @_ZN5blink34PermissionsPolicyFeatureToProtocolENS_5mojom24PermissionsPolicyFeatureE(i32 %123) #17
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %156, label %139

139:                                              ; preds = %129
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i33
  %148 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %147, i33 1) #17
  %149 = extractvalue { i33, i1 } %148, 1
  %150 = extractvalue { i33, i1 } %148, 0
  %151 = icmp slt i33 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %153, label %154, !prof !3

153:                                              ; preds = %144
  call void @llvm.trap() #17
  unreachable

154:                                              ; preds = %144
  %155 = trunc i33 %150 to i32
  store i32 %155, i32* %145, align 4
  br label %156

156:                                              ; preds = %154, %139, %129
  %157 = ptrtoint %"class.WTF::StringImpl"* %137 to i64
  %158 = bitcast i8* %132 to i64*
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  store i64 %157, i64* %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #17
  br label %174

174:                                              ; preds = %156, %170, %173
  %175 = load i8, i8* %69, align 8, !range !4
  %176 = xor i8 %175, 1
  store i8 %176, i8* %136, align 8
  store i8* %130, i8** %75, align 8
  br i1 %138, label %192, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #17
  br label %190

190:                                              ; preds = %186, %189
  %191 = load i8, i8* %69, align 8
  br label %192

192:                                              ; preds = %190, %174
  %193 = phi i8 [ %191, %190 ], [ %175, %174 ]
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %299, label %195

195:                                              ; preds = %192
  %196 = load %"class.blink::protocol::Page::PermissionsPolicyFeatureState"*, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %74, align 8
  %197 = load i32, i32* %71, align 8
  switch i32 %197, label %207 [
    i32 0, label %198
    i32 1, label %200
  ]

198:                                              ; preds = %195
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #17
  %199 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page32PermissionsPolicyBlockReasonEnum6HeaderE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page32PermissionsPolicyBlockReasonEnum6HeaderE, i64 0, i64 0), i64 %199) #17
  br label %202

200:                                              ; preds = %195
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #17
  %201 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page32PermissionsPolicyBlockReasonEnum15IframeAttributeE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page32PermissionsPolicyBlockReasonEnum15IframeAttributeE, i64 0, i64 0), i64 %201) #17
  br label %202

202:                                              ; preds = %198, %200
  %203 = phi %"class.WTF::String"* [ %6, %200 ], [ %5, %198 ]
  %204 = phi i8* [ %76, %200 ], [ %77, %198 ]
  %205 = bitcast %"class.WTF::String"* %203 to i64*
  %206 = load i64, i64* %205, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #17
  br label %207

207:                                              ; preds = %202, %195
  %208 = phi i64 [ 0, %195 ], [ %206, %202 ]
  %209 = call i8* @_Znwm(i64 24) #19
  %210 = bitcast i8* %209 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page29PermissionsPolicyBlockLocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %210, align 8
  %211 = getelementptr inbounds i8, i8* %209, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 16, i1 false) #17
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %231, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i33
  %223 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %222, i33 1) #17
  %224 = extractvalue { i33, i1 } %223, 1
  %225 = extractvalue { i33, i1 } %223, 0
  %226 = icmp slt i33 %225, 0
  %227 = or i1 %224, %226
  br i1 %227, label %228, label %229, !prof !3

228:                                              ; preds = %219
  call void @llvm.trap() #17
  unreachable

229:                                              ; preds = %219
  %230 = trunc i33 %225 to i32
  store i32 %230, i32* %220, align 4
  br label %231

231:                                              ; preds = %229, %214, %207
  %232 = ptrtoint %"class.WTF::StringImpl"* %212 to i64
  %233 = bitcast i8* %211 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds i8, i8* %209, i64 16
  %235 = inttoptr i64 %208 to %"class.WTF::StringImpl"*
  %236 = icmp eq i64 %208, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %231
  %238 = bitcast i8* %234 to i64*
  store i64 0, i64* %238, align 8
  br label %287

239:                                              ; preds = %231
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %273

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i33
  %248 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %247, i33 1) #17
  %249 = extractvalue { i33, i1 } %248, 1
  %250 = extractvalue { i33, i1 } %248, 0
  %251 = icmp slt i33 %250, 0
  %252 = or i1 %249, %251
  br i1 %252, label %253, label %254, !prof !3

253:                                              ; preds = %244
  call void @llvm.trap() #17
  unreachable

254:                                              ; preds = %244
  %255 = trunc i33 %250 to i32
  store i32 %255, i32* %245, align 4
  %256 = bitcast i8* %234 to %"class.WTF::StringImpl"**
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = bitcast i8* %234 to i64*
  store i64 %208, i64* %258, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %259, label %275, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %275

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #17
  br label %275

273:                                              ; preds = %239
  %274 = bitcast i8* %234 to i64*
  store i64 %208, i64* %274, align 8
  br label %275

275:                                              ; preds = %273, %272, %269, %254
  %276 = load atomic i32, i32* %240 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  br i1 %278, label %281, label %283

281:                                              ; preds = %275
  %282 = add i32 %280, -1
  store i32 %282, i32* %279, align 4
  br label %283

283:                                              ; preds = %281, %275
  %284 = phi i32 [ %282, %281 ], [ %280, %275 ]
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %235) #17
  br label %287

287:                                              ; preds = %237, %283, %286
  %288 = ptrtoint i8* %209 to i64
  %289 = getelementptr inbounds %"class.blink::protocol::Page::PermissionsPolicyFeatureState", %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* %196, i64 0, i32 3
  %290 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3641", %"class.crdtp::detail::PtrMaybe.3641"* %289, i64 0, i32 0, i32 0, i32 0, i32 0
  %291 = load %"class.blink::protocol::Page::PermissionsPolicyBlockLocator"*, %"class.blink::protocol::Page::PermissionsPolicyBlockLocator"** %290, align 8
  %292 = bitcast %"class.crdtp::detail::PtrMaybe.3641"* %289 to i64*
  store i64 %288, i64* %292, align 8
  %293 = icmp eq %"class.blink::protocol::Page::PermissionsPolicyBlockLocator"* %291, null
  br i1 %293, label %299, label %294

294:                                              ; preds = %287
  %295 = bitcast %"class.blink::protocol::Page::PermissionsPolicyBlockLocator"* %291 to void (%"class.blink::protocol::Page::PermissionsPolicyBlockLocator"*)***
  %296 = load void (%"class.blink::protocol::Page::PermissionsPolicyBlockLocator"*)**, void (%"class.blink::protocol::Page::PermissionsPolicyBlockLocator"*)*** %295, align 8
  %297 = getelementptr inbounds void (%"class.blink::protocol::Page::PermissionsPolicyBlockLocator"*)*, void (%"class.blink::protocol::Page::PermissionsPolicyBlockLocator"*)** %296, i64 2
  %298 = load void (%"class.blink::protocol::Page::PermissionsPolicyBlockLocator"*)*, void (%"class.blink::protocol::Page::PermissionsPolicyBlockLocator"*)** %297, align 8
  call void %298(%"class.blink::protocol::Page::PermissionsPolicyBlockLocator"* nonnull %291) #17
  br label %299

299:                                              ; preds = %192, %294, %287
  %300 = load %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::unique_ptr.3635"** %79, align 8
  %301 = load %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::unique_ptr.3635"** %81, align 8
  %302 = icmp ult %"class.std::__1::unique_ptr.3635"* %300, %301
  br i1 %302, label %303, label %308

303:                                              ; preds = %299
  %304 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %74, align 8
  %305 = bitcast %"class.std::__1::unique_ptr.3635"* %300 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %300, i64 1
  %307 = ptrtoint %"class.std::__1::unique_ptr.3635"* %306 to i64
  store i64 %307, i64* %83, align 8
  br label %309

308:                                              ; preds = %299
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page29PermissionsPolicyFeatureStateENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3633"* nonnull %44, %"class.std::__1::unique_ptr.3635"* nonnull dereferenceable(8) %10) #17
  br label %309

309:                                              ; preds = %303, %308
  %310 = load %"class.blink::protocol::Page::PermissionsPolicyFeatureState"*, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %74, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %74, align 8
  %311 = icmp eq %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* %310, null
  br i1 %311, label %317, label %312

312:                                              ; preds = %309
  %313 = bitcast %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* %310 to void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)***
  %314 = load void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)**, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*** %313, align 8
  %315 = getelementptr inbounds void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)** %314, i64 2
  %316 = load void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)** %315, align 8
  call void %316(%"class.blink::protocol::Page::PermissionsPolicyFeatureState"* nonnull %310) #17
  br label %317

317:                                              ; preds = %309, %312
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #17
  %318 = load i8, i8* %69, align 8, !range !4
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %337, label %320

320:                                              ; preds = %317
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %336, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #17
  br label %336

336:                                              ; preds = %335, %332, %320
  store i8 0, i8* %69, align 8
  br label %337

337:                                              ; preds = %317, %336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #17
  br label %338

338:                                              ; preds = %119, %337
  %339 = getelementptr inbounds %"struct.WTF::KeyValuePair.3666", %"struct.WTF::KeyValuePair.3666"* %120, i64 1
  %340 = icmp eq %"struct.WTF::KeyValuePair.3666"* %339, %55
  br i1 %340, label %84, label %341

341:                                              ; preds = %338, %345
  %342 = phi %"struct.WTF::KeyValuePair.3666"* [ %346, %345 ], [ %339, %338 ]
  %343 = bitcast %"struct.WTF::KeyValuePair.3666"* %342 to i64*
  %344 = load i64, i64* %343, align 8
  switch i64 %344, label %348 [
    i64 -1, label %345
    i64 0, label %345
  ]

345:                                              ; preds = %341, %341
  %346 = getelementptr inbounds %"struct.WTF::KeyValuePair.3666", %"struct.WTF::KeyValuePair.3666"* %342, i64 1
  %347 = icmp eq %"struct.WTF::KeyValuePair.3666"* %346, %55
  br i1 %347, label %84, label %341

348:                                              ; preds = %341
  %349 = icmp eq %"struct.WTF::KeyValuePair.3666"* %342, %55
  br i1 %349, label %84, label %119

350:                                              ; preds = %118, %39, %32, %25, %15
  ret void
}

declare %"class.blink::SecurityContext"* @_ZNK5blink10LocalFrame18GetSecurityContextEv(%"class.blink::LocalFrame"*) unnamed_addr #2

declare dereferenceable(24) %"class.WTF::HashMap.3662"* @_ZN5blink24GetDefaultFeatureNameMapEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5blink21DisabledByOriginTrialERKN3WTF6StringEPNS_14FeatureContextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::FeatureContext"*) local_unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZN5blink33TracePermissionsPolicyBlockSourceEPNS_5FrameENS_5mojom24PermissionsPolicyFeatureE(%"class.absl::optional.3668"* sret, %"class.blink::Frame"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink34PermissionsPolicyFeatureToProtocolENS_5mojom24PermissionsPolicyFeatureE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent25getPermissionsPolicyStateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol4Page29PermissionsPolicyFeatureStateENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.3630"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent25getPermissionsPolicyStateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorINS6_INS_8protocol4Page29PermissionsPolicyFeatureStateENS5_14default_deleteISA_EEEENS5_9allocatorISD_EEEENSB_ISG_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.std::__1::unique_ptr.3630"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent18setDocumentContentERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %7, align 8
  %9 = tail call %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"* %8, %"class.WTF::String"* dereferenceable(8) %2) #17
  %10 = icmp eq %"class.blink::LocalFrame"* %9, null
  br i1 %10, label %11, label %23

11:                                               ; preds = %4
  %12 = tail call i8* @_Znwm(i64 32) #19
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %15, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 27, i1 false) #17
  %16 = getelementptr inbounds i8, i8* %12, i64 27
  store i8 0, i8* %16, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #17
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %39

21:                                               ; preds = %11
  %22 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %22) #19
  br label %39

23:                                               ; preds = %4
  %24 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %9) #17
  %25 = icmp eq %"class.blink::Document"* %24, null
  br i1 %25, label %26, label %38

26:                                               ; preds = %23
  %27 = tail call i8* @_Znwm(i64 48) #19
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast i64* %29 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %30, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i64 0, i64 0), i64 36, i1 false) #17
  %31 = getelementptr inbounds i8, i8* %27, i64 36
  store i8 0, i8* %31, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #17
  %32 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %37) #19
  br label %39

38:                                               ; preds = %23
  tail call void @_ZN5blink8Document10SetContentERKN3WTF6StringE(%"class.blink::Document"* nonnull %24, %"class.WTF::String"* dereferenceable(8) %3) #17
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %39

39:                                               ; preds = %36, %26, %21, %11, %38
  ret void
}

declare void @_ZN5blink8Document10SetContentERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent18setDocumentContentERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent18setDocumentContentERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent25DidNavigateWithinDocumentEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #17
  %5 = icmp eq %"class.blink::Document"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %7, align 8
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %10) #17
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 19, i32 4
  call void @_ZN5blink8protocol4Page8Frontend23navigatedWithinDocumentERKN3WTF6StringES6_(%"class.blink::protocol::Page::Frontend"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %13) #17
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #17
  br label %29

29:                                               ; preds = %6, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  br label %30

30:                                               ; preds = %2, %29
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend23navigatedWithinDocumentERKN3WTF6StringES6_(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMWrapperWorld"* @_ZN5blink18InspectorPageAgent21EnsureDOMWrapperWorldEPNS_10LocalFrameERKN3WTF6StringEb(%"class.blink::InspectorPageAgent"*, %"class.blink::LocalFrame"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LocalFrame"*, align 8
  %6 = alloca %"class.blink::LocalFrame"*, align 8
  %7 = alloca %"class.WTF::HashMap.735", align 8
  %8 = alloca %class.scoped_refptr.740, align 8
  store %"class.blink::LocalFrame"* %1, %"class.blink::LocalFrame"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = ptrtoint %"class.blink::LocalFrame"* %1 to i64
  %11 = bitcast %"class.blink::LocalFrame"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = bitcast %"class.blink::LocalFrame"** %5 to i64*
  store i64 %10, i64* %12, align 8
  %13 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorISK_SO_SP_EEPS3_EEbRKT0_(%"class.WTF::HashTable.731"* %9, %"class.blink::LocalFrame"** nonnull dereferenceable(8) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br i1 %13, label %48, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.WTF::HashMap.735"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 20, i1 false) #17
  %16 = call { %"struct.WTF::KeyValuePair.733"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISO_SK_SP_EERPS3_SG_EENS_18HashTableAddResultISQ_SH_EEOT0_OT1_(%"class.WTF::HashTable.731"* %9, %"class.blink::LocalFrame"** nonnull dereferenceable(8) %6, %"class.WTF::HashMap.735"* nonnull dereferenceable(24) %7) #17
  %17 = extractvalue { %"struct.WTF::KeyValuePair.733"*, i8 } %16, 1
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %45

20:                                               ; preds = %14
  %21 = extractvalue { %"struct.WTF::KeyValuePair.733"*, i8 } %16, 0
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %21, i64 0, i32 1
  %23 = bitcast %"class.WTF::HashMap.735"* %7 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.WTF::HashMap.735"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  store atomic i64 %26, i64* %23 monotonic, align 8
  store atomic i64 %24, i64* %25 monotonic, align 8
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %21, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %7, i64 0, i32 0, i32 1
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %28, align 8
  store i32 %30, i32* %27, align 4
  store i32 %29, i32* %28, align 8
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %21, i64 0, i32 1, i32 0, i32 2
  %32 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %7, i64 0, i32 0, i32 2
  %33 = load i32, i32* %31, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %31, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %21, i64 0, i32 1, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 2147483647
  %38 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %7, i64 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  %41 = and i32 %36, -2147483648
  %42 = or i32 %40, %41
  store i32 %42, i32* %35, align 8
  %43 = and i32 %39, -2147483648
  %44 = or i32 %43, %37
  store i32 %44, i32* %38, align 8
  br label %45

45:                                               ; preds = %14, %20
  %46 = bitcast %"class.WTF::HashMap.735"* %7 to %"class.WTF::ConditionalDestructor.737"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* nonnull %46) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  %47 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %6, align 8
  br label %48

48:                                               ; preds = %45, %4
  %49 = phi %"class.blink::LocalFrame"* [ %47, %45 ], [ %1, %4 ]
  %50 = call { %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.731"* %9, %"class.blink::LocalFrame"* %49) #17
  %51 = extractvalue { %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"* } %50, 0
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %51, i64 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %52, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.736"* %53, %"class.WTF::String"* dereferenceable(8) %2) #17
  %55 = extractvalue { %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"* } %54, 0
  %56 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %52, i64 0, i32 0, i32 0
  %57 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %56, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %51, i64 0, i32 1, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %57, i64 %60
  %62 = icmp eq %"struct.WTF::KeyValuePair.739"* %55, %61
  br i1 %62, label %70, label %63

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %55, i64 0, i32 1, i32 0
  %65 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %64, align 8
  %66 = ptrtoint %"class.blink::DOMWrapperWorld"* %65 to i64
  %67 = icmp eq %"class.blink::DOMWrapperWorld"* %65, null
  br i1 %67, label %139, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %65, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %69) #17
  br label %139

70:                                               ; preds = %48
  %71 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %6, align 8
  %72 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %71) #17
  %73 = bitcast %class.scoped_refptr.740* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #17
  %74 = getelementptr inbounds %class.scoped_refptr.740, %class.scoped_refptr.740* %8, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %72, i64 0, i32 4, i32 0, i32 0
  %76 = load %"class.blink::ScriptController"*, %"class.blink::ScriptController"** %75, align 8
  %77 = call %"class.blink::DOMWrapperWorld"* @_ZN5blink16ScriptController31CreateNewInspectorIsolatedWorldERKN3WTF6StringE(%"class.blink::ScriptController"* %76, %"class.WTF::String"* dereferenceable(8) %2) #17
  store %"class.blink::DOMWrapperWorld"* %77, %"class.blink::DOMWrapperWorld"** %74, align 8
  %78 = icmp eq %"class.blink::DOMWrapperWorld"* %77, null
  br i1 %78, label %137, label %79

79:                                               ; preds = %70
  %80 = call { %"struct.WTF::KeyValuePair.739"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.736"* %53, %"class.WTF::String"* dereferenceable(8) %2, %class.scoped_refptr.740* nonnull dereferenceable(8) %8) #17
  %81 = extractvalue { %"struct.WTF::KeyValuePair.739"*, i8 } %80, 1
  %82 = and i8 %81, 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %104

84:                                               ; preds = %79
  %85 = extractvalue { %"struct.WTF::KeyValuePair.739"*, i8 } %80, 0
  %86 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %74, align 8
  %87 = icmp eq %"class.blink::DOMWrapperWorld"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %86, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %89) #17
  br label %90

90:                                               ; preds = %88, %84
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %85, i64 0, i32 1
  %92 = ptrtoint %"class.blink::DOMWrapperWorld"* %86 to i64
  %93 = bitcast %class.scoped_refptr.740* %91 to i64*
  %94 = getelementptr inbounds %class.scoped_refptr.740, %class.scoped_refptr.740* %91, i64 0, i32 0
  %95 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %94, align 8
  store i64 %92, i64* %93, align 8
  %96 = icmp eq %"class.blink::DOMWrapperWorld"* %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %95, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %98) #17
  %99 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %95) #17
  %103 = bitcast %"class.blink::DOMWrapperWorld"* %95 to i8*
  call void @free(i8* %103) #17
  br label %104

104:                                              ; preds = %79, %90, %97, %102
  %105 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %72, i64 0, i32 1
  %106 = bitcast %"class.blink::ExecutionContext.base"* %105 to %"class.blink::ExecutionContext"*
  %107 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %106) #17
  %108 = call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"* %107) #17
  br i1 %3, label %109, label %110

109:                                              ; preds = %104
  call void @_ZN5blink14SecurityOrigin20GrantUniversalAccessEv(%"class.blink::SecurityOrigin"* %108) #17
  br label %110

110:                                              ; preds = %109, %104
  %111 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %74, align 8
  %112 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %111, i64 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq %"class.blink::SecurityOrigin"* %108, null
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  call void @_ZN5blink15DOMWrapperWorld30SetIsolatedWorldSecurityOriginEi13scoped_refptrINS_14SecurityOriginEE(i32 %113, %"class.blink::SecurityOrigin"* null) #17
  %116 = bitcast %class.scoped_refptr.740* %8 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.blink::DOMWrapperWorld"* null, %"class.blink::DOMWrapperWorld"** %74, align 8
  br label %137

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %108, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %119) #17
  call void @_ZN5blink15DOMWrapperWorld30SetIsolatedWorldSecurityOriginEi13scoped_refptrINS_14SecurityOriginEE(i32 %113, %"class.blink::SecurityOrigin"* nonnull %108) #17
  %120 = bitcast %class.scoped_refptr.740* %8 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.blink::DOMWrapperWorld"* null, %"class.blink::DOMWrapperWorld"** %74, align 8
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %119) #17
  %122 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %108) #17
  %126 = bitcast %"class.blink::SecurityOrigin"* %108 to i8*
  call void @free(i8* %126) #17
  br label %127

127:                                              ; preds = %125, %118
  %128 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %74, align 8
  %129 = icmp eq %"class.blink::DOMWrapperWorld"* %128, null
  br i1 %129, label %137, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %128, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %131) #17
  %132 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %128) #17
  %136 = bitcast %"class.blink::DOMWrapperWorld"* %128 to i8*
  call void @free(i8* %136) #17
  br label %137

137:                                              ; preds = %70, %115, %127, %130, %135
  %138 = phi i64 [ %121, %127 ], [ %121, %130 ], [ %121, %135 ], [ %117, %115 ], [ 0, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #17
  br label %139

139:                                              ; preds = %68, %63, %137
  %140 = phi i64 [ %138, %137 ], [ %66, %63 ], [ %66, %68 ]
  %141 = inttoptr i64 %140 to %"class.blink::DOMWrapperWorld"*
  ret %"class.blink::DOMWrapperWorld"* %141
}

declare %"class.blink::DOMWrapperWorld"* @_ZN5blink16ScriptController31CreateNewInspectorIsolatedWorldERKN3WTF6StringE(%"class.blink::ScriptController"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN5blink14SecurityOrigin20GrantUniversalAccessEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN5blink15DOMWrapperWorld30SetIsolatedWorldSecurityOriginEi13scoped_refptrINS_14SecurityOriginEE(i32, %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"*, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.46", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.v8::HandleScope", align 8
  %7 = alloca %"class.blink::ScriptSourceCode", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.WTF::TextPosition"*
  %11 = alloca %"class.blink::ScriptSourceCode", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.WTF::TextPosition"*
  %15 = alloca %"class.v8::HandleScope", align 8
  %16 = alloca %"class.blink::ScriptSourceCode", align 8
  %17 = alloca %"class.blink::KURL", align 8
  %18 = alloca i64, align 8
  %19 = bitcast i64* %18 to %"class.WTF::TextPosition"*
  %20 = alloca %"class.blink::ScriptSourceCode", align 8
  %21 = alloca %"class.blink::KURL", align 8
  %22 = alloca i64, align 8
  %23 = bitcast i64* %22 to %"class.WTF::TextPosition"*
  %24 = alloca %"class.blink::ScriptSourceCode", align 8
  %25 = alloca %"class.blink::KURL", align 8
  %26 = alloca i64, align 8
  %27 = bitcast i64* %26 to %"class.WTF::TextPosition"*
  %28 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %28, align 8
  %30 = icmp eq %"class.blink::protocol::Page::Frontend"* %29, null
  br i1 %30, label %350, label %31

31:                                               ; preds = %2
  %32 = bitcast %"class.WTF::Vector.46"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #17
  %33 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %3, i64 0, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16
  %36 = bitcast %"class.WTF::Vector.46"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv(%"class.WTF::Vector.46"* nonnull sret %3, %"class.blink::InspectorAgentState::MapField"* %35)
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %33, align 8
  %38 = load i32, i32* %34, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 %39
  call fastcc void @"_ZNSt3__16__sortIRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEvT0_SA_T_"(%"class.WTF::String"* %37, %"class.WTF::String"* %40) #17
  %41 = load %"class.WTF::String"*, %"class.WTF::String"** %33, align 8
  %42 = load i32, i32* %34, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %83, label %46

46:                                               ; preds = %31
  %47 = bitcast %"class.WTF::String"* %4 to i8*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 2
  %50 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %49, i64 0, i32 0
  %51 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %49, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %53 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 1
  %54 = bitcast %"class.WTF::String"* %5 to i8*
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 2
  %57 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %56, i64 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %56, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 2, i32 0, i32 1
  %60 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 1
  %61 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 3
  %62 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %61, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 3, i32 0, i32 1
  %65 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 1
  %66 = bitcast %"class.v8::HandleScope"* %15 to i8*
  %67 = bitcast %"class.blink::ScriptSourceCode"* %20 to i8*
  %68 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %21, i64 0, i32 0
  %69 = bitcast i64* %22 to i8*
  %70 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 5
  %71 = bitcast %"class.blink::ScriptSourceCode"* %16 to i8*
  %72 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %17, i64 0, i32 0
  %73 = bitcast i64* %18 to i8*
  %74 = bitcast %"class.blink::ScriptSourceCode"* %11 to i8*
  %75 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  %76 = bitcast i64* %13 to i8*
  %77 = bitcast %"class.v8::HandleScope"* %6 to i8*
  %78 = bitcast %"class.blink::ScriptSourceCode"* %7 to i8*
  %79 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  %80 = bitcast i64* %9 to i8*
  %81 = bitcast %"class.v8::HandleScope"* %15 to i8*
  %82 = bitcast %"class.v8::HandleScope"* %6 to i8*
  br label %92

83:                                               ; preds = %304, %31
  %84 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 8
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %313, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %313, label %307

92:                                               ; preds = %46, %304
  %93 = phi %"class.WTF::String"* [ %41, %46 ], [ %305, %304 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %48, align 8
  %94 = call { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.766"* %50, %"class.WTF::String"* dereferenceable(8) %93) #17
  %95 = extractvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %94, 0
  %96 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %51, align 8
  %97 = load i32, i32* %52, align 8
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %96, i64 %98
  %100 = icmp eq %"struct.WTF::KeyValuePair.769"* %95, %99
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %95, i64 0, i32 1
  %102 = select i1 %100, %"class.WTF::String"* %53, %"class.WTF::String"* %101
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %48, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %123, label %106

106:                                              ; preds = %92
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #17
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !3

120:                                              ; preds = %111
  call void @llvm.trap() #17
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %123

123:                                              ; preds = %92, %106, %121
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %55, align 8
  %124 = call { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.766"* %57, %"class.WTF::String"* dereferenceable(8) %93) #17
  %125 = extractvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %124, 0
  %126 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %58, align 8
  %127 = load i32, i32* %59, align 8
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %126, i64 %128
  %130 = icmp eq %"struct.WTF::KeyValuePair.769"* %125, %129
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %125, i64 0, i32 1
  %132 = select i1 %130, %"class.WTF::String"* %60, %"class.WTF::String"* %131
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %55, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %153, label %136

136:                                              ; preds = %123
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i33
  %145 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #17
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !3

150:                                              ; preds = %141
  call void @llvm.trap() #17
  unreachable

151:                                              ; preds = %141
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %142, align 4
  br label %153

153:                                              ; preds = %123, %136, %151
  %154 = call { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.723"* %62, %"class.WTF::String"* dereferenceable(8) %93) #17
  %155 = extractvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %154, 0
  %156 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %63, align 8
  %157 = load i32, i32* %64, align 8
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %156, i64 %158
  %160 = icmp eq %"struct.WTF::KeyValuePair.726"* %155, %159
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %155, i64 0, i32 1
  %162 = select i1 %160, i8* %65, i8* %161
  %163 = load i8, i8* %162, align 8, !range !4
  %164 = icmp ne i8 %163, 0
  %165 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #17
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %172, label %168

168:                                              ; preds = %153
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %209

172:                                              ; preds = %153, %168
  br i1 %164, label %173, label %207

173:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #17
  %174 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %165, i64 0, i32 1, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  %175 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %174, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %6, %"class.v8::Isolate"* %175) #17
  %176 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %165, i64 0, i32 0, i32 1, i32 0, i32 0
  %177 = bitcast %"class.blink::Frame"** %176 to %"class.blink::LocalFrame"**
  %178 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %177, align 8
  %179 = call %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %178) #17
  %180 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %70, align 8
  %181 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %179, i64 0, i32 1, i32 0, i32 0, i32 0
  %182 = load %"class.v8::Context"*, %"class.v8::Context"** %181, align 8
  %183 = icmp eq %"class.v8::Context"* %182, null
  br i1 %183, label %191, label %184

184:                                              ; preds = %173
  %185 = bitcast %"class.blink::ScriptState"* %179 to %"class.v8::internal::Isolate"**
  %186 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %185, align 8
  %187 = bitcast %"class.v8::Context"* %182 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %186, i64 %188) #17
  %190 = bitcast i64* %189 to %"class.v8::Context"*
  br label %191

191:                                              ; preds = %173, %184
  %192 = phi %"class.v8::Context"* [ %190, %184 ], [ null, %173 ]
  %193 = call i32 @_ZN12v8_inspector13V8ContextInfo18executionContextIdEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %192) #17
  %194 = bitcast %"class.v8_inspector::V8InspectorSession"* %180 to %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)***
  %195 = load %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)**, %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)*** %194, align 8
  %196 = getelementptr inbounds %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)*, %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)** %195, i64 6
  %197 = load %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)*, %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)** %196, align 8
  %198 = call %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* %197(%"class.v8_inspector::V8InspectorSession"* %180, i32 %193) #17
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %78) #17
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %79) #17
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %8) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #17
  store i64 0, i64* %9, align 8
  call void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, %"class.blink::SingleCachedMetadataHandler"* null, %"class.blink::KURL"* nonnull dereferenceable(112) %8, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %10) #17
  %199 = call %"class.blink::ClassicScript"* @_ZN5blink13ClassicScript23CreateUnspecifiedScriptERKNS_16ScriptSourceCodeENS_20SanitizeScriptErrorsE(%"class.blink::ScriptSourceCode"* nonnull dereferenceable(168) %7, i32 1) #17
  call void @_ZN5blink13ClassicScript9RunScriptEPNS_14LocalDOMWindowENS_19ExecuteScriptPolicyE(%"class.blink::ClassicScript"* %199, %"class.blink::LocalDOMWindow"* %165, i32 0) #17
  call void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %79) #17
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %78) #17
  %200 = icmp eq %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* %198, null
  br i1 %200, label %206, label %201

201:                                              ; preds = %191
  %202 = bitcast %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* %198 to void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)***
  %203 = load void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)**, void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)*** %202, align 8
  %204 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)*, void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)** %203, i64 1
  %205 = load void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)*, void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)** %204, align 8
  call void %205(%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* nonnull %198) #17
  br label %206

206:                                              ; preds = %191, %201
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #17
  br label %272

207:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %74) #17
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %75) #17
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %12) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #17
  store i64 0, i64* %13, align 8
  call void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, %"class.blink::SingleCachedMetadataHandler"* null, %"class.blink::KURL"* nonnull dereferenceable(112) %12, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %14) #17
  %208 = call %"class.blink::ClassicScript"* @_ZN5blink13ClassicScript23CreateUnspecifiedScriptERKNS_16ScriptSourceCodeENS_20SanitizeScriptErrorsE(%"class.blink::ScriptSourceCode"* nonnull dereferenceable(168) %11, i32 1) #17
  call void @_ZN5blink13ClassicScript9RunScriptEPNS_14LocalDOMWindowENS_19ExecuteScriptPolicyE(%"class.blink::ClassicScript"* %208, %"class.blink::LocalDOMWindow"* %165, i32 0) #17
  call void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %75) #17
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %74) #17
  br label %272

209:                                              ; preds = %168
  %210 = call %"class.blink::DOMWrapperWorld"* @_ZN5blink18InspectorPageAgent21EnsureDOMWrapperWorldEPNS_10LocalFrameERKN3WTF6StringEb(%"class.blink::InspectorPageAgent"* %0, %"class.blink::LocalFrame"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext true)
  %211 = icmp eq %"class.blink::DOMWrapperWorld"* %210, null
  br i1 %211, label %272, label %212

212:                                              ; preds = %209
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 24, i1 false)
  %213 = call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #17
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %15, %"class.v8::Isolate"* %213) #17
  br i1 %164, label %214, label %260

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %165, i64 0, i32 0, i32 1, i32 0, i32 0
  %216 = bitcast %"class.blink::Frame"** %215 to %"class.blink::LocalFrame"**
  %217 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %216, align 8
  %218 = call %"class.v8::Isolate"* @_ZN5blink9ToIsolateEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %217) #17
  %219 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %210, i64 0, i32 2
  %220 = load i32, i32* %219, align 8
  %221 = call %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld19EnsureIsolatedWorldEPN2v87IsolateEi(%"class.v8::Isolate"* %218, i32 %220) #17
  %222 = call %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"* %217, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %221) #17
  %223 = icmp eq %"class.blink::DOMWrapperWorld"* %221, null
  br i1 %223, label %231, label %224

224:                                              ; preds = %214
  %225 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %221, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %225) #17
  %226 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %221, i64 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %224
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %221) #17
  %230 = bitcast %"class.blink::DOMWrapperWorld"* %221 to i8*
  call void @free(i8* %230) #17
  br label %231

231:                                              ; preds = %214, %224, %229
  %232 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %70, align 8
  %233 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %222, i64 0, i32 1, i32 0, i32 0, i32 0
  %234 = load %"class.v8::Context"*, %"class.v8::Context"** %233, align 8
  %235 = icmp eq %"class.v8::Context"* %234, null
  br i1 %235, label %243, label %236

236:                                              ; preds = %231
  %237 = bitcast %"class.blink::ScriptState"* %222 to %"class.v8::internal::Isolate"**
  %238 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %237, align 8
  %239 = bitcast %"class.v8::Context"* %234 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %238, i64 %240) #17
  %242 = bitcast i64* %241 to %"class.v8::Context"*
  br label %243

243:                                              ; preds = %231, %236
  %244 = phi %"class.v8::Context"* [ %242, %236 ], [ null, %231 ]
  %245 = call i32 @_ZN12v8_inspector13V8ContextInfo18executionContextIdEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %244) #17
  %246 = bitcast %"class.v8_inspector::V8InspectorSession"* %232 to %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)***
  %247 = load %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)**, %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)*** %246, align 8
  %248 = getelementptr inbounds %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)*, %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)** %247, i64 6
  %249 = load %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)*, %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* (%"class.v8_inspector::V8InspectorSession"*, i32)** %248, align 8
  %250 = call %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* %249(%"class.v8_inspector::V8InspectorSession"* %232, i32 %245) #17
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %71) #17
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %72) #17
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %17) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #17
  store i64 0, i64* %18, align 8
  call void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"* nonnull %16, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, %"class.blink::SingleCachedMetadataHandler"* null, %"class.blink::KURL"* nonnull dereferenceable(112) %17, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %19) #17
  %251 = call %"class.blink::ClassicScript"* @_ZN5blink13ClassicScript23CreateUnspecifiedScriptERKNS_16ScriptSourceCodeENS_20SanitizeScriptErrorsE(%"class.blink::ScriptSourceCode"* nonnull dereferenceable(168) %16, i32 1) #17
  %252 = load i32, i32* %219, align 8
  %253 = call %"class.v8::Value"* @_ZN5blink13ClassicScript38RunScriptInIsolatedWorldAndReturnValueEPNS_14LocalDOMWindowEi(%"class.blink::ClassicScript"* %251, %"class.blink::LocalDOMWindow"* %165, i32 %252) #17
  call void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %72) #17
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %71) #17
  %254 = icmp eq %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* %250, null
  br i1 %254, label %265, label %255

255:                                              ; preds = %243
  %256 = bitcast %"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* %250 to void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)***
  %257 = load void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)**, void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)*** %256, align 8
  %258 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)*, void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)** %257, i64 1
  %259 = load void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)*, void (%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"*)** %258, align 8
  call void %259(%"class.v8_inspector::V8InspectorSession::CommandLineAPIScope"* nonnull %250) #17
  br label %265

260:                                              ; preds = %212
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %67) #17
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %68) #17
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %21) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #17
  store i64 0, i64* %22, align 8
  call void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"* nonnull %20, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, %"class.blink::SingleCachedMetadataHandler"* null, %"class.blink::KURL"* nonnull dereferenceable(112) %21, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %23) #17
  %261 = call %"class.blink::ClassicScript"* @_ZN5blink13ClassicScript23CreateUnspecifiedScriptERKNS_16ScriptSourceCodeENS_20SanitizeScriptErrorsE(%"class.blink::ScriptSourceCode"* nonnull dereferenceable(168) %20, i32 1) #17
  %262 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %210, i64 0, i32 2
  %263 = load i32, i32* %262, align 8
  %264 = call %"class.v8::Value"* @_ZN5blink13ClassicScript38RunScriptInIsolatedWorldAndReturnValueEPNS_14LocalDOMWindowEi(%"class.blink::ClassicScript"* %261, %"class.blink::LocalDOMWindow"* %165, i32 %263) #17
  call void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %21) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %68) #17
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %67) #17
  br label %265

265:                                              ; preds = %255, %243, %260
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #17
  %266 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %210, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %266) #17
  %267 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %210, i64 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %265
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %210) #17
  %271 = bitcast %"class.blink::DOMWrapperWorld"* %210 to i8*
  call void @free(i8* %271) #17
  br label %272

272:                                              ; preds = %209, %270, %265, %206, %207
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #17
  br label %288

288:                                              ; preds = %272, %284, %287
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #17
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #17
  br label %304

304:                                              ; preds = %288, %300, %303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17
  %305 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 1
  %306 = icmp eq %"class.WTF::String"* %305, %44
  br i1 %306, label %83, label %92

307:                                              ; preds = %88
  %308 = bitcast %"class.blink::ScriptSourceCode"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %308) #17
  %309 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %25, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %309) #17
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %25) #17
  %310 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #17
  store i64 0, i64* %26, align 8
  call void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"* nonnull %24, %"class.WTF::String"* dereferenceable(8) %84, i32 0, %"class.blink::SingleCachedMetadataHandler"* null, %"class.blink::KURL"* nonnull dereferenceable(112) %25, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %27) #17
  %311 = call %"class.blink::ClassicScript"* @_ZN5blink13ClassicScript23CreateUnspecifiedScriptERKNS_16ScriptSourceCodeENS_20SanitizeScriptErrorsE(%"class.blink::ScriptSourceCode"* nonnull dereferenceable(168) %24, i32 1) #17
  %312 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #17
  call void @_ZN5blink13ClassicScript9RunScriptEPNS_14LocalDOMWindowENS_19ExecuteScriptPolicyE(%"class.blink::ClassicScript"* %311, %"class.blink::LocalDOMWindow"* %312, i32 0) #17
  call void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"* nonnull %24) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %309) #17
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %308) #17
  br label %313

313:                                              ; preds = %83, %307, %88
  %314 = load %"class.WTF::String"*, %"class.WTF::String"** %33, align 8
  %315 = icmp eq %"class.WTF::String"* %314, null
  br i1 %315, label %349, label %316, !prof !2

316:                                              ; preds = %313
  %317 = bitcast %"class.WTF::String"* %314 to i8*
  %318 = load i32, i32* %34, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %347, label %320, !prof !3

320:                                              ; preds = %316
  %321 = zext i32 %318 to i64
  %322 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %314, i64 %321
  br label %323

323:                                              ; preds = %341, %320
  %324 = phi %"class.WTF::String"* [ %342, %341 ], [ %314, %320 ]
  %325 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %324, i64 0, i32 0, i32 0
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %341, label %328

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #17
  br label %341

341:                                              ; preds = %340, %337, %323
  %342 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %324, i64 1
  %343 = icmp eq %"class.WTF::String"* %342, %322
  br i1 %343, label %344, label %323

344:                                              ; preds = %341
  store i32 0, i32* %34, align 4
  %345 = bitcast %"class.WTF::Vector.46"* %3 to i8**
  %346 = load i8*, i8** %345, align 8
  br label %347

347:                                              ; preds = %344, %316
  %348 = phi i8* [ %346, %344 ], [ %317, %316 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %348) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %33, align 8
  br label %349

349:                                              ; preds = %313, %347
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #17
  br label %350

350:                                              ; preds = %2, %349
  ret void
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare i32 @_ZN12v8_inspector13V8ContextInfo18executionContextIdEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.blink::ClassicScript"* @_ZN5blink13ClassicScript23CreateUnspecifiedScriptERKNS_16ScriptSourceCodeENS_20SanitizeScriptErrorsE(%"class.blink::ScriptSourceCode"* dereferenceable(168), i32) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextPosition"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink13ClassicScript9RunScriptEPNS_14LocalDOMWindowENS_19ExecuteScriptPolicyE(%"class.blink::ClassicScript"*, %"class.blink::LocalDOMWindow"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #2

declare %"class.blink::ScriptState"* @_ZN5blink13ToScriptStateEPNS_10LocalFrameERNS_15DOMWrapperWorldE(%"class.blink::LocalFrame"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.blink::DOMWrapperWorld"* @_ZN5blink15DOMWrapperWorld19EnsureIsolatedWorldEPN2v87IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN5blink9ToIsolateEPKNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN5blink13ClassicScript38RunScriptInIsolatedWorldAndReturnValueEPNS_14LocalDOMWindowEi(%"class.blink::ClassicScript"*, %"class.blink::LocalDOMWindow"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent26DomContentLoadedEventFiredEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %4 = add i64 %3, -9223372036854775807
  %5 = icmp ult i64 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = sitofp i64 %3 to double
  %8 = fdiv double %7, 1.000000e+06
  br label %12

9:                                                ; preds = %2
  %10 = icmp slt i64 %3, 0
  %11 = select i1 %10, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %11, %9 ], [ %8, %6 ]
  %14 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %18 = icmp eq %"class.blink::LocalFrame"* %17, %1
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %20, align 8
  tail call void @_ZN5blink8protocol4Page8Frontend20domContentEventFiredEd(%"class.blink::protocol::Page::Frontend"* %21, double %13) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 10, i32 2, i32 0, i32 0
  %24 = load %"class.blink::DocumentLoader"*, %"class.blink::DocumentLoader"** %23, align 8
  tail call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %0, %"class.blink::LocalFrame"* %1, %"class.blink::DocumentLoader"* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), double %13)
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN5blink8protocol4Page8Frontend20domContentEventFiredEd(%"class.blink::protocol::Page::Frontend"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent14LoadEventFiredEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %4 = add i64 %3, -9223372036854775807
  %5 = icmp ult i64 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = sitofp i64 %3 to double
  %8 = fdiv double %7, 1.000000e+06
  br label %12

9:                                                ; preds = %2
  %10 = icmp slt i64 %3, 0
  %11 = select i1 %10, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi double [ %11, %9 ], [ %8, %6 ]
  %14 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %18 = icmp eq %"class.blink::LocalFrame"* %17, %1
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %20, align 8
  tail call void @_ZN5blink8protocol4Page8Frontend14loadEventFiredEd(%"class.blink::protocol::Page::Frontend"* %21, double %13) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 10, i32 2, i32 0, i32 0
  %24 = load %"class.blink::DocumentLoader"*, %"class.blink::DocumentLoader"** %23, align 8
  tail call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %0, %"class.blink::LocalFrame"* %1, %"class.blink::DocumentLoader"* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), double %13)
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend14loadEventFiredEd(%"class.blink::protocol::Page::Frontend"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent14WillCommitLoadEPNS_10LocalFrameEPNS_14DocumentLoaderE(%"class.blink::InspectorPageAgent"* nocapture, %"class.blink::LocalFrame"* nocapture readnone, %"class.blink::DocumentLoader"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %2, i64 0, i32 21, i32 0, i32 0
  %6 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %9, align 8
  %11 = icmp eq %"class.blink::LocalFrame"* %6, %10
  br i1 %11, label %12, label %71

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #17
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %23
  tail call void @llvm.trap() #17
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %33, %18, %12
  %36 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %37 = bitcast %"class.WTF::String"* %14 to i64*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store i64 %36, i64* %37, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #17
  br label %54

54:                                               ; preds = %35, %50, %53
  %55 = bitcast %"class.WTF::String"* %13 to i64*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 0, i64* %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #17
  br label %71

71:                                               ; preds = %54, %67, %70, %3
  %72 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %72, align 8
  %74 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %75 = tail call %"class.blink::protocol::Page::Frame"* @_ZN5blink18InspectorPageAgent19BuildObjectForFrameEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* undef, %"class.blink::LocalFrame"* %74)
  %76 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #17
  %77 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page18NavigationTypeEnum10NavigationE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page18NavigationTypeEnum10NavigationE, i64 0, i64 0), i64 %77) #17
  call void @_ZN5blink8protocol4Page8Frontend14frameNavigatedENSt3__110unique_ptrINS1_5FrameENS3_14default_deleteIS5_EEEERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"* %73, %"class.blink::protocol::Page::Frame"* nonnull %75, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #17
  br label %94

94:                                               ; preds = %71, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #17
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend14frameNavigatedENSt3__110unique_ptrINS1_5FrameENS3_14default_deleteIS5_EEEERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frame"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::protocol::Page::Frame"* @_ZN5blink18InspectorPageAgent19BuildObjectForFrameEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readnone, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.url::Origin", align 8
  %9 = alloca %"class.base::Time", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.std::__1::unique_ptr.3492", align 8
  %15 = alloca %"class.WTF::HashMap.1483", align 8
  %16 = alloca %"class.std::__1::unique_ptr.3481", align 8
  %17 = alloca %"class.blink::KURL", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::StringAppend.3729", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 10, i32 2, i32 0, i32 0
  %24 = load %"class.blink::DocumentLoader"*, %"class.blink::DocumentLoader"** %23, align 8
  %25 = tail call i8* @_Znwm(i64 168) #19
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page5FrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 16
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 24
  %31 = getelementptr inbounds i8, i8* %25, i64 48
  %32 = getelementptr inbounds i8, i8* %25, i64 72
  %33 = getelementptr inbounds i8, i8* %25, i64 112
  %34 = bitcast i8* %33 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 120
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds i8, i8* %25, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 17, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 17, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 33, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 40, i1 false) #17
  %37 = bitcast i8* %25 to %"class.blink::protocol::Page::Frame"*
  %38 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %39 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %38) #17
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #17
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #17
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %2
  %59 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %60 = bitcast i8* %27 to i64*
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store i64 %59, i64* %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #17
  br label %76

76:                                               ; preds = %58, %72, %75
  %77 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory8LoaderIdEPNS_14DocumentLoaderE(%"class.blink::DocumentLoader"* %24) #17
  %78 = getelementptr inbounds i8, i8* %25, i64 32
  %79 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #17
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !3

94:                                               ; preds = %85
  tail call void @llvm.trap() #17
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %95, %80, %76
  %98 = ptrtoint %"class.WTF::StringImpl"* %77 to i64
  %99 = bitcast i8* %78 to i64*
  %100 = bitcast i8* %78 to %"class.WTF::StringImpl"**
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  store i64 %98, i64* %99, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #17
  br label %116

116:                                              ; preds = %97, %112, %115
  %117 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %117) #17
  %118 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader3UrlEv(%"class.blink::DocumentLoader"* %24) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 112, i1 false) #17, !alias.scope !43
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %17, %"class.blink::KURL"* dereferenceable(112) %118) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %17) #17
  %119 = getelementptr inbounds i8, i8* %25, i64 56
  %120 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %17, i64 0, i32 4, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %140, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i33
  %132 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %131, i33 1) #17
  %133 = extractvalue { i33, i1 } %132, 1
  %134 = extractvalue { i33, i1 } %132, 0
  %135 = icmp slt i33 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %138, !prof !3

137:                                              ; preds = %128
  call void @llvm.trap() #17
  unreachable

138:                                              ; preds = %128
  %139 = trunc i33 %134 to i32
  store i32 %139, i32* %129, align 4
  br label %140

140:                                              ; preds = %138, %123, %116
  %141 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  %142 = bitcast i8* %119 to i64*
  %143 = bitcast i8* %119 to %"class.WTF::StringImpl"**
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  store i64 %141, i64* %142, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #17
  br label %159

159:                                              ; preds = %140, %155, %158
  %160 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #17
  %161 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader3UrlEv(%"class.blink::DocumentLoader"* %24) #17
  %162 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %161) #17
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %163, align 8
  %164 = call %"class.WTF::StringImpl"* @_ZN5blink13network_utils20GetDomainAndRegistryERKN3WTF6StringENS0_21PrivateRegistryFilterE(%"class.WTF::String"* nonnull dereferenceable(8) %18, i32 0) #17
  %165 = getelementptr inbounds i8, i8* %25, i64 80
  %166 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %166, label %184, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i33
  %176 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %175, i33 1) #17
  %177 = extractvalue { i33, i1 } %176, 1
  %178 = extractvalue { i33, i1 } %176, 0
  %179 = icmp slt i33 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %181, label %182, !prof !3

181:                                              ; preds = %172
  call void @llvm.trap() #17
  unreachable

182:                                              ; preds = %172
  %183 = trunc i33 %178 to i32
  store i32 %183, i32* %173, align 4
  br label %184

184:                                              ; preds = %182, %167, %159
  %185 = ptrtoint %"class.WTF::StringImpl"* %164 to i64
  %186 = bitcast i8* %165 to i64*
  %187 = bitcast i8* %165 to %"class.WTF::StringImpl"**
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  store i64 %185, i64* %186, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #17
  br label %203

203:                                              ; preds = %184, %199, %202
  %204 = load %"class.blink::DocumentLoader"*, %"class.blink::DocumentLoader"** %23, align 8
  %205 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14DocumentLoader8MimeTypeEv(%"class.blink::DocumentLoader"* %204) #17
  %206 = getelementptr inbounds i8, i8* %25, i64 96
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %205, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %227, label %210

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #17
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !3

224:                                              ; preds = %215
  call void @llvm.trap() #17
  unreachable

225:                                              ; preds = %215
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %216, align 4
  br label %227

227:                                              ; preds = %225, %210, %203
  %228 = ptrtoint %"class.WTF::StringImpl"* %208 to i64
  %229 = bitcast i8* %206 to i64*
  %230 = bitcast i8* %206 to %"class.WTF::StringImpl"**
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  store i64 %228, i64* %229, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %246, label %233

233:                                              ; preds = %227
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %231) #17
  br label %246

246:                                              ; preds = %227, %242, %245
  %247 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader3UrlEv(%"class.blink::DocumentLoader"* %24) #17
  %248 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112) %247) #17
  %249 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin11ToRawStringEv(%"class.blink::SecurityOrigin"* %248) #17
  %250 = getelementptr inbounds i8, i8* %25, i64 88
  %251 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %251, label %269, label %252

252:                                              ; preds = %246
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %269

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = zext i32 %259 to i33
  %261 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %260, i33 1) #17
  %262 = extractvalue { i33, i1 } %261, 1
  %263 = extractvalue { i33, i1 } %261, 0
  %264 = icmp slt i33 %263, 0
  %265 = or i1 %262, %264
  br i1 %265, label %266, label %267, !prof !3

266:                                              ; preds = %257
  call void @llvm.trap() #17
  unreachable

267:                                              ; preds = %257
  %268 = trunc i33 %263 to i32
  store i32 %268, i32* %258, align 4
  br label %269

269:                                              ; preds = %267, %252, %246
  %270 = ptrtoint %"class.WTF::StringImpl"* %249 to i64
  %271 = bitcast i8* %250 to i64*
  %272 = bitcast i8* %250 to %"class.WTF::StringImpl"**
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  store i64 %270, i64* %271, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %269
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #17
  br label %288

288:                                              ; preds = %269, %284, %287
  %289 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #17
  %290 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %289, i64 0, i32 1, i32 6, i32 12
  %291 = load i32, i32* %290, align 4
  %292 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292)
  switch i32 %291, label %296 [
    i32 0, label %297
    i32 3, label %293
    i32 2, label %294
    i32 1, label %295
  ]

293:                                              ; preds = %288
  br label %297

294:                                              ; preds = %288
  br label %297

295:                                              ; preds = %288
  br label %297

296:                                              ; preds = %288
  unreachable

297:                                              ; preds = %288, %293, %294, %295
  %298 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page21SecureContextTypeEnum16InsecureAncestorE, i64 0, i64 0), %293 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page21SecureContextTypeEnum14InsecureSchemeE, i64 0, i64 0), %294 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page21SecureContextTypeEnum15SecureLocalhostE, i64 0, i64 0), %295 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page21SecureContextTypeEnum6SecureE, i64 0, i64 0), %288 ]
  %299 = call i64 @strlen(i8* nonnull %298) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %298, i64 %299) #17
  %300 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292)
  %302 = getelementptr inbounds i8, i8* %25, i64 136
  %303 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %303, label %321, label %304

304:                                              ; preds = %297
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %321

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = zext i32 %311 to i33
  %313 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %312, i33 1) #17
  %314 = extractvalue { i33, i1 } %313, 1
  %315 = extractvalue { i33, i1 } %313, 0
  %316 = icmp slt i33 %315, 0
  %317 = or i1 %314, %316
  br i1 %317, label %318, label %319, !prof !3

318:                                              ; preds = %309
  call void @llvm.trap() #17
  unreachable

319:                                              ; preds = %309
  %320 = trunc i33 %315 to i32
  store i32 %320, i32* %310, align 4
  br label %321

321:                                              ; preds = %319, %304, %297
  %322 = ptrtoint %"class.WTF::StringImpl"* %301 to i64
  %323 = bitcast i8* %302 to i64*
  %324 = bitcast i8* %302 to %"class.WTF::StringImpl"**
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  store i64 %322, i64* %323, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %340, label %327

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #17
  br label %340

340:                                              ; preds = %321, %336, %339
  %341 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #17
  %342 = icmp eq %"class.blink::LocalDOMWindow"* %341, null
  %343 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %341, i64 0, i32 1
  %344 = bitcast %"class.blink::ExecutionContext.base"* %343 to %"class.blink::ExecutionContext"*
  %345 = select i1 %342, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %344
  %346 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %346)
  %347 = bitcast %"class.blink::ExecutionContext"* %345 to i1 (%"class.blink::ExecutionContext"*)***
  %348 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %347, align 8
  %349 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %348, i64 42
  %350 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %349, align 8
  %351 = call zeroext i1 %350(%"class.blink::ExecutionContext"* %345) #17
  br i1 %351, label %356, label %352

352:                                              ; preds = %340
  %353 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %354 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"* %345, i32 75, i32 1, %"class.WTF::String"* dereferenceable(8) %353) #17
  %355 = select i1 %354, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page34CrossOriginIsolatedContextTypeEnum11NotIsolatedE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page34CrossOriginIsolatedContextTypeEnum26NotIsolatedFeatureDisabledE, i64 0, i64 0)
  br label %356

356:                                              ; preds = %352, %340
  %357 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page34CrossOriginIsolatedContextTypeEnum8IsolatedE, i64 0, i64 0), %340 ], [ %355, %352 ]
  %358 = call i64 @strlen(i8* nonnull %357) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %357, i64 %358) #17
  %359 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %346)
  %361 = getelementptr inbounds i8, i8* %25, i64 144
  %362 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %362, label %380, label %363

363:                                              ; preds = %356
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %380

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  %371 = zext i32 %370 to i33
  %372 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %371, i33 1) #17
  %373 = extractvalue { i33, i1 } %372, 1
  %374 = extractvalue { i33, i1 } %372, 0
  %375 = icmp slt i33 %374, 0
  %376 = or i1 %373, %375
  br i1 %376, label %377, label %378, !prof !3

377:                                              ; preds = %368
  call void @llvm.trap() #17
  unreachable

378:                                              ; preds = %368
  %379 = trunc i33 %374 to i32
  store i32 %379, i32* %369, align 4
  br label %380

380:                                              ; preds = %378, %363, %356
  %381 = ptrtoint %"class.WTF::StringImpl"* %360 to i64
  %382 = bitcast i8* %361 to i64*
  %383 = bitcast i8* %361 to %"class.WTF::StringImpl"**
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  store i64 %381, i64* %382, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %384, null
  br i1 %385, label %399, label %386

386:                                              ; preds = %380
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 0
  %392 = load i32, i32* %391, align 4
  br i1 %390, label %393, label %395

393:                                              ; preds = %386
  %394 = add i32 %392, -1
  store i32 %394, i32* %391, align 4
  br label %395

395:                                              ; preds = %393, %386
  %396 = phi i32 [ %394, %393 ], [ %392, %386 ]
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %384) #17
  br label %399

399:                                              ; preds = %380, %395, %398
  %400 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #17
  %401 = call i8* @_Znwm(i64 24) #19
  %402 = bitcast i8* %401 to %"class.std::__1::vector.3466"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %401, i8 0, i64 24, i1 false) #17
  %403 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_shared_array_buffer_enabled_E, align 1, !range !4
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %405, label %407

405:                                              ; preds = %399
  %406 = call zeroext i1 @_ZN5blink5Agent21IsCrossOriginIsolatedEv() #17
  br i1 %406, label %407, label %443

407:                                              ; preds = %405, %399
  %408 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %408) #17
  %409 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page20GatedAPIFeaturesEnum18SharedArrayBuffersE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page20GatedAPIFeaturesEnum18SharedArrayBuffersE, i64 0, i64 0), i64 %409) #17
  %410 = getelementptr inbounds i8, i8* %401, i64 8
  %411 = bitcast i8* %410 to %"class.WTF::String"**
  %412 = load %"class.WTF::String"*, %"class.WTF::String"** %411, align 8
  %413 = getelementptr inbounds i8, i8* %401, i64 16
  %414 = bitcast i8* %413 to %"class.WTF::String"**
  %415 = load %"class.WTF::String"*, %"class.WTF::String"** %414, align 8
  %416 = icmp ult %"class.WTF::String"* %412, %415
  br i1 %416, label %417, label %425

417:                                              ; preds = %407
  %418 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %419 = bitcast %"class.WTF::String"* %3 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = bitcast %"class.WTF::String"* %412 to i64*
  store i64 %420, i64* %421, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %418, align 8
  %422 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %412, i64 1
  %423 = ptrtoint %"class.WTF::String"* %422 to i64
  %424 = bitcast i8* %410 to i64*
  store i64 %423, i64* %424, align 8
  br label %442

425:                                              ; preds = %407
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.3466"* nonnull %402, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %426 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %427 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %426, align 8
  %428 = icmp eq %"class.WTF::StringImpl"* %427, null
  br i1 %428, label %442, label %429

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = load atomic i32, i32* %430 monotonic, align 4
  %432 = and i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %427, i64 0, i32 0
  %435 = load i32, i32* %434, align 4
  br i1 %433, label %436, label %438

436:                                              ; preds = %429
  %437 = add i32 %435, -1
  store i32 %437, i32* %434, align 4
  br label %438

438:                                              ; preds = %436, %429
  %439 = phi i32 [ %437, %436 ], [ %435, %429 ]
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %438
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %427) #17
  br label %442

442:                                              ; preds = %441, %438, %425, %417
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %408) #17
  br label %443

443:                                              ; preds = %442, %405
  %444 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %400, i64 0, i32 1
  %445 = bitcast %"class.blink::ExecutionContext.base"* %444 to %"class.blink::ExecutionContext"*
  %446 = call zeroext i1 @_ZNK5blink16ExecutionContext32SharedArrayBufferTransferAllowedEv(%"class.blink::ExecutionContext"* %445) #17
  br i1 %446, label %447, label %483

447:                                              ; preds = %443
  %448 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %448) #17
  %449 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page20GatedAPIFeaturesEnum33SharedArrayBuffersTransferAllowedE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page20GatedAPIFeaturesEnum33SharedArrayBuffersTransferAllowedE, i64 0, i64 0), i64 %449) #17
  %450 = getelementptr inbounds i8, i8* %401, i64 8
  %451 = bitcast i8* %450 to %"class.WTF::String"**
  %452 = load %"class.WTF::String"*, %"class.WTF::String"** %451, align 8
  %453 = getelementptr inbounds i8, i8* %401, i64 16
  %454 = bitcast i8* %453 to %"class.WTF::String"**
  %455 = load %"class.WTF::String"*, %"class.WTF::String"** %454, align 8
  %456 = icmp ult %"class.WTF::String"* %452, %455
  br i1 %456, label %457, label %465

457:                                              ; preds = %447
  %458 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %459 = bitcast %"class.WTF::String"* %4 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.WTF::String"* %452 to i64*
  store i64 %460, i64* %461, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %458, align 8
  %462 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %452, i64 1
  %463 = ptrtoint %"class.WTF::String"* %462 to i64
  %464 = bitcast i8* %450 to i64*
  store i64 %463, i64* %464, align 8
  br label %482

465:                                              ; preds = %447
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.3466"* nonnull %402, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %466 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %466, align 8
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %482, label %469

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = load atomic i32, i32* %470 monotonic, align 4
  %472 = and i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 0
  %475 = load i32, i32* %474, align 4
  br i1 %473, label %476, label %478

476:                                              ; preds = %469
  %477 = add i32 %475, -1
  store i32 %477, i32* %474, align 4
  br label %478

478:                                              ; preds = %476, %469
  %479 = phi i32 [ %477, %476 ], [ %475, %469 ]
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %467) #17
  br label %482

482:                                              ; preds = %481, %478, %465, %457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %448) #17
  br label %483

483:                                              ; preds = %443, %482
  %484 = ptrtoint i8* %401 to i64
  %485 = getelementptr inbounds i8, i8* %25, i64 152
  %486 = bitcast i8* %485 to %"class.std::__1::vector.3466"**
  %487 = load %"class.std::__1::vector.3466"*, %"class.std::__1::vector.3466"** %486, align 8
  %488 = bitcast i8* %485 to i64*
  store i64 %484, i64* %488, align 8
  %489 = icmp eq %"class.std::__1::vector.3466"* %487, null
  br i1 %489, label %527, label %490

490:                                              ; preds = %483
  %491 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %487, i64 0, i32 0, i32 0
  %492 = load %"class.WTF::String"*, %"class.WTF::String"** %491, align 8
  %493 = icmp eq %"class.WTF::String"* %492, null
  br i1 %493, label %525, label %494

494:                                              ; preds = %490
  %495 = bitcast %"class.WTF::String"* %492 to i8*
  %496 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %487, i64 0, i32 0, i32 1
  %497 = load %"class.WTF::String"*, %"class.WTF::String"** %496, align 8
  %498 = icmp eq %"class.WTF::String"* %497, %492
  br i1 %498, label %523, label %499

499:                                              ; preds = %494, %518
  %500 = phi %"class.WTF::String"* [ %501, %518 ], [ %497, %494 ]
  %501 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %500, i64 -1
  %502 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %501, i64 0, i32 0, i32 0
  %503 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %502, align 8
  %504 = icmp eq %"class.WTF::StringImpl"* %503, null
  br i1 %504, label %518, label %505

505:                                              ; preds = %499
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %503, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load atomic i32, i32* %506 monotonic, align 4
  %508 = and i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %503, i64 0, i32 0
  %511 = load i32, i32* %510, align 4
  br i1 %509, label %512, label %514

512:                                              ; preds = %505
  %513 = add i32 %511, -1
  store i32 %513, i32* %510, align 4
  br label %514

514:                                              ; preds = %512, %505
  %515 = phi i32 [ %513, %512 ], [ %511, %505 ]
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %517, label %518

517:                                              ; preds = %514
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %503) #17
  br label %518

518:                                              ; preds = %517, %514, %499
  %519 = icmp eq %"class.WTF::String"* %501, %492
  br i1 %519, label %520, label %499

520:                                              ; preds = %518
  %521 = bitcast %"class.std::__1::vector.3466"* %487 to i8**
  %522 = load i8*, i8** %521, align 8
  br label %523

523:                                              ; preds = %520, %494
  %524 = phi i8* [ %522, %520 ], [ %495, %494 ]
  store %"class.WTF::String"* %492, %"class.WTF::String"** %496, align 8
  call void @_ZdlPv(i8* %524) #19
  br label %525

525:                                              ; preds = %523, %490
  %526 = bitcast %"class.std::__1::vector.3466"* %487 to i8*
  call void @_ZdlPv(i8* %526) #19
  br label %527

527:                                              ; preds = %483, %525
  br i1 %362, label %541, label %528

528:                                              ; preds = %527
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %534 = load i32, i32* %533, align 4
  br i1 %532, label %535, label %537

535:                                              ; preds = %528
  %536 = add i32 %534, -1
  store i32 %536, i32* %533, align 4
  br label %537

537:                                              ; preds = %535, %528
  %538 = phi i32 [ %536, %535 ], [ %534, %528 ]
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %541

540:                                              ; preds = %537
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #17
  br label %541

541:                                              ; preds = %527, %537, %540
  br i1 %303, label %555, label %542

542:                                              ; preds = %541
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = and i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %548 = load i32, i32* %547, align 4
  br i1 %546, label %549, label %551

549:                                              ; preds = %542
  %550 = add i32 %548, -1
  store i32 %550, i32* %547, align 4
  br label %551

551:                                              ; preds = %549, %542
  %552 = phi i32 [ %550, %549 ], [ %548, %542 ]
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %555

554:                                              ; preds = %551
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #17
  br label %555

555:                                              ; preds = %541, %551, %554
  br i1 %251, label %569, label %556

556:                                              ; preds = %555
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  br i1 %560, label %563, label %565

563:                                              ; preds = %556
  %564 = add i32 %562, -1
  store i32 %564, i32* %561, align 4
  br label %565

565:                                              ; preds = %563, %556
  %566 = phi i32 [ %564, %563 ], [ %562, %556 ]
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #17
  br label %569

569:                                              ; preds = %555, %565, %568
  %570 = icmp eq %"class.blink::SecurityOrigin"* %248, null
  br i1 %570, label %578, label %571

571:                                              ; preds = %569
  %572 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %248, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %572) #17
  %573 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %248, i64 0, i32 0, i32 0, i32 0, i32 0
  %574 = load i32, i32* %573, align 4
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %578

576:                                              ; preds = %571
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %248) #17
  %577 = bitcast %"class.blink::SecurityOrigin"* %248 to i8*
  call void @free(i8* %577) #17
  br label %578

578:                                              ; preds = %569, %571, %576
  br i1 %166, label %592, label %579

579:                                              ; preds = %578
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %581 = load atomic i32, i32* %580 monotonic, align 4
  %582 = and i32 %581, 2
  %583 = icmp eq i32 %582, 0
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %585 = load i32, i32* %584, align 4
  br i1 %583, label %586, label %588

586:                                              ; preds = %579
  %587 = add i32 %585, -1
  store i32 %587, i32* %584, align 4
  br label %588

588:                                              ; preds = %586, %579
  %589 = phi i32 [ %587, %586 ], [ %585, %579 ]
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %591, label %592

591:                                              ; preds = %588
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #17
  br label %592

592:                                              ; preds = %578, %588, %591
  %593 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %594 = icmp eq %"class.WTF::StringImpl"* %593, null
  br i1 %594, label %608, label %595

595:                                              ; preds = %592
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %597 = load atomic i32, i32* %596 monotonic, align 4
  %598 = and i32 %597, 2
  %599 = icmp eq i32 %598, 0
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 0
  %601 = load i32, i32* %600, align 4
  br i1 %599, label %602, label %604

602:                                              ; preds = %595
  %603 = add i32 %601, -1
  store i32 %603, i32* %600, align 4
  br label %604

604:                                              ; preds = %602, %595
  %605 = phi i32 [ %603, %602 ], [ %601, %595 ]
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %607, label %608

607:                                              ; preds = %604
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %593) #17
  br label %608

608:                                              ; preds = %592, %604, %607
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %117) #17
  br i1 %79, label %622, label %609

609:                                              ; preds = %608
  %610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load atomic i32, i32* %610 monotonic, align 4
  %612 = and i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %615 = load i32, i32* %614, align 4
  br i1 %613, label %616, label %618

616:                                              ; preds = %609
  %617 = add i32 %615, -1
  store i32 %617, i32* %614, align 4
  br label %618

618:                                              ; preds = %616, %609
  %619 = phi i32 [ %617, %616 ], [ %615, %609 ]
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %622

621:                                              ; preds = %618
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #17
  br label %622

622:                                              ; preds = %608, %618, %621
  br i1 %40, label %636, label %623

623:                                              ; preds = %622
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %625 = load atomic i32, i32* %624 monotonic, align 4
  %626 = and i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %629 = load i32, i32* %628, align 4
  br i1 %627, label %630, label %632

630:                                              ; preds = %623
  %631 = add i32 %629, -1
  store i32 %631, i32* %628, align 4
  br label %632

632:                                              ; preds = %630, %623
  %633 = phi i32 [ %631, %630 ], [ %629, %623 ]
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %636

635:                                              ; preds = %632
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #17
  br label %636

636:                                              ; preds = %635, %632, %622
  %637 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader3UrlEv(%"class.blink::DocumentLoader"* %24) #17
  %638 = call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* %637) #17
  br i1 %638, label %639, label %820

639:                                              ; preds = %636
  %640 = bitcast %"class.WTF::StringAppend.3729"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %640) #17
  %641 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader3UrlEv(%"class.blink::DocumentLoader"* %24) #17
  %642 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"* %641) #17
  %643 = icmp eq %"class.WTF::StringImpl"* %642, null
  br i1 %643, label %687, label %644

644:                                              ; preds = %639
  %645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %646 = load atomic i32, i32* %645 monotonic, align 4
  %647 = and i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 0
  %650 = load i32, i32* %649, align 4
  br i1 %648, label %651, label %661

651:                                              ; preds = %644
  %652 = zext i32 %650 to i33
  %653 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %652, i33 1) #17
  %654 = extractvalue { i33, i1 } %653, 1
  %655 = extractvalue { i33, i1 } %653, 0
  %656 = icmp slt i33 %655, 0
  %657 = or i1 %654, %656
  br i1 %657, label %658, label %659, !prof !3

658:                                              ; preds = %651
  call void @llvm.trap() #17
  unreachable

659:                                              ; preds = %651
  %660 = trunc i33 %655 to i32
  store i32 %660, i32* %649, align 4
  br label %661

661:                                              ; preds = %659, %644
  %662 = phi i32 [ %660, %659 ], [ %650, %644 ]
  %663 = load atomic i32, i32* %645 monotonic, align 4
  %664 = and i32 %663, 2
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %676

666:                                              ; preds = %661
  %667 = zext i32 %662 to i33
  %668 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %667, i33 1) #17
  %669 = extractvalue { i33, i1 } %668, 1
  %670 = extractvalue { i33, i1 } %668, 0
  %671 = icmp slt i33 %670, 0
  %672 = or i1 %669, %671
  br i1 %672, label %673, label %674, !prof !3

673:                                              ; preds = %666
  call void @llvm.trap() #17
  unreachable

674:                                              ; preds = %666
  %675 = trunc i33 %670 to i32
  store i32 %675, i32* %649, align 4
  br label %676

676:                                              ; preds = %674, %661
  %677 = phi i32 [ %675, %674 ], [ %662, %661 ]
  %678 = load atomic i32, i32* %645 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %683

681:                                              ; preds = %676
  %682 = add i32 %677, -1
  store i32 %682, i32* %649, align 4
  br label %683

683:                                              ; preds = %681, %676
  %684 = phi i32 [ %682, %681 ], [ %677, %676 ]
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %687

686:                                              ; preds = %683
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %642) #17
  br label %687

687:                                              ; preds = %639, %683, %686
  %688 = getelementptr inbounds %"class.WTF::StringAppend.3729", %"class.WTF::StringAppend.3729"* %19, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8** %688, align 8
  %689 = getelementptr inbounds %"class.WTF::StringAppend.3729", %"class.WTF::StringAppend.3729"* %19, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %642, %"class.WTF::StringImpl"** %689, align 8
  %690 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.3729"* nonnull %19)
  %691 = icmp eq %"class.WTF::StringImpl"* %690, null
  br i1 %691, label %709, label %692

692:                                              ; preds = %687
  %693 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %694 = load atomic i32, i32* %693 monotonic, align 4
  %695 = and i32 %694, 2
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %729

697:                                              ; preds = %692
  %698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 0
  %699 = load i32, i32* %698, align 4
  %700 = zext i32 %699 to i33
  %701 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %700, i33 1) #17
  %702 = extractvalue { i33, i1 } %701, 1
  %703 = extractvalue { i33, i1 } %701, 0
  %704 = icmp slt i33 %703, 0
  %705 = or i1 %702, %704
  br i1 %705, label %706, label %707, !prof !3

706:                                              ; preds = %697
  call void @llvm.trap() #17
  unreachable

707:                                              ; preds = %697
  %708 = trunc i33 %703 to i32
  store i32 %708, i32* %698, align 4
  br label %729

709:                                              ; preds = %687
  %710 = getelementptr inbounds i8, i8* %25, i64 64
  %711 = bitcast i8* %32 to i64*
  %712 = bitcast i8* %32 to %"class.WTF::StringImpl"**
  %713 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %712, align 8
  store i64 0, i64* %711, align 8
  %714 = icmp eq %"class.WTF::StringImpl"* %713, null
  br i1 %714, label %728, label %715

715:                                              ; preds = %709
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load atomic i32, i32* %716 monotonic, align 4
  %718 = and i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %713, i64 0, i32 0
  %721 = load i32, i32* %720, align 4
  br i1 %719, label %722, label %724

722:                                              ; preds = %715
  %723 = add i32 %721, -1
  store i32 %723, i32* %720, align 4
  br label %724

724:                                              ; preds = %722, %715
  %725 = phi i32 [ %723, %722 ], [ %721, %715 ]
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %727, label %728

727:                                              ; preds = %724
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %713) #17
  br label %728

728:                                              ; preds = %709, %724, %727
  store i8 1, i8* %710, align 8
  br label %789

729:                                              ; preds = %707, %692
  %730 = getelementptr inbounds i8, i8* %25, i64 64
  %731 = load atomic i32, i32* %693 monotonic, align 4
  %732 = and i32 %731, 2
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %746

734:                                              ; preds = %729
  %735 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 0
  %736 = load i32, i32* %735, align 4
  %737 = zext i32 %736 to i33
  %738 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %737, i33 1) #17
  %739 = extractvalue { i33, i1 } %738, 1
  %740 = extractvalue { i33, i1 } %738, 0
  %741 = icmp slt i33 %740, 0
  %742 = or i1 %739, %741
  br i1 %742, label %743, label %744, !prof !3

743:                                              ; preds = %734
  call void @llvm.trap() #17
  unreachable

744:                                              ; preds = %734
  %745 = trunc i33 %740 to i32
  store i32 %745, i32* %735, align 4
  br label %746

746:                                              ; preds = %744, %729
  %747 = ptrtoint %"class.WTF::StringImpl"* %690 to i64
  %748 = bitcast i8* %32 to i64*
  %749 = bitcast i8* %32 to %"class.WTF::StringImpl"**
  %750 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %749, align 8
  store i64 %747, i64* %748, align 8
  %751 = icmp eq %"class.WTF::StringImpl"* %750, null
  br i1 %751, label %765, label %752

752:                                              ; preds = %746
  %753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %754 = load atomic i32, i32* %753 monotonic, align 4
  %755 = and i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 0
  %758 = load i32, i32* %757, align 4
  br i1 %756, label %759, label %761

759:                                              ; preds = %752
  %760 = add i32 %758, -1
  store i32 %760, i32* %757, align 4
  br label %761

761:                                              ; preds = %759, %752
  %762 = phi i32 [ %760, %759 ], [ %758, %752 ]
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %764, label %765

764:                                              ; preds = %761
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %750) #17
  br label %765

765:                                              ; preds = %746, %761, %764
  store i8 1, i8* %730, align 8
  %766 = load atomic i32, i32* %693 monotonic, align 4
  %767 = and i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 0
  %770 = load i32, i32* %769, align 4
  br i1 %768, label %771, label %773

771:                                              ; preds = %765
  %772 = add i32 %770, -1
  store i32 %772, i32* %769, align 4
  br label %773

773:                                              ; preds = %771, %765
  %774 = phi i32 [ %772, %771 ], [ %770, %765 ]
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %776, label %778

776:                                              ; preds = %773
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %690) #17
  %777 = load i32, i32* %769, align 4
  br label %778

778:                                              ; preds = %773, %776
  %779 = phi i32 [ %774, %773 ], [ %777, %776 ]
  %780 = load atomic i32, i32* %693 monotonic, align 4
  %781 = and i32 %780, 2
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %783, label %785

783:                                              ; preds = %778
  %784 = add i32 %779, -1
  store i32 %784, i32* %769, align 4
  br label %785

785:                                              ; preds = %783, %778
  %786 = phi i32 [ %784, %783 ], [ %779, %778 ]
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %788, label %789

788:                                              ; preds = %785
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %690) #17
  br label %789

789:                                              ; preds = %728, %785, %788
  %790 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %689, align 8
  %791 = icmp eq %"class.WTF::StringImpl"* %790, null
  br i1 %791, label %805, label %792

792:                                              ; preds = %789
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load atomic i32, i32* %793 monotonic, align 4
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 0
  %798 = load i32, i32* %797, align 4
  br i1 %796, label %799, label %801

799:                                              ; preds = %792
  %800 = add i32 %798, -1
  store i32 %800, i32* %797, align 4
  br label %801

801:                                              ; preds = %799, %792
  %802 = phi i32 [ %800, %799 ], [ %798, %792 ]
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %805

804:                                              ; preds = %801
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %790) #17
  br label %805

805:                                              ; preds = %789, %801, %804
  br i1 %643, label %819, label %806

806:                                              ; preds = %805
  %807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %808 = load atomic i32, i32* %807 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 0
  %812 = load i32, i32* %811, align 4
  br i1 %810, label %813, label %815

813:                                              ; preds = %806
  %814 = add i32 %812, -1
  store i32 %814, i32* %811, align 4
  br label %815

815:                                              ; preds = %813, %806
  %816 = phi i32 [ %814, %813 ], [ %812, %806 ]
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %819

818:                                              ; preds = %815
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %642) #17
  br label %819

819:                                              ; preds = %805, %815, %818
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %640) #17
  br label %820

820:                                              ; preds = %819, %636
  %821 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0, i32 1
  %822 = call %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"* %821) #17
  %823 = icmp eq %"class.blink::Frame"* %822, null
  br i1 %823, label %1146, label %824

824:                                              ; preds = %820
  %825 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* nonnull %822) #17
  %826 = icmp eq %"class.WTF::StringImpl"* %825, null
  br i1 %826, label %844, label %827

827:                                              ; preds = %824
  %828 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %825, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %829 = load atomic i32, i32* %828 monotonic, align 4
  %830 = and i32 %829, 2
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %832, label %863

832:                                              ; preds = %827
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %825, i64 0, i32 0
  %834 = load i32, i32* %833, align 4
  %835 = zext i32 %834 to i33
  %836 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %835, i33 1) #17
  %837 = extractvalue { i33, i1 } %836, 1
  %838 = extractvalue { i33, i1 } %836, 0
  %839 = icmp slt i33 %838, 0
  %840 = or i1 %837, %839
  br i1 %840, label %841, label %842, !prof !3

841:                                              ; preds = %832
  call void @llvm.trap() #17
  unreachable

842:                                              ; preds = %832
  %843 = trunc i33 %838 to i32
  store i32 %843, i32* %833, align 4
  br label %863

844:                                              ; preds = %824
  %845 = bitcast i8* %30 to i64*
  %846 = bitcast i8* %30 to %"class.WTF::StringImpl"**
  %847 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %846, align 8
  store i64 0, i64* %845, align 8
  %848 = icmp eq %"class.WTF::StringImpl"* %847, null
  br i1 %848, label %862, label %849

849:                                              ; preds = %844
  %850 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %851 = load atomic i32, i32* %850 monotonic, align 4
  %852 = and i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 0
  %855 = load i32, i32* %854, align 4
  br i1 %853, label %856, label %858

856:                                              ; preds = %849
  %857 = add i32 %855, -1
  store i32 %857, i32* %854, align 4
  br label %858

858:                                              ; preds = %856, %849
  %859 = phi i32 [ %857, %856 ], [ %855, %849 ]
  %860 = icmp eq i32 %859, 0
  br i1 %860, label %861, label %862

861:                                              ; preds = %858
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %847) #17
  br label %862

862:                                              ; preds = %844, %858, %861
  store i8 1, i8* %29, align 8
  br label %922

863:                                              ; preds = %842, %827
  %864 = load atomic i32, i32* %828 monotonic, align 4
  %865 = and i32 %864, 2
  %866 = icmp eq i32 %865, 0
  br i1 %866, label %867, label %879

867:                                              ; preds = %863
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %825, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  %870 = zext i32 %869 to i33
  %871 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %870, i33 1) #17
  %872 = extractvalue { i33, i1 } %871, 1
  %873 = extractvalue { i33, i1 } %871, 0
  %874 = icmp slt i33 %873, 0
  %875 = or i1 %872, %874
  br i1 %875, label %876, label %877, !prof !3

876:                                              ; preds = %867
  call void @llvm.trap() #17
  unreachable

877:                                              ; preds = %867
  %878 = trunc i33 %873 to i32
  store i32 %878, i32* %868, align 4
  br label %879

879:                                              ; preds = %877, %863
  %880 = ptrtoint %"class.WTF::StringImpl"* %825 to i64
  %881 = bitcast i8* %30 to i64*
  %882 = bitcast i8* %30 to %"class.WTF::StringImpl"**
  %883 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %882, align 8
  store i64 %880, i64* %881, align 8
  %884 = icmp eq %"class.WTF::StringImpl"* %883, null
  br i1 %884, label %898, label %885

885:                                              ; preds = %879
  %886 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %883, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %887 = load atomic i32, i32* %886 monotonic, align 4
  %888 = and i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %883, i64 0, i32 0
  %891 = load i32, i32* %890, align 4
  br i1 %889, label %892, label %894

892:                                              ; preds = %885
  %893 = add i32 %891, -1
  store i32 %893, i32* %890, align 4
  br label %894

894:                                              ; preds = %892, %885
  %895 = phi i32 [ %893, %892 ], [ %891, %885 ]
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %897, label %898

897:                                              ; preds = %894
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %883) #17
  br label %898

898:                                              ; preds = %879, %894, %897
  store i8 1, i8* %29, align 8
  %899 = load atomic i32, i32* %828 monotonic, align 4
  %900 = and i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %825, i64 0, i32 0
  %903 = load i32, i32* %902, align 4
  br i1 %901, label %904, label %906

904:                                              ; preds = %898
  %905 = add i32 %903, -1
  store i32 %905, i32* %902, align 4
  br label %906

906:                                              ; preds = %904, %898
  %907 = phi i32 [ %905, %904 ], [ %903, %898 ]
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %909, label %911

909:                                              ; preds = %906
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %825) #17
  %910 = load i32, i32* %902, align 4
  br label %911

911:                                              ; preds = %906, %909
  %912 = phi i32 [ %907, %906 ], [ %910, %909 ]
  %913 = load atomic i32, i32* %828 monotonic, align 4
  %914 = and i32 %913, 2
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %918

916:                                              ; preds = %911
  %917 = add i32 %912, -1
  store i32 %917, i32* %902, align 4
  br label %918

918:                                              ; preds = %916, %911
  %919 = phi i32 [ %917, %916 ], [ %912, %911 ]
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %921, label %922

921:                                              ; preds = %918
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %825) #17
  br label %922

922:                                              ; preds = %862, %918, %921
  %923 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9FrameTree7GetNameEv(%"class.blink::FrameTree"* %821) #17
  %924 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %923, i64 0, i32 0, i32 0, i32 0
  %925 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %924, align 8
  %926 = icmp eq %"class.WTF::StringImpl"* %925, null
  br i1 %926, label %948, label %927

927:                                              ; preds = %922
  %928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %929 = load atomic i32, i32* %928 monotonic, align 4
  %930 = and i32 %929, 2
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %944

932:                                              ; preds = %927
  %933 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 0
  %934 = load i32, i32* %933, align 4
  %935 = zext i32 %934 to i33
  %936 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %935, i33 1) #17
  %937 = extractvalue { i33, i1 } %936, 1
  %938 = extractvalue { i33, i1 } %936, 0
  %939 = icmp slt i33 %938, 0
  %940 = or i1 %937, %939
  br i1 %940, label %941, label %942, !prof !3

941:                                              ; preds = %932
  call void @llvm.trap() #17
  unreachable

942:                                              ; preds = %932
  %943 = trunc i33 %938 to i32
  store i32 %943, i32* %933, align 4
  br label %944

944:                                              ; preds = %942, %927
  %945 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 1
  %946 = load i32, i32* %945, align 4
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %948, label %1048

948:                                              ; preds = %922, %944
  %949 = call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink5Frame20DeprecatedLocalOwnerEv(%"class.blink::Frame"* %38) #17
  %950 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %949, null
  br i1 %950, label %1045, label %951

951:                                              ; preds = %948
  %952 = call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink5Frame20DeprecatedLocalOwnerEv(%"class.blink::Frame"* %38) #17
  %953 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %954 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %952, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %955 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %954, align 8
  %956 = icmp eq %"class.blink::ElementData"* %955, null
  br i1 %956, label %1007, label %957

957:                                              ; preds = %951
  %958 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %955, i64 0, i32 0, i32 0, i32 0
  %959 = load i32, i32* %958, align 4
  %960 = and i32 %959, 1
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %969, label %962

962:                                              ; preds = %957
  %963 = bitcast %"class.blink::ElementData"* %955 to %"class.blink::UniqueElementData"*
  %964 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %955, i64 1, i32 1
  %965 = bitcast %"class.blink::Member.1069"* %964 to %"class.blink::Attribute"**
  %966 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %965, align 8
  %967 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %963, i64 0, i32 2, i32 0, i32 0, i32 2
  %968 = load i32, i32* %967, align 4
  br label %974

969:                                              ; preds = %957
  %970 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %955, i64 1
  %971 = bitcast %"class.blink::ElementData"* %970 to %"class.blink::Attribute"*
  %972 = lshr i32 %959, 1
  %973 = and i32 %972, 268435455
  br label %974

974:                                              ; preds = %969, %962
  %975 = phi %"class.blink::Attribute"* [ %971, %969 ], [ %966, %962 ]
  %976 = phi i32 [ %973, %969 ], [ %968, %962 ]
  %977 = zext i32 %976 to i64
  %978 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %975, i64 %977
  %979 = icmp eq i32 %976, 0
  br i1 %979, label %1007, label %980

980:                                              ; preds = %974
  %981 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %953, i64 0, i32 0, i32 0
  %982 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %981, align 8
  %983 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %982, i64 0, i32 3, i32 0, i32 0, i32 0
  %984 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %982, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %985

985:                                              ; preds = %1000, %980
  %986 = phi %"class.blink::Attribute"* [ %975, %980 ], [ %1001, %1000 ]
  %987 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %986, i64 0, i32 0, i32 0, i32 0
  %988 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %987, align 8
  %989 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %988, %982
  br i1 %989, label %1003, label %990

990:                                              ; preds = %985
  %991 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %988, i64 0, i32 3, i32 0, i32 0, i32 0
  %992 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %991, align 8
  %993 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %983, align 8
  %994 = icmp eq %"class.WTF::StringImpl"* %992, %993
  br i1 %994, label %995, label %1000

995:                                              ; preds = %990
  %996 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %988, i64 0, i32 4, i32 0, i32 0, i32 0
  %997 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %996, align 8
  %998 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %984, align 8
  %999 = icmp eq %"class.WTF::StringImpl"* %997, %998
  br i1 %999, label %1003, label %1000

1000:                                             ; preds = %995, %990
  %1001 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %986, i64 1
  %1002 = icmp eq %"class.blink::Attribute"* %1001, %978
  br i1 %1002, label %1007, label %985

1003:                                             ; preds = %995, %985
  %1004 = icmp eq %"class.blink::Attribute"* %986, null
  br i1 %1004, label %1007, label %1005

1005:                                             ; preds = %1003
  %1006 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %986, i64 0, i32 1
  br label %1009

1007:                                             ; preds = %1000, %1003, %974, %951
  %1008 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %1009

1009:                                             ; preds = %1005, %1007
  %1010 = phi %"class.WTF::AtomicString"* [ %1008, %1007 ], [ %1006, %1005 ]
  %1011 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1010, i64 0, i32 0, i32 0, i32 0
  %1012 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1011, align 8
  %1013 = icmp eq %"class.WTF::StringImpl"* %1012, null
  br i1 %1013, label %1031, label %1014

1014:                                             ; preds = %1009
  %1015 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1012, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1016 = load atomic i32, i32* %1015 monotonic, align 4
  %1017 = and i32 %1016, 2
  %1018 = icmp eq i32 %1017, 0
  br i1 %1018, label %1019, label %1031

1019:                                             ; preds = %1014
  %1020 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1012, i64 0, i32 0
  %1021 = load i32, i32* %1020, align 4
  %1022 = zext i32 %1021 to i33
  %1023 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1022, i33 1) #17
  %1024 = extractvalue { i33, i1 } %1023, 1
  %1025 = extractvalue { i33, i1 } %1023, 0
  %1026 = icmp slt i33 %1025, 0
  %1027 = or i1 %1024, %1026
  br i1 %1027, label %1028, label %1029, !prof !3

1028:                                             ; preds = %1019
  call void @llvm.trap() #17
  unreachable

1029:                                             ; preds = %1019
  %1030 = trunc i33 %1025 to i32
  store i32 %1030, i32* %1020, align 4
  br label %1031

1031:                                             ; preds = %1029, %1014, %1009
  br i1 %926, label %1045, label %1032

1032:                                             ; preds = %1031
  %1033 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1034 = load atomic i32, i32* %1033 monotonic, align 4
  %1035 = and i32 %1034, 2
  %1036 = icmp eq i32 %1035, 0
  %1037 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 0
  %1038 = load i32, i32* %1037, align 4
  br i1 %1036, label %1039, label %1041

1039:                                             ; preds = %1032
  %1040 = add i32 %1038, -1
  store i32 %1040, i32* %1037, align 4
  br label %1041

1041:                                             ; preds = %1039, %1032
  %1042 = phi i32 [ %1040, %1039 ], [ %1038, %1032 ]
  %1043 = icmp eq i32 %1042, 0
  br i1 %1043, label %1044, label %1045

1044:                                             ; preds = %1041
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %925) #17
  br label %1045

1045:                                             ; preds = %1044, %1041, %1031, %948
  %1046 = phi %"class.WTF::StringImpl"* [ %925, %948 ], [ %1012, %1031 ], [ %1012, %1041 ], [ %1012, %1044 ]
  %1047 = icmp eq %"class.WTF::StringImpl"* %1046, null
  br i1 %1047, label %1066, label %1048

1048:                                             ; preds = %944, %1045
  %1049 = phi %"class.WTF::StringImpl"* [ %1046, %1045 ], [ %925, %944 ]
  %1050 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1049, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1051 = load atomic i32, i32* %1050 monotonic, align 4
  %1052 = and i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  br i1 %1053, label %1054, label %1086

1054:                                             ; preds = %1048
  %1055 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1049, i64 0, i32 0
  %1056 = load i32, i32* %1055, align 4
  %1057 = zext i32 %1056 to i33
  %1058 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1057, i33 1) #17
  %1059 = extractvalue { i33, i1 } %1058, 1
  %1060 = extractvalue { i33, i1 } %1058, 0
  %1061 = icmp slt i33 %1060, 0
  %1062 = or i1 %1059, %1061
  br i1 %1062, label %1063, label %1064, !prof !3

1063:                                             ; preds = %1054
  call void @llvm.trap() #17
  unreachable

1064:                                             ; preds = %1054
  %1065 = trunc i33 %1060 to i32
  store i32 %1065, i32* %1055, align 4
  br label %1086

1066:                                             ; preds = %1045
  %1067 = getelementptr inbounds i8, i8* %25, i64 40
  %1068 = bitcast i8* %31 to i64*
  %1069 = bitcast i8* %31 to %"class.WTF::StringImpl"**
  %1070 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1069, align 8
  store i64 0, i64* %1068, align 8
  %1071 = icmp eq %"class.WTF::StringImpl"* %1070, null
  br i1 %1071, label %1085, label %1072

1072:                                             ; preds = %1066
  %1073 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1070, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1074 = load atomic i32, i32* %1073 monotonic, align 4
  %1075 = and i32 %1074, 2
  %1076 = icmp eq i32 %1075, 0
  %1077 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1070, i64 0, i32 0
  %1078 = load i32, i32* %1077, align 4
  br i1 %1076, label %1079, label %1081

1079:                                             ; preds = %1072
  %1080 = add i32 %1078, -1
  store i32 %1080, i32* %1077, align 4
  br label %1081

1081:                                             ; preds = %1079, %1072
  %1082 = phi i32 [ %1080, %1079 ], [ %1078, %1072 ]
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1084, label %1085

1084:                                             ; preds = %1081
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1070) #17
  br label %1085

1085:                                             ; preds = %1066, %1081, %1084
  store i8 1, i8* %1067, align 8
  br label %1146

1086:                                             ; preds = %1064, %1048
  %1087 = getelementptr inbounds i8, i8* %25, i64 40
  %1088 = load atomic i32, i32* %1050 monotonic, align 4
  %1089 = and i32 %1088, 2
  %1090 = icmp eq i32 %1089, 0
  br i1 %1090, label %1091, label %1103

1091:                                             ; preds = %1086
  %1092 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1049, i64 0, i32 0
  %1093 = load i32, i32* %1092, align 4
  %1094 = zext i32 %1093 to i33
  %1095 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1094, i33 1) #17
  %1096 = extractvalue { i33, i1 } %1095, 1
  %1097 = extractvalue { i33, i1 } %1095, 0
  %1098 = icmp slt i33 %1097, 0
  %1099 = or i1 %1096, %1098
  br i1 %1099, label %1100, label %1101, !prof !3

1100:                                             ; preds = %1091
  call void @llvm.trap() #17
  unreachable

1101:                                             ; preds = %1091
  %1102 = trunc i33 %1097 to i32
  store i32 %1102, i32* %1092, align 4
  br label %1103

1103:                                             ; preds = %1101, %1086
  %1104 = ptrtoint %"class.WTF::StringImpl"* %1049 to i64
  %1105 = bitcast i8* %31 to i64*
  %1106 = bitcast i8* %31 to %"class.WTF::StringImpl"**
  %1107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1106, align 8
  store i64 %1104, i64* %1105, align 8
  %1108 = icmp eq %"class.WTF::StringImpl"* %1107, null
  br i1 %1108, label %1122, label %1109

1109:                                             ; preds = %1103
  %1110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1111 = load atomic i32, i32* %1110 monotonic, align 4
  %1112 = and i32 %1111, 2
  %1113 = icmp eq i32 %1112, 0
  %1114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1107, i64 0, i32 0
  %1115 = load i32, i32* %1114, align 4
  br i1 %1113, label %1116, label %1118

1116:                                             ; preds = %1109
  %1117 = add i32 %1115, -1
  store i32 %1117, i32* %1114, align 4
  br label %1118

1118:                                             ; preds = %1116, %1109
  %1119 = phi i32 [ %1117, %1116 ], [ %1115, %1109 ]
  %1120 = icmp eq i32 %1119, 0
  br i1 %1120, label %1121, label %1122

1121:                                             ; preds = %1118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1107) #17
  br label %1122

1122:                                             ; preds = %1103, %1118, %1121
  store i8 1, i8* %1087, align 8
  %1123 = load atomic i32, i32* %1050 monotonic, align 4
  %1124 = and i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  %1126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1049, i64 0, i32 0
  %1127 = load i32, i32* %1126, align 4
  br i1 %1125, label %1128, label %1130

1128:                                             ; preds = %1122
  %1129 = add i32 %1127, -1
  store i32 %1129, i32* %1126, align 4
  br label %1130

1130:                                             ; preds = %1128, %1122
  %1131 = phi i32 [ %1129, %1128 ], [ %1127, %1122 ]
  %1132 = icmp eq i32 %1131, 0
  br i1 %1132, label %1133, label %1135

1133:                                             ; preds = %1130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1049) #17
  %1134 = load i32, i32* %1126, align 4
  br label %1135

1135:                                             ; preds = %1130, %1133
  %1136 = phi i32 [ %1131, %1130 ], [ %1134, %1133 ]
  %1137 = load atomic i32, i32* %1050 monotonic, align 4
  %1138 = and i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1140, label %1142

1140:                                             ; preds = %1135
  %1141 = add i32 %1136, -1
  store i32 %1141, i32* %1126, align 4
  br label %1142

1142:                                             ; preds = %1140, %1135
  %1143 = phi i32 [ %1141, %1140 ], [ %1136, %1135 ]
  %1144 = icmp eq i32 %1143, 0
  br i1 %1144, label %1145, label %1146

1145:                                             ; preds = %1142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1049) #17
  br label %1146

1146:                                             ; preds = %1145, %1142, %1085, %820
  %1147 = icmp eq %"class.blink::DocumentLoader"* %24, null
  br i1 %1147, label %1176, label %1148

1148:                                             ; preds = %1146
  %1149 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader14UnreachableURLEv(%"class.blink::DocumentLoader"* nonnull %24) #17
  %1150 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %1149) #17
  br i1 %1150, label %1176, label %1151

1151:                                             ; preds = %1148
  %1152 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader14UnreachableURLEv(%"class.blink::DocumentLoader"* nonnull %24) #17
  %1153 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1152, i64 0, i32 4, i32 0, i32 0
  %1154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1153, align 8
  %1155 = icmp eq %"class.WTF::StringImpl"* %1154, null
  br i1 %1155, label %1173, label %1156

1156:                                             ; preds = %1151
  %1157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1158 = load atomic i32, i32* %1157 monotonic, align 4
  %1159 = and i32 %1158, 2
  %1160 = icmp eq i32 %1159, 0
  br i1 %1160, label %1161, label %1173

1161:                                             ; preds = %1156
  %1162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1154, i64 0, i32 0
  %1163 = load i32, i32* %1162, align 4
  %1164 = zext i32 %1163 to i33
  %1165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1164, i33 1) #17
  %1166 = extractvalue { i33, i1 } %1165, 1
  %1167 = extractvalue { i33, i1 } %1165, 0
  %1168 = icmp slt i33 %1167, 0
  %1169 = or i1 %1166, %1168
  br i1 %1169, label %1170, label %1171, !prof !3

1170:                                             ; preds = %1161
  call void @llvm.trap() #17
  unreachable

1171:                                             ; preds = %1161
  %1172 = trunc i33 %1167 to i32
  store i32 %1172, i32* %1162, align 4
  br label %1173

1173:                                             ; preds = %1151, %1156, %1171
  %1174 = getelementptr inbounds i8, i8* %25, i64 104
  %1175 = bitcast i8* %1174 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1175, %"class.WTF::StringImpl"* %1154) #17
  br label %1176

1176:                                             ; preds = %1146, %1173, %1148
  %1177 = call zeroext i1 @_ZNK5blink5Frame8IsAdRootEv(%"class.blink::Frame"* %38) #17
  br i1 %1177, label %1178, label %1218

1178:                                             ; preds = %1176
  %1179 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1179) #17
  %1180 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page15AdFrameTypeEnum4RootE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page15AdFrameTypeEnum4RootE, i64 0, i64 0), i64 %1180) #17
  %1181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %1182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1181, align 8
  %1183 = icmp eq %"class.WTF::StringImpl"* %1182, null
  br i1 %1183, label %1201, label %1184

1184:                                             ; preds = %1178
  %1185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1186 = load atomic i32, i32* %1185 monotonic, align 4
  %1187 = and i32 %1186, 2
  %1188 = icmp eq i32 %1187, 0
  br i1 %1188, label %1189, label %1201

1189:                                             ; preds = %1184
  %1190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1182, i64 0, i32 0
  %1191 = load i32, i32* %1190, align 4
  %1192 = zext i32 %1191 to i33
  %1193 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1192, i33 1) #17
  %1194 = extractvalue { i33, i1 } %1193, 1
  %1195 = extractvalue { i33, i1 } %1193, 0
  %1196 = icmp slt i33 %1195, 0
  %1197 = or i1 %1194, %1196
  br i1 %1197, label %1198, label %1199, !prof !3

1198:                                             ; preds = %1189
  call void @llvm.trap() #17
  unreachable

1199:                                             ; preds = %1189
  %1200 = trunc i33 %1195 to i32
  store i32 %1200, i32* %1190, align 4
  br label %1201

1201:                                             ; preds = %1178, %1184, %1199
  %1202 = bitcast i8* %35 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1202, %"class.WTF::StringImpl"* %1182) #17
  %1203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1181, align 8
  %1204 = icmp eq %"class.WTF::StringImpl"* %1203, null
  br i1 %1204, label %1300, label %1205

1205:                                             ; preds = %1201
  %1206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1207 = load atomic i32, i32* %1206 monotonic, align 4
  %1208 = and i32 %1207, 2
  %1209 = icmp eq i32 %1208, 0
  %1210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1203, i64 0, i32 0
  %1211 = load i32, i32* %1210, align 4
  br i1 %1209, label %1212, label %1214

1212:                                             ; preds = %1205
  %1213 = add i32 %1211, -1
  store i32 %1213, i32* %1210, align 4
  br label %1214

1214:                                             ; preds = %1212, %1205
  %1215 = phi i32 [ %1213, %1212 ], [ %1211, %1205 ]
  %1216 = icmp eq i32 %1215, 0
  br i1 %1216, label %1217, label %1300

1217:                                             ; preds = %1214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1203) #17
  br label %1300

1218:                                             ; preds = %1176
  %1219 = call zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"* %38) #17
  br i1 %1219, label %1220, label %1260

1220:                                             ; preds = %1218
  %1221 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1221) #17
  %1222 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page15AdFrameTypeEnum5ChildE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page15AdFrameTypeEnum5ChildE, i64 0, i64 0), i64 %1222) #17
  %1223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %1224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1225 = icmp eq %"class.WTF::StringImpl"* %1224, null
  br i1 %1225, label %1243, label %1226

1226:                                             ; preds = %1220
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load atomic i32, i32* %1227 monotonic, align 4
  %1229 = and i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1231, label %1243

1231:                                             ; preds = %1226
  %1232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1233 = load i32, i32* %1232, align 4
  %1234 = zext i32 %1233 to i33
  %1235 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1234, i33 1) #17
  %1236 = extractvalue { i33, i1 } %1235, 1
  %1237 = extractvalue { i33, i1 } %1235, 0
  %1238 = icmp slt i33 %1237, 0
  %1239 = or i1 %1236, %1238
  br i1 %1239, label %1240, label %1241, !prof !3

1240:                                             ; preds = %1231
  call void @llvm.trap() #17
  unreachable

1241:                                             ; preds = %1231
  %1242 = trunc i33 %1237 to i32
  store i32 %1242, i32* %1232, align 4
  br label %1243

1243:                                             ; preds = %1220, %1226, %1241
  %1244 = bitcast i8* %35 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1244, %"class.WTF::StringImpl"* %1224) #17
  %1245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1246 = icmp eq %"class.WTF::StringImpl"* %1245, null
  br i1 %1246, label %1300, label %1247

1247:                                             ; preds = %1243
  %1248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1249 = load atomic i32, i32* %1248 monotonic, align 4
  %1250 = and i32 %1249, 2
  %1251 = icmp eq i32 %1250, 0
  %1252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1245, i64 0, i32 0
  %1253 = load i32, i32* %1252, align 4
  br i1 %1251, label %1254, label %1256

1254:                                             ; preds = %1247
  %1255 = add i32 %1253, -1
  store i32 %1255, i32* %1252, align 4
  br label %1256

1256:                                             ; preds = %1254, %1247
  %1257 = phi i32 [ %1255, %1254 ], [ %1253, %1247 ]
  %1258 = icmp eq i32 %1257, 0
  br i1 %1258, label %1259, label %1300

1259:                                             ; preds = %1256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1245) #17
  br label %1300

1260:                                             ; preds = %1218
  %1261 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1261) #17
  %1262 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page15AdFrameTypeEnum4NoneE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page15AdFrameTypeEnum4NoneE, i64 0, i64 0), i64 %1262) #17
  %1263 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %1264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1263, align 8
  %1265 = icmp eq %"class.WTF::StringImpl"* %1264, null
  br i1 %1265, label %1283, label %1266

1266:                                             ; preds = %1260
  %1267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1268 = load atomic i32, i32* %1267 monotonic, align 4
  %1269 = and i32 %1268, 2
  %1270 = icmp eq i32 %1269, 0
  br i1 %1270, label %1271, label %1283

1271:                                             ; preds = %1266
  %1272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1264, i64 0, i32 0
  %1273 = load i32, i32* %1272, align 4
  %1274 = zext i32 %1273 to i33
  %1275 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1274, i33 1) #17
  %1276 = extractvalue { i33, i1 } %1275, 1
  %1277 = extractvalue { i33, i1 } %1275, 0
  %1278 = icmp slt i33 %1277, 0
  %1279 = or i1 %1276, %1278
  br i1 %1279, label %1280, label %1281, !prof !3

1280:                                             ; preds = %1271
  call void @llvm.trap() #17
  unreachable

1281:                                             ; preds = %1271
  %1282 = trunc i33 %1277 to i32
  store i32 %1282, i32* %1272, align 4
  br label %1283

1283:                                             ; preds = %1260, %1266, %1281
  %1284 = bitcast i8* %35 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1284, %"class.WTF::StringImpl"* %1264) #17
  %1285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1263, align 8
  %1286 = icmp eq %"class.WTF::StringImpl"* %1285, null
  br i1 %1286, label %1300, label %1287

1287:                                             ; preds = %1283
  %1288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1289 = load atomic i32, i32* %1288 monotonic, align 4
  %1290 = and i32 %1289, 2
  %1291 = icmp eq i32 %1290, 0
  %1292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1285, i64 0, i32 0
  %1293 = load i32, i32* %1292, align 4
  br i1 %1291, label %1294, label %1296

1294:                                             ; preds = %1287
  %1295 = add i32 %1293, -1
  store i32 %1295, i32* %1292, align 4
  br label %1296

1296:                                             ; preds = %1294, %1287
  %1297 = phi i32 [ %1295, %1294 ], [ %1293, %1287 ]
  %1298 = icmp eq i32 %1297, 0
  br i1 %1298, label %1299, label %1300

1299:                                             ; preds = %1296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1285) #17
  br label %1300

1300:                                             ; preds = %1299, %1296, %1283, %1259, %1256, %1243, %1217, %1214, %1201
  %1301 = phi i8* [ %1179, %1201 ], [ %1179, %1214 ], [ %1179, %1217 ], [ %1221, %1243 ], [ %1221, %1256 ], [ %1221, %1259 ], [ %1261, %1283 ], [ %1261, %1296 ], [ %1261, %1299 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1301) #17
  %1302 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #17
  %1303 = call i8* @_Znwm(i64 24) #19
  %1304 = bitcast i8* %1303 to %"class.std::__1::vector.3479"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1303, i8 0, i64 24, i1 false) #17
  %1305 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %1302, i64 0, i32 1, i32 26, i32 0, i32 0
  %1306 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %1305, align 8
  %1307 = bitcast %"class.WTF::HashMap.1483"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1307) #17
  %1308 = getelementptr inbounds %"class.WTF::HashMap.1483", %"class.WTF::HashMap.1483"* %15, i64 0, i32 0
  %1309 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %1306, i64 0, i32 6, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1307, i8 0, i64 20, i1 false) #17, !alias.scope !46
  %1310 = load i32, i32* %1309, align 4, !noalias !46
  %1311 = icmp eq i32 %1310, 0
  br i1 %1311, label %1348, label %1312

1312:                                             ; preds = %1300
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1484"* nonnull %1308, i32 %1310) #17
  %1313 = load i32, i32* %1309, align 4, !noalias !46
  %1314 = icmp eq i32 %1313, 0
  %1315 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %1306, i64 0, i32 6, i32 0, i32 0
  %1316 = load %"struct.WTF::KeyValuePair.1487"*, %"struct.WTF::KeyValuePair.1487"** %1315, align 8, !noalias !46
  %1317 = getelementptr inbounds %"class.blink::OriginTrialContext", %"class.blink::OriginTrialContext"* %1306, i64 0, i32 6, i32 0, i32 1
  %1318 = load i32, i32* %1317, align 8, !noalias !46
  %1319 = zext i32 %1318 to i64
  %1320 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1316, i64 %1319
  br i1 %1314, label %1348, label %1321

1321:                                             ; preds = %1312
  %1322 = icmp eq i32 %1318, 0
  br i1 %1322, label %1330, label %1323

1323:                                             ; preds = %1321, %1327
  %1324 = phi %"struct.WTF::KeyValuePair.1487"* [ %1328, %1327 ], [ %1316, %1321 ]
  %1325 = bitcast %"struct.WTF::KeyValuePair.1487"* %1324 to i64*
  %1326 = load i64, i64* %1325, align 8
  switch i64 %1326, label %1330 [
    i64 -1, label %1327
    i64 0, label %1327
  ]

1327:                                             ; preds = %1323, %1323
  %1328 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1324, i64 1
  %1329 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1328, %1320
  br i1 %1329, label %1348, label %1323

1330:                                             ; preds = %1323, %1321
  %1331 = phi %"struct.WTF::KeyValuePair.1487"* [ %1316, %1321 ], [ %1324, %1323 ]
  %1332 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1331, %1320
  br i1 %1332, label %1348, label %1333

1333:                                             ; preds = %1330, %1346
  %1334 = phi %"struct.WTF::KeyValuePair.1487"* [ %1340, %1346 ], [ %1331, %1330 ]
  %1335 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1334, i64 0, i32 0
  %1336 = call { %"struct.WTF::KeyValuePair.1487"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_SC_SD_EERKS1_RKS5_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1484"* nonnull %1308, %"class.WTF::String"* dereferenceable(8) %1335, %"struct.WTF::KeyValuePair.1487"* dereferenceable(40) %1334) #17
  %1337 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1334, i64 1
  %1338 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1337, %1320
  br i1 %1338, label %1348, label %1339

1339:                                             ; preds = %1333, %1343
  %1340 = phi %"struct.WTF::KeyValuePair.1487"* [ %1344, %1343 ], [ %1337, %1333 ]
  %1341 = bitcast %"struct.WTF::KeyValuePair.1487"* %1340 to i64*
  %1342 = load i64, i64* %1341, align 8
  switch i64 %1342, label %1346 [
    i64 -1, label %1343
    i64 0, label %1343
  ]

1343:                                             ; preds = %1339, %1339
  %1344 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1340, i64 1
  %1345 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1344, %1320
  br i1 %1345, label %1348, label %1339

1346:                                             ; preds = %1339
  %1347 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1340, %1320
  br i1 %1347, label %1348, label %1333

1348:                                             ; preds = %1327, %1346, %1333, %1343, %1330, %1312, %1300
  %1349 = getelementptr inbounds %"class.WTF::HashMap.1483", %"class.WTF::HashMap.1483"* %15, i64 0, i32 0, i32 2
  %1350 = load i32, i32* %1349, align 4
  %1351 = icmp eq i32 %1350, 0
  %1352 = getelementptr inbounds %"class.WTF::HashMap.1483", %"class.WTF::HashMap.1483"* %15, i64 0, i32 0, i32 0
  %1353 = load %"struct.WTF::KeyValuePair.1487"*, %"struct.WTF::KeyValuePair.1487"** %1352, align 8
  %1354 = getelementptr inbounds %"class.WTF::HashMap.1483", %"class.WTF::HashMap.1483"* %15, i64 0, i32 0, i32 1
  %1355 = load i32, i32* %1354, align 8
  %1356 = zext i32 %1355 to i64
  %1357 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1353, i64 %1356
  br i1 %1351, label %1399, label %1358

1358:                                             ; preds = %1348
  %1359 = icmp eq i32 %1355, 0
  br i1 %1359, label %1367, label %1360

1360:                                             ; preds = %1358, %1364
  %1361 = phi %"struct.WTF::KeyValuePair.1487"* [ %1365, %1364 ], [ %1353, %1358 ]
  %1362 = bitcast %"struct.WTF::KeyValuePair.1487"* %1361 to i64*
  %1363 = load i64, i64* %1362, align 8
  switch i64 %1363, label %1367 [
    i64 -1, label %1364
    i64 0, label %1364
  ]

1364:                                             ; preds = %1360, %1360
  %1365 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1361, i64 1
  %1366 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1365, %1357
  br i1 %1366, label %1399, label %1360

1367:                                             ; preds = %1360, %1358
  %1368 = phi %"struct.WTF::KeyValuePair.1487"* [ %1353, %1358 ], [ %1361, %1360 ]
  %1369 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1368, %1357
  br i1 %1369, label %1399, label %1370

1370:                                             ; preds = %1367
  %1371 = bitcast %"class.std::__1::unique_ptr.3481"* %16 to i8*
  %1372 = bitcast %"class.std::__1::unique_ptr.3492"* %14 to i8*
  %1373 = bitcast %"class.WTF::String"* %12 to i8*
  %1374 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %1375 = bitcast %"class.url::Origin"* %8 to i8*
  %1376 = bitcast %"class.base::Time"* %9 to i8*
  %1377 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %9, i64 0, i32 0, i32 0
  %1378 = bitcast %"class.WTF::String"* %10 to i8*
  %1379 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %1380 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1381 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1380, i64 0, i32 1, i32 0
  %1382 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1383 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %1384 = bitcast %"class.WTF::String"* %7 to i8*
  %1385 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %1386 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %14, i64 0, i32 0, i32 0, i32 0
  %1387 = bitcast %"class.std::__1::unique_ptr.3492"* %14 to i8**
  %1388 = bitcast %"class.WTF::String"* %13 to i8*
  %1389 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %1390 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %16, i64 0, i32 0, i32 0, i32 0
  %1391 = bitcast %"class.std::__1::unique_ptr.3481"* %16 to i8**
  %1392 = getelementptr inbounds i8, i8* %1303, i64 8
  %1393 = bitcast i8* %1392 to %"class.std::__1::unique_ptr.3481"**
  %1394 = getelementptr inbounds i8, i8* %1303, i64 16
  %1395 = bitcast i8* %1394 to %"class.std::__1::unique_ptr.3481"**
  %1396 = bitcast i8* %1392 to i64*
  br label %1419

1397:                                             ; preds = %1824, %1814, %1821
  %1398 = load %"struct.WTF::KeyValuePair.1487"*, %"struct.WTF::KeyValuePair.1487"** %1352, align 8
  br label %1399

1399:                                             ; preds = %1364, %1397, %1367, %1348
  %1400 = phi %"struct.WTF::KeyValuePair.1487"* [ %1398, %1397 ], [ %1353, %1367 ], [ %1353, %1348 ], [ %1353, %1364 ]
  %1401 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1400, null
  br i1 %1401, label %1826, label %1402, !prof !2

1402:                                             ; preds = %1399
  %1403 = load i32, i32* %1354, align 8
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1417, label %1405

1405:                                             ; preds = %1402
  %1406 = zext i32 %1403 to i64
  br label %1407

1407:                                             ; preds = %1414, %1405
  %1408 = phi i64 [ 0, %1405 ], [ %1415, %1414 ]
  %1409 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1400, i64 %1408
  %1410 = bitcast %"struct.WTF::KeyValuePair.1487"* %1409 to i8**
  %1411 = load i8*, i8** %1410, align 8
  %1412 = icmp eq i8* %1411, inttoptr (i64 -1 to i8*)
  br i1 %1412, label %1414, label %1413

1413:                                             ; preds = %1407
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.1487"* %1409) #17
  br label %1414

1414:                                             ; preds = %1413, %1407
  %1415 = add nuw nsw i64 %1408, 1
  %1416 = icmp eq i64 %1415, %1406
  br i1 %1416, label %1417, label %1407

1417:                                             ; preds = %1414, %1402
  %1418 = bitcast %"struct.WTF::KeyValuePair.1487"* %1400 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1418) #17
  store %"struct.WTF::KeyValuePair.1487"* null, %"struct.WTF::KeyValuePair.1487"** %1352, align 8
  br label %1826

1419:                                             ; preds = %1824, %1370
  %1420 = phi %"struct.WTF::KeyValuePair.1487"* [ %1368, %1370 ], [ %1818, %1824 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1371) #17
  %1421 = call i8* @_Znwm(i64 24) #19
  %1422 = bitcast i8* %1421 to %"class.std::__1::vector.3490"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1421, i8 0, i64 24, i1 false) #17
  %1423 = ptrtoint i8* %1421 to i64
  %1424 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1420, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %1425 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %1424, align 8
  %1426 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1420, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %1427 = load i32, i32* %1426, align 4
  %1428 = zext i32 %1427 to i64
  %1429 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1425, i64 %1428
  %1430 = icmp eq i32 %1427, 0
  br i1 %1430, label %1437, label %1431

1431:                                             ; preds = %1419
  %1432 = getelementptr inbounds i8, i8* %1421, i64 8
  %1433 = bitcast i8* %1432 to %"class.std::__1::unique_ptr.3492"**
  %1434 = getelementptr inbounds i8, i8* %1421, i64 16
  %1435 = bitcast i8* %1434 to %"class.std::__1::unique_ptr.3492"**
  %1436 = bitcast i8* %1432 to i64*
  br label %1513

1437:                                             ; preds = %1793, %1419
  %1438 = call i8* @_Znwm(i64 32) #19
  %1439 = bitcast i8* %1438 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page11OriginTrialE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1439, align 8
  %1440 = getelementptr inbounds i8, i8* %1438, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1440, i8 0, i64 24, i1 false) #17
  %1441 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1420, i64 0, i32 1, i32 0, i32 0, i32 0
  %1442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1441, align 8
  %1443 = icmp eq %"class.WTF::StringImpl"* %1442, null
  br i1 %1443, label %1461, label %1444

1444:                                             ; preds = %1437
  %1445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1442, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1446 = load atomic i32, i32* %1445 monotonic, align 4
  %1447 = and i32 %1446, 2
  %1448 = icmp eq i32 %1447, 0
  br i1 %1448, label %1449, label %1461

1449:                                             ; preds = %1444
  %1450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1442, i64 0, i32 0
  %1451 = load i32, i32* %1450, align 4
  %1452 = zext i32 %1451 to i33
  %1453 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1452, i33 1) #17
  %1454 = extractvalue { i33, i1 } %1453, 1
  %1455 = extractvalue { i33, i1 } %1453, 0
  %1456 = icmp slt i33 %1455, 0
  %1457 = or i1 %1454, %1456
  br i1 %1457, label %1458, label %1459, !prof !3

1458:                                             ; preds = %1449
  call void @llvm.trap() #17
  unreachable

1459:                                             ; preds = %1449
  %1460 = trunc i33 %1455 to i32
  store i32 %1460, i32* %1450, align 4
  br label %1461

1461:                                             ; preds = %1459, %1444, %1437
  %1462 = ptrtoint %"class.WTF::StringImpl"* %1442 to i64
  %1463 = bitcast i8* %1440 to i64*
  store i64 %1462, i64* %1463, align 8
  %1464 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1420, i64 0, i32 1, i32 1
  %1465 = load i32, i32* %1464, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1388) #17
  switch i32 %1465, label %1469 [
    i32 0, label %1470
    i32 1, label %1466
    i32 2, label %1467
    i32 3, label %1468
  ]

1466:                                             ; preds = %1461
  br label %1470

1467:                                             ; preds = %1461
  br label %1470

1468:                                             ; preds = %1461
  br label %1470

1469:                                             ; preds = %1461
  unreachable

1470:                                             ; preds = %1461, %1468, %1467, %1466
  %1471 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page21OriginTrialStatusEnum15TrialNotAllowedE, i64 0, i64 0), %1468 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page21OriginTrialStatusEnum14OSNotSupportedE, i64 0, i64 0), %1467 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page21OriginTrialStatusEnum21ValidTokenNotProvidedE, i64 0, i64 0), %1466 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page21OriginTrialStatusEnum7EnabledE, i64 0, i64 0), %1461 ]
  %1472 = call i64 @strlen(i8* nonnull %1471) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* %1471, i64 %1472) #17
  %1473 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1389, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1388) #17
  %1474 = getelementptr inbounds i8, i8* %1438, i64 16
  %1475 = icmp eq %"class.WTF::StringImpl"* %1473, null
  br i1 %1475, label %1493, label %1476

1476:                                             ; preds = %1470
  %1477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1473, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1478 = load atomic i32, i32* %1477 monotonic, align 4
  %1479 = and i32 %1478, 2
  %1480 = icmp eq i32 %1479, 0
  br i1 %1480, label %1481, label %1497

1481:                                             ; preds = %1476
  %1482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1473, i64 0, i32 0
  %1483 = load i32, i32* %1482, align 4
  %1484 = zext i32 %1483 to i33
  %1485 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1484, i33 1) #17
  %1486 = extractvalue { i33, i1 } %1485, 1
  %1487 = extractvalue { i33, i1 } %1485, 0
  %1488 = icmp slt i33 %1487, 0
  %1489 = or i1 %1486, %1488
  br i1 %1489, label %1490, label %1491, !prof !3

1490:                                             ; preds = %1481
  call void @llvm.trap() #17
  unreachable

1491:                                             ; preds = %1481
  %1492 = trunc i33 %1487 to i32
  store i32 %1492, i32* %1482, align 4
  br label %1497

1493:                                             ; preds = %1470
  %1494 = bitcast i8* %1474 to i64*
  store i64 0, i64* %1494, align 8
  %1495 = getelementptr inbounds i8, i8* %1438, i64 24
  %1496 = bitcast i8* %1495 to i64*
  store i64 %1423, i64* %1496, align 8
  br label %1796

1497:                                             ; preds = %1491, %1476
  %1498 = ptrtoint %"class.WTF::StringImpl"* %1473 to i64
  %1499 = bitcast i8* %1474 to i64*
  store i64 %1498, i64* %1499, align 8
  %1500 = getelementptr inbounds i8, i8* %1438, i64 24
  %1501 = bitcast i8* %1500 to i64*
  store i64 %1423, i64* %1501, align 8
  %1502 = load atomic i32, i32* %1477 monotonic, align 4
  %1503 = and i32 %1502, 2
  %1504 = icmp eq i32 %1503, 0
  %1505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1473, i64 0, i32 0
  %1506 = load i32, i32* %1505, align 4
  br i1 %1504, label %1507, label %1509

1507:                                             ; preds = %1497
  %1508 = add i32 %1506, -1
  store i32 %1508, i32* %1505, align 4
  br label %1509

1509:                                             ; preds = %1507, %1497
  %1510 = phi i32 [ %1508, %1507 ], [ %1506, %1497 ]
  %1511 = icmp eq i32 %1510, 0
  br i1 %1511, label %1512, label %1796

1512:                                             ; preds = %1509
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1473) #17
  br label %1796

1513:                                             ; preds = %1793, %1431
  %1514 = phi %"struct.blink::OriginTrialTokenResult"* [ %1425, %1431 ], [ %1794, %1793 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1372) #17
  %1515 = call i8* @_Znwm(i64 32) #19
  %1516 = bitcast i8* %1515 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page26OriginTrialTokenWithStatusE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1516, align 8
  %1517 = getelementptr inbounds i8, i8* %1515, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1517, i8 0, i64 24, i1 false) #17
  %1518 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 0, i32 0, i32 0
  %1519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1518, align 8
  %1520 = icmp eq %"class.WTF::StringImpl"* %1519, null
  br i1 %1520, label %1538, label %1521

1521:                                             ; preds = %1513
  %1522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1519, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1523 = load atomic i32, i32* %1522 monotonic, align 4
  %1524 = and i32 %1523, 2
  %1525 = icmp eq i32 %1524, 0
  br i1 %1525, label %1526, label %1538

1526:                                             ; preds = %1521
  %1527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1519, i64 0, i32 0
  %1528 = load i32, i32* %1527, align 4
  %1529 = zext i32 %1528 to i33
  %1530 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1529, i33 1) #17
  %1531 = extractvalue { i33, i1 } %1530, 1
  %1532 = extractvalue { i33, i1 } %1530, 0
  %1533 = icmp slt i33 %1532, 0
  %1534 = or i1 %1531, %1533
  br i1 %1534, label %1535, label %1536, !prof !3

1535:                                             ; preds = %1526
  call void @llvm.trap() #17
  unreachable

1536:                                             ; preds = %1526
  %1537 = trunc i33 %1532 to i32
  store i32 %1537, i32* %1527, align 4
  br label %1538

1538:                                             ; preds = %1536, %1521, %1513
  %1539 = ptrtoint %"class.WTF::StringImpl"* %1519 to i64
  %1540 = bitcast i8* %1517 to i64*
  store i64 %1539, i64* %1540, align 8
  %1541 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 1
  %1542 = load i32, i32* %1541, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1373) #17
  switch i32 %1542, label %1553 [
    i32 0, label %1554
    i32 1, label %1543
    i32 2, label %1544
    i32 3, label %1545
    i32 4, label %1546
    i32 5, label %1547
    i32 6, label %1548
    i32 7, label %1549
    i32 8, label %1550
    i32 9, label %1551
    i32 10, label %1552
  ]

1543:                                             ; preds = %1538
  br label %1554

1544:                                             ; preds = %1538
  br label %1554

1545:                                             ; preds = %1538
  br label %1554

1546:                                             ; preds = %1538
  br label %1554

1547:                                             ; preds = %1538
  br label %1554

1548:                                             ; preds = %1538
  br label %1554

1549:                                             ; preds = %1538
  br label %1554

1550:                                             ; preds = %1538
  br label %1554

1551:                                             ; preds = %1538
  br label %1554

1552:                                             ; preds = %1538
  br label %1554

1553:                                             ; preds = %1538
  unreachable

1554:                                             ; preds = %1538, %1552, %1551, %1550, %1549, %1548, %1547, %1546, %1545, %1544, %1543
  %1555 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum22FeatureDisabledForUserE, i64 0, i64 0), %1552 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum13TokenDisabledE, i64 0, i64 0), %1551 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum15FeatureDisabledE, i64 0, i64 0), %1550 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum12WrongVersionE, i64 0, i64 0), %1549 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum9MalformedE, i64 0, i64 0), %1548 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum16InvalidSignatureE, i64 0, i64 0), %1547 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum11WrongOriginE, i64 0, i64 0), %1546 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum7ExpiredE, i64 0, i64 0), %1545 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum8InsecureE, i64 0, i64 0), %1544 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum12NotSupportedE, i64 0, i64 0), %1543 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26OriginTrialTokenStatusEnum7SuccessE, i64 0, i64 0), %1538 ]
  %1556 = call i64 @strlen(i8* nonnull %1555) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* %1555, i64 %1556) #17
  %1557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1374, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1373) #17
  %1558 = getelementptr inbounds i8, i8* %1515, i64 24
  %1559 = icmp eq %"class.WTF::StringImpl"* %1557, null
  br i1 %1559, label %1577, label %1560

1560:                                             ; preds = %1554
  %1561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1562 = load atomic i32, i32* %1561 monotonic, align 4
  %1563 = and i32 %1562, 2
  %1564 = icmp eq i32 %1563, 0
  br i1 %1564, label %1565, label %1579

1565:                                             ; preds = %1560
  %1566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1557, i64 0, i32 0
  %1567 = load i32, i32* %1566, align 4
  %1568 = zext i32 %1567 to i33
  %1569 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1568, i33 1) #17
  %1570 = extractvalue { i33, i1 } %1569, 1
  %1571 = extractvalue { i33, i1 } %1569, 0
  %1572 = icmp slt i33 %1571, 0
  %1573 = or i1 %1570, %1572
  br i1 %1573, label %1574, label %1575, !prof !3

1574:                                             ; preds = %1565
  call void @llvm.trap() #17
  unreachable

1575:                                             ; preds = %1565
  %1576 = trunc i33 %1571 to i32
  store i32 %1576, i32* %1566, align 4
  br label %1579

1577:                                             ; preds = %1554
  %1578 = bitcast i8* %1558 to i64*
  store i64 0, i64* %1578, align 8
  br label %1593

1579:                                             ; preds = %1575, %1560
  %1580 = ptrtoint %"class.WTF::StringImpl"* %1557 to i64
  %1581 = bitcast i8* %1558 to i64*
  store i64 %1580, i64* %1581, align 8
  %1582 = load atomic i32, i32* %1561 monotonic, align 4
  %1583 = and i32 %1582, 2
  %1584 = icmp eq i32 %1583, 0
  %1585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1557, i64 0, i32 0
  %1586 = load i32, i32* %1585, align 4
  br i1 %1584, label %1587, label %1589

1587:                                             ; preds = %1579
  %1588 = add i32 %1586, -1
  store i32 %1588, i32* %1585, align 4
  br label %1589

1589:                                             ; preds = %1587, %1579
  %1590 = phi i32 [ %1588, %1587 ], [ %1586, %1579 ]
  %1591 = icmp eq i32 %1590, 0
  br i1 %1591, label %1592, label %1593

1592:                                             ; preds = %1589
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1557) #17
  br label %1593

1593:                                             ; preds = %1592, %1589, %1577
  %1594 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1595 = load i8, i8* %1594, align 8, !range !4
  %1596 = icmp eq i8 %1595, 0
  br i1 %1596, label %1775, label %1597

1597:                                             ; preds = %1593
  %1598 = call i8* @_Znwm(i64 56) #19
  %1599 = bitcast i8* %1598 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page16OriginTrialTokenE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1599, align 8
  %1600 = getelementptr inbounds i8, i8* %1598, i64 8
  %1601 = bitcast i8* %1600 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1601, align 8
  %1602 = getelementptr inbounds i8, i8* %1598, i64 24
  %1603 = getelementptr inbounds i8, i8* %1598, i64 48
  %1604 = bitcast i8* %1603 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1604, align 8
  %1605 = getelementptr inbounds i8, i8* %1598, i64 16
  store i8 0, i8* %1605, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1602, i8 0, i64 17, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %1375) #17
  %1606 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %8, %"class.url::Origin"* dereferenceable(80) %1606) #17
  %1607 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin19CreateFromUrlOriginERKN3url6OriginE(%"class.url::Origin"* nonnull dereferenceable(80) %8) #17
  %1608 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin11ToRawStringEv(%"class.blink::SecurityOrigin"* %1607) #17
  %1609 = icmp eq %"class.WTF::StringImpl"* %1608, null
  br i1 %1609, label %1627, label %1610

1610:                                             ; preds = %1597
  %1611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1612 = load atomic i32, i32* %1611 monotonic, align 4
  %1613 = and i32 %1612, 2
  %1614 = icmp eq i32 %1613, 0
  br i1 %1614, label %1615, label %1627

1615:                                             ; preds = %1610
  %1616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1608, i64 0, i32 0
  %1617 = load i32, i32* %1616, align 4
  %1618 = zext i32 %1617 to i33
  %1619 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1618, i33 1) #17
  %1620 = extractvalue { i33, i1 } %1619, 1
  %1621 = extractvalue { i33, i1 } %1619, 0
  %1622 = icmp slt i33 %1621, 0
  %1623 = or i1 %1620, %1622
  br i1 %1623, label %1624, label %1625, !prof !3

1624:                                             ; preds = %1615
  call void @llvm.trap() #17
  unreachable

1625:                                             ; preds = %1615
  %1626 = trunc i33 %1621 to i32
  store i32 %1626, i32* %1616, align 4
  br label %1627

1627:                                             ; preds = %1625, %1610, %1597
  %1628 = ptrtoint %"class.WTF::StringImpl"* %1608 to i64
  %1629 = bitcast i8* %1600 to i64*
  store i64 %1628, i64* %1629, align 8
  %1630 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %1631 = load i8, i8* %1630, align 8, !range !4
  %1632 = getelementptr inbounds i8, i8* %1598, i64 40
  store i8 %1631, i8* %1632, align 8
  %1633 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %1634 = load i8, i8* %1633, align 8, !range !4
  store i8 %1634, i8* %1605, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1376) #17
  %1635 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %1636 = load i64, i64* %1635, align 8
  store i64 %1636, i64* %1377, align 8
  %1637 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %9) #17
  %1638 = getelementptr inbounds i8, i8* %1598, i64 32
  %1639 = bitcast i8* %1638 to double*
  store double %1637, double* %1639, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1378) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1379) #17
  %1640 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %1641 = bitcast %"class.std::__1::basic_string"* %1640 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1642 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1641, i64 0, i32 1, i32 0
  %1643 = load i8, i8* %1642, align 1, !noalias !49
  %1644 = icmp slt i8 %1643, 0
  br i1 %1644, label %1647, label %1645

1645:                                             ; preds = %1627
  %1646 = bitcast %"class.std::__1::basic_string"* %1640 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1379, i8* align 8 %1646, i64 24, i1 false) #17
  br label %1652

1647:                                             ; preds = %1627
  %1648 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1640, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1649 = load i8*, i8** %1648, align 8, !noalias !49
  %1650 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1651 = load i64, i64* %1650, align 8, !noalias !49
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %11, i8* %1649, i64 %1651) #17
  br label %1652

1652:                                             ; preds = %1647, %1645
  %1653 = load i8, i8* %1381, align 1
  %1654 = icmp slt i8 %1653, 0
  br i1 %1654, label %1655, label %1658

1655:                                             ; preds = %1652
  %1656 = load i8*, i8** %1382, align 8
  %1657 = icmp eq i8* %1656, null
  br i1 %1657, label %1661, label %1658

1658:                                             ; preds = %1655, %1652
  %1659 = phi i8* [ %1656, %1655 ], [ %1379, %1652 ]
  %1660 = call i64 @strlen(i8* nonnull %1659) #18
  br label %1661

1661:                                             ; preds = %1658, %1655
  %1662 = phi i8* [ %1659, %1658 ], [ null, %1655 ]
  %1663 = phi i64 [ %1660, %1658 ], [ 0, %1655 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* %1662, i64 %1663) #17
  %1664 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1383, align 8
  %1665 = icmp eq %"class.WTF::StringImpl"* %1664, null
  br i1 %1665, label %1683, label %1666

1666:                                             ; preds = %1661
  %1667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1664, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1668 = load atomic i32, i32* %1667 monotonic, align 4
  %1669 = and i32 %1668, 2
  %1670 = icmp eq i32 %1669, 0
  br i1 %1670, label %1671, label %1683

1671:                                             ; preds = %1666
  %1672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1664, i64 0, i32 0
  %1673 = load i32, i32* %1672, align 4
  %1674 = zext i32 %1673 to i33
  %1675 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1674, i33 1) #17
  %1676 = extractvalue { i33, i1 } %1675, 1
  %1677 = extractvalue { i33, i1 } %1675, 0
  %1678 = icmp slt i33 %1677, 0
  %1679 = or i1 %1676, %1678
  br i1 %1679, label %1680, label %1681, !prof !3

1680:                                             ; preds = %1671
  call void @llvm.trap() #17
  unreachable

1681:                                             ; preds = %1671
  %1682 = trunc i33 %1677 to i32
  store i32 %1682, i32* %1672, align 4
  br label %1683

1683:                                             ; preds = %1681, %1666, %1661
  %1684 = ptrtoint %"class.WTF::StringImpl"* %1664 to i64
  %1685 = bitcast i8* %1602 to i64*
  store i64 %1684, i64* %1685, align 8
  %1686 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6
  %1687 = load i32, i32* %1686, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1384) #17
  %1688 = icmp eq i32 %1687, 0
  %1689 = select i1 %1688, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31OriginTrialUsageRestrictionEnum4NoneE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31OriginTrialUsageRestrictionEnum6SubsetE, i64 0, i64 0)
  %1690 = select i1 %1688, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31OriginTrialUsageRestrictionEnum4NoneE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31OriginTrialUsageRestrictionEnum6SubsetE, i64 0, i64 0)
  %1691 = call i64 @strlen(i8* nonnull %1689) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %1690, i64 %1691) #17
  %1692 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1385, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1384) #17
  %1693 = icmp eq %"class.WTF::StringImpl"* %1692, null
  br i1 %1693, label %1711, label %1694

1694:                                             ; preds = %1683
  %1695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1692, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1696 = load atomic i32, i32* %1695 monotonic, align 4
  %1697 = and i32 %1696, 2
  %1698 = icmp eq i32 %1697, 0
  br i1 %1698, label %1699, label %1713

1699:                                             ; preds = %1694
  %1700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1692, i64 0, i32 0
  %1701 = load i32, i32* %1700, align 4
  %1702 = zext i32 %1701 to i33
  %1703 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1702, i33 1) #17
  %1704 = extractvalue { i33, i1 } %1703, 1
  %1705 = extractvalue { i33, i1 } %1703, 0
  %1706 = icmp slt i33 %1705, 0
  %1707 = or i1 %1704, %1706
  br i1 %1707, label %1708, label %1709, !prof !3

1708:                                             ; preds = %1699
  call void @llvm.trap() #17
  unreachable

1709:                                             ; preds = %1699
  %1710 = trunc i33 %1705 to i32
  store i32 %1710, i32* %1700, align 4
  br label %1713

1711:                                             ; preds = %1683
  %1712 = bitcast i8* %1603 to i64*
  store i64 0, i64* %1712, align 8
  br label %1727

1713:                                             ; preds = %1709, %1694
  %1714 = ptrtoint %"class.WTF::StringImpl"* %1692 to i64
  %1715 = bitcast i8* %1603 to i64*
  store i64 %1714, i64* %1715, align 8
  %1716 = load atomic i32, i32* %1695 monotonic, align 4
  %1717 = and i32 %1716, 2
  %1718 = icmp eq i32 %1717, 0
  %1719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1692, i64 0, i32 0
  %1720 = load i32, i32* %1719, align 4
  br i1 %1718, label %1721, label %1723

1721:                                             ; preds = %1713
  %1722 = add i32 %1720, -1
  store i32 %1722, i32* %1719, align 4
  br label %1723

1723:                                             ; preds = %1721, %1713
  %1724 = phi i32 [ %1722, %1721 ], [ %1720, %1713 ]
  %1725 = icmp eq i32 %1724, 0
  br i1 %1725, label %1726, label %1727

1726:                                             ; preds = %1723
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1692) #17
  br label %1727

1727:                                             ; preds = %1726, %1723, %1711
  %1728 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1383, align 8
  %1729 = icmp eq %"class.WTF::StringImpl"* %1728, null
  br i1 %1729, label %1743, label %1730

1730:                                             ; preds = %1727
  %1731 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1728, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1732 = load atomic i32, i32* %1731 monotonic, align 4
  %1733 = and i32 %1732, 2
  %1734 = icmp eq i32 %1733, 0
  %1735 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1728, i64 0, i32 0
  %1736 = load i32, i32* %1735, align 4
  br i1 %1734, label %1737, label %1739

1737:                                             ; preds = %1730
  %1738 = add i32 %1736, -1
  store i32 %1738, i32* %1735, align 4
  br label %1739

1739:                                             ; preds = %1737, %1730
  %1740 = phi i32 [ %1738, %1737 ], [ %1736, %1730 ]
  %1741 = icmp eq i32 %1740, 0
  br i1 %1741, label %1742, label %1743

1742:                                             ; preds = %1739
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1728) #17
  br label %1743

1743:                                             ; preds = %1742, %1739, %1727
  %1744 = load i8, i8* %1381, align 1
  %1745 = icmp slt i8 %1744, 0
  br i1 %1745, label %1746, label %1748

1746:                                             ; preds = %1743
  %1747 = load i8*, i8** %1382, align 8
  call void @_ZdlPv(i8* %1747) #19
  br label %1748

1748:                                             ; preds = %1746, %1743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1379) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1378) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1376) #17
  br i1 %1609, label %1762, label %1749

1749:                                             ; preds = %1748
  %1750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1751 = load atomic i32, i32* %1750 monotonic, align 4
  %1752 = and i32 %1751, 2
  %1753 = icmp eq i32 %1752, 0
  %1754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1608, i64 0, i32 0
  %1755 = load i32, i32* %1754, align 4
  br i1 %1753, label %1756, label %1758

1756:                                             ; preds = %1749
  %1757 = add i32 %1755, -1
  store i32 %1757, i32* %1754, align 4
  br label %1758

1758:                                             ; preds = %1756, %1749
  %1759 = phi i32 [ %1757, %1756 ], [ %1755, %1749 ]
  %1760 = icmp eq i32 %1759, 0
  br i1 %1760, label %1761, label %1762

1761:                                             ; preds = %1758
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1608) #17
  br label %1762

1762:                                             ; preds = %1761, %1758, %1748
  %1763 = icmp eq %"class.blink::SecurityOrigin"* %1607, null
  br i1 %1763, label %1771, label %1764

1764:                                             ; preds = %1762
  %1765 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1607, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1765) #17
  %1766 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1607, i64 0, i32 0, i32 0, i32 0, i32 0
  %1767 = load i32, i32* %1766, align 4
  %1768 = icmp eq i32 %1767, 0
  br i1 %1768, label %1769, label %1771

1769:                                             ; preds = %1764
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %1607) #17
  %1770 = bitcast %"class.blink::SecurityOrigin"* %1607 to i8*
  call void @free(i8* %1770) #17
  br label %1771

1771:                                             ; preds = %1769, %1764, %1762
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %1375) #17
  %1772 = ptrtoint i8* %1598 to i64
  %1773 = getelementptr inbounds i8, i8* %1515, i64 16
  %1774 = bitcast i8* %1773 to i64*
  store i64 %1772, i64* %1774, align 8
  br label %1775

1775:                                             ; preds = %1771, %1593
  store i8* %1515, i8** %1387, align 8
  %1776 = load %"class.std::__1::unique_ptr.3492"*, %"class.std::__1::unique_ptr.3492"** %1433, align 8
  %1777 = load %"class.std::__1::unique_ptr.3492"*, %"class.std::__1::unique_ptr.3492"** %1435, align 8
  %1778 = icmp ult %"class.std::__1::unique_ptr.3492"* %1776, %1777
  br i1 %1778, label %1779, label %1784

1779:                                             ; preds = %1775
  %1780 = ptrtoint i8* %1515 to i64
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %1386, align 8
  %1781 = bitcast %"class.std::__1::unique_ptr.3492"* %1776 to i64*
  store i64 %1780, i64* %1781, align 8
  %1782 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %1776, i64 1
  %1783 = ptrtoint %"class.std::__1::unique_ptr.3492"* %1782 to i64
  store i64 %1783, i64* %1436, align 8
  br label %1785

1784:                                             ; preds = %1775
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page26OriginTrialTokenWithStatusENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3490"* nonnull %1422, %"class.std::__1::unique_ptr.3492"* nonnull dereferenceable(8) %14) #17
  br label %1785

1785:                                             ; preds = %1784, %1779
  %1786 = load %"class.blink::protocol::Page::OriginTrialTokenWithStatus"*, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %1386, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %1386, align 8
  %1787 = icmp eq %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* %1786, null
  br i1 %1787, label %1793, label %1788

1788:                                             ; preds = %1785
  %1789 = bitcast %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* %1786 to void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)***
  %1790 = load void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)**, void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)*** %1789, align 8
  %1791 = getelementptr inbounds void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)*, void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)** %1790, i64 2
  %1792 = load void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)*, void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)** %1791, align 8
  call void %1792(%"class.blink::protocol::Page::OriginTrialTokenWithStatus"* nonnull %1786) #17
  br label %1793

1793:                                             ; preds = %1788, %1785
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1372) #17
  %1794 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1514, i64 1
  %1795 = icmp eq %"struct.blink::OriginTrialTokenResult"* %1794, %1429
  br i1 %1795, label %1437, label %1513

1796:                                             ; preds = %1512, %1509, %1493
  store i8* %1438, i8** %1391, align 8
  %1797 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %1393, align 8
  %1798 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %1395, align 8
  %1799 = icmp ult %"class.std::__1::unique_ptr.3481"* %1797, %1798
  br i1 %1799, label %1800, label %1805

1800:                                             ; preds = %1796
  %1801 = ptrtoint i8* %1438 to i64
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %1390, align 8
  %1802 = bitcast %"class.std::__1::unique_ptr.3481"* %1797 to i64*
  store i64 %1801, i64* %1802, align 8
  %1803 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %1797, i64 1
  %1804 = ptrtoint %"class.std::__1::unique_ptr.3481"* %1803 to i64
  store i64 %1804, i64* %1396, align 8
  br label %1806

1805:                                             ; preds = %1796
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page11OriginTrialENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3479"* nonnull %1304, %"class.std::__1::unique_ptr.3481"* nonnull dereferenceable(8) %16) #17
  br label %1806

1806:                                             ; preds = %1805, %1800
  %1807 = load %"class.blink::protocol::Page::OriginTrial"*, %"class.blink::protocol::Page::OriginTrial"** %1390, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %1390, align 8
  %1808 = icmp eq %"class.blink::protocol::Page::OriginTrial"* %1807, null
  br i1 %1808, label %1814, label %1809

1809:                                             ; preds = %1806
  %1810 = bitcast %"class.blink::protocol::Page::OriginTrial"* %1807 to void (%"class.blink::protocol::Page::OriginTrial"*)***
  %1811 = load void (%"class.blink::protocol::Page::OriginTrial"*)**, void (%"class.blink::protocol::Page::OriginTrial"*)*** %1810, align 8
  %1812 = getelementptr inbounds void (%"class.blink::protocol::Page::OriginTrial"*)*, void (%"class.blink::protocol::Page::OriginTrial"*)** %1811, i64 2
  %1813 = load void (%"class.blink::protocol::Page::OriginTrial"*)*, void (%"class.blink::protocol::Page::OriginTrial"*)** %1812, align 8
  call void %1813(%"class.blink::protocol::Page::OriginTrial"* nonnull %1807) #17
  br label %1814

1814:                                             ; preds = %1809, %1806
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1371) #17
  %1815 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1420, i64 1
  %1816 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1815, %1357
  br i1 %1816, label %1397, label %1817

1817:                                             ; preds = %1814, %1821
  %1818 = phi %"struct.WTF::KeyValuePair.1487"* [ %1822, %1821 ], [ %1815, %1814 ]
  %1819 = bitcast %"struct.WTF::KeyValuePair.1487"* %1818 to i64*
  %1820 = load i64, i64* %1819, align 8
  switch i64 %1820, label %1824 [
    i64 -1, label %1821
    i64 0, label %1821
  ]

1821:                                             ; preds = %1817, %1817
  %1822 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %1818, i64 1
  %1823 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1822, %1357
  br i1 %1823, label %1397, label %1817

1824:                                             ; preds = %1817
  %1825 = icmp eq %"struct.WTF::KeyValuePair.1487"* %1818, %1357
  br i1 %1825, label %1397, label %1419

1826:                                             ; preds = %1399, %1417
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1307) #17
  %1827 = bitcast i8* %1303 to %"class.std::__1::unique_ptr.3481"**
  %1828 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %1827, align 8
  %1829 = getelementptr inbounds i8, i8* %1303, i64 8
  %1830 = bitcast i8* %1829 to %"class.std::__1::unique_ptr.3481"**
  %1831 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %1830, align 8
  %1832 = icmp eq %"class.std::__1::unique_ptr.3481"* %1828, %1831
  br i1 %1832, label %1869, label %1833

1833:                                             ; preds = %1826
  %1834 = ptrtoint i8* %1303 to i64
  %1835 = getelementptr inbounds i8, i8* %25, i64 160
  %1836 = bitcast i8* %1835 to %"class.std::__1::vector.3479"**
  %1837 = load %"class.std::__1::vector.3479"*, %"class.std::__1::vector.3479"** %1836, align 8
  %1838 = bitcast i8* %1835 to i64*
  store i64 %1834, i64* %1838, align 8
  %1839 = icmp eq %"class.std::__1::vector.3479"* %1837, null
  br i1 %1839, label %1874, label %1840

1840:                                             ; preds = %1833
  %1841 = getelementptr inbounds %"class.std::__1::vector.3479", %"class.std::__1::vector.3479"* %1837, i64 0, i32 0, i32 0
  %1842 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %1841, align 8
  %1843 = icmp eq %"class.std::__1::unique_ptr.3481"* %1842, null
  br i1 %1843, label %1867, label %1844

1844:                                             ; preds = %1840
  %1845 = bitcast %"class.std::__1::unique_ptr.3481"* %1842 to i8*
  %1846 = getelementptr inbounds %"class.std::__1::vector.3479", %"class.std::__1::vector.3479"* %1837, i64 0, i32 0, i32 1
  %1847 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %1846, align 8
  %1848 = icmp eq %"class.std::__1::unique_ptr.3481"* %1847, %1842
  br i1 %1848, label %1865, label %1849

1849:                                             ; preds = %1844, %1860
  %1850 = phi %"class.std::__1::unique_ptr.3481"* [ %1851, %1860 ], [ %1847, %1844 ]
  %1851 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %1850, i64 -1
  %1852 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %1851, i64 0, i32 0, i32 0, i32 0
  %1853 = load %"class.blink::protocol::Page::OriginTrial"*, %"class.blink::protocol::Page::OriginTrial"** %1852, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %1852, align 8
  %1854 = icmp eq %"class.blink::protocol::Page::OriginTrial"* %1853, null
  br i1 %1854, label %1860, label %1855

1855:                                             ; preds = %1849
  %1856 = bitcast %"class.blink::protocol::Page::OriginTrial"* %1853 to void (%"class.blink::protocol::Page::OriginTrial"*)***
  %1857 = load void (%"class.blink::protocol::Page::OriginTrial"*)**, void (%"class.blink::protocol::Page::OriginTrial"*)*** %1856, align 8
  %1858 = getelementptr inbounds void (%"class.blink::protocol::Page::OriginTrial"*)*, void (%"class.blink::protocol::Page::OriginTrial"*)** %1857, i64 2
  %1859 = load void (%"class.blink::protocol::Page::OriginTrial"*)*, void (%"class.blink::protocol::Page::OriginTrial"*)** %1858, align 8
  call void %1859(%"class.blink::protocol::Page::OriginTrial"* nonnull %1853) #17
  br label %1860

1860:                                             ; preds = %1855, %1849
  %1861 = icmp eq %"class.std::__1::unique_ptr.3481"* %1851, %1842
  br i1 %1861, label %1862, label %1849

1862:                                             ; preds = %1860
  %1863 = bitcast %"class.std::__1::vector.3479"* %1837 to i8**
  %1864 = load i8*, i8** %1863, align 8
  br label %1865

1865:                                             ; preds = %1862, %1844
  %1866 = phi i8* [ %1864, %1862 ], [ %1845, %1844 ]
  store %"class.std::__1::unique_ptr.3481"* %1842, %"class.std::__1::unique_ptr.3481"** %1846, align 8
  call void @_ZdlPv(i8* %1866) #19
  br label %1867

1867:                                             ; preds = %1865, %1840
  %1868 = bitcast %"class.std::__1::vector.3479"* %1837 to i8*
  call void @_ZdlPv(i8* %1868) #19
  br label %1874

1869:                                             ; preds = %1826
  %1870 = icmp eq %"class.std::__1::unique_ptr.3481"* %1828, null
  br i1 %1870, label %1873, label %1871

1871:                                             ; preds = %1869
  %1872 = bitcast %"class.std::__1::unique_ptr.3481"* %1828 to i8*
  store %"class.std::__1::unique_ptr.3481"* %1828, %"class.std::__1::unique_ptr.3481"** %1830, align 8
  call void @_ZdlPv(i8* %1872) #19
  br label %1873

1873:                                             ; preds = %1871, %1869
  call void @_ZdlPv(i8* nonnull %1303) #19
  br label %1874

1874:                                             ; preds = %1867, %1833, %1873
  ret %"class.blink::protocol::Page::Frame"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent30DidRestoreFromBackForwardCacheEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %4, align 8
  %6 = tail call %"class.blink::protocol::Page::Frame"* @_ZN5blink18InspectorPageAgent19BuildObjectForFrameEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* undef, %"class.blink::LocalFrame"* %1)
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page18NavigationTypeEnum23BackForwardCacheRestoreE, i64 0, i64 0)) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page18NavigationTypeEnum23BackForwardCacheRestoreE, i64 0, i64 0), i64 %8) #17
  call void @_ZN5blink8protocol4Page8Frontend14frameNavigatedENSt3__110unique_ptrINS1_5FrameENS3_14default_deleteIS5_EEEERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"* %5, %"class.blink::protocol::Page::Frame"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #17
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent15DidOpenDocumentEPNS_10LocalFrameEPNS_14DocumentLoaderE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*, %"class.blink::DocumentLoader"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %2, i64 0, i32 21, i32 0, i32 0
  %7 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %6, align 8
  %8 = tail call %"class.blink::protocol::Page::Frame"* @_ZN5blink18InspectorPageAgent19BuildObjectForFrameEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* undef, %"class.blink::LocalFrame"* %7)
  tail call void @_ZN5blink8protocol4Page8Frontend14documentOpenedENSt3__110unique_ptrINS1_5FrameENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Page::Frontend"* %5, %"class.blink::protocol::Page::Frame"* nonnull %8) #17
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %10 = add i64 %9, -9223372036854775807
  %11 = icmp ult i64 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = sitofp i64 %9 to double
  %14 = fdiv double %13, 1.000000e+06
  br label %18

15:                                               ; preds = %3
  %16 = icmp slt i64 %9, 0
  %17 = select i1 %16, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %18

18:                                               ; preds = %12, %15
  %19 = phi double [ %17, %15 ], [ %14, %12 ]
  tail call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %0, %"class.blink::LocalFrame"* %1, %"class.blink::DocumentLoader"* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), double %19)
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend14documentOpenedENSt3__110unique_ptrINS1_5FrameENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent21FrameAttachedToParentEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.crdtp::detail::PtrMaybe.3713", align 8
  %6 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0, i32 1
  %8 = tail call %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"* %7) #17
  %9 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation25CaptureWithFullStackTraceEv() #17
  %10 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %6) #17
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %8) #17
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = icmp eq %"class.blink::SourceLocation"* %9, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = tail call %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"* nonnull %9) #17
  %21 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %20 to i64
  br label %22

22:                                               ; preds = %2, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %2 ]
  %24 = bitcast %"class.crdtp::detail::PtrMaybe.3713"* %5 to i64*
  store i64 %23, i64* %24, align 8
  call void @_ZN5blink8protocol4Page8Frontend13frameAttachedERKN3WTF6StringES6_N5crdtp6detail8PtrMaybeIN12v8_inspector8protocol7Runtime3API10StackTraceEEE(%"class.blink::protocol::Page::Frontend"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.crdtp::detail::PtrMaybe.3713"* nonnull %5) #17
  %25 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3713", %"class.crdtp::detail::PtrMaybe.3713"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"** %25, align 8
  store %"class.v8_inspector::protocol::Runtime::API::StackTrace"* null, %"class.v8_inspector::protocol::Runtime::API::StackTrace"** %25, align 8
  %27 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %26 to void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)***
  %30 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %30, i64 2
  %32 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %31, align 8
  call void %32(%"class.v8_inspector::protocol::Runtime::API::StackTrace"* nonnull %26) #17
  br label %33

33:                                               ; preds = %22, %28
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #17
  br label %49

49:                                               ; preds = %33, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #17
  br label %65

65:                                               ; preds = %49, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %66 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %10, align 8
  call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %66) #17
  br i1 %18, label %69, label %67

67:                                               ; preds = %65
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %9) #17
  %68 = bitcast %"class.blink::SourceLocation"* %9 to i8*
  call void @free(i8* %68) #17
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"*) local_unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation25CaptureWithFullStackTraceEv() local_unnamed_addr #2

declare void @_ZN5blink8protocol4Page8Frontend13frameAttachedERKN3WTF6StringES6_N5crdtp6detail8PtrMaybeIN12v8_inspector8protocol7Runtime3API10StackTraceEEE(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::PtrMaybe.3713"*) local_unnamed_addr #2

declare %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"*) local_unnamed_addr #2

declare void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent23FrameDetachedFromParentEPNS_10LocalFrameENS_15FrameDetachTypeE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %7, align 8
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %10) #17
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %3
  %17 = load i8*, i8** @_ZN5blink8protocol4Page13FrameDetached10ReasonEnum6RemoveE, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = tail call i64 @strlen(i8* nonnull %17) #18
  br label %21

21:                                               ; preds = %19, %16
  %22 = phi i64 [ %20, %19 ], [ 0, %16 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %17, i64 %22) #17
  br label %30

23:                                               ; preds = %3
  %24 = load i8*, i8** @_ZN5blink8protocol4Page13FrameDetached10ReasonEnum4SwapE, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  %27 = tail call i64 @strlen(i8* nonnull %24) #18
  br label %28

28:                                               ; preds = %26, %23
  %29 = phi i64 [ %27, %26 ], [ 0, %23 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %24, i64 %29) #17
  br label %30

30:                                               ; preds = %21, %28
  %31 = bitcast %"class.WTF::String"* %4 to i64*
  %32 = load i64, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %32, i64* %34, align 8
  call void @_ZN5blink8protocol4Page8Frontend13frameDetachedERKN3WTF6StringES6_(%"class.blink::protocol::Page::Frontend"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #17
  br label %50

50:                                               ; preds = %30, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #17
  br label %66

66:                                               ; preds = %50, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend13frameDetachedERKN3WTF6StringES6_(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink18InspectorPageAgent17ScreencastEnabledEv(%"class.blink::InspectorPageAgent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 13, i32 2
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent19FrameStartedLoadingEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %7) #17
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  call void @_ZN5blink8protocol4Page8Frontend19frameStartedLoadingERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #17
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %26 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %4, align 8
  call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %26) #17
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend19frameStartedLoadingERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent19FrameStoppedLoadingEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %7) #17
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  call void @_ZN5blink8protocol4Page8Frontend19frameStoppedLoadingERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #17
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %26 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %4, align 8
  call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %26) #17
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend19frameStoppedLoadingERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent24FrameRequestedNavigationEPNS_5FrameERKNS_4KURLENS_22ClientNavigationReasonENS_16NavigationPolicyE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::Frame"*, %"class.blink::KURL"* dereferenceable(112), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %1) #17
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_132ClientNavigationReasonToProtocolENS_22ClientNavigationReasonE(i32 %3)
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4
  %19 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  switch i32 %4, label %26 [
    i32 0, label %27
    i32 1, label %21
    i32 2, label %22
    i32 3, label %23
    i32 4, label %24
    i32 5, label %25
  ]

21:                                               ; preds = %5
  br label %27

22:                                               ; preds = %5
  br label %27

23:                                               ; preds = %5
  br label %27

24:                                               ; preds = %5
  br label %27

25:                                               ; preds = %5
  br label %27

26:                                               ; preds = %5
  br label %27

27:                                               ; preds = %5, %21, %22, %23, %24, %25, %26
  %28 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31ClientNavigationDispositionEnum10CurrentTabE, i64 0, i64 0), %21 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31ClientNavigationDispositionEnum6NewTabE, i64 0, i64 0), %22 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31ClientNavigationDispositionEnum6NewTabE, i64 0, i64 0), %23 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31ClientNavigationDispositionEnum9NewWindowE, i64 0, i64 0), %24 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31ClientNavigationDispositionEnum9NewWindowE, i64 0, i64 0), %25 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31ClientNavigationDispositionEnum10CurrentTabE, i64 0, i64 0), %26 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page31ClientNavigationDispositionEnum8DownloadE, i64 0, i64 0), %5 ]
  %29 = tail call i64 @strlen(i8* nonnull %28) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %28, i64 %29) #17
  %30 = bitcast %"class.WTF::String"* %6 to i64*
  %31 = load i64, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::String"* %9 to i64*
  store i64 %31, i64* %33, align 8
  call void @_ZN5blink8protocol4Page8Frontend24frameRequestedNavigationERKN3WTF6StringES6_S6_S6_(%"class.blink::protocol::Page::Frontend"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* nonnull dereferenceable(8) %9) #17
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #17
  br label %49

49:                                               ; preds = %27, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #17
  br label %65

65:                                               ; preds = %49, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #17
  br label %81

81:                                               ; preds = %65, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %82 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %10, align 8
  call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %82) #17
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend24frameRequestedNavigationERKN3WTF6StringES6_S6_S6_(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_132ClientNavigationReasonToProtocolENS_22ClientNavigationReasonE(i32) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %10 [
    i32 2, label %11
    i32 0, label %3
    i32 1, label %4
    i32 3, label %5
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 7, label %9
  ]

3:                                                ; preds = %1
  br label %11

4:                                                ; preds = %1
  br label %11

5:                                                ; preds = %1
  br label %11

6:                                                ; preds = %1
  br label %11

7:                                                ; preds = %1
  br label %11

8:                                                ; preds = %1
  br label %11

9:                                                ; preds = %1
  br label %11

10:                                               ; preds = %1
  br label %11

11:                                               ; preds = %1, %10, %9, %8, %7, %6, %5, %4, %3
  %12 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum6ReloadE, i64 0, i64 0), %10 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum6ReloadE, i64 0, i64 0), %9 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum21PageBlockInterstitialE, i64 0, i64 0), %8 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum14MetaTagRefreshE, i64 0, i64 0), %7 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum15ScriptInitiatedE, i64 0, i64 0), %6 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum17HttpHeaderRefreshE, i64 0, i64 0), %5 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum18FormSubmissionPostE, i64 0, i64 0), %4 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum17FormSubmissionGetE, i64 0, i64 0), %3 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol4Page26ClientNavigationReasonEnum11AnchorClickE, i64 0, i64 0), %1 ]
  %13 = tail call i64 @strlen(i8* nonnull %12) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %12, i64 %13) #17
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  ret %"class.WTF::StringImpl"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent24FrameScheduledNavigationEPNS_10LocalFrameERKNS_4KURLEN4base9TimeDeltaENS_22ClientNavigationReasonE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), i64, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %8, align 8
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %11) #17
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = add i64 %3, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %19, label %16

16:                                               ; preds = %5
  %17 = sitofp i64 %3 to double
  %18 = fdiv double %17, 1.000000e+06
  br label %22

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 0
  %21 = select i1 %20, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi double [ %21, %19 ], [ %18, %16 ]
  %24 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_132ClientNavigationReasonToProtocolENS_22ClientNavigationReasonE(i32 %4)
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4
  call void @_ZN5blink8protocol4Page8Frontend24frameScheduledNavigationERKN3WTF6StringEdS6_S6_(%"class.blink::protocol::Page::Frontend"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %6, double %23, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %27) #17
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %22, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #17
  br label %59

59:                                               ; preds = %43, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  %60 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %8, align 8
  call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %60) #17
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend24frameScheduledNavigationERKN3WTF6StringEdS6_S6_(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent31FrameClearedScheduledNavigationEPNS_10LocalFrameE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %7) #17
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  call void @_ZN5blink8protocol4Page8Frontend31frameClearedScheduledNavigationERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #17
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %26 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %4, align 8
  call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %26) #17
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend31frameClearedScheduledNavigationERKN3WTF6StringE(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent23WillRunJavaScriptDialogEv(%"class.blink::InspectorPageAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %2, align 8
  tail call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent22DidRunJavaScriptDialogEv(%"class.blink::InspectorPageAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %2, align 8
  tail call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent18DidResizeMainFrameEv(%"class.blink::InspectorPageAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %5, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %6) #17
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %10 = load i8, i8* %9, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 6
  %14 = load %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorPageAgent::Client"** %13, align 8
  %15 = icmp eq %"class.blink::InspectorPageAgent::Client"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::InspectorPageAgent::Client"* %14 to void (%"class.blink::InspectorPageAgent::Client"*, i1)***
  %18 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)**, void (%"class.blink::InspectorPageAgent::Client"*, i1)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %18, i64 2
  %20 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %19, align 8
  tail call void %20(%"class.blink::InspectorPageAgent::Client"* nonnull %14, i1 zeroext true) #17
  br label %21

21:                                               ; preds = %8, %12, %16
  %22 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %22, align 8
  tail call void @_ZN5blink8protocol4Page8Frontend12frameResizedEv(%"class.blink::protocol::Page::Frontend"* %23) #17
  br label %24

24:                                               ; preds = %1, %21
  ret void
}

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent21PageLayoutInvalidatedEb(%"class.blink::InspectorPageAgent"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 6
  %8 = load %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorPageAgent::Client"** %7, align 8
  %9 = icmp eq %"class.blink::InspectorPageAgent::Client"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::InspectorPageAgent::Client"* %8 to void (%"class.blink::InspectorPageAgent::Client"*, i1)***
  %12 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)**, void (%"class.blink::InspectorPageAgent::Client"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %12, i64 2
  %14 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %13, align 8
  tail call void %14(%"class.blink::InspectorPageAgent::Client"* nonnull %8, i1 zeroext %1) #17
  br label %15

15:                                               ; preds = %2, %6, %10
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend12frameResizedEv(%"class.blink::protocol::Page::Frontend"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent17DidChangeViewportEv(%"class.blink::InspectorPageAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 6
  %7 = load %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorPageAgent::Client"** %6, align 8
  %8 = icmp eq %"class.blink::InspectorPageAgent::Client"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::InspectorPageAgent::Client"* %7 to void (%"class.blink::InspectorPageAgent::Client"*, i1)***
  %11 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)**, void (%"class.blink::InspectorPageAgent::Client"*, i1)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %11, i64 2
  %13 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %12, align 8
  tail call void %13(%"class.blink::InspectorPageAgent::Client"* nonnull %7, i1 zeroext false) #17
  br label %14

14:                                               ; preds = %1, %5, %9
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend14lifecycleEventERKN3WTF6StringES6_S6_d(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory8LoaderIdEPNS_14DocumentLoaderE(%"class.blink::DocumentLoader"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent11PaintTimingEPNS_8DocumentEPKcd(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::Document"*, i8*, double) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #17
  %6 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %5, i64 0, i32 10, i32 2, i32 0, i32 0
  %7 = load %"class.blink::DocumentLoader"*, %"class.blink::DocumentLoader"** %6, align 8
  tail call void @_ZN5blink18InspectorPageAgent14LifecycleEventEPNS_10LocalFrameEPNS_14DocumentLoaderEPKcd(%"class.blink::InspectorPageAgent"* %0, %"class.blink::LocalFrame"* %5, %"class.blink::DocumentLoader"* %7, i8* %2, double %3)
  ret void
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent4WillERKNS_5probe12UpdateLayoutE(%"class.blink::InspectorPageAgent"* nocapture, %"class.blink::probe::UpdateLayout"* nocapture dereferenceable(32)) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent3DidERKNS_5probe12UpdateLayoutE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::probe::UpdateLayout"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 6
  %8 = load %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorPageAgent::Client"** %7, align 8
  %9 = icmp eq %"class.blink::InspectorPageAgent::Client"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::InspectorPageAgent::Client"* %8 to void (%"class.blink::InspectorPageAgent::Client"*, i1)***
  %12 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)**, void (%"class.blink::InspectorPageAgent::Client"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %12, i64 2
  %14 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %13, align 8
  tail call void %14(%"class.blink::InspectorPageAgent::Client"* nonnull %8, i1 zeroext false) #17
  br label %15

15:                                               ; preds = %2, %6, %10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent4WillERKNS_5probe16RecalculateStyleE(%"class.blink::InspectorPageAgent"* nocapture, %"class.blink::probe::RecalculateStyle"* nocapture dereferenceable(32)) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent3DidERKNS_5probe16RecalculateStyleE(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::probe::RecalculateStyle"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 6
  %8 = load %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorPageAgent::Client"** %7, align 8
  %9 = icmp eq %"class.blink::InspectorPageAgent::Client"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::InspectorPageAgent::Client"* %8 to void (%"class.blink::InspectorPageAgent::Client"*, i1)***
  %12 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)**, void (%"class.blink::InspectorPageAgent::Client"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %12, i64 2
  %14 = load void (%"class.blink::InspectorPageAgent::Client"*, i1)*, void (%"class.blink::InspectorPageAgent::Client"*, i1)** %13, align 8
  tail call void %14(%"class.blink::InspectorPageAgent::Client"* nonnull %8, i1 zeroext false) #17
  br label %15

15:                                               ; preds = %2, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent10WindowOpenERKNS_4KURLERKN3WTF12AtomicStringERKNS_17WebWindowFeaturesEb(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::AtomicString"* dereferenceable(8), %"struct.blink::WebWindowFeatures"* nocapture readonly dereferenceable(104), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %1) #17
  br i1 %12, label %13, label %15

13:                                               ; preds = %5
  %14 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink8BlankURLEv() #17
  br label %15

15:                                               ; preds = %5, %13
  %16 = phi %"class.blink::KURL"* [ %14, %13 ], [ %1, %5 ]
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %16, i64 0, i32 4
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  %19 = tail call i8* @_Znwm(i64 24) #19
  %20 = bitcast i8* %19 to %"class.std::__1::vector.3466"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #17
  %21 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 1
  %22 = load i8, i8* %21, align 4, !range !4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %60, label %24

24:                                               ; preds = %15
  %25 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  %26 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i32 %27) #17
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %19, i64 8
  %31 = bitcast i8* %30 to %"class.WTF::String"**
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %33 = getelementptr inbounds i8, i8* %19, i64 16
  %34 = bitcast i8* %33 to %"class.WTF::String"**
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %36 = icmp ult %"class.WTF::String"* %32, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %24
  %38 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  %39 = bitcast %"class.WTF::String"* %32 to i64*
  store i64 %38, i64* %39, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 1
  %41 = ptrtoint %"class.WTF::String"* %40 to i64
  %42 = bitcast i8* %30 to i64*
  store i64 %41, i64* %42, align 8
  br label %59

43:                                               ; preds = %24
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #17
  br label %59

59:                                               ; preds = %58, %55, %43, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  br label %60

60:                                               ; preds = %59, %15
  %61 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 3
  %62 = load i8, i8* %61, align 4, !range !4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %100, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #17
  %66 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i32 %67) #17
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds i8, i8* %19, i64 8
  %71 = bitcast i8* %70 to %"class.WTF::String"**
  %72 = load %"class.WTF::String"*, %"class.WTF::String"** %71, align 8
  %73 = getelementptr inbounds i8, i8* %19, i64 16
  %74 = bitcast i8* %73 to %"class.WTF::String"**
  %75 = load %"class.WTF::String"*, %"class.WTF::String"** %74, align 8
  %76 = icmp ult %"class.WTF::String"* %72, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %64
  %78 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  %79 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 1
  %81 = ptrtoint %"class.WTF::String"* %80 to i64
  %82 = bitcast i8* %70 to i64*
  store i64 %81, i64* %82, align 8
  br label %99

83:                                               ; preds = %64
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, %"class.WTF::String"* nonnull dereferenceable(8) %7) #17
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #17
  br label %99

99:                                               ; preds = %98, %95, %83, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #17
  br label %100

100:                                              ; preds = %99, %60
  %101 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 5
  %102 = load i8, i8* %101, align 4, !range !4
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %140, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #17
  %106 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 4
  %107 = load i32, i32* %106, align 8
  %108 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), i32 %107) #17
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %109, align 8
  %110 = getelementptr inbounds i8, i8* %19, i64 8
  %111 = bitcast i8* %110 to %"class.WTF::String"**
  %112 = load %"class.WTF::String"*, %"class.WTF::String"** %111, align 8
  %113 = getelementptr inbounds i8, i8* %19, i64 16
  %114 = bitcast i8* %113 to %"class.WTF::String"**
  %115 = load %"class.WTF::String"*, %"class.WTF::String"** %114, align 8
  %116 = icmp ult %"class.WTF::String"* %112, %115
  br i1 %116, label %117, label %123

117:                                              ; preds = %104
  %118 = ptrtoint %"class.WTF::StringImpl"* %108 to i64
  %119 = bitcast %"class.WTF::String"* %112 to i64*
  store i64 %118, i64* %119, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %109, align 8
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 1
  %121 = ptrtoint %"class.WTF::String"* %120 to i64
  %122 = bitcast i8* %110 to i64*
  store i64 %121, i64* %122, align 8
  br label %139

123:                                              ; preds = %104
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, %"class.WTF::String"* nonnull dereferenceable(8) %8) #17
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #17
  br label %139

139:                                              ; preds = %138, %135, %123, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #17
  br label %140

140:                                              ; preds = %139, %100
  %141 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 7
  %142 = load i8, i8* %141, align 4, !range !4
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %180, label %144

144:                                              ; preds = %140
  %145 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #17
  %146 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 6
  %147 = load i32, i32* %146, align 8
  %148 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0), i32 %147) #17
  %149 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %149, align 8
  %150 = getelementptr inbounds i8, i8* %19, i64 8
  %151 = bitcast i8* %150 to %"class.WTF::String"**
  %152 = load %"class.WTF::String"*, %"class.WTF::String"** %151, align 8
  %153 = getelementptr inbounds i8, i8* %19, i64 16
  %154 = bitcast i8* %153 to %"class.WTF::String"**
  %155 = load %"class.WTF::String"*, %"class.WTF::String"** %154, align 8
  %156 = icmp ult %"class.WTF::String"* %152, %155
  br i1 %156, label %157, label %163

157:                                              ; preds = %144
  %158 = ptrtoint %"class.WTF::StringImpl"* %148 to i64
  %159 = bitcast %"class.WTF::String"* %152 to i64*
  store i64 %158, i64* %159, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %149, align 8
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 1
  %161 = ptrtoint %"class.WTF::String"* %160 to i64
  %162 = bitcast i8* %150 to i64*
  store i64 %161, i64* %162, align 8
  br label %179

163:                                              ; preds = %144
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, %"class.WTF::String"* nonnull dereferenceable(8) %9) #17
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #17
  br label %179

179:                                              ; preds = %178, %175, %163, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #17
  br label %180

180:                                              ; preds = %179, %140
  %181 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 8
  %182 = load i8, i8* %181, align 1, !range !4
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %197, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds i8, i8* %19, i64 8
  %186 = bitcast i8* %185 to %"class.WTF::String"**
  %187 = load %"class.WTF::String"*, %"class.WTF::String"** %186, align 8
  %188 = getelementptr inbounds i8, i8* %19, i64 16
  %189 = bitcast i8* %188 to %"class.WTF::String"**
  %190 = load %"class.WTF::String"*, %"class.WTF::String"** %189, align 8
  %191 = icmp ult %"class.WTF::String"* %187, %190
  br i1 %191, label %192, label %196

192:                                              ; preds = %184
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %187, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i64 7) #17
  %193 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %187, i64 1
  %194 = ptrtoint %"class.WTF::String"* %193 to i64
  %195 = bitcast i8* %185 to i64*
  store i64 %194, i64* %195, align 8
  br label %197

196:                                              ; preds = %184
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA8_KcEEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, [8 x i8]* nonnull dereferenceable(8) @.str.28) #17
  br label %197

197:                                              ; preds = %196, %192, %180
  %198 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 10
  %199 = load i8, i8* %198, align 1, !range !4
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %214, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds i8, i8* %19, i64 8
  %203 = bitcast i8* %202 to %"class.WTF::String"**
  %204 = load %"class.WTF::String"*, %"class.WTF::String"** %203, align 8
  %205 = getelementptr inbounds i8, i8* %19, i64 16
  %206 = bitcast i8* %205 to %"class.WTF::String"**
  %207 = load %"class.WTF::String"*, %"class.WTF::String"** %206, align 8
  %208 = icmp ult %"class.WTF::String"* %204, %207
  br i1 %208, label %209, label %213

209:                                              ; preds = %201
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %204, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0), i64 7) #17
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %204, i64 1
  %211 = ptrtoint %"class.WTF::String"* %210 to i64
  %212 = bitcast i8* %202 to i64*
  store i64 %211, i64* %212, align 8
  br label %214

213:                                              ; preds = %201
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA8_KcEEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, [8 x i8]* nonnull dereferenceable(8) @.str.29) #17
  br label %214

214:                                              ; preds = %213, %209, %197
  %215 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 9
  %216 = load i8, i8* %215, align 2, !range !4
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %231, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds i8, i8* %19, i64 8
  %220 = bitcast i8* %219 to %"class.WTF::String"**
  %221 = load %"class.WTF::String"*, %"class.WTF::String"** %220, align 8
  %222 = getelementptr inbounds i8, i8* %19, i64 16
  %223 = bitcast i8* %222 to %"class.WTF::String"**
  %224 = load %"class.WTF::String"*, %"class.WTF::String"** %223, align 8
  %225 = icmp ult %"class.WTF::String"* %221, %224
  br i1 %225, label %226, label %230

226:                                              ; preds = %218
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %221, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i64 6) #17
  %227 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %221, i64 1
  %228 = ptrtoint %"class.WTF::String"* %227 to i64
  %229 = bitcast i8* %219 to i64*
  store i64 %228, i64* %229, align 8
  br label %231

230:                                              ; preds = %218
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA7_KcEEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, [7 x i8]* nonnull dereferenceable(7) @.str.30) #17
  br label %231

231:                                              ; preds = %230, %226, %214
  %232 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 11
  %233 = load i8, i8* %232, align 8, !range !4
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %248, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds i8, i8* %19, i64 8
  %237 = bitcast i8* %236 to %"class.WTF::String"**
  %238 = load %"class.WTF::String"*, %"class.WTF::String"** %237, align 8
  %239 = getelementptr inbounds i8, i8* %19, i64 16
  %240 = bitcast i8* %239 to %"class.WTF::String"**
  %241 = load %"class.WTF::String"*, %"class.WTF::String"** %240, align 8
  %242 = icmp ult %"class.WTF::String"* %238, %241
  br i1 %242, label %243, label %247

243:                                              ; preds = %235
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %238, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0), i64 10) #17
  %244 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %238, i64 1
  %245 = ptrtoint %"class.WTF::String"* %244 to i64
  %246 = bitcast i8* %236 to i64*
  store i64 %245, i64* %246, align 8
  br label %248

247:                                              ; preds = %235
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA11_KcEEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, [11 x i8]* nonnull dereferenceable(11) @.str.31) #17
  br label %248

248:                                              ; preds = %247, %243, %231
  %249 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 12
  %250 = load i8, i8* %249, align 1, !range !4
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %265, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds i8, i8* %19, i64 8
  %254 = bitcast i8* %253 to %"class.WTF::String"**
  %255 = load %"class.WTF::String"*, %"class.WTF::String"** %254, align 8
  %256 = getelementptr inbounds i8, i8* %19, i64 16
  %257 = bitcast i8* %256 to %"class.WTF::String"**
  %258 = load %"class.WTF::String"*, %"class.WTF::String"** %257, align 8
  %259 = icmp ult %"class.WTF::String"* %255, %258
  br i1 %259, label %260, label %264

260:                                              ; preds = %252
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %255, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i64 9) #17
  %261 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %255, i64 1
  %262 = ptrtoint %"class.WTF::String"* %261 to i64
  %263 = bitcast i8* %253 to i64*
  store i64 %262, i64* %263, align 8
  br label %265

264:                                              ; preds = %252
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA10_KcEEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, [10 x i8]* nonnull dereferenceable(10) @.str.32) #17
  br label %265

265:                                              ; preds = %264, %260, %248
  %266 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 13
  %267 = load i8, i8* %266, align 2, !range !4
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %282, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds i8, i8* %19, i64 8
  %271 = bitcast i8* %270 to %"class.WTF::String"**
  %272 = load %"class.WTF::String"*, %"class.WTF::String"** %271, align 8
  %273 = getelementptr inbounds i8, i8* %19, i64 16
  %274 = bitcast i8* %273 to %"class.WTF::String"**
  %275 = load %"class.WTF::String"*, %"class.WTF::String"** %274, align 8
  %276 = icmp ult %"class.WTF::String"* %272, %275
  br i1 %276, label %277, label %281

277:                                              ; preds = %269
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %272, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i64 8) #17
  %278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %272, i64 1
  %279 = ptrtoint %"class.WTF::String"* %278 to i64
  %280 = bitcast i8* %270 to i64*
  store i64 %279, i64* %280, align 8
  br label %282

281:                                              ; preds = %269
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA9_KcEEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, [9 x i8]* nonnull dereferenceable(9) @.str.33) #17
  br label %282

282:                                              ; preds = %281, %277, %265
  %283 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 15
  %284 = load i8, i8* %283, align 4, !range !4
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %299, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds i8, i8* %19, i64 8
  %288 = bitcast i8* %287 to %"class.WTF::String"**
  %289 = load %"class.WTF::String"*, %"class.WTF::String"** %288, align 8
  %290 = getelementptr inbounds i8, i8* %19, i64 16
  %291 = bitcast i8* %290 to %"class.WTF::String"**
  %292 = load %"class.WTF::String"*, %"class.WTF::String"** %291, align 8
  %293 = icmp ult %"class.WTF::String"* %289, %292
  br i1 %293, label %294, label %298

294:                                              ; preds = %286
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %289, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i64 10) #17
  %295 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %289, i64 1
  %296 = ptrtoint %"class.WTF::String"* %295 to i64
  %297 = bitcast i8* %287 to i64*
  store i64 %296, i64* %297, align 8
  br label %299

298:                                              ; preds = %286
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA11_KcEEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, [11 x i8]* nonnull dereferenceable(11) @.str.34) #17
  br label %299

299:                                              ; preds = %298, %294, %282
  %300 = getelementptr inbounds %"struct.blink::WebWindowFeatures", %"struct.blink::WebWindowFeatures"* %3, i64 0, i32 16
  %301 = load i8, i8* %300, align 1, !range !4
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %316, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds i8, i8* %19, i64 8
  %305 = bitcast i8* %304 to %"class.WTF::String"**
  %306 = load %"class.WTF::String"*, %"class.WTF::String"** %305, align 8
  %307 = getelementptr inbounds i8, i8* %19, i64 16
  %308 = bitcast i8* %307 to %"class.WTF::String"**
  %309 = load %"class.WTF::String"*, %"class.WTF::String"** %308, align 8
  %310 = icmp ult %"class.WTF::String"* %306, %309
  br i1 %310, label %311, label %315

311:                                              ; preds = %303
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %306, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), i64 10) #17
  %312 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %306, i64 1
  %313 = ptrtoint %"class.WTF::String"* %312 to i64
  %314 = bitcast i8* %304 to i64*
  store i64 %313, i64* %314, align 8
  br label %316

315:                                              ; preds = %303
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA11_KcEEEvDpOT_(%"class.std::__1::vector.3466"* nonnull %20, [11 x i8]* nonnull dereferenceable(11) @.str.35) #17
  br label %316

316:                                              ; preds = %299, %311, %315
  call void @_ZN5blink8protocol4Page8Frontend10windowOpenERKN3WTF6StringES6_NSt3__110unique_ptrINS7_6vectorIS4_NS7_9allocatorIS4_EEEENS7_14default_deleteISC_EEEEb(%"class.blink::protocol::Page::Frontend"* %11, %"class.WTF::String"* dereferenceable(8) %17, %"class.WTF::String"* dereferenceable(8) %18, %"class.std::__1::vector.3466"* nonnull %20, i1 zeroext %4) #17
  %317 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %10, align 8
  call void @_ZN5blink8protocol4Page8Frontend5flushEv(%"class.blink::protocol::Page::Frontend"* %317) #17
  ret void
}

declare void @_ZN5blink8protocol4Page8Frontend10windowOpenERKN3WTF6StringES6_NSt3__110unique_ptrINS7_6vectorIS4_NS7_9allocatorIS4_EEEENS7_14default_deleteISC_EEEEb(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.std::__1::vector.3466"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink8BlankURLEv() local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader3UrlEv(%"class.blink::DocumentLoader"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13network_utils20GetDomainAndRegistryERKN3WTF6StringENS0_21PrivateRegistryFilterE(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14DocumentLoader8MimeTypeEv(%"class.blink::DocumentLoader"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin11ToRawStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.3729"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.4219", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4219", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.4219", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.4219"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3729", %"class.WTF::StringAppend.3729"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #17
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4219"* nonnull %6, i8* %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3729", %"class.WTF::StringAppend.3729"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3729"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #17
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.4219"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4219", %"class.WTF::StringTypeAdapter.4219"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #17
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4219"* nonnull %4, i8* %28) #17
  %29 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #17
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #17
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4219"* nonnull %4, i8* %25) #17
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4165"* nonnull %47, i8* %50) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #17
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #17
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #17
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3729"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #17
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter.4219"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #17
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4219", %"class.WTF::StringTypeAdapter.4219"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #17
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4219"* nonnull %2, i8* %89) #17
  %90 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #17
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #17
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4219"* nonnull %2, i16* %86) #17
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4165"* nonnull %108, i16* %111) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #17
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #17
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #17
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #17
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #17
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9FrameTree7GetNameEv(%"class.blink::FrameTree"*) local_unnamed_addr #2

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink5Frame20DeprecatedLocalOwnerEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader14UnreachableURLEv(%"class.blink::DocumentLoader"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame8IsAdRootEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame12IsAdSubframeEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree10FirstChildEv(%"class.blink::FrameTree"*) local_unnamed_addr #2

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree11NextSiblingEv(%"class.blink::FrameTree"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare { i8, i64 } @_ZNK5blink16ResourceResponse12LastModifiedEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent15startScreencastEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS3_IiEES7_S7_S7_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.3740"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.3740"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.3740"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.3740"* nocapture readnone) unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::WebVector.2998", align 8
  %9 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13
  %10 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 2
  %11 = load i8, i8* %10, align 1, !range !4
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %35, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 1
  %15 = load i8, i8* %14, align 8, !range !4
  %16 = icmp eq i8 %15, 1
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %9 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %19 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %19, i64 2
  %21 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %20, align 8
  tail call void %21(%"class.blink::InspectorAgentState::SimpleField"* %9) #17
  br label %35

22:                                               ; preds = %13
  store i8 1, i8* %10, align 1
  %23 = bitcast %"class.blink::WebVector.2998"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %8, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.2998"* nonnull %8) #17
  %25 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 0, i32 2
  %26 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 13, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %26, %"class.WTF::String"* dereferenceable(8) %27, %"class.blink::WebVector.2998"* nonnull %8) #17
  %28 = load i8*, i8** %24, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %8, i64 0, i32 0, i32 0, i32 1
  %32 = ptrtoint i8* %28 to i64
  %33 = bitcast i8** %31 to i64*
  store i64 %32, i64* %33, align 8
  call void @_ZdlPv(i8* nonnull %28) #19
  br label %34

34:                                               ; preds = %30, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #17
  br label %35

35:                                               ; preds = %7, %17, %34
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent15startScreencastEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS3_IiEES7_S7_S7_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.3740"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.3740"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.3740"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.3740"* nocapture readnone) unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::WebVector.2998", align 8
  %9 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %10 = getelementptr inbounds i8, i8* %9, i64 216
  %11 = bitcast i8* %10 to %"class.blink::InspectorAgentState::SimpleField"*
  %12 = getelementptr inbounds i8, i8* %9, i64 241
  %13 = load i8, i8* %12, align 1, !range !4, !noalias !52
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %39, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds i8, i8* %9, i64 240
  %17 = load i8, i8* %16, align 8, !range !4, !noalias !52
  %18 = icmp eq i8 %17, 1
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = bitcast i8* %10 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %21 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %20, align 8, !noalias !52
  %22 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %21, i64 2
  %23 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %22, align 8
  tail call void %23(%"class.blink::InspectorAgentState::SimpleField"* %11) #17
  br label %39

24:                                               ; preds = %15
  store i8 1, i8* %12, align 1, !noalias !52
  %25 = bitcast %"class.blink::WebVector.2998"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17, !noalias !52
  %26 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %8, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #17, !noalias !52
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.2998"* nonnull %8) #17
  %27 = getelementptr inbounds i8, i8* %9, i64 232
  %28 = bitcast i8* %27 to %"class.blink::InspectorSessionState"**
  %29 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %28, align 8, !noalias !52
  %30 = getelementptr inbounds i8, i8* %9, i64 224
  %31 = bitcast i8* %30 to %"class.WTF::String"*
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %29, %"class.WTF::String"* dereferenceable(8) %31, %"class.blink::WebVector.2998"* nonnull %8) #17
  %32 = load i8*, i8** %26, align 8, !noalias !52
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %8, i64 0, i32 0, i32 0, i32 1
  %36 = ptrtoint i8* %32 to i64
  %37 = bitcast i8** %35 to i64*
  store i64 %36, i64* %37, align 8, !noalias !52
  call void @_ZdlPv(i8* nonnull %32) #19
  br label %38

38:                                               ; preds = %34, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17, !noalias !52
  br label %39

39:                                               ; preds = %7, %19, %38
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent14stopScreencastEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.2998", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = getelementptr inbounds i8, i8* %4, i64 216
  %6 = bitcast i8* %5 to %"class.blink::InspectorAgentState::SimpleField"*
  %7 = getelementptr inbounds i8, i8* %4, i64 241
  %8 = load i8, i8* %7, align 1, !range !4, !noalias !55
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %4, i64 240
  %12 = load i8, i8* %11, align 8, !range !4, !noalias !55
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = bitcast i8* %5 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %16 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %15, align 8, !noalias !55
  %17 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %16, i64 2
  %18 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %17, align 8
  tail call void %18(%"class.blink::InspectorAgentState::SimpleField"* %6) #17
  br label %34

19:                                               ; preds = %10
  store i8 0, i8* %7, align 1, !noalias !55
  %20 = bitcast %"class.blink::WebVector.2998"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #17, !noalias !55
  %21 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #17, !noalias !55
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector.2998"* nonnull %3) #17
  %22 = getelementptr inbounds i8, i8* %4, i64 232
  %23 = bitcast i8* %22 to %"class.blink::InspectorSessionState"**
  %24 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %23, align 8, !noalias !55
  %25 = getelementptr inbounds i8, i8* %4, i64 224
  %26 = bitcast i8* %25 to %"class.WTF::String"*
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %24, %"class.WTF::String"* dereferenceable(8) %26, %"class.blink::WebVector.2998"* nonnull %3) #17
  %27 = load i8*, i8** %21, align 8, !noalias !55
  %28 = icmp eq i8* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 1
  %31 = ptrtoint i8* %27 to i64
  %32 = bitcast i8** %30 to i64*
  store i64 %31, i64* %32, align 8, !noalias !55
  call void @_ZdlPv(i8* nonnull %27) #19
  br label %33

33:                                               ; preds = %29, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #17, !noalias !55
  br label %34

34:                                               ; preds = %2, %14, %33
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent16getLayoutMetricsEPNSt3__110unique_ptrINS_8protocol4Page14LayoutViewportENS1_14default_deleteIS5_EEEEPNS2_INS4_14VisualViewportENS6_ISA_EEEEPNS2_INS3_3DOM4RectENS6_ISF_EEEES9_SD_SI_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly, %"class.std::__1::unique_ptr.3741"* nocapture, %"class.std::__1::unique_ptr.3750"* nocapture, %"class.std::__1::unique_ptr.3759"* nocapture, %"class.std::__1::unique_ptr.3741"* nocapture, %"class.std::__1::unique_ptr.3750"* nocapture, %"class.std::__1::unique_ptr.3759"* nocapture) unnamed_addr #6 align 2 {
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.blink::IntRect"*
  %11 = alloca %"class.blink::IntRect", align 8
  %12 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 0
  %17 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %16) #17
  %18 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %17) #17
  %19 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %15) #17
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %19, i32 13) #17
  %20 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #17
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 11, i32 0, i32 0
  %23 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %22, align 8
  %24 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* %23) #17
  %25 = tail call { i64, i64 } @_ZNK5blink24PaintLayerScrollableArea18VisibleContentRectENS_23IncludeScrollbarsInRectE(%"class.blink::PaintLayerScrollableArea"* %24, i32 0) #17
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %27 = extractvalue { i64, i64 } %25, 0
  store i64 %27, i64* %26, align 8
  %28 = extractvalue { i64, i64 } %25, 1
  store i64 %28, i64* %21, align 8
  %29 = tail call i8* @_Znwm(i64 24) #19
  %30 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page14LayoutViewportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  %32 = trunc i64 %27 to i32
  %33 = bitcast i8* %31 to i32*
  store i32 %32, i32* %33, align 8
  %34 = lshr i64 %27, 32
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds i8, i8* %29, i64 12
  %37 = bitcast i8* %36 to i32*
  store i32 %35, i32* %37, align 4
  %38 = trunc i64 %28 to i32
  %39 = getelementptr inbounds i8, i8* %29, i64 16
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 8
  %41 = lshr i64 %28, 32
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds i8, i8* %29, i64 20
  %44 = bitcast i8* %43 to i32*
  store i32 %42, i32* %44, align 4
  %45 = ptrtoint i8* %29 to i64
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.3741", %"class.std::__1::unique_ptr.3741"* %2, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::protocol::Page::LayoutViewport"*, %"class.blink::protocol::Page::LayoutViewport"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.3741"* %2 to i64*
  store i64 %45, i64* %48, align 8
  %49 = icmp eq %"class.blink::protocol::Page::LayoutViewport"* %47, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %8
  %51 = bitcast %"class.blink::protocol::Page::LayoutViewport"* %47 to void (%"class.blink::protocol::Page::LayoutViewport"*)***
  %52 = load void (%"class.blink::protocol::Page::LayoutViewport"*)**, void (%"class.blink::protocol::Page::LayoutViewport"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::protocol::Page::LayoutViewport"*)*, void (%"class.blink::protocol::Page::LayoutViewport"*)** %52, i64 2
  %54 = load void (%"class.blink::protocol::Page::LayoutViewport"*)*, void (%"class.blink::protocol::Page::LayoutViewport"*)** %53, align 8
  tail call void %54(%"class.blink::protocol::Page::LayoutViewport"* nonnull %47) #17
  br label %55

55:                                               ; preds = %8, %50
  %56 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %16) #17
  %57 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %56, i64 0, i32 7, i32 0, i32 0
  %58 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %57, align 8
  %59 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %22, align 8
  %60 = bitcast %"class.blink::ChromeClient"* %58 to { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)***
  %61 = load { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)**, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*** %60, align 8
  %62 = getelementptr inbounds { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)** %61, i64 7
  %63 = load { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)** %62, align 8
  %64 = call { i64, i64 } %63(%"class.blink::ChromeClient"* %58, %"class.blink::IntRect"* nonnull dereferenceable(16) %10, %"class.blink::LocalFrameView"* %59) #17
  %65 = extractvalue { i64, i64 } %64, 0
  %66 = trunc i64 %65 to i32
  %67 = lshr i64 %65, 32
  %68 = trunc i64 %67 to i32
  %69 = extractvalue { i64, i64 } %64, 1
  %70 = call i8* @_Znwm(i64 24) #19
  %71 = bitcast i8* %70 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page14LayoutViewportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 8
  %73 = bitcast i8* %72 to i32*
  store i32 %66, i32* %73, align 8
  %74 = getelementptr inbounds i8, i8* %70, i64 12
  %75 = bitcast i8* %74 to i32*
  store i32 %68, i32* %75, align 4
  %76 = trunc i64 %69 to i32
  %77 = getelementptr inbounds i8, i8* %70, i64 16
  %78 = bitcast i8* %77 to i32*
  store i32 %76, i32* %78, align 8
  %79 = lshr i64 %69, 32
  %80 = trunc i64 %79 to i32
  %81 = getelementptr inbounds i8, i8* %70, i64 20
  %82 = bitcast i8* %81 to i32*
  store i32 %80, i32* %82, align 4
  %83 = ptrtoint i8* %70 to i64
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.3741", %"class.std::__1::unique_ptr.3741"* %5, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::protocol::Page::LayoutViewport"*, %"class.blink::protocol::Page::LayoutViewport"** %84, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.3741"* %5 to i64*
  store i64 %83, i64* %86, align 8
  %87 = icmp eq %"class.blink::protocol::Page::LayoutViewport"* %85, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %55
  %89 = bitcast %"class.blink::protocol::Page::LayoutViewport"* %85 to void (%"class.blink::protocol::Page::LayoutViewport"*)***
  %90 = load void (%"class.blink::protocol::Page::LayoutViewport"*)**, void (%"class.blink::protocol::Page::LayoutViewport"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::protocol::Page::LayoutViewport"*)*, void (%"class.blink::protocol::Page::LayoutViewport"*)** %90, i64 2
  %92 = load void (%"class.blink::protocol::Page::LayoutViewport"*)*, void (%"class.blink::protocol::Page::LayoutViewport"*)** %91, align 8
  call void %92(%"class.blink::protocol::Page::LayoutViewport"* nonnull %85) #17
  br label %93

93:                                               ; preds = %55, %88
  %94 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %22, align 8
  %95 = call %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"* %94) #17
  %96 = bitcast %"class.blink::ScrollableArea"* %95 to <2 x float> (%"class.blink::ScrollableArea"*)***
  %97 = load <2 x float> (%"class.blink::ScrollableArea"*)**, <2 x float> (%"class.blink::ScrollableArea"*)*** %96, align 8
  %98 = getelementptr inbounds <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %97, i64 47
  %99 = load <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %98, align 8
  %100 = call <2 x float> %99(%"class.blink::ScrollableArea"* %95) #17
  %101 = call %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"* %94) #17
  %102 = bitcast %"class.blink::ScrollableArea"* %101 to i64 (%"class.blink::ScrollableArea"*)***
  %103 = load i64 (%"class.blink::ScrollableArea"*)**, i64 (%"class.blink::ScrollableArea"*)*** %102, align 8
  %104 = getelementptr inbounds i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %103, i64 55
  %105 = load i64 (%"class.blink::ScrollableArea"*)*, i64 (%"class.blink::ScrollableArea"*)** %104, align 8
  %106 = call i64 %105(%"class.blink::ScrollableArea"* %101) #17
  %107 = trunc i64 %106 to i32
  %108 = lshr i64 %106, 32
  %109 = trunc i64 %108 to i32
  %110 = call i8* @_Znwm(i64 40) #19
  %111 = bitcast i8* %110 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM4RectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds i8, i8* %110, i64 8
  %113 = sitofp i32 %107 to double
  %114 = getelementptr inbounds i8, i8* %110, i64 24
  %115 = bitcast i8* %114 to double*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false)
  store double %113, double* %115, align 8
  %116 = sitofp i32 %109 to double
  %117 = getelementptr inbounds i8, i8* %110, i64 32
  %118 = bitcast i8* %117 to double*
  store double %116, double* %118, align 8
  %119 = ptrtoint i8* %110 to i64
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.3759", %"class.std::__1::unique_ptr.3759"* %4, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.blink::protocol::DOM::Rect"*, %"class.blink::protocol::DOM::Rect"** %120, align 8
  %122 = bitcast %"class.std::__1::unique_ptr.3759"* %4 to i64*
  store i64 %119, i64* %122, align 8
  %123 = icmp eq %"class.blink::protocol::DOM::Rect"* %121, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %93
  %125 = bitcast %"class.blink::protocol::DOM::Rect"* %121 to void (%"class.blink::protocol::DOM::Rect"*)***
  %126 = load void (%"class.blink::protocol::DOM::Rect"*)**, void (%"class.blink::protocol::DOM::Rect"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::protocol::DOM::Rect"*)*, void (%"class.blink::protocol::DOM::Rect"*)** %126, i64 2
  %128 = load void (%"class.blink::protocol::DOM::Rect"*)*, void (%"class.blink::protocol::DOM::Rect"*)** %127, align 8
  call void %128(%"class.blink::protocol::DOM::Rect"* nonnull %121) #17
  br label %129

129:                                              ; preds = %93, %124
  %130 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %16) #17
  %131 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %130, i64 0, i32 7, i32 0, i32 0
  %132 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %131, align 8
  %133 = bitcast %"class.blink::IntRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #17
  %134 = bitcast %"class.blink::IntRect"* %11 to i64*
  store i64 0, i64* %134, align 8
  %135 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %11, i64 0, i32 1
  %136 = bitcast %"class.blink::IntSize"* %135 to i64*
  store i64 %106, i64* %136, align 8
  %137 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %22, align 8
  %138 = bitcast %"class.blink::ChromeClient"* %132 to { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)***
  %139 = load { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)**, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*** %138, align 8
  %140 = getelementptr inbounds { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)** %139, i64 7
  %141 = load { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)*, { i64, i64 } (%"class.blink::ChromeClient"*, %"class.blink::IntRect"*, %"class.blink::LocalFrameView"*)** %140, align 8
  %142 = call { i64, i64 } %141(%"class.blink::ChromeClient"* %132, %"class.blink::IntRect"* nonnull dereferenceable(16) %11, %"class.blink::LocalFrameView"* %137) #17
  %143 = extractvalue { i64, i64 } %142, 0
  %144 = trunc i64 %143 to i32
  %145 = lshr i64 %143, 32
  %146 = trunc i64 %145 to i32
  %147 = extractvalue { i64, i64 } %142, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #17
  %148 = call i8* @_Znwm(i64 40) #19
  %149 = bitcast i8* %148 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM4RectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %150 = getelementptr inbounds i8, i8* %148, i64 8
  %151 = sitofp i32 %144 to double
  %152 = bitcast i8* %150 to double*
  store double %151, double* %152, align 8
  %153 = sitofp i32 %146 to double
  %154 = getelementptr inbounds i8, i8* %148, i64 16
  %155 = bitcast i8* %154 to double*
  store double %153, double* %155, align 8
  %156 = trunc i64 %147 to i32
  %157 = sitofp i32 %156 to double
  %158 = getelementptr inbounds i8, i8* %148, i64 24
  %159 = bitcast i8* %158 to double*
  store double %157, double* %159, align 8
  %160 = lshr i64 %147, 32
  %161 = trunc i64 %160 to i32
  %162 = sitofp i32 %161 to double
  %163 = getelementptr inbounds i8, i8* %148, i64 32
  %164 = bitcast i8* %163 to double*
  store double %162, double* %164, align 8
  %165 = ptrtoint i8* %148 to i64
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.3759", %"class.std::__1::unique_ptr.3759"* %7, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.blink::protocol::DOM::Rect"*, %"class.blink::protocol::DOM::Rect"** %166, align 8
  %168 = bitcast %"class.std::__1::unique_ptr.3759"* %7 to i64*
  store i64 %165, i64* %168, align 8
  %169 = icmp eq %"class.blink::protocol::DOM::Rect"* %167, null
  br i1 %169, label %175, label %170

170:                                              ; preds = %129
  %171 = bitcast %"class.blink::protocol::DOM::Rect"* %167 to void (%"class.blink::protocol::DOM::Rect"*)***
  %172 = load void (%"class.blink::protocol::DOM::Rect"*)**, void (%"class.blink::protocol::DOM::Rect"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.blink::protocol::DOM::Rect"*)*, void (%"class.blink::protocol::DOM::Rect"*)** %172, i64 2
  %174 = load void (%"class.blink::protocol::DOM::Rect"*)*, void (%"class.blink::protocol::DOM::Rect"*)** %173, align 8
  call void %174(%"class.blink::protocol::DOM::Rect"* nonnull %167) #17
  br label %175

175:                                              ; preds = %129, %170
  %176 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 20
  %177 = load float, float* %176, align 8
  %178 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %16) #17
  %179 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %178, i64 0, i32 7, i32 0, i32 0
  %180 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %179, align 8
  %181 = bitcast %"class.blink::ChromeClient"* %180 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %182 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %181, align 8
  %183 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %182, i64 3
  %184 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %183, align 8
  %185 = call float %184(%"class.blink::ChromeClient"* %180, %"class.blink::LocalFrame"* %15, float 1.000000e+00) #17
  %186 = fdiv float %177, %185
  %187 = call { <2 x float>, <2 x float> } @_ZNK5blink14VisualViewport11VisibleRectENS_23IncludeScrollbarsInRectE(%"class.blink::VisualViewport"* %18, i32 0) #17
  %188 = extractvalue { <2 x float>, <2 x float> } %187, 0
  %189 = extractvalue { <2 x float>, <2 x float> } %187, 1
  %190 = getelementptr inbounds %"class.blink::VisualViewport", %"class.blink::VisualViewport"* %18, i64 0, i32 14
  %191 = load float, float* %190, align 8
  %192 = call i8* @_Znwm(i64 80) #19
  %193 = bitcast i8* %192 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page14VisualViewportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %194 = getelementptr inbounds i8, i8* %192, i64 72
  %195 = bitcast i8* %194 to double*
  %196 = getelementptr inbounds i8, i8* %192, i64 8
  %197 = insertelement <2 x float> undef, float %177, i32 0
  %198 = shufflevector <2 x float> %197, <2 x float> undef, <2 x i32> zeroinitializer
  %199 = fdiv <2 x float> %188, %198
  %200 = fpext <2 x float> %199 to <2 x double>
  %201 = bitcast i8* %196 to <2 x double>*
  store <2 x double> %200, <2 x double>* %201, align 8
  %202 = getelementptr inbounds i8, i8* %192, i64 24
  %203 = fdiv <2 x float> %100, %198
  %204 = fpext <2 x float> %203 to <2 x double>
  %205 = bitcast i8* %202 to <2 x double>*
  store <2 x double> %204, <2 x double>* %205, align 8
  %206 = getelementptr inbounds i8, i8* %192, i64 40
  %207 = fpext <2 x float> %189 to <2 x double>
  %208 = bitcast i8* %206 to <2 x double>*
  store <2 x double> %207, <2 x double>* %208, align 8
  %209 = fpext float %191 to double
  %210 = getelementptr inbounds i8, i8* %192, i64 56
  %211 = bitcast i8* %210 to double*
  store double %209, double* %211, align 8
  %212 = fpext float %186 to double
  store double %212, double* %195, align 8
  %213 = getelementptr inbounds i8, i8* %192, i64 64
  store i8 1, i8* %213, align 8
  %214 = ptrtoint i8* %192 to i64
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.3750", %"class.std::__1::unique_ptr.3750"* %3, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.blink::protocol::Page::VisualViewport"*, %"class.blink::protocol::Page::VisualViewport"** %215, align 8
  %217 = bitcast %"class.std::__1::unique_ptr.3750"* %3 to i64*
  store i64 %214, i64* %217, align 8
  %218 = icmp eq %"class.blink::protocol::Page::VisualViewport"* %216, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %175
  %220 = bitcast %"class.blink::protocol::Page::VisualViewport"* %216 to void (%"class.blink::protocol::Page::VisualViewport"*)***
  %221 = load void (%"class.blink::protocol::Page::VisualViewport"*)**, void (%"class.blink::protocol::Page::VisualViewport"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.blink::protocol::Page::VisualViewport"*)*, void (%"class.blink::protocol::Page::VisualViewport"*)** %221, i64 2
  %223 = load void (%"class.blink::protocol::Page::VisualViewport"*)*, void (%"class.blink::protocol::Page::VisualViewport"*)** %222, align 8
  call void %223(%"class.blink::protocol::Page::VisualViewport"* nonnull %216) #17
  br label %224

224:                                              ; preds = %175, %219
  %225 = call i8* @_Znwm(i64 80) #19
  %226 = bitcast i8* %225 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol4Page14VisualViewportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %226, align 8
  %227 = getelementptr inbounds i8, i8* %225, i64 72
  %228 = bitcast i8* %227 to double*
  %229 = getelementptr inbounds i8, i8* %225, i64 8
  %230 = bitcast i8* %229 to <2 x double>*
  store <2 x double> %200, <2 x double>* %230, align 8
  %231 = getelementptr inbounds i8, i8* %225, i64 24
  %232 = bitcast i8* %231 to <2 x double>*
  store <2 x double> %204, <2 x double>* %232, align 8
  %233 = getelementptr inbounds i8, i8* %225, i64 40
  %234 = fdiv <2 x float> %189, %198
  %235 = fpext <2 x float> %234 to <2 x double>
  %236 = bitcast i8* %233 to <2 x double>*
  store <2 x double> %235, <2 x double>* %236, align 8
  %237 = getelementptr inbounds i8, i8* %225, i64 56
  %238 = bitcast i8* %237 to double*
  store double %209, double* %238, align 8
  store double %212, double* %228, align 8
  %239 = getelementptr inbounds i8, i8* %225, i64 64
  store i8 1, i8* %239, align 8
  %240 = ptrtoint i8* %225 to i64
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.3750", %"class.std::__1::unique_ptr.3750"* %6, i64 0, i32 0, i32 0, i32 0
  %242 = load %"class.blink::protocol::Page::VisualViewport"*, %"class.blink::protocol::Page::VisualViewport"** %241, align 8
  %243 = bitcast %"class.std::__1::unique_ptr.3750"* %6 to i64*
  store i64 %240, i64* %243, align 8
  %244 = icmp eq %"class.blink::protocol::Page::VisualViewport"* %242, null
  br i1 %244, label %250, label %245

245:                                              ; preds = %224
  %246 = bitcast %"class.blink::protocol::Page::VisualViewport"* %242 to void (%"class.blink::protocol::Page::VisualViewport"*)***
  %247 = load void (%"class.blink::protocol::Page::VisualViewport"*)**, void (%"class.blink::protocol::Page::VisualViewport"*)*** %246, align 8
  %248 = getelementptr inbounds void (%"class.blink::protocol::Page::VisualViewport"*)*, void (%"class.blink::protocol::Page::VisualViewport"*)** %247, i64 2
  %249 = load void (%"class.blink::protocol::Page::VisualViewport"*)*, void (%"class.blink::protocol::Page::VisualViewport"*)** %248, align 8
  call void %249(%"class.blink::protocol::Page::VisualViewport"* nonnull %242) #17
  br label %250

250:                                              ; preds = %224, %245
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #17
  ret void
}

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"*) local_unnamed_addr #2

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink24PaintLayerScrollableArea18VisibleContentRectENS_23IncludeScrollbarsInRectE(%"class.blink::PaintLayerScrollableArea"*, i32) unnamed_addr #2

declare %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink14VisualViewport11VisibleRectENS_23IncludeScrollbarsInRectE(%"class.blink::VisualViewport"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent16getLayoutMetricsEPNSt3__110unique_ptrINS_8protocol4Page14LayoutViewportENS1_14default_deleteIS5_EEEEPNS2_INS4_14VisualViewportENS6_ISA_EEEEPNS2_INS3_3DOM4RectENS6_ISF_EEEES9_SD_SI_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly, %"class.std::__1::unique_ptr.3741"* nocapture, %"class.std::__1::unique_ptr.3750"* nocapture, %"class.std::__1::unique_ptr.3759"* nocapture, %"class.std::__1::unique_ptr.3741"* nocapture, %"class.std::__1::unique_ptr.3750"* nocapture, %"class.std::__1::unique_ptr.3759"* nocapture) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %10 = bitcast i8* %9 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent16getLayoutMetricsEPNSt3__110unique_ptrINS_8protocol4Page14LayoutViewportENS1_14default_deleteIS5_EEEEPNS2_INS4_14VisualViewportENS6_ISA_EEEEPNS2_INS3_3DOM4RectENS6_ISF_EEEES9_SD_SI_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %10, %"class.std::__1::unique_ptr.3741"* %2, %"class.std::__1::unique_ptr.3750"* %3, %"class.std::__1::unique_ptr.3759"* %4, %"class.std::__1::unique_ptr.3741"* %5, %"class.std::__1::unique_ptr.3750"* %6, %"class.std::__1::unique_ptr.3759"* %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent19createIsolatedWorldERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3453"* nocapture readonly, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.v8::HandleScope", align 8
  %12 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %12, align 8
  %14 = tail call %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"* %13, %"class.WTF::String"* dereferenceable(8) %2) #17
  %15 = icmp eq %"class.blink::LocalFrame"* %14, null
  br i1 %15, label %16, label %28

16:                                               ; preds = %6
  %17 = tail call i8* @_Znwm(i64 32) #19
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %20, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 27, i1 false) #17
  %21 = getelementptr inbounds i8, i8* %17, i64 27
  store i8 0, i8* %21, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %22 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %108

26:                                               ; preds = %16
  %27 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %27) #19
  br label %108

28:                                               ; preds = %6
  %29 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  %30 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 1
  %34 = select i1 %32, %"class.WTF::String"* %8, %"class.WTF::String"* %33
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  store i8 0, i8* %9, align 1
  %35 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %4, i64 0, i32 0
  %36 = load i8, i8* %35, align 1, !range !4
  %37 = icmp eq i8 %36, 0
  %38 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3453", %"class.crdtp::detail::ValueMaybe.3453"* %4, i64 0, i32 1
  %39 = select i1 %37, i8* %9, i8* %38
  %40 = load i8, i8* %39, align 1, !range !4
  %41 = icmp ne i8 %40, 0
  %42 = call %"class.blink::DOMWrapperWorld"* @_ZN5blink18InspectorPageAgent21EnsureDOMWrapperWorldEPNS_10LocalFrameERKN3WTF6StringEb(%"class.blink::InspectorPageAgent"* %1, %"class.blink::LocalFrame"* nonnull %14, %"class.WTF::String"* dereferenceable(8) %34, i1 zeroext %41)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %28
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #17
  br label %59

59:                                               ; preds = %28, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  %60 = icmp eq %"class.blink::DOMWrapperWorld"* %42, null
  br i1 %60, label %61, label %73

61:                                               ; preds = %59
  %62 = call i8* @_Znwm(i64 32) #19
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %65, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i64 31, i1 false) #17
  %66 = getelementptr inbounds i8, i8* %62, i64 31
  store i8 0, i8* %66, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #17
  %67 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %61
  %72 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %72) #19
  br label %108

73:                                               ; preds = %59
  %74 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* nonnull %14) #17
  %75 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %74, i64 0, i32 4, i32 0, i32 0
  %76 = load %"class.blink::ScriptController"*, %"class.blink::ScriptController"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ScriptController", %"class.blink::ScriptController"* %76, i64 0, i32 1, i32 0, i32 0
  %78 = load %"class.blink::LocalWindowProxyManager"*, %"class.blink::LocalWindowProxyManager"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::LocalWindowProxyManager", %"class.blink::LocalWindowProxyManager"* %78, i64 0, i32 0, i32 0
  %80 = call %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager29WindowProxyMaybeUninitializedERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"* %79, %"class.blink::DOMWrapperWorld"* nonnull dereferenceable(32) %42) #17
  call void @_ZN5blink11WindowProxy18InitializeIfNeededEv(%"class.blink::WindowProxy"* %80) #17
  %81 = bitcast %"class.v8::HandleScope"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #17
  %82 = bitcast %"class.v8::HandleScope"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  %83 = call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #17
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %11, %"class.v8::Isolate"* %83) #17
  %84 = getelementptr inbounds %"class.blink::WindowProxy", %"class.blink::WindowProxy"* %80, i64 1
  %85 = bitcast %"class.blink::WindowProxy"* %84 to %"class.blink::ScriptState"**
  %86 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %85, align 8
  %87 = icmp eq %"class.blink::ScriptState"* %86, null
  br i1 %87, label %99, label %88

88:                                               ; preds = %73
  %89 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %86, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.v8::Context"*, %"class.v8::Context"** %89, align 8
  %91 = icmp eq %"class.v8::Context"* %90, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.blink::ScriptState"* %86 to %"class.v8::internal::Isolate"**
  %94 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %93, align 8
  %95 = bitcast %"class.v8::Context"* %90 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %94, i64 %96) #17
  %98 = bitcast i64* %97 to %"class.v8::Context"*
  br label %99

99:                                               ; preds = %73, %88, %92
  %100 = phi %"class.v8::Context"* [ %98, %92 ], [ null, %88 ], [ null, %73 ]
  %101 = call i32 @_ZN12v8_inspector13V8ContextInfo18executionContextIdEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %100) #17
  store i32 %101, i32* %5, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #17
  %102 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %42, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %102) #17
  %103 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %99
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %42) #17
  %107 = bitcast %"class.blink::DOMWrapperWorld"* %42 to i8*
  call void @free(i8* %107) #17
  br label %108

108:                                              ; preds = %61, %71, %106, %99, %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent19createIsolatedWorldERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3453"* nocapture readonly, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %8 = bitcast i8* %7 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent19createIsolatedWorldERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EENS7_IbEEPi(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe"* %3, %"class.crdtp::detail::ValueMaybe.3453"* %4, i32* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent15setFontFamiliesENSt3__110unique_ptrINS_8protocol4Page12FontFamiliesENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.blink::protocol::Page::FontFamilies"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::AtomicString", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::AtomicString", align 8
  %18 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %21, i64 0, i32 0
  %23 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %22) #17
  %24 = icmp eq %"class.blink::Settings"* %23, null
  br i1 %24, label %685, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 8, !range !4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %120, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 19
  %32 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  %33 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 1, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #17
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #17
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %30, %36, %51
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %54, align 8
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.771"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #17
  br label %70

70:                                               ; preds = %69, %66, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  %71 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #17
  %72 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 19, i32 2, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %98, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 acquire, align 4
  %78 = and i32 %77, 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %75
  %81 = load atomic i32, i32* %76 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %98

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #17
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %84
  call void @llvm.trap() #17
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %98

96:                                               ; preds = %75
  %97 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %73) #17
  br label %98

98:                                               ; preds = %70, %80, %94, %96
  %99 = phi %"class.WTF::StringImpl"* [ %97, %96 ], [ %73, %80 ], [ %73, %94 ], [ null, %70 ]
  %100 = ptrtoint %"class.WTF::StringImpl"* %99 to i64
  %101 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %100, i64* %101, align 8
  %102 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings14UpdateStandardERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, i32 0) #17
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #17
  br label %119

119:                                              ; preds = %98, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #17
  br label %120

120:                                              ; preds = %25, %119
  %121 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 2, i32 0
  %122 = load i8, i8* %121, align 8, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %214, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 20
  %126 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #17
  %127 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 2, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %147, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i33
  %139 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #17
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !3

144:                                              ; preds = %135
  call void @llvm.trap() #17
  unreachable

145:                                              ; preds = %135
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %136, align 4
  br label %147

147:                                              ; preds = %124, %130, %145
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %148, align 8
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.771"* %125, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #17
  br label %164

164:                                              ; preds = %163, %160, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #17
  %165 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #17
  %166 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 20, i32 2, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 acquire, align 4
  %172 = and i32 %171, 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %190, label %174

174:                                              ; preds = %169
  %175 = load atomic i32, i32* %170 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %192

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i33
  %182 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %181, i33 1) #17
  %183 = extractvalue { i33, i1 } %182, 1
  %184 = extractvalue { i33, i1 } %182, 0
  %185 = icmp slt i33 %184, 0
  %186 = or i1 %183, %185
  br i1 %186, label %187, label %188, !prof !3

187:                                              ; preds = %178
  call void @llvm.trap() #17
  unreachable

188:                                              ; preds = %178
  %189 = trunc i33 %184 to i32
  store i32 %189, i32* %179, align 4
  br label %192

190:                                              ; preds = %169
  %191 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %167) #17
  br label %192

192:                                              ; preds = %164, %174, %188, %190
  %193 = phi %"class.WTF::StringImpl"* [ %191, %190 ], [ %167, %174 ], [ %167, %188 ], [ null, %164 ]
  %194 = ptrtoint %"class.WTF::StringImpl"* %193 to i64
  %195 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  store i64 %194, i64* %195, align 8
  %196 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings11UpdateFixedERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, i32 0) #17
  %197 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #17
  br label %213

213:                                              ; preds = %192, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #17
  br label %214

214:                                              ; preds = %120, %213
  %215 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 3, i32 0
  %216 = load i8, i8* %215, align 8, !range !4
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %308, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 21
  %220 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #17
  %221 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 3, i32 1, i32 0, i32 0
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %241, label %224

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %241

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = zext i32 %231 to i33
  %233 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %232, i33 1) #17
  %234 = extractvalue { i33, i1 } %233, 1
  %235 = extractvalue { i33, i1 } %233, 0
  %236 = icmp slt i33 %235, 0
  %237 = or i1 %234, %236
  br i1 %237, label %238, label %239, !prof !3

238:                                              ; preds = %229
  call void @llvm.trap() #17
  unreachable

239:                                              ; preds = %229
  %240 = trunc i33 %235 to i32
  store i32 %240, i32* %230, align 4
  br label %241

241:                                              ; preds = %218, %224, %239
  %242 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %242, align 8
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.771"* %219, %"class.WTF::String"* nonnull dereferenceable(8) %8)
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #17
  br label %258

258:                                              ; preds = %257, %254, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #17
  %259 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #17
  %260 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 21, i32 2, i32 0, i32 0
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %260, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %262, label %286, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 acquire, align 4
  %266 = and i32 %265, 4
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %284, label %268

268:                                              ; preds = %263
  %269 = load atomic i32, i32* %264 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %286

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = zext i32 %274 to i33
  %276 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %275, i33 1) #17
  %277 = extractvalue { i33, i1 } %276, 1
  %278 = extractvalue { i33, i1 } %276, 0
  %279 = icmp slt i33 %278, 0
  %280 = or i1 %277, %279
  br i1 %280, label %281, label %282, !prof !3

281:                                              ; preds = %272
  call void @llvm.trap() #17
  unreachable

282:                                              ; preds = %272
  %283 = trunc i33 %278 to i32
  store i32 %283, i32* %273, align 4
  br label %286

284:                                              ; preds = %263
  %285 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %261) #17
  br label %286

286:                                              ; preds = %258, %268, %282, %284
  %287 = phi %"class.WTF::StringImpl"* [ %285, %284 ], [ %261, %268 ], [ %261, %282 ], [ null, %258 ]
  %288 = ptrtoint %"class.WTF::StringImpl"* %287 to i64
  %289 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %288, i64* %289, align 8
  %290 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings11UpdateSerifERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, i32 0) #17
  %291 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %286
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #17
  br label %307

307:                                              ; preds = %286, %303, %306
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #17
  br label %308

308:                                              ; preds = %214, %307
  %309 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 4, i32 0
  %310 = load i8, i8* %309, align 8, !range !4
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %402, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 22
  %314 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #17
  %315 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 4, i32 1, i32 0, i32 0
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %316, null
  br i1 %317, label %335, label %318

318:                                              ; preds = %312
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %335

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = zext i32 %325 to i33
  %327 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %326, i33 1) #17
  %328 = extractvalue { i33, i1 } %327, 1
  %329 = extractvalue { i33, i1 } %327, 0
  %330 = icmp slt i33 %329, 0
  %331 = or i1 %328, %330
  br i1 %331, label %332, label %333, !prof !3

332:                                              ; preds = %323
  call void @llvm.trap() #17
  unreachable

333:                                              ; preds = %323
  %334 = trunc i33 %329 to i32
  store i32 %334, i32* %324, align 4
  br label %335

335:                                              ; preds = %312, %318, %333
  %336 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %316, %"class.WTF::StringImpl"** %336, align 8
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.771"* %313, %"class.WTF::String"* nonnull dereferenceable(8) %10)
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %338, label %352, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #17
  br label %352

352:                                              ; preds = %351, %348, %335
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #17
  %353 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %353) #17
  %354 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %354, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %380, label %357

357:                                              ; preds = %352
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 acquire, align 4
  %360 = and i32 %359, 4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %378, label %362

362:                                              ; preds = %357
  %363 = load atomic i32, i32* %358 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %380

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  %369 = zext i32 %368 to i33
  %370 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %369, i33 1) #17
  %371 = extractvalue { i33, i1 } %370, 1
  %372 = extractvalue { i33, i1 } %370, 0
  %373 = icmp slt i33 %372, 0
  %374 = or i1 %371, %373
  br i1 %374, label %375, label %376, !prof !3

375:                                              ; preds = %366
  call void @llvm.trap() #17
  unreachable

376:                                              ; preds = %366
  %377 = trunc i33 %372 to i32
  store i32 %377, i32* %367, align 4
  br label %380

378:                                              ; preds = %357
  %379 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %355) #17
  br label %380

380:                                              ; preds = %352, %362, %376, %378
  %381 = phi %"class.WTF::StringImpl"* [ %379, %378 ], [ %355, %362 ], [ %355, %376 ], [ null, %352 ]
  %382 = ptrtoint %"class.WTF::StringImpl"* %381 to i64
  %383 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  store i64 %382, i64* %383, align 8
  %384 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings15UpdateSansSerifERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11, i32 0) #17
  %385 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %401, label %388

388:                                              ; preds = %380
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 0
  %394 = load i32, i32* %393, align 4
  br i1 %392, label %395, label %397

395:                                              ; preds = %388
  %396 = add i32 %394, -1
  store i32 %396, i32* %393, align 4
  br label %397

397:                                              ; preds = %395, %388
  %398 = phi i32 [ %396, %395 ], [ %394, %388 ]
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %397
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %386) #17
  br label %401

401:                                              ; preds = %380, %397, %400
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #17
  br label %402

402:                                              ; preds = %308, %401
  %403 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 5, i32 0
  %404 = load i8, i8* %403, align 8, !range !4
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %496, label %406

406:                                              ; preds = %402
  %407 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 23
  %408 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %408) #17
  %409 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 5, i32 1, i32 0, i32 0
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %409, align 8
  %411 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %411, label %429, label %412

412:                                              ; preds = %406
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = load atomic i32, i32* %413 monotonic, align 4
  %415 = and i32 %414, 2
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %417, label %429

417:                                              ; preds = %412
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  %420 = zext i32 %419 to i33
  %421 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %420, i33 1) #17
  %422 = extractvalue { i33, i1 } %421, 1
  %423 = extractvalue { i33, i1 } %421, 0
  %424 = icmp slt i33 %423, 0
  %425 = or i1 %422, %424
  br i1 %425, label %426, label %427, !prof !3

426:                                              ; preds = %417
  call void @llvm.trap() #17
  unreachable

427:                                              ; preds = %417
  %428 = trunc i33 %423 to i32
  store i32 %428, i32* %418, align 4
  br label %429

429:                                              ; preds = %406, %412, %427
  %430 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %410, %"class.WTF::StringImpl"** %430, align 8
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.771"* %407, %"class.WTF::String"* nonnull dereferenceable(8) %12)
  %431 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %430, align 8
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #17
  br label %446

446:                                              ; preds = %445, %442, %429
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %408) #17
  %447 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %447) #17
  %448 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 23, i32 2, i32 0, i32 0
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %448, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %449, null
  br i1 %450, label %474, label %451

451:                                              ; preds = %446
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 acquire, align 4
  %454 = and i32 %453, 4
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %472, label %456

456:                                              ; preds = %451
  %457 = load atomic i32, i32* %452 monotonic, align 4
  %458 = and i32 %457, 2
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %474

460:                                              ; preds = %456
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  %463 = zext i32 %462 to i33
  %464 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %463, i33 1) #17
  %465 = extractvalue { i33, i1 } %464, 1
  %466 = extractvalue { i33, i1 } %464, 0
  %467 = icmp slt i33 %466, 0
  %468 = or i1 %465, %467
  br i1 %468, label %469, label %470, !prof !3

469:                                              ; preds = %460
  call void @llvm.trap() #17
  unreachable

470:                                              ; preds = %460
  %471 = trunc i33 %466 to i32
  store i32 %471, i32* %461, align 4
  br label %474

472:                                              ; preds = %451
  %473 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %449) #17
  br label %474

474:                                              ; preds = %446, %456, %470, %472
  %475 = phi %"class.WTF::StringImpl"* [ %473, %472 ], [ %449, %456 ], [ %449, %470 ], [ null, %446 ]
  %476 = ptrtoint %"class.WTF::StringImpl"* %475 to i64
  %477 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  store i64 %476, i64* %477, align 8
  %478 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings13UpdateCursiveERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13, i32 0) #17
  %479 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %480 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  %481 = icmp eq %"class.WTF::StringImpl"* %480, null
  br i1 %481, label %495, label %482

482:                                              ; preds = %474
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %480, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  br i1 %486, label %489, label %491

489:                                              ; preds = %482
  %490 = add i32 %488, -1
  store i32 %490, i32* %487, align 4
  br label %491

491:                                              ; preds = %489, %482
  %492 = phi i32 [ %490, %489 ], [ %488, %482 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %480) #17
  br label %495

495:                                              ; preds = %474, %491, %494
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %447) #17
  br label %496

496:                                              ; preds = %402, %495
  %497 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 6, i32 0
  %498 = load i8, i8* %497, align 8, !range !4
  %499 = icmp eq i8 %498, 0
  br i1 %499, label %590, label %500

500:                                              ; preds = %496
  %501 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 24
  %502 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %502) #17
  %503 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 6, i32 1, i32 0, i32 0
  %504 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %503, align 8
  %505 = icmp eq %"class.WTF::StringImpl"* %504, null
  br i1 %505, label %523, label %506

506:                                              ; preds = %500
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %508 = load atomic i32, i32* %507 monotonic, align 4
  %509 = and i32 %508, 2
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %523

511:                                              ; preds = %506
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 0
  %513 = load i32, i32* %512, align 4
  %514 = zext i32 %513 to i33
  %515 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %514, i33 1) #17
  %516 = extractvalue { i33, i1 } %515, 1
  %517 = extractvalue { i33, i1 } %515, 0
  %518 = icmp slt i33 %517, 0
  %519 = or i1 %516, %518
  br i1 %519, label %520, label %521, !prof !3

520:                                              ; preds = %511
  call void @llvm.trap() #17
  unreachable

521:                                              ; preds = %511
  %522 = trunc i33 %517 to i32
  store i32 %522, i32* %512, align 4
  br label %523

523:                                              ; preds = %500, %506, %521
  %524 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %504, %"class.WTF::StringImpl"** %524, align 8
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.771"* %501, %"class.WTF::String"* nonnull dereferenceable(8) %14)
  %525 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %524, align 8
  %526 = icmp eq %"class.WTF::StringImpl"* %525, null
  br i1 %526, label %540, label %527

527:                                              ; preds = %523
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %529 = load atomic i32, i32* %528 monotonic, align 4
  %530 = and i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 0
  %533 = load i32, i32* %532, align 4
  br i1 %531, label %534, label %536

534:                                              ; preds = %527
  %535 = add i32 %533, -1
  store i32 %535, i32* %532, align 4
  br label %536

536:                                              ; preds = %534, %527
  %537 = phi i32 [ %535, %534 ], [ %533, %527 ]
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %540

539:                                              ; preds = %536
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %525) #17
  br label %540

540:                                              ; preds = %539, %536, %523
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %502) #17
  %541 = bitcast %"class.WTF::AtomicString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %541) #17
  %542 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 24, i32 2, i32 0, i32 0
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %542, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %543, null
  br i1 %544, label %568, label %545

545:                                              ; preds = %540
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load atomic i32, i32* %546 acquire, align 4
  %548 = and i32 %547, 4
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %566, label %550

550:                                              ; preds = %545
  %551 = load atomic i32, i32* %546 monotonic, align 4
  %552 = and i32 %551, 2
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %568

554:                                              ; preds = %550
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 0
  %556 = load i32, i32* %555, align 4
  %557 = zext i32 %556 to i33
  %558 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %557, i33 1) #17
  %559 = extractvalue { i33, i1 } %558, 1
  %560 = extractvalue { i33, i1 } %558, 0
  %561 = icmp slt i33 %560, 0
  %562 = or i1 %559, %561
  br i1 %562, label %563, label %564, !prof !3

563:                                              ; preds = %554
  call void @llvm.trap() #17
  unreachable

564:                                              ; preds = %554
  %565 = trunc i33 %560 to i32
  store i32 %565, i32* %555, align 4
  br label %568

566:                                              ; preds = %545
  %567 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %543) #17
  br label %568

568:                                              ; preds = %540, %550, %564, %566
  %569 = phi %"class.WTF::StringImpl"* [ %567, %566 ], [ %543, %550 ], [ %543, %564 ], [ null, %540 ]
  %570 = ptrtoint %"class.WTF::StringImpl"* %569 to i64
  %571 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %570, i64* %571, align 8
  %572 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings13UpdateFantasyERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %15, i32 0) #17
  %573 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %574 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %573, align 8
  %575 = icmp eq %"class.WTF::StringImpl"* %574, null
  br i1 %575, label %589, label %576

576:                                              ; preds = %568
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = load atomic i32, i32* %577 monotonic, align 4
  %579 = and i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 0, i32 0
  %582 = load i32, i32* %581, align 4
  br i1 %580, label %583, label %585

583:                                              ; preds = %576
  %584 = add i32 %582, -1
  store i32 %584, i32* %581, align 4
  br label %585

585:                                              ; preds = %583, %576
  %586 = phi i32 [ %584, %583 ], [ %582, %576 ]
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %589

588:                                              ; preds = %585
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %574) #17
  br label %589

589:                                              ; preds = %568, %585, %588
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %541) #17
  br label %590

590:                                              ; preds = %496, %589
  %591 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 7, i32 0
  %592 = load i8, i8* %591, align 8, !range !4
  %593 = icmp eq i8 %592, 0
  br i1 %593, label %684, label %594

594:                                              ; preds = %590
  %595 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 25
  %596 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %596) #17
  %597 = getelementptr inbounds %"class.blink::protocol::Page::FontFamilies", %"class.blink::protocol::Page::FontFamilies"* %2, i64 0, i32 7, i32 1, i32 0, i32 0
  %598 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %597, align 8
  %599 = icmp eq %"class.WTF::StringImpl"* %598, null
  br i1 %599, label %617, label %600

600:                                              ; preds = %594
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load atomic i32, i32* %601 monotonic, align 4
  %603 = and i32 %602, 2
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %617

605:                                              ; preds = %600
  %606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 0
  %607 = load i32, i32* %606, align 4
  %608 = zext i32 %607 to i33
  %609 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %608, i33 1) #17
  %610 = extractvalue { i33, i1 } %609, 1
  %611 = extractvalue { i33, i1 } %609, 0
  %612 = icmp slt i33 %611, 0
  %613 = or i1 %610, %612
  br i1 %613, label %614, label %615, !prof !3

614:                                              ; preds = %605
  call void @llvm.trap() #17
  unreachable

615:                                              ; preds = %605
  %616 = trunc i33 %611 to i32
  store i32 %616, i32* %606, align 4
  br label %617

617:                                              ; preds = %594, %600, %615
  %618 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %598, %"class.WTF::StringImpl"** %618, align 8
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.771"* %595, %"class.WTF::String"* nonnull dereferenceable(8) %16)
  %619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %618, align 8
  %620 = icmp eq %"class.WTF::StringImpl"* %619, null
  br i1 %620, label %634, label %621

621:                                              ; preds = %617
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %623 = load atomic i32, i32* %622 monotonic, align 4
  %624 = and i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 0
  %627 = load i32, i32* %626, align 4
  br i1 %625, label %628, label %630

628:                                              ; preds = %621
  %629 = add i32 %627, -1
  store i32 %629, i32* %626, align 4
  br label %630

630:                                              ; preds = %628, %621
  %631 = phi i32 [ %629, %628 ], [ %627, %621 ]
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %633, label %634

633:                                              ; preds = %630
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %619) #17
  br label %634

634:                                              ; preds = %633, %630, %617
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %596) #17
  %635 = bitcast %"class.WTF::AtomicString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %635) #17
  %636 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 25, i32 2, i32 0, i32 0
  %637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %636, align 8
  %638 = icmp eq %"class.WTF::StringImpl"* %637, null
  br i1 %638, label %662, label %639

639:                                              ; preds = %634
  %640 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %641 = load atomic i32, i32* %640 acquire, align 4
  %642 = and i32 %641, 4
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %660, label %644

644:                                              ; preds = %639
  %645 = load atomic i32, i32* %640 monotonic, align 4
  %646 = and i32 %645, 2
  %647 = icmp eq i32 %646, 0
  br i1 %647, label %648, label %662

648:                                              ; preds = %644
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 0
  %650 = load i32, i32* %649, align 4
  %651 = zext i32 %650 to i33
  %652 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %651, i33 1) #17
  %653 = extractvalue { i33, i1 } %652, 1
  %654 = extractvalue { i33, i1 } %652, 0
  %655 = icmp slt i33 %654, 0
  %656 = or i1 %653, %655
  br i1 %656, label %657, label %658, !prof !3

657:                                              ; preds = %648
  call void @llvm.trap() #17
  unreachable

658:                                              ; preds = %648
  %659 = trunc i33 %654 to i32
  store i32 %659, i32* %649, align 4
  br label %662

660:                                              ; preds = %639
  %661 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %637) #17
  br label %662

662:                                              ; preds = %634, %644, %658, %660
  %663 = phi %"class.WTF::StringImpl"* [ %661, %660 ], [ %637, %644 ], [ %637, %658 ], [ null, %634 ]
  %664 = ptrtoint %"class.WTF::StringImpl"* %663 to i64
  %665 = bitcast %"class.WTF::AtomicString"* %17 to i64*
  store i64 %664, i64* %665, align 8
  %666 = call zeroext i1 @_ZN5blink25GenericFontFamilySettings16UpdatePictographERKN3WTF12AtomicStringE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %17, i32 0) #17
  %667 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %668 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %667, align 8
  %669 = icmp eq %"class.WTF::StringImpl"* %668, null
  br i1 %669, label %683, label %670

670:                                              ; preds = %662
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %672 = load atomic i32, i32* %671 monotonic, align 4
  %673 = and i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 0
  %676 = load i32, i32* %675, align 4
  br i1 %674, label %677, label %679

677:                                              ; preds = %670
  %678 = add i32 %676, -1
  store i32 %678, i32* %675, align 4
  br label %679

679:                                              ; preds = %677, %670
  %680 = phi i32 [ %678, %677 ], [ %676, %670 ]
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %682, label %683

682:                                              ; preds = %679
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %668) #17
  br label %683

683:                                              ; preds = %662, %679, %682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %635) #17
  br label %684

684:                                              ; preds = %590, %683
  call void @_ZN5blink8Settings10InvalidateENS_16SettingsDelegate10ChangeTypeE(%"class.blink::Settings"* nonnull %23, i32 7) #17
  br label %685

685:                                              ; preds = %3, %684
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %686 = icmp eq %"class.blink::protocol::Page::FontFamilies"* %2, null
  br i1 %686, label %692, label %687

687:                                              ; preds = %685
  %688 = bitcast %"class.blink::protocol::Page::FontFamilies"* %2 to void (%"class.blink::protocol::Page::FontFamilies"*)***
  %689 = load void (%"class.blink::protocol::Page::FontFamilies"*)**, void (%"class.blink::protocol::Page::FontFamilies"*)*** %688, align 8
  %690 = getelementptr inbounds void (%"class.blink::protocol::Page::FontFamilies"*)*, void (%"class.blink::protocol::Page::FontFamilies"*)** %689, i64 2
  %691 = load void (%"class.blink::protocol::Page::FontFamilies"*)*, void (%"class.blink::protocol::Page::FontFamilies"*)** %690, align 8
  call void %691(%"class.blink::protocol::Page::FontFamilies"* nonnull %2) #17
  br label %692

692:                                              ; preds = %685, %687
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.771"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::WebVector.2998", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"* %8) #17
  br i1 %9, label %71, label %10

10:                                               ; preds = %2
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %13) #17
  br i1 %14, label %15, label %20

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::InspectorAgentState::SimpleField.771"* %0 to void (%"class.blink::InspectorAgentState::SimpleField.771"*)***
  %17 = load void (%"class.blink::InspectorAgentState::SimpleField.771"*)**, void (%"class.blink::InspectorAgentState::SimpleField.771"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.771"*)*, void (%"class.blink::InspectorAgentState::SimpleField.771"*)** %17, i64 2
  %19 = load void (%"class.blink::InspectorAgentState::SimpleField.771"*)*, void (%"class.blink::InspectorAgentState::SimpleField.771"*)** %18, align 8
  tail call void %19(%"class.blink::InspectorAgentState::SimpleField.771"* %0) #17
  br label %71

20:                                               ; preds = %10
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #17
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %28
  tail call void @llvm.trap() #17
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %40

40:                                               ; preds = %38, %23, %20
  %41 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %42 = bitcast %"class.WTF::String"* %4 to i64*
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %41, i64* %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #17
  br label %58

58:                                               ; preds = %40, %54, %57
  %59 = bitcast %"class.blink::WebVector.2998"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #17
  %60 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeERKN3WTF6StringEPNS_9WebVectorIhEE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::WebVector.2998"* nonnull %3) #17
  %61 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 2
  %62 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %62, %"class.WTF::String"* dereferenceable(8) %63, %"class.blink::WebVector.2998"* nonnull %3) #17
  %64 = load i8*, i8** %60, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %3, i64 0, i32 0, i32 0, i32 1
  %68 = ptrtoint i8* %64 to i64
  %69 = bitcast i8** %67 to i64*
  store i64 %68, i64* %69, align 8
  call void @_ZdlPv(i8* nonnull %64) #19
  br label %70

70:                                               ; preds = %58, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #17
  br label %71

71:                                               ; preds = %2, %70, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent15setFontFamiliesENSt3__110unique_ptrINS_8protocol4Page12FontFamiliesENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.blink::protocol::Page::FontFamilies"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent15setFontFamiliesENSt3__110unique_ptrINS_8protocol4Page12FontFamiliesENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %5, %"class.blink::protocol::Page::FontFamilies"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent12setFontSizesENSt3__110unique_ptrINS_8protocol4Page9FontSizesENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.blink::protocol::Page::FontSizes"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.2998", align 8
  %5 = alloca %"class.blink::WebVector.2998", align 8
  %6 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %9, i64 0, i32 0
  %11 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %10) #17
  %12 = icmp eq %"class.blink::Settings"* %11, null
  br i1 %12, label %83, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::protocol::Page::FontSizes", %"class.blink::protocol::Page::FontSizes"* %2, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 4, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 26
  %19 = getelementptr inbounds %"class.blink::protocol::Page::FontSizes", %"class.blink::protocol::Page::FontSizes"* %2, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 26, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, %20
  br i1 %23, label %46, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 26, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %20
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::InspectorAgentState::SimpleField.772"* %18 to void (%"class.blink::InspectorAgentState::SimpleField.772"*)***
  %30 = load void (%"class.blink::InspectorAgentState::SimpleField.772"*)**, void (%"class.blink::InspectorAgentState::SimpleField.772"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.772"*)*, void (%"class.blink::InspectorAgentState::SimpleField.772"*)** %30, i64 2
  %32 = load void (%"class.blink::InspectorAgentState::SimpleField.772"*)*, void (%"class.blink::InspectorAgentState::SimpleField.772"*)** %31, align 8
  tail call void %32(%"class.blink::InspectorAgentState::SimpleField.772"* %18) #17
  br label %46

33:                                               ; preds = %24
  store i32 %20, i32* %21, align 4
  %34 = bitcast %"class.blink::WebVector.2998"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #17
  %35 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32 %20, %"class.blink::WebVector.2998"* nonnull %4) #17
  %36 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 26, i32 0, i32 2
  %37 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 26, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %37, %"class.WTF::String"* dereferenceable(8) %38, %"class.blink::WebVector.2998"* nonnull %4) #17
  %39 = load i8*, i8** %35, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 1
  %43 = ptrtoint i8* %39 to i64
  %44 = bitcast i8** %42 to i64*
  store i64 %43, i64* %44, align 8
  call void @_ZdlPv(i8* nonnull %39) #19
  br label %45

45:                                               ; preds = %41, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #17
  br label %46

46:                                               ; preds = %17, %28, %45
  %47 = load i32, i32* %21, align 4
  call void @_ZN5blink8Settings18SetDefaultFontSizeEi(%"class.blink::Settings"* nonnull %11, i32 %47) #17
  br label %48

48:                                               ; preds = %13, %46
  %49 = getelementptr inbounds %"class.blink::protocol::Page::FontSizes", %"class.blink::protocol::Page::FontSizes"* %2, i64 0, i32 2, i32 0
  %50 = load i8, i8* %49, align 4, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %83, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 27
  %54 = getelementptr inbounds %"class.blink::protocol::Page::FontSizes", %"class.blink::protocol::Page::FontSizes"* %2, i64 0, i32 2, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 27, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %55
  br i1 %58, label %81, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 27, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, %55
  br i1 %62, label %63, label %68

63:                                               ; preds = %59
  %64 = bitcast %"class.blink::InspectorAgentState::SimpleField.772"* %53 to void (%"class.blink::InspectorAgentState::SimpleField.772"*)***
  %65 = load void (%"class.blink::InspectorAgentState::SimpleField.772"*)**, void (%"class.blink::InspectorAgentState::SimpleField.772"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.772"*)*, void (%"class.blink::InspectorAgentState::SimpleField.772"*)** %65, i64 2
  %67 = load void (%"class.blink::InspectorAgentState::SimpleField.772"*)*, void (%"class.blink::InspectorAgentState::SimpleField.772"*)** %66, align 8
  call void %67(%"class.blink::InspectorAgentState::SimpleField.772"* %53) #17
  br label %81

68:                                               ; preds = %59
  store i32 %55, i32* %56, align 4
  %69 = bitcast %"class.blink::WebVector.2998"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #17
  %70 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32 %55, %"class.blink::WebVector.2998"* nonnull %5) #17
  %71 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 27, i32 0, i32 2
  %72 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 27, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %72, %"class.WTF::String"* dereferenceable(8) %73, %"class.blink::WebVector.2998"* nonnull %5) #17
  %74 = load i8*, i8** %70, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %5, i64 0, i32 0, i32 0, i32 1
  %78 = ptrtoint i8* %74 to i64
  %79 = bitcast i8** %77 to i64*
  store i64 %78, i64* %79, align 8
  call void @_ZdlPv(i8* nonnull %74) #19
  br label %80

80:                                               ; preds = %76, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #17
  br label %81

81:                                               ; preds = %52, %63, %80
  %82 = load i32, i32* %56, align 4
  call void @_ZN5blink8Settings23SetDefaultFixedFontSizeEi(%"class.blink::Settings"* nonnull %11, i32 %82) #17
  br label %83

83:                                               ; preds = %48, %3, %81
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %84 = icmp eq %"class.blink::protocol::Page::FontSizes"* %2, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %83
  %86 = bitcast %"class.blink::protocol::Page::FontSizes"* %2 to void (%"class.blink::protocol::Page::FontSizes"*)***
  %87 = load void (%"class.blink::protocol::Page::FontSizes"*)**, void (%"class.blink::protocol::Page::FontSizes"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::protocol::Page::FontSizes"*)*, void (%"class.blink::protocol::Page::FontSizes"*)** %87, i64 2
  %89 = load void (%"class.blink::protocol::Page::FontSizes"*)*, void (%"class.blink::protocol::Page::FontSizes"*)** %88, align 8
  call void %89(%"class.blink::protocol::Page::FontSizes"* nonnull %2) #17
  br label %90

90:                                               ; preds = %83, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent12setFontSizesENSt3__110unique_ptrINS_8protocol4Page9FontSizesENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.blink::protocol::Page::FontSizes"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent12setFontSizesENSt3__110unique_ptrINS_8protocol4Page9FontSizesENS1_14default_deleteIS5_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %5, %"class.blink::protocol::Page::FontSizes"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent28ApplyCompilationModeOverrideERKNS_16ScriptSourceCodeEPPN2v814ScriptCompiler10CachedDataEPNS5_14CompileOptionsE(%"class.blink::InspectorPageAgent"*, %"class.blink::ScriptSourceCode"* dereferenceable(168), %"struct.v8::ScriptCompiler::CachedData"** nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %1, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %66

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %1, i64 0, i32 5
  %10 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %9) #17
  br i1 %10, label %66, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %1, i64 0, i32 5, i32 4
  %14 = getelementptr inbounds %"class.WTF::HashMap.714", %"class.WTF::HashMap.714"* %12, i64 0, i32 0
  %15 = tail call { %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.715"* %14, %"class.WTF::String"* dereferenceable(8) %13) #17
  %16 = extractvalue { %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"* } %15, 0
  %17 = getelementptr inbounds %"class.WTF::HashMap.714", %"class.WTF::HashMap.714"* %12, i64 0, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %18, i64 %21
  %23 = icmp eq %"struct.WTF::KeyValuePair.718"* %16, %22
  br i1 %23, label %24, label %41

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %25, i64 0, i32 0
  %27 = tail call { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.723"* %26, %"class.WTF::String"* dereferenceable(8) %13) #17
  %28 = extractvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %27, 0
  %29 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %25, i64 0, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 3, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %30, i64 %33
  %35 = icmp eq %"struct.WTF::KeyValuePair.726"* %28, %34
  br i1 %35, label %66, label %36

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %28, i64 0, i32 1
  %38 = load i8, i8* %37, align 8, !range !4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %66, label %40

40:                                               ; preds = %36
  store i32 2, i32* %3, align 4
  br label %66

41:                                               ; preds = %11
  %42 = tail call i8* @_Znwm(i64 24) #19
  %43 = bitcast i8* %42 to %"struct.v8::ScriptCompiler::CachedData"*
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %16, i64 0, i32 1, i32 1, i32 0
  %45 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %44, align 8
  %46 = icmp eq %"class.blink::protocol::Binary::Impl"* %45, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::protocol::Binary::Impl"* %45 to i8* (%"class.blink::protocol::Binary::Impl"*)***
  %49 = load i8* (%"class.blink::protocol::Binary::Impl"*)**, i8* (%"class.blink::protocol::Binary::Impl"*)*** %48, align 8
  %50 = getelementptr inbounds i8* (%"class.blink::protocol::Binary::Impl"*)*, i8* (%"class.blink::protocol::Binary::Impl"*)** %49, i64 2
  %51 = load i8* (%"class.blink::protocol::Binary::Impl"*)*, i8* (%"class.blink::protocol::Binary::Impl"*)** %50, align 8
  %52 = tail call i8* %51(%"class.blink::protocol::Binary::Impl"* nonnull %45) #17
  %53 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %44, align 8
  %54 = icmp eq %"class.blink::protocol::Binary::Impl"* %53, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %47
  %56 = bitcast %"class.blink::protocol::Binary::Impl"* %53 to i64 (%"class.blink::protocol::Binary::Impl"*)***
  %57 = load i64 (%"class.blink::protocol::Binary::Impl"*)**, i64 (%"class.blink::protocol::Binary::Impl"*)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.blink::protocol::Binary::Impl"*)*, i64 (%"class.blink::protocol::Binary::Impl"*)** %57, i64 3
  %59 = load i64 (%"class.blink::protocol::Binary::Impl"*)*, i64 (%"class.blink::protocol::Binary::Impl"*)** %58, align 8
  %60 = tail call i64 %59(%"class.blink::protocol::Binary::Impl"* nonnull %53) #17
  %61 = trunc i64 %60 to i32
  br label %62

62:                                               ; preds = %41, %47, %55
  %63 = phi i8* [ %52, %55 ], [ %52, %47 ], [ null, %41 ]
  %64 = phi i32 [ %61, %55 ], [ 0, %47 ], [ 0, %41 ]
  tail call void @_ZN2v814ScriptCompiler10CachedDataC1EPKhiNS1_12BufferPolicyE(%"struct.v8::ScriptCompiler::CachedData"* nonnull %43, i8* %63, i32 %64, i32 0) #17
  %65 = bitcast %"struct.v8::ScriptCompiler::CachedData"** %2 to i8**
  store i8* %42, i8** %65, align 8
  br label %66

66:                                               ; preds = %24, %62, %36, %40, %4, %8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2v814ScriptCompiler10CachedDataC1EPKhiNS1_12BufferPolicyE(%"struct.v8::ScriptCompiler::CachedData"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent26DidProduceCompilationCacheERKNS_16ScriptSourceCodeEN2v85LocalINS4_6ScriptEEE(%"class.blink::InspectorPageAgent"*, %"class.blink::ScriptSourceCode"* dereferenceable(168), %"class.v8::Script"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.blink::protocol::Binary", align 8
  %11 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false)
  %12 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %1, i64 0, i32 5
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %5, %"class.blink::KURL"* dereferenceable(112) %12) #17
  %13 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %5) #17
  br i1 %13, label %175, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 4, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %16, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #17
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  call void @llvm.trap() #17
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %14, %20, %35
  %38 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 28, i32 2
  %39 = load i8, i8* %38, align 1, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %42, i64 0, i32 0
  %44 = call { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.723"* %43, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %45 = extractvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %44, 0
  %46 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %42, i64 0, i32 0, i32 0
  %47 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 3, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %47, i64 %50
  %52 = icmp eq %"struct.WTF::KeyValuePair.726"* %45, %51
  br i1 %52, label %158, label %53

53:                                               ; preds = %41
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.723"* %43, %"struct.WTF::KeyValuePair.726"* %45) #17
  br label %54

54:                                               ; preds = %37, %53
  %55 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %1, i64 0, i32 8
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %158

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 2, i32 0
  %60 = call zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS8_SD_SE_EES1_EEbRKT0_(%"class.WTF::HashTable.715"* %59, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  br i1 %60, label %158, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %1, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %62, align 8
  %64 = icmp eq %"class.blink::ParkableStringImpl"* %63, null
  br i1 %64, label %158, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0
  %67 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %66, align 8
  %68 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %67, null
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %63, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %158, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  br label %77

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %67, i64 0, i32 8
  br label %77

77:                                               ; preds = %73, %75
  %78 = phi i32* [ %76, %75 ], [ %74, %73 ]
  %79 = load i32, i32* %78, align 4
  %80 = icmp ult i32 %79, 1024
  br i1 %80, label %158, label %81

81:                                               ; preds = %77
  %82 = call %"class.v8::UnboundScript"* @_ZN2v86Script16GetUnboundScriptEv(%"class.v8::Script"* %2) #17
  %83 = call %"struct.v8::ScriptCompiler::CachedData"* @_ZN2v814ScriptCompiler15CreateCodeCacheENS_5LocalINS_13UnboundScriptEEE(%"class.v8::UnboundScript"* %82) #17
  %84 = icmp eq %"struct.v8::ScriptCompiler::CachedData"* %83, null
  br i1 %84, label %158, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #17
  %87 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %87, align 8
  %88 = getelementptr inbounds %"struct.v8::ScriptCompiler::CachedData", %"struct.v8::ScriptCompiler::CachedData"* %83, i64 0, i32 4
  %89 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #17
  store i32 1, i32* %8, align 4
  %90 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90)
  %91 = load i32, i32* %88, align 4
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %94

93:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90)
  store i8* null, i8** %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #17
  br label %104

94:                                               ; preds = %85
  %95 = bitcast i32* %88 to i8*
  %96 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %95, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN2v814ScriptCompiler10CachedData12BufferPolicyEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %97 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %89, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN2v814ScriptCompiler10CachedData12BufferPolicyEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.17, i64 0, i64 0), i8* %96, i8* %97) #17
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90)
  store i8* %99, i8** %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #17
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %94
  %102 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.18, i64 0, i64 0), i32 1703, %"class.logging::CheckOpResult"* nonnull %7) #17
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #17
  br label %104

104:                                              ; preds = %93, %94, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #17
  %105 = bitcast %"class.blink::protocol::Binary"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #17
  %106 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %10, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %10, i64 0, i32 1, i32 0
  %108 = bitcast %"class.blink::protocol::Binary"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 16, i1 false)
  call void @_ZN5blink8protocol6Binary14fromCachedDataENSt3__110unique_ptrIN2v814ScriptCompiler10CachedDataENS2_14default_deleteIS6_EEEE(%"class.blink::protocol::Binary"* nonnull sret %10, %"struct.v8::ScriptCompiler::CachedData"* nonnull %83) #17
  %109 = call { %"struct.WTF::KeyValuePair.718"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS1_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.715"* %59, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::protocol::Binary"* nonnull dereferenceable(16) %10) #17
  %110 = extractvalue { %"struct.WTF::KeyValuePair.718"*, i8 } %109, 1
  %111 = and i8 %110, 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %139

113:                                              ; preds = %104
  %114 = extractvalue { %"struct.WTF::KeyValuePair.718"*, i8 } %109, 0
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %114, i64 0, i32 1, i32 1
  %116 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %107, align 8
  %117 = icmp eq %"class.blink::protocol::Binary::Impl"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %116, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %119) #17
  br label %120

120:                                              ; preds = %118, %113
  %121 = ptrtoint %"class.blink::protocol::Binary::Impl"* %116 to i64
  %122 = bitcast %class.scoped_refptr.719* %115 to i64*
  %123 = getelementptr inbounds %class.scoped_refptr.719, %class.scoped_refptr.719* %115, i64 0, i32 0
  %124 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %123, align 8
  store i64 %121, i64* %122, align 8
  %125 = icmp eq %"class.blink::protocol::Binary::Impl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %124, i64 0, i32 1, i32 0
  %128 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %127, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %128) #17
  %129 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %127, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %139

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %127, i64 -2
  %134 = bitcast %"class.base::RefCounted.721"* %133 to %"class.blink::protocol::Binary::Impl"*
  %135 = bitcast %"class.base::RefCounted.721"* %133 to void (%"class.blink::protocol::Binary::Impl"*)***
  %136 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %136, i64 1
  %138 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %137, align 8
  call void %138(%"class.blink::protocol::Binary::Impl"* nonnull %134) #17
  br label %139

139:                                              ; preds = %104, %120, %126, %132
  %140 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %141 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %140, align 8
  call void @_ZN5blink8protocol4Page8Frontend24compilationCacheProducedERKN3WTF6StringERKNS0_6BinaryE(%"class.blink::protocol::Page::Frontend"* %141, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::protocol::Binary"* nonnull dereferenceable(16) %10) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %142 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %107, align 8
  %143 = icmp eq %"class.blink::protocol::Binary::Impl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %142, i64 0, i32 1, i32 0
  %146 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %145, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %146) #17
  %147 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %145, i64 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %157

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %145, i64 -2
  %152 = bitcast %"class.base::RefCounted.721"* %151 to %"class.blink::protocol::Binary::Impl"*
  %153 = bitcast %"class.base::RefCounted.721"* %151 to void (%"class.blink::protocol::Binary::Impl"*)***
  %154 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %154, i64 1
  %156 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %155, align 8
  call void %156(%"class.blink::protocol::Binary::Impl"* nonnull %152) #17
  br label %157

157:                                              ; preds = %150, %144, %139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #17
  br label %158

158:                                              ; preds = %81, %69, %61, %157, %41, %77, %58, %54
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #17
  br label %174

174:                                              ; preds = %158, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  br label %175

175:                                              ; preds = %3, %174
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #17
  ret void
}

declare %"struct.v8::ScriptCompiler::CachedData"* @_ZN2v814ScriptCompiler15CreateCodeCacheENS_5LocalINS_13UnboundScriptEEE(%"class.v8::UnboundScript"*) local_unnamed_addr #2

declare %"class.v8::UnboundScript"* @_ZN2v86Script16GetUnboundScriptEv(%"class.v8::Script"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN5blink8protocol6Binary14fromCachedDataENSt3__110unique_ptrIN2v814ScriptCompiler10CachedDataENS2_14default_deleteIS6_EEEE(%"class.blink::protocol::Binary"* sret, %"struct.v8::ScriptCompiler::CachedData"*) local_unnamed_addr #2

declare void @_ZN5blink8protocol4Page8Frontend24compilationCacheProducedERKN3WTF6StringERKNS0_6BinaryE(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Binary"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent17FileChooserOpenedEPNS_10LocalFrameEPNS_16HTMLInputElementEPb(%"class.blink::InspectorPageAgent"* nocapture readonly, %"class.blink::LocalFrame"*, %"class.blink::HTMLInputElement"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 10
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = load i8, i8* %3, align 1, !range !4
  %10 = or i8 %9, %8
  store i8 %10, i8* %3, align 1
  %11 = load i8, i8* %7, align 8, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %65, label %13

13:                                               ; preds = %4
  %14 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement8MultipleEv(%"class.blink::HTMLInputElement"* %2) #17
  %15 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %15, align 8
  %17 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %19 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %18) #17
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = tail call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* %21) #17
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  %24 = load i8*, i8** @_ZN5blink8protocol4Page17FileChooserOpened8ModeEnum14SelectMultipleE, align 8
  %25 = load i8*, i8** @_ZN5blink8protocol4Page17FileChooserOpened8ModeEnum12SelectSingleE, align 8
  %26 = select i1 %14, i8* %24, i8* %25
  %27 = icmp eq i8* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %13
  %29 = tail call i64 @strlen(i8* nonnull %26) #18
  br label %30

30:                                               ; preds = %13, %28
  %31 = phi i64 [ %29, %28 ], [ 0, %13 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %26, i64 %31) #17
  call void @_ZN5blink8protocol4Page8Frontend17fileChooserOpenedERKN3WTF6StringEiS6_(%"class.blink::protocol::Page::Frontend"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 %22, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #17
  br label %48

48:                                               ; preds = %30, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #17
  br label %64

64:                                               ; preds = %48, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %65

65:                                               ; preds = %4, %64
  ret void
}

declare zeroext i1 @_ZNK5blink16HTMLInputElement8MultipleEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #2

declare void @_ZN5blink8protocol4Page8Frontend17fileChooserOpenedERKN3WTF6StringEiS6_(%"class.blink::protocol::Page::Frontend"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent26setProduceCompilationCacheEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.2998", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 12, i32 2
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 32) #19
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i64 31, i1 false) #17
  %14 = getelementptr inbounds i8, i8* %10, i64 31
  store i8 0, i8* %14, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #17
  %15 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %93

19:                                               ; preds = %9
  %20 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %20) #19
  br label %93

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 28
  %23 = zext i1 %2 to i8
  %24 = zext i1 %2 to i32
  %25 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 28, i32 2
  %26 = load i8, i8* %25, align 1, !range !4
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %24, %27
  br i1 %28, label %52, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 28, i32 1
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = zext i8 %31 to i32
  %33 = icmp eq i32 %24, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %22 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %36 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %36, i64 2
  %38 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %37, align 8
  tail call void %38(%"class.blink::InspectorAgentState::SimpleField"* %22) #17
  br label %52

39:                                               ; preds = %29
  store i8 %23, i8* %25, align 1
  %40 = bitcast %"class.blink::WebVector.2998"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #17
  %41 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.2998"* nonnull %4) #17
  %42 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 28, i32 0, i32 2
  %43 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 28, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %43, %"class.WTF::String"* dereferenceable(8) %44, %"class.blink::WebVector.2998"* nonnull %4) #17
  %45 = load i8*, i8** %41, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::WebVector.2998", %"class.blink::WebVector.2998"* %4, i64 0, i32 0, i32 0, i32 1
  %49 = ptrtoint i8* %45 to i64
  %50 = bitcast i8** %48 to i64*
  store i64 %49, i64* %50, align 8
  call void @_ZdlPv(i8* nonnull %45) #19
  br label %51

51:                                               ; preds = %47, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #17
  br label %52

52:                                               ; preds = %21, %34, %51
  br i1 %2, label %92, label %53

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 3
  %55 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %54, i64 0, i32 0, i32 0
  %56 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %55, align 8
  %57 = icmp eq %"struct.WTF::KeyValuePair.726"* %56, null
  br i1 %57, label %92, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 3, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %88, label %62

62:                                               ; preds = %58
  %63 = zext i32 %60 to i64
  br label %64

64:                                               ; preds = %85, %62
  %65 = phi i64 [ 0, %62 ], [ %86, %85 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %56, i64 %65
  %67 = bitcast %"struct.WTF::KeyValuePair.726"* %66 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast i8* %68 to %"class.WTF::StringImpl"*
  %70 = ptrtoint i8* %68 to i64
  switch i64 %70, label %71 [
    i64 -1, label %85
    i64 0, label %85
  ]

71:                                               ; preds = %64
  %72 = getelementptr inbounds i8, i8* %68, i64 8
  %73 = bitcast i8* %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = bitcast i8* %68 to i32*
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %71
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %71
  %82 = phi i32 [ %80, %79 ], [ %78, %71 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #17
  br label %85

85:                                               ; preds = %84, %81, %64, %64
  %86 = add nuw nsw i64 %65, 1
  %87 = icmp eq i64 %86, %63
  br i1 %87, label %88, label %64

88:                                               ; preds = %85, %58
  %89 = bitcast %"struct.WTF::KeyValuePair.726"* %56 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %89) #17
  %90 = bitcast %"class.WTF::HashMap.722"* %54 to i64*
  store atomic i64 0, i64* %90 monotonic, align 8
  store i32 0, i32* %59, align 8
  %91 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 3, i32 0, i32 2
  store i32 0, i32* %91, align 4
  br label %92

92:                                               ; preds = %88, %53, %52
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %93

93:                                               ; preds = %19, %9, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent26setProduceCompilationCacheEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent26setProduceCompilationCacheEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent23produceCompilationCacheENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol4Page22CompilationCacheParamsENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.std::__1::vector.3854"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 12, i32 2
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = tail call i8* @_Znwm(i64 32) #19
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i64 31, i1 false) #17
  %15 = getelementptr inbounds i8, i8* %11, i64 31
  store i8 0, i8* %15, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #17
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %96

20:                                               ; preds = %10
  %21 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %21) #19
  br label %96

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.std::__1::vector.3854", %"class.std::__1::vector.3854"* %2, i64 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.3856"*, %"class.std::__1::unique_ptr.3856"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.3854", %"class.std::__1::vector.3854"* %2, i64 0, i32 0, i32 1
  %26 = load %"class.std::__1::unique_ptr.3856"*, %"class.std::__1::unique_ptr.3856"** %25, align 8
  %27 = icmp eq %"class.std::__1::unique_ptr.3856"* %24, %26
  br i1 %27, label %32, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.WTF::String"* %5 to i8*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 3, i32 0
  br label %33

32:                                               ; preds = %93, %22
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %96

33:                                               ; preds = %28, %93
  %34 = phi %"class.std::__1::unique_ptr.3856"* [ %24, %28 ], [ %94, %93 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.3856", %"class.std::__1::unique_ptr.3856"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::protocol::Page::CompilationCacheParams"*, %"class.blink::protocol::Page::CompilationCacheParams"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::protocol::Page::CompilationCacheParams", %"class.blink::protocol::Page::CompilationCacheParams"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #17
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  call void @llvm.trap() #17
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %33, %40, %55
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #17
  %58 = load %"class.blink::protocol::Page::CompilationCacheParams"*, %"class.blink::protocol::Page::CompilationCacheParams"** %35, align 8
  %59 = getelementptr inbounds %"class.blink::protocol::Page::CompilationCacheParams", %"class.blink::protocol::Page::CompilationCacheParams"* %58, i64 0, i32 2, i32 0
  %60 = load i8, i8* %59, align 1, !range !4
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::protocol::Page::CompilationCacheParams", %"class.blink::protocol::Page::CompilationCacheParams"* %58, i64 0, i32 2, i32 1
  %64 = load i8, i8* %63, align 1, !range !4
  %65 = icmp ne i8 %64, 0
  br label %66

66:                                               ; preds = %57, %62
  %67 = phi i1 [ %65, %62 ], [ false, %57 ]
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %6, align 1
  %69 = call { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EES1_bEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.723"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %5, i8* nonnull dereferenceable(1) %6) #17
  %70 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %69, 1
  %71 = and i8 %70, 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %66
  %74 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %69, 0
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %74, i64 0, i32 1
  %76 = load i8, i8* %6, align 1, !range !4
  store i8 %76, i8* %75, align 1
  br label %77

77:                                               ; preds = %66, %73
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #17
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #17
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.3856", %"class.std::__1::unique_ptr.3856"* %34, i64 1
  %95 = icmp eq %"class.std::__1::unique_ptr.3856"* %94, %26
  br i1 %95, label %32, label %33

96:                                               ; preds = %20, %10, %32
  %97 = icmp eq %"class.std::__1::vector.3854"* %2, null
  br i1 %97, label %127, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.std::__1::vector.3854", %"class.std::__1::vector.3854"* %2, i64 0, i32 0, i32 0
  %100 = load %"class.std::__1::unique_ptr.3856"*, %"class.std::__1::unique_ptr.3856"** %99, align 8
  %101 = icmp eq %"class.std::__1::unique_ptr.3856"* %100, null
  br i1 %101, label %125, label %102

102:                                              ; preds = %98
  %103 = bitcast %"class.std::__1::unique_ptr.3856"* %100 to i8*
  %104 = getelementptr inbounds %"class.std::__1::vector.3854", %"class.std::__1::vector.3854"* %2, i64 0, i32 0, i32 1
  %105 = load %"class.std::__1::unique_ptr.3856"*, %"class.std::__1::unique_ptr.3856"** %104, align 8
  %106 = icmp eq %"class.std::__1::unique_ptr.3856"* %105, %100
  br i1 %106, label %123, label %107

107:                                              ; preds = %102, %118
  %108 = phi %"class.std::__1::unique_ptr.3856"* [ %109, %118 ], [ %105, %102 ]
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3856", %"class.std::__1::unique_ptr.3856"* %108, i64 -1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3856", %"class.std::__1::unique_ptr.3856"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::protocol::Page::CompilationCacheParams"*, %"class.blink::protocol::Page::CompilationCacheParams"** %110, align 8
  store %"class.blink::protocol::Page::CompilationCacheParams"* null, %"class.blink::protocol::Page::CompilationCacheParams"** %110, align 8
  %112 = icmp eq %"class.blink::protocol::Page::CompilationCacheParams"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = bitcast %"class.blink::protocol::Page::CompilationCacheParams"* %111 to void (%"class.blink::protocol::Page::CompilationCacheParams"*)***
  %115 = load void (%"class.blink::protocol::Page::CompilationCacheParams"*)**, void (%"class.blink::protocol::Page::CompilationCacheParams"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::protocol::Page::CompilationCacheParams"*)*, void (%"class.blink::protocol::Page::CompilationCacheParams"*)** %115, i64 2
  %117 = load void (%"class.blink::protocol::Page::CompilationCacheParams"*)*, void (%"class.blink::protocol::Page::CompilationCacheParams"*)** %116, align 8
  call void %117(%"class.blink::protocol::Page::CompilationCacheParams"* nonnull %111) #17
  br label %118

118:                                              ; preds = %113, %107
  %119 = icmp eq %"class.std::__1::unique_ptr.3856"* %109, %100
  br i1 %119, label %120, label %107

120:                                              ; preds = %118
  %121 = bitcast %"class.std::__1::vector.3854"* %2 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %102
  %124 = phi i8* [ %122, %120 ], [ %103, %102 ]
  store %"class.std::__1::unique_ptr.3856"* %100, %"class.std::__1::unique_ptr.3856"** %104, align 8
  call void @_ZdlPv(i8* %124) #19
  br label %125

125:                                              ; preds = %123, %98
  %126 = bitcast %"class.std::__1::vector.3854"* %2 to i8*
  call void @_ZdlPv(i8* %126) #19
  br label %127

127:                                              ; preds = %96, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent23produceCompilationCacheENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol4Page22CompilationCacheParamsENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.std::__1::vector.3854"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent23produceCompilationCacheENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol4Page22CompilationCacheParamsENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %5, %"class.std::__1::vector.3854"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent19addCompilationCacheERKN3WTF6StringERKNS_8protocol6BinaryE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Binary"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %3, i64 0, i32 1, i32 0
  %7 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %6, align 8
  %8 = icmp eq %"class.blink::protocol::Binary::Impl"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::protocol::Binary::Impl"* %7 to i64 (%"class.blink::protocol::Binary::Impl"*)***
  %11 = load i64 (%"class.blink::protocol::Binary::Impl"*)**, i64 (%"class.blink::protocol::Binary::Impl"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.blink::protocol::Binary::Impl"*)*, i64 (%"class.blink::protocol::Binary::Impl"*)** %11, i64 3
  %13 = load i64 (%"class.blink::protocol::Binary::Impl"*)*, i64 (%"class.blink::protocol::Binary::Impl"*)** %12, align 8
  %14 = tail call i64 %13(%"class.blink::protocol::Binary::Impl"* nonnull %7) #17
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %27

16:                                               ; preds = %4, %9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #17
  store i8 1, i8* %5, align 1
  %17 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 3, i32 0
  %18 = call { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_bEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.723"* %17, %"class.WTF::String"* dereferenceable(8) %2, i8* nonnull dereferenceable(1) %5) #17
  %19 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %18, 1
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  %23 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %18, 0
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %23, i64 0, i32 1
  %25 = load i8, i8* %5, align 1, !range !4
  store i8 %25, i8* %24, align 1
  br label %26

26:                                               ; preds = %16, %22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #17
  br label %59

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 2, i32 0
  %29 = tail call { %"struct.WTF::KeyValuePair.718"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS1_RKS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.715"* %28, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::protocol::Binary"* dereferenceable(16) %3) #17
  %30 = extractvalue { %"struct.WTF::KeyValuePair.718"*, i8 } %29, 1
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %59

33:                                               ; preds = %27
  %34 = extractvalue { %"struct.WTF::KeyValuePair.718"*, i8 } %29, 0
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %34, i64 0, i32 1, i32 1
  %36 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %6, align 8
  %37 = icmp eq %"class.blink::protocol::Binary::Impl"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %36, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %39) #17
  br label %40

40:                                               ; preds = %38, %33
  %41 = ptrtoint %"class.blink::protocol::Binary::Impl"* %36 to i64
  %42 = bitcast %class.scoped_refptr.719* %35 to i64*
  %43 = getelementptr inbounds %class.scoped_refptr.719, %class.scoped_refptr.719* %35, i64 0, i32 0
  %44 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %43, align 8
  store i64 %41, i64* %42, align 8
  %45 = icmp eq %"class.blink::protocol::Binary::Impl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %44, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %47, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #17
  %49 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %47, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %47, i64 -2
  %54 = bitcast %"class.base::RefCounted.721"* %53 to %"class.blink::protocol::Binary::Impl"*
  %55 = bitcast %"class.base::RefCounted.721"* %53 to void (%"class.blink::protocol::Binary::Impl"*)***
  %56 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %56, i64 1
  %58 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %57, align 8
  tail call void %58(%"class.blink::protocol::Binary::Impl"* nonnull %54) #17
  br label %59

59:                                               ; preds = %52, %46, %40, %27, %26
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent19addCompilationCacheERKN3WTF6StringERKNS_8protocol6BinaryE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Binary"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent19addCompilationCacheERKN3WTF6StringERKNS_8protocol6BinaryE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::protocol::Binary"* dereferenceable(16) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent21clearCompilationCacheEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::HashMap.714", %"class.WTF::HashMap.714"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.718"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.718"* nonnull %5, i32 %9) #17
  %10 = bitcast %"class.WTF::HashMap.714"* %3 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store i32 0, i32* %8, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %11, align 4
  br label %12

12:                                               ; preds = %2, %7
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent21clearCompilationCacheEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %4 = getelementptr inbounds i8, i8* %3, i64 64
  %5 = bitcast i8* %4 to %"struct.WTF::KeyValuePair.718"**
  %6 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %5, align 8, !noalias !58
  %7 = icmp eq %"struct.WTF::KeyValuePair.718"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %3, i64 72
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8, !noalias !58
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.718"* nonnull %6, i32 %11) #17
  %12 = bitcast i8* %4 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8, !noalias !58
  store i32 0, i32* %10, align 8, !noalias !58
  %13 = getelementptr inbounds i8, i8* %3, i64 76
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4, !noalias !58
  br label %15

15:                                               ; preds = %2, %8
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent15waitForDebuggerEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 6
  %4 = load %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorPageAgent::Client"** %3, align 8
  %5 = bitcast %"class.blink::InspectorPageAgent::Client"* %4 to void (%"class.blink::InspectorPageAgent::Client"*)***
  %6 = load void (%"class.blink::InspectorPageAgent::Client"*)**, void (%"class.blink::InspectorPageAgent::Client"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::InspectorPageAgent::Client"*)*, void (%"class.blink::InspectorPageAgent::Client"*)** %6, i64 3
  %8 = load void (%"class.blink::InspectorPageAgent::Client"*)*, void (%"class.blink::InspectorPageAgent::Client"*)** %7, align 8
  tail call void %8(%"class.blink::InspectorPageAgent::Client"* %4) #17
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent15waitForDebuggerEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %4 = getelementptr inbounds i8, i8* %3, i64 144
  %5 = bitcast i8* %4 to %"class.blink::InspectorPageAgent::Client"**
  %6 = load %"class.blink::InspectorPageAgent::Client"*, %"class.blink::InspectorPageAgent::Client"** %5, align 8, !noalias !61
  %7 = bitcast %"class.blink::InspectorPageAgent::Client"* %6 to void (%"class.blink::InspectorPageAgent::Client"*)***
  %8 = load void (%"class.blink::InspectorPageAgent::Client"*)**, void (%"class.blink::InspectorPageAgent::Client"*)*** %7, align 8, !noalias !61
  %9 = getelementptr inbounds void (%"class.blink::InspectorPageAgent::Client"*)*, void (%"class.blink::InspectorPageAgent::Client"*)** %8, i64 3
  %10 = load void (%"class.blink::InspectorPageAgent::Client"*)*, void (%"class.blink::InspectorPageAgent::Client"*)** %9, align 8, !noalias !61
  tail call void %10(%"class.blink::InspectorPageAgent::Client"* %6) #17, !noalias !61
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent29setInterceptFileChooserDialogEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 10
  store i8 %4, i8* %5, align 8
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent29setInterceptFileChooserDialogEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds i8, i8* %4, i64 176
  store i8 %5, i8* %6, align 8, !noalias !64
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InspectorPageAgent18generateTestReportERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::TestReportBody"*, align 8
  %6 = alloca %"class.WTF::Vector.46", align 8
  %7 = alloca [1 x %"class.WTF::String"], align 8
  %8 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %10, align 8
  %12 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %11) #17
  %13 = bitcast %"class.blink::TestReportBody"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  store %"class.blink::TestReportBody"* inttoptr (i64 -6148914691236517206 to %"class.blink::TestReportBody"*), %"class.blink::TestReportBody"** %5, align 8
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #17
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i64**
  store i64* null, i64** %16, align 8
  %17 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink14TestReportBodyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds i8, i8* %14, i64 16
  %21 = bitcast i8* %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #17
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %28
  tail call void @llvm.trap() #17
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %40

40:                                               ; preds = %4, %23, %38
  %41 = getelementptr inbounds i8, i8* %14, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = bitcast %"class.blink::TestReportBody"** %5 to i8**
  store i8* %14, i8** %45, align 8
  %46 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %12) #17
  %47 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 19, i32 4
  %48 = call %"class.blink::Report"* @_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA5_KcRKN3WTF6StringERPNS_14TestReportBodyEEEEPS1_DpOT_([5 x i8]* nonnull dereferenceable(5) @.str.20, %"class.WTF::String"* dereferenceable(8) %47, %"class.blink::TestReportBody"** nonnull dereferenceable(8) %5) #17
  %49 = icmp eq %"class.blink::LocalDOMWindow"* %12, null
  %50 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %12, i64 0, i32 1
  %51 = bitcast %"class.blink::ExecutionContext.base"* %50 to %"class.blink::ExecutionContext"*
  %52 = select i1 %49, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %51
  %53 = call %"class.blink::ReportingContext"* @_ZN5blink16ReportingContext4FromEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %52) #17
  %54 = bitcast %"class.WTF::Vector.46"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #17
  %55 = bitcast [1 x %"class.WTF::String"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #17
  %56 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %7, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %56, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i64 7) #17
  %57 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %6, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %6, i64 0, i32 0, i32 0, i32 1
  %59 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #17
  %60 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %59, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  %61 = ptrtoint i8* %60 to i64
  %62 = bitcast %"class.WTF::Vector.46"* %6 to i64*
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = lshr i64 %59, 3
  %64 = trunc i64 %63 to i32
  store i32 %64, i32* %58, align 8
  %65 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %6, i64 0, i32 0, i32 0, i32 2
  store i32 1, i32* %65, align 4
  %66 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %7, i64 0, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = bitcast i8* %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %68, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %69, label %87, label %70

70:                                               ; preds = %40
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #17
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !3

84:                                               ; preds = %75
  call void @llvm.trap() #17
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  br label %87

87:                                               ; preds = %85, %70, %40
  %88 = bitcast %"class.blink::ReportingContext"* %53 to void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.46"*)***
  %89 = load void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.46"*)**, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.46"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.46"*)*, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.46"*)** %89, i64 3
  %91 = load void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.46"*)*, void (%"class.blink::ReportingContext"*, %"class.blink::Report"*, %"class.WTF::Vector.46"*)** %90, align 8
  call void %91(%"class.blink::ReportingContext"* %53, %"class.blink::Report"* %48, %"class.WTF::Vector.46"* nonnull dereferenceable(16) %6) #17
  %92 = load %"class.WTF::String"*, %"class.WTF::String"** %57, align 8
  %93 = icmp eq %"class.WTF::String"* %92, null
  br i1 %93, label %127, label %94, !prof !2

94:                                               ; preds = %87
  %95 = bitcast %"class.WTF::String"* %92 to i8*
  %96 = load i32, i32* %65, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %125, label %98, !prof !3

98:                                               ; preds = %94
  %99 = zext i32 %96 to i64
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 %99
  br label %101

101:                                              ; preds = %119, %98
  %102 = phi %"class.WTF::String"* [ %120, %119 ], [ %92, %98 ]
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #17
  br label %119

119:                                              ; preds = %118, %115, %101
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 1
  %121 = icmp eq %"class.WTF::String"* %120, %100
  br i1 %121, label %122, label %101

122:                                              ; preds = %119
  store i32 0, i32* %65, align 4
  %123 = bitcast %"class.WTF::Vector.46"* %6 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %122, %94
  %126 = phi i8* [ %124, %122 ], [ %95, %94 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %126) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %57, align 8
  br label %127

127:                                              ; preds = %87, %125
  %128 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %7, i64 0, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #17
  br label %144

144:                                              ; preds = %127, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  ret void
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare %"class.blink::ReportingContext"* @_ZN5blink16ReportingContext4FromEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink18InspectorPageAgent18generateTestReportERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorPageAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %1, i64 -1, i32 28, i32 1
  %6 = bitcast i8* %5 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgent18generateTestReportERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorPageAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe"* undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18InspectorPageAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorPageAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.708"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #17
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 9
  %16 = bitcast %"class.blink::Member.741"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv) #17
  br label %25

25:                                               ; preds = %14, %19
  %26 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 4
  %27 = bitcast %"class.blink::HeapHashMap.727"* %26 to i8*
  %28 = bitcast %"class.blink::HeapHashMap.727"* %26 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = inttoptr i64 %29 to %"struct.WTF::KeyValuePair.733"*
  %31 = bitcast %"class.blink::HeapHashMap.727"* %26 to i8**
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %33 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %33, i64 11
  %35 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8** %31) #17
  %36 = inttoptr i64 %29 to i8*
  %37 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #17
  %38 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.733"**
  store %"struct.WTF::KeyValuePair.733"* %30, %"struct.WTF::KeyValuePair.733"** %38, align 8
  %39 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %39, align 8
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %41, i64 10
  %43 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* %36, i8** %31, i8* %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10LocalFrameEEENS_12KeyValuePairIS5_NS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS8_EENSD_ISB_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESN_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %27) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #17
  %44 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 2
  %45 = bitcast %"class.blink::Member.461"* %44 to i64*
  %46 = load atomic i64, i64* %45 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %25
  %49 = inttoptr i64 %46 to i8*
  %50 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, i64 5
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, align 8
  tail call void %53(%"class.blink::Visitor"* %1, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #17
  br label %54

54:                                               ; preds = %25, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.461"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #17
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorPageAgentD2Ev(%"class.blink::InspectorPageAgent"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorPageAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [34 x i8*] }, { [40 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorPageAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [34 x i8*] }, { [40 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorPageAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 28, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 28, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #17
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 27, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 27, i32 0, i32 1, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #17
  br label %38

38:                                               ; preds = %20, %34, %37
  %39 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 26, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 26, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #17
  br label %56

56:                                               ; preds = %38, %52, %55
  %57 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 25, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 25, i32 2, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #17
  br label %74

74:                                               ; preds = %73, %70, %56
  %75 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 25, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #17
  br label %91

91:                                               ; preds = %90, %87, %74
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %92 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 25, i32 0, i32 1, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #17
  br label %108

108:                                              ; preds = %91, %104, %107
  %109 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 24, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 24, i32 2, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #17
  br label %126

126:                                              ; preds = %125, %122, %108
  %127 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 24, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #17
  br label %143

143:                                              ; preds = %142, %139, %126
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %144 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #17
  br label %160

160:                                              ; preds = %143, %156, %159
  %161 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 23, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 23, i32 2, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #17
  br label %178

178:                                              ; preds = %177, %174, %160
  %179 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 23, i32 1, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #17
  br label %195

195:                                              ; preds = %194, %191, %178
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %196 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #17
  br label %212

212:                                              ; preds = %195, %208, %211
  %213 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 22, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %213, align 8
  %214 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 22, i32 2, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #17
  br label %230

230:                                              ; preds = %229, %226, %212
  %231 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 22, i32 1, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #17
  br label %247

247:                                              ; preds = %246, %243, %230
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %213, align 8
  %248 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #17
  br label %264

264:                                              ; preds = %247, %260, %263
  %265 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 21, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 21, i32 2, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #17
  br label %282

282:                                              ; preds = %281, %278, %264
  %283 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 21, i32 1, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %285, label %299, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %284) #17
  br label %299

299:                                              ; preds = %298, %295, %282
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %300 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #17
  br label %316

316:                                              ; preds = %299, %312, %315
  %317 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 20, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %317, align 8
  %318 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 20, i32 2, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #17
  br label %334

334:                                              ; preds = %333, %330, %316
  %335 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 20, i32 1, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #17
  br label %351

351:                                              ; preds = %350, %347, %334
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %317, align 8
  %352 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #17
  br label %368

368:                                              ; preds = %351, %364, %367
  %369 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 19, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %369, align 8
  %370 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 19, i32 2, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #17
  br label %386

386:                                              ; preds = %385, %382, %368
  %387 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 19, i32 1, i32 0, i32 0
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %387, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %386
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %388) #17
  br label %403

403:                                              ; preds = %402, %399, %386
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %369, align 8
  %404 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %420, label %407

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  br i1 %411, label %414, label %416

414:                                              ; preds = %407
  %415 = add i32 %413, -1
  store i32 %415, i32* %412, align 4
  br label %416

416:                                              ; preds = %414, %407
  %417 = phi i32 [ %415, %414 ], [ %413, %407 ]
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #17
  br label %420

420:                                              ; preds = %403, %416, %419
  %421 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %421, align 8
  %422 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 3, i32 0, i32 0
  %423 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %422, align 8
  %424 = icmp eq %"struct.WTF::KeyValuePair.726"* %423, null
  br i1 %424, label %457, label %425, !prof !2

425:                                              ; preds = %420
  %426 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 3, i32 0, i32 1
  %427 = load i32, i32* %426, align 8
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %455, label %429

429:                                              ; preds = %425
  %430 = zext i32 %427 to i64
  br label %431

431:                                              ; preds = %452, %429
  %432 = phi i64 [ 0, %429 ], [ %453, %452 ]
  %433 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %423, i64 %432
  %434 = bitcast %"struct.WTF::KeyValuePair.726"* %433 to i8**
  %435 = load i8*, i8** %434, align 8
  %436 = bitcast i8* %435 to %"class.WTF::StringImpl"*
  %437 = ptrtoint i8* %435 to i64
  switch i64 %437, label %438 [
    i64 -1, label %452
    i64 0, label %452
  ]

438:                                              ; preds = %431
  %439 = getelementptr inbounds i8, i8* %435, i64 8
  %440 = bitcast i8* %439 to i32*
  %441 = load atomic i32, i32* %440 monotonic, align 4
  %442 = and i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = bitcast i8* %435 to i32*
  %445 = load i32, i32* %444, align 4
  br i1 %443, label %446, label %448

446:                                              ; preds = %438
  %447 = add i32 %445, -1
  store i32 %447, i32* %444, align 4
  br label %448

448:                                              ; preds = %446, %438
  %449 = phi i32 [ %447, %446 ], [ %445, %438 ]
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %448
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #17
  br label %452

452:                                              ; preds = %451, %448, %431, %431
  %453 = add nuw nsw i64 %432, 1
  %454 = icmp eq i64 %453, %430
  br i1 %454, label %455, label %431

455:                                              ; preds = %452, %425
  %456 = bitcast %"struct.WTF::KeyValuePair.726"* %423 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %456) #17
  store %"struct.WTF::KeyValuePair.726"* null, %"struct.WTF::KeyValuePair.726"** %422, align 8
  br label %457

457:                                              ; preds = %455, %420
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %421, align 8
  %458 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %458, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %459, null
  br i1 %460, label %474, label %461

461:                                              ; preds = %457
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 0
  %467 = load i32, i32* %466, align 4
  br i1 %465, label %468, label %470

468:                                              ; preds = %461
  %469 = add i32 %467, -1
  store i32 %469, i32* %466, align 4
  br label %470

470:                                              ; preds = %468, %461
  %471 = phi i32 [ %469, %468 ], [ %467, %461 ]
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %474

473:                                              ; preds = %470
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %459) #17
  br label %474

474:                                              ; preds = %457, %470, %473
  %475 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %475, align 8
  %476 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 2, i32 0, i32 0
  %477 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %476, align 8
  %478 = icmp eq %"struct.WTF::KeyValuePair.769"* %477, null
  br i1 %478, label %482, label %479, !prof !2

479:                                              ; preds = %474
  %480 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 2, i32 0, i32 1
  %481 = load i32, i32* %480, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.769"* nonnull %477, i32 %481) #17
  store %"struct.WTF::KeyValuePair.769"* null, %"struct.WTF::KeyValuePair.769"** %476, align 8
  br label %482

482:                                              ; preds = %479, %474
  %483 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 1, i32 0, i32 0
  %484 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %483, align 8
  %485 = icmp eq %"class.WTF::StringImpl"* %484, null
  br i1 %485, label %499, label %486

486:                                              ; preds = %482
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = load atomic i32, i32* %487 monotonic, align 4
  %489 = and i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  br i1 %490, label %493, label %495

493:                                              ; preds = %486
  %494 = add i32 %492, -1
  store i32 %494, i32* %491, align 4
  br label %495

495:                                              ; preds = %493, %486
  %496 = phi i32 [ %494, %493 ], [ %492, %486 ]
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %499

498:                                              ; preds = %495
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %484) #17
  br label %499

499:                                              ; preds = %498, %495, %482
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %475, align 8
  %500 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  br i1 %507, label %510, label %512

510:                                              ; preds = %503
  %511 = add i32 %509, -1
  store i32 %511, i32* %508, align 4
  br label %512

512:                                              ; preds = %510, %503
  %513 = phi i32 [ %511, %510 ], [ %509, %503 ]
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #17
  br label %516

516:                                              ; preds = %499, %512, %515
  %517 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %517, align 8
  %518 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %519 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %518, align 8
  %520 = icmp eq %"struct.WTF::KeyValuePair.769"* %519, null
  br i1 %520, label %524, label %521, !prof !2

521:                                              ; preds = %516
  %522 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %523 = load i32, i32* %522, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.769"* nonnull %519, i32 %523) #17
  store %"struct.WTF::KeyValuePair.769"* null, %"struct.WTF::KeyValuePair.769"** %518, align 8
  br label %524

524:                                              ; preds = %521, %516
  %525 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 1, i32 0, i32 0
  %526 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %525, align 8
  %527 = icmp eq %"class.WTF::StringImpl"* %526, null
  br i1 %527, label %541, label %528

528:                                              ; preds = %524
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 0
  %534 = load i32, i32* %533, align 4
  br i1 %532, label %535, label %537

535:                                              ; preds = %528
  %536 = add i32 %534, -1
  store i32 %536, i32* %533, align 4
  br label %537

537:                                              ; preds = %535, %528
  %538 = phi i32 [ %536, %535 ], [ %534, %528 ]
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %541

540:                                              ; preds = %537
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %526) #17
  br label %541

541:                                              ; preds = %540, %537, %524
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %517, align 8
  %542 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %542, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %543, null
  br i1 %544, label %558, label %545

545:                                              ; preds = %541
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load atomic i32, i32* %546 monotonic, align 4
  %548 = and i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 0
  %551 = load i32, i32* %550, align 4
  br i1 %549, label %552, label %554

552:                                              ; preds = %545
  %553 = add i32 %551, -1
  store i32 %553, i32* %550, align 4
  br label %554

554:                                              ; preds = %552, %545
  %555 = phi i32 [ %553, %552 ], [ %551, %545 ]
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %558

557:                                              ; preds = %554
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %543) #17
  br label %558

558:                                              ; preds = %541, %554, %557
  %559 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 15, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %559, align 8
  %560 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %562 = icmp eq %"class.WTF::StringImpl"* %561, null
  br i1 %562, label %576, label %563

563:                                              ; preds = %558
  %564 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = load atomic i32, i32* %564 monotonic, align 4
  %566 = and i32 %565, 2
  %567 = icmp eq i32 %566, 0
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 0
  %569 = load i32, i32* %568, align 4
  br i1 %567, label %570, label %572

570:                                              ; preds = %563
  %571 = add i32 %569, -1
  store i32 %571, i32* %568, align 4
  br label %572

572:                                              ; preds = %570, %563
  %573 = phi i32 [ %571, %570 ], [ %569, %563 ]
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %576

575:                                              ; preds = %572
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %561) #17
  br label %576

576:                                              ; preds = %558, %572, %575
  %577 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %577, align 8
  %578 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %578, align 8
  %580 = icmp eq %"class.WTF::StringImpl"* %579, null
  br i1 %580, label %594, label %581

581:                                              ; preds = %576
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %583 = load atomic i32, i32* %582 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 0
  %587 = load i32, i32* %586, align 4
  br i1 %585, label %588, label %590

588:                                              ; preds = %581
  %589 = add i32 %587, -1
  store i32 %589, i32* %586, align 4
  br label %590

590:                                              ; preds = %588, %581
  %591 = phi i32 [ %589, %588 ], [ %587, %581 ]
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %594

593:                                              ; preds = %590
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %579) #17
  br label %594

594:                                              ; preds = %576, %590, %593
  %595 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %595, align 8
  %596 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %597 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  %598 = icmp eq %"class.WTF::StringImpl"* %597, null
  br i1 %598, label %612, label %599

599:                                              ; preds = %594
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 0
  %605 = load i32, i32* %604, align 4
  br i1 %603, label %606, label %608

606:                                              ; preds = %599
  %607 = add i32 %605, -1
  store i32 %607, i32* %604, align 4
  br label %608

608:                                              ; preds = %606, %599
  %609 = phi i32 [ %607, %606 ], [ %605, %599 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %608
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %597) #17
  br label %612

612:                                              ; preds = %594, %608, %611
  %613 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %613, align 8
  %614 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = icmp eq %"class.WTF::StringImpl"* %615, null
  br i1 %616, label %630, label %617

617:                                              ; preds = %612
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  br i1 %621, label %624, label %626

624:                                              ; preds = %617
  %625 = add i32 %623, -1
  store i32 %625, i32* %622, align 4
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i32 [ %625, %624 ], [ %623, %617 ]
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %630

629:                                              ; preds = %626
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %615) #17
  br label %630

630:                                              ; preds = %612, %626, %629
  %631 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %632 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %631, align 8
  %633 = icmp eq %"class.WTF::StringImpl"* %632, null
  br i1 %633, label %647, label %634

634:                                              ; preds = %630
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = and i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 0
  %640 = load i32, i32* %639, align 4
  br i1 %638, label %641, label %643

641:                                              ; preds = %634
  %642 = add i32 %640, -1
  store i32 %642, i32* %639, align 4
  br label %643

643:                                              ; preds = %641, %634
  %644 = phi i32 [ %642, %641 ], [ %640, %634 ]
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %647

646:                                              ; preds = %643
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %632) #17
  br label %647

647:                                              ; preds = %630, %643, %646
  %648 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 7, i32 0, i32 0
  %649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %648, align 8
  %650 = icmp eq %"class.WTF::StringImpl"* %649, null
  br i1 %650, label %664, label %651

651:                                              ; preds = %647
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %653 = load atomic i32, i32* %652 monotonic, align 4
  %654 = and i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 0
  %657 = load i32, i32* %656, align 4
  br i1 %655, label %658, label %660

658:                                              ; preds = %651
  %659 = add i32 %657, -1
  store i32 %659, i32* %656, align 4
  br label %660

660:                                              ; preds = %658, %651
  %661 = phi i32 [ %659, %658 ], [ %657, %651 ]
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %664

663:                                              ; preds = %660
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %649) #17
  br label %664

664:                                              ; preds = %647, %660, %663
  %665 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %666 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %665, align 8
  %667 = icmp eq %"struct.WTF::KeyValuePair.726"* %666, null
  br i1 %667, label %700, label %668, !prof !2

668:                                              ; preds = %664
  %669 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 3, i32 0, i32 1
  %670 = load i32, i32* %669, align 8
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %698, label %672

672:                                              ; preds = %668
  %673 = zext i32 %670 to i64
  br label %674

674:                                              ; preds = %695, %672
  %675 = phi i64 [ 0, %672 ], [ %696, %695 ]
  %676 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %666, i64 %675
  %677 = bitcast %"struct.WTF::KeyValuePair.726"* %676 to i8**
  %678 = load i8*, i8** %677, align 8
  %679 = bitcast i8* %678 to %"class.WTF::StringImpl"*
  %680 = ptrtoint i8* %678 to i64
  switch i64 %680, label %681 [
    i64 -1, label %695
    i64 0, label %695
  ]

681:                                              ; preds = %674
  %682 = getelementptr inbounds i8, i8* %678, i64 8
  %683 = bitcast i8* %682 to i32*
  %684 = load atomic i32, i32* %683 monotonic, align 4
  %685 = and i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = bitcast i8* %678 to i32*
  %688 = load i32, i32* %687, align 4
  br i1 %686, label %689, label %691

689:                                              ; preds = %681
  %690 = add i32 %688, -1
  store i32 %690, i32* %687, align 4
  br label %691

691:                                              ; preds = %689, %681
  %692 = phi i32 [ %690, %689 ], [ %688, %681 ]
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %691
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %679) #17
  br label %695

695:                                              ; preds = %694, %691, %674, %674
  %696 = add nuw nsw i64 %675, 1
  %697 = icmp eq i64 %696, %673
  br i1 %697, label %698, label %674

698:                                              ; preds = %695, %668
  %699 = bitcast %"struct.WTF::KeyValuePair.726"* %666 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %699) #17
  store %"struct.WTF::KeyValuePair.726"* null, %"struct.WTF::KeyValuePair.726"** %665, align 8
  br label %700

700:                                              ; preds = %664, %698
  %701 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %702 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %701, align 8
  %703 = icmp eq %"struct.WTF::KeyValuePair.718"* %702, null
  br i1 %703, label %707, label %704, !prof !2

704:                                              ; preds = %700
  %705 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 2, i32 0, i32 1
  %706 = load i32, i32* %705, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.718"* nonnull %702, i32 %706) #17
  store %"struct.WTF::KeyValuePair.718"* null, %"struct.WTF::KeyValuePair.718"** %701, align 8
  br label %707

707:                                              ; preds = %700, %704
  %708 = bitcast %"class.blink::InspectorPageAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [34 x i8*] }, { [11 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [34 x i8*] }, { [11 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %708, align 8
  %709 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %710 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %709, align 8
  store %"class.blink::protocol::Page::Frontend"* null, %"class.blink::protocol::Page::Frontend"** %709, align 8
  %711 = icmp eq %"class.blink::protocol::Page::Frontend"* %710, null
  br i1 %711, label %714, label %712

712:                                              ; preds = %707
  %713 = bitcast %"class.blink::protocol::Page::Frontend"* %710 to i8*
  tail call void @_ZdlPv(i8* %713) #19
  br label %714

714:                                              ; preds = %712, %707
  %715 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %716 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %715, align 8
  %717 = icmp eq %"class.blink::InspectorAgentState::Field"** %716, null
  %718 = bitcast %"class.blink::InspectorAgentState::Field"** %716 to i8*
  br i1 %717, label %725, label %719, !prof !2

719:                                              ; preds = %714
  %720 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %721 = load i32, i32* %720, align 4
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %724, label %723, !prof !3

723:                                              ; preds = %719
  store i32 0, i32* %720, align 4
  br label %724

724:                                              ; preds = %723, %719
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %718) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %715, align 8
  br label %725

725:                                              ; preds = %724, %714
  %726 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %727 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %726, align 8
  %728 = icmp eq %"class.WTF::StringImpl"* %727, null
  br i1 %728, label %742, label %729

729:                                              ; preds = %725
  %730 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %727, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %731 = load atomic i32, i32* %730 monotonic, align 4
  %732 = and i32 %731, 2
  %733 = icmp eq i32 %732, 0
  %734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %727, i64 0, i32 0
  %735 = load i32, i32* %734, align 4
  br i1 %733, label %736, label %738

736:                                              ; preds = %729
  %737 = add i32 %735, -1
  store i32 %737, i32* %734, align 4
  br label %738

738:                                              ; preds = %736, %729
  %739 = phi i32 [ %737, %736 ], [ %735, %729 ]
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %741, label %742

741:                                              ; preds = %738
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %727) #17
  br label %742

742:                                              ; preds = %725, %738, %741
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorPageAgentD0Ev(%"class.blink::InspectorPageAgent"*) unnamed_addr #8 comdat align 2 {
  tail call void @_ZN5blink18InspectorPageAgentD2Ev(%"class.blink::InspectorPageAgent"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member.461"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #17
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #19
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Page::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Page::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Page::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #19
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol4Page10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Page::Backend"* %26) #17
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #17
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #19
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %16, align 8
  store %"class.blink::protocol::Page::Frontend"* null, %"class.blink::protocol::Page::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Page::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Page::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #19
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member.461"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorPageAgentD1Ev(%"class.blink::InspectorPageAgent"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 -1, i32 28, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgentD2Ev(%"class.blink::InspectorPageAgent"* %3) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorPageAgentD0Ev(%"class.blink::InspectorPageAgent"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorPageAgent", %"class.blink::InspectorPageAgent"* %0, i64 -1, i32 28, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorPageAgent"*
  tail call void @_ZN5blink18InspectorPageAgentD2Ev(%"class.blink::InspectorPageAgent"* %3) #17
  ret void
}

declare void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry13IsXMLMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #8 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry14IsJSONMimeTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry19IsPlainTextMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF12TextEncodingC1EPKc(%"class.WTF::TextEncoding"*, i8*) unnamed_addr #2

declare void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoderOptions"* dereferenceable(152)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF12TextEncoding6DecodeEPKcjbRb(%"class.WTF::TextEncoding"*, i8*, i32, i1 zeroext, i8* dereferenceable(1)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink8Settings10InvalidateENS_16SettingsDelegate10ChangeTypeE(%"class.blink::Settings"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::Resource"* @_ZNK5blink15ResourceFetcher14CachedResourceERKNS_4KURLE(%"class.blink::ResourceFetcher"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() local_unnamed_addr #2

declare %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLERKN3WTF6StringE(%"class.blink::MemoryCache"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink15ResourceFetcher18GetCacheIdentifierERKNS_4KURLE(%"class.blink::ResourceFetcher"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare %"class.blink::Resource"* @_ZN5blink30InspectorResourceContentLoader14ResourceForURLERKNS_4KURLE(%"class.blink::InspectorResourceContentLoader"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.737"* %0 to %"struct.WTF::KeyValuePair.739"**
  %3 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.739"* %3, null
  br i1 %4, label %51, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.737", %"class.WTF::ConditionalDestructor.737"* %0, i64 8
  %7 = bitcast %"class.WTF::ConditionalDestructor.737"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %49, label %10

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %46, %10
  %13 = phi i64 [ 0, %10 ], [ %47, %46 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %3, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.739"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %46, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %3, i64 %13, i32 1, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #17
  %24 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %20) #17
  %28 = bitcast %"class.blink::DOMWrapperWorld"* %20 to i8*
  tail call void @free(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %22, %18
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %14, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #17
  br label %46

46:                                               ; preds = %45, %42, %29, %12
  %47 = add nuw nsw i64 %13, 1
  %48 = icmp eq i64 %47, %11
  br i1 %48, label %49, label %12

49:                                               ; preds = %46, %5
  %50 = bitcast %"struct.WTF::KeyValuePair.739"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #17
  store %"struct.WTF::KeyValuePair.739"* null, %"struct.WTF::KeyValuePair.739"** %2, align 8
  br label %51

51:                                               ; preds = %1, %49
  ret void
}

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.3466"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3466"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3466"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %45 = ptrtoint %"class.WTF::String"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::String"*, %"class.WTF::String"** %46, align 8
  %48 = ptrtoint %"class.WTF::String"* %47 to i64
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %50 = icmp eq %"class.WTF::String"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.WTF::String", %"class.WTF::String"* %49, i64 -1, i32 0, i32 0
  %53 = ptrtoint %"class.WTF::StringImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.WTF::String"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.WTF::String"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 -1
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 -1
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !67

71:                                               ; preds = %59, %51
  %72 = phi %"class.WTF::String"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.WTF::String"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.WTF::String"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.WTF::String"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.WTF::String"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -1
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::String"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -2
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -2
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::String"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -3
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::String"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::String"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -4
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -4
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -5
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -5
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -6
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -6
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -7
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -7
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -8
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = icmp eq %"class.WTF::String"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.WTF::String"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.WTF::String"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.WTF::String"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.WTF::String"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.WTF::String"*
  %138 = icmp eq %"class.WTF::String"* %133, %137
  br i1 %138, label %160, label %139

139:                                              ; preds = %132, %158
  %140 = phi %"class.WTF::String"* [ %141, %158 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 -1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #17
  br label %158

158:                                              ; preds = %157, %154, %139
  %159 = icmp eq %"class.WTF::String"* %141, %137
  br i1 %159, label %160, label %139

160:                                              ; preds = %158, %132
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %163) #19
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #15

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA8_KcEEEvDpOT_(%"class.std::__1::vector.3466"*, [8 x i8]* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3466"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3466"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %41 = icmp eq [8 x i8]* %1, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = tail call i64 @strlen(i8* nonnull %40) #18
  br label %44

44:                                               ; preds = %34, %42
  %45 = phi i64 [ %43, %42 ], [ 0, %34 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %37, i8* %40, i64 %45) #17
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %47 = ptrtoint %"class.WTF::String"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = ptrtoint %"class.WTF::String"* %49 to i64
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %52 = icmp eq %"class.WTF::String"* %51, %49
  br i1 %52, label %134, label %53

53:                                               ; preds = %44
  %54 = getelementptr %"class.WTF::String", %"class.WTF::String"* %51, i64 -1, i32 0, i32 0
  %55 = ptrtoint %"class.WTF::StringImpl"** %54 to i64
  %56 = sub i64 %55, %50
  %57 = lshr i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 7
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %53, %61
  %62 = phi %"class.WTF::String"* [ %65, %61 ], [ %37, %53 ]
  %63 = phi %"class.WTF::String"* [ %66, %61 ], [ %51, %53 ]
  %64 = phi i64 [ %71, %61 ], [ %59, %53 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 -1
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 -1
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = add i64 %64, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %61, !llvm.loop !69

73:                                               ; preds = %61, %53
  %74 = phi %"class.WTF::String"* [ undef, %53 ], [ %65, %61 ]
  %75 = phi %"class.WTF::String"* [ %37, %53 ], [ %65, %61 ]
  %76 = phi %"class.WTF::String"* [ %51, %53 ], [ %66, %61 ]
  %77 = icmp ult i64 %56, 56
  br i1 %77, label %130, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"class.WTF::String"* [ %123, %78 ], [ %75, %73 ]
  %80 = phi %"class.WTF::String"* [ %124, %78 ], [ %76, %73 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -2
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -2
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.WTF::String"* %87 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -3
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -3
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::String"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.WTF::String"* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -4
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -4
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.WTF::String"* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -5
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -5
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -6
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -6
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::String"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.WTF::String"* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -7
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -7
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %120 = bitcast %"class.WTF::String"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.WTF::String"* %117 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -8
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %126 = bitcast %"class.WTF::String"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.WTF::String"* %123 to i64*
  store i64 %127, i64* %128, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %129 = icmp eq %"class.WTF::String"* %124, %49
  br i1 %129, label %130, label %78

130:                                              ; preds = %78, %73
  %131 = phi %"class.WTF::String"* [ %74, %73 ], [ %123, %78 ]
  %132 = load i64, i64* %6, align 8
  %133 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %134

134:                                              ; preds = %44, %130
  %135 = phi %"class.WTF::String"* [ %133, %130 ], [ %49, %44 ]
  %136 = phi %"class.WTF::String"* [ %131, %130 ], [ %37, %44 ]
  %137 = phi i64 [ %132, %130 ], [ %50, %44 ]
  %138 = ptrtoint %"class.WTF::String"* %136 to i64
  store i64 %138, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %139 = inttoptr i64 %137 to %"class.WTF::String"*
  %140 = icmp eq %"class.WTF::String"* %135, %139
  br i1 %140, label %162, label %141

141:                                              ; preds = %134, %160
  %142 = phi %"class.WTF::String"* [ %143, %160 ], [ %135, %134 ]
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 -1
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #17
  br label %160

160:                                              ; preds = %159, %156, %141
  %161 = icmp eq %"class.WTF::String"* %143, %139
  br i1 %161, label %162, label %141

162:                                              ; preds = %160, %134
  %163 = icmp eq i64 %137, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %137 to i8*
  tail call void @_ZdlPv(i8* %165) #19
  br label %166

166:                                              ; preds = %162, %164
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA7_KcEEEvDpOT_(%"class.std::__1::vector.3466"*, [7 x i8]* dereferenceable(7)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3466"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3466"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %41 = icmp eq [7 x i8]* %1, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = tail call i64 @strlen(i8* nonnull %40) #18
  br label %44

44:                                               ; preds = %34, %42
  %45 = phi i64 [ %43, %42 ], [ 0, %34 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %37, i8* %40, i64 %45) #17
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %47 = ptrtoint %"class.WTF::String"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = ptrtoint %"class.WTF::String"* %49 to i64
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %52 = icmp eq %"class.WTF::String"* %51, %49
  br i1 %52, label %134, label %53

53:                                               ; preds = %44
  %54 = getelementptr %"class.WTF::String", %"class.WTF::String"* %51, i64 -1, i32 0, i32 0
  %55 = ptrtoint %"class.WTF::StringImpl"** %54 to i64
  %56 = sub i64 %55, %50
  %57 = lshr i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 7
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %53, %61
  %62 = phi %"class.WTF::String"* [ %65, %61 ], [ %37, %53 ]
  %63 = phi %"class.WTF::String"* [ %66, %61 ], [ %51, %53 ]
  %64 = phi i64 [ %71, %61 ], [ %59, %53 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 -1
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 -1
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = add i64 %64, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %61, !llvm.loop !70

73:                                               ; preds = %61, %53
  %74 = phi %"class.WTF::String"* [ undef, %53 ], [ %65, %61 ]
  %75 = phi %"class.WTF::String"* [ %37, %53 ], [ %65, %61 ]
  %76 = phi %"class.WTF::String"* [ %51, %53 ], [ %66, %61 ]
  %77 = icmp ult i64 %56, 56
  br i1 %77, label %130, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"class.WTF::String"* [ %123, %78 ], [ %75, %73 ]
  %80 = phi %"class.WTF::String"* [ %124, %78 ], [ %76, %73 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -2
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -2
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.WTF::String"* %87 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -3
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -3
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::String"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.WTF::String"* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -4
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -4
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.WTF::String"* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -5
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -5
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -6
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -6
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::String"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.WTF::String"* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -7
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -7
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %120 = bitcast %"class.WTF::String"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.WTF::String"* %117 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -8
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %126 = bitcast %"class.WTF::String"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.WTF::String"* %123 to i64*
  store i64 %127, i64* %128, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %129 = icmp eq %"class.WTF::String"* %124, %49
  br i1 %129, label %130, label %78

130:                                              ; preds = %78, %73
  %131 = phi %"class.WTF::String"* [ %74, %73 ], [ %123, %78 ]
  %132 = load i64, i64* %6, align 8
  %133 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %134

134:                                              ; preds = %44, %130
  %135 = phi %"class.WTF::String"* [ %133, %130 ], [ %49, %44 ]
  %136 = phi %"class.WTF::String"* [ %131, %130 ], [ %37, %44 ]
  %137 = phi i64 [ %132, %130 ], [ %50, %44 ]
  %138 = ptrtoint %"class.WTF::String"* %136 to i64
  store i64 %138, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %139 = inttoptr i64 %137 to %"class.WTF::String"*
  %140 = icmp eq %"class.WTF::String"* %135, %139
  br i1 %140, label %162, label %141

141:                                              ; preds = %134, %160
  %142 = phi %"class.WTF::String"* [ %143, %160 ], [ %135, %134 ]
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 -1
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #17
  br label %160

160:                                              ; preds = %159, %156, %141
  %161 = icmp eq %"class.WTF::String"* %143, %139
  br i1 %161, label %162, label %141

162:                                              ; preds = %160, %134
  %163 = icmp eq i64 %137, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %137 to i8*
  tail call void @_ZdlPv(i8* %165) #19
  br label %166

166:                                              ; preds = %162, %164
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA11_KcEEEvDpOT_(%"class.std::__1::vector.3466"*, [11 x i8]* dereferenceable(11)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3466"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3466"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %41 = icmp eq [11 x i8]* %1, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = tail call i64 @strlen(i8* nonnull %40) #18
  br label %44

44:                                               ; preds = %34, %42
  %45 = phi i64 [ %43, %42 ], [ 0, %34 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %37, i8* %40, i64 %45) #17
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %47 = ptrtoint %"class.WTF::String"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = ptrtoint %"class.WTF::String"* %49 to i64
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %52 = icmp eq %"class.WTF::String"* %51, %49
  br i1 %52, label %134, label %53

53:                                               ; preds = %44
  %54 = getelementptr %"class.WTF::String", %"class.WTF::String"* %51, i64 -1, i32 0, i32 0
  %55 = ptrtoint %"class.WTF::StringImpl"** %54 to i64
  %56 = sub i64 %55, %50
  %57 = lshr i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 7
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %53, %61
  %62 = phi %"class.WTF::String"* [ %65, %61 ], [ %37, %53 ]
  %63 = phi %"class.WTF::String"* [ %66, %61 ], [ %51, %53 ]
  %64 = phi i64 [ %71, %61 ], [ %59, %53 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 -1
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 -1
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = add i64 %64, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %61, !llvm.loop !71

73:                                               ; preds = %61, %53
  %74 = phi %"class.WTF::String"* [ undef, %53 ], [ %65, %61 ]
  %75 = phi %"class.WTF::String"* [ %37, %53 ], [ %65, %61 ]
  %76 = phi %"class.WTF::String"* [ %51, %53 ], [ %66, %61 ]
  %77 = icmp ult i64 %56, 56
  br i1 %77, label %130, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"class.WTF::String"* [ %123, %78 ], [ %75, %73 ]
  %80 = phi %"class.WTF::String"* [ %124, %78 ], [ %76, %73 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -2
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -2
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.WTF::String"* %87 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -3
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -3
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::String"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.WTF::String"* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -4
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -4
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.WTF::String"* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -5
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -5
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -6
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -6
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::String"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.WTF::String"* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -7
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -7
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %120 = bitcast %"class.WTF::String"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.WTF::String"* %117 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -8
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %126 = bitcast %"class.WTF::String"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.WTF::String"* %123 to i64*
  store i64 %127, i64* %128, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %129 = icmp eq %"class.WTF::String"* %124, %49
  br i1 %129, label %130, label %78

130:                                              ; preds = %78, %73
  %131 = phi %"class.WTF::String"* [ %74, %73 ], [ %123, %78 ]
  %132 = load i64, i64* %6, align 8
  %133 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %134

134:                                              ; preds = %44, %130
  %135 = phi %"class.WTF::String"* [ %133, %130 ], [ %49, %44 ]
  %136 = phi %"class.WTF::String"* [ %131, %130 ], [ %37, %44 ]
  %137 = phi i64 [ %132, %130 ], [ %50, %44 ]
  %138 = ptrtoint %"class.WTF::String"* %136 to i64
  store i64 %138, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %139 = inttoptr i64 %137 to %"class.WTF::String"*
  %140 = icmp eq %"class.WTF::String"* %135, %139
  br i1 %140, label %162, label %141

141:                                              ; preds = %134, %160
  %142 = phi %"class.WTF::String"* [ %143, %160 ], [ %135, %134 ]
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 -1
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #17
  br label %160

160:                                              ; preds = %159, %156, %141
  %161 = icmp eq %"class.WTF::String"* %143, %139
  br i1 %161, label %162, label %141

162:                                              ; preds = %160, %134
  %163 = icmp eq i64 %137, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %137 to i8*
  tail call void @_ZdlPv(i8* %165) #19
  br label %166

166:                                              ; preds = %162, %164
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA10_KcEEEvDpOT_(%"class.std::__1::vector.3466"*, [10 x i8]* dereferenceable(10)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3466"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3466"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %41 = icmp eq [10 x i8]* %1, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = tail call i64 @strlen(i8* nonnull %40) #18
  br label %44

44:                                               ; preds = %34, %42
  %45 = phi i64 [ %43, %42 ], [ 0, %34 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %37, i8* %40, i64 %45) #17
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %47 = ptrtoint %"class.WTF::String"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = ptrtoint %"class.WTF::String"* %49 to i64
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %52 = icmp eq %"class.WTF::String"* %51, %49
  br i1 %52, label %134, label %53

53:                                               ; preds = %44
  %54 = getelementptr %"class.WTF::String", %"class.WTF::String"* %51, i64 -1, i32 0, i32 0
  %55 = ptrtoint %"class.WTF::StringImpl"** %54 to i64
  %56 = sub i64 %55, %50
  %57 = lshr i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 7
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %53, %61
  %62 = phi %"class.WTF::String"* [ %65, %61 ], [ %37, %53 ]
  %63 = phi %"class.WTF::String"* [ %66, %61 ], [ %51, %53 ]
  %64 = phi i64 [ %71, %61 ], [ %59, %53 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 -1
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 -1
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = add i64 %64, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %61, !llvm.loop !72

73:                                               ; preds = %61, %53
  %74 = phi %"class.WTF::String"* [ undef, %53 ], [ %65, %61 ]
  %75 = phi %"class.WTF::String"* [ %37, %53 ], [ %65, %61 ]
  %76 = phi %"class.WTF::String"* [ %51, %53 ], [ %66, %61 ]
  %77 = icmp ult i64 %56, 56
  br i1 %77, label %130, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"class.WTF::String"* [ %123, %78 ], [ %75, %73 ]
  %80 = phi %"class.WTF::String"* [ %124, %78 ], [ %76, %73 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -2
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -2
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.WTF::String"* %87 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -3
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -3
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::String"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.WTF::String"* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -4
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -4
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.WTF::String"* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -5
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -5
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -6
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -6
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::String"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.WTF::String"* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -7
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -7
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %120 = bitcast %"class.WTF::String"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.WTF::String"* %117 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -8
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %126 = bitcast %"class.WTF::String"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.WTF::String"* %123 to i64*
  store i64 %127, i64* %128, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %129 = icmp eq %"class.WTF::String"* %124, %49
  br i1 %129, label %130, label %78

130:                                              ; preds = %78, %73
  %131 = phi %"class.WTF::String"* [ %74, %73 ], [ %123, %78 ]
  %132 = load i64, i64* %6, align 8
  %133 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %134

134:                                              ; preds = %44, %130
  %135 = phi %"class.WTF::String"* [ %133, %130 ], [ %49, %44 ]
  %136 = phi %"class.WTF::String"* [ %131, %130 ], [ %37, %44 ]
  %137 = phi i64 [ %132, %130 ], [ %50, %44 ]
  %138 = ptrtoint %"class.WTF::String"* %136 to i64
  store i64 %138, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %139 = inttoptr i64 %137 to %"class.WTF::String"*
  %140 = icmp eq %"class.WTF::String"* %135, %139
  br i1 %140, label %162, label %141

141:                                              ; preds = %134, %160
  %142 = phi %"class.WTF::String"* [ %143, %160 ], [ %135, %134 ]
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 -1
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #17
  br label %160

160:                                              ; preds = %159, %156, %141
  %161 = icmp eq %"class.WTF::String"* %143, %139
  br i1 %161, label %162, label %141

162:                                              ; preds = %160, %134
  %163 = icmp eq i64 %137, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %137 to i8*
  tail call void @_ZdlPv(i8* %165) #19
  br label %166

166:                                              ; preds = %162, %164
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA9_KcEEEvDpOT_(%"class.std::__1::vector.3466"*, [9 x i8]* dereferenceable(9)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3466"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3466"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %41 = icmp eq [9 x i8]* %1, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = tail call i64 @strlen(i8* nonnull %40) #18
  br label %44

44:                                               ; preds = %34, %42
  %45 = phi i64 [ %43, %42 ], [ 0, %34 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %37, i8* %40, i64 %45) #17
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %47 = ptrtoint %"class.WTF::String"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = ptrtoint %"class.WTF::String"* %49 to i64
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %52 = icmp eq %"class.WTF::String"* %51, %49
  br i1 %52, label %134, label %53

53:                                               ; preds = %44
  %54 = getelementptr %"class.WTF::String", %"class.WTF::String"* %51, i64 -1, i32 0, i32 0
  %55 = ptrtoint %"class.WTF::StringImpl"** %54 to i64
  %56 = sub i64 %55, %50
  %57 = lshr i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 7
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %53, %61
  %62 = phi %"class.WTF::String"* [ %65, %61 ], [ %37, %53 ]
  %63 = phi %"class.WTF::String"* [ %66, %61 ], [ %51, %53 ]
  %64 = phi i64 [ %71, %61 ], [ %59, %53 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 -1
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 -1
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = add i64 %64, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %61, !llvm.loop !73

73:                                               ; preds = %61, %53
  %74 = phi %"class.WTF::String"* [ undef, %53 ], [ %65, %61 ]
  %75 = phi %"class.WTF::String"* [ %37, %53 ], [ %65, %61 ]
  %76 = phi %"class.WTF::String"* [ %51, %53 ], [ %66, %61 ]
  %77 = icmp ult i64 %56, 56
  br i1 %77, label %130, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"class.WTF::String"* [ %123, %78 ], [ %75, %73 ]
  %80 = phi %"class.WTF::String"* [ %124, %78 ], [ %76, %73 ]
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -2
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -2
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::String"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.WTF::String"* %87 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -3
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -3
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %96 = bitcast %"class.WTF::String"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.WTF::String"* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -4
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -4
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.WTF::String"* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -5
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -5
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -6
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -6
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::String"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.WTF::String"* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -7
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -7
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %120 = bitcast %"class.WTF::String"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.WTF::String"* %117 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 -8
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 -8
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %126 = bitcast %"class.WTF::String"* %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.WTF::String"* %123 to i64*
  store i64 %127, i64* %128, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %129 = icmp eq %"class.WTF::String"* %124, %49
  br i1 %129, label %130, label %78

130:                                              ; preds = %78, %73
  %131 = phi %"class.WTF::String"* [ %74, %73 ], [ %123, %78 ]
  %132 = load i64, i64* %6, align 8
  %133 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %134

134:                                              ; preds = %44, %130
  %135 = phi %"class.WTF::String"* [ %133, %130 ], [ %49, %44 ]
  %136 = phi %"class.WTF::String"* [ %131, %130 ], [ %37, %44 ]
  %137 = phi i64 [ %132, %130 ], [ %50, %44 ]
  %138 = ptrtoint %"class.WTF::String"* %136 to i64
  store i64 %138, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %139 = inttoptr i64 %137 to %"class.WTF::String"*
  %140 = icmp eq %"class.WTF::String"* %135, %139
  br i1 %140, label %162, label %141

141:                                              ; preds = %134, %160
  %142 = phi %"class.WTF::String"* [ %143, %160 ], [ %135, %134 ]
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 -1
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #17
  br label %160

160:                                              ; preds = %159, %156, %141
  %161 = icmp eq %"class.WTF::String"* %143, %139
  br i1 %161, label %162, label %141

162:                                              ; preds = %160, %134
  %163 = icmp eq i64 %137, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %137 to i8*
  tail call void @_ZdlPv(i8* %165) #19
  br label %166

166:                                              ; preds = %162, %164
  ret void
}

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink5Agent21IsCrossOriginIsolatedEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ExecutionContext32SharedArrayBufferTransferAllowedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.3466"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3466"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3466"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %45 = ptrtoint %"class.WTF::String"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3466", %"class.std::__1::vector.3466"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::String"*, %"class.WTF::String"** %46, align 8
  %48 = ptrtoint %"class.WTF::String"* %47 to i64
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %50 = icmp eq %"class.WTF::String"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.WTF::String", %"class.WTF::String"* %49, i64 -1, i32 0, i32 0
  %53 = ptrtoint %"class.WTF::StringImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.WTF::String"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.WTF::String"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 -1
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 -1
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !74

71:                                               ; preds = %59, %51
  %72 = phi %"class.WTF::String"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.WTF::String"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.WTF::String"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.WTF::String"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.WTF::String"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -1
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::String"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -2
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -2
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::String"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -3
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::String"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::String"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -4
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -4
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -5
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -5
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -6
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -6
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -7
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -7
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -8
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = icmp eq %"class.WTF::String"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.WTF::String"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.WTF::String"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.WTF::String"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.WTF::String"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.WTF::String"*
  %138 = icmp eq %"class.WTF::String"* %133, %137
  br i1 %138, label %160, label %139

139:                                              ; preds = %132, %158
  %140 = phi %"class.WTF::String"* [ %141, %158 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 -1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #17
  br label %158

158:                                              ; preds = %157, %154, %139
  %159 = icmp eq %"class.WTF::String"* %141, %137
  br i1 %159, label %160, label %139

160:                                              ; preds = %158, %132
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %163) #19
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #17
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #17
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #17
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1484"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.WTF::KeyValuePair.1487", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %55

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.38, i64 0, i64 0)) #17
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  br label %27

27:                                               ; preds = %22, %24
  %28 = zext i32 %18 to i64
  %29 = mul nuw nsw i64 %28, 40
  %30 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink17OriginTrialResultEEEEEPKcv, i64 0, i64 0)) #17
  %31 = bitcast i8* %30 to %"struct.WTF::KeyValuePair.1487"*
  %32 = bitcast %"struct.WTF::KeyValuePair.1487"* %3 to i8*
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %3, i64 0, i32 1, i32 2
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %3, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %3, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %36 = bitcast %"class.WTF::Vector.1488"* %33 to i64*
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %3, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %3, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %40, %27
  %41 = phi i64 [ 0, %27 ], [ %51, %40 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %31, i64 %41
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #17
  store i32 0, i32* %37, align 8
  store atomic i64 0, i64* %36 monotonic, align 8, !alias.scope !75
  %43 = bitcast %"struct.WTF::KeyValuePair.1487"* %42 to i64*
  store i64 0, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %31, i64 %41, i32 1
  %45 = bitcast %"struct.blink::OriginTrialResult"* %44 to i64*
  store i64 0, i64* %45, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %31, i64 %41, i32 1, i32 1
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %31, i64 %41, i32 1, i32 2
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %31, i64 %41, i32 1, i32 2, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %31, i64 %41, i32 1, i32 2, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.1488"* %47 to i64*
  store i64 0, i64* %50, align 8
  store atomic i64 0, i64* %36 monotonic, align 8
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %34, align 8
  store i32 0, i32* %49, align 4
  store i32 0, i32* %35, align 4
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.1487"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #17
  %51 = add nuw nsw i64 %41, 1
  %52 = icmp eq i64 %51, %28
  br i1 %52, label %53, label %40

53:                                               ; preds = %40
  %54 = call %"struct.WTF::KeyValuePair.1487"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1484"* %0, %"struct.WTF::KeyValuePair.1487"* %31, i32 %18, %"struct.WTF::KeyValuePair.1487"* null) #17
  br label %55

55:                                               ; preds = %53, %17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1487"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1484"*, %"struct.WTF::KeyValuePair.1487"*, i32, %"struct.WTF::KeyValuePair.1487"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1484", align 8
  %6 = bitcast %"class.WTF::HashTable.1484"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1484"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1487"* %1, %"struct.WTF::KeyValuePair.1487"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1487"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1484"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1484"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1487"*, %"struct.WTF::KeyValuePair.1487"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1487"* %22 to i64
  br label %57

24:                                               ; preds = %103
  %25 = bitcast %"class.WTF::HashTable.1484"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1484"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %104, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1487"* [ null, %16 ], [ %107, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %105, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1487"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %48, %39
  %42 = phi i64 [ 0, %39 ], [ %49, %48 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.1487"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %48, label %47

47:                                               ; preds = %41
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.1487"* %43) #17
  br label %48

48:                                               ; preds = %47, %41
  %49 = add nuw nsw i64 %42, 1
  %50 = icmp eq i64 %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48, %37
  %52 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %28, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.1487"* %33

57:                                               ; preds = %21, %103
  %58 = phi i64 [ %104, %103 ], [ %23, %21 ]
  %59 = phi i32 [ %105, %103 ], [ %13, %21 ]
  %60 = phi %"struct.WTF::KeyValuePair.1487"* [ %106, %103 ], [ %22, %21 ]
  %61 = phi %"struct.WTF::KeyValuePair.1487"* [ %107, %103 ], [ null, %21 ]
  %62 = phi i32 [ %108, %103 ], [ 0, %21 ]
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 %63
  %65 = bitcast %"struct.WTF::KeyValuePair.1487"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  switch i64 %66, label %67 [
    i64 -1, label %103
    i64 0, label %103
  ]

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %64, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %64, i64 0, i32 0
  %70 = call { %"struct.WTF::KeyValuePair.1487"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1484"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %69) #17
  %71 = extractvalue { %"struct.WTF::KeyValuePair.1487"*, i8 } %70, 0
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.1487"* %71) #17
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"struct.WTF::KeyValuePair.1487"* %71 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %71, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 %63, i32 1
  %76 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"struct.blink::OriginTrialResult"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"struct.blink::OriginTrialResult"* %74 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %71, i64 0, i32 1, i32 1
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 %63, i32 1, i32 1
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %71, i64 0, i32 1, i32 2
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 %63, i32 1, i32 2
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %71, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %71, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %87 = bitcast %"class.WTF::Vector.1488"* %84 to i64*
  %88 = bitcast %"class.WTF::Vector.1488"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #17
  %89 = load i64, i64* %87, align 8
  %90 = bitcast %"class.WTF::Vector.1488"* %83 to i64*
  store atomic i64 0, i64* %87 monotonic, align 8
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 %63, i32 1, i32 2, i32 0, i32 0, i32 1
  %92 = load i32, i32* %85, align 4
  %93 = load i32, i32* %91, align 4
  store i32 %93, i32* %85, align 4
  store i32 %92, i32* %91, align 4
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 %63, i32 1, i32 2, i32 0, i32 0, i32 2
  %95 = load i32, i32* %86, align 4
  %96 = load i32, i32* %94, align 4
  store i32 %96, i32* %86, align 4
  store i32 %95, i32* %94, align 4
  %97 = load %"struct.WTF::KeyValuePair.1487"*, %"struct.WTF::KeyValuePair.1487"** %15, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %97, i64 %63
  %99 = icmp eq %"struct.WTF::KeyValuePair.1487"* %98, %3
  %100 = select i1 %99, %"struct.WTF::KeyValuePair.1487"* %71, %"struct.WTF::KeyValuePair.1487"* %61
  %101 = load i32, i32* %12, align 8
  %102 = ptrtoint %"struct.WTF::KeyValuePair.1487"* %97 to i64
  br label %103

103:                                              ; preds = %57, %57, %67
  %104 = phi i64 [ %58, %57 ], [ %102, %67 ], [ %58, %57 ]
  %105 = phi i32 [ %59, %57 ], [ %101, %67 ], [ %59, %57 ]
  %106 = phi %"struct.WTF::KeyValuePair.1487"* [ %60, %57 ], [ %97, %67 ], [ %60, %57 ]
  %107 = phi %"struct.WTF::KeyValuePair.1487"* [ %61, %57 ], [ %100, %67 ], [ %61, %57 ]
  %108 = add i32 %62, 1
  %109 = icmp eq i32 %108, %105
  br i1 %109, label %24, label %57
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.1487"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %0, i64 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %3, align 8
  %5 = icmp eq %"struct.blink::OriginTrialTokenResult"* %4, null
  br i1 %5, label %46, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::OriginTrialTokenResult"* %4 to i8*
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %44, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %4, i64 %12
  br label %14

14:                                               ; preds = %38, %11
  %15 = phi %"struct.blink::OriginTrialTokenResult"* [ %39, %38 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %20) #17
  store i8 0, i8* %16, align 8
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #17
  br label %38

38:                                               ; preds = %37, %34, %21
  %39 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 1
  %40 = icmp eq %"struct.blink::OriginTrialTokenResult"* %39, %13
  br i1 %40, label %41, label %14

41:                                               ; preds = %38
  store i32 0, i32* %8, align 4
  %42 = bitcast %"class.WTF::Vector.1488"* %2 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %6
  %45 = phi i8* [ %43, %41 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #17
  store %"struct.blink::OriginTrialTokenResult"* null, %"struct.blink::OriginTrialTokenResult"** %3, align 8
  br label %46

46:                                               ; preds = %44, %1
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #17
  br label %63

63:                                               ; preds = %46, %59, %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #17
  br label %80

80:                                               ; preds = %63, %76, %79
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1487"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1484"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1487"*, %"struct.WTF::KeyValuePair.1487"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.1487"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.1487"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.1487"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.1487"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.1487"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.1487"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.1487"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.1487"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.1487"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.1487"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.1487"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.1487"*, i8 } undef, %"struct.WTF::KeyValuePair.1487"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1487"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.1487"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1487"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_SC_SD_EERKS1_RKS5_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1484"*, %"class.WTF::String"* dereferenceable(8), %"struct.WTF::KeyValuePair.1487"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.1487", align 16
  %5 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.1487"*, %"struct.WTF::KeyValuePair.1487"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.1487"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.1487"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1484"* %0, %"struct.WTF::KeyValuePair.1487"* null)
  %10 = load %"struct.WTF::KeyValuePair.1487"*, %"struct.WTF::KeyValuePair.1487"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.1487"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = lshr i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %18) #17
  br label %25

25:                                               ; preds = %11, %23
  %26 = phi i32 [ %24, %23 ], [ %21, %11 ]
  %27 = and i32 %26, %15
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %12, i64 %28
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %91, label %33

33:                                               ; preds = %25
  %34 = xor i32 %26, -1
  %35 = lshr i32 %26, 23
  %36 = add i32 %35, %34
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %33, %59
  %48 = phi %"struct.WTF::KeyValuePair.1487"* [ %29, %33 ], [ %65, %59 ]
  %49 = phi %"struct.WTF::KeyValuePair.1487"* [ null, %33 ], [ %60, %59 ]
  %50 = phi i64 [ %28, %33 ], [ %64, %59 ]
  %51 = phi i64 [ 0, %33 ], [ %62, %59 ]
  %52 = bitcast %"struct.WTF::KeyValuePair.1487"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %59, label %55

55:                                               ; preds = %47
  %56 = bitcast i8* %53 to %"class.WTF::StringImpl"*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"* %57) #17
  br i1 %58, label %191, label %59

59:                                               ; preds = %47, %55
  %60 = phi %"struct.WTF::KeyValuePair.1487"* [ %49, %55 ], [ %48, %47 ]
  %61 = icmp eq i64 %51, 0
  %62 = select i1 %61, i64 %46, i64 %51
  %63 = add i64 %62, %50
  %64 = and i64 %63, %16
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %12, i64 %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %47

69:                                               ; preds = %59
  %70 = icmp eq %"struct.WTF::KeyValuePair.1487"* %60, null
  br i1 %70, label %91, label %71

71:                                               ; preds = %69
  %72 = bitcast %"struct.WTF::KeyValuePair.1487"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #17
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 2
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %76 = bitcast %"class.WTF::Vector.1488"* %73 to i64*
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 1
  store i32 0, i32* %77, align 8
  store atomic i64 0, i64* %76 monotonic, align 8, !alias.scope !78
  %78 = bitcast %"struct.WTF::KeyValuePair.1487"* %60 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %78, align 8
  %79 = bitcast %"struct.WTF::KeyValuePair.1487"* %4 to <2 x %"class.WTF::StringImpl"*>*
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %79, align 16
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 0, i32 1, i32 1
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 0, i32 1, i32 2
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %60, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %84 = bitcast %"class.WTF::Vector.1488"* %81 to i64*
  store i64 0, i64* %84, align 8
  store atomic i64 0, i64* %76 monotonic, align 8
  store atomic i64 0, i64* %84 monotonic, align 8
  store i32 0, i32* %82, align 4
  store i32 0, i32* %74, align 8
  store i32 0, i32* %83, align 4
  store i32 0, i32* %75, align 4
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.1487"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #17
  %85 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %25, %69, %71
  %92 = phi %"struct.WTF::KeyValuePair.1487"* [ %60, %71 ], [ %65, %69 ], [ %29, %25 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %2, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #17
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !3

110:                                              ; preds = %101
  call void @llvm.trap() #17
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %111, %96, %91
  %114 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %115 = bitcast %"struct.WTF::KeyValuePair.1487"* %92 to i64*
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %92, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #17
  br label %132

132:                                              ; preds = %113, %128, %131
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %92, i64 0, i32 1
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %154, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #17
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !3

151:                                              ; preds = %142
  call void @llvm.trap() #17
  unreachable

152:                                              ; preds = %142
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %143, align 4
  br label %154

154:                                              ; preds = %152, %137, %132
  %155 = ptrtoint %"class.WTF::StringImpl"* %135 to i64
  %156 = bitcast %"struct.blink::OriginTrialResult"* %133 to i64*
  %157 = getelementptr inbounds %"struct.blink::OriginTrialResult", %"struct.blink::OriginTrialResult"* %133, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  store i64 %155, i64* %156, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #17
  br label %173

173:                                              ; preds = %154, %169, %172
  %174 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %2, i64 0, i32 1, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %92, i64 0, i32 1, i32 1
  store i32 %175, i32* %176, align 8
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %92, i64 0, i32 1, i32 2
  %178 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %2, i64 0, i32 1, i32 2
  %179 = call dereferenceable(16) %"class.WTF::Vector.1488"* @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.1488"* %177, %"class.WTF::Vector.1488"* dereferenceable(16) %178) #17
  %180 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %180, align 4
  %183 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 3
  %184 = load i32, i32* %183, align 8
  %185 = add i32 %184, %182
  %186 = shl i32 %185, 1
  %187 = load i32, i32* %13, align 8
  %188 = icmp ult i32 %186, %187
  br i1 %188, label %191, label %189

189:                                              ; preds = %173
  %190 = call %"struct.WTF::KeyValuePair.1487"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1484"* %0, %"struct.WTF::KeyValuePair.1487"* %92)
  br label %191

191:                                              ; preds = %55, %173, %189
  %192 = phi i8 [ 1, %173 ], [ 1, %189 ], [ 0, %55 ]
  %193 = phi %"struct.WTF::KeyValuePair.1487"* [ %92, %173 ], [ %190, %189 ], [ %48, %55 ]
  %194 = insertvalue { %"struct.WTF::KeyValuePair.1487"*, i8 } undef, %"struct.WTF::KeyValuePair.1487"* %193, 0
  %195 = insertvalue { %"struct.WTF::KeyValuePair.1487"*, i8 } %194, i8 %192, 1
  ret { %"struct.WTF::KeyValuePair.1487"*, i8 } %195
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1487"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1484"*, %"struct.WTF::KeyValuePair.1487"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"struct.WTF::KeyValuePair.1487", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1484", %"class.WTF::HashTable.1484"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %32

32:                                               ; preds = %10, %2, %31
  %33 = phi i32 [ %14, %31 ], [ 8, %2 ], [ %8, %10 ]
  %34 = zext i32 %33 to i64
  %35 = mul nuw nsw i64 %34, 40
  %36 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink17OriginTrialResultEEEEEPKcv, i64 0, i64 0)) #17
  %37 = bitcast i8* %36 to %"struct.WTF::KeyValuePair.1487"*
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %61, label %39

39:                                               ; preds = %32
  %40 = bitcast %"struct.WTF::KeyValuePair.1487"* %4 to i8*
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 2
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2
  %44 = bitcast %"class.WTF::Vector.1488"* %41 to i64*
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %48, %39
  %49 = phi i64 [ 0, %39 ], [ %59, %48 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %37, i64 %49
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #17
  store i32 0, i32* %45, align 8
  store atomic i64 0, i64* %44 monotonic, align 8, !alias.scope !81
  %51 = bitcast %"struct.WTF::KeyValuePair.1487"* %50 to i64*
  store i64 0, i64* %51, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %37, i64 %49, i32 1
  %53 = bitcast %"struct.blink::OriginTrialResult"* %52 to i64*
  store i64 0, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %47, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %37, i64 %49, i32 1, i32 1
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %37, i64 %49, i32 1, i32 2
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %37, i64 %49, i32 1, i32 2, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1487", %"struct.WTF::KeyValuePair.1487"* %37, i64 %49, i32 1, i32 2, i32 0, i32 0, i32 2
  %58 = bitcast %"class.WTF::Vector.1488"* %55 to i64*
  store i64 0, i64* %58, align 8
  store atomic i64 0, i64* %44 monotonic, align 8
  store atomic i64 0, i64* %58 monotonic, align 8
  store i32 0, i32* %56, align 4
  store i32 0, i32* %42, align 8
  store i32 0, i32* %57, align 4
  store i32 0, i32* %43, align 4
  call void @_ZN3WTF12KeyValuePairINS_6StringEN5blink17OriginTrialResultEED2Ev(%"struct.WTF::KeyValuePair.1487"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #17
  %59 = add nuw nsw i64 %49, 1
  %60 = icmp eq i64 %59, %34
  br i1 %60, label %61, label %48

61:                                               ; preds = %48, %32
  %62 = call %"struct.WTF::KeyValuePair.1487"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink17OriginTrialResultEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1484"* %0, %"struct.WTF::KeyValuePair.1487"* %37, i32 %33, %"struct.WTF::KeyValuePair.1487"* %1) #17
  ret %"struct.WTF::KeyValuePair.1487"* %62
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.1488"* @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.1488"*, %"class.WTF::Vector.1488"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.1488"* %1, %0
  br i1 %3, label %155, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %45

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %12, i64 %15
  br label %17

17:                                               ; preds = %41, %10
  %18 = phi %"struct.blink::OriginTrialTokenResult"* [ %42, %41 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %23) #17
  store i8 0, i8* %19, align 8
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %18, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #17
  br label %41

41:                                               ; preds = %40, %37, %24
  %42 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %18, i64 1
  %43 = icmp eq %"struct.blink::OriginTrialTokenResult"* %42, %14
  br i1 %43, label %44, label %17

44:                                               ; preds = %41
  store i32 %8, i32* %5, align 4
  br label %111

45:                                               ; preds = %4
  %46 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp ugt i32 %8, %47
  br i1 %48, label %49, label %109

49:                                               ; preds = %45
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %92, label %51

51:                                               ; preds = %49
  %52 = icmp eq i32 %6, 0
  br i1 %52, label %86, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %54, align 8
  %56 = zext i32 %6 to i64
  %57 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %55, i64 %56
  br label %58

58:                                               ; preds = %82, %53
  %59 = phi %"struct.blink::OriginTrialTokenResult"* [ %83, %82 ], [ %55, %53 ]
  %60 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %64) #17
  store i8 0, i8* %60, align 8
  br label %65

65:                                               ; preds = %63, %58
  %66 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %59, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #17
  br label %82

82:                                               ; preds = %81, %78, %65
  %83 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %59, i64 1
  %84 = icmp eq %"struct.blink::OriginTrialTokenResult"* %83, %57
  br i1 %84, label %85, label %58

85:                                               ; preds = %82
  store i32 0, i32* %5, align 4
  br label %86

86:                                               ; preds = %85, %51
  %87 = bitcast %"class.WTF::Vector.1488"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"class.WTF::Vector.1488"* %0 to i64*
  store atomic i64 0, i64* %89 monotonic, align 8
  store i32 0, i32* %46, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %88) #17
  %90 = load i32, i32* %7, align 4
  %91 = load i32, i32* %46, align 8
  br label %92

92:                                               ; preds = %49, %86
  %93 = phi i32 [ 0, %49 ], [ %91, %86 ]
  %94 = phi i32 [ %8, %49 ], [ %90, %86 ]
  %95 = icmp ult i32 %93, %94
  br i1 %95, label %96, label %109, !prof !2

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 0
  %98 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %97, align 8
  %99 = icmp eq %"struct.blink::OriginTrialTokenResult"* %98, null
  br i1 %99, label %100, label %108

100:                                              ; preds = %96
  %101 = zext i32 %94 to i64
  %102 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm(i64 %101) #17
  %103 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %102, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22OriginTrialTokenResultEEEPKcv, i64 0, i64 0)) #17
  %104 = ptrtoint i8* %103 to i64
  %105 = bitcast %"class.WTF::Vector.1488"* %0 to i64*
  store atomic i64 %104, i64* %105 monotonic, align 8
  %106 = udiv i64 %102, 176
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %46, align 8
  br label %109

108:                                              ; preds = %96
  tail call void @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1488"* %0, i32 %94) #17
  br label %109

109:                                              ; preds = %45, %92, %100, %108
  %110 = load i32, i32* %5, align 4
  br label %111

111:                                              ; preds = %109, %44
  %112 = phi i32 [ %110, %109 ], [ %8, %44 ]
  %113 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %1, i64 0, i32 0, i32 0, i32 0
  %114 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %113, align 8
  %115 = zext i32 %112 to i64
  %116 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %114, i64 %115
  %117 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 0
  %118 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %117, align 8
  %119 = icmp eq i32 %112, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %111, %120
  %121 = phi %"struct.blink::OriginTrialTokenResult"* [ %125, %120 ], [ %118, %111 ]
  %122 = phi %"struct.blink::OriginTrialTokenResult"* [ %124, %120 ], [ %114, %111 ]
  %123 = tail call dereferenceable(176) %"struct.blink::OriginTrialTokenResult"* @_ZN5blink22OriginTrialTokenResultaSERKS0_(%"struct.blink::OriginTrialTokenResult"* %121, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176) %122) #17
  %124 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %122, i64 1
  %125 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %121, i64 1
  %126 = icmp eq %"struct.blink::OriginTrialTokenResult"* %124, %116
  br i1 %126, label %127, label %120

127:                                              ; preds = %120
  %128 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %113, align 8
  %129 = load i32, i32* %5, align 4
  %130 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %117, align 8
  br label %131

131:                                              ; preds = %127, %111
  %132 = phi %"struct.blink::OriginTrialTokenResult"* [ %130, %127 ], [ %118, %111 ]
  %133 = phi i32 [ %129, %127 ], [ 0, %111 ]
  %134 = phi %"struct.blink::OriginTrialTokenResult"* [ %128, %127 ], [ %114, %111 ]
  %135 = zext i32 %133 to i64
  %136 = load i32, i32* %7, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %134, i64 %137
  %139 = icmp eq i32 %133, %136
  br i1 %139, label %153, label %140

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %132, i64 %135
  %142 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %134, i64 %135
  br label %143

143:                                              ; preds = %140, %143
  %144 = phi %"struct.blink::OriginTrialTokenResult"* [ %148, %143 ], [ %141, %140 ]
  %145 = phi %"struct.blink::OriginTrialTokenResult"* [ %149, %143 ], [ %142, %140 ]
  %146 = bitcast %"struct.blink::OriginTrialTokenResult"* %144 to i8*
  %147 = tail call %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJRKS2_EEEPS2_PvDpOT_(i8* %146, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176) %145) #17
  %148 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %144, i64 1
  %149 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %145, i64 1
  %150 = icmp eq %"struct.blink::OriginTrialTokenResult"* %149, %138
  br i1 %150, label %151, label %143

151:                                              ; preds = %143
  %152 = load i32, i32* %7, align 4
  br label %153

153:                                              ; preds = %151, %131
  %154 = phi i32 [ %152, %151 ], [ %133, %131 ]
  store i32 %154, i32* %5, align 4
  br label %155

155:                                              ; preds = %2, %153
  ret %"class.WTF::Vector.1488"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22OriginTrialTokenResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1488"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %47

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1488"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %4, %41
  %15 = phi %"struct.blink::OriginTrialTokenResult"* [ %43, %41 ], [ %6, %4 ]
  %16 = phi %"struct.blink::OriginTrialTokenResult"* [ %42, %41 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::OriginTrialTokenResult"* %16 to i8*
  %18 = tail call %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_(i8* %17, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176) %15) #17
  %19 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %23) #17
  store i8 0, i8* %19, align 8
  br label %24

24:                                               ; preds = %22, %14
  %25 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #17
  br label %41

41:                                               ; preds = %40, %37, %24
  %42 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %16, i64 1
  %43 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %15, i64 1
  %44 = icmp eq %"struct.blink::OriginTrialTokenResult"* %43, %10
  br i1 %44, label %45, label %14

45:                                               ; preds = %41, %4
  %46 = bitcast %"struct.blink::OriginTrialTokenResult"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #17
  br label %103

47:                                               ; preds = %2
  %48 = zext i32 %1 to i64
  %49 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm(i64 %48) #17
  %50 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %49, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22OriginTrialTokenResultEEEPKcv, i64 0, i64 0)) #17
  %51 = udiv i64 %49, 176
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"** %53, align 8
  %55 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %54, i64 %57
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %47
  %61 = bitcast %"struct.blink::OriginTrialTokenResult"* %54 to i8*
  br label %98

62:                                               ; preds = %47
  %63 = bitcast i8* %50 to %"struct.blink::OriginTrialTokenResult"*
  br label %64

64:                                               ; preds = %62, %91
  %65 = phi %"struct.blink::OriginTrialTokenResult"* [ %93, %91 ], [ %54, %62 ]
  %66 = phi %"struct.blink::OriginTrialTokenResult"* [ %92, %91 ], [ %63, %62 ]
  %67 = bitcast %"struct.blink::OriginTrialTokenResult"* %66 to i8*
  %68 = tail call %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_(i8* %67, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176) %65) #17
  %69 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8, !range !4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %73) #17
  store i8 0, i8* %69, align 8
  br label %74

74:                                               ; preds = %72, %64
  %75 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %65, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #17
  br label %91

91:                                               ; preds = %90, %87, %74
  %92 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %66, i64 1
  %93 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %65, i64 1
  %94 = icmp eq %"struct.blink::OriginTrialTokenResult"* %93, %58
  br i1 %94, label %95, label %64

95:                                               ; preds = %91
  %96 = bitcast %"class.WTF::Vector.1488"* %0 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %60, %95
  %99 = phi i8* [ %97, %95 ], [ %61, %60 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #17
  %100 = bitcast %"class.WTF::Vector.1488"* %0 to i64*
  store atomic i64 %52, i64* %100 monotonic, align 8
  %101 = trunc i64 %51 to i32
  %102 = getelementptr inbounds %"class.WTF::Vector.1488", %"class.WTF::Vector.1488"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %101, i32* %102, align 8
  br label %103

103:                                              ; preds = %98, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22OriginTrialTokenResultEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 12189696
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 12189696) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.41, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = mul i64 %0, 176
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJS2_EEEPS2_PvDpOT_(i8*, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.blink::OriginTrialTokenResult"*
  %4 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #17
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %2
  %26 = getelementptr inbounds i8, i8* %0, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %27, align 8
  %30 = getelementptr inbounds i8, i8* %0, i64 16
  %31 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 160, i1 false) #17
  %32 = load i8, i8* %31, align 8, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %80, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds i8, i8* %0, i64 24
  %36 = bitcast i8* %35 to %"class.url::Origin"*
  %37 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %36, %"class.url::Origin"* dereferenceable(80) %37) #17
  %38 = getelementptr inbounds i8, i8* %0, i64 104
  %39 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %40 = load i8, i8* %39, align 8, !range !4
  store i8 %40, i8* %38, align 8
  %41 = getelementptr inbounds i8, i8* %0, i64 112
  %42 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %34
  %48 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %48, i64 24, i1 false) #17
  br label %55

49:                                               ; preds = %34
  %50 = bitcast i8* %41 to %"class.std::__1::basic_string"*
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %52, i64 %54) #17
  br label %55

55:                                               ; preds = %49, %47
  %56 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %57 = getelementptr inbounds i8, i8* %0, i64 136
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %56, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %0, i64 144
  %61 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %67, i64 24, i1 false) #17
  br label %74

68:                                               ; preds = %55
  %69 = bitcast i8* %60 to %"class.std::__1::basic_string"*
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %69, i8* %71, i64 %73) #17
  br label %74

74:                                               ; preds = %68, %66
  %75 = getelementptr inbounds i8, i8* %0, i64 168
  %76 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %77 = bitcast i8* %76 to i64*
  %78 = bitcast i8* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  store i8 1, i8* %30, align 8
  br label %80

80:                                               ; preds = %25, %74
  ret %"struct.blink::OriginTrialTokenResult"* %3
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(176) %"struct.blink::OriginTrialTokenResult"* @_ZN5blink22OriginTrialTokenResultaSERKS0_(%"struct.blink::OriginTrialTokenResult"*, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #17
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #17
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.blink::OriginTrialTokenResult"* %0 to i64*
  %26 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #17
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 1
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %102, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.absl::optional.1491", %"class.absl::optional.1491"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 8, !range !4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = tail call dereferenceable(152) %"class.blink::TrialToken"* @_ZN5blink10TrialTokenaSERKS0_(%"class.blink::TrialToken"* %56, %"class.blink::TrialToken"* dereferenceable(152) %51) #17
  br label %108

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %51, i64 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %59, %"class.url::Origin"* dereferenceable(80) %60) #17
  %61 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %62 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !4
  store i8 %63, i8* %61, align 8
  %64 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %65 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %58
  %71 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %72 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 24, i1 false) #17
  br label %78

73:                                               ; preds = %58
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %64, i8* %75, i64 %77) #17
  br label %78

78:                                               ; preds = %73, %70
  %79 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %81 = load i64, i64* %79, align 8
  store i64 %81, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %83 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %78
  %89 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #17
  br label %96

91:                                               ; preds = %78
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %82, i8* %93, i64 %95) #17
  br label %96

96:                                               ; preds = %88, %91
  %97 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %98 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %99 = bitcast i8* %98 to i64*
  %100 = bitcast i8* %97 to i64*
  %101 = load i64, i64* %99, align 8
  store i64 %101, i64* %100, align 8
  store i8 1, i8* %52, align 8
  br label %108

102:                                              ; preds = %42
  %103 = getelementptr inbounds %"class.absl::optional.1491", %"class.absl::optional.1491"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !4
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* %107) #17
  store i8 0, i8* %103, align 8
  br label %108

108:                                              ; preds = %55, %96, %102, %106
  ret %"struct.blink::OriginTrialTokenResult"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(152) %"class.blink::TrialToken"* @_ZN5blink10TrialTokenaSERKS0_(%"class.blink::TrialToken"*, %"class.blink::TrialToken"* dereferenceable(152)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #17
  %6 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 1
  store i8 %7, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 2
  %11 = icmp eq %"class.blink::TrialToken"* %0, %1
  br i1 %11, label %41, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %16, label %31, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #17
  br label %45

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %27, i64 %29) #17
  br label %45

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %37 = zext i8 %19 to i64
  %38 = select i1 %20, i8* %33, i8* %36
  %39 = select i1 %20, i64 %35, i64 %37
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %38, i64 %39) #17
  br label %45

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 3, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 3, i32 0, i32 0
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  br label %79

45:                                               ; preds = %22, %25, %31
  %46 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 3, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 3, i32 0, i32 0
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 4
  %50 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 4
  %51 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %54, label %69, label %59

59:                                               ; preds = %45
  br i1 %58, label %63, label %60

60:                                               ; preds = %59
  %61 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #17
  br label %79

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %49, i8* %65, i64 %67) #17
  br label %79

69:                                               ; preds = %45
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %75 = zext i8 %57 to i64
  %76 = select i1 %58, i8* %71, i8* %74
  %77 = select i1 %58, i64 %73, i64 %75
  %78 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %49, i8* %76, i64 %77) #17
  br label %79

79:                                               ; preds = %41, %60, %63, %69
  %80 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %0, i64 0, i32 5
  %81 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %1, i64 0, i32 5
  %82 = bitcast i8* %81 to i64*
  %83 = bitcast i8* %80 to i64*
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  ret %"class.blink::TrialToken"* %0
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::OriginTrialTokenResult"* @_ZN3WTF15ConstructTraitsIN5blink22OriginTrialTokenResultENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJRKS2_EEEPS2_PvDpOT_(i8*, %"struct.blink::OriginTrialTokenResult"* dereferenceable(176)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.blink::OriginTrialTokenResult"*
  %4 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #17
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %2
  %26 = getelementptr inbounds i8, i8* %0, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %27, align 8
  %30 = getelementptr inbounds i8, i8* %0, i64 16
  %31 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 160, i1 false) #17
  %32 = load i8, i8* %31, align 8, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %80, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds i8, i8* %0, i64 24
  %36 = bitcast i8* %35 to %"class.url::Origin"*
  %37 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %36, %"class.url::Origin"* dereferenceable(80) %37) #17
  %38 = getelementptr inbounds i8, i8* %0, i64 104
  %39 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %40 = load i8, i8* %39, align 8, !range !4
  store i8 %40, i8* %38, align 8
  %41 = getelementptr inbounds i8, i8* %0, i64 112
  %42 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %34
  %48 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %48, i64 24, i1 false) #17
  br label %55

49:                                               ; preds = %34
  %50 = bitcast i8* %41 to %"class.std::__1::basic_string"*
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %52, i64 %54) #17
  br label %55

55:                                               ; preds = %49, %47
  %56 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %57 = getelementptr inbounds i8, i8* %0, i64 136
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %56, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %0, i64 144
  %61 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %67, i64 24, i1 false) #17
  br label %74

68:                                               ; preds = %55
  %69 = bitcast i8* %60 to %"class.std::__1::basic_string"*
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %69, i8* %71, i64 %73) #17
  br label %74

74:                                               ; preds = %68, %66
  %75 = getelementptr inbounds i8, i8* %0, i64 168
  %76 = getelementptr inbounds %"struct.blink::OriginTrialTokenResult", %"struct.blink::OriginTrialTokenResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %77 = bitcast i8* %76 to i64*
  %78 = bitcast i8* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  store i8 1, i8* %30, align 8
  br label %80

80:                                               ; preds = %25, %74
  ret %"struct.blink::OriginTrialTokenResult"* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page11OriginTrialENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3479"*, %"class.std::__1::unique_ptr.3481"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3479", %"class.std::__1::vector.3479"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3481"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3479"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3479"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3479", %"class.std::__1::vector.3479"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3481"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3481"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3481"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3481"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3481"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3481"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3481"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3479", %"class.std::__1::vector.3479"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3481"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3481"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Page::OriginTrial"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3481"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3481"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3481"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3481"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !84

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3481"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3481"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3481"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3481"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3481"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3481"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3481"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3481"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3481"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3481"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3481"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3481"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3481"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3481"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3481"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3481"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3481"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3481"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3481"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3481"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3481"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3481"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3481"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3481"*, %"class.std::__1::unique_ptr.3481"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3481"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3481"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3481"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3481"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3481"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3481"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3481", %"class.std::__1::unique_ptr.3481"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Page::OriginTrial"*, %"class.blink::protocol::Page::OriginTrial"** %142, align 8
  store %"class.blink::protocol::Page::OriginTrial"* null, %"class.blink::protocol::Page::OriginTrial"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Page::OriginTrial"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Page::OriginTrial"* %143 to void (%"class.blink::protocol::Page::OriginTrial"*)***
  %147 = load void (%"class.blink::protocol::Page::OriginTrial"*)**, void (%"class.blink::protocol::Page::OriginTrial"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Page::OriginTrial"*)*, void (%"class.blink::protocol::Page::OriginTrial"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Page::OriginTrial"*)*, void (%"class.blink::protocol::Page::OriginTrial"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Page::OriginTrial"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3481"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page26OriginTrialTokenWithStatusENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3490"*, %"class.std::__1::unique_ptr.3492"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3490", %"class.std::__1::vector.3490"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3492"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3490"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3490"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3490", %"class.std::__1::vector.3490"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3492"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3492"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3492"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3492"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3492"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3492"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3492"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3490", %"class.std::__1::vector.3490"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3492"*, %"class.std::__1::unique_ptr.3492"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3492"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3492"*, %"class.std::__1::unique_ptr.3492"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3492"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3492"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3492"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3492"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3492"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !85

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3492"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3492"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3492"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3492"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3492"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3492"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3492"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3492"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3492"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3492"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3492"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3492"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3492"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3492"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3492"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3492"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3492"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3492"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3492"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3492"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3492"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3492"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3492"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3492"*, %"class.std::__1::unique_ptr.3492"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3492"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3492"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3492"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3492"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3492"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3492"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3492", %"class.std::__1::unique_ptr.3492"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Page::OriginTrialTokenWithStatus"*, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %142, align 8
  store %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* null, %"class.blink::protocol::Page::OriginTrialTokenWithStatus"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Page::OriginTrialTokenWithStatus"* %143 to void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)***
  %147 = load void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)**, void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)*, void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)*, void (%"class.blink::protocol::Page::OriginTrialTokenWithStatus"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Page::OriginTrialTokenWithStatus"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3492"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin19CreateFromUrlOriginERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.759"*, %"class.blink::Resource"** dereferenceable(8)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.759"* %0, i32 %14) #17
  %15 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.762"*, %"class.blink::Member.762"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.762", %"class.blink::Member.762"* %16, i64 %18
  %20 = bitcast %"class.blink::Resource"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.762"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #17
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.759"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.762"*, %"class.blink::Member.762"** %8, align 8
  %10 = icmp eq %"class.blink::Member.762"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64 %11) #17
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #17
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.759"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #17
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.762"*, %"class.blink::Member.762"** %8, align 8
  %26 = icmp eq %"class.blink::Member.762"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.762"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #17
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #17
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #17
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #17
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.759"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.759"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.759"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.759"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #17
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #17
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64 %14) #17
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #17
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.762"*, %"class.blink::Member.762"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.762"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.762"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.759"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #17
  %33 = bitcast %"class.WTF::Vector.759"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #17
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #17
  %42 = bitcast %"class.WTF::Vector.759"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #17
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.44, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.46, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8ResourceEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #17
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0), i8* %21, i8* %22) #17
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.48, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #17
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.762"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.762", %"class.blink::Member.762"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.762"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv) #17
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Resource"*
  %4 = bitcast i8* %1 to void (%"class.blink::Resource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)**, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Resource"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink13ResourceError14IsCancellationEv(%"class.blink::ResourceError"*) local_unnamed_addr #2

declare %"class.blink::WindowProxy"* @_ZN5blink18WindowProxyManager29WindowProxyMaybeUninitializedERNS_15DOMWrapperWorldE(%"class.blink::WindowProxyManager"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN5blink11WindowProxy18InitializeIfNeededEv(%"class.blink::WindowProxy"*) local_unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN2v814ScriptCompiler10CachedData12BufferPolicyEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #17
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED2Ev(%"class.blink::InspectorAgentState::SimpleField.771"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #17
  br label %53

53:                                               ; preds = %36, %49, %52
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbED2Ev(%"class.blink::InspectorAgentState::MapField.770"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.726"* %4, null
  br i1 %5, label %38, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.726"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #17
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.726"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  store %"struct.WTF::KeyValuePair.726"* null, %"struct.WTF::KeyValuePair.726"** %3, align 8
  br label %38

38:                                               ; preds = %1, %36
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #17
  br label %55

55:                                               ; preds = %38, %51, %54
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.769"* %4, null
  br i1 %5, label %9, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.769"* nonnull %4, i32 %8) #17
  store %"struct.WTF::KeyValuePair.769"* null, %"struct.WTF::KeyValuePair.769"** %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #17
  br label %26

26:                                               ; preds = %9, %22, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %26, %39, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED0Ev(%"class.blink::InspectorAgentState::SimpleField.771"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %35, %32, %19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #17
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::InspectorAgentState::SimpleField.771"* %0 to i8*
  tail call void @_ZdlPv(i8* %54) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE5ClearEv(%"class.blink::InspectorAgentState::SimpleField.771"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"* %6) #17
  br i1 %7, label %50, label %8

8:                                                ; preds = %1
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #17
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #17
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %8
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::String"* %2 to i64*
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  store i64 %29, i64* %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #17
  br label %46

46:                                               ; preds = %28, %42, %45
  %47 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 2
  %48 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %48, %"class.WTF::String"* dereferenceable(8) %49, %"class.blink::WebVector.2998"* null) #17
  br label %50

50:                                               ; preds = %1, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField.771"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #17
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.688"* %8, %"class.WTF::String"* dereferenceable(8) %7) #17
  %10 = extractvalue { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.691"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.771", %"class.blink::InspectorAgentState::SimpleField.771"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPN3WTF6StringE(i8* %25, i64 %28, %"class.WTF::String"* %29) #17
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.2998"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPN3WTF6StringE(i8*, i64, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.688"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.688", %"class.WTF::HashTable.688"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.691"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.688", %"class.WTF::HashTable.688"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.691"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.691"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.691"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.688", %"class.WTF::HashTable.688"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.691"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.691"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } undef, %"struct.WTF::KeyValuePair.691"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } %77, %"struct.WTF::KeyValuePair.691"* %76, 1
  ret { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } %78
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbED0Ev(%"class.blink::InspectorAgentState::MapField.770"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.726"* %4, null
  br i1 %5, label %38, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.726"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #17
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.726"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  store %"struct.WTF::KeyValuePair.726"* null, %"struct.WTF::KeyValuePair.726"** %3, align 8
  br label %38

38:                                               ; preds = %36, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #17
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = bitcast %"class.blink::InspectorAgentState::MapField.770"* %0 to i8*
  tail call void @_ZdlPv(i8* %56) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField.770"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.722", %"class.WTF::HashMap.722"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %9, i64 %12
  br i1 %7, label %36, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.726"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.726"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.726"* %21, %13
  br i1 %22, label %36, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.726"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.726"* %24, %13
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  %29 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  %30 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %72

34:                                               ; preds = %147, %157, %154
  %35 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %8, align 8
  br label %36

36:                                               ; preds = %20, %1, %34, %23
  %37 = phi %"struct.WTF::KeyValuePair.726"* [ %35, %34 ], [ %9, %23 ], [ %9, %1 ], [ %9, %20 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.726"* %37, null
  br i1 %38, label %71, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %39
  %43 = zext i32 %40 to i64
  br label %44

44:                                               ; preds = %65, %42
  %45 = phi i64 [ 0, %42 ], [ %66, %65 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %37, i64 %45
  %47 = bitcast %"struct.WTF::KeyValuePair.726"* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"*
  %50 = ptrtoint i8* %48 to i64
  switch i64 %50, label %51 [
    i64 -1, label %65
    i64 0, label %65
  ]

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %48, i64 8
  %53 = bitcast i8* %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = bitcast i8* %48 to i32*
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %51
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i32 [ %60, %59 ], [ %58, %51 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #17
  br label %65

65:                                               ; preds = %64, %61, %44, %44
  %66 = add nuw nsw i64 %45, 1
  %67 = icmp eq i64 %66, %43
  br i1 %67, label %68, label %44

68:                                               ; preds = %65, %39
  %69 = bitcast %"struct.WTF::KeyValuePair.726"* %37 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #17
  %70 = bitcast %"class.WTF::HashMap.722"* %4 to i64*
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %71

71:                                               ; preds = %36, %68
  ret void

72:                                               ; preds = %26, %157
  %73 = phi %"struct.WTF::KeyValuePair.726"* [ %24, %26 ], [ %151, %157 ]
  %74 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #17
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #17
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  call void @llvm.trap() #17
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %72, %78, %93
  %96 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %30, %"class.WTF::StringImpl"* %76)
  %97 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %31, align 8
  %98 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 1
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %32, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %3)
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %74, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::WebVector.2998"* null) #17
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #17
  br label %115

115:                                              ; preds = %95, %111, %114
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #17
  br label %131

131:                                              ; preds = %130, %127, %115
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #17
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %73, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.726"* %148, %13
  br i1 %149, label %34, label %150

150:                                              ; preds = %147, %154
  %151 = phi %"struct.WTF::KeyValuePair.726"* [ %155, %154 ], [ %148, %147 ]
  %152 = bitcast %"struct.WTF::KeyValuePair.726"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  switch i64 %153, label %157 [
    i64 -1, label %154
    i64 0, label %154
  ]

154:                                              ; preds = %150, %150
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %151, i64 1
  %156 = icmp eq %"struct.WTF::KeyValuePair.726"* %155, %13
  br i1 %156, label %34, label %150

157:                                              ; preds = %150
  %158 = icmp eq %"struct.WTF::KeyValuePair.726"* %151, %13
  br i1 %158, label %34, label %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::MapField.770"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %6) #17
  %8 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %7, null
  br i1 %8, label %122, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %14, i64 %17
  br i1 %12, label %122, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair.691"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair.691"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair.691"* %26, %18
  br i1 %27, label %122, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair.691"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair.691"* %29, %18
  br i1 %30, label %122, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.770", %"class.blink::InspectorAgentState::MapField.770"* %0, i64 0, i32 3, i32 0
  br label %42

42:                                               ; preds = %31, %120
  %43 = phi %"struct.WTF::KeyValuePair.691"* [ %29, %31 ], [ %114, %120 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %43, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  store i8* null, i8** %35, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %48, i64* %37, align 8
  br label %53

49:                                               ; preds = %42
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %34, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 1
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %36, align 8
  br label %53

53:                                               ; preds = %47, %49
  %54 = phi i32 [ %51, %49 ], [ 0, %47 ]
  store i32 %54, i32* %38, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %43, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = icmp eq i32 %54, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %59, label %64, label %110

60:                                               ; preds = %53
  %61 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %56, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %61, label %62, label %110

62:                                               ; preds = %60
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi %"class.WTF::StringImpl"* [ %63, %62 ], [ %45, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  br label %70

70:                                               ; preds = %64, %67
  %71 = phi i32 [ %69, %67 ], [ 0, %64 ]
  %72 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %44, i32 %71, i32 -1) #17
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %74 = load i8, i8* %73, align 8, !range !4
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %70
  call void @llvm.trap() #17
  unreachable

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %79, i64 %82, i8* nonnull %4) #17
  br i1 %83, label %84, label %93

84:                                               ; preds = %77
  %85 = call { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.723"* %41, %"class.WTF::String"* nonnull dereferenceable(8) %3, i8* nonnull dereferenceable(1) %4) #17
  %86 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %85, 1
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %85, 0
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %90, i64 0, i32 1
  %92 = load i8, i8* %4, align 1, !range !4
  store i8 %92, i8* %91, align 1
  br label %93

93:                                               ; preds = %89, %84, %77
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #17
  br label %109

109:                                              ; preds = %93, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  br label %110

110:                                              ; preds = %58, %60, %109
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %43, i64 1
  %112 = icmp eq %"struct.WTF::KeyValuePair.691"* %111, %18
  br i1 %112, label %122, label %113

113:                                              ; preds = %110, %117
  %114 = phi %"struct.WTF::KeyValuePair.691"* [ %118, %117 ], [ %111, %110 ]
  %115 = bitcast %"struct.WTF::KeyValuePair.691"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  switch i64 %116, label %120 [
    i64 -1, label %117
    i64 0, label %117
  ]

117:                                              ; preds = %113, %113
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %114, i64 1
  %119 = icmp eq %"struct.WTF::KeyValuePair.691"* %118, %18
  br i1 %119, label %122, label %113

120:                                              ; preds = %113
  %121 = icmp eq %"struct.WTF::KeyValuePair.691"* %114, %18
  br i1 %121, label %122, label %42

122:                                              ; preds = %25, %110, %120, %117, %9, %28, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.723"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.726"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* null)
  %9 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.726"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.726"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.726"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.726"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.726"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.726"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.726"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.726"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #17
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #17
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.726"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !4
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.726"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } undef, %"struct.WTF::KeyValuePair.726"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.726"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"*, %"struct.WTF::KeyValuePair.726"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.726"*
  %37 = call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* %36, i32 %32, %"struct.WTF::KeyValuePair.726"* %1) #17
  ret %"struct.WTF::KeyValuePair.726"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.723"*, %"struct.WTF::KeyValuePair.726"*, i32, %"struct.WTF::KeyValuePair.726"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.723", align 8
  %6 = bitcast %"class.WTF::HashTable.723"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.723"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.726"* %1, %"struct.WTF::KeyValuePair.726"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.726"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.723"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.723"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.726"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable.723"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.723"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.726"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.726"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.726"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #17
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.726"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.726"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.726"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.726"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.723"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #17
  %85 = extractvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #17
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.726"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %74, i64 %77, i32 1
  %107 = load i8, i8* %106, align 8, !range !4
  store i8 %107, i8* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair.726"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.726"* %85, %"struct.WTF::KeyValuePair.726"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.726"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair.726"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.726"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.723"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.726"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.726"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.726"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.726"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.726"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.726"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.726"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.726"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.726"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.726"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.726"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } undef, %"struct.WTF::KeyValuePair.726"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.726"*, i8 } %77
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.769"* %4, null
  br i1 %5, label %9, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.769"* nonnull %4, i32 %8) #17
  store %"struct.WTF::KeyValuePair.769"* null, %"struct.WTF::KeyValuePair.769"** %3, align 8
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #17
  br label %26

26:                                               ; preds = %25, %22, %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %26, %39, %42
  %44 = bitcast %"class.blink::InspectorAgentState::MapField"* %0 to i8*
  tail call void @_ZdlPv(i8* %44) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.765", %"class.WTF::HashMap.765"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %9, i64 %12
  br i1 %7, label %36, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.769"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.769"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.769"* %21, %13
  br i1 %22, label %36, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.769"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.769"* %24, %13
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  %29 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  %30 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %43

34:                                               ; preds = %118, %128, %125
  %35 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %8, align 8
  br label %36

36:                                               ; preds = %20, %1, %34, %23
  %37 = phi %"struct.WTF::KeyValuePair.769"* [ %35, %34 ], [ %9, %23 ], [ %9, %1 ], [ %9, %20 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.769"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.769"* nonnull %37, i32 %40) #17
  %41 = bitcast %"class.WTF::HashMap.765"* %4 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %42

42:                                               ; preds = %36, %39
  ret void

43:                                               ; preds = %26, %128
  %44 = phi %"struct.WTF::KeyValuePair.769"* [ %24, %26 ], [ %122, %128 ]
  %45 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #17
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #17
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !3

63:                                               ; preds = %54
  call void @llvm.trap() #17
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %66

66:                                               ; preds = %43, %49, %64
  %67 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %30, %"class.WTF::StringImpl"* %47)
  %68 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %67, 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %31, align 8
  %69 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %67, 1
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %32, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %3)
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %45, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::WebVector.2998"* null) #17
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #17
  br label %86

86:                                               ; preds = %66, %82, %85
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #17
  br label %102

102:                                              ; preds = %101, %98, %86
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %44, i64 1
  %120 = icmp eq %"struct.WTF::KeyValuePair.769"* %119, %13
  br i1 %120, label %34, label %121

121:                                              ; preds = %118, %125
  %122 = phi %"struct.WTF::KeyValuePair.769"* [ %126, %125 ], [ %119, %118 ]
  %123 = bitcast %"struct.WTF::KeyValuePair.769"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  switch i64 %124, label %128 [
    i64 -1, label %125
    i64 0, label %125
  ]

125:                                              ; preds = %121, %121
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %122, i64 1
  %127 = icmp eq %"struct.WTF::KeyValuePair.769"* %126, %13
  br i1 %127, label %34, label %121

128:                                              ; preds = %121
  %129 = icmp eq %"struct.WTF::KeyValuePair.769"* %122, %13
  br i1 %129, label %34, label %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %6) #17
  %8 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %7, null
  br i1 %8, label %177, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %14, i64 %17
  br i1 %12, label %177, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair.691"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair.691"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair.691"* %26, %18
  br i1 %27, label %177, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair.691"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair.691"* %29, %18
  br i1 %30, label %177, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %4 to i8*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0
  br label %44

44:                                               ; preds = %31, %175
  %45 = phi %"struct.WTF::KeyValuePair.691"* [ %29, %31 ], [ %169, %175 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %45, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  store i8* null, i8** %35, align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %50, i64* %37, align 8
  br label %55

51:                                               ; preds = %44
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %34, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %36, align 8
  br label %55

55:                                               ; preds = %49, %51
  %56 = phi i32 [ %53, %51 ], [ 0, %49 ]
  store i32 %56, i32* %38, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %45, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = icmp eq i32 %56, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %61, label %66, label %165

62:                                               ; preds = %55
  %63 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %58, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %63, label %64, label %165

64:                                               ; preds = %62
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi %"class.WTF::StringImpl"* [ %65, %64 ], [ %47, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %66, %69
  %73 = phi i32 [ %71, %69 ], [ 0, %66 ]
  %74 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %46, i32 %73, i32 -1) #17
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %72
  call void @llvm.trap() #17
  unreachable

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPN3WTF6StringE(i8* %81, i64 %84, %"class.WTF::String"* nonnull %4) #17
  br i1 %85, label %86, label %132

86:                                               ; preds = %79
  %87 = call { %"struct.WTF::KeyValuePair.769"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.766"* %43, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %88 = extractvalue { %"struct.WTF::KeyValuePair.769"*, i8 } %87, 1
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %132

91:                                               ; preds = %86
  %92 = extractvalue { %"struct.WTF::KeyValuePair.769"*, i8 } %87, 0
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %92, i64 0, i32 1
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #17
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !3

110:                                              ; preds = %101
  call void @llvm.trap() #17
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %111, %96, %91
  %114 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %115 = bitcast %"class.WTF::String"* %93 to i64*
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #17
  br label %132

132:                                              ; preds = %131, %128, %113, %86, %79
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #17
  br label %148

148:                                              ; preds = %132, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #17
  br label %164

164:                                              ; preds = %148, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  br label %165

165:                                              ; preds = %60, %62, %164
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %45, i64 1
  %167 = icmp eq %"struct.WTF::KeyValuePair.691"* %166, %18
  br i1 %167, label %177, label %168

168:                                              ; preds = %165, %172
  %169 = phi %"struct.WTF::KeyValuePair.691"* [ %173, %172 ], [ %166, %165 ]
  %170 = bitcast %"struct.WTF::KeyValuePair.691"* %169 to i64*
  %171 = load i64, i64* %170, align 8
  switch i64 %171, label %175 [
    i64 -1, label %172
    i64 0, label %172
  ]

172:                                              ; preds = %168, %168
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %169, i64 1
  %174 = icmp eq %"struct.WTF::KeyValuePair.691"* %173, %18
  br i1 %174, label %177, label %168

175:                                              ; preds = %168
  %176 = icmp eq %"struct.WTF::KeyValuePair.691"* %169, %18
  br i1 %176, label %177, label %44

177:                                              ; preds = %25, %165, %175, %172, %9, %28, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.769"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.769"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #17
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.769"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #17
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #17
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.769"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.766"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.769"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.766"* %0, %"struct.WTF::KeyValuePair.769"* null)
  %9 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.769"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.769"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.769"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.769"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.769"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.769"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.769"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.769"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.769"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.766"* %0, %"struct.WTF::KeyValuePair.769"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair.769"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair.769"*, i8 } undef, %"struct.WTF::KeyValuePair.769"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.769"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.769"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.766"*, %"struct.WTF::KeyValuePair.769"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.769"*
  %37 = call %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.766"* %0, %"struct.WTF::KeyValuePair.769"* %36, i32 %32, %"struct.WTF::KeyValuePair.769"* %1) #17
  ret %"struct.WTF::KeyValuePair.769"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.769"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.769"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #17
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %53
  tail call void @llvm.trap() #17
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::String"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #17
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.766"*, %"struct.WTF::KeyValuePair.769"*, i32, %"struct.WTF::KeyValuePair.769"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.766", align 8
  %6 = bitcast %"class.WTF::HashTable.766"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.766"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.769"* %1, %"struct.WTF::KeyValuePair.769"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.769"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.766"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.766"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.769"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.766"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.766"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.769"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.769"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.769"* nonnull %37, i32 %34) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.769"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.769"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.769"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.769"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.766"* nonnull %5, %"struct.WTF::KeyValuePair.769"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.769"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.769"* %53, %"struct.WTF::KeyValuePair.769"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.769"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.769"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.769"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.766"*, %"struct.WTF::KeyValuePair.769"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.769"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.766"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.769"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #17
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.769"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.769"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.769"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.769"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.766"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.769"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.769"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.769"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.769"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.769"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.769"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.769"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.769"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.769"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.769"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.769"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.769"*, i8 } undef, %"struct.WTF::KeyValuePair.769"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.769"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.769"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.718"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %49, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.718"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #17
  ret void

8:                                                ; preds = %49, %4
  %9 = phi i64 [ 0, %4 ], [ %50, %49 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.718"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %49, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %0, i64 %9, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %0, i64 %9, i32 1, i32 1, i32 0
  %17 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Binary::Impl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %20, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #17
  %22 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %20, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %20, i64 -2
  %27 = bitcast %"class.base::RefCounted.721"* %26 to %"class.blink::protocol::Binary::Impl"*
  %28 = bitcast %"class.base::RefCounted.721"* %26 to void (%"class.blink::protocol::Binary::Impl"*)***
  %29 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %29, i64 1
  %31 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %30, align 8
  tail call void %31(%"class.blink::protocol::Binary::Impl"* nonnull %27) #17
  br label %32

32:                                               ; preds = %25, %19, %14
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %10, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #17
  br label %49

49:                                               ; preds = %48, %45, %32, %8
  %50 = add nuw nsw i64 %9, 1
  %51 = icmp eq i64 %50, %5
  br i1 %51, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [34 x i8*] }, { [11 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [34 x i8*] }, { [11 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %3, align 8
  store %"class.blink::protocol::Page::Frontend"* null, %"class.blink::protocol::Page::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Page::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Page::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #19
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.702"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.702"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [34 x i8*] }, { [11 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [34 x i8*] }, { [11 x i8*], [34 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.702", %"class.std::__1::unique_ptr.702"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Page::Frontend"*, %"class.blink::protocol::Page::Frontend"** %5, align 8
  store %"class.blink::protocol::Page::Frontend"* null, %"class.blink::protocol::Page::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Page::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Page::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #19
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.702", %"class.std::__1::unique_ptr.702"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.702"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.702", %"class.std::__1::unique_ptr.702"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.702"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #17
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol4Page8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #17
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #17
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #17
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #17
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #17
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #17
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #17
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #17
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #17
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #17
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #17
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #17
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0), i8* %31, i8* %32) #17
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.51, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #17
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #17
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #17
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* %46, i8* %47) #17
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.51, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #17
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #17
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4165"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4165"*, i16*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !4
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.2998"* null) #17
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #17
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.688"* %8, %"class.WTF::String"* dereferenceable(8) %7) #17
  %10 = extractvalue { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.691"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #17
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev(%"class.blink::InspectorAgentState::SimpleField.772"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField.772"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv(%"class.blink::InspectorAgentState::SimpleField.772"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i32 %3, i32* %4, align 4
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.2998"* null) #17
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField.772"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #17
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.688"* %8, %"class.WTF::String"* dereferenceable(8) %7) #17
  %10 = extractvalue { %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.691"*, %"struct.WTF::KeyValuePair.691"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.691"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.691", %"struct.WTF::KeyValuePair.691"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.772", %"class.blink::InspectorAgentState::SimpleField.772"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPi(i8* %25, i64 %28, i32* %29) #17
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPi(i8*, i64, i32*) local_unnamed_addr #2

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector.2998"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.46"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.46"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.46"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.46"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.46", %"class.WTF::Vector.46"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.46"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.46"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.46"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #17
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #17
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.41, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState9SerializeERKN3WTF6StringEPNS_9WebVectorIhEE(%"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.2998"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.766"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.769"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.769"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.769"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.769"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.769"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.769"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } undef, %"struct.WTF::KeyValuePair.769"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %77, %"struct.WTF::KeyValuePair.769"* %76, 1
  ret { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.769"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.766"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.769"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.766"* %0, %"struct.WTF::KeyValuePair.769"* null)
  %9 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.769"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.769"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.769"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.769"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.769"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.769"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.769"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.769"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.769"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.766"* %0, %"struct.WTF::KeyValuePair.769"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair.769"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair.769"*, i8 } undef, %"struct.WTF::KeyValuePair.769"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.769"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.769"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.769"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.769"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #17
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %53
  tail call void @llvm.trap() #17
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::String"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #17
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.723"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.726"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* null)
  %9 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.726"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.726"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.726"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.726"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.726"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.726"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.726"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.726"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #17
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #17
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.726"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !4
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.726"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } undef, %"struct.WTF::KeyValuePair.726"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.726"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.766"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.769"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.769"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.769"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.769"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.769"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.769"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } undef, %"struct.WTF::KeyValuePair.769"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %77, %"struct.WTF::KeyValuePair.769"* %76, 1
  ret { %"struct.WTF::KeyValuePair.769"*, %"struct.WTF::KeyValuePair.769"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.766"*, %"struct.WTF::KeyValuePair.769"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %18, %15, %2
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.769", %"struct.WTF::KeyValuePair.769"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = bitcast %"struct.WTF::KeyValuePair.769"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  %41 = and i32 %40, 2147483647
  %42 = and i32 %39, -2147483648
  %43 = or i32 %41, %42
  store i32 %43, i32* %38, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, -1
  store i32 %46, i32* %44, align 4
  %47 = mul i32 %46, 6
  %48 = getelementptr inbounds %"class.WTF::HashTable.766", %"class.WTF::HashTable.766"* %0, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp ult i32 %47, %49
  %51 = icmp ugt i32 %49, 8
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %60

53:                                               ; preds = %36
  %54 = lshr i32 %49, 1
  %55 = zext i32 %54 to i64
  %56 = shl nuw nsw i64 %55, 4
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 %56, i1 false) #17
  %58 = bitcast i8* %57 to %"struct.WTF::KeyValuePair.769"*
  %59 = tail call %"struct.WTF::KeyValuePair.769"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.766"* %0, %"struct.WTF::KeyValuePair.769"* %58, i32 %54, %"struct.WTF::KeyValuePair.769"* null) #17
  br label %60

60:                                               ; preds = %53, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18InspectorPageAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::InspectorPageAgent"**
  %5 = load %"class.blink::InspectorPageAgent"*, %"class.blink::InspectorPageAgent"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #17
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #17
  %7 = icmp eq %"class.blink::InspectorPageAgent"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::InspectorPageAgent"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18InspectorPageAgentEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #17
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #17
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18InspectorPageAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 56
  %5 = bitcast i8* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #17
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds i8, i8* %1, i64 168
  %16 = bitcast i8* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %0, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv) #17
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds i8, i8* %1, i64 112
  %27 = bitcast i8* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = inttoptr i64 %28 to %"struct.WTF::KeyValuePair.733"*
  %30 = bitcast i8* %26 to i8**
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %32 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, i64 11
  %34 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8** %30) #17
  %35 = inttoptr i64 %28 to i8*
  %36 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #17
  %37 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.733"**
  store %"struct.WTF::KeyValuePair.733"* %29, %"struct.WTF::KeyValuePair.733"** %37, align 8
  %38 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %38, align 8
  %39 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %40, i64 10
  %42 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* %35, i8** %30, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10LocalFrameEEENS_12KeyValuePairIS5_NS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS8_EENSD_ISB_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESN_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %26) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #17
  %43 = getelementptr inbounds i8, i8* %1, i64 16
  %44 = bitcast i8* %43 to i64*
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %25
  %48 = inttoptr i64 %45 to i8*
  %49 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %48, i8* nonnull %48, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

53:                                               ; preds = %25, %47
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol4Page7Backend26GetResourceContentCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES6_S6_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.WTF::String"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 3
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.WTF::String"*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  %16 = bitcast i8* %15 to %"class.blink::InspectorPageAgent"*
  %17 = and i64 %9, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %9, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)**
  %25 = load void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*, void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %9 to void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %31 = bitcast void (%"class.base::internal::BindStateBase"*)** %30 to %"class.blink::protocol::Page::Backend::GetResourceContentCallback"**
  %32 = load %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"** %31, align 8
  store %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* null, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"** %31, align 8
  tail call void %29(%"class.blink::InspectorPageAgent"* %16, %"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %7, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %32) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES7_NSt3__110unique_ptrINS2_8protocol4Page7Backend26GetResourceContentCallbackENS8_14default_deleteISD_EEEEEJNS2_10PersistentIS3_EES5_S5_SG_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_NS_10unique_ptrINS3_8protocol4Page7Backend26GetResourceContentCallbackENS_14default_deleteISD_EEEEEED2Ev(%"struct.std::__1::__tuple_impl"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15tupleIJN5blink10PersistentINS1_18InspectorPageAgentEEEN3WTF6StringES6_NS_10unique_ptrINS1_8protocol4Page7Backend26GetResourceContentCallbackENS_14default_deleteISB_EEEEEEC2IJS4_RKS6_SI_SE_ELb0ELb0EEEDpOT_(%"class.std::__1::tuple"*, %"class.blink::Persistent.3602"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.3596"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::Persistent.3602"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::tuple"* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  switch i64 %8, label %11 [
    i64 0, label %37
    i64 -1, label %37
  ]

11:                                               ; preds = %5
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #17
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #17
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  %26 = icmp eq %"class.blink::PersistentNode"* %25, null
  br i1 %26, label %27, label %30, !prof !3

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %28) #17
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi %"class.blink::PersistentNode"* [ %29, %27 ], [ %25, %18 ]
  %32 = bitcast %"class.blink::PersistentNode"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  store i64 %33, i64* %34, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %31 to %"class.blink::PersistentBase.3603"**
  store %"class.blink::PersistentBase.3603"* %6, %"class.blink::PersistentBase.3603"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18InspectorPageAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %31, %"class.blink::PersistentNode"** %10, align 8
  br label %37

37:                                               ; preds = %5, %5, %30
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %59, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #17
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %47
  tail call void @llvm.trap() #17
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %57, %42, %37
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #17
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  tail call void @llvm.trap() #17
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %59, %64, %79
  %82 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 3
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.3596", %"class.std::__1::unique_ptr.3596"* %4, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.std::__1::unique_ptr.3596"* %4 to i64*
  %85 = load i64, i64* %84, align 8
  store %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* null, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"** %83, align 8
  %86 = bitcast %"class.std::__1::__tuple_leaf.4178"* %82 to i64*
  store i64 %85, i64* %86, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_NS_10unique_ptrINS3_8protocol4Page7Backend26GetResourceContentCallbackENS_14default_deleteISD_EEEEEED2Ev(%"struct.std::__1::__tuple_impl"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::protocol::Page::Backend::GetResourceContentCallback"*, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"** %2, align 8
  store %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* null, %"class.blink::protocol::Page::Backend::GetResourceContentCallback"** %2, align 8
  %4 = icmp eq %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::protocol::Page::Backend::GetResourceContentCallback"* %3 to void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)***
  %7 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)**, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)** %7, i64 4
  %9 = load void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)*, void (%"class.blink::protocol::Page::Backend::GetResourceContentCallback"*)** %8, align 8
  tail call void %9(%"class.blink::protocol::Page::Backend::GetResourceContentCallback"* nonnull %3) #17
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #17
  br label %27

27:                                               ; preds = %10, %23, %26
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #17
  br label %44

44:                                               ; preds = %27, %40, %43
  %45 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %44
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #17
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !3

53:                                               ; preds = %48
  %54 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #17
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %63 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentNode"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  store %"class.blink::PersistentNode"* %61, %"class.blink::PersistentNode"** %62, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %45, align 8
  br label %67

67:                                               ; preds = %44, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_S8_bbNSt3__110unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES6_S6_S6_bbSH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.std::__1::tuple.4182"*
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.WTF::String"*
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 3
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.WTF::String"*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.WTF::String"*
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 5
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i8*
  %13 = getelementptr inbounds %"class.std::__1::tuple.4182", %"class.std::__1::tuple.4182"* %4, i64 0, i32 0, i32 5, i32 0
  %14 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 6
  %15 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %19
  %23 = bitcast i8* %22 to %"class.blink::InspectorPageAgent"*
  %24 = and i64 %16, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %1
  %27 = bitcast i8* %22 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = add i64 %16, -1
  %30 = getelementptr i8, i8* %28, i64 %29
  %31 = bitcast i8* %30 to void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i1, i1, i64)**
  %32 = load void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i1, i1, i64)*, void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i1, i1, i64)** %31, align 8
  br label %35

33:                                               ; preds = %1
  %34 = inttoptr i64 %16 to void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i1, i1, i64)*
  br label %35

35:                                               ; preds = %26, %33
  %36 = phi void (%"class.blink::InspectorPageAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i1, i1, i64)* [ %32, %26 ], [ %34, %33 ]
  %37 = load i8, i8* %12, align 1, !range !4
  %38 = icmp ne i8 %37, 0
  %39 = load i8, i8* %13, align 1, !range !4
  %40 = icmp ne i8 %39, 0
  %41 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to %"class.blink::protocol::Page::Backend::SearchInResourceCallback"**
  %42 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* null, %"class.blink::protocol::Page::Backend::SearchInResourceCallback"** %41, align 8
  tail call void %36(%"class.blink::InspectorPageAgent"* %23, %"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %10, i1 zeroext %38, i1 zeroext %40, i64 %43) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES7_S7_bbNSt3__110unique_ptrINS2_8protocol4Page7Backend24SearchInResourceCallbackENS8_14default_deleteISD_EEEEEJNS2_10PersistentIS3_EES5_S5_S5_bbSG_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl.4183"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_S8_bbNS_10unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS_14default_deleteISD_EEEEEED2Ev(%"struct.std::__1::__tuple_impl.4183"* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #19
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_S8_bbNS_10unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS_14default_deleteISD_EEEEEED2Ev(%"struct.std::__1::__tuple_impl.4183"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::protocol::Page::Backend::SearchInResourceCallback"*, %"class.blink::protocol::Page::Backend::SearchInResourceCallback"** %2, align 8
  store %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* null, %"class.blink::protocol::Page::Backend::SearchInResourceCallback"** %2, align 8
  %4 = icmp eq %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* %3 to void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)***
  %7 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)**, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)** %7, i64 4
  %9 = load void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)*, void (%"class.blink::protocol::Page::Backend::SearchInResourceCallback"*)** %8, align 8
  tail call void %9(%"class.blink::protocol::Page::Backend::SearchInResourceCallback"* nonnull %3) #17
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #17
  br label %27

27:                                               ; preds = %10, %23, %26
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #17
  br label %44

44:                                               ; preds = %27, %40, %43
  %45 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #17
  br label %61

61:                                               ; preds = %44, %57, %60
  %62 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8
  %64 = icmp eq %"class.blink::PersistentNode"* %63, null
  br i1 %64, label %84, label %65

65:                                               ; preds = %61
  %66 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %67 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %66, i64 0, i32 1
  %68 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %67) #17
  %69 = icmp eq i8* %68, null
  br i1 %69, label %70, label %72, !prof !3

70:                                               ; preds = %65
  %71 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %67, i8* %71) #17
  br label %72

72:                                               ; preds = %70, %65
  %73 = phi i8* [ %71, %70 ], [ %68, %65 ]
  %74 = bitcast i8* %73 to %"class.blink::ThreadState"**
  %75 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %76, align 8
  %78 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8
  %79 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %77, i64 0, i32 0, i32 0
  %80 = bitcast %"class.blink::PersistentRegion"* %77 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.blink::PersistentNode"* %78 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %78, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %83, align 8
  store %"class.blink::PersistentNode"* %78, %"class.blink::PersistentNode"** %79, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %62, align 8
  br label %84

84:                                               ; preds = %61, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEEEJN5blink10PersistentINS3_18InspectorPageAgentEEEN3WTF6StringES8_S8_bbNS_10unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS_14default_deleteISD_EEEEEEC2IJLm0ELm1ELm2ELm3ELm4ELm5ELm6EEJS6_S8_S8_S8_bbSG_EJEJEJS6_RKS8_SK_SK_RKbSM_SG_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSO_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.4183"*, %"class.blink::Persistent.3602"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1), i8* dereferenceable(1), %"class.std::__1::unique_ptr.3604"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %9 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Persistent.3602"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.std::__1::__tuple_impl.4183"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %13, align 8
  switch i64 %11, label %14 [
    i64 0, label %40
    i64 -1, label %40
  ]

14:                                               ; preds = %8
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #17
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #17
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %30, label %33, !prof !3

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %31) #17
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  br label %33

33:                                               ; preds = %30, %21
  %34 = phi %"class.blink::PersistentNode"* [ %32, %30 ], [ %28, %21 ]
  %35 = bitcast %"class.blink::PersistentNode"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.blink::PersistentNode"* %34 to %"class.blink::PersistentBase.3603"**
  store %"class.blink::PersistentBase.3603"* %9, %"class.blink::PersistentBase.3603"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %34, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18InspectorPageAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %39, align 8
  store %"class.blink::PersistentNode"* %34, %"class.blink::PersistentNode"** %13, align 8
  br label %40

40:                                               ; preds = %8, %8, %33
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %43, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %44, label %62, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i33
  %54 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #17
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %50
  tail call void @llvm.trap() #17
  unreachable

60:                                               ; preds = %50
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %51, align 4
  br label %62

62:                                               ; preds = %40, %45, %60
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %65, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #17
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !3

81:                                               ; preds = %72
  tail call void @llvm.trap() #17
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %62, %67, %82
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #17
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  tail call void @llvm.trap() #17
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %84, %89, %104
  %107 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 4, i32 0
  %108 = load i8, i8* %5, align 1, !range !4
  store i8 %108, i8* %107, align 1
  %109 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 5, i32 0
  %110 = load i8, i8* %6, align 1, !range !4
  store i8 %110, i8* %109, align 1
  %111 = getelementptr inbounds %"struct.std::__1::__tuple_impl.4183", %"struct.std::__1::__tuple_impl.4183"* %0, i64 0, i32 6
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.3604", %"class.std::__1::unique_ptr.3604"* %7, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr.3604"* %7 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.blink::protocol::Page::Backend::SearchInResourceCallback"* null, %"class.blink::protocol::Page::Backend::SearchInResourceCallback"** %112, align 8
  %115 = bitcast %"class.std::__1::__tuple_leaf.4187"* %111 to i64*
  store i64 %114, i64* %115, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page29PermissionsPolicyFeatureStateENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3633"*, %"class.std::__1::unique_ptr.3635"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3633", %"class.std::__1::vector.3633"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3635"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3633"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3633"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3633", %"class.std::__1::vector.3633"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3635"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3635"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3635"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3635"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3635"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3635"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3635"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3633", %"class.std::__1::vector.3633"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::unique_ptr.3635"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3635"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::unique_ptr.3635"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3635"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3635"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3635"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3635"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3635"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !86

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3635"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3635"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3635"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3635"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3635"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3635"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3635"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3635"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3635"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3635"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3635"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3635"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3635"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3635"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3635"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3635"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3635"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3635"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3635"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3635"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3635"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3635"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3635"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3635"*, %"class.std::__1::unique_ptr.3635"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3635"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3635"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3635"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3635"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3635"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3635"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3635", %"class.std::__1::unique_ptr.3635"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Page::PermissionsPolicyFeatureState"*, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %142, align 8
  store %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* null, %"class.blink::protocol::Page::PermissionsPolicyFeatureState"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Page::PermissionsPolicyFeatureState"* %143 to void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)***
  %147 = load void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)**, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)*, void (%"class.blink::protocol::Page::PermissionsPolicyFeatureState"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Page::PermissionsPolicyFeatureState"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3635"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorISK_SO_SP_EEPS3_EEbRKT0_(%"class.WTF::HashTable.731"*, %"class.blink::LocalFrame"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.733"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LocalFrame"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LocalFrame"*
  %38 = icmp eq %"class.blink::LocalFrame"* %36, %37
  br i1 %38, label %68, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %59, %39
  %54 = phi i64 [ %33, %39 ], [ %63, %59 ]
  %55 = phi i64 [ 0, %39 ], [ %61, %59 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %4, i64 %54, i32 0, i32 0, i32 0
  %57 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %56, align 8
  %58 = icmp eq %"class.blink::LocalFrame"* %57, null
  br i1 %58, label %68, label %59

59:                                               ; preds = %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %52, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %65, align 8
  %67 = icmp eq %"class.blink::LocalFrame"* %66, %37
  br i1 %67, label %68, label %53

68:                                               ; preds = %53, %59, %2, %6
  %69 = phi %"struct.WTF::KeyValuePair.733"* [ null, %2 ], [ %34, %6 ], [ null, %53 ], [ %64, %59 ]
  %70 = icmp ne %"struct.WTF::KeyValuePair.733"* %69, null
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.733"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISO_SK_SP_EERPS3_SG_EENS_18HashTableAddResultISQ_SH_EEOT0_OT1_(%"class.WTF::HashTable.731"*, %"class.blink::LocalFrame"** dereferenceable(8), %"class.WTF::HashMap.735"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::HashMap.735", align 8
  %5 = alloca %"struct.WTF::KeyValuePair.733", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.733"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6ExpandEPSH_(%"class.WTF::HashTable.731"* %0, %"struct.WTF::KeyValuePair.733"* null)
  %11 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.733"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.blink::LocalFrame"** %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = shl i64 %19, 32
  %21 = xor i64 %20, -1
  %22 = add i64 %19, %21
  %23 = lshr i64 %22, 22
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 13
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 8
  %29 = xor i64 %28, %27
  %30 = mul i64 %29, 9
  %31 = lshr i64 %30, 15
  %32 = xor i64 %31, %30
  %33 = shl i64 %32, 27
  %34 = xor i64 %33, -1
  %35 = add i64 %32, %34
  %36 = lshr i64 %35, 31
  %37 = xor i64 %36, %35
  %38 = trunc i64 %37 to i32
  %39 = and i32 %16, %38
  %40 = zext i32 %39 to i64
  %41 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %42 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %41, i64 0, i32 1
  %43 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %42) #17
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %47, !prof !3

45:                                               ; preds = %12
  %46 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %42, i8* %46) #17
  br label %47

47:                                               ; preds = %12, %45
  %48 = phi i8* [ %46, %45 ], [ %43, %12 ]
  %49 = bitcast i8* %48 to %"class.blink::ThreadState"**
  %50 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %50, i64 0, i32 16
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 1
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %13, i64 %40
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %55, align 8
  %57 = icmp eq %"class.blink::LocalFrame"* %56, null
  br i1 %57, label %116, label %58

58:                                               ; preds = %47
  %59 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %1, align 8
  %60 = xor i32 %38, -1
  %61 = lshr i32 %38, 23
  %62 = add i32 %61, %60
  %63 = shl i32 %62, 12
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 7
  %66 = xor i32 %65, %64
  %67 = shl i32 %66, 2
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 20
  %70 = xor i32 %69, %68
  %71 = or i32 %70, 1
  %72 = zext i32 %71 to i64
  br label %73

73:                                               ; preds = %58, %80
  %74 = phi %"class.blink::LocalFrame"* [ %56, %58 ], [ %90, %80 ]
  %75 = phi %"struct.WTF::KeyValuePair.733"* [ %54, %58 ], [ %88, %80 ]
  %76 = phi %"struct.WTF::KeyValuePair.733"* [ null, %58 ], [ %83, %80 ]
  %77 = phi i64 [ %40, %58 ], [ %87, %80 ]
  %78 = phi i64 [ 0, %58 ], [ %85, %80 ]
  %79 = icmp eq %"class.blink::LocalFrame"* %74, %59
  br i1 %79, label %229, label %80

80:                                               ; preds = %73
  %81 = icmp eq %"class.blink::LocalFrame"* %74, inttoptr (i64 -1 to %"class.blink::LocalFrame"*)
  %82 = select i1 %53, %"struct.WTF::KeyValuePair.733"* %76, %"struct.WTF::KeyValuePair.733"* %75
  %83 = select i1 %81, %"struct.WTF::KeyValuePair.733"* %82, %"struct.WTF::KeyValuePair.733"* %76
  %84 = icmp eq i64 %78, 0
  %85 = select i1 %84, i64 %72, i64 %78
  %86 = add i64 %85, %77
  %87 = and i64 %86, %17
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %13, i64 %87
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %89, align 8
  %91 = icmp eq %"class.blink::LocalFrame"* %90, null
  br i1 %91, label %92, label %73

92:                                               ; preds = %80
  %93 = icmp eq %"struct.WTF::KeyValuePair.733"* %83, null
  br i1 %93, label %116, label %94

94:                                               ; preds = %92
  %95 = bitcast %"struct.WTF::KeyValuePair.733"* %83 to i8*
  %96 = bitcast %"struct.WTF::KeyValuePair.733"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #17
  %97 = bitcast %"class.WTF::HashMap.735"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #17, !noalias !87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 0, i32 1, i32 0, i32 1
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 0, i32 1, i32 0, i32 2
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 0, i32 1, i32 0, i32 3
  %102 = bitcast %"class.WTF::HashMap.735"* %4 to i64*
  %103 = bitcast %"class.WTF::HashMap.735"* %98 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 0, i64 16, i1 false) #17, !alias.scope !87
  store atomic i64 0, i64* %102 monotonic, align 8, !noalias !87
  store atomic i64 0, i64* %103 monotonic, align 8, !alias.scope !87
  %104 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %99, align 8, !alias.scope !87
  store i32 0, i32* %104, align 8, !noalias !87
  %105 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %4, i64 0, i32 0, i32 2
  store i32 0, i32* %100, align 4, !alias.scope !87
  store i32 0, i32* %105, align 4, !noalias !87
  %106 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %4, i64 0, i32 0, i32 3
  store i32 0, i32* %101, align 8, !alias.scope !87
  store i32 0, i32* %106, align 8, !noalias !87
  %107 = bitcast %"class.WTF::HashMap.735"* %4 to %"class.WTF::ConditionalDestructor.737"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* nonnull %107) #17, !noalias !87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #17, !noalias !87
  %108 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSH_EEEPSH_PvDpOT_(i8* nonnull %95, %"struct.WTF::KeyValuePair.733"* nonnull dereferenceable(32) %5) #17
  %109 = bitcast %"class.WTF::HashMap.735"* %98 to %"class.WTF::ConditionalDestructor.737"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %109) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #17
  %110 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 2147483647
  %113 = and i32 %112, 2147483647
  %114 = and i32 %111, -2147483648
  %115 = or i32 %113, %114
  store i32 %115, i32* %110, align 8
  br label %116

116:                                              ; preds = %47, %92, %94
  %117 = phi %"struct.WTF::KeyValuePair.733"* [ %83, %94 ], [ %88, %92 ], [ %54, %47 ]
  %118 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %1, align 8
  %119 = ptrtoint %"class.blink::LocalFrame"* %118 to i64
  %120 = bitcast %"struct.WTF::KeyValuePair.733"* %117 to i64*
  store atomic i64 %119, i64* %120 monotonic, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %116
  %124 = bitcast %"class.blink::LocalFrame"* %118 to i8*
  %125 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %124) #17
  br label %126

126:                                              ; preds = %116, %123
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %117, i64 0, i32 1
  %128 = bitcast %"class.WTF::HashMap.735"* %2 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.WTF::HashMap.735"* %127 to i64*
  %131 = load i64, i64* %130, align 8
  store atomic i64 %131, i64* %128 monotonic, align 8
  store atomic i64 %129, i64* %130 monotonic, align 8
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %117, i64 0, i32 1, i32 0, i32 1
  %133 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %2, i64 0, i32 0, i32 1
  %134 = load i32, i32* %132, align 4
  %135 = load i32, i32* %133, align 4
  store i32 %135, i32* %132, align 4
  store i32 %134, i32* %133, align 4
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %117, i64 0, i32 1, i32 0, i32 2
  %137 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %2, i64 0, i32 0, i32 2
  %138 = load i32, i32* %136, align 4
  %139 = load i32, i32* %137, align 4
  store i32 %139, i32* %136, align 4
  store i32 %138, i32* %137, align 4
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %117, i64 0, i32 1, i32 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, 2147483647
  %143 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %2, i64 0, i32 0, i32 3
  %144 = load i32, i32* %143, align 8
  %145 = and i32 %144, 2147483647
  %146 = and i32 %141, -2147483648
  %147 = or i32 %145, %146
  store i32 %147, i32* %140, align 8
  %148 = load i32, i32* %143, align 8
  %149 = and i32 %148, -2147483648
  %150 = or i32 %149, %142
  store i32 %150, i32* %143, align 8
  %151 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %186, label %153

153:                                              ; preds = %126
  %154 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %155 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %154, i64 0, i32 1
  %156 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %155) #17
  %157 = icmp eq i8* %156, null
  br i1 %157, label %158, label %160, !prof !3

158:                                              ; preds = %153
  %159 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %155, i8* %159) #17
  br label %160

160:                                              ; preds = %158, %153
  %161 = phi i8* [ %159, %158 ], [ %156, %153 ]
  %162 = bitcast i8* %161 to %"class.blink::ThreadState"**
  %163 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %163, i64 0, i32 9
  %165 = load i8, i8* %164, align 1, !range !4
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %186, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %163, i64 0, i32 13
  %169 = load i64, i64* %168, align 8
  %170 = add i64 %169, 1
  store i64 %170, i64* %168, align 8
  %171 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %163, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %172 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %171, align 8
  %173 = load atomic i64, i64* %120 monotonic, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %183, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %172, i64 0, i32 0, i32 0
  %177 = inttoptr i64 %173 to i8*
  %178 = bitcast %"class.blink::MarkingVisitor"* %172 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %179 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, i64 5
  %181 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %180, align 8
  call void %181(%"class.blink::Visitor"* %176, i8* nonnull %177, i8* %177, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #17
  %182 = load i64, i64* %168, align 8
  br label %183

183:                                              ; preds = %175, %167
  %184 = phi i64 [ %170, %167 ], [ %182, %175 ]
  %185 = add i64 %184, -1
  store i64 %185, i64* %168, align 8
  br label %186

186:                                              ; preds = %126, %160, %183
  %187 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = add i32 %188, 1
  store i32 %189, i32* %187, align 4
  %190 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 3
  %191 = load i32, i32* %190, align 8
  %192 = add i32 %191, %189
  %193 = shl i32 %192, 1
  %194 = load i32, i32* %14, align 8
  %195 = icmp ult i32 %193, %194
  br i1 %195, label %198, label %196

196:                                              ; preds = %186
  %197 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6ExpandEPSH_(%"class.WTF::HashTable.731"* %0, %"struct.WTF::KeyValuePair.733"* %117)
  br label %229

198:                                              ; preds = %186
  %199 = mul i32 %189, 6
  %200 = icmp ult i32 %199, %194
  %201 = icmp ugt i32 %194, 8
  %202 = and i1 %200, %201
  br i1 %202, label %203, label %229

203:                                              ; preds = %198
  %204 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %205 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %204, i64 0, i32 1
  %206 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %205) #17
  %207 = icmp eq i8* %206, null
  br i1 %207, label %208, label %210, !prof !3

208:                                              ; preds = %203
  %209 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %205, i8* %209) #17
  br label %210

210:                                              ; preds = %208, %203
  %211 = phi i8* [ %209, %208 ], [ %206, %203 ]
  %212 = bitcast i8* %211 to %"class.blink::ThreadState"**
  %213 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %213, i64 0, i32 6
  %215 = load i8, i8* %214, align 8, !range !4
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %210
  %218 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %213, i64 0, i32 16
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %229, label %221

221:                                              ; preds = %210, %217
  %222 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %213, i64 0, i32 13
  %223 = load i64, i64* %222, align 8
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %229

225:                                              ; preds = %221
  %226 = load i32, i32* %14, align 8
  %227 = lshr i32 %226, 1
  %228 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6RehashEjPSH_(%"class.WTF::HashTable.731"* %0, i32 %227, %"struct.WTF::KeyValuePair.733"* %117)
  br label %229

229:                                              ; preds = %73, %217, %198, %196, %225, %221
  %230 = phi i8 [ 1, %221 ], [ 1, %225 ], [ 1, %196 ], [ 1, %198 ], [ 1, %217 ], [ 0, %73 ]
  %231 = phi %"struct.WTF::KeyValuePair.733"* [ %117, %221 ], [ %228, %225 ], [ %197, %196 ], [ %117, %198 ], [ %117, %217 ], [ %75, %73 ]
  %232 = insertvalue { %"struct.WTF::KeyValuePair.733"*, i8 } undef, %"struct.WTF::KeyValuePair.733"* %231, 0
  %233 = insertvalue { %"struct.WTF::KeyValuePair.733"*, i8 } %232, i8 %230, 1
  ret { %"struct.WTF::KeyValuePair.733"*, i8 } %233
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6ExpandEPSH_(%"class.WTF::HashTable.731"*, %"struct.WTF::KeyValuePair.733"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6RehashEjPSH_(%"class.WTF::HashTable.731"* %0, i32 %32, %"struct.WTF::KeyValuePair.733"* %1)
  ret %"struct.WTF::KeyValuePair.733"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE6RehashEjPSH_(%"class.WTF::HashTable.731"*, i32, %"struct.WTF::KeyValuePair.733"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::HashMap.735", align 8
  %5 = alloca %"struct.WTF::KeyValuePair.733", align 8
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, %1
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #17
  store i8 -86, i8* %6, align 1
  %11 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE12ExpandBufferEjPSH_Rb(%"class.WTF::HashTable.731"* %0, i32 %1, %"struct.WTF::KeyValuePair.733"* %2, i8* nonnull dereferenceable(1) %6)
  %12 = load i8, i8* %6, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #17
  br i1 %13, label %14, label %49

14:                                               ; preds = %10
  %15 = zext i32 %1 to i64
  %16 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE4CallEm(i64 %15) #17
  %17 = bitcast %"class.blink::HeapHashTableBacking"* %16 to %"struct.WTF::KeyValuePair.733"*
  br label %23

18:                                               ; preds = %3
  %19 = zext i32 %1 to i64
  %20 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE4CallEm(i64 %19) #17
  %21 = bitcast %"class.blink::HeapHashTableBacking"* %20 to %"struct.WTF::KeyValuePair.733"*
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %46, label %23

23:                                               ; preds = %14, %18
  %24 = phi %"struct.WTF::KeyValuePair.733"* [ %17, %14 ], [ %21, %18 ]
  %25 = phi i64 [ %15, %14 ], [ %19, %18 ]
  %26 = bitcast %"struct.WTF::KeyValuePair.733"* %5 to i8*
  %27 = bitcast %"class.WTF::HashMap.735"* %4 to i8*
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 0, i32 1, i32 0, i32 1
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 0, i32 1, i32 0, i32 2
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 0, i32 1, i32 0, i32 3
  %32 = bitcast %"class.WTF::HashMap.735"* %4 to i64*
  %33 = bitcast %"class.WTF::HashMap.735"* %28 to i64*
  %34 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %4, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %4, i64 0, i32 0, i32 2
  %36 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %4, i64 0, i32 0, i32 3
  %37 = bitcast %"class.WTF::HashMap.735"* %4 to %"class.WTF::ConditionalDestructor.737"*
  %38 = bitcast %"class.WTF::HashMap.735"* %28 to %"class.WTF::ConditionalDestructor.737"*
  br label %39

39:                                               ; preds = %39, %23
  %40 = phi i64 [ 0, %23 ], [ %44, %39 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %24, i64 %40
  %42 = bitcast %"struct.WTF::KeyValuePair.733"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17, !noalias !90
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #17, !alias.scope !90
  store atomic i64 0, i64* %32 monotonic, align 8, !noalias !90
  store atomic i64 0, i64* %33 monotonic, align 8, !alias.scope !90
  store i32 0, i32* %29, align 8, !alias.scope !90
  store i32 0, i32* %34, align 8, !noalias !90
  store i32 0, i32* %30, align 4, !alias.scope !90
  store i32 0, i32* %35, align 4, !noalias !90
  store i32 0, i32* %31, align 8, !alias.scope !90
  store i32 0, i32* %36, align 8, !noalias !90
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* nonnull %37) #17, !noalias !90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17, !noalias !90
  %43 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSH_EEEPSH_PvDpOT_(i8* %42, %"struct.WTF::KeyValuePair.733"* nonnull dereferenceable(32) %5) #17
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %38) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #17
  %44 = add nuw nsw i64 %40, 1
  %45 = icmp eq i64 %44, %25
  br i1 %45, label %46, label %39

46:                                               ; preds = %39, %18
  %47 = phi %"struct.WTF::KeyValuePair.733"* [ %21, %18 ], [ %24, %39 ]
  %48 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE8RehashToEPSH_jSR_(%"class.WTF::HashTable.731"* %0, %"struct.WTF::KeyValuePair.733"* %47, i32 %1, %"struct.WTF::KeyValuePair.733"* %2)
  br label %49

49:                                               ; preds = %10, %46
  %50 = phi %"struct.WTF::KeyValuePair.733"* [ %48, %46 ], [ %11, %10 ]
  ret %"struct.WTF::KeyValuePair.733"* %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.733"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSH_EEEPSH_PvDpOT_(i8*, %"struct.WTF::KeyValuePair.733"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.733"*
  %4 = bitcast %"struct.WTF::KeyValuePair.733"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %1, i64 0, i32 1
  %9 = getelementptr inbounds i8, i8* %0, i64 16
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %0, i64 20
  %12 = bitcast i8* %11 to i32*
  %13 = getelementptr inbounds i8, i8* %0, i64 24
  %14 = bitcast i8* %13 to i32*
  %15 = bitcast %"class.WTF::HashMap.735"* %8 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #17
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8* %7 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %1, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %10, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %10, align 4
  store i32 %19, i32* %18, align 4
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %1, i64 0, i32 1, i32 0, i32 2
  %22 = load i32, i32* %12, align 4
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %12, align 4
  store i32 %22, i32* %21, align 4
  %24 = load i32, i32* %14, align 8
  %25 = and i32 %24, 2147483647
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %1, i64 0, i32 1, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 2147483647
  %29 = and i32 %24, -2147483648
  %30 = or i32 %28, %29
  store i32 %30, i32* %14, align 8
  %31 = load i32, i32* %26, align 8
  %32 = and i32 %31, -2147483648
  %33 = or i32 %32, %25
  store i32 %33, i32* %26, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %69, label %36

36:                                               ; preds = %2
  %37 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %38 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %37, i64 0, i32 1
  %39 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %38) #17
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43, !prof !3

41:                                               ; preds = %36
  %42 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %38, i8* %42) #17
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i8* [ %42, %41 ], [ %39, %36 ]
  %45 = bitcast i8* %44 to %"class.blink::ThreadState"**
  %46 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %46, i64 0, i32 9
  %48 = load i8, i8* %47, align 1, !range !4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %69, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %46, i64 0, i32 13
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %51, align 8
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %46, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %54, align 8
  %56 = load atomic i64, i64* %6 monotonic, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %55, i64 0, i32 0, i32 0
  %60 = inttoptr i64 %56 to i8*
  %61 = bitcast %"class.blink::MarkingVisitor"* %55 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %59, i8* nonnull %60, i8* %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #17
  %65 = load i64, i64* %51, align 8
  br label %66

66:                                               ; preds = %58, %50
  %67 = phi i64 [ %53, %50 ], [ %65, %58 ]
  %68 = add i64 %67, -1
  store i64 %68, i64* %51, align 8
  br label %69

69:                                               ; preds = %2, %43, %66
  ret %"struct.WTF::KeyValuePair.733"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalFrame"*
  tail call void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE12ExpandBufferEjPSH_Rb(%"class.WTF::HashTable.731"*, i32, %"struct.WTF::KeyValuePair.733"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashMap.735", align 8
  %6 = alloca %"struct.WTF::KeyValuePair.733", align 8
  %7 = alloca %"class.WTF::HashMap.735", align 8
  %8 = alloca %"struct.WTF::KeyValuePair.733", align 8
  %9 = alloca %"class.WTF::HashMap.735", align 8
  %10 = alloca %"struct.WTF::KeyValuePair.733", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #17
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %4
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #17
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi i8* [ %17, %16 ], [ %14, %4 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 6
  %23 = load i8, i8* %22, align 8, !range !4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 16
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %33, label %29

29:                                               ; preds = %18, %25
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 13
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %25, %29
  %34 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #17
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #17
  br label %36

36:                                               ; preds = %29, %33
  %37 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 0
  %38 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %37, align 8
  %39 = icmp eq %"struct.WTF::KeyValuePair.733"* %38, null
  br i1 %39, label %142, label %40

40:                                               ; preds = %36
  %41 = zext i32 %1 to i64
  %42 = shl nuw nsw i64 %41, 5
  %43 = bitcast %"struct.WTF::KeyValuePair.733"* %38 to i8*
  %44 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %43, i64 %42) #17
  br i1 %44, label %45, label %142

45:                                               ; preds = %40
  store i8 1, i8* %3, align 1
  %46 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %37, align 8
  %49 = zext i32 %47 to i64
  %50 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE4CallEm(i64 %49) #17
  %51 = bitcast %"class.blink::HeapHashTableBacking"* %50 to %"struct.WTF::KeyValuePair.733"*
  %52 = icmp eq i32 %47, 0
  br i1 %52, label %89, label %53

53:                                               ; preds = %45
  %54 = bitcast %"struct.WTF::KeyValuePair.733"* %10 to i8*
  %55 = bitcast %"class.WTF::HashMap.735"* %9 to i8*
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %10, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %10, i64 0, i32 1, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %10, i64 0, i32 1, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %10, i64 0, i32 1, i32 0, i32 3
  %60 = bitcast %"class.WTF::HashMap.735"* %9 to i64*
  %61 = bitcast %"class.WTF::HashMap.735"* %56 to i64*
  %62 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %9, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %9, i64 0, i32 0, i32 2
  %64 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %9, i64 0, i32 0, i32 3
  %65 = bitcast %"class.WTF::HashMap.735"* %9 to %"class.WTF::ConditionalDestructor.737"*
  %66 = bitcast %"class.WTF::HashMap.735"* %56 to %"class.WTF::ConditionalDestructor.737"*
  br label %67

67:                                               ; preds = %67, %53
  %68 = phi i64 [ 0, %53 ], [ %72, %67 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %51, i64 %68
  %70 = bitcast %"struct.WTF::KeyValuePair.733"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #17, !noalias !93
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 16, i1 false) #17, !alias.scope !93
  store atomic i64 0, i64* %60 monotonic, align 8, !noalias !93
  store atomic i64 0, i64* %61 monotonic, align 8, !alias.scope !93
  store i32 0, i32* %57, align 8, !alias.scope !93
  store i32 0, i32* %62, align 8, !noalias !93
  store i32 0, i32* %58, align 4, !alias.scope !93
  store i32 0, i32* %63, align 4, !noalias !93
  store i32 0, i32* %59, align 8, !alias.scope !93
  store i32 0, i32* %64, align 8, !noalias !93
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* nonnull %65) #17, !noalias !93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #17, !noalias !93
  %71 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSH_EEEPSH_PvDpOT_(i8* %70, %"struct.WTF::KeyValuePair.733"* nonnull dereferenceable(32) %10) #17
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %66) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #17
  %72 = add nuw nsw i64 %68, 1
  %73 = icmp eq i64 %72, %49
  br i1 %73, label %74, label %67

74:                                               ; preds = %67
  br i1 %52, label %89, label %75

75:                                               ; preds = %74
  %76 = bitcast %"struct.WTF::KeyValuePair.733"* %8 to i8*
  %77 = bitcast %"class.WTF::HashMap.735"* %7 to i8*
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %8, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %8, i64 0, i32 1, i32 0, i32 1
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %8, i64 0, i32 1, i32 0, i32 2
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %8, i64 0, i32 1, i32 0, i32 3
  %82 = bitcast %"class.WTF::HashMap.735"* %7 to i64*
  %83 = bitcast %"class.WTF::HashMap.735"* %78 to i64*
  %84 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %7, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %7, i64 0, i32 0, i32 2
  %86 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %7, i64 0, i32 0, i32 3
  %87 = bitcast %"class.WTF::HashMap.735"* %7 to %"class.WTF::ConditionalDestructor.737"*
  %88 = bitcast %"class.WTF::HashMap.735"* %78 to %"class.WTF::ConditionalDestructor.737"*
  br label %113

89:                                               ; preds = %130, %45, %74
  %90 = phi %"struct.WTF::KeyValuePair.733"* [ null, %74 ], [ null, %45 ], [ %120, %130 ]
  %91 = bitcast %"class.WTF::HashTable.731"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %50, %"class.blink::HeapHashTableBacking"** %91, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %50, i64 0, i32 0
  %96 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #17
  br label %97

97:                                               ; preds = %89, %94
  %98 = icmp eq i32 %1, 0
  br i1 %98, label %133, label %99

99:                                               ; preds = %97
  %100 = bitcast %"struct.WTF::KeyValuePair.733"* %6 to i8*
  %101 = bitcast %"class.WTF::HashMap.735"* %5 to i8*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %6, i64 0, i32 1
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %6, i64 0, i32 1, i32 0, i32 1
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %6, i64 0, i32 1, i32 0, i32 2
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %6, i64 0, i32 1, i32 0, i32 3
  %106 = bitcast %"class.WTF::HashMap.735"* %5 to i64*
  %107 = bitcast %"class.WTF::HashMap.735"* %102 to i64*
  %108 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %5, i64 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %5, i64 0, i32 0, i32 2
  %110 = getelementptr inbounds %"class.WTF::HashMap.735", %"class.WTF::HashMap.735"* %5, i64 0, i32 0, i32 3
  %111 = bitcast %"class.WTF::HashMap.735"* %5 to %"class.WTF::ConditionalDestructor.737"*
  %112 = bitcast %"class.WTF::HashMap.735"* %102 to %"class.WTF::ConditionalDestructor.737"*
  br label %135

113:                                              ; preds = %130, %75
  %114 = phi i64 [ 0, %75 ], [ %131, %130 ]
  %115 = phi %"struct.WTF::KeyValuePair.733"* [ null, %75 ], [ %120, %130 ]
  %116 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %37, align 8
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %116, i64 %114
  %118 = icmp eq %"struct.WTF::KeyValuePair.733"* %117, %2
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %51, i64 %114
  %120 = select i1 %118, %"struct.WTF::KeyValuePair.733"* %119, %"struct.WTF::KeyValuePair.733"* %115
  %121 = bitcast %"struct.WTF::KeyValuePair.733"* %117 to i64*
  %122 = load i64, i64* %121, align 8
  switch i64 %122, label %126 [
    i64 -1, label %123
    i64 0, label %123
  ]

123:                                              ; preds = %113, %113
  %124 = bitcast %"struct.WTF::KeyValuePair.733"* %119 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #17, !noalias !96
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #17, !alias.scope !96
  store atomic i64 0, i64* %82 monotonic, align 8, !noalias !96
  store atomic i64 0, i64* %83 monotonic, align 8, !alias.scope !96
  store i32 0, i32* %79, align 8, !alias.scope !96
  store i32 0, i32* %84, align 8, !noalias !96
  store i32 0, i32* %80, align 4, !alias.scope !96
  store i32 0, i32* %85, align 4, !noalias !96
  store i32 0, i32* %81, align 8, !alias.scope !96
  store i32 0, i32* %86, align 8, !noalias !96
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* nonnull %87) #17, !noalias !96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #17, !noalias !96
  %125 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSH_EEEPSH_PvDpOT_(i8* %124, %"struct.WTF::KeyValuePair.733"* nonnull dereferenceable(32) %8) #17
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %88) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #17
  br label %130

126:                                              ; preds = %113
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEELb1EE4MoveEOSH_RSH_(%"struct.WTF::KeyValuePair.733"* dereferenceable(32) %117, %"struct.WTF::KeyValuePair.733"* dereferenceable(32) %119)
  %127 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %37, align 8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %127, i64 %114, i32 1
  %129 = bitcast %"class.WTF::HashMap.735"* %128 to %"class.WTF::ConditionalDestructor.737"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %129) #17
  br label %130

130:                                              ; preds = %123, %126
  %131 = add nuw nsw i64 %114, 1
  %132 = icmp eq i64 %131, %49
  br i1 %132, label %89, label %113

133:                                              ; preds = %135, %97
  %134 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE8RehashToEPSH_jSR_(%"class.WTF::HashTable.731"* %0, %"struct.WTF::KeyValuePair.733"* %48, i32 %1, %"struct.WTF::KeyValuePair.733"* %90)
  br label %142

135:                                              ; preds = %135, %99
  %136 = phi i64 [ 0, %99 ], [ %140, %135 ]
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %48, i64 %136
  %138 = bitcast %"struct.WTF::KeyValuePair.733"* %137 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #17, !noalias !99
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 16, i1 false) #17, !alias.scope !99
  store atomic i64 0, i64* %106 monotonic, align 8, !noalias !99
  store atomic i64 0, i64* %107 monotonic, align 8, !alias.scope !99
  store i32 0, i32* %103, align 8, !alias.scope !99
  store i32 0, i32* %108, align 8, !noalias !99
  store i32 0, i32* %104, align 4, !alias.scope !99
  store i32 0, i32* %109, align 4, !noalias !99
  store i32 0, i32* %105, align 8, !alias.scope !99
  store i32 0, i32* %110, align 8, !noalias !99
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* nonnull %111) #17, !noalias !99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #17, !noalias !99
  %139 = call %"struct.WTF::KeyValuePair.733"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSH_EEEPSH_PvDpOT_(i8* %138, %"struct.WTF::KeyValuePair.733"* nonnull dereferenceable(32) %6) #17
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %112) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #17
  %140 = add nuw nsw i64 %136, 1
  %141 = icmp eq i64 %140, %41
  br i1 %141, label %133, label %135

142:                                              ; preds = %40, %36, %133
  %143 = phi %"struct.WTF::KeyValuePair.733"* [ %134, %133 ], [ null, %36 ], [ null, %40 ]
  ret %"struct.WTF::KeyValuePair.733"* %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.733"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE8RehashToEPSH_jSR_(%"class.WTF::HashTable.731"*, %"struct.WTF::KeyValuePair.733"*, i32, %"struct.WTF::KeyValuePair.733"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.731", align 8
  %6 = bitcast %"class.WTF::HashTable.731"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.731"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.733"* %1, %"struct.WTF::KeyValuePair.733"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.733"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.733"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %19, align 8
  br label %79

21:                                               ; preds = %97
  %22 = bitcast %"class.WTF::HashTable.731"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %98, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.733"* [ null, %15 ], [ %100, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.731"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #17
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.731"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.731"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #17
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.733"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %75, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %73, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %70, %54
  %57 = phi i64 [ 0, %54 ], [ %71, %70 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %50, i64 %57
  %59 = bitcast %"struct.WTF::KeyValuePair.733"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %61 [
    i64 -1, label %70
    i64 0, label %70
  ]

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %50, i64 %57, i32 1
  %63 = bitcast %"class.WTF::HashMap.735"* %62 to %"class.WTF::ConditionalDestructor.737"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %63) #17
  store atomic i64 -1, i64* %59 monotonic, align 8
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #17
  br label %68

68:                                               ; preds = %66, %61
  %69 = bitcast %"class.WTF::HashMap.735"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 0, i64 24, i1 false) #17
  br label %70

70:                                               ; preds = %68, %56, %56
  %71 = add nuw nsw i64 %57, 1
  %72 = icmp eq i64 %71, %55
  br i1 %72, label %73, label %56

73:                                               ; preds = %70, %52
  %74 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %74) #17
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %75

75:                                               ; preds = %49, %73
  %76 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, -2147483648
  store i32 %78, i32* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.733"* %29

79:                                               ; preds = %18, %97
  %80 = phi i32 [ %13, %18 ], [ %98, %97 ]
  %81 = phi %"struct.WTF::KeyValuePair.733"* [ %20, %18 ], [ %99, %97 ]
  %82 = phi %"struct.WTF::KeyValuePair.733"* [ null, %18 ], [ %100, %97 ]
  %83 = phi i32 [ 0, %18 ], [ %101, %97 ]
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %81, i64 %84
  %86 = bitcast %"struct.WTF::KeyValuePair.733"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  switch i64 %87, label %88 [
    i64 -1, label %97
    i64 0, label %97
  ]

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %85, i64 0, i32 0
  %90 = call { %"struct.WTF::KeyValuePair.733"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.731"* nonnull %5, %"class.blink::WeakMember.734"* dereferenceable(8) %89) #17
  %91 = extractvalue { %"struct.WTF::KeyValuePair.733"*, i8 } %90, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEELb1EE4MoveEOSH_RSH_(%"struct.WTF::KeyValuePair.733"* dereferenceable(32) %85, %"struct.WTF::KeyValuePair.733"* dereferenceable(32) %91) #17
  %92 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %19, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %92, i64 %84
  %94 = icmp eq %"struct.WTF::KeyValuePair.733"* %93, %3
  %95 = select i1 %94, %"struct.WTF::KeyValuePair.733"* %91, %"struct.WTF::KeyValuePair.733"* %82
  %96 = load i32, i32* %12, align 8
  br label %97

97:                                               ; preds = %79, %79, %88
  %98 = phi i32 [ %80, %79 ], [ %96, %88 ], [ %80, %79 ]
  %99 = phi %"struct.WTF::KeyValuePair.733"* [ %81, %79 ], [ %92, %88 ], [ %81, %79 ]
  %100 = phi %"struct.WTF::KeyValuePair.733"* [ %82, %79 ], [ %95, %88 ], [ %82, %79 ]
  %101 = add i32 %83, 1
  %102 = icmp eq i32 %101, %98
  br i1 %102, label %21, label %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10WeakMemberINS2_10LocalFrameEEENS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS2_13HeapAllocatorENS_18HashMapValueTraitsINSC_IS5_EENSC_ISG_EEEELb1EE4MoveEOSH_RSH_(%"struct.WTF::KeyValuePair.733"* dereferenceable(32), %"struct.WTF::KeyValuePair.733"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #17
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !3

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #17
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %1, i64 0, i32 1
  %17 = bitcast %"class.WTF::HashMap.735"* %16 to %"class.WTF::ConditionalDestructor.737"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %17) #17
  %18 = bitcast %"struct.WTF::KeyValuePair.733"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.WTF::KeyValuePair.733"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %1, i64 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %1, i64 0, i32 1, i32 0, i32 2
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %1, i64 0, i32 1, i32 0, i32 3
  %25 = bitcast %"class.WTF::HashMap.735"* %21 to i64*
  %26 = bitcast %"class.WTF::HashMap.735"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #17
  %27 = load i64, i64* %25, align 8
  %28 = bitcast %"class.WTF::HashMap.735"* %16 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %0, i64 0, i32 1, i32 0, i32 1
  %30 = load i32, i32* %22, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %22, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %0, i64 0, i32 1, i32 0, i32 2
  %33 = load i32, i32* %23, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %23, align 4
  store i32 %33, i32* %32, align 4
  %35 = load i32, i32* %24, align 8
  %36 = and i32 %35, 2147483647
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %0, i64 0, i32 1, i32 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 2147483647
  %40 = and i32 %35, -2147483648
  %41 = or i32 %39, %40
  store i32 %41, i32* %24, align 8
  %42 = load i32, i32* %37, align 8
  %43 = and i32 %42, -2147483648
  %44 = or i32 %43, %36
  store i32 %44, i32* %37, align 8
  %45 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %46 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %45, i64 0, i32 1
  %47 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %46) #17
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %51, !prof !3

49:                                               ; preds = %9
  %50 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %46, i8* %50) #17
  br label %51

51:                                               ; preds = %9, %49
  %52 = phi i8* [ %50, %49 ], [ %47, %9 ]
  %53 = bitcast i8* %52 to %"class.blink::ThreadState"**
  %54 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %54, i64 0, i32 14
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, -1
  store i64 %57, i64* %55, align 8
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.53, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 5
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS1_12KeyValuePairIS5_NS1_7HashMapINS1_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS1_10StringHashENS1_10HashTraitsIS8_EENSD_ISB_EENS1_18PartitionAllocatorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESN_NS_13HeapAllocatorEEEE14AllocateObjectISS_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS1_12KeyValuePairIS5_NS1_7HashMapINS1_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS1_10StringHashENS1_10HashTraitsIS8_EENSD_ISB_EENS1_18PartitionAllocatorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESN_NS_13HeapAllocatorEEEE14AllocateObjectISS_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([823 x i8], [823 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS6_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.733"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 5
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.733"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS3_12KeyValuePairIS7_NS3_7HashMapINS3_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS3_10StringHashENS3_10HashTraitsISA_EENSF_ISD_EENS3_18PartitionAllocatorEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINSF_IS7_EENSF_ISJ_EEEESP_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 5
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.733"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %18, %33
  %25 = phi i64 [ %35, %33 ], [ 0, %18 ]
  %26 = phi i32 [ %34, %33 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %22, i64 %25
  %28 = bitcast %"struct.WTF::KeyValuePair.733"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %30 [
    i64 -1, label %33
    i64 0, label %33
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %22, i64 %25, i32 1
  %32 = bitcast %"class.WTF::HashMap.735"* %31 to %"class.WTF::ConditionalDestructor.737"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %32) #17
  br label %33

33:                                               ; preds = %30, %24, %24
  %34 = add i32 %26, 1
  %35 = zext i32 %34 to i64
  %36 = icmp ugt i64 %21, %35
  br i1 %36, label %24, label %37

37:                                               ; preds = %33, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10LocalFrameEEENS2_12KeyValuePairIS6_NS2_7HashMapINS2_6StringE13scoped_refptrINS_15DOMWrapperWorldEENS2_10StringHashENS2_10HashTraitsIS9_EENSE_ISC_EENS2_18PartitionAllocatorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINSE_IS6_EENSE_ISI_EEEESO_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.733"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.731"*, %"class.blink::WeakMember.734"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember.734"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.733"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %34, align 8
  %36 = icmp eq %"class.blink::LocalFrame"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LocalFrame"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.733"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.733"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.733"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.733"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.733"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::LocalFrame"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %67, align 8
  %69 = icmp eq %"class.blink::LocalFrame"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::LocalFrame"* %63, inttoptr (i64 -1 to %"class.blink::LocalFrame"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.733"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %79, align 8
  %81 = icmp eq %"class.blink::LocalFrame"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.733"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.733"*, i8 } undef, %"struct.WTF::KeyValuePair.733"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.733"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.733"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10LocalFrameEEENS_12KeyValuePairIS4_NS_7HashMapINS_6StringE13scoped_refptrINS1_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINSC_IS4_EENSC_ISG_EEEESM_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.731"*, %"class.blink::LocalFrame"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::LocalFrame"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.733"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.731", %"class.WTF::HashTable.731"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %34, align 8
  %36 = icmp eq %"class.blink::LocalFrame"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %54, align 8
  %56 = icmp eq %"class.blink::LocalFrame"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %63, align 8
  %65 = icmp eq %"class.blink::LocalFrame"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.733"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.733"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.733"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.733"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"* } undef, %"struct.WTF::KeyValuePair.733"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"* } %78, %"struct.WTF::KeyValuePair.733"* %77, 1
  ret { %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.736"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.739"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.739"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.739"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.739"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.739"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.739"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"* } undef, %"struct.WTF::KeyValuePair.739"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"* } %77, %"struct.WTF::KeyValuePair.739"* %76, 1
  ret { %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"* } %78
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.739"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.736"*, %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.740* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.739"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.739"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.736"* %0, %"struct.WTF::KeyValuePair.739"* null)
  %9 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.739"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.739"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.739"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.739"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.739"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.739"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.739"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.739"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_I13scoped_refptrIN5blink15DOMWrapperWorldEEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_RS8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.739"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %class.scoped_refptr.740* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair.739"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.736"* %0, %"struct.WTF::KeyValuePair.739"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair.739"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair.739"*, i8 } undef, %"struct.WTF::KeyValuePair.739"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.739"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.739"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.739"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.736"*, %"struct.WTF::KeyValuePair.739"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink15DOMWrapperWorldEEEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.739"*
  %37 = call %"struct.WTF::KeyValuePair.739"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.736"* %0, %"struct.WTF::KeyValuePair.739"* %36, i32 %32, %"struct.WTF::KeyValuePair.739"* %1) #17
  ret %"struct.WTF::KeyValuePair.739"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_I13scoped_refptrIN5blink15DOMWrapperWorldEEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_RS8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.739"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.740* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.739"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %class.scoped_refptr.740, %class.scoped_refptr.740* %2, i64 0, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #17
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %0, i64 0, i32 1
  %51 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %52 = bitcast %class.scoped_refptr.740* %50 to i64*
  %53 = getelementptr inbounds %class.scoped_refptr.740, %class.scoped_refptr.740* %50, i64 0, i32 0
  %54 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.blink::DOMWrapperWorld"* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %54, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %57) #17
  %58 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %54) #17
  %62 = bitcast %"class.blink::DOMWrapperWorld"* %54 to i8*
  tail call void @free(i8* %62) #17
  br label %63

63:                                               ; preds = %49, %56, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.739"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.736"*, %"struct.WTF::KeyValuePair.739"*, i32, %"struct.WTF::KeyValuePair.739"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.736", align 8
  %6 = bitcast %"class.WTF::HashTable.736"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.736"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.739"* %1, %"struct.WTF::KeyValuePair.739"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.739"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.736"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.736"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.739"* %22 to i64
  br label %85

24:                                               ; preds = %103
  %25 = bitcast %"class.WTF::HashTable.736"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.736"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %104, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.739"* [ null, %16 ], [ %107, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %105, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.739"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %80, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %75, %39
  %42 = phi i64 [ 0, %39 ], [ %76, %75 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.739"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %75, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %35, i64 %42, i32 1, i32 0
  %49 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %48, align 8
  %50 = icmp eq %"class.blink::DOMWrapperWorld"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %49, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #17
  %53 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %49) #17
  %57 = bitcast %"class.blink::DOMWrapperWorld"* %49 to i8*
  call void @free(i8* %57) #17
  br label %58

58:                                               ; preds = %56, %51, %47
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %43, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #17
  br label %75

75:                                               ; preds = %74, %71, %58, %41
  %76 = add nuw nsw i64 %42, 1
  %77 = icmp eq i64 %76, %40
  br i1 %77, label %78, label %41

78:                                               ; preds = %75, %37
  %79 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %80

80:                                               ; preds = %28, %78
  %81 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, -2147483648
  store i32 %83, i32* %81, align 8
  %84 = bitcast %"class.WTF::HashTable.736"* %5 to %"class.WTF::ConditionalDestructor.737"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* nonnull %84) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.739"* %33

85:                                               ; preds = %21, %103
  %86 = phi i64 [ %104, %103 ], [ %23, %21 ]
  %87 = phi i32 [ %105, %103 ], [ %13, %21 ]
  %88 = phi %"struct.WTF::KeyValuePair.739"* [ %106, %103 ], [ %22, %21 ]
  %89 = phi %"struct.WTF::KeyValuePair.739"* [ %107, %103 ], [ null, %21 ]
  %90 = phi i32 [ %108, %103 ], [ 0, %21 ]
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %88, i64 %91
  %93 = bitcast %"struct.WTF::KeyValuePair.739"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  switch i64 %94, label %95 [
    i64 -1, label %103
    i64 0, label %103
  ]

95:                                               ; preds = %85
  %96 = call %"struct.WTF::KeyValuePair.739"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable.736"* nonnull %5, %"struct.WTF::KeyValuePair.739"* dereferenceable(16) %92)
  %97 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %15, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %97, i64 %91
  %99 = icmp eq %"struct.WTF::KeyValuePair.739"* %98, %3
  %100 = select i1 %99, %"struct.WTF::KeyValuePair.739"* %96, %"struct.WTF::KeyValuePair.739"* %89
  %101 = load i32, i32* %12, align 8
  %102 = ptrtoint %"struct.WTF::KeyValuePair.739"* %97 to i64
  br label %103

103:                                              ; preds = %85, %85, %95
  %104 = phi i64 [ %86, %85 ], [ %102, %95 ], [ %86, %85 ]
  %105 = phi i32 [ %87, %85 ], [ %101, %95 ], [ %87, %85 ]
  %106 = phi %"struct.WTF::KeyValuePair.739"* [ %88, %85 ], [ %97, %95 ], [ %88, %85 ]
  %107 = phi %"struct.WTF::KeyValuePair.739"* [ %89, %85 ], [ %100, %95 ], [ %89, %85 ]
  %108 = add i32 %90, 1
  %109 = icmp eq i32 %108, %105
  br i1 %109, label %24, label %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.739"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable.736"*, %"struct.WTF::KeyValuePair.739"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.739"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.736"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.739"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %5, i64 0, i32 1, i32 0
  %7 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %6, align 8
  %8 = icmp eq %"class.blink::DOMWrapperWorld"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #17
  %11 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %7) #17
  %15 = bitcast %"class.blink::DOMWrapperWorld"* %7 to i8*
  tail call void @free(i8* %15) #17
  br label %16

16:                                               ; preds = %14, %9, %2
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %5, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #17
  br label %33

33:                                               ; preds = %16, %29, %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"struct.WTF::KeyValuePair.739"* %1 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.WTF::KeyValuePair.739"* %5 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %5, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %1, i64 0, i32 1
  %40 = getelementptr inbounds %class.scoped_refptr.740, %class.scoped_refptr.740* %39, i64 0, i32 0
  %41 = bitcast %class.scoped_refptr.740* %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %class.scoped_refptr.740* %38 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.blink::DOMWrapperWorld"* null, %"class.blink::DOMWrapperWorld"** %40, align 8
  ret %"struct.WTF::KeyValuePair.739"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.739"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.736"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.739"*, %"struct.WTF::KeyValuePair.739"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.736", %"class.WTF::HashTable.736"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.739"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.739"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.739"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.739"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.739"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.739"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.739"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.739"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.739"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.739"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.739", %"struct.WTF::KeyValuePair.739"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.739"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.739"*, i8 } undef, %"struct.WTF::KeyValuePair.739"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.739"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.739"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEvT0_SA_T_"(%"class.WTF::String"*, %"class.WTF::String"*) unnamed_addr #0 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = alloca %"class.blink::Decimal", align 8
  %13 = alloca %"class.blink::Decimal", align 8
  %14 = alloca %"class.blink::Decimal", align 8
  %15 = alloca %"class.blink::Decimal", align 8
  %16 = alloca %"class.blink::Decimal", align 8
  %17 = alloca %"class.blink::Decimal", align 8
  %18 = alloca %"class.blink::Decimal", align 8
  %19 = alloca %"class.blink::Decimal", align 8
  %20 = alloca %"class.blink::Decimal", align 8
  %21 = alloca %"class.blink::Decimal", align 8
  %22 = alloca %"class.blink::Decimal", align 8
  %23 = alloca %"class.blink::Decimal", align 8
  %24 = alloca %"class.blink::Decimal", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.blink::Decimal", align 8
  %27 = alloca %"class.blink::Decimal", align 8
  %28 = bitcast %"class.blink::Decimal"* %19 to i8*
  %29 = bitcast %"class.blink::Decimal"* %20 to i8*
  %30 = bitcast %"class.blink::Decimal"* %9 to i8*
  %31 = bitcast %"class.blink::Decimal"* %10 to i8*
  %32 = bitcast %"class.blink::Decimal"* %17 to i8*
  %33 = bitcast %"class.blink::Decimal"* %18 to i8*
  %34 = bitcast %"class.blink::Decimal"* %15 to i8*
  %35 = bitcast %"class.blink::Decimal"* %16 to i8*
  %36 = bitcast %"class.blink::Decimal"* %13 to i8*
  %37 = bitcast %"class.blink::Decimal"* %14 to i8*
  %38 = bitcast %"class.blink::Decimal"* %11 to i8*
  %39 = bitcast %"class.blink::Decimal"* %12 to i8*
  %40 = bitcast %"class.blink::Decimal"* %7 to i8*
  %41 = bitcast %"class.blink::Decimal"* %8 to i8*
  %42 = bitcast %"class.blink::Decimal"* %5 to i8*
  %43 = bitcast %"class.blink::Decimal"* %6 to i8*
  %44 = bitcast %"class.blink::Decimal"* %3 to i8*
  %45 = bitcast %"class.blink::Decimal"* %4 to i8*
  br label %46

46:                                               ; preds = %290, %2
  %47 = phi %"class.WTF::String"* [ %1, %2 ], [ %272, %290 ]
  %48 = phi %"class.WTF::String"* [ %0, %2 ], [ %56, %290 ]
  %49 = ptrtoint %"class.WTF::String"* %47 to i64
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 -1
  %51 = bitcast %"class.WTF::String"* %50 to i64*
  %52 = ptrtoint %"class.WTF::String"* %47 to i64
  br label %53

53:                                               ; preds = %299, %46
  %54 = phi %"class.WTF::String"* [ %48, %46 ], [ %300, %299 ]
  br label %55

55:                                               ; preds = %225, %53
  %56 = phi %"class.WTF::String"* [ %54, %53 ], [ %218, %225 ]
  %57 = ptrtoint %"class.WTF::String"* %56 to i64
  %58 = sub i64 %49, %57
  %59 = ashr exact i64 %58, 3
  switch i64 %59, label %85 [
    i64 0, label %303
    i64 1, label %303
    i64 2, label %60
    i64 3, label %70
    i64 4, label %74
    i64 5, label %79
  ]

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 -1
  %62 = bitcast %"class.blink::Decimal"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %26, %"class.WTF::String"* dereferenceable(8) %61) #17
  %63 = bitcast %"class.blink::Decimal"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %27, %"class.WTF::String"* dereferenceable(8) %56) #17
  %64 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %26, %"class.blink::Decimal"* nonnull dereferenceable(24) %27) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #17
  br i1 %64, label %65, label %303

65:                                               ; preds = %60
  %66 = bitcast %"class.WTF::String"* %56 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %61 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %66, align 8
  store i64 %67, i64* %68, align 8
  br label %303

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 1
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 -1
  %73 = call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_T_"(%"class.WTF::String"* %56, %"class.WTF::String"* %71, %"class.WTF::String"* %72)
  br label %303

74:                                               ; preds = %55
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 1
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 2
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 -1
  %78 = call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_SA_T_"(%"class.WTF::String"* %56, %"class.WTF::String"* %75, %"class.WTF::String"* %76, %"class.WTF::String"* %77)
  br label %303

79:                                               ; preds = %55
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 1
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 2
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 3
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 -1
  %84 = call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_SA_SA_T_"(%"class.WTF::String"* %56, %"class.WTF::String"* %80, %"class.WTF::String"* %81, %"class.WTF::String"* %82, %"class.WTF::String"* %83)
  br label %303

85:                                               ; preds = %55
  %86 = icmp slt i64 %58, 56
  br i1 %86, label %87, label %177

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 2
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 1
  %90 = call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_T_"(%"class.WTF::String"* %56, %"class.WTF::String"* %89, %"class.WTF::String"* %88) #17
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 3
  %92 = icmp eq %"class.WTF::String"* %91, %47
  br i1 %92, label %303, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.blink::Decimal"* %23 to i8*
  %95 = bitcast %"class.blink::Decimal"* %24 to i8*
  %96 = bitcast %"class.WTF::String"* %25 to i8*
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %98 = bitcast %"class.WTF::String"* %25 to i64*
  %99 = bitcast %"class.blink::Decimal"* %21 to i8*
  %100 = bitcast %"class.blink::Decimal"* %22 to i8*
  br label %101

101:                                              ; preds = %174, %93
  %102 = phi %"class.WTF::String"* [ %91, %93 ], [ %175, %174 ]
  %103 = phi %"class.WTF::String"* [ %88, %93 ], [ %102, %174 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %23, %"class.WTF::String"* dereferenceable(8) %102) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %24, %"class.WTF::String"* dereferenceable(8) %103) #17
  %104 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %23, %"class.blink::Decimal"* nonnull dereferenceable(24) %24) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #17
  br i1 %104, label %105, label %174

105:                                              ; preds = %101
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #17
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 0, i32 0, i32 0
  %107 = bitcast %"class.WTF::String"* %102 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %98, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8
  br label %109

109:                                              ; preds = %134, %105
  %110 = phi %"class.WTF::String"* [ %102, %105 ], [ %111, %134 ]
  %111 = phi %"class.WTF::String"* [ %103, %105 ], [ %135, %134 ]
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %111, i64 0, i32 0, i32 0
  %113 = bitcast %"class.WTF::String"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %112, align 8
  %115 = bitcast %"class.WTF::String"* %110 to i64*
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #17
  br label %132

132:                                              ; preds = %131, %128, %109
  %133 = icmp eq %"class.WTF::String"* %111, %56
  br i1 %133, label %137, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %111, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %21, %"class.WTF::String"* nonnull dereferenceable(8) %25) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %22, %"class.WTF::String"* dereferenceable(8) %135) #17
  %136 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %21, %"class.blink::Decimal"* nonnull dereferenceable(24) %22) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #17
  br i1 %136, label %109, label %137

137:                                              ; preds = %132, %134
  %138 = phi %"class.WTF::String"* [ %111, %134 ], [ %56, %132 ]
  %139 = bitcast %"class.WTF::String"* %138 to i64*
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %138, i64 0, i32 0, i32 0
  %141 = load i64, i64* %98, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %97, align 8
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  store i64 %141, i64* %139, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #17
  br label %157

157:                                              ; preds = %156, %153, %137
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #17
  br label %173

173:                                              ; preds = %172, %169, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #17
  br label %174

174:                                              ; preds = %173, %101
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 1
  %176 = icmp eq %"class.WTF::String"* %175, %47
  br i1 %176, label %303, label %101

177:                                              ; preds = %85
  %178 = icmp sgt i64 %58, 7992
  %179 = sdiv i64 %59, 2
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %179
  br i1 %178, label %181, label %186

181:                                              ; preds = %177
  %182 = sdiv i64 %59, 4
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %182
  %184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %180, i64 %182
  %185 = call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_SA_SA_T_"(%"class.WTF::String"* %56, %"class.WTF::String"* %183, %"class.WTF::String"* %180, %"class.WTF::String"* %184, %"class.WTF::String"* %50)
  br label %188

186:                                              ; preds = %177
  %187 = call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_T_"(%"class.WTF::String"* %56, %"class.WTF::String"* %180, %"class.WTF::String"* %50)
  br label %188

188:                                              ; preds = %186, %181
  %189 = phi i32 [ %185, %181 ], [ %187, %186 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %19, %"class.WTF::String"* dereferenceable(8) %56) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %20, %"class.WTF::String"* dereferenceable(8) %180) #17
  %190 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %19, %"class.blink::Decimal"* nonnull dereferenceable(24) %20) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  br i1 %190, label %240, label %191

191:                                              ; preds = %188, %232
  %192 = phi %"class.WTF::String"* [ %193, %232 ], [ %50, %188 ]
  %193 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %192, i64 -1
  %194 = icmp eq %"class.WTF::String"* %56, %193
  br i1 %194, label %195, label %232

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %17, %"class.WTF::String"* dereferenceable(8) %56) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %18, %"class.WTF::String"* dereferenceable(8) %50) #17
  %197 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %17, %"class.blink::Decimal"* nonnull dereferenceable(24) %18) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %197, label %211, label %198

198:                                              ; preds = %195
  %199 = icmp eq %"class.WTF::String"* %196, %50
  br i1 %199, label %303, label %200

200:                                              ; preds = %198, %208
  %201 = phi %"class.WTF::String"* [ %209, %208 ], [ %196, %198 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %15, %"class.WTF::String"* dereferenceable(8) %56) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %16, %"class.WTF::String"* dereferenceable(8) %201) #17
  %202 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %15, %"class.blink::Decimal"* nonnull dereferenceable(24) %16) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #17
  br i1 %202, label %203, label %208

203:                                              ; preds = %200
  %204 = bitcast %"class.WTF::String"* %201 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = load i64, i64* %51, align 8
  store i64 %206, i64* %204, align 8
  store i64 %205, i64* %51, align 8
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %201, i64 1
  br label %211

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %201, i64 1
  %210 = icmp eq %"class.WTF::String"* %209, %50
  br i1 %210, label %303, label %200

211:                                              ; preds = %203, %195
  %212 = phi %"class.WTF::String"* [ %196, %195 ], [ %207, %203 ]
  %213 = icmp eq %"class.WTF::String"* %212, %50
  br i1 %213, label %303, label %214

214:                                              ; preds = %211, %227
  %215 = phi %"class.WTF::String"* [ %220, %227 ], [ %212, %211 ]
  %216 = phi %"class.WTF::String"* [ %223, %227 ], [ %50, %211 ]
  br label %217

217:                                              ; preds = %217, %214
  %218 = phi %"class.WTF::String"* [ %215, %214 ], [ %220, %217 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %13, %"class.WTF::String"* dereferenceable(8) %56) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %14, %"class.WTF::String"* dereferenceable(8) %218) #17
  %219 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %13, %"class.blink::Decimal"* nonnull dereferenceable(24) %14) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #17
  %220 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %218, i64 1
  br i1 %219, label %221, label %217

221:                                              ; preds = %217, %221
  %222 = phi %"class.WTF::String"* [ %223, %221 ], [ %216, %217 ]
  %223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %222, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %11, %"class.WTF::String"* dereferenceable(8) %56) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %12, %"class.WTF::String"* dereferenceable(8) %223) #17
  %224 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %11, %"class.blink::Decimal"* nonnull dereferenceable(24) %12) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #17
  br i1 %224, label %221, label %225

225:                                              ; preds = %221
  %226 = icmp ult %"class.WTF::String"* %218, %223
  br i1 %226, label %227, label %55

227:                                              ; preds = %225
  %228 = bitcast %"class.WTF::String"* %218 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.WTF::String"* %223 to i64*
  %231 = load i64, i64* %230, align 8
  store i64 %231, i64* %228, align 8
  store i64 %229, i64* %230, align 8
  br label %214

232:                                              ; preds = %191
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %9, %"class.WTF::String"* dereferenceable(8) %193) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %10, %"class.WTF::String"* dereferenceable(8) %180) #17
  %233 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %9, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #17
  br i1 %233, label %234, label %191

234:                                              ; preds = %232
  %235 = bitcast %"class.WTF::String"* %56 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.WTF::String"* %193 to i64*
  %238 = load i64, i64* %237, align 8
  store i64 %238, i64* %235, align 8
  store i64 %236, i64* %237, align 8
  %239 = add i32 %189, 1
  br label %240

240:                                              ; preds = %188, %234
  %241 = phi i32 [ %239, %234 ], [ %189, %188 ]
  %242 = phi %"class.WTF::String"* [ %193, %234 ], [ %50, %188 ]
  %243 = ptrtoint %"class.WTF::String"* %56 to i64
  %244 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 1
  %245 = icmp ult %"class.WTF::String"* %244, %242
  br i1 %245, label %246, label %269

246:                                              ; preds = %240, %261
  %247 = phi %"class.WTF::String"* [ %268, %261 ], [ %180, %240 ]
  %248 = phi i32 [ %266, %261 ], [ %241, %240 ]
  %249 = phi %"class.WTF::String"* [ %254, %261 ], [ %244, %240 ]
  %250 = phi %"class.WTF::String"* [ %257, %261 ], [ %242, %240 ]
  br label %251

251:                                              ; preds = %251, %246
  %252 = phi %"class.WTF::String"* [ %249, %246 ], [ %254, %251 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %7, %"class.WTF::String"* dereferenceable(8) %252) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %247) #17
  %253 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #17
  %254 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %252, i64 1
  br i1 %253, label %251, label %255

255:                                              ; preds = %251, %255
  %256 = phi %"class.WTF::String"* [ %257, %255 ], [ %250, %251 ]
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %256, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %5, %"class.WTF::String"* dereferenceable(8) %257) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %247) #17
  %258 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #17
  br i1 %258, label %259, label %255

259:                                              ; preds = %255
  %260 = icmp ugt %"class.WTF::String"* %252, %257
  br i1 %260, label %269, label %261

261:                                              ; preds = %259
  %262 = bitcast %"class.WTF::String"* %252 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"class.WTF::String"* %257 to i64*
  %265 = load i64, i64* %264, align 8
  store i64 %265, i64* %262, align 8
  store i64 %263, i64* %264, align 8
  %266 = add i32 %248, 1
  %267 = icmp eq %"class.WTF::String"* %247, %252
  %268 = select i1 %267, %"class.WTF::String"* %257, %"class.WTF::String"* %247
  br label %246

269:                                              ; preds = %259, %240
  %270 = phi %"class.WTF::String"* [ %180, %240 ], [ %247, %259 ]
  %271 = phi i32 [ %241, %240 ], [ %248, %259 ]
  %272 = phi %"class.WTF::String"* [ %244, %240 ], [ %252, %259 ]
  %273 = icmp eq %"class.WTF::String"* %272, %270
  br i1 %273, label %282, label %274

274:                                              ; preds = %269
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %3, %"class.WTF::String"* dereferenceable(8) %270) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %4, %"class.WTF::String"* dereferenceable(8) %272) #17
  %275 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %3, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #17
  br i1 %275, label %276, label %282

276:                                              ; preds = %274
  %277 = bitcast %"class.WTF::String"* %272 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"class.WTF::String"* %270 to i64*
  %280 = load i64, i64* %279, align 8
  store i64 %280, i64* %277, align 8
  store i64 %278, i64* %279, align 8
  %281 = add i32 %271, 1
  br label %282

282:                                              ; preds = %269, %276, %274
  %283 = phi i32 [ %281, %276 ], [ %271, %274 ], [ %271, %269 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %292

285:                                              ; preds = %282
  %286 = call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEbT0_SA_T_"(%"class.WTF::String"* %56, %"class.WTF::String"* %272)
  %287 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %272, i64 1
  %288 = call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEbT0_SA_T_"(%"class.WTF::String"* %287, %"class.WTF::String"* %47)
  br i1 %288, label %289, label %291

289:                                              ; preds = %285
  br i1 %286, label %303, label %290

290:                                              ; preds = %289, %301
  br label %46

291:                                              ; preds = %285
  br i1 %286, label %299, label %292

292:                                              ; preds = %291, %282
  %293 = ptrtoint %"class.WTF::String"* %272 to i64
  %294 = sub i64 %293, %243
  %295 = sub i64 %52, %293
  %296 = icmp slt i64 %294, %295
  br i1 %296, label %297, label %301

297:                                              ; preds = %292
  call fastcc void @"_ZNSt3__16__sortIRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEvT0_SA_T_"(%"class.WTF::String"* %56, %"class.WTF::String"* %272)
  %298 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %272, i64 1
  br label %299

299:                                              ; preds = %297, %291
  %300 = phi %"class.WTF::String"* [ %287, %291 ], [ %298, %297 ]
  br label %53

301:                                              ; preds = %292
  %302 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %272, i64 1
  call fastcc void @"_ZNSt3__16__sortIRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEvT0_SA_T_"(%"class.WTF::String"* %302, %"class.WTF::String"* %47)
  br label %290

303:                                              ; preds = %289, %211, %55, %55, %198, %208, %174, %87, %60, %65, %70, %74, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_T_"(%"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*) unnamed_addr #0 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %10, %"class.WTF::String"* dereferenceable(8) %1) #17
  %13 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %11, %"class.WTF::String"* dereferenceable(8) %0) #17
  %14 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %10, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  %15 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %2) #17
  %16 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %9, %"class.WTF::String"* dereferenceable(8) %1) #17
  %17 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  br i1 %14, label %31, label %18

18:                                               ; preds = %3
  br i1 %17, label %19, label %47

19:                                               ; preds = %18
  %20 = bitcast %"class.WTF::String"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::String"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %20, align 8
  store i64 %21, i64* %22, align 8
  %24 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %1) #17
  %25 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %7, %"class.WTF::String"* dereferenceable(8) %0) #17
  %26 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #17
  br i1 %26, label %27, label %47

27:                                               ; preds = %19
  %28 = bitcast %"class.WTF::String"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %20, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %20, align 8
  br label %47

31:                                               ; preds = %3
  %32 = bitcast %"class.WTF::String"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  br i1 %17, label %34, label %37

34:                                               ; preds = %31
  %35 = bitcast %"class.WTF::String"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %32, align 8
  store i64 %33, i64* %35, align 8
  br label %47

37:                                               ; preds = %31
  %38 = bitcast %"class.WTF::String"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %32, align 8
  store i64 %33, i64* %38, align 8
  %40 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %4, %"class.WTF::String"* dereferenceable(8) %2) #17
  %41 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %5, %"class.WTF::String"* dereferenceable(8) %1) #17
  %42 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #17
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = load i64, i64* %38, align 8
  %45 = bitcast %"class.WTF::String"* %2 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %38, align 8
  store i64 %44, i64* %45, align 8
  br label %47

47:                                               ; preds = %37, %43, %19, %27, %18, %34
  %48 = phi i32 [ 1, %34 ], [ 0, %18 ], [ 2, %27 ], [ 1, %19 ], [ 2, %43 ], [ 1, %37 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_SA_T_"(%"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*) unnamed_addr #0 {
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_T_"(%"class.WTF::String"* %0, %"class.WTF::String"* %1, %"class.WTF::String"* %2)
  %12 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %9, %"class.WTF::String"* dereferenceable(8) %3) #17
  %13 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %10, %"class.WTF::String"* dereferenceable(8) %2) #17
  %14 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %9, %"class.blink::Decimal"* nonnull dereferenceable(24) %10) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  br i1 %14, label %15, label %37

15:                                               ; preds = %4
  %16 = bitcast %"class.WTF::String"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.WTF::String"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = add i32 %11, 1
  %21 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %7, %"class.WTF::String"* dereferenceable(8) %2) #17
  %22 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %1) #17
  %23 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #17
  br i1 %23, label %24, label %37

24:                                               ; preds = %15
  %25 = bitcast %"class.WTF::String"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %16, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  %28 = add i32 %11, 2
  %29 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %5, %"class.WTF::String"* dereferenceable(8) %1) #17
  %30 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %0) #17
  %31 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #17
  br i1 %31, label %32, label %37

32:                                               ; preds = %24
  %33 = bitcast %"class.WTF::String"* %0 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = load i64, i64* %25, align 8
  store i64 %35, i64* %33, align 8
  store i64 %34, i64* %25, align 8
  %36 = add i32 %11, 3
  br label %37

37:                                               ; preds = %15, %32, %24, %4
  %38 = phi i32 [ %36, %32 ], [ %28, %24 ], [ %20, %15 ], [ %11, %4 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_SA_SA_T_"(%"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*) unnamed_addr #0 {
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::Decimal", align 8
  %10 = alloca %"class.blink::Decimal", align 8
  %11 = alloca %"class.blink::Decimal", align 8
  %12 = alloca %"class.blink::Decimal", align 8
  %13 = alloca %"class.blink::Decimal", align 8
  %14 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_SA_T_"(%"class.WTF::String"* %0, %"class.WTF::String"* %1, %"class.WTF::String"* %2, %"class.WTF::String"* %3)
  %15 = bitcast %"class.blink::Decimal"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %12, %"class.WTF::String"* dereferenceable(8) %4) #17
  %16 = bitcast %"class.blink::Decimal"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %13, %"class.WTF::String"* dereferenceable(8) %3) #17
  %17 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %12, %"class.blink::Decimal"* nonnull dereferenceable(24) %13) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  br i1 %17, label %18, label %48

18:                                               ; preds = %5
  %19 = bitcast %"class.WTF::String"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.WTF::String"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 %20, i64* %21, align 8
  %23 = add i32 %14, 1
  %24 = bitcast %"class.blink::Decimal"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %10, %"class.WTF::String"* dereferenceable(8) %3) #17
  %25 = bitcast %"class.blink::Decimal"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %11, %"class.WTF::String"* dereferenceable(8) %2) #17
  %26 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %10, %"class.blink::Decimal"* nonnull dereferenceable(24) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #17
  br i1 %26, label %27, label %48

27:                                               ; preds = %18
  %28 = bitcast %"class.WTF::String"* %2 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %19, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %19, align 8
  %31 = add i32 %14, 2
  %32 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %2) #17
  %33 = bitcast %"class.blink::Decimal"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %9, %"class.WTF::String"* dereferenceable(8) %1) #17
  %34 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* nonnull dereferenceable(24) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %34, label %35, label %48

35:                                               ; preds = %27
  %36 = bitcast %"class.WTF::String"* %1 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %28, align 8
  store i64 %38, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  %39 = add i32 %14, 3
  %40 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %1) #17
  %41 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %7, %"class.WTF::String"* dereferenceable(8) %0) #17
  %42 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %6, %"class.blink::Decimal"* nonnull dereferenceable(24) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #17
  br i1 %42, label %43, label %48

43:                                               ; preds = %35
  %44 = bitcast %"class.WTF::String"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = load i64, i64* %36, align 8
  store i64 %46, i64* %44, align 8
  store i64 %45, i64* %36, align 8
  %47 = add i32 %14, 4
  br label %48

48:                                               ; preds = %18, %35, %43, %27, %5
  %49 = phi i32 [ %47, %43 ], [ %39, %35 ], [ %31, %27 ], [ %23, %18 ], [ %14, %5 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEbT0_SA_T_"(%"class.WTF::String"*, %"class.WTF::String"*) unnamed_addr #0 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = alloca %"class.blink::Decimal", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = ptrtoint %"class.WTF::String"* %1 to i64
  %11 = ptrtoint %"class.WTF::String"* %0 to i64
  %12 = sub i64 %10, %11
  %13 = ashr exact i64 %12, 3
  switch i64 %13, label %39 [
    i64 0, label %136
    i64 1, label %136
    i64 2, label %14
    i64 3, label %24
    i64 4, label %28
    i64 5, label %33
  ]

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %16 = bitcast %"class.blink::Decimal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %7, %"class.WTF::String"* dereferenceable(8) %15) #17
  %17 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %0) #17
  %18 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %7, %"class.blink::Decimal"* nonnull dereferenceable(24) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #17
  br i1 %18, label %19, label %136

19:                                               ; preds = %14
  %20 = bitcast %"class.WTF::String"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::String"* %15 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %20, align 8
  store i64 %21, i64* %22, align 8
  br label %136

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %27 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_T_"(%"class.WTF::String"* %0, %"class.WTF::String"* %25, %"class.WTF::String"* %26)
  br label %136

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %32 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_SA_T_"(%"class.WTF::String"* %0, %"class.WTF::String"* %29, %"class.WTF::String"* %30, %"class.WTF::String"* %31)
  br label %136

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 3
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 -1
  %38 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_SA_SA_T_"(%"class.WTF::String"* %0, %"class.WTF::String"* %34, %"class.WTF::String"* %35, %"class.WTF::String"* %36, %"class.WTF::String"* %37)
  br label %136

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 2
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 1
  %42 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink18InspectorPageAgent30DidClearDocumentOfWindowObjectEPNS1_10LocalFrameEE3$_1PN3WTF6StringEEEjT0_SA_SA_T_"(%"class.WTF::String"* %0, %"class.WTF::String"* %41, %"class.WTF::String"* %40)
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 3
  %44 = icmp eq %"class.WTF::String"* %43, %1
  br i1 %44, label %136, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::Decimal"* %5 to i8*
  %47 = bitcast %"class.blink::Decimal"* %6 to i8*
  %48 = bitcast %"class.WTF::String"* %9 to i8*
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %50 = bitcast %"class.WTF::String"* %9 to i64*
  %51 = bitcast %"class.blink::Decimal"* %3 to i8*
  %52 = bitcast %"class.blink::Decimal"* %4 to i8*
  br label %53

53:                                               ; preds = %45, %129
  %54 = phi %"class.WTF::String"* [ %43, %45 ], [ %131, %129 ]
  %55 = phi i32 [ 0, %45 ], [ %130, %129 ]
  %56 = phi %"class.WTF::String"* [ %40, %45 ], [ %54, %129 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %5, %"class.WTF::String"* dereferenceable(8) %54) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %56) #17
  %57 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #17
  br i1 %57, label %58, label %129

58:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #17
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %60 = bitcast %"class.WTF::String"* %54 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %50, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 8
  br label %62

62:                                               ; preds = %87, %58
  %63 = phi %"class.WTF::String"* [ %54, %58 ], [ %64, %87 ]
  %64 = phi %"class.WTF::String"* [ %56, %58 ], [ %88, %87 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  store i64 %67, i64* %68, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #17
  br label %85

85:                                               ; preds = %62, %81, %84
  %86 = icmp eq %"class.WTF::String"* %64, %0
  br i1 %86, label %90, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %3, %"class.WTF::String"* nonnull dereferenceable(8) %9) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #17
  call void @_ZN5blink7Decimal10FromStringERKN3WTF6StringE(%"class.blink::Decimal"* nonnull sret %4, %"class.WTF::String"* dereferenceable(8) %88) #17
  %89 = call zeroext i1 @_ZNK5blink7DecimalltERKS0_(%"class.blink::Decimal"* nonnull %3, %"class.blink::Decimal"* nonnull dereferenceable(24) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #17
  br i1 %89, label %62, label %90

90:                                               ; preds = %85, %87
  %91 = phi %"class.WTF::String"* [ %64, %87 ], [ %0, %85 ]
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %93 = bitcast %"class.WTF::String"* %91 to i64*
  %94 = load i64, i64* %50, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %49, align 8
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  store i64 %94, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #17
  br label %110

110:                                              ; preds = %90, %106, %109
  %111 = add i32 %55, 1
  %112 = icmp eq i32 %111, 8
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #17
  br label %128

128:                                              ; preds = %110, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #17
  br i1 %112, label %133, label %129

129:                                              ; preds = %128, %53
  %130 = phi i32 [ %111, %128 ], [ %55, %53 ]
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 1
  %132 = icmp eq %"class.WTF::String"* %131, %1
  br i1 %132, label %136, label %53

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 1
  %135 = icmp eq %"class.WTF::String"* %134, %1
  br label %136

136:                                              ; preds = %129, %133, %39, %14, %19, %2, %2, %33, %28, %24
  %137 = phi i1 [ true, %33 ], [ true, %28 ], [ true, %24 ], [ true, %2 ], [ true, %2 ], [ true, %19 ], [ true, %14 ], [ true, %39 ], [ %135, %133 ], [ true, %129 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.723"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.726"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.726"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.726"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.726"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.726"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.726"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } undef, %"struct.WTF::KeyValuePair.726"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %77, %"struct.WTF::KeyValuePair.726"* %76, 1
  ret { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3729"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4219", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.4219"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4219", %"class.WTF::StringTypeAdapter.4219"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.3729", %"class.WTF::StringAppend.3729"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.4219"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4219"* nonnull %4, i8* %13) #17
  %14 = getelementptr inbounds %"class.WTF::StringAppend.3729", %"class.WTF::StringAppend.3729"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0), i8* %30, i8* %31) #17
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.51, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* %45, i8* %46) #17
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.51, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #17
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #17
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  ret i32 %23
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4219"*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4219"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4219"*, i16*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page9FrameTreeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3583"*, %"class.std::__1::unique_ptr.3573"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3583", %"class.std::__1::vector.3583"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3573"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3583"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3583"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3583", %"class.std::__1::vector.3583"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3573"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3573"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3573"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3573"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3573"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3573"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3573"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3583", %"class.std::__1::vector.3583"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::unique_ptr.3573"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3573"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::unique_ptr.3573"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3573"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Page::FrameTree"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3573"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3573"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3573"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3573"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !102

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3573"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3573"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3573"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3573"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3573"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3573"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3573"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3573"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3573"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3573"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3573"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3573"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3573"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3573"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3573"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3573"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3573"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3573"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3573"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3573"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3573"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3573"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3573"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3573"*, %"class.std::__1::unique_ptr.3573"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3573"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3573"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3573"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3573"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3573"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3573"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3573", %"class.std::__1::unique_ptr.3573"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Page::FrameTree"*, %"class.blink::protocol::Page::FrameTree"** %142, align 8
  store %"class.blink::protocol::Page::FrameTree"* null, %"class.blink::protocol::Page::FrameTree"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Page::FrameTree"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Page::FrameTree"* %143 to void (%"class.blink::protocol::Page::FrameTree"*)***
  %147 = load void (%"class.blink::protocol::Page::FrameTree"*)**, void (%"class.blink::protocol::Page::FrameTree"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Page::FrameTree"*)*, void (%"class.blink::protocol::Page::FrameTree"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Page::FrameTree"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3573"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page13FrameResourceENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3550"*, %"class.std::__1::unique_ptr.3552"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3550", %"class.std::__1::vector.3550"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3552"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3550"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3550"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3550", %"class.std::__1::vector.3550"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3552"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3552"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3552"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3552"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3552"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3552"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3552"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3550", %"class.std::__1::vector.3550"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3552"*, %"class.std::__1::unique_ptr.3552"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3552"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3552"*, %"class.std::__1::unique_ptr.3552"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3552"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Page::FrameResource"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3552"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3552"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3552"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3552"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !103

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3552"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3552"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3552"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3552"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3552"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3552"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3552"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3552"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3552"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3552"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3552"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3552"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3552"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3552"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3552"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3552"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3552"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3552"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3552"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3552"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3552"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3552"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3552"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3552"*, %"class.std::__1::unique_ptr.3552"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3552"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3552"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3552"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3552"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3552"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3552"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3552", %"class.std::__1::unique_ptr.3552"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Page::FrameResource"*, %"class.blink::protocol::Page::FrameResource"** %142, align 8
  store %"class.blink::protocol::Page::FrameResource"* null, %"class.blink::protocol::Page::FrameResource"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Page::FrameResource"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Page::FrameResource"* %143 to void (%"class.blink::protocol::Page::FrameResource"*)***
  %147 = load void (%"class.blink::protocol::Page::FrameResource"*)**, void (%"class.blink::protocol::Page::FrameResource"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameResource"*)*, void (%"class.blink::protocol::Page::FrameResource"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Page::FrameResource"*)*, void (%"class.blink::protocol::Page::FrameResource"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Page::FrameResource"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3552"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol4Page17FrameResourceTreeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3537"*, %"class.std::__1::unique_ptr.3454"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3537", %"class.std::__1::vector.3537"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3454"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3537"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3537"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3537", %"class.std::__1::vector.3537"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3454"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3454"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3454"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3454"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3454"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3454"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3454"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3537", %"class.std::__1::vector.3537"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::unique_ptr.3454"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3454"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::unique_ptr.3454"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3454"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Page::FrameResourceTree"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3454"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3454"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3454"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3454"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !104

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3454"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3454"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3454"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3454"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3454"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3454"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3454"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3454"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3454"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3454"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3454"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3454"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3454"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3454"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3454"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3454"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3454"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3454"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3454"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3454"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3454"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3454"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3454"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3454"*, %"class.std::__1::unique_ptr.3454"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3454"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3454"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3454"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3454"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3454"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3454"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3454", %"class.std::__1::unique_ptr.3454"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Page::FrameResourceTree"*, %"class.blink::protocol::Page::FrameResourceTree"** %142, align 8
  store %"class.blink::protocol::Page::FrameResourceTree"* null, %"class.blink::protocol::Page::FrameResourceTree"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Page::FrameResourceTree"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Page::FrameResourceTree"* %143 to void (%"class.blink::protocol::Page::FrameResourceTree"*)***
  %147 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)**, void (%"class.blink::protocol::Page::FrameResourceTree"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Page::FrameResourceTree"*)*, void (%"class.blink::protocol::Page::FrameResourceTree"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Page::FrameResourceTree"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3454"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #19
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32, %"class.blink::WebVector.2998"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.715"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.718"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.718"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.718"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.718"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.718"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.718"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"* } undef, %"struct.WTF::KeyValuePair.718"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"* } %77, %"struct.WTF::KeyValuePair.718"* %76, 1
  ret { %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.723"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.726"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.726"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.726"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.726"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.726"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.726"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } undef, %"struct.WTF::KeyValuePair.726"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %77, %"struct.WTF::KeyValuePair.726"* %76, 1
  ret { %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.723"*, %"struct.WTF::KeyValuePair.726"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.726"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  %34 = icmp ugt i32 %32, 8
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %19
  %37 = lshr i32 %32, 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv, i64 0, i64 0)) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %39, i1 false) #17
  %41 = bitcast i8* %40 to %"struct.WTF::KeyValuePair.726"*
  %42 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* %41, i32 %37, %"struct.WTF::KeyValuePair.726"* null) #17
  br label %43

43:                                               ; preds = %36, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS8_SD_SE_EES1_EEbRKT0_(%"class.WTF::HashTable.715"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.718"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.718"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.718"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.718"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  %63 = icmp ne %"struct.WTF::KeyValuePair.718"* %62, null
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.718"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS1_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.715"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Binary"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.718"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.715"* %0, %"struct.WTF::KeyValuePair.718"* null)
  %9 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.718"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %81, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.718"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.718"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.718"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %94, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.718"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.718"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.718"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %59, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %59, i64 0, i32 1, i32 1
  %74 = bitcast %class.scoped_refptr.719* %73 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %24, %68, %70
  %82 = phi %"struct.WTF::KeyValuePair.718"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink8protocol6BinaryEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERS3_RS7_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.718"* dereferenceable(24) %82, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::protocol::Binary"* dereferenceable(16) %2)
  %83 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %83, align 4
  %86 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, %85
  %89 = shl i32 %88, 1
  %90 = load i32, i32* %12, align 8
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %81
  %93 = tail call %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.715"* %0, %"struct.WTF::KeyValuePair.718"* %82)
  br label %94

94:                                               ; preds = %54, %81, %92
  %95 = phi i8 [ 1, %81 ], [ 1, %92 ], [ 0, %54 ]
  %96 = phi %"struct.WTF::KeyValuePair.718"* [ %82, %81 ], [ %93, %92 ], [ %47, %54 ]
  %97 = insertvalue { %"struct.WTF::KeyValuePair.718"*, i8 } undef, %"struct.WTF::KeyValuePair.718"* %96, 0
  %98 = insertvalue { %"struct.WTF::KeyValuePair.718"*, i8 } %97, i8 %95, 1
  ret { %"struct.WTF::KeyValuePair.718"*, i8 } %98
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.715"*, %"struct.WTF::KeyValuePair.718"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink8protocol6BinaryEEEEEPKcv, i64 0, i64 0)) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.718"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %60, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %57, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %58, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %44
  %47 = bitcast %"struct.WTF::KeyValuePair.718"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %44, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %44, i32 1, i32 1
  %50 = bitcast %class.scoped_refptr.719* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = or i64 %44, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %51
  %53 = bitcast %"struct.WTF::KeyValuePair.718"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %51, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %51, i32 1, i32 1
  %56 = bitcast %class.scoped_refptr.719* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = add nuw nsw i64 %44, 2
  %58 = add i64 %45, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %43

60:                                               ; preds = %43, %38
  %61 = phi i64 [ 0, %38 ], [ %57, %43 ]
  %62 = icmp eq i64 %39, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %61
  %65 = bitcast %"struct.WTF::KeyValuePair.718"* %64 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %61, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %36, i64 %61, i32 1, i32 1
  %68 = bitcast %class.scoped_refptr.719* %67 to i64*
  store i64 0, i64* %68, align 8
  br label %69

69:                                               ; preds = %63, %60, %31
  %70 = call %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.715"* %0, %"struct.WTF::KeyValuePair.718"* %36, i32 %32, %"struct.WTF::KeyValuePair.718"* %1) #17
  ret %"struct.WTF::KeyValuePair.718"* %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink8protocol6BinaryEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERS3_RS7_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.718"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Binary"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.718"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %0, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %2, i64 0, i32 1, i32 0
  %46 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %45, align 8
  %47 = icmp eq %"class.blink::protocol::Binary::Impl"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %46, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %49) #17
  br label %50

50:                                               ; preds = %48, %43
  %51 = ptrtoint %"class.blink::protocol::Binary::Impl"* %46 to i64
  %52 = bitcast %class.scoped_refptr.719* %44 to i64*
  %53 = getelementptr inbounds %class.scoped_refptr.719, %class.scoped_refptr.719* %44, i64 0, i32 0
  %54 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.blink::protocol::Binary::Impl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %54, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %57, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #17
  %59 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %57, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %69

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %57, i64 -2
  %64 = bitcast %"class.base::RefCounted.721"* %63 to %"class.blink::protocol::Binary::Impl"*
  %65 = bitcast %"class.base::RefCounted.721"* %63 to void (%"class.blink::protocol::Binary::Impl"*)***
  %66 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %66, i64 1
  %68 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %67, align 8
  tail call void %68(%"class.blink::protocol::Binary::Impl"* nonnull %64) #17
  br label %69

69:                                               ; preds = %50, %56, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.715"*, %"struct.WTF::KeyValuePair.718"*, i32, %"struct.WTF::KeyValuePair.718"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.715", align 8
  %6 = bitcast %"class.WTF::HashTable.715"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.715"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.718"* %1, %"struct.WTF::KeyValuePair.718"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.718"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.715"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.715"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.718"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.715"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.715"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.718"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.718"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.718"* nonnull %37, i32 %34) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.718"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.718"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.718"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.718"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8ReinsertEOS6_(%"class.WTF::HashTable.715"* nonnull %5, %"struct.WTF::KeyValuePair.718"* dereferenceable(24) %49)
  %54 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.718"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.718"* %53, %"struct.WTF::KeyValuePair.718"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.718"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.718"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.718"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8ReinsertEOS6_(%"class.WTF::HashTable.715"*, %"struct.WTF::KeyValuePair.718"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.718"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.715"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.718"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %5, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %5, i64 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %7, align 8
  %9 = icmp eq %"class.blink::protocol::Binary::Impl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #17
  %13 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.721"* %17 to %"class.blink::protocol::Binary::Impl"*
  %19 = bitcast %"class.base::RefCounted.721"* %17 to void (%"class.blink::protocol::Binary::Impl"*)***
  %20 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %20, i64 1
  %22 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %21, align 8
  tail call void %22(%"class.blink::protocol::Binary::Impl"* nonnull %18) #17
  br label %23

23:                                               ; preds = %16, %10, %2
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #17
  br label %40

40:                                               ; preds = %23, %36, %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %1, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"struct.WTF::KeyValuePair.718"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.WTF::KeyValuePair.718"* %5 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %5, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %1, i64 0, i32 1, i32 1
  %47 = getelementptr inbounds %class.scoped_refptr.719, %class.scoped_refptr.719* %46, i64 0, i32 0
  %48 = bitcast %class.scoped_refptr.719* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %class.scoped_refptr.719* %45 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.blink::protocol::Binary::Impl"* null, %"class.blink::protocol::Binary::Impl"** %47, align 8
  ret %"struct.WTF::KeyValuePair.718"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.718"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.715"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.718"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.718"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.718"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.718"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.718"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.718"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.718"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.718"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.718"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.718"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.718"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.718"*, i8 } undef, %"struct.WTF::KeyValuePair.718"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.718"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.718"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EES1_bEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.723"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.726"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* null)
  %9 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.726"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.726"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.726"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.726"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %113, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.726"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.726"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.726"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.726"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = bitcast %"class.WTF::String"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.726"* %79 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #17
  br label %99

99:                                               ; preds = %78, %95, %98
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %79, i64 0, i32 1
  %101 = load i8, i8* %2, align 1, !range !4
  store i8 %101, i8* %100, align 1
  %102 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %102, align 4
  %105 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = add i32 %106, %104
  %108 = shl i32 %107, 1
  %109 = load i32, i32* %12, align 8
  %110 = icmp ult i32 %108, %109
  br i1 %110, label %113, label %111

111:                                              ; preds = %99
  %112 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* %79)
  br label %113

113:                                              ; preds = %54, %99, %111
  %114 = phi i8 [ 1, %99 ], [ 1, %111 ], [ 0, %54 ]
  %115 = phi %"struct.WTF::KeyValuePair.726"* [ %79, %99 ], [ %112, %111 ], [ %47, %54 ]
  %116 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } undef, %"struct.WTF::KeyValuePair.726"* %115, 0
  %117 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %116, i8 %114, 1
  ret { %"struct.WTF::KeyValuePair.726"*, i8 } %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.726"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_bEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.723"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.726"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* null)
  %9 = load %"struct.WTF::KeyValuePair.726"*, %"struct.WTF::KeyValuePair.726"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.726"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.726"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.726"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.726"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.726"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.726"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.726"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.726"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #17
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #17
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.726"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.726", %"struct.WTF::KeyValuePair.726"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !4
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.723", %"class.WTF::HashTable.723"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.726"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.723"* %0, %"struct.WTF::KeyValuePair.726"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.726"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } undef, %"struct.WTF::KeyValuePair.726"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.726"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.726"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.718"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS1_RKS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.715"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Binary"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.718"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.715"* %0, %"struct.WTF::KeyValuePair.718"* null)
  %9 = load %"struct.WTF::KeyValuePair.718"*, %"struct.WTF::KeyValuePair.718"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.718"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %81, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.718"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.718"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.718"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %94, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.718"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.718"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.718"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %59, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %59, i64 0, i32 1, i32 1
  %74 = bitcast %class.scoped_refptr.719* %73 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %24, %68, %70
  %82 = phi %"struct.WTF::KeyValuePair.718"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink8protocol6BinaryEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERKS3_RKS7_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.718"* dereferenceable(24) %82, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::protocol::Binary"* dereferenceable(16) %2)
  %83 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %83, align 4
  %86 = getelementptr inbounds %"class.WTF::HashTable.715", %"class.WTF::HashTable.715"* %0, i64 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, %85
  %89 = shl i32 %88, 1
  %90 = load i32, i32* %12, align 8
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %81
  %93 = tail call %"struct.WTF::KeyValuePair.718"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink8protocol6BinaryEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.715"* %0, %"struct.WTF::KeyValuePair.718"* %82)
  br label %94

94:                                               ; preds = %54, %81, %92
  %95 = phi i8 [ 1, %81 ], [ 1, %92 ], [ 0, %54 ]
  %96 = phi %"struct.WTF::KeyValuePair.718"* [ %82, %81 ], [ %93, %92 ], [ %47, %54 ]
  %97 = insertvalue { %"struct.WTF::KeyValuePair.718"*, i8 } undef, %"struct.WTF::KeyValuePair.718"* %96, 0
  %98 = insertvalue { %"struct.WTF::KeyValuePair.718"*, i8 } %97, i8 %95, 1
  ret { %"struct.WTF::KeyValuePair.718"*, i8 } %98
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink8protocol6BinaryEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERKS3_RKS7_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.718"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Binary"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.718"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.718", %"struct.WTF::KeyValuePair.718"* %0, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %2, i64 0, i32 1, i32 0
  %46 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %45, align 8
  %47 = icmp eq %"class.blink::protocol::Binary::Impl"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %46, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %49) #17
  br label %50

50:                                               ; preds = %48, %43
  %51 = ptrtoint %"class.blink::protocol::Binary::Impl"* %46 to i64
  %52 = bitcast %class.scoped_refptr.719* %44 to i64*
  %53 = getelementptr inbounds %class.scoped_refptr.719, %class.scoped_refptr.719* %44, i64 0, i32 0
  %54 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.blink::protocol::Binary::Impl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %54, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %57, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #17
  %59 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %57, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %69

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %57, i64 -2
  %64 = bitcast %"class.base::RefCounted.721"* %63 to %"class.blink::protocol::Binary::Impl"*
  %65 = bitcast %"class.base::RefCounted.721"* %63 to void (%"class.blink::protocol::Binary::Impl"*)***
  %66 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %66, i64 1
  %68 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %67, align 8
  tail call void %68(%"class.blink::protocol::Binary::Impl"* nonnull %64) #17
  br label %69

69:                                               ; preds = %50, %56, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #17
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Report"* @_ZN5blink25MakeGarbageCollectedTraitINS_6ReportEE4CallIJRA5_KcRKN3WTF6StringERPNS_14TestReportBodyEEEEPS1_DpOT_([5 x i8]* dereferenceable(5), %"class.WTF::String"* dereferenceable(8), %"class.blink::TestReportBody"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #17
  %6 = bitcast i8* %5 to %"class.blink::Report"*
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %0, i64 0, i64 0
  %9 = icmp eq [5 x i8]* %0, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @strlen(i8* nonnull %8) #18
  br label %12

12:                                               ; preds = %3, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %8, i64 %13) #17
  %14 = bitcast %"class.blink::TestReportBody"** %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %5 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %5, i64 8
  %18 = bitcast i8* %17 to i64**
  store i64* null, i64** %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 16
  %22 = bitcast i8* %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #17
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %29
  call void @llvm.trap() #17
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %24, %12
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds i8, i8* %5, i64 24
  %45 = bitcast i8* %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #17
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  call void @llvm.trap() #17
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %41, %47, %62
  %65 = getelementptr inbounds i8, i8* %5, i64 32
  %66 = bitcast i8* %65 to i64*
  store i64 %15, i64* %66, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #17
  br label %82

82:                                               ; preds = %64, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  %83 = getelementptr inbounds i8, i8* %5, i64 -4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = or i16 %85, 1
  store atomic i16 %86, i16* %84 release, align 2
  ret %"class.blink::Report"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ReportD2Ev(%"class.blink::Report"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ReportD0Ev(%"class.blink::Report"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink6ReportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink6Report5TraceEPNS_7VisitorE(%"class.blink::Report"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.3874"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv) #17
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::Report", %"class.blink::Report"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink6Report18GetWrapperTypeInfoEv(%"class.blink::Report"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6Report18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10ReportBodyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorResourceContentLoader"*
  tail call void @_ZNK5blink30InspectorResourceContentLoader5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContentLoader"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink30InspectorResourceContentLoader5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContentLoader"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10LocalFrameEEENS_12KeyValuePairIS5_NS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS_10HashTraitsIS8_EENSD_ISB_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINSD_IS5_EENSD_ISH_EEEESN_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.733"**
  %4 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.733"* %4, null
  br i1 %5, label %65, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair.733"* %12, %4
  br i1 %13, label %65, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %61
  %20 = phi %"struct.WTF::KeyValuePair.733"* [ %12, %14 ], [ %62, %61 ]
  %21 = phi %"struct.WTF::KeyValuePair.733"* [ %11, %14 ], [ %20, %61 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %22, align 8
  %24 = ptrtoint %"class.blink::LocalFrame"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %61
    i64 0, label %61
  ]

25:                                               ; preds = %19
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #17
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #17
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = icmp eq %"class.blink::ThreadState"* %35, null
  br i1 %36, label %61, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %23, i64 -1, i32 66
  %39 = getelementptr inbounds i8, i8* %38, i64 6
  %40 = bitcast i8* %39 to i16*
  %41 = load i16, i16* %40, align 2
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %61

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %21, i64 -1, i32 1
  %46 = bitcast %"class.WTF::HashMap.735"* %45 to %"class.WTF::ConditionalDestructor.737"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15DOMWrapperWorldEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.737"* %46) #17
  %47 = bitcast %"struct.WTF::KeyValuePair.733"* %20 to i64*
  store atomic i64 -1, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %44
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #17
  br label %52

52:                                               ; preds = %44, %50
  %53 = bitcast %"class.WTF::HashMap.735"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %53, i8 0, i64 24, i1 false) #17
  %54 = load i32, i32* %16, align 8
  %55 = add i32 %54, 1
  %56 = and i32 %55, 2147483647
  %57 = and i32 %54, -2147483648
  %58 = or i32 %56, %57
  store i32 %58, i32* %16, align 8
  %59 = load i32, i32* %18, align 4
  %60 = add i32 %59, -1
  store i32 %60, i32* %18, align 4
  br label %61

61:                                               ; preds = %37, %19, %19, %32, %52
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.733", %"struct.WTF::KeyValuePair.733"* %20, i64 -1
  %63 = load %"struct.WTF::KeyValuePair.733"*, %"struct.WTF::KeyValuePair.733"** %3, align 8
  %64 = icmp ult %"struct.WTF::KeyValuePair.733"* %62, %63
  br i1 %64, label %65, label %19

65:                                               ; preds = %61, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8protocol4Page10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Page::Backend"*) local_unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink18InspectorPageAgent14stopScreencastEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink18InspectorPageAgent14stopScreencastEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink18InspectorPageAgent25addScriptToEvaluateOnLoadERKN3WTF6StringEPS2_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink18InspectorPageAgent25addScriptToEvaluateOnLoadERKN3WTF6StringEPS2_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blinkL23CachedResourcesForFrameEPNS_10LocalFrameEb: argument 0"}
!13 = distinct !{!13, !"_ZN5blinkL23CachedResourcesForFrameEPNS_10LocalFrameEb"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink18InspectorPageAgent18UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink18InspectorPageAgent18UrlWithoutFragmentERKNS_4KURLE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink18InspectorPageAgent15getResourceTreeEPNSt3__110unique_ptrINS_8protocol4Page17FrameResourceTreeENS1_14default_deleteIS5_EEEE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink18InspectorPageAgent15getResourceTreeEPNSt3__110unique_ptrINS_8protocol4Page17FrameResourceTreeENS1_14default_deleteIS5_EEEE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink18InspectorPageAgent12getFrameTreeEPNSt3__110unique_ptrINS_8protocol4Page9FrameTreeENS1_14default_deleteIS5_EEEE: argument 0"}
!22 = distinct !{!22, !"_ZN5blink18InspectorPageAgent12getFrameTreeEPNSt3__110unique_ptrINS_8protocol4Page9FrameTreeENS1_14default_deleteIS5_EEEE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink22WrapPersistentInternalINS_18InspectorPageAgentEEENS_10PersistentIT_EEPS3_: argument 0"}
!25 = distinct !{!25, !"_ZN5blink22WrapPersistentInternalINS_18InspectorPageAgentEEENS_10PersistentIT_EEPS3_"}
!26 = !{!27, !29, !31}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol4Page7Backend26GetResourceContentCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES8_S8_SH_EEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_NSt3__110unique_ptrINS3_8protocol4Page7Backend26GetResourceContentCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES8_S8_SH_EEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES6_NSt3__110unique_ptrINS1_8protocol4Page7Backend26GetResourceContentCallbackENS7_14default_deleteISC_EEEEEJNS1_10PersistentIS2_EES6_S6_SF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES6_NSt3__110unique_ptrINS1_8protocol4Page7Backend26GetResourceContentCallbackENS7_14default_deleteISC_EEEEEJNS1_10PersistentIS2_EES6_S6_SF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!31 = distinct !{!31, !32, !"_ZN3WTF4BindIMN5blink18InspectorPageAgentEFvRKNS_6StringES5_NSt3__110unique_ptrINS1_8protocol4Page7Backend26GetResourceContentCallbackENS6_14default_deleteISB_EEEEEJNS1_10PersistentIS2_EES5_S5_SE_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN3WTF4BindIMN5blink18InspectorPageAgentEFvRKNS_6StringES5_NSt3__110unique_ptrINS1_8protocol4Page7Backend26GetResourceContentCallbackENS6_14default_deleteISB_EEEEEJNS1_10PersistentIS2_EES5_S5_SE_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN5blink22WrapPersistentInternalINS_18InspectorPageAgentEEENS_10PersistentIT_EEPS3_: argument 0"}
!35 = distinct !{!35, !"_ZN5blink22WrapPersistentInternalINS_18InspectorPageAgentEEENS_10PersistentIT_EEPS3_"}
!36 = !{!37, !39, !41}
!37 = distinct !{!37, !38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_S8_bbNSt3__110unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES8_S8_S8_RKbSN_SH_EEEDcOT0_DpOT1_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18InspectorPageAgentEFvRKN3WTF6StringES8_S8_bbNSt3__110unique_ptrINS3_8protocol4Page7Backend24SearchInResourceCallbackENS9_14default_deleteISE_EEEEEJNS3_10PersistentIS4_EES8_S8_S8_RKbSN_SH_EEEDcOT0_DpOT1_"}
!39 = distinct !{!39, !40, !"_ZN4base8BindOnceIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES6_S6_bbNSt3__110unique_ptrINS1_8protocol4Page7Backend24SearchInResourceCallbackENS7_14default_deleteISC_EEEEEJNS1_10PersistentIS2_EES6_S6_S6_RKbSL_SF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8BindOnceIMN5blink18InspectorPageAgentEFvRKN3WTF6StringES6_S6_bbNSt3__110unique_ptrINS1_8protocol4Page7Backend24SearchInResourceCallbackENS7_14default_deleteISC_EEEEEJNS1_10PersistentIS2_EES6_S6_S6_RKbSL_SF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!41 = distinct !{!41, !42, !"_ZN3WTF4BindIMN5blink18InspectorPageAgentEFvRKNS_6StringES5_S5_bbNSt3__110unique_ptrINS1_8protocol4Page7Backend24SearchInResourceCallbackENS6_14default_deleteISB_EEEEEJNS1_10PersistentIS2_EES5_S5_S5_RKbSK_SE_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZN3WTF4BindIMN5blink18InspectorPageAgentEFvRKNS_6StringES5_S5_bbNSt3__110unique_ptrINS1_8protocol4Page7Backend24SearchInResourceCallbackENS6_14default_deleteISB_EEEEEJNS1_10PersistentIS2_EES5_S5_S5_RKbSK_SE_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN5blink18InspectorPageAgent18UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!45 = distinct !{!45, !"_ZN5blink18InspectorPageAgent18UrlWithoutFragmentERKNS_4KURLE"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK5blink18OriginTrialContext32GetOriginTrialResultsForDevtoolsEv: argument 0"}
!48 = distinct !{!48, !"_ZNK5blink18OriginTrialContext32GetOriginTrialResultsForDevtoolsEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK5blink10TrialToken12feature_nameEv: argument 0"}
!51 = distinct !{!51, !"_ZNK5blink10TrialToken12feature_nameEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN5blink18InspectorPageAgent15startScreencastEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS3_IiEES7_S7_S7_: argument 0"}
!54 = distinct !{!54, !"_ZN5blink18InspectorPageAgent15startScreencastEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS3_IiEES7_S7_S7_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN5blink18InspectorPageAgent14stopScreencastEv: argument 0"}
!57 = distinct !{!57, !"_ZN5blink18InspectorPageAgent14stopScreencastEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN5blink18InspectorPageAgent21clearCompilationCacheEv: argument 0"}
!60 = distinct !{!60, !"_ZN5blink18InspectorPageAgent21clearCompilationCacheEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN5blink18InspectorPageAgent15waitForDebuggerEv: argument 0"}
!63 = distinct !{!63, !"_ZN5blink18InspectorPageAgent15waitForDebuggerEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN5blink18InspectorPageAgent29setInterceptFileChooserDialogEb: argument 0"}
!66 = distinct !{!66, !"_ZN5blink18InspectorPageAgent29setInterceptFileChooserDialogEb"}
!67 = distinct !{!67, !68}
!68 = !{!"llvm.loop.unroll.disable"}
!69 = distinct !{!69, !68}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !68}
!72 = distinct !{!72, !68}
!73 = distinct !{!73, !68}
!74 = distinct !{!74, !68}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv: argument 0"}
!77 = distinct !{!77, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv: argument 0"}
!80 = distinct !{!80, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv: argument 0"}
!83 = distinct !{!83, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_IN5blink17OriginTrialResultEEEE10EmptyValueEv"}
!84 = distinct !{!84, !68}
!85 = distinct !{!85, !68}
!86 = distinct !{!86, !68}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!89 = distinct !{!89, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!92 = distinct !{!92, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!95 = distinct !{!95, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!98 = distinct !{!98, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!101 = distinct !{!101, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink10WeakMemberINS2_10LocalFrameEEEEENS1_INS_7HashMapINS_6StringE13scoped_refptrINS2_15DOMWrapperWorldEENS_10StringHashENS1_IS8_EENS1_ISB_EENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
!102 = distinct !{!102, !68}
!103 = distinct !{!103, !68}
!104 = distinct !{!104, !68}
