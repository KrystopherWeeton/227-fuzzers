; ModuleID = '../../third_party/swiftshader/src/Renderer/Renderer.cpp'
source_filename = "../../third_party/swiftshader/src/Renderer/Renderer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.sw::Constants" = type { [16 x i32], [16 x i32], [16 x i32], [17 x [4 x i16]], [8 x i8], [17 x %"struct.sw::float4"], [17 x %"struct.sw::float4"], [16 x i32], [16 x [8 x i8]], [16 x [8 x i8]], [16 x [4 x i16]], [16 x [4 x i16]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x i64], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [4 x i32]], [16 x [2 x i32]], [16 x [2 x i32]], [16 x [2 x i32]], [16 x [2 x i32]], [16 x [2 x i64]], [16 x [2 x i64]], [16 x [2 x i64]], [16 x [2 x i64]], [4 x [4 x i16]], [4 x [4 x i32]], [8 x [4 x i16]], [256 x i16], [64 x i16], [32 x i16], [4096 x i16], [4096 x i16], [4 x [16 x %"struct.sw::float4"]], [4 x [16 x %"struct.sw::float4"]], [16 x %"struct.sw::float4"], [4 x i32], [4 x i32], [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [4 x i32], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [65536 x float] }
%"struct.sw::float4" = type { float, float, float, float }
%"struct.sw::Polygon" = type <{ [16 x %"struct.sw::float4"], [16 x [16 x %"struct.sw::float4"*]], i32, i32, i32, [4 x i8] }>
%"struct.sw::Query" = type { i8, %"class.sw::AtomicInt", i32, %"class.sw::AtomicInt" }
%"struct.sw::DrawCall" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)*, i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)*, void (%"struct.sw::Primitive"*, i32, i32, %"struct.sw::DrawData"*)*, { i64, i64 }, %"struct.sw::SetupProcessor::State", [32 x %"class.sw::Resource"*], %"class.sw::Resource"*, [8 x %"class.sw::Surface"*], %"class.sw::Surface"*, %"class.sw::Surface"*, [32 x %"class.sw::Resource"*], [24 x %"class.sw::Resource"*], [24 x %"class.sw::Resource"*], [64 x %"class.sw::Resource"*], i32, i32, i32, i32, i32, i32, %"class.std::__1::list"*, %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"struct.sw::DrawData"* }
%"class.std::__1::shared_ptr" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.sw::Vertex" = type { %union.anon, i32, i32, float, float, i32, [3 x i32] }
%union.anon = type { [34 x %"struct.sw::float4"] }
%"struct.sw::VertexTask" = type { i32, i32, [8 x i8], %"struct.sw::VertexCache" }
%"struct.sw::VertexCache" = type { [16 x [4 x %"struct.sw::Vertex"]], [16 x i32], i32, [12 x i8] }
%"struct.sw::Primitive" = type { i32, i32, [8 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::PlaneEquation", %"struct.sw::PlaneEquation", %union.anon.2, float, i64, i64, [2 x %"struct.sw::Primitive::Span"], [8192 x %"struct.sw::Primitive::Span"], [2 x %"struct.sw::Primitive::Span"], [8 x i8] }
%"struct.sw::PlaneEquation" = type { %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%union.anon.2 = type { [32 x [4 x %"struct.sw::PlaneEquation"]] }
%"struct.sw::Primitive::Span" = type { i16, i16 }
%"struct.sw::Triangle" = type { %"struct.sw::Vertex", %"struct.sw::Vertex", %"struct.sw::Vertex" }
%"struct.sw::SetupProcessor::State" = type { %"struct.sw::SetupProcessor::States", i32 }
%"struct.sw::SetupProcessor::States" = type { i32, %union.anon.4 }
%union.anon.4 = type { [32 x [4 x %"struct.sw::SetupProcessor::States::Gradient"]] }
%"struct.sw::SetupProcessor::States::Gradient" = type { i8 }
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.6, %union.anon.8, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.6 = type { i64 }
%union.anon.8 = type { i64 }
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"struct.sw::DrawData" = type { %"struct.sw::Constants"*, [32 x i8*], [32 x i32], [8 x i8], [32 x %"struct.sw::Texture"], i8*, [8 x i8], %union.anon.1, %"struct.sw::DrawData::PS", i32, [12 x i8], %"struct.sw::VertexProcessor::PointSprite", float, [2 x %"struct.sw::PixelProcessor::Stencil"], [8 x i8], %"struct.sw::PixelProcessor::Fog", %"struct.sw::PixelProcessor::Factor", [16 x i32], [8 x %"struct.sw::TextureStage::Uniforms"], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", float, float, float, float, [6 x %"struct.sw::Plane"], [8 x i32*], [8 x i32], [8 x i32], float*, i32, i32, i8*, i32, i32, i32, i32, i32, i32, %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::Texture" = type { [14 x %"struct.sw::Mipmap"], float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x [4 x i16]], [4 x %"struct.sw::float4"], float, i32, i32, float, float, [12 x i8] }
%"struct.sw::Mipmap" = type { [6 x i8*], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [8 x i8], %"struct.sw::int4", %"struct.sw::int4" }
%"struct.sw::int4" = type { i32, i32, i32, i32 }
%union.anon.1 = type { %"struct.sw::DrawData::VS" }
%"struct.sw::DrawData::VS" = type { [260 x %"struct.sw::float4"], [24 x i8*], [64 x i8*], [64 x i32], [64 x i32], [64 x i32], [64 x i32], [16 x %"struct.sw::int4"], [16 x i8] }
%"struct.sw::DrawData::PS" = type { [8 x [4 x [4 x i16]]], [264 x %"struct.sw::float4"], [24 x i8*], [16 x %"struct.sw::int4"], [16 x i8] }
%"struct.sw::VertexProcessor::PointSprite" = type { %"struct.sw::float4", float, float, float, float, float, [12 x i8] }
%"struct.sw::PixelProcessor::Stencil" = type { i64, i64, i64, i64, i64, i64 }
%"struct.sw::PixelProcessor::Fog" = type { %"struct.sw::float4", %"struct.sw::float4", [3 x [4 x i16]], [8 x i8], [3 x %"struct.sw::float4"], %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::PixelProcessor::Factor" = type { [4 x [4 x i16]], [4 x i16], [4 x [4 x i16]], [8 x i8], [4 x %"struct.sw::float4"], [4 x [4 x i16]], [4 x %"struct.sw::float4"] }
%"struct.sw::TextureStage::Uniforms" = type { [4 x [4 x i16]], [2 x [2 x %"struct.sw::float4"]], [2 x [2 x [4 x i16]]], [4 x i16], [4 x i16] }
%"struct.sw::Plane" = type { float, float, float, float }
%"class.sw::Renderer" = type { %"class.sw::VertexProcessor.base", [15 x i8], %"class.sw::PixelProcessor", %"class.sw::SetupProcessor", %"class.sw::Context"*, %"class.sw::Clipper"*, %"class.sw::Blitter"*, %"struct.sw::Viewport", %"struct.sw::RectT", i32, [16 x %"struct.sw::Triangle"*], [16 x %"struct.sw::Primitive"*], [6 x %"struct.sw::Plane"], [6 x %"struct.sw::Plane"], i8, %"class.sw::AtomicInt", %"class.sw::AtomicInt", [16 x %"class.sw::Thread"*], [16 x %"class.sw::Event"*], [16 x %"class.sw::Event"*], %"class.sw::Event"*, [16 x %"struct.sw::Renderer::PrimitiveProgress"], [16 x %"struct.sw::Renderer::PixelProgress"], [16 x %"struct.sw::Renderer::Task"], [16 x %"struct.sw::DrawCall"*], [16 x %"struct.sw::DrawCall"*], %"class.sw::AtomicInt", %"class.sw::AtomicInt", [32 x %"struct.sw::Renderer::Task"], %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::MutexLock", [16 x %"struct.sw::VertexTask"*], %"class.sw::SwiftConfig"*, %"class.std::__1::list", %"class.sw::Resource"*, %"struct.sw::VertexProcessor::State", %"struct.sw::SetupProcessor::State", %"struct.sw::PixelProcessor::State", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr" }
%"class.sw::VertexProcessor.base" = type <{ i32 (...)**, [8 x i8], [260 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::VertexProcessor::PointSprite", %"struct.sw::VertexProcessor::FixedFunction", [24 x %"struct.sw::VertexProcessor::UniformBufferInfo"], [64 x %"struct.sw::VertexProcessor::TransformFeedbackInfo"], %"class.sw::Context"*, %"class.sw::LRUCache"*, [12 x %"struct.sw::Matrix"], %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", [12 x %"struct.sw::Matrix"], i8, [12 x i8], i8, i8, i8, i8 }>
%"struct.sw::VertexProcessor::FixedFunction" = type { [12 x [4 x %"struct.sw::float4"]], [12 x [4 x %"struct.sw::float4"]], [12 x [4 x %"struct.sw::float4"]], [8 x [4 x %"struct.sw::float4"]], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x float], %"struct.sw::float4", %"struct.sw::float4", float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::VertexProcessor::UniformBufferInfo" = type <{ %"class.sw::Resource"*, i32, [4 x i8] }>
%"struct.sw::VertexProcessor::TransformFeedbackInfo" = type <{ %"class.sw::Resource"*, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.sw::LRUCache" = type opaque
%"struct.sw::Matrix" = type { [4 x [4 x float]] }
%"class.sw::PixelProcessor" = type { i32 (...)**, [8 x [4 x [4 x i16]]], [8 x i8], [264 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::PixelProcessor::Stencil", %"struct.sw::PixelProcessor::Stencil", %"struct.sw::PixelProcessor::Fog", %"struct.sw::PixelProcessor::Factor", [24 x %"struct.sw::PixelProcessor::UniformBufferInfo"], %"class.sw::Context"*, %"class.sw::LRUCache.29"* }
%"struct.sw::PixelProcessor::UniformBufferInfo" = type <{ %"class.sw::Resource"*, i32, [4 x i8] }>
%"class.sw::LRUCache.29" = type opaque
%"class.sw::SetupProcessor" = type { %"class.sw::Context"*, %"class.sw::LRUCache.30"* }
%"class.sw::LRUCache.30" = type opaque
%"class.sw::Clipper" = type { float }
%"class.sw::Blitter" = type { i32 (...)**, %"class.sw::LRUCache.31"*, %"class.sw::MutexLock" }
%"class.sw::LRUCache.31" = type opaque
%"struct.sw::Viewport" = type { float, float, float, float, float, float }
%"struct.sw::RectT" = type { i32, i32, i32, i32 }
%"class.sw::Thread" = type <{ i64, i8, [7 x i8] }>
%"struct.sw::Renderer::PrimitiveProgress" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::Renderer::PixelProgress" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::Renderer::Task" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"class.sw::SwiftConfig" = type { %"struct.sw::SwiftConfig::Configuration", %"class.sw::Thread"*, i8, %"class.sw::MutexLock", i8, %"class.sw::Socket"*, i32, i8* }
%"struct.sw::SwiftConfig::Configuration" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i8, i8, i8, i8, i8, %"struct.std::__1::array", i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i32, i8 }
%"struct.std::__1::array" = type { [10 x i32] }
%"class.sw::Socket" = type { i32 }
%"struct.sw::VertexProcessor::State" = type <{ %"struct.sw::VertexProcessor::States", i32, [4 x i8] }>
%"struct.sw::VertexProcessor::States" = type { i64, i48, [9 x i8], [3 x i8], [8 x %"struct.sw::VertexProcessor::States::TextureState"], [16 x %"struct.sw::Sampler::State"], [32 x %"struct.sw::VertexProcessor::States::Input"], [34 x %"struct.sw::VertexProcessor::States::Output"] }
%"struct.sw::VertexProcessor::States::TextureState" = type { i8, i8, [2 x i8] }
%"struct.sw::Sampler::State" = type { [6 x i8], [2 x i8] }
%"struct.sw::VertexProcessor::States::Input" = type { i16, [2 x i8] }
%"struct.sw::VertexProcessor::States::Output" = type { %union.anon.34, %union.anon.36 }
%union.anon.34 = type { i8 }
%union.anon.36 = type { i8 }
%"struct.sw::PixelProcessor::State" = type { %"struct.sw::PixelProcessor::States", i32 }
%"struct.sw::PixelProcessor::States" = type { i32, i32, i32, i16, i32, [8 x i32], i16, [2 x i8], [16 x %"struct.sw::Sampler::State"], [8 x %"struct.sw::TextureStage::State"], %union.anon.40 }
%"struct.sw::TextureStage::State" = type { [6 x i8], [2 x i8] }
%union.anon.40 = type { [32 x %"struct.sw::PixelProcessor::States::Interpolant"] }
%"struct.sw::PixelProcessor::States::Interpolant" = type { i16 }
%"class.sw::Context" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, [3 x i8], float, float, float, [8 x i8], [8 x %"class.sw::TextureStage"], [32 x %"class.sw::Sampler"], [32 x %"class.sw::Resource"*], [32 x %"struct.sw::Stream"], %"class.sw::Resource"*, i8, [3 x i8], float, float, i8, [16 x i8], [3 x i8], [8 x i32], i8, i8, [2 x i8], [8 x i32], [8 x i8], [4 x i8], [8 x %"class.sw::Surface"*], [8 x i32], %"class.sw::Surface"*, i32, [4 x i8], %"class.sw::Surface"*, i32, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, float, i32, i8, i8, [8 x i8], [2 x i8], [8 x %"struct.sw::Point"], i32, i32, i32, i32, i8, i8, i8, i8, i64, i8, i8, [2 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, i8, [2 x i8], float, [8 x i32], i8, [3 x i8], i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.sw::TextureStage" = type { %"struct.sw::TextureStage::Uniforms", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.sw::Sampler"*, %"class.sw::TextureStage"*, [8 x i8] }
%"class.sw::Sampler" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.sw::Texture", float, [12 x i8] }>
%"struct.sw::Stream" = type <{ %"struct.sw::StreamResource", i32, i8, i8, [2 x i8] }>
%"struct.sw::StreamResource" = type { %"class.sw::Resource"*, i8*, i32 }
%"class.sw::PixelShader" = type { %"class.sw::Shader.base", [32 x [4 x %"struct.sw::Shader::Semantic"]], i8, i8, i8, i8, i8, [6 x i8] }
%"class.sw::Shader.base" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon.11, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8 }>
%"struct.sw::Shader::Limits" = type { i32, i32, i32, i32 }
%union.anon.11 = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"**, %"class.std::__1::__compressed_pair.22" }
%"struct.sw::Shader::Instruction" = type <{ i32 (...)**, i32, %union.anon.13, i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"struct.sw::Shader::DestinationParameter", [5 x %"struct.sw::Shader::SourceParameter"], %union.anon.20, [4 x i8] }>
%union.anon.13 = type { i32 }
%"struct.sw::Shader::DestinationParameter" = type { %"struct.sw::Shader::Parameter.base", %union.anon.18, i8, i8 }
%"struct.sw::Shader::Parameter.base" = type <{ %union.anon.15, i8 }>
%union.anon.15 = type { %struct.anon.16 }
%struct.anon.16 = type { i32, %"struct.sw::Shader::Relative" }
%"struct.sw::Shader::Relative" = type { i8, i32, i8, i32, i8 }
%union.anon.18 = type { i8 }
%"struct.sw::Shader::SourceParameter" = type { %"struct.sw::Shader::Parameter.base", [3 x i8] }
%union.anon.20 = type { i32 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.sw::Shader::Instruction"** }
%"struct.sw::Shader::Semantic" = type { i8, i8, i8, i8 }
%"class.sw::VertexShader" = type <{ %"class.sw::Shader.base", [32 x %"struct.sw::Shader::Semantic"], [34 x [4 x %"struct.sw::Shader::Semantic"]], [32 x i8], [3 x i8], i32, i32, i8, i8, i8, [5 x i8] }>
%"struct.sw::Point" = type { %union.anon.27 }
%union.anon.27 = type { [3 x float] }
%"class.sw::VertexProcessor" = type <{ i32 (...)**, [8 x i8], [260 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::VertexProcessor::PointSprite", %"struct.sw::VertexProcessor::FixedFunction", [24 x %"struct.sw::VertexProcessor::UniformBufferInfo"], [64 x %"struct.sw::VertexProcessor::TransformFeedbackInfo"], %"class.sw::Context"*, %"class.sw::LRUCache"*, [12 x %"struct.sw::Matrix"], %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", [12 x %"struct.sw::Matrix"], i8, [12 x i8], i8, i8, i8, i8, [15 x i8] }>
%union.pthread_mutexattr_t = type { i32 }
%"class.rr::Config::Edit" = type { i32, i8, %"class.std::__1::vector.45" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.47" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.sw::Query"* }
%"class.sw::Shader" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon.11, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.sw::SliceRectT" = type { %"struct.sw::RectT", i32 }
%"struct.sw::SliceRectT.42" = type opaque
%"struct.sw::Blitter::Options" = type { %union.anon.43, i8 }
%union.anon.43 = type { %struct.anon.44 }
%struct.anon.44 = type { i8 }
%"struct.sw::Parameters" = type { %"class.sw::Renderer"*, i32 }
%"struct.sw::Color" = type { float, float, float, float }

$_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev = comdat any

$_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE6removeERKS3_ = comdat any

$_ZNSt3__110__list_impIPN2sw5QueryENS_9allocatorIS3_EEE5clearEv = comdat any

$_ZN2sw14PixelProcessor6StatesC2Ev = comdat any

$_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE6spliceENS_21__list_const_iteratorIS3_PvEERS6_S9_S9_ = comdat any

@disableServer = hidden local_unnamed_addr global i8 1, align 1
@_ZN2sw11threadCountE = hidden local_unnamed_addr global %"class.sw::AtomicInt" { %"struct.std::__1::atomic" { %"struct.std::__1::__atomic_base" { %"struct.std::__1::__atomic_base.0" { %"struct.std::__1::__cxx_atomic_impl" { %"struct.std::__1::__cxx_atomic_base_impl" { i32 1 } } } } } }, align 4
@_ZN2sw8Renderer9unitCountE = hidden local_unnamed_addr global %"class.sw::AtomicInt" { %"struct.std::__1::atomic" { %"struct.std::__1::__atomic_base" { %"struct.std::__1::__atomic_base.0" { %"struct.std::__1::__cxx_atomic_impl" { %"struct.std::__1::__cxx_atomic_base_impl" { i32 1 } } } } } }, align 4
@_ZN2sw8Renderer12clusterCountE = hidden local_unnamed_addr global %"class.sw::AtomicInt" { %"struct.std::__1::atomic" { %"struct.std::__1::__atomic_base" { %"struct.std::__1::__atomic_base.0" { %"struct.std::__1::__cxx_atomic_impl" { %"struct.std::__1::__cxx_atomic_base_impl" { i32 1 } } } } } }, align 4
@_ZN2sw12logPrecisionE = hidden local_unnamed_addr global i32 2, align 4
@_ZN2sw12expPrecisionE = hidden local_unnamed_addr global i32 2, align 4
@_ZN2sw12rcpPrecisionE = hidden local_unnamed_addr global i32 2, align 4
@_ZN2sw12rsqPrecisionE = hidden local_unnamed_addr global i32 2, align 4
@_ZN2sw21perspectiveCorrectionE = hidden local_unnamed_addr global i8 1, align 1
@_ZN2sw9constantsE = external global %"struct.sw::Constants", align 16
@_ZTVN2sw8RendererE = hidden unnamed_addr constant { [4 x i8*], [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sw::Renderer"*)* @_ZN2sw8RendererD2Ev to i8*), i8* bitcast (void (%"class.sw::Renderer"*)* @_ZN2sw8RendererD0Ev to i8*)], [4 x i8*] [i8* inttoptr (i64 -12672 to i8*), i8* null, i8* bitcast (void (%"class.sw::Renderer"*)* @_ZThn12672_N2sw8RendererD1Ev to i8*), i8* bitcast (void (%"class.sw::Renderer"*)* @_ZThn12672_N2sw8RendererD0Ev to i8*)] }, align 8
@_ZN2sw24symmetricNormalizedDepthE = external local_unnamed_addr global i8, align 1
@_ZN2sw24complementaryDepthBufferE = external local_unnamed_addr global i8, align 1
@_ZZN2sw8Renderer4drawENS_8DrawTypeEjjbE1X = internal unnamed_addr constant <{ [16 x float], <{ float, float, [14 x float] }>, <{ float, float, float, float, [12 x float] }>, <{ [8 x float], [8 x float] }>, [16 x float] }> <{ [16 x float] zeroinitializer, <{ float, float, [14 x float] }> <{ float -2.500000e-01, float 2.500000e-01, [14 x float] zeroinitializer }>, <{ float, float, float, float, [12 x float] }> <{ float 0xBFD3333340000000, float 0x3FB99999A0000000, float 0x3FD3333340000000, float 0xBFB99999A0000000, [12 x float] zeroinitializer }>, <{ [8 x float], [8 x float] }> <{ [8 x float] [float 1.875000e-01, float -3.125000e-01, float 3.125000e-01, float -4.375000e-01, float -6.250000e-02, float 4.375000e-01, float 6.250000e-02, float -1.875000e-01], [8 x float] zeroinitializer }>, [16 x float] [float 0x3FD056D5C0000000, float 0xBFBD916880000000, float 0x3FC542C3C0000000, float 0xBFC765FD80000000, float 0x3FCD59B3E0000000, float 0xBFDA71DE60000000, float 0xBFC6B1C440000000, float 0xBFAD8ADAC0000000, float 0x3FD8E703A0000000, float 0xBFDDCC6400000000, float 0x3FDA425AE0000000, float 0x3FDB2FEC60000000, float 0xBFCAFEC560000000, float 0x3FD961E500000000, float 0xBFD10CB2A0000000, float 0xBFD8C7E280000000] }>, align 16
@_ZZN2sw8Renderer4drawENS_8DrawTypeEjjbE1Y = internal unnamed_addr constant <{ [16 x float], <{ float, float, [14 x float] }>, <{ float, float, float, float, [12 x float] }>, <{ [8 x float], [8 x float] }>, [16 x float] }> <{ [16 x float] zeroinitializer, <{ float, float, [14 x float] }> <{ float -2.500000e-01, float 2.500000e-01, [14 x float] zeroinitializer }>, <{ float, float, float, float, [12 x float] }> <{ float 0xBFB99999A0000000, float 0xBFD3333340000000, float 0x3FB99999A0000000, float 0x3FD3333340000000, [12 x float] zeroinitializer }>, <{ [8 x float], [8 x float] }> <{ [8 x float] [float -4.375000e-01, float -3.125000e-01, float -1.875000e-01, float -6.250000e-02, float 6.250000e-02, float 1.875000e-01, float 3.125000e-01, float 4.375000e-01], [8 x float] zeroinitializer }>, [16 x float] [float 0xBFDCD1B720000000, float 0x3FC81A36E0000000, float 0x3FD793DDA0000000, float 0xBFDDE00D20000000, float 0xBFB1A9FBE0000000, float 0xBFC0D4FE00000000, float 0x3FDFFE5CA0000000, float 0x3FB2A30560000000, float 0x3FBB645A20000000, float 0xBFD3C01A40000000, float 0x3FD7D70A40000000, float 0xBFC3CD35A0000000, float 0xBFBC361140000000, float 0xBFD6F69440000000, float 0x3FC6E63200000000, float 0x3F9B8BAC80000000] }>, align 16
@_ZN2sw18leadingVertexFirstE = external local_unnamed_addr global i8, align 1
@__const._ZN2sw8Renderer10setupPointERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE.polygon = private unnamed_addr constant %"struct.sw::Polygon" <{ [16 x %"struct.sw::float4"] [%"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.sw::float4" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], [16 x [16 x %"struct.sw::float4"*]] [[16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)], [16 x %"struct.sw::float4"*] [%"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*), %"struct.sw::float4"* inttoptr (i64 -6148914691236517206 to %"struct.sw::float4"*)]], i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 16
@_ZN2sw24transparencyAntialiasingE = external local_unnamed_addr global i32, align 4
@_ZN2sw14precacheVertexE = external local_unnamed_addr global i8, align 1
@_ZN2sw13precacheSetupE = external local_unnamed_addr global i8, align 1
@_ZN2sw13precachePixelE = external local_unnamed_addr global i8, align 1
@_ZN2sw13forceWindowedE = external local_unnamed_addr global i8, align 1
@_ZN2sw13postBlendSRGBE = external local_unnamed_addr global i8, align 1
@_ZN2sw18exactColorRoundingE = external local_unnamed_addr global i8, align 1
@_ZN2sw19forceClearRegistersE = external local_unnamed_addr global i8, align 1
@_ZZN2swL26setGlobalRenderingSettingsENS_11ConventionsEbE11initialized = internal unnamed_addr global i1 false, align 1
@_ZN2sw22halfIntegerCoordinatesE = external local_unnamed_addr global i8, align 1
@_ZN2sw19booleanFaceRegisterE = external local_unnamed_addr global i8, align 1
@_ZN2sw25fullPixelPositionRegisterE = external local_unnamed_addr global i8, align 1
@_ZN2sw14secondaryColorE = external local_unnamed_addr global i8, align 1
@_ZN2sw19colorsDefaultToZeroE = external local_unnamed_addr global i8, align 1
@_ZN2sw5CPUID5coresE = external local_unnamed_addr global i32, align 4
@_ZN2sw5CPUID8affinityE = external local_unnamed_addr global i32, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@switch.table._ZN2sw8Renderer19updateConfigurationEb = private unnamed_addr constant [3 x i32] [i32 0, i32 4, i32 5], align 4

@_ZN2sw5QueryC1ENS0_4TypeE = hidden unnamed_addr alias void (%"struct.sw::Query"*, i32), void (%"struct.sw::Query"*, i32)* @_ZN2sw5QueryC2ENS0_4TypeE
@_ZN2sw8DrawCallC1Ev = hidden unnamed_addr alias void (%"struct.sw::DrawCall"*), void (%"struct.sw::DrawCall"*)* @_ZN2sw8DrawCallC2Ev
@_ZN2sw8DrawCallD1Ev = hidden unnamed_addr alias void (%"struct.sw::DrawCall"*), void (%"struct.sw::DrawCall"*)* @_ZN2sw8DrawCallD2Ev
@_ZN2sw8RendererC1EPNS_7ContextENS_11ConventionsEb = hidden unnamed_addr alias void (%"class.sw::Renderer"*, %"class.sw::Context"*, i56, i1), void (%"class.sw::Renderer"*, %"class.sw::Context"*, i56, i1)* @_ZN2sw8RendererC2EPNS_7ContextENS_11ConventionsEb
@_ZN2sw8RendererD1Ev = hidden unnamed_addr alias void (%"class.sw::Renderer"*), void (%"class.sw::Renderer"*)* @_ZN2sw8RendererD2Ev

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw5QueryC2ENS0_4TypeE(%"struct.sw::Query"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %0, i64 0, i32 2
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw5Query6addRefEv(%"struct.sw::Query"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1 acq_rel
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw5Query7releaseEv(%"struct.sw::Query"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i32* %2, i32 1 acq_rel
  %4 = icmp ne i32 %3, 1
  %5 = icmp eq %"struct.sw::Query"* %0, null
  %6 = or i1 %5, %4
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %0, i64 0, i32 0
  tail call void @_ZdlPv(i8* %8) #13
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8DrawCallC2Ev(%"struct.sw::DrawCall"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 9
  %3 = bitcast %"struct.sw::SetupProcessor::State"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 132, i1 false) #14
  %4 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 25
  %6 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 19
  %7 = bitcast %"struct.sw::DrawCall"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 56, i1 false)
  %8 = bitcast %"class.std::__1::list"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  %9 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 260, i32 16, i32 16, i32 264>, <4 x i32>* %9, align 8
  %10 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 23
  store i32 16, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 24
  store i32 16, i32* %11, align 4
  store atomic i32 -1, i32* %4 release, align 4
  %12 = tail call i8* @_ZN2sw8allocateEmm(i64 106448, i64 16) #15
  %13 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 30
  %14 = bitcast %"struct.sw::DrawData"** %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = bitcast i8* %12 to %"struct.sw::Constants"**
  store %"struct.sw::Constants"* @_ZN2sw9constantsE, %"struct.sw::Constants"** %15, align 16
  ret void
}

; Function Attrs: optsize
declare i8* @_ZN2sw8allocateEmm(i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8DrawCallD2Ev(%"struct.sw::DrawCall"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 25
  %3 = load %"class.std::__1::list"*, %"class.std::__1::list"** %2, align 8
  %4 = icmp eq %"class.std::__1::list"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0
  tail call void @_ZNSt3__110__list_impIPN2sw5QueryENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__list_imp"* %6) #15
  %7 = bitcast %"class.std::__1::list"* %3 to i8*
  tail call void @_ZdlPv(i8* %7) #13
  br label %8

8:                                                ; preds = %5, %1
  %9 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 30
  %10 = bitcast %"struct.sw::DrawData"** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZN2sw10deallocateEPv(i8* %11) #15
  %12 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 4
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %12) #15
  %13 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 3
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %13) #15
  %14 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %0, i64 0, i32 2
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %14) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw10deallocateEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #15
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8RendererC2EPNS_7ContextENS_11ConventionsEb(%"class.sw::Renderer"*, %"class.sw::Context"*, i56, i1 zeroext) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessorC2EPNS_7ContextE(%"class.sw::VertexProcessor"* %5, %"class.sw::Context"* %1) #15
  %6 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessorC2EPNS_7ContextE(%"class.sw::PixelProcessor"* %6, %"class.sw::Context"* %1) #15
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 3
  tail call void @_ZN2sw14SetupProcessorC2EPNS_7ContextE(%"class.sw::SetupProcessor"* %7, %"class.sw::Context"* %1) #15
  %8 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*], [4 x i8*] }, { [4 x i8*], [4 x i8*] }* @_ZTVN2sw8RendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 16
  %9 = getelementptr inbounds %"class.sw::PixelProcessor", %"class.sw::PixelProcessor"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*], [4 x i8*] }, { [4 x i8*], [4 x i8*] }* @_ZTVN2sw8RendererE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 16
  %10 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  store %"class.sw::Context"* %1, %"class.sw::Context"** %10, align 16
  %11 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 7
  %12 = bitcast %"struct.sw::Viewport"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  %13 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 0
  %14 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 6
  br label %15

15:                                               ; preds = %15, %4
  %16 = phi %"struct.sw::Plane"* [ %13, %4 ], [ %17, %15 ]
  tail call void @_ZN2sw5PlaneC1Ev(%"struct.sw::Plane"* %16) #15
  %17 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %16, i64 1
  %18 = icmp eq %"struct.sw::Plane"* %17, %14
  br i1 %18, label %19, label %15

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 0
  %21 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 6
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi %"struct.sw::Plane"* [ %20, %19 ], [ %24, %22 ]
  tail call void @_ZN2sw5PlaneC1Ev(%"struct.sw::Plane"* %23) #15
  %24 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %23, i64 1
  %25 = icmp eq %"struct.sw::Plane"* %24, %21
  br i1 %25, label %26, label %22

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %28, align 4
  %29 = getelementptr %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 0
  %30 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 31, i32 0
  %35 = bitcast %"struct.sw::Renderer::PrimitiveProgress"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 704, i1 false)
  %36 = bitcast i32* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 400, i1 false)
  %37 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %34, %union.pthread_mutexattr_t* null) #15
  %38 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34
  %39 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %38, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %38, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %39, %"struct.std::__1::__list_node_base"** %40, align 8
  %41 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %39, %"struct.std::__1::__list_node_base"** %41, align 8
  %42 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 36
  %44 = bitcast %"struct.sw::VertexProcessor::State"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 384, i1 false) #14
  %45 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 36, i32 0, i32 5, i64 0
  %46 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 36, i32 0, i32 5, i64 16
  br label %47

47:                                               ; preds = %47, %26
  %48 = phi %"struct.sw::Sampler::State"* [ %45, %26 ], [ %49, %47 ]
  tail call void @_ZN2sw7Sampler5StateC1Ev(%"struct.sw::Sampler::State"* %48) #15
  %49 = getelementptr inbounds %"struct.sw::Sampler::State", %"struct.sw::Sampler::State"* %48, i64 1
  %50 = icmp eq %"struct.sw::Sampler::State"* %49, %46
  br i1 %50, label %51, label %47

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 37
  %53 = bitcast %"struct.sw::SetupProcessor::State"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 132, i1 false) #14
  %54 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 38, i32 0
  tail call void @_ZN2sw14PixelProcessor6StatesC2Ev(%"struct.sw::PixelProcessor::States"* %54) #15
  %55 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 39
  %56 = bitcast %"class.std::__1::shared_ptr"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 48, i1 false)
  %57 = load i1, i1* @_ZZN2swL26setGlobalRenderingSettingsENS_11ConventionsEbE11initialized, align 1
  br i1 %57, label %80, label %58

58:                                               ; preds = %51
  %59 = zext i1 %3 to i8
  %60 = trunc i56 %2 to i8
  %61 = and i8 %60, 1
  store i8 %61, i8* @_ZN2sw22halfIntegerCoordinatesE, align 1
  %62 = lshr i56 %2, 8
  %63 = trunc i56 %62 to i8
  %64 = and i8 %63, 1
  store i8 %64, i8* @_ZN2sw24symmetricNormalizedDepthE, align 1
  %65 = lshr i56 %2, 16
  %66 = trunc i56 %65 to i8
  %67 = and i8 %66, 1
  store i8 %67, i8* @_ZN2sw19booleanFaceRegisterE, align 1
  %68 = lshr i56 %2, 24
  %69 = trunc i56 %68 to i8
  %70 = and i8 %69, 1
  store i8 %70, i8* @_ZN2sw25fullPixelPositionRegisterE, align 1
  %71 = lshr i56 %2, 32
  %72 = trunc i56 %71 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* @_ZN2sw18leadingVertexFirstE, align 1
  %74 = lshr i56 %2, 40
  %75 = trunc i56 %74 to i8
  %76 = and i8 %75, 1
  store i8 %76, i8* @_ZN2sw14secondaryColorE, align 1
  %77 = lshr i56 %2, 48
  %78 = trunc i56 %77 to i8
  %79 = and i8 %78, 1
  store i8 %79, i8* @_ZN2sw19colorsDefaultToZeroE, align 1
  store i8 %59, i8* @_ZN2sw18exactColorRoundingE, align 1
  store i1 true, i1* @_ZZN2swL26setGlobalRenderingSettingsENS_11ConventionsEbE11initialized, align 1
  br label %80

80:                                               ; preds = %51, %58
  tail call void @_ZN2sw14PixelProcessor15setRenderTargetEiPNS_7SurfaceEj(%"class.sw::PixelProcessor"* %6, i32 0, %"class.sw::Surface"* null, i32 0) #15
  %81 = tail call i8* @_Znwm(i64 4) #13
  %82 = bitcast i8* %81 to %"class.sw::Clipper"*
  %83 = load i8, i8* @_ZN2sw24symmetricNormalizedDepthE, align 1, !range !2
  %84 = icmp ne i8 %83, 0
  tail call void @_ZN2sw7ClipperC1Eb(%"class.sw::Clipper"* nonnull %82, i1 zeroext %84) #15
  %85 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 5
  %86 = bitcast %"class.sw::Clipper"** %85 to i8**
  store i8* %81, i8** %86, align 8
  %87 = tail call i8* @_Znwm(i64 56) #13
  %88 = bitcast i8* %87 to %"class.sw::Blitter"*
  tail call void @_ZN2sw7BlitterC1Ev(%"class.sw::Blitter"* nonnull %88) #15
  %89 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 6
  %90 = bitcast %"class.sw::Blitter"** %89 to i8**
  store i8* %87, i8** %90, align 16
  %91 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 20
  store i8 1, i8* %91, align 1
  %92 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 21
  store i8 1, i8* %92, align 2
  %93 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 22
  store i8 1, i8* %93, align 1
  %94 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 14
  store i8 1, i8* %94, align 8
  %95 = getelementptr %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 17, i64 0
  %96 = bitcast %"class.sw::Thread"** %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 384, i1 false)
  br label %97

97:                                               ; preds = %97, %80
  %98 = phi i64 [ 0, %80 ], [ %101, %97 ]
  %99 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 32, i64 %98
  %100 = bitcast %"struct.sw::VertexTask"** %99 to <2 x %"struct.sw::VertexTask"*>*
  store <2 x %"struct.sw::VertexTask"*> zeroinitializer, <2 x %"struct.sw::VertexTask"*>* %100, align 8
  %101 = add i64 %98, 2
  %102 = icmp eq i64 %101, 16
  br i1 %102, label %103, label %97, !llvm.loop !3

103:                                              ; preds = %97
  store atomic i32 0, i32* %28 release, align 4
  %104 = tail call i8* @_Znwm(i64 96) #13
  %105 = bitcast i8* %104 to %"class.sw::Event"*
  tail call void @_ZN2sw5EventC1Ev(%"class.sw::Event"* nonnull %105) #15
  %106 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 20
  %107 = bitcast %"class.sw::Event"** %106 to i8**
  store i8* %104, i8** %107, align 8
  store atomic i32 0, i32* %30 release, align 4
  store atomic i32 0, i32* %31 release, align 4
  store atomic i32 0, i32* %32 release, align 4
  store atomic i32 0, i32* %33 release, align 4
  %108 = getelementptr %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 0
  %109 = bitcast %"struct.sw::Triangle"** %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 256, i1 false)
  br label %110

110:                                              ; preds = %110, %103
  %111 = phi i64 [ 0, %103 ], [ %131, %110 ]
  %112 = tail call i8* @_Znwm(i64 1784) #13
  %113 = getelementptr inbounds i8, i8* %112, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %113, i8 0, i64 132, i1 false) #14
  %114 = getelementptr inbounds i8, i8* %112, i64 1772
  %115 = bitcast i8* %114 to i32*
  %116 = getelementptr inbounds i8, i8* %112, i64 1752
  %117 = getelementptr inbounds i8, i8* %112, i64 1728
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %112, i8 0, i64 56, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #14
  %118 = bitcast i8* %117 to <4 x i32>*
  store <4 x i32> <i32 260, i32 16, i32 16, i32 264>, <4 x i32>* %118, align 8
  %119 = getelementptr inbounds i8, i8* %112, i64 1744
  %120 = bitcast i8* %119 to i32*
  store i32 16, i32* %120, align 8
  %121 = getelementptr inbounds i8, i8* %112, i64 1748
  %122 = bitcast i8* %121 to i32*
  store i32 16, i32* %122, align 4
  store atomic i32 -1, i32* %115 release, align 4
  %123 = tail call i8* @_ZN2sw8allocateEmm(i64 106448, i64 16) #15
  %124 = getelementptr inbounds i8, i8* %112, i64 1776
  %125 = bitcast i8* %124 to i8**
  store i8* %123, i8** %125, align 8
  %126 = bitcast i8* %123 to %"struct.sw::Constants"**
  store %"struct.sw::Constants"* @_ZN2sw9constantsE, %"struct.sw::Constants"** %126, align 16
  %127 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %111
  %128 = bitcast %"struct.sw::DrawCall"** %127 to i8**
  store i8* %112, i8** %128, align 8
  %129 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %111
  %130 = bitcast %"struct.sw::DrawCall"** %129 to i8**
  store i8* %112, i8** %130, align 8
  %131 = add nuw nsw i64 %111, 1
  %132 = icmp eq i64 %131, 16
  br i1 %132, label %133, label %110

133:                                              ; preds = %110, %133
  %134 = phi i64 [ %140, %133 ], [ 0, %110 ]
  %135 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %134, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %135 release, align 4
  %136 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %134, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %136 release, align 4
  %137 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %134, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %137 release, align 4
  %138 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %134, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %138 release, align 4
  %139 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %134, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %139 release, align 4
  %140 = add nuw nsw i64 %134, 1
  %141 = icmp eq i64 %140, 16
  br i1 %141, label %154, label %133

142:                                              ; preds = %154
  %143 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 9
  store i32 0, i32* %143, align 16
  %144 = tail call i8* @_Znwm(i64 216) #13
  %145 = bitcast i8* %144 to %"class.sw::SwiftConfig"*
  %146 = load i8, i8* @disableServer, align 1, !range !2
  %147 = icmp ne i8 %146, 0
  tail call void @_ZN2sw11SwiftConfigC1Eb(%"class.sw::SwiftConfig"* nonnull %145, i1 zeroext %147) #15
  %148 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 33
  %149 = bitcast %"class.sw::SwiftConfig"** %148 to i8**
  store i8* %144, i8** %149, align 8
  tail call void @_ZN2sw8Renderer19updateConfigurationEb(%"class.sw::Renderer"* %0, i1 zeroext true) #16
  %150 = tail call i8* @_Znwm(i64 168) #13
  %151 = bitcast i8* %150 to %"class.sw::Resource"*
  tail call void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"* nonnull %151, i64 0) #15
  %152 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 35
  %153 = bitcast %"class.sw::Resource"** %152 to i8**
  store i8* %150, i8** %153, align 8
  ret void

154:                                              ; preds = %133, %154
  %155 = phi i64 [ %159, %154 ], [ 0, %133 ]
  %156 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %155, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %156 release, align 4
  %157 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %155, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %157 release, align 4
  %158 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %155, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %158 release, align 4
  %159 = add nuw nsw i64 %155, 1
  %160 = icmp eq i64 %159, 16
  br i1 %160, label %142, label %154
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessorC2EPNS_7ContextE(%"class.sw::VertexProcessor"*, %"class.sw::Context"*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessorC2EPNS_7ContextE(%"class.sw::PixelProcessor"*, %"class.sw::Context"*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14SetupProcessorC2EPNS_7ContextE(%"class.sw::SetupProcessor"*, %"class.sw::Context"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: optsize
declare void @_ZN2sw5PlaneC1Ev(%"struct.sw::Plane"*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor15setRenderTargetEiPNS_7SurfaceEj(%"class.sw::PixelProcessor"*, i32, %"class.sw::Surface"*, i32) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN2sw7ClipperC1Eb(%"class.sw::Clipper"*, i1 zeroext) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw7BlitterC1Ev(%"class.sw::Blitter"*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw5EventC1Ev(%"class.sw::Event"*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw11SwiftConfigC1Eb(%"class.sw::SwiftConfig"*, i1 zeroext) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer19updateConfigurationEb(%"class.sw::Renderer"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.sw::SwiftConfig::Configuration", align 4
  %4 = alloca %"class.rr::Config::Edit", align 8
  %5 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 33
  %6 = load %"class.sw::SwiftConfig"*, %"class.sw::SwiftConfig"** %5, align 8
  %7 = tail call zeroext i1 @_ZN2sw11SwiftConfig19hasNewConfigurationEb(%"class.sw::SwiftConfig"* %6, i1 zeroext true) #15
  %8 = or i1 %7, %1
  br i1 %8, label %9, label %173

9:                                                ; preds = %2
  tail call void @_ZN2sw8Renderer16terminateThreadsEv(%"class.sw::Renderer"* %0) #16
  %10 = bitcast %"struct.sw::SwiftConfig::Configuration"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 128, i1 false)
  %11 = load %"class.sw::SwiftConfig"*, %"class.sw::SwiftConfig"** %5, align 8
  call void @_ZN2sw11SwiftConfig16getConfigurationERNS0_13ConfigurationE(%"class.sw::SwiftConfig"* %11, %"struct.sw::SwiftConfig::Configuration"* nonnull dereferenceable(128) %3) #15
  %12 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 29
  %13 = load i8, i8* %12, align 4
  %14 = and i8 %13, 1
  %15 = icmp ne i8 %14, 0
  %16 = xor i1 %7, true
  %17 = and i1 %15, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* @_ZN2sw14precacheVertexE, align 1
  store i8 %18, i8* @_ZN2sw13precacheSetupE, align 1
  store i8 %18, i8* @_ZN2sw13precachePixelE, align 1
  %19 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  %20 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  call void @_ZN2sw15VertexProcessor19setRoutineCacheSizeEi(%"class.sw::VertexProcessor"* %19, i32 %21) #15
  %22 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  call void @_ZN2sw14PixelProcessor19setRoutineCacheSizeEi(%"class.sw::PixelProcessor"* %22, i32 %24) #15
  %25 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 6
  %27 = load i32, i32* %26, align 4
  call void @_ZN2sw14SetupProcessor19setRoutineCacheSizeEi(%"class.sw::SetupProcessor"* %25, i32 %27) #15
  %28 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 8
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %29, 3
  br i1 %30, label %31, label %35

31:                                               ; preds = %9
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN2sw8Renderer19updateConfigurationEb, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %9, %31
  %36 = phi i32 [ %34, %31 ], [ 5, %9 ]
  call void @_ZN2sw7Sampler16setFilterQualityENS_10FilterTypeE(i32 %36) #15
  %37 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 9
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = select i1 %39, i32 1, i32 2
  call void @_ZN2sw7Sampler16setMipmapQualityENS_10MipmapTypeE(i32 %40) #15
  %41 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 10
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp ne i8 %42, 0
  call void @_ZN2sw14PixelProcessor24setPerspectiveCorrectionEb(%"class.sw::PixelProcessor"* %22, i1 zeroext %43) #15
  %44 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 11
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %45, 5
  %47 = select i1 %46, i32 %45, i32 2
  store i32 %47, i32* @_ZN2sw12logPrecisionE, align 4
  store i32 %47, i32* @_ZN2sw12expPrecisionE, align 4
  store i32 %47, i32* @_ZN2sw12rcpPrecisionE, align 4
  store i32 %47, i32* @_ZN2sw12rsqPrecisionE, align 4
  %48 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 27
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  %51 = zext i1 %50 to i32
  store i32 %51, i32* @_ZN2sw24transparencyAntialiasingE, align 4
  %52 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 12
  %53 = load i32, i32* %52, align 4
  switch i32 %53, label %58 [
    i32 -1, label %54
    i32 0, label %56
  ]

54:                                               ; preds = %35
  %55 = load i32, i32* @_ZN2sw5CPUID5coresE, align 4
  br label %58

56:                                               ; preds = %35
  %57 = load i32, i32* @_ZN2sw5CPUID8affinityE, align 4
  br label %58

58:                                               ; preds = %35, %56, %54
  %59 = phi i32 [ %57, %56 ], [ %55, %54 ], [ %53, %35 ]
  store atomic i32 %59, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 4
  %60 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 17
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = icmp ne i8 %61, 0
  call void @_ZN2sw5CPUID15setEnableSSE4_1Eb(i1 zeroext %62) #15
  %63 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 16
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp ne i8 %64, 0
  call void @_ZN2sw5CPUID14setEnableSSSE3Eb(i1 zeroext %65) #15
  %66 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 15
  %67 = load i8, i8* %66, align 2, !range !2
  %68 = icmp ne i8 %67, 0
  call void @_ZN2sw5CPUID13setEnableSSE3Eb(i1 zeroext %68) #15
  %69 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 14
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp ne i8 %70, 0
  call void @_ZN2sw5CPUID13setEnableSSE2Eb(i1 zeroext %71) #15
  %72 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 13
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = icmp ne i8 %73, 0
  call void @_ZN2sw5CPUID12setEnableSSEEb(i1 zeroext %74) #15
  %75 = bitcast %"class.rr::Config::Edit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #14
  %76 = bitcast %"class.rr::Config::Edit"* %4 to i64*
  store i64 -6148914691236517206, i64* %76, align 8
  %77 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %4, i64 0, i32 1
  store i8 0, i8* %77, align 4
  %78 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %4, i64 0, i32 2
  %79 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %4, i64 0, i32 2, i32 0, i32 1
  %80 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %4, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::pair"** %79 to i64*
  %82 = bitcast %"class.std::__1::vector.45"* %78 to i64*
  %83 = bitcast %"struct.std::__1::pair"** %80 to i64*
  %84 = call i8* @_Znwm(i64 8) #13
  %85 = getelementptr inbounds i8, i8* %84, i64 8
  %86 = ptrtoint i8* %85 to i64
  %87 = bitcast i8* %84 to i64*
  store i64 2, i64* %87, align 4
  %88 = ptrtoint i8* %84 to i64
  store i64 %88, i64* %82, align 8
  store i64 %86, i64* %81, align 8
  store i64 %86, i64* %83, align 8
  %89 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 18, i32 0, i64 0
  %90 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 18, i32 0, i64 10
  br label %109

91:                                               ; preds = %170
  call void @_ZN2rr7Nucleus19adjustDefaultConfigERKNS_6Config4EditE(%"class.rr::Config::Edit"* nonnull dereferenceable(32) %4) #15
  %92 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 21
  %93 = load i8, i8* %92, align 2, !range !2
  store i8 %93, i8* @_ZN2sw13forceWindowedE, align 1
  %94 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 22
  %95 = load i8, i8* %94, align 1, !range !2
  store i8 %95, i8* @_ZN2sw24complementaryDepthBufferE, align 1
  %96 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 23
  %97 = load i8, i8* %96, align 4, !range !2
  store i8 %97, i8* @_ZN2sw13postBlendSRGBE, align 1
  %98 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 24
  %99 = load i8, i8* %98, align 1, !range !2
  store i8 %99, i8* @_ZN2sw18exactColorRoundingE, align 1
  %100 = getelementptr inbounds %"struct.sw::SwiftConfig::Configuration", %"struct.sw::SwiftConfig::Configuration"* %3, i64 0, i32 31
  %101 = load i8, i8* %100, align 4, !range !2
  store i8 %101, i8* @_ZN2sw19forceClearRegistersE, align 1
  %102 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %4, i64 0, i32 2, i32 0, i32 0
  %103 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair"* %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %91
  %106 = ptrtoint %"struct.std::__1::pair"* %103 to i64
  store i64 %106, i64* %81, align 8
  %107 = bitcast %"struct.std::__1::pair"* %103 to i8*
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %91, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #14
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #14
  br label %173

109:                                              ; preds = %58, %170
  %110 = phi i32* [ %89, %58 ], [ %171, %170 ]
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %170, label %113

113:                                              ; preds = %109
  %114 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %79, align 8
  %115 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %80, align 8
  %116 = icmp ult %"struct.std::__1::pair"* %114, %115
  %117 = ptrtoint %"struct.std::__1::pair"* %115 to i64
  br i1 %116, label %118, label %124

118:                                              ; preds = %113
  %119 = bitcast %"struct.std::__1::pair"* %114 to i64*
  %120 = zext i32 %111 to i64
  %121 = shl nuw i64 %120, 32
  store i64 %121, i64* %119, align 4
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %114, i64 1
  %123 = ptrtoint %"struct.std::__1::pair"* %122 to i64
  store i64 %123, i64* %81, align 8
  br label %170

124:                                              ; preds = %113
  %125 = ptrtoint %"struct.std::__1::pair"* %114 to i64
  %126 = load i64, i64* %82, align 8
  %127 = sub i64 %125, %126
  %128 = ashr exact i64 %127, 3
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 2305843009213693951
  br i1 %130, label %131, label %133

131:                                              ; preds = %124
  %132 = bitcast %"class.std::__1::vector.45"* %78 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #17
  unreachable

133:                                              ; preds = %124
  %134 = sub i64 %117, %126
  %135 = ashr exact i64 %134, 3
  %136 = icmp ult i64 %135, 1152921504606846975
  br i1 %136, label %137, label %145

137:                                              ; preds = %133
  %138 = ashr exact i64 %134, 2
  %139 = icmp ult i64 %138, %129
  %140 = select i1 %139, i64 %129, i64 %138
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %137
  %143 = icmp ugt i64 %140, 2305843009213693951
  br i1 %143, label %144, label %145

144:                                              ; preds = %142
  call void @abort() #17
  unreachable

145:                                              ; preds = %142, %133
  %146 = phi i64 [ %140, %142 ], [ 2305843009213693951, %133 ]
  %147 = shl i64 %146, 3
  %148 = call i8* @_Znwm(i64 %147) #13
  %149 = bitcast i8* %148 to %"struct.std::__1::pair"*
  br label %150

150:                                              ; preds = %145, %137
  %151 = phi i64 [ %146, %145 ], [ 0, %137 ]
  %152 = phi i8* [ %148, %145 ], [ null, %137 ]
  %153 = phi %"struct.std::__1::pair"* [ %149, %145 ], [ null, %137 ]
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 %128
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 %151
  %156 = ptrtoint %"struct.std::__1::pair"* %155 to i64
  %157 = bitcast %"struct.std::__1::pair"* %154 to i64*
  %158 = zext i32 %111 to i64
  %159 = shl nuw i64 %158, 32
  store i64 %159, i64* %157, align 4
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %154, i64 1
  %161 = ptrtoint %"struct.std::__1::pair"* %160 to i64
  %162 = ptrtoint %"struct.std::__1::pair"* %153 to i64
  %163 = icmp sgt i64 %127, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %150
  %165 = inttoptr i64 %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %152, i8* align 4 %165, i64 %127, i1 false) #14
  br label %166

166:                                              ; preds = %164, %150
  store i64 %162, i64* %82, align 8
  store i64 %161, i64* %81, align 8
  store i64 %156, i64* %83, align 8
  %167 = icmp eq i64 %126, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %166
  %169 = inttoptr i64 %126 to i8*
  call void @_ZdlPv(i8* %169) #13
  br label %170

170:                                              ; preds = %168, %166, %118, %109
  %171 = getelementptr inbounds i32, i32* %110, i64 1
  %172 = icmp eq i32* %171, %90
  br i1 %172, label %91, label %109

173:                                              ; preds = %2, %108
  br i1 %1, label %179, label %174

174:                                              ; preds = %173
  %175 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 17, i64 0
  %176 = load %"class.sw::Thread"*, %"class.sw::Thread"** %175, align 8
  %177 = icmp eq %"class.sw::Thread"* %176, null
  br i1 %177, label %178, label %179

178:                                              ; preds = %174
  call void @_ZN2sw8Renderer17initializeThreadsEv(%"class.sw::Renderer"* %0) #16
  br label %179

179:                                              ; preds = %174, %178, %173
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"*, i64) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8RendererD2Ev(%"class.sw::Renderer"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*], [4 x i8*] }, { [4 x i8*], [4 x i8*] }* @_ZTVN2sw8RendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.sw::PixelProcessor", %"class.sw::PixelProcessor"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*], [4 x i8*] }, { [4 x i8*], [4 x i8*] }* @_ZTVN2sw8RendererE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 16
  %5 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 35
  %6 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  %7 = tail call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* %6, i32 3) #15
  %8 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* %8) #15
  tail call void @_ZN2sw8Renderer16terminateThreadsEv(%"class.sw::Renderer"* %0) #16
  %9 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* %9) #15
  %10 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 5
  %11 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %10, align 8
  %12 = icmp eq %"class.sw::Clipper"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  tail call void @_ZN2sw7ClipperD1Ev(%"class.sw::Clipper"* nonnull %11) #15
  %14 = bitcast %"class.sw::Clipper"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %13, %1
  store %"class.sw::Clipper"* null, %"class.sw::Clipper"** %10, align 8
  %16 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 6
  %17 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %16, align 16
  %18 = icmp eq %"class.sw::Blitter"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.sw::Blitter"* %17 to void (%"class.sw::Blitter"*)***
  %21 = load void (%"class.sw::Blitter"*)**, void (%"class.sw::Blitter"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.sw::Blitter"*)*, void (%"class.sw::Blitter"*)** %21, i64 1
  %23 = load void (%"class.sw::Blitter"*)*, void (%"class.sw::Blitter"*)** %22, align 8
  tail call void %23(%"class.sw::Blitter"* nonnull %17) #15
  br label %24

24:                                               ; preds = %19, %15
  store %"class.sw::Blitter"* null, %"class.sw::Blitter"** %16, align 16
  %25 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 20
  %26 = load %"class.sw::Event"*, %"class.sw::Event"** %25, align 8
  %27 = icmp eq %"class.sw::Event"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  tail call void @_ZN2sw5EventD1Ev(%"class.sw::Event"* nonnull %26) #15
  %29 = bitcast %"class.sw::Event"* %26 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  store %"class.sw::Event"* null, %"class.sw::Event"** %25, align 8
  br label %35

31:                                               ; preds = %42
  %32 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 33
  %33 = load %"class.sw::SwiftConfig"*, %"class.sw::SwiftConfig"** %32, align 8
  %34 = icmp eq %"class.sw::SwiftConfig"* %33, null
  br i1 %34, label %47, label %45

35:                                               ; preds = %42, %30
  %36 = phi i64 [ 0, %30 ], [ %43, %42 ]
  %37 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %36
  %38 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %37, align 8
  %39 = icmp eq %"struct.sw::DrawCall"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  tail call void @_ZN2sw8DrawCallD2Ev(%"struct.sw::DrawCall"* nonnull %38) #15
  %41 = bitcast %"struct.sw::DrawCall"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %40, %35
  store %"struct.sw::DrawCall"* null, %"struct.sw::DrawCall"** %37, align 8
  %43 = add nuw nsw i64 %36, 1
  %44 = icmp eq i64 %43, 16
  br i1 %44, label %31, label %35

45:                                               ; preds = %31
  tail call void @_ZN2sw11SwiftConfigD1Ev(%"class.sw::SwiftConfig"* nonnull %33) #15
  %46 = bitcast %"class.sw::SwiftConfig"* %33 to i8*
  tail call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %45, %31
  store %"class.sw::SwiftConfig"* null, %"class.sw::SwiftConfig"** %32, align 8
  %48 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 41
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %48) #15
  %49 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 40
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %49) #15
  %50 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 39
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr"* %50) #15
  %51 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34, i32 0
  tail call void @_ZNSt3__110__list_impIPN2sw5QueryENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__list_imp"* %51) #15
  %52 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 31, i32 0
  %53 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %52) #15
  %54 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 3
  tail call void @_ZN2sw14SetupProcessorD2Ev(%"class.sw::SetupProcessor"* %54) #15
  tail call void @_ZN2sw14PixelProcessorD2Ev(%"class.sw::PixelProcessor"* %3) #15
  %55 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessorD2Ev(%"class.sw::VertexProcessor"* %55) #15
  ret void
}

; Function Attrs: optsize
declare i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"*, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer16terminateThreadsEv(%"class.sw::Renderer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %11, %1
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %46, %5
  br label %55

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %15

11:                                               ; preds = %1, %11
  %12 = tail call i32 @usleep(i32 1000) #15
  %13 = load atomic i32, i32* %2 acquire, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %5, label %11

15:                                               ; preds = %9, %46
  %16 = phi i64 [ 0, %9 ], [ %50, %46 ]
  %17 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 17, i64 %16
  %18 = load %"class.sw::Thread"*, %"class.sw::Thread"** %17, align 8
  %19 = icmp eq %"class.sw::Thread"* %18, null
  br i1 %19, label %46, label %20

20:                                               ; preds = %15
  store atomic i32 1, i32* %10 release, align 4
  %21 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 18, i64 %16
  %22 = load %"class.sw::Event"*, %"class.sw::Event"** %21, align 8
  %23 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %22, i64 0, i32 1
  %24 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %23) #15
  %25 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %22, i64 0, i32 2
  store volatile i8 1, i8* %25, align 8
  %26 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %22, i64 0, i32 0
  %27 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %26) #15
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %23) #15
  %29 = load %"class.sw::Thread"*, %"class.sw::Thread"** %17, align 8
  tail call void @_ZN2sw6Thread4joinEv(%"class.sw::Thread"* %29) #15
  %30 = load %"class.sw::Thread"*, %"class.sw::Thread"** %17, align 8
  %31 = icmp eq %"class.sw::Thread"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %20
  tail call void @_ZN2sw6ThreadD1Ev(%"class.sw::Thread"* nonnull %30) #15
  %33 = bitcast %"class.sw::Thread"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %32, %20
  store %"class.sw::Thread"* null, %"class.sw::Thread"** %17, align 8
  %35 = load %"class.sw::Event"*, %"class.sw::Event"** %21, align 8
  %36 = icmp eq %"class.sw::Event"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  tail call void @_ZN2sw5EventD1Ev(%"class.sw::Event"* nonnull %35) #15
  %38 = bitcast %"class.sw::Event"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %37, %34
  store %"class.sw::Event"* null, %"class.sw::Event"** %21, align 8
  %40 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 19, i64 %16
  %41 = load %"class.sw::Event"*, %"class.sw::Event"** %40, align 8
  %42 = icmp eq %"class.sw::Event"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  tail call void @_ZN2sw5EventD1Ev(%"class.sw::Event"* nonnull %41) #15
  %44 = bitcast %"class.sw::Event"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %43, %39
  store %"class.sw::Event"* null, %"class.sw::Event"** %40, align 8
  br label %46

46:                                               ; preds = %15, %45
  %47 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 32, i64 %16
  %48 = bitcast %"struct.sw::VertexTask"** %47 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void @_ZN2sw10deallocateEPv(i8* %49) #15
  store %"struct.sw::VertexTask"* null, %"struct.sw::VertexTask"** %47, align 8
  %50 = add nuw nsw i64 %16, 1
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %52 = sext i32 %51 to i64
  %53 = icmp slt i64 %50, %52
  br i1 %53, label %15, label %8

54:                                               ; preds = %55
  ret void

55:                                               ; preds = %8, %55
  %56 = phi i64 [ %63, %55 ], [ 0, %8 ]
  %57 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 %56
  %58 = bitcast %"struct.sw::Triangle"** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZN2sw10deallocateEPv(i8* %59) #15
  store %"struct.sw::Triangle"* null, %"struct.sw::Triangle"** %57, align 8
  %60 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 11, i64 %56
  %61 = bitcast %"struct.sw::Primitive"** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZN2sw10deallocateEPv(i8* %62) #15
  store %"struct.sw::Primitive"* null, %"struct.sw::Primitive"** %60, align 8
  %63 = add nuw nsw i64 %56, 1
  %64 = icmp eq i64 %63, 16
  br i1 %64, label %54, label %55
}

; Function Attrs: optsize
declare void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize
declare void @_ZN2sw7ClipperD1Ev(%"class.sw::Clipper"*) unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZN2sw5EventD1Ev(%"class.sw::Event"*) unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZN2sw11SwiftConfigD1Ev(%"class.sw::SwiftConfig"*) unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZN2sw14SetupProcessorD2Ev(%"class.sw::SetupProcessor"*) unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZN2sw14PixelProcessorD2Ev(%"class.sw::PixelProcessor"*) unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZN2sw15VertexProcessorD2Ev(%"class.sw::VertexProcessor"*) unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZThn12672_N2sw8RendererD1Ev(%"class.sw::Renderer"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 -1, i32 0, i32 8, i64 10, i32 3
  %3 = bitcast i32* %2 to %"class.sw::Renderer"*
  tail call void @_ZN2sw8RendererD2Ev(%"class.sw::Renderer"* %3) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8RendererD0Ev(%"class.sw::Renderer"*) unnamed_addr #2 align 2 {
  tail call void @_ZN2sw8RendererD2Ev(%"class.sw::Renderer"* %0) #15
  %2 = bitcast %"class.sw::Renderer"* %0 to i8*
  tail call void @_ZN2sw10deallocateEPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8RendererdlEPv(i8*) local_unnamed_addr #2 align 2 {
  tail call void @_ZN2sw10deallocateEPv(i8* %0) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZThn12672_N2sw8RendererD0Ev(%"class.sw::Renderer"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 -1, i32 0, i32 8, i64 10, i32 3
  %3 = bitcast i32* %2 to %"class.sw::Renderer"*
  tail call void @_ZN2sw8RendererD2Ev(%"class.sw::Renderer"* %3) #15
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZN2sw10deallocateEPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN2sw8RenderernwEm(i64) local_unnamed_addr #2 align 2 {
  %2 = tail call i8* @_ZN2sw8allocateEmm(i64 21728, i64 16) #15
  ret i8* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer4drawENS_8DrawTypeEjjb(%"class.sw::Renderer"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %6 = alloca %"struct.sw::VertexProcessor::State", align 8
  %7 = alloca %"struct.sw::SetupProcessor::State", align 4
  %8 = alloca %"struct.sw::PixelProcessor::State", align 4
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %10 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %11 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %10, i64 0, i32 0
  store i32 %1, i32* %11, align 16
  tail call void @_ZN2sw8Renderer19updateConfigurationEb(%"class.sw::Renderer"* %0, i1 zeroext false) #16
  tail call void @_ZN2sw8Renderer13updateClipperEv(%"class.sw::Renderer"* %0) #16
  %12 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %13 = tail call i32 @_ZNK2sw7Context19getSuperSampleCountEv(%"class.sw::Context"* %12) #15
  %14 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %15 = tail call i32 @_ZNK2sw7Context19getMultiSampleCountEv(%"class.sw::Context"* %14) #15
  %16 = icmp sgt i32 %13, 0
  br i1 %16, label %17, label %1129

17:                                               ; preds = %5
  %18 = sub nsw i32 32, %15
  %19 = lshr i32 -1, %18
  %20 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 35
  %21 = bitcast %"struct.sw::VertexProcessor::State"* %6 to i8*
  %22 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  %23 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 36
  %24 = bitcast %"struct.sw::VertexProcessor::State"* %23 to i8*
  %25 = bitcast %"struct.sw::SetupProcessor::State"* %7 to i8*
  %26 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 37
  %28 = bitcast %"struct.sw::SetupProcessor::State"* %27 to i8*
  %29 = bitcast %"struct.sw::PixelProcessor::State"* %8 to i8*
  %30 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 38
  %32 = bitcast %"struct.sw::PixelProcessor::State"* %31 to i8*
  %33 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 39
  %34 = bitcast %"class.std::__1::shared_ptr"* %33 to i64*
  %35 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 39, i32 1
  %36 = bitcast %"class.std::__1::__shared_weak_count"** %35 to i64*
  %37 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 40
  %38 = bitcast %"class.std::__1::shared_ptr"* %37 to i64*
  %39 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 40, i32 1
  %40 = bitcast %"class.std::__1::__shared_weak_count"** %39 to i64*
  %41 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 41
  %42 = bitcast %"class.std::__1::shared_ptr"* %41 to i64*
  %43 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 41, i32 1
  %44 = bitcast %"class.std::__1::__shared_weak_count"** %43 to i64*
  %45 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 20
  %47 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34, i32 0, i32 1, i32 0, i32 0
  %48 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 36, i32 0, i32 1
  %49 = bitcast i48* %48 to i64*
  %50 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 36, i32 0, i32 2
  %51 = bitcast [9 x i8]* %50 to i72*
  %52 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34, i32 0, i32 0
  %54 = bitcast %"struct.std::__1::__list_node_base"** %52 to i64*
  %55 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %33, i64 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %37, i64 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %41, i64 0, i32 0
  %58 = zext i32 %2 to i64
  %59 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2, i32 1, i64 0
  %60 = bitcast [4 x [4 x i16]]* %59 to i8*
  %61 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2, i32 3, i64 0
  %62 = bitcast %"struct.sw::float4"* %61 to i8*
  %63 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2, i32 4, i64 0
  %64 = bitcast %"struct.sw::int4"* %63 to i8*
  %65 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2, i32 5, i64 0
  %66 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 2, i64 0
  %67 = bitcast %"struct.sw::float4"* %66 to i8*
  %68 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 3, i64 0
  %69 = bitcast %"struct.sw::int4"* %68 to i8*
  %70 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 4, i64 0
  %71 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 6
  %72 = bitcast %"struct.sw::VertexProcessor::FixedFunction"* %71 to i8*
  %73 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 38, i32 0, i32 1
  %74 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2, i32 6
  %75 = bitcast %"struct.sw::PixelProcessor::Stencil"* %74 to i8*
  %76 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2, i32 7
  %77 = bitcast %"struct.sw::PixelProcessor::Stencil"* %76 to i8*
  %78 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 38, i32 0, i32 2
  %79 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2, i32 8
  %80 = bitcast %"struct.sw::PixelProcessor::Fog"* %79 to i8*
  %81 = getelementptr inbounds %"struct.sw::SetupProcessor::State", %"struct.sw::SetupProcessor::State"* %27, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 0, i32 5
  %83 = bitcast %"struct.sw::VertexProcessor::PointSprite"* %82 to i8*
  %84 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2, i32 9
  %85 = bitcast %"struct.sw::PixelProcessor::Factor"* %84 to i8*
  %86 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 38, i32 0, i32 6
  %87 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 7, i32 2
  %88 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 7, i32 3
  %89 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 7, i32 0
  %90 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 7, i32 1
  %91 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 7, i32 4
  %92 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 7, i32 5
  %93 = call i32 @llvm.ctlz.i32(i32 %13, i1 true) #14, !range !5
  %94 = xor i32 %93, 31
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 9
  %97 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 0
  %98 = bitcast %"struct.sw::Plane"* %97 to i8*
  %99 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 1
  %100 = bitcast %"struct.sw::Plane"* %99 to i8*
  %101 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 2
  %102 = bitcast %"struct.sw::Plane"* %101 to i8*
  %103 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 3
  %104 = bitcast %"struct.sw::Plane"* %103 to i8*
  %105 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 4
  %106 = bitcast %"struct.sw::Plane"* %105 to i8*
  %107 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 5
  %108 = bitcast %"struct.sw::Plane"* %107 to i8*
  %109 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 8, i32 0
  %110 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 8, i32 2
  %111 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 8, i32 1
  %112 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 8, i32 3
  %113 = add i32 %3, -1
  %114 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 31, i32 0
  %115 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 19, i64 0
  %117 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 18, i64 0
  %119 = zext i32 %13 to i64
  br label %120

120:                                              ; preds = %1117, %17
  %121 = phi i64 [ 0, %17 ], [ %1119, %1117 ]
  %122 = phi i8 [ 0, %17 ], [ %1118, %1117 ]
  %123 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %124 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %123, i64 0, i32 107
  %125 = load i32, i32* %124, align 16
  %126 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %123, i64 0, i32 106
  %127 = load i32, i32* %126, align 4
  %128 = trunc i64 %121 to i32
  %129 = mul nsw i32 %15, %128
  %130 = lshr i32 %127, %129
  %131 = and i32 %130, %19
  store i32 %131, i32* %124, align 16
  %132 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %133 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %132, i64 0, i32 107
  %134 = load i32, i32* %133, align 16
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %1117, label %136

136:                                              ; preds = %120
  %137 = load %"class.sw::Resource"*, %"class.sw::Resource"** %20, align 8
  %138 = call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* %137, i32 1) #15
  br i1 %4, label %144, label %139

139:                                              ; preds = %136
  %140 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %141 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %140, i64 0, i32 107
  %142 = load i32, i32* %141, align 16
  %143 = icmp eq i32 %125, %142
  br i1 %143, label %198, label %144

144:                                              ; preds = %139, %136
  call void @llvm.lifetime.start.p0i8(i64 392, i8* nonnull %21) #14
  call void @_ZN2sw15VertexProcessor6updateENS_8DrawTypeE(%"struct.sw::VertexProcessor::State"* nonnull sret %6, %"class.sw::VertexProcessor"* %22, i32 %1) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %24, i8* nonnull align 8 %21, i64 388, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %21) #14
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %25) #14
  call void @_ZNK2sw14SetupProcessor6updateEv(%"struct.sw::SetupProcessor::State"* nonnull sret %7, %"class.sw::SetupProcessor"* %26) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 4 %25, i64 136, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %25) #14
  call void @llvm.lifetime.start.p0i8(i64 316, i8* nonnull %29) #14
  call void @_ZNK2sw14PixelProcessor6updateEv(%"struct.sw::PixelProcessor::State"* nonnull sret %8, %"class.sw::PixelProcessor"* %30) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %32, i8* nonnull align 4 %29, i64 316, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 316, i8* nonnull %29) #14
  %145 = call { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw15VertexProcessor7routineERKNS0_5StateE(%"class.sw::VertexProcessor"* %22, %"struct.sw::VertexProcessor::State"* dereferenceable(392) %23) #15
  %146 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %145, 0
  %147 = ptrtoint %"class.rr::Routine"* %146 to i64
  %148 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %145, 1
  %149 = ptrtoint %"class.std::__1::__shared_weak_count"* %148 to i64
  store i64 %147, i64* %34, align 8
  %150 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %35, align 8
  store i64 %149, i64* %36, align 8
  %151 = icmp eq %"class.std::__1::__shared_weak_count"* %150, null
  br i1 %151, label %162, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %150, i64 0, i32 0, i32 1
  %154 = atomicrmw add i64* %153, i64 -1 acq_rel
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %150, i64 0, i32 0
  %158 = bitcast %"class.std::__1::__shared_weak_count"* %150 to void (%"class.std::__1::__shared_count"*)***
  %159 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %159, i64 2
  %161 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %160, align 8
  call void %161(%"class.std::__1::__shared_count"* %157) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %150) #15
  br label %162

162:                                              ; preds = %156, %152, %144
  %163 = call { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw14SetupProcessor7routineERKNS0_5StateE(%"class.sw::SetupProcessor"* %26, %"struct.sw::SetupProcessor::State"* dereferenceable(136) %27) #15
  %164 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %163, 0
  %165 = ptrtoint %"class.rr::Routine"* %164 to i64
  %166 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %163, 1
  %167 = ptrtoint %"class.std::__1::__shared_weak_count"* %166 to i64
  store i64 %165, i64* %38, align 8
  %168 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %39, align 8
  store i64 %167, i64* %40, align 8
  %169 = icmp eq %"class.std::__1::__shared_weak_count"* %168, null
  br i1 %169, label %180, label %170

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %168, i64 0, i32 0, i32 1
  %172 = atomicrmw add i64* %171, i64 -1 acq_rel
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %180

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %168, i64 0, i32 0
  %176 = bitcast %"class.std::__1::__shared_weak_count"* %168 to void (%"class.std::__1::__shared_count"*)***
  %177 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %177, i64 2
  %179 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %178, align 8
  call void %179(%"class.std::__1::__shared_count"* %175) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %168) #15
  br label %180

180:                                              ; preds = %174, %170, %162
  %181 = call { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw14PixelProcessor7routineERKNS0_5StateE(%"class.sw::PixelProcessor"* %30, %"struct.sw::PixelProcessor::State"* dereferenceable(316) %31) #15
  %182 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %181, 0
  %183 = ptrtoint %"class.rr::Routine"* %182 to i64
  %184 = extractvalue { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } %181, 1
  %185 = ptrtoint %"class.std::__1::__shared_weak_count"* %184 to i64
  store i64 %183, i64* %42, align 8
  %186 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %43, align 8
  store i64 %185, i64* %44, align 8
  %187 = icmp eq %"class.std::__1::__shared_weak_count"* %186, null
  br i1 %187, label %198, label %188

188:                                              ; preds = %180
  %189 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %186, i64 0, i32 0, i32 1
  %190 = atomicrmw add i64* %189, i64 -1 acq_rel
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %198

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %186, i64 0, i32 0
  %194 = bitcast %"class.std::__1::__shared_weak_count"* %186 to void (%"class.std::__1::__shared_count"*)***
  %195 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %195, i64 2
  %197 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %196, align 8
  call void %197(%"class.std::__1::__shared_count"* %193) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %186) #15
  br label %198

198:                                              ; preds = %180, %188, %192, %139
  %199 = sdiv i32 128, %15
  %200 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %201 = call zeroext i1 @_ZNK2sw7Context14isDrawTriangleEb(%"class.sw::Context"* %200, i1 zeroext false) #15
  %202 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  br i1 %201, label %203, label %208

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %202, i64 0, i32 22
  %205 = load i32, i32* %204, align 4
  switch i32 %205, label %1129 [
    i32 0, label %211
    i32 1, label %206
    i32 2, label %207
  ]

206:                                              ; preds = %203
  br label %211

207:                                              ; preds = %203
  br label %211

208:                                              ; preds = %198
  %209 = call zeroext i1 @_ZNK2sw7Context10isDrawLineEb(%"class.sw::Context"* %202, i1 zeroext false) #15
  %210 = select i1 %209, i64 ptrtoint (i32 (%"class.sw::Renderer"*, i32, i32)* @_ZN2sw8Renderer10setupLinesEii to i64), i64 ptrtoint (i32 (%"class.sw::Renderer"*, i32, i32)* @_ZN2sw8Renderer11setupPointsEii to i64)
  br label %211

211:                                              ; preds = %208, %203, %206, %207
  %212 = phi i64 [ ptrtoint (i32 (%"class.sw::Renderer"*, i32, i32)* @_ZN2sw8Renderer19setupVertexTriangleEii to i64), %207 ], [ ptrtoint (i32 (%"class.sw::Renderer"*, i32, i32)* @_ZN2sw8Renderer22setupWireframeTriangleEii to i64), %206 ], [ ptrtoint (i32 (%"class.sw::Renderer"*, i32, i32)* @_ZN2sw8Renderer19setupSolidTrianglesEii to i64), %203 ], [ %210, %208 ]
  %213 = phi i32 [ 1, %207 ], [ 1, %206 ], [ %199, %203 ], [ %199, %208 ]
  br label %218

214:                                              ; preds = %218
  %215 = icmp eq i64 %225, 16
  br i1 %215, label %235, label %216

216:                                              ; preds = %214, %248
  %217 = phi i64 [ %225, %214 ], [ 0, %248 ]
  br label %218

218:                                              ; preds = %216, %211
  %219 = phi i64 [ 0, %211 ], [ %217, %216 ]
  %220 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %219
  %221 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %220, align 8
  %222 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %221, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 acquire, align 4
  %224 = icmp eq i32 %223, -1
  %225 = add nuw nsw i64 %219, 1
  br i1 %224, label %226, label %214

226:                                              ; preds = %218
  %227 = and i64 %219, 4294967295
  %228 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %227
  %229 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %228, align 8
  %230 = load atomic i32, i32* %45 acquire, align 4
  %231 = and i32 %230, 15
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %232
  store %"struct.sw::DrawCall"* %229, %"struct.sw::DrawCall"** %233, align 8
  %234 = icmp eq %"struct.sw::DrawCall"* %229, null
  br i1 %234, label %235, label %250

235:                                              ; preds = %214, %226
  %236 = load %"class.sw::Event"*, %"class.sw::Event"** %46, align 8
  %237 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %236, i64 0, i32 1
  %238 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %237) #15
  %239 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %236, i64 0, i32 2
  %240 = load volatile i8, i8* %239, align 8, !range !2
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %248

242:                                              ; preds = %235
  %243 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %236, i64 0, i32 0
  br label %244

244:                                              ; preds = %244, %242
  %245 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %243, %union.pthread_mutex_t* %237) #15
  %246 = load volatile i8, i8* %239, align 8, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %244, label %248

248:                                              ; preds = %244, %235
  store volatile i8 0, i8* %239, align 8
  %249 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %237) #15
  br label %216

250:                                              ; preds = %226
  %251 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 30
  %252 = load %"struct.sw::DrawData"*, %"struct.sw::DrawData"** %251, align 8
  %253 = load i64, i64* %47, align 8
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %313, label %255

255:                                              ; preds = %250
  %256 = call i8* @_Znwm(i64 24) #13
  %257 = bitcast i8* %256 to i8**
  store i8* %256, i8** %257, align 8
  %258 = getelementptr inbounds i8, i8* %256, i64 8
  %259 = bitcast i8* %258 to i8**
  store i8* %256, i8** %259, align 8
  %260 = getelementptr inbounds i8, i8* %256, i64 16
  %261 = bitcast i8* %260 to i64*
  store i64 0, i64* %261, align 8
  %262 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 25
  %263 = bitcast %"class.std::__1::list"** %262 to i8**
  store i8* %256, i8** %263, align 8
  %264 = load i64, i64* %49, align 8
  %265 = and i64 %264, 140737488355328
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %271, label %267

267:                                              ; preds = %255
  %268 = load i72, i72* %51, align 16
  %269 = trunc i72 %268 to i64
  %270 = icmp ne i64 %269, 0
  br label %271

271:                                              ; preds = %255, %267
  %272 = phi i1 [ false, %255 ], [ %270, %267 ]
  %273 = load i64, i64* %54, align 8
  %274 = inttoptr i64 %273 to %"struct.std::__1::__list_node_base"*
  %275 = icmp eq %"struct.std::__1::__list_node_base"* %53, %274
  br i1 %275, label %313, label %276

276:                                              ; preds = %271, %307
  %277 = phi %"struct.std::__1::__list_node_base"* [ %311, %307 ], [ %274, %271 ]
  %278 = phi i64 [ %310, %307 ], [ %273, %271 ]
  %279 = inttoptr i64 %278 to %"struct.std::__1::__list_node"*
  %280 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %279, i64 0, i32 1
  %281 = load %"struct.sw::Query"*, %"struct.sw::Query"** %280, align 8
  br i1 %272, label %286, label %282

282:                                              ; preds = %276
  %283 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %281, i64 0, i32 2
  %284 = load i32, i32* %283, align 4
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %307, label %286

286:                                              ; preds = %276, %282
  %287 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %281, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = atomicrmw add i32* %287, i32 1 acq_rel
  %289 = load %"class.std::__1::list"*, %"class.std::__1::list"** %262, align 8
  %290 = call i8* @_Znwm(i64 24) #13, !noalias !6
  %291 = bitcast i8* %290 to %"struct.std::__1::__list_node_base"**
  %292 = getelementptr inbounds i8, i8* %290, i64 16
  %293 = bitcast %"struct.sw::Query"** %280 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast i8* %292 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %289, i64 0, i32 0, i32 0
  %297 = getelementptr inbounds i8, i8* %290, i64 8
  %298 = bitcast i8* %297 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %296, %"struct.std::__1::__list_node_base"** %298, align 8
  %299 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %289, i64 0, i32 0, i32 0, i32 0
  %300 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %299, align 8
  store %"struct.std::__1::__list_node_base"* %300, %"struct.std::__1::__list_node_base"** %291, align 8
  %301 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %300, i64 0, i32 1
  %302 = bitcast %"struct.std::__1::__list_node_base"** %301 to i8**
  store i8* %290, i8** %302, align 8
  %303 = bitcast %"class.std::__1::list"* %289 to i8**
  store i8* %290, i8** %303, align 8
  %304 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %289, i64 0, i32 0, i32 1, i32 0, i32 0
  %305 = load i64, i64* %304, align 8
  %306 = add i64 %305, 1
  store i64 %306, i64* %304, align 8
  br label %307

307:                                              ; preds = %282, %286
  %308 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %277, i64 0, i32 1
  %309 = bitcast %"struct.std::__1::__list_node_base"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = inttoptr i64 %310 to %"struct.std::__1::__list_node_base"*
  %312 = icmp eq %"struct.std::__1::__list_node_base"* %53, %311
  br i1 %312, label %313, label %276

313:                                              ; preds = %307, %271, %250
  %314 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1, i32* %314 release, align 4
  %315 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %213, i32* %315 release, align 4
  %316 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 2
  %317 = load i64, i64* %34, align 8
  %318 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %35, align 8
  %319 = ptrtoint %"class.std::__1::__shared_weak_count"* %318 to i64
  %320 = icmp eq %"class.std::__1::__shared_weak_count"* %318, null
  br i1 %320, label %324, label %321

321:                                              ; preds = %313
  %322 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %318, i64 0, i32 0, i32 1
  %323 = atomicrmw add i64* %322, i64 1 monotonic
  br label %324

324:                                              ; preds = %321, %313
  %325 = bitcast %"class.std::__1::shared_ptr"* %316 to i64*
  store i64 %317, i64* %325, align 8
  %326 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 2, i32 1
  %327 = bitcast %"class.std::__1::__shared_weak_count"** %326 to i64*
  %328 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %326, align 8
  store i64 %319, i64* %327, align 8
  %329 = icmp eq %"class.std::__1::__shared_weak_count"* %328, null
  br i1 %329, label %340, label %330

330:                                              ; preds = %324
  %331 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %328, i64 0, i32 0, i32 1
  %332 = atomicrmw add i64* %331, i64 -1 acq_rel
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %340

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %328, i64 0, i32 0
  %336 = bitcast %"class.std::__1::__shared_weak_count"* %328 to void (%"class.std::__1::__shared_count"*)***
  %337 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %336, align 8
  %338 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %337, i64 2
  %339 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %338, align 8
  call void %339(%"class.std::__1::__shared_count"* %335) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %328) #15
  br label %340

340:                                              ; preds = %324, %330, %334
  %341 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 3
  %342 = load i64, i64* %38, align 8
  %343 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %39, align 8
  %344 = ptrtoint %"class.std::__1::__shared_weak_count"* %343 to i64
  %345 = icmp eq %"class.std::__1::__shared_weak_count"* %343, null
  br i1 %345, label %349, label %346

346:                                              ; preds = %340
  %347 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %343, i64 0, i32 0, i32 1
  %348 = atomicrmw add i64* %347, i64 1 monotonic
  br label %349

349:                                              ; preds = %346, %340
  %350 = bitcast %"class.std::__1::shared_ptr"* %341 to i64*
  store i64 %342, i64* %350, align 8
  %351 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 3, i32 1
  %352 = bitcast %"class.std::__1::__shared_weak_count"** %351 to i64*
  %353 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %351, align 8
  store i64 %344, i64* %352, align 8
  %354 = icmp eq %"class.std::__1::__shared_weak_count"* %353, null
  br i1 %354, label %365, label %355

355:                                              ; preds = %349
  %356 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %353, i64 0, i32 0, i32 1
  %357 = atomicrmw add i64* %356, i64 -1 acq_rel
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %365

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %353, i64 0, i32 0
  %361 = bitcast %"class.std::__1::__shared_weak_count"* %353 to void (%"class.std::__1::__shared_count"*)***
  %362 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %361, align 8
  %363 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %362, i64 2
  %364 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %363, align 8
  call void %364(%"class.std::__1::__shared_count"* %360) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %353) #15
  br label %365

365:                                              ; preds = %349, %355, %359
  %366 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 4
  %367 = load i64, i64* %42, align 8
  %368 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %43, align 8
  %369 = ptrtoint %"class.std::__1::__shared_weak_count"* %368 to i64
  %370 = icmp eq %"class.std::__1::__shared_weak_count"* %368, null
  br i1 %370, label %374, label %371

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %368, i64 0, i32 0, i32 1
  %373 = atomicrmw add i64* %372, i64 1 monotonic
  br label %374

374:                                              ; preds = %371, %365
  %375 = bitcast %"class.std::__1::shared_ptr"* %366 to i64*
  store i64 %367, i64* %375, align 8
  %376 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 4, i32 1
  %377 = bitcast %"class.std::__1::__shared_weak_count"** %376 to i64*
  %378 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %376, align 8
  store i64 %369, i64* %377, align 8
  %379 = icmp eq %"class.std::__1::__shared_weak_count"* %378, null
  br i1 %379, label %390, label %380

380:                                              ; preds = %374
  %381 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %378, i64 0, i32 0, i32 1
  %382 = atomicrmw add i64* %381, i64 -1 acq_rel
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %390

384:                                              ; preds = %380
  %385 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %378, i64 0, i32 0
  %386 = bitcast %"class.std::__1::__shared_weak_count"* %378 to void (%"class.std::__1::__shared_count"*)***
  %387 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %386, align 8
  %388 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %387, i64 2
  %389 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %388, align 8
  call void %389(%"class.std::__1::__shared_count"* %385) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %378) #15
  br label %390

390:                                              ; preds = %374, %380, %384
  %391 = load %"class.rr::Routine"*, %"class.rr::Routine"** %55, align 8
  %392 = bitcast %"class.rr::Routine"* %391 to i8* (%"class.rr::Routine"*, i32)***
  %393 = load i8* (%"class.rr::Routine"*, i32)**, i8* (%"class.rr::Routine"*, i32)*** %392, align 8
  %394 = getelementptr inbounds i8* (%"class.rr::Routine"*, i32)*, i8* (%"class.rr::Routine"*, i32)** %393, i64 2
  %395 = load i8* (%"class.rr::Routine"*, i32)*, i8* (%"class.rr::Routine"*, i32)** %394, align 8
  %396 = call i8* %395(%"class.rr::Routine"* %391, i32 0) #15
  %397 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 5
  %398 = bitcast void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)** %397 to i8**
  store i8* %396, i8** %398, align 8
  %399 = load %"class.rr::Routine"*, %"class.rr::Routine"** %56, align 8
  %400 = bitcast %"class.rr::Routine"* %399 to i8* (%"class.rr::Routine"*, i32)***
  %401 = load i8* (%"class.rr::Routine"*, i32)**, i8* (%"class.rr::Routine"*, i32)*** %400, align 8
  %402 = getelementptr inbounds i8* (%"class.rr::Routine"*, i32)*, i8* (%"class.rr::Routine"*, i32)** %401, i64 2
  %403 = load i8* (%"class.rr::Routine"*, i32)*, i8* (%"class.rr::Routine"*, i32)** %402, align 8
  %404 = call i8* %403(%"class.rr::Routine"* %399, i32 0) #15
  %405 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 6
  %406 = bitcast i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)** %405 to i8**
  store i8* %404, i8** %406, align 8
  %407 = load %"class.rr::Routine"*, %"class.rr::Routine"** %57, align 8
  %408 = bitcast %"class.rr::Routine"* %407 to i8* (%"class.rr::Routine"*, i32)***
  %409 = load i8* (%"class.rr::Routine"*, i32)**, i8* (%"class.rr::Routine"*, i32)*** %408, align 8
  %410 = getelementptr inbounds i8* (%"class.rr::Routine"*, i32)*, i8* (%"class.rr::Routine"*, i32)** %409, i64 2
  %411 = load i8* (%"class.rr::Routine"*, i32)*, i8* (%"class.rr::Routine"*, i32)** %410, align 8
  %412 = call i8* %411(%"class.rr::Routine"* %407, i32 0) #15
  %413 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 7
  %414 = bitcast void (%"struct.sw::Primitive"*, i32, i32, %"struct.sw::DrawData"*)** %413 to i8**
  store i8* %412, i8** %414, align 8
  %415 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 8, i32 0
  store i64 %212, i64* %415, align 8
  %416 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 8, i32 1
  store i64 0, i64* %416, align 8
  %417 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 9
  %418 = bitcast %"struct.sw::SetupProcessor::State"* %417 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %418, i8* align 4 %28, i64 136, i1 false)
  %419 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  br label %424

420:                                              ; preds = %446
  %421 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %448, i64 0, i32 35
  %422 = load %"class.sw::Resource"*, %"class.sw::Resource"** %421, align 16
  %423 = icmp eq %"class.sw::Resource"* %422, null
  br i1 %423, label %455, label %450

424:                                              ; preds = %446, %390
  %425 = phi i64 [ 0, %390 ], [ %447, %446 ]
  %426 = phi %"class.sw::Context"* [ %419, %390 ], [ %448, %446 ]
  %427 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %426, i64 0, i32 34, i64 %425, i32 0, i32 0
  %428 = bitcast %"class.sw::Resource"** %427 to i64*
  %429 = load i64, i64* %428, align 16
  %430 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 10, i64 %425
  %431 = bitcast %"class.sw::Resource"** %430 to i64*
  store i64 %429, i64* %431, align 8
  %432 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %433 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %432, i64 0, i32 34, i64 %425, i32 0, i32 1
  %434 = bitcast i8** %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 1, i64 %425
  %437 = bitcast i8** %436 to i64*
  store i64 %435, i64* %437, align 8
  %438 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %439 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %438, i64 0, i32 34, i64 %425, i32 0, i32 2
  %440 = load i32, i32* %439, align 16
  %441 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 2, i64 %425
  store i32 %440, i32* %441, align 4
  %442 = load %"class.sw::Resource"*, %"class.sw::Resource"** %430, align 8
  %443 = icmp eq %"class.sw::Resource"* %442, null
  br i1 %443, label %446, label %444

444:                                              ; preds = %424
  %445 = call i8* @_ZN2sw8Resource4lockENS_8AccessorES1_(%"class.sw::Resource"* nonnull %442, i32 0, i32 1) #15
  br label %446

446:                                              ; preds = %424, %444
  %447 = add nuw nsw i64 %425, 1
  %448 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %449 = icmp eq i64 %447, 32
  br i1 %449, label %420, label %424

450:                                              ; preds = %420
  %451 = call i8* @_ZN2sw8Resource4lockENS_8AccessorES1_(%"class.sw::Resource"* nonnull %422, i32 0, i32 1) #15
  %452 = getelementptr inbounds i8, i8* %451, i64 %58
  %453 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 5
  store i8* %452, i8** %453, align 16
  %454 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  br label %455

455:                                              ; preds = %420, %450
  %456 = phi %"class.sw::Context"* [ %448, %420 ], [ %454, %450 ]
  %457 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %456, i64 0, i32 35
  %458 = bitcast %"class.sw::Resource"** %457 to i64*
  %459 = load i64, i64* %458, align 16
  %460 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 11
  %461 = bitcast %"class.sw::Resource"** %460 to i64*
  store i64 %459, i64* %461, align 8
  %462 = getelementptr %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 15, i64 0
  %463 = bitcast %"class.sw::Resource"** %462 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %463, i8 0, i64 256, i1 false)
  br label %472

464:                                              ; preds = %501
  %465 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %466 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %465, i64 0, i32 66
  %467 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %466, align 8
  %468 = icmp eq %"class.sw::PixelShader"* %467, null
  br i1 %468, label %469, label %505

469:                                              ; preds = %464
  %470 = getelementptr %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 16, i64 0
  %471 = bitcast %"class.sw::Resource"** %470 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %471, i8 0, i64 192, i1 false)
  br label %540

472:                                              ; preds = %501, %455
  %473 = phi i64 [ 0, %455 ], [ %503, %501 ]
  %474 = phi i8 [ %122, %455 ], [ %502, %501 ]
  %475 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 38, i32 0, i32 8, i64 %473
  %476 = bitcast %"struct.sw::Sampler::State"* %475 to i48*
  %477 = load i48, i48* %476, align 8
  %478 = and i48 %477, 7
  %479 = icmp eq i48 %478, 0
  br i1 %479, label %501, label %480

480:                                              ; preds = %472
  %481 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %482 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %481, i64 0, i32 33, i64 %473
  %483 = load %"class.sw::Resource"*, %"class.sw::Resource"** %482, align 8
  %484 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 15, i64 %473
  store %"class.sw::Resource"* %483, %"class.sw::Resource"** %484, align 8
  %485 = trunc i64 %473 to i32
  %486 = call zeroext i1 @_ZN2sw8Renderer18isReadWriteTextureEi(%"class.sw::Renderer"* %0, i32 %485) #16
  %487 = select i1 %486, i32 2, i32 1
  %488 = call i8* @_ZN2sw8Resource4lockENS_8AccessorES1_(%"class.sw::Resource"* %483, i32 0, i32 %487) #15
  %489 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %490 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %489, i64 0, i32 32, i64 %473
  %491 = call dereferenceable(2896) %"struct.sw::Texture"* @_ZN2sw7Sampler14getTextureDataEv(%"class.sw::Sampler"* %490) #15
  %492 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 4, i64 %473
  %493 = bitcast %"struct.sw::Texture"* %492 to i8*
  %494 = bitcast %"struct.sw::Texture"* %491 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %493, i8* align 16 %494, i64 2896, i1 false)
  %495 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %496 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %495, i64 0, i32 32, i64 %473
  %497 = call zeroext i1 @_ZNK2sw7Sampler12requiresSyncEv(%"class.sw::Sampler"* %496) #15
  %498 = zext i1 %497 to i8
  %499 = and i8 %474, 1
  %500 = or i8 %499, %498
  br label %501

501:                                              ; preds = %472, %480
  %502 = phi i8 [ %500, %480 ], [ %474, %472 ]
  %503 = add nuw nsw i64 %473, 1
  %504 = icmp eq i64 %503, 16
  br i1 %504, label %464, label %472

505:                                              ; preds = %464
  %506 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 22
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %521, label %509

509:                                              ; preds = %505
  %510 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 8
  %511 = bitcast %"struct.sw::DrawData::PS"* %510 to i8*
  %512 = icmp ult i32 %507, 8
  %513 = select i1 %512, i32 %507, i32 8
  %514 = shl nuw nsw i32 %513, 5
  %515 = zext i32 %514 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %511, i8* align 8 %60, i64 %515, i1 false)
  %516 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 8, i32 1
  %517 = bitcast [264 x %"struct.sw::float4"]* %516 to i8*
  %518 = load i32, i32* %506, align 4
  %519 = zext i32 %518 to i64
  %520 = shl nuw nsw i64 %519, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %517, i8* align 16 %62, i64 %520, i1 false)
  store i32 0, i32* %506, align 4
  br label %521

521:                                              ; preds = %505, %509
  %522 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 23
  %523 = load i32, i32* %522, align 8
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %530, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 8, i32 3
  %527 = bitcast [16 x %"struct.sw::int4"]* %526 to i8*
  %528 = zext i32 %523 to i64
  %529 = shl nuw nsw i64 %528, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %527, i8* align 16 %64, i64 %529, i1 false)
  store i32 0, i32* %522, align 8
  br label %530

530:                                              ; preds = %521, %525
  %531 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 24
  %532 = load i32, i32* %531, align 4
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %537, label %534

534:                                              ; preds = %530
  %535 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 8, i32 4, i64 0
  %536 = zext i32 %532 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %535, i8* align 16 %65, i64 %536, i1 false)
  store i32 0, i32* %531, align 4
  br label %537

537:                                              ; preds = %530, %534
  %538 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 8, i32 2, i64 0
  %539 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 16, i64 0
  call void @_ZN2sw14PixelProcessor18lockUniformBuffersEPPhPPNS_8ResourceE(%"class.sw::PixelProcessor"* %30, i8** %538, %"class.sw::Resource"** %539) #15
  br label %540

540:                                              ; preds = %469, %537
  %541 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %542 = call zeroext i16 @_ZNK2sw7Context16pixelShaderModelEv(%"class.sw::Context"* %541) #15
  %543 = icmp ult i16 %542, 261
  br i1 %543, label %544, label %563

544:                                              ; preds = %540, %556
  %545 = phi i64 [ %561, %556 ], [ 0, %540 ]
  %546 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 38, i32 0, i32 9, i64 %545
  %547 = bitcast %"struct.sw::TextureStage::State"* %546 to i48*
  %548 = load i48, i48* %547, align 8
  %549 = and i48 %548, 31
  %550 = icmp eq i48 %549, 0
  %551 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  br i1 %550, label %552, label %556

552:                                              ; preds = %544
  %553 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %551, i64 0, i32 66
  %554 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %553, align 8
  %555 = icmp eq %"class.sw::PixelShader"* %554, null
  br i1 %555, label %563, label %556

556:                                              ; preds = %544, %552
  %557 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %551, i64 0, i32 31, i64 %545, i32 0
  %558 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 18, i64 %545
  %559 = bitcast %"struct.sw::TextureStage::Uniforms"* %558 to i8*
  %560 = bitcast %"struct.sw::TextureStage::Uniforms"* %557 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %559, i8* align 16 %560, i64 144, i1 false)
  %561 = add nuw nsw i64 %545, 1
  %562 = icmp eq i64 %561, 8
  br i1 %562, label %563, label %544

563:                                              ; preds = %552, %556, %540
  %564 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %565 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %564, i64 0, i32 67
  %566 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %565, align 16
  %567 = icmp eq %"class.sw::VertexShader"* %566, null
  br i1 %567, label %649, label %568

568:                                              ; preds = %563
  %569 = bitcast %"class.sw::VertexShader"* %566 to %"class.sw::Shader"*
  %570 = call zeroext i16 @_ZNK2sw6Shader14getShaderModelEv(%"class.sw::Shader"* nonnull %569) #15
  %571 = icmp ugt i16 %570, 767
  br i1 %571, label %572, label %603

572:                                              ; preds = %568, %599
  %573 = phi i64 [ %601, %599 ], [ 0, %568 ]
  %574 = phi i8 [ %600, %599 ], [ %502, %568 ]
  %575 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 36, i32 0, i32 5, i64 %573
  %576 = bitcast %"struct.sw::Sampler::State"* %575 to i48*
  %577 = load i48, i48* %576, align 4
  %578 = and i48 %577, 7
  %579 = icmp eq i48 %578, 0
  br i1 %579, label %599, label %580

580:                                              ; preds = %572
  %581 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %582 = add nuw nsw i64 %573, 16
  %583 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %581, i64 0, i32 33, i64 %582
  %584 = load %"class.sw::Resource"*, %"class.sw::Resource"** %583, align 8
  %585 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 15, i64 %582
  store %"class.sw::Resource"* %584, %"class.sw::Resource"** %585, align 8
  %586 = call i8* @_ZN2sw8Resource4lockENS_8AccessorES1_(%"class.sw::Resource"* %584, i32 0, i32 1) #15
  %587 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %588 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %587, i64 0, i32 32, i64 %582
  %589 = call dereferenceable(2896) %"struct.sw::Texture"* @_ZN2sw7Sampler14getTextureDataEv(%"class.sw::Sampler"* %588) #15
  %590 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 4, i64 %582
  %591 = bitcast %"struct.sw::Texture"* %590 to i8*
  %592 = bitcast %"struct.sw::Texture"* %589 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %591, i8* align 16 %592, i64 2896, i1 false)
  %593 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %594 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %593, i64 0, i32 32, i64 %582
  %595 = call zeroext i1 @_ZNK2sw7Sampler12requiresSyncEv(%"class.sw::Sampler"* %594) #15
  %596 = zext i1 %595 to i8
  %597 = and i8 %574, 1
  %598 = or i8 %597, %596
  br label %599

599:                                              ; preds = %572, %580
  %600 = phi i8 [ %598, %580 ], [ %574, %572 ]
  %601 = add nuw nsw i64 %573, 1
  %602 = icmp eq i64 %601, 16
  br i1 %602, label %603, label %572

603:                                              ; preds = %599, %568
  %604 = phi i8 [ %502, %568 ], [ %600, %599 ]
  %605 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 19
  %606 = load i32, i32* %605, align 8
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %613, label %608

608:                                              ; preds = %603
  %609 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 0
  %610 = bitcast [260 x %"struct.sw::float4"]* %609 to i8*
  %611 = zext i32 %606 to i64
  %612 = shl nuw nsw i64 %611, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %610, i8* align 16 %67, i64 %612, i1 false)
  store i32 0, i32* %605, align 8
  br label %613

613:                                              ; preds = %603, %608
  %614 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 20
  %615 = load i32, i32* %614, align 4
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %622, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 7
  %619 = bitcast [16 x %"struct.sw::int4"]* %618 to i8*
  %620 = zext i32 %615 to i64
  %621 = shl nuw nsw i64 %620, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %619, i8* align 16 %69, i64 %621, i1 false)
  store i32 0, i32* %614, align 4
  br label %622

622:                                              ; preds = %613, %617
  %623 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 21
  %624 = load i32, i32* %623, align 8
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %629, label %626

626:                                              ; preds = %622
  %627 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 8, i64 0
  %628 = zext i32 %624 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %627, i8* align 16 %70, i64 %628, i1 false)
  store i32 0, i32* %623, align 8
  br label %629

629:                                              ; preds = %622, %626
  %630 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %631 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %630, i64 0, i32 67
  %632 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %631, align 16
  %633 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %632, i64 0, i32 7
  %634 = load i8, i8* %633, align 8, !range !2
  %635 = icmp eq i8 %634, 0
  br i1 %635, label %640, label %636

636:                                              ; preds = %629
  %637 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %630, i64 0, i32 69
  %638 = load i32, i32* %637, align 4
  %639 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 9
  store i32 %638, i32* %639, align 16
  br label %640

640:                                              ; preds = %629, %636
  %641 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 1, i64 0
  %642 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 17, i64 0
  call void @_ZN2sw15VertexProcessor18lockUniformBuffersEPPhPPNS_8ResourceE(%"class.sw::VertexProcessor"* %22, i8** %641, %"class.sw::Resource"** %642) #15
  %643 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 2, i64 0
  %644 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 3, i64 0
  %645 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 4, i64 0
  %646 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 5, i64 0
  %647 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7, i32 0, i32 6, i64 0
  %648 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 18, i64 0
  call void @_ZN2sw15VertexProcessor28lockTransformFeedbackBuffersEPPhPjS3_S3_S3_PPNS_8ResourceE(%"class.sw::VertexProcessor"* %22, i8** %643, i32* %644, i32* %645, i32* %646, i32* %647, %"class.sw::Resource"** %648) #15
  br label %657

649:                                              ; preds = %563
  %650 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 7
  %651 = bitcast %union.anon.1* %650 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %651, i8* align 16 %72, i64 3840, i1 false)
  %652 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 19
  store i32 260, i32* %652, align 8
  %653 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 20
  store i32 16, i32* %653, align 4
  %654 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 21
  store i32 16, i32* %654, align 8
  %655 = getelementptr %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 17, i64 0
  %656 = bitcast %"class.sw::Resource"** %655 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %656, i8 0, i64 704, i1 false)
  br label %657

657:                                              ; preds = %649, %640
  %658 = phi i8 [ %604, %640 ], [ %502, %649 ]
  %659 = load i32, i32* %73, align 4
  %660 = and i32 %659, 1024
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %667, label %662

662:                                              ; preds = %657
  %663 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 13
  %664 = bitcast [2 x %"struct.sw::PixelProcessor::Stencil"]* %663 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %664, i8* align 8 %75, i64 48, i1 false)
  %665 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 13, i64 1
  %666 = bitcast %"struct.sw::PixelProcessor::Stencil"* %665 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %666, i8* align 8 %77, i64 48, i1 false)
  br label %667

667:                                              ; preds = %657, %662
  %668 = load i32, i32* %78, align 8
  %669 = and i32 %668, 16384
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %674, label %671

671:                                              ; preds = %667
  %672 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 15
  %673 = bitcast %"struct.sw::PixelProcessor::Fog"* %672 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %673, i8* align 16 %80, i64 144, i1 false)
  br label %674

674:                                              ; preds = %667, %671
  %675 = load i32, i32* %81, align 8
  %676 = and i32 %675, 1
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %681, label %678

678:                                              ; preds = %674
  %679 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 11
  %680 = bitcast %"struct.sw::VertexProcessor::PointSprite"* %679 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %680, i8* align 16 %83, i64 48, i1 false)
  br label %681

681:                                              ; preds = %674, %678
  %682 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %683 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %682, i64 0, i32 102
  %684 = bitcast float* %683 to i32*
  %685 = load i32, i32* %684, align 4
  %686 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 12
  %687 = bitcast float* %686 to i32*
  store i32 %685, i32* %687, align 16
  %688 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 16
  %689 = bitcast %"struct.sw::PixelProcessor::Factor"* %688 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %689, i8* align 16 %85, i64 240, i1 false)
  %690 = load i16, i16* %86, align 4
  %691 = and i16 %690, 256
  %692 = icmp eq i16 %691, 0
  br i1 %692, label %748, label %693

693:                                              ; preds = %681
  %694 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %695 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %694, i64 0, i32 27
  %696 = load float, float* %695, align 4
  %697 = fmul float %696, 0x3F70101020000000
  %698 = fsub float 1.000000e+00, %697
  %699 = fcmp olt float %697, %698
  %700 = select i1 %699, float %697, float %698
  switch i32 %15, label %748 [
    i32 4, label %701
    i32 2, label %732
  ]

701:                                              ; preds = %693
  %702 = fmul float %700, 0x3FE3333340000000
  %703 = fsub float %697, %702
  %704 = insertelement <2 x float> undef, float %703, i32 0
  %705 = shufflevector <2 x float> %704, <2 x float> undef, <2 x i32> zeroinitializer
  %706 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 45
  %707 = bitcast %"struct.sw::float4"* %706 to <2 x float>*
  store <2 x float> %705, <2 x float>* %707, align 16
  %708 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 45, i32 2
  %709 = bitcast float* %708 to <2 x float>*
  store <2 x float> %705, <2 x float>* %709, align 8
  %710 = fmul float %700, 0x3FC99999A0000000
  %711 = fsub float %697, %710
  %712 = insertelement <2 x float> undef, float %711, i32 0
  %713 = shufflevector <2 x float> %712, <2 x float> undef, <2 x i32> zeroinitializer
  %714 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 46
  %715 = bitcast %"struct.sw::float4"* %714 to <2 x float>*
  store <2 x float> %713, <2 x float>* %715, align 16
  %716 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 46, i32 2
  %717 = bitcast float* %716 to <2 x float>*
  store <2 x float> %713, <2 x float>* %717, align 8
  %718 = fadd float %697, %710
  %719 = insertelement <2 x float> undef, float %718, i32 0
  %720 = shufflevector <2 x float> %719, <2 x float> undef, <2 x i32> zeroinitializer
  %721 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 47
  %722 = bitcast %"struct.sw::float4"* %721 to <2 x float>*
  store <2 x float> %720, <2 x float>* %722, align 16
  %723 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 47, i32 2
  %724 = bitcast float* %723 to <2 x float>*
  store <2 x float> %720, <2 x float>* %724, align 8
  %725 = fadd float %697, %702
  %726 = insertelement <2 x float> undef, float %725, i32 0
  %727 = shufflevector <2 x float> %726, <2 x float> undef, <2 x i32> zeroinitializer
  %728 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 48
  %729 = bitcast %"struct.sw::float4"* %728 to <2 x float>*
  store <2 x float> %727, <2 x float>* %729, align 16
  %730 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 48, i32 2
  %731 = bitcast float* %730 to <2 x float>*
  store <2 x float> %727, <2 x float>* %731, align 8
  br label %748

732:                                              ; preds = %693
  %733 = fmul float %700, 0x3FD3333340000000
  %734 = fsub float %697, %733
  %735 = insertelement <2 x float> undef, float %734, i32 0
  %736 = shufflevector <2 x float> %735, <2 x float> undef, <2 x i32> zeroinitializer
  %737 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 45
  %738 = bitcast %"struct.sw::float4"* %737 to <2 x float>*
  store <2 x float> %736, <2 x float>* %738, align 16
  %739 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 45, i32 2
  %740 = bitcast float* %739 to <2 x float>*
  store <2 x float> %736, <2 x float>* %740, align 8
  %741 = fadd float %697, %733
  %742 = insertelement <2 x float> undef, float %741, i32 0
  %743 = shufflevector <2 x float> %742, <2 x float> undef, <2 x i32> zeroinitializer
  %744 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 46
  %745 = bitcast %"struct.sw::float4"* %744 to <2 x float>*
  store <2 x float> %743, <2 x float>* %745, align 16
  %746 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 46, i32 2
  %747 = bitcast float* %746 to <2 x float>*
  store <2 x float> %743, <2 x float>* %747, align 8
  br label %748

748:                                              ; preds = %701, %732, %693, %681
  %749 = load i32, i32* %78, align 8
  %750 = and i32 %749, 262144
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %762, label %752

752:                                              ; preds = %748
  %753 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer12clusterCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %754 = icmp sgt i32 %753, 0
  br i1 %754, label %755, label %762

755:                                              ; preds = %752, %755
  %756 = phi i64 [ %758, %755 ], [ 0, %752 ]
  %757 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 17, i64 %756
  store i32 0, i32* %757, align 4
  %758 = add nuw nsw i64 %756, 1
  %759 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer12clusterCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %760 = sext i32 %759 to i64
  %761 = icmp slt i64 %758, %760
  br i1 %761, label %755, label %762

762:                                              ; preds = %755, %752, %748
  %763 = load float, float* %87, align 8
  %764 = fmul float %763, 5.000000e-01
  %765 = load float, float* %88, align 4
  %766 = fmul float %765, 5.000000e-01
  %767 = load float, float* %89, align 8
  %768 = fadd float %764, %767
  %769 = load float, float* %90, align 4
  %770 = fadd float %766, %769
  %771 = load float, float* %91, align 8
  %772 = load float, float* %92, align 4
  %773 = fsub float %772, %771
  %774 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %775 = call zeroext i1 @_ZNK2sw7Context14isDrawTriangleEb(%"class.sw::Context"* %774, i1 zeroext false) #15
  br i1 %775, label %776, label %781

776:                                              ; preds = %762
  %777 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %778 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %777, i64 0, i32 28
  %779 = load float, float* %778, align 16
  %780 = fadd float %771, %779
  br label %781

781:                                              ; preds = %776, %762
  %782 = phi float [ %780, %776 ], [ %771, %762 ]
  %783 = load i8, i8* @_ZN2sw24complementaryDepthBufferE, align 1, !range !2
  %784 = icmp eq i8 %783, 0
  %785 = fsub float -0.000000e+00, %773
  %786 = fsub float 1.000000e+00, %782
  %787 = select i1 %784, float %782, float %786
  %788 = select i1 %784, float %773, float %785
  %789 = fmul float %764, 1.600000e+01
  %790 = insertelement <2 x float> undef, float %789, i32 0
  %791 = shufflevector <2 x float> %790, <2 x float> undef, <2 x i32> zeroinitializer
  %792 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 19
  %793 = bitcast %"struct.sw::float4"* %792 to <2 x float>*
  store <2 x float> %791, <2 x float>* %793, align 16
  %794 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 19, i32 2
  %795 = bitcast float* %794 to <2 x float>*
  store <2 x float> %791, <2 x float>* %795, align 8
  %796 = fmul float %766, 1.600000e+01
  %797 = insertelement <2 x float> undef, float %796, i32 0
  %798 = shufflevector <2 x float> %797, <2 x float> undef, <2 x i32> zeroinitializer
  %799 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 20
  %800 = bitcast %"struct.sw::float4"* %799 to <2 x float>*
  store <2 x float> %798, <2 x float>* %800, align 16
  %801 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 20, i32 2
  %802 = bitcast float* %801 to <2 x float>*
  store <2 x float> %798, <2 x float>* %802, align 8
  %803 = fmul float %768, 1.600000e+01
  %804 = fadd float %803, -8.000000e+00
  %805 = insertelement <2 x float> undef, float %804, i32 0
  %806 = shufflevector <2 x float> %805, <2 x float> undef, <2 x i32> zeroinitializer
  %807 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 21
  %808 = bitcast %"struct.sw::float4"* %807 to <2 x float>*
  store <2 x float> %806, <2 x float>* %808, align 16
  %809 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 21, i32 2
  %810 = bitcast float* %809 to <2 x float>*
  store <2 x float> %806, <2 x float>* %810, align 8
  %811 = fmul float %770, 1.600000e+01
  %812 = fadd float %811, -8.000000e+00
  %813 = insertelement <2 x float> undef, float %812, i32 0
  %814 = shufflevector <2 x float> %813, <2 x float> undef, <2 x i32> zeroinitializer
  %815 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 22
  %816 = bitcast %"struct.sw::float4"* %815 to <2 x float>*
  store <2 x float> %814, <2 x float>* %816, align 16
  %817 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 22, i32 2
  %818 = bitcast float* %817 to <2 x float>*
  store <2 x float> %814, <2 x float>* %818, align 8
  %819 = getelementptr inbounds [5 x [16 x float]], [5 x [16 x float]]* bitcast (<{ [16 x float], <{ float, float, [14 x float] }>, <{ float, float, float, float, [12 x float] }>, <{ [8 x float], [8 x float] }>, [16 x float] }>* @_ZZN2sw8Renderer4drawENS_8DrawTypeEjjbE1X to [5 x [16 x float]]*), i64 0, i64 %95, i64 %121
  %820 = load float, float* %819, align 4
  %821 = fdiv float %820, %764
  %822 = insertelement <2 x float> undef, float %821, i32 0
  %823 = shufflevector <2 x float> %822, <2 x float> undef, <2 x i32> zeroinitializer
  %824 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 23
  %825 = bitcast %"struct.sw::float4"* %824 to <2 x float>*
  store <2 x float> %823, <2 x float>* %825, align 16
  %826 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 23, i32 2
  %827 = bitcast float* %826 to <2 x float>*
  store <2 x float> %823, <2 x float>* %827, align 8
  %828 = getelementptr inbounds [5 x [16 x float]], [5 x [16 x float]]* bitcast (<{ [16 x float], <{ float, float, [14 x float] }>, <{ float, float, float, float, [12 x float] }>, <{ [8 x float], [8 x float] }>, [16 x float] }>* @_ZZN2sw8Renderer4drawENS_8DrawTypeEjjbE1Y to [5 x [16 x float]]*), i64 0, i64 %95, i64 %121
  %829 = load float, float* %828, align 4
  %830 = fdiv float %829, %766
  %831 = insertelement <2 x float> undef, float %830, i32 0
  %832 = shufflevector <2 x float> %831, <2 x float> undef, <2 x i32> zeroinitializer
  %833 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 24
  %834 = bitcast %"struct.sw::float4"* %833 to <2 x float>*
  store <2 x float> %832, <2 x float>* %834, align 16
  %835 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 24, i32 2
  %836 = bitcast float* %835 to <2 x float>*
  store <2 x float> %832, <2 x float>* %836, align 8
  %837 = fdiv float 5.000000e-01, %764
  %838 = insertelement <2 x float> undef, float %837, i32 0
  %839 = shufflevector <2 x float> %838, <2 x float> undef, <2 x i32> zeroinitializer
  %840 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 25
  %841 = bitcast %"struct.sw::float4"* %840 to <2 x float>*
  store <2 x float> %839, <2 x float>* %841, align 16
  %842 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 25, i32 2
  %843 = bitcast float* %842 to <2 x float>*
  store <2 x float> %839, <2 x float>* %843, align 8
  %844 = fdiv float 5.000000e-01, %766
  %845 = insertelement <2 x float> undef, float %844, i32 0
  %846 = shufflevector <2 x float> %845, <2 x float> undef, <2 x i32> zeroinitializer
  %847 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 26
  %848 = bitcast %"struct.sw::float4"* %847 to <2 x float>*
  store <2 x float> %846, <2 x float>* %848, align 16
  %849 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 26, i32 2
  %850 = bitcast float* %849 to <2 x float>*
  store <2 x float> %846, <2 x float>* %850, align 8
  %851 = load float, float* %88, align 4
  %852 = call float @llvm.fabs.f32(float %851) #14
  %853 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 27
  store float %852, float* %853, align 16
  %854 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %855 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %854, i64 0, i32 29
  %856 = bitcast float* %855 to i32*
  %857 = load i32, i32* %856, align 4
  %858 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 28
  %859 = bitcast float* %858 to i32*
  store i32 %857, i32* %859, align 4
  %860 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 29
  store float %788, float* %860, align 8
  %861 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 30
  store float %787, float* %861, align 4
  %862 = load i32, i32* %96, align 16
  %863 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %862, i32* %863 release, align 4
  %864 = load i32, i32* %96, align 16
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %912, label %866

866:                                              ; preds = %781
  %867 = and i32 %864, 256
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %873, label %869

869:                                              ; preds = %866
  %870 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 31, i64 0
  %871 = bitcast %"struct.sw::Plane"* %870 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %871, i8* align 4 %98, i64 16, i1 false)
  %872 = load i32, i32* %96, align 16
  br label %873

873:                                              ; preds = %866, %869
  %874 = phi i32 [ %864, %866 ], [ %872, %869 ]
  %875 = and i32 %874, 512
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %881, label %877

877:                                              ; preds = %873
  %878 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 31, i64 1
  %879 = bitcast %"struct.sw::Plane"* %878 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %879, i8* align 4 %100, i64 16, i1 false)
  %880 = load i32, i32* %96, align 16
  br label %881

881:                                              ; preds = %873, %877
  %882 = phi i32 [ %874, %873 ], [ %880, %877 ]
  %883 = and i32 %882, 1024
  %884 = icmp eq i32 %883, 0
  br i1 %884, label %889, label %885

885:                                              ; preds = %881
  %886 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 31, i64 2
  %887 = bitcast %"struct.sw::Plane"* %886 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %887, i8* align 4 %102, i64 16, i1 false)
  %888 = load i32, i32* %96, align 16
  br label %889

889:                                              ; preds = %881, %885
  %890 = phi i32 [ %882, %881 ], [ %888, %885 ]
  %891 = and i32 %890, 2048
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %897, label %893

893:                                              ; preds = %889
  %894 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 31, i64 3
  %895 = bitcast %"struct.sw::Plane"* %894 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %895, i8* align 4 %104, i64 16, i1 false)
  %896 = load i32, i32* %96, align 16
  br label %897

897:                                              ; preds = %889, %893
  %898 = phi i32 [ %890, %889 ], [ %896, %893 ]
  %899 = and i32 %898, 4096
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %905, label %901

901:                                              ; preds = %897
  %902 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 31, i64 4
  %903 = bitcast %"struct.sw::Plane"* %902 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %903, i8* align 4 %106, i64 16, i1 false)
  %904 = load i32, i32* %96, align 16
  br label %905

905:                                              ; preds = %897, %901
  %906 = phi i32 [ %898, %897 ], [ %904, %901 ]
  %907 = and i32 %906, 8192
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %912, label %909

909:                                              ; preds = %905
  %910 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 31, i64 5
  %911 = bitcast %"struct.sw::Plane"* %910 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %911, i8* align 4 %108, i64 16, i1 false)
  br label %912

912:                                              ; preds = %905, %781, %909
  %913 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  br label %928

914:                                              ; preds = %981
  %915 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %984, i64 0, i32 52
  %916 = bitcast %"class.sw::Surface"** %915 to i64*
  %917 = load i64, i64* %916, align 8
  %918 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 13
  %919 = bitcast %"class.sw::Surface"** %918 to i64*
  store i64 %917, i64* %919, align 8
  %920 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %921 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %920, i64 0, i32 55
  %922 = bitcast %"class.sw::Surface"** %921 to i64*
  %923 = load i64, i64* %922, align 8
  %924 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 14
  %925 = bitcast %"class.sw::Surface"** %924 to i64*
  store i64 %923, i64* %925, align 8
  %926 = icmp eq i64 %917, 0
  %927 = inttoptr i64 %923 to %"class.sw::Surface"*
  br i1 %926, label %1032, label %986

928:                                              ; preds = %981, %912
  %929 = phi i64 [ 0, %912 ], [ %983, %981 ]
  %930 = phi %"class.sw::Context"* [ %913, %912 ], [ %984, %981 ]
  %931 = phi i8 [ %658, %912 ], [ %982, %981 ]
  %932 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %930, i64 0, i32 50, i64 %929
  %933 = load %"class.sw::Surface"*, %"class.sw::Surface"** %932, align 8
  %934 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 12, i64 %929
  store %"class.sw::Surface"* %933, %"class.sw::Surface"** %934, align 8
  %935 = icmp eq %"class.sw::Surface"* %933, null
  br i1 %935, label %981, label %936

936:                                              ; preds = %928
  %937 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %938 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %937, i64 0, i32 51, i64 %929
  %939 = load i32, i32* %938, align 4
  %940 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %937, i64 0, i32 50, i64 %929
  %941 = load %"class.sw::Surface"*, %"class.sw::Surface"** %940, align 8
  %942 = bitcast %"class.sw::Surface"* %941 to i1 (%"class.sw::Surface"*)***
  %943 = load i1 (%"class.sw::Surface"*)**, i1 (%"class.sw::Surface"*)*** %942, align 8
  %944 = getelementptr inbounds i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %943, i64 4
  %945 = load i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %944, align 8
  %946 = call zeroext i1 %945(%"class.sw::Surface"* %941) #15
  %947 = zext i1 %946 to i8
  %948 = and i8 %931, 1
  %949 = or i8 %948, %947
  %950 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %951 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %950, i64 0, i32 50, i64 %929
  %952 = load %"class.sw::Surface"*, %"class.sw::Surface"** %951, align 8
  %953 = bitcast %"class.sw::Surface"* %952 to i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)***
  %954 = load i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)**, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*** %953, align 8
  %955 = getelementptr inbounds i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)** %954, i64 2
  %956 = load i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)** %955, align 8
  %957 = call i8* %956(%"class.sw::Surface"* %952, i32 0, i32 0, i32 %939, i32 3, i32 2) #15
  %958 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 32, i64 %929
  %959 = bitcast i32** %958 to i8**
  store i8* %957, i8** %959, align 8
  %960 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %961 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %960, i64 0, i32 50, i64 %929
  %962 = load %"class.sw::Surface"*, %"class.sw::Surface"** %961, align 8
  %963 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %962, i64 0, i32 3, i32 9
  %964 = load i32, i32* %963, align 4
  %965 = mul nsw i32 %964, %129
  %966 = bitcast i8* %957 to i32*
  %967 = sext i32 %965 to i64
  %968 = getelementptr inbounds i32, i32* %966, i64 %967
  store i32* %968, i32** %958, align 8
  %969 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %970 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %969, i64 0, i32 50, i64 %929
  %971 = load %"class.sw::Surface"*, %"class.sw::Surface"** %970, align 8
  %972 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %971, i64 0, i32 3, i32 7
  %973 = load i32, i32* %972, align 4
  %974 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 33, i64 %929
  store i32 %973, i32* %974, align 4
  %975 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %976 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %975, i64 0, i32 50, i64 %929
  %977 = load %"class.sw::Surface"*, %"class.sw::Surface"** %976, align 8
  %978 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %977, i64 0, i32 3, i32 9
  %979 = load i32, i32* %978, align 4
  %980 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 34, i64 %929
  store i32 %979, i32* %980, align 4
  br label %981

981:                                              ; preds = %928, %936
  %982 = phi i8 [ %949, %936 ], [ %931, %928 ]
  %983 = add nuw nsw i64 %929, 1
  %984 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %985 = icmp eq i64 %983, 8
  br i1 %985, label %914, label %928

986:                                              ; preds = %914
  %987 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %988 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %987, i64 0, i32 53
  %989 = load i32, i32* %988, align 16
  %990 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %987, i64 0, i32 52
  %991 = load %"class.sw::Surface"*, %"class.sw::Surface"** %990, align 8
  %992 = bitcast %"class.sw::Surface"* %991 to i1 (%"class.sw::Surface"*)***
  %993 = load i1 (%"class.sw::Surface"*)**, i1 (%"class.sw::Surface"*)*** %992, align 8
  %994 = getelementptr inbounds i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %993, i64 4
  %995 = load i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %994, align 8
  %996 = call zeroext i1 %995(%"class.sw::Surface"* %991) #15
  %997 = zext i1 %996 to i8
  %998 = and i8 %982, 1
  %999 = or i8 %998, %997
  %1000 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1001 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1000, i64 0, i32 52
  %1002 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1001, align 8
  %1003 = bitcast %"class.sw::Surface"* %1002 to i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)***
  %1004 = load i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)**, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*** %1003, align 8
  %1005 = getelementptr inbounds i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)** %1004, i64 2
  %1006 = load i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)*, i8* (%"class.sw::Surface"*, i32, i32, i32, i32, i32)** %1005, align 8
  %1007 = call i8* %1006(%"class.sw::Surface"* %1002, i32 0, i32 0, i32 %989, i32 3, i32 2) #15
  %1008 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 35
  %1009 = bitcast float** %1008 to i8**
  store i8* %1007, i8** %1009, align 16
  %1010 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1011 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1010, i64 0, i32 52
  %1012 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1011, align 8
  %1013 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %1012, i64 0, i32 3, i32 9
  %1014 = load i32, i32* %1013, align 4
  %1015 = mul nsw i32 %1014, %129
  %1016 = bitcast i8* %1007 to float*
  %1017 = sext i32 %1015 to i64
  %1018 = getelementptr inbounds float, float* %1016, i64 %1017
  store float* %1018, float** %1008, align 16
  %1019 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1020 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1019, i64 0, i32 52
  %1021 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1020, align 8
  %1022 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %1021, i64 0, i32 3, i32 7
  %1023 = load i32, i32* %1022, align 4
  %1024 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 36
  store i32 %1023, i32* %1024, align 8
  %1025 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1026 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1025, i64 0, i32 52
  %1027 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1026, align 8
  %1028 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %1027, i64 0, i32 3, i32 9
  %1029 = load i32, i32* %1028, align 4
  %1030 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 37
  store i32 %1029, i32* %1030, align 4
  %1031 = load %"class.sw::Surface"*, %"class.sw::Surface"** %924, align 8
  br label %1032

1032:                                             ; preds = %914, %986
  %1033 = phi %"class.sw::Surface"* [ %927, %914 ], [ %1031, %986 ]
  %1034 = phi i8 [ %982, %914 ], [ %999, %986 ]
  %1035 = icmp eq %"class.sw::Surface"* %1033, null
  br i1 %1035, label %1075, label %1036

1036:                                             ; preds = %1032
  %1037 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1038 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1037, i64 0, i32 56
  %1039 = load i32, i32* %1038, align 16
  %1040 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1037, i64 0, i32 55
  %1041 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1040, align 8
  %1042 = bitcast %"class.sw::Surface"* %1041 to i1 (%"class.sw::Surface"*)***
  %1043 = load i1 (%"class.sw::Surface"*)**, i1 (%"class.sw::Surface"*)*** %1042, align 8
  %1044 = getelementptr inbounds i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %1043, i64 4
  %1045 = load i1 (%"class.sw::Surface"*)*, i1 (%"class.sw::Surface"*)** %1044, align 8
  %1046 = call zeroext i1 %1045(%"class.sw::Surface"* %1041) #15
  %1047 = zext i1 %1046 to i8
  %1048 = and i8 %1034, 1
  %1049 = or i8 %1048, %1047
  %1050 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1051 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1050, i64 0, i32 55
  %1052 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1051, align 8
  %1053 = call i8* @_ZN2sw7Surface11lockStencilEiiiNS_8AccessorE(%"class.sw::Surface"* %1052, i32 0, i32 0, i32 %1039, i32 2) #15
  %1054 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 38
  store i8* %1053, i8** %1054, align 16
  %1055 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1056 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1055, i64 0, i32 55
  %1057 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1056, align 8
  %1058 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %1057, i64 0, i32 3, i32 9
  %1059 = load i32, i32* %1058, align 4
  %1060 = mul nsw i32 %1059, %129
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds i8, i8* %1053, i64 %1061
  store i8* %1062, i8** %1054, align 16
  %1063 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1064 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1063, i64 0, i32 55
  %1065 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1064, align 8
  %1066 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %1065, i64 0, i32 4, i32 7
  %1067 = load i32, i32* %1066, align 4
  %1068 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 39
  store i32 %1067, i32* %1068, align 8
  %1069 = load %"class.sw::Context"*, %"class.sw::Context"** %9, align 16
  %1070 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %1069, i64 0, i32 55
  %1071 = load %"class.sw::Surface"*, %"class.sw::Surface"** %1070, align 8
  %1072 = getelementptr inbounds %"class.sw::Surface", %"class.sw::Surface"* %1071, i64 0, i32 4, i32 9
  %1073 = load i32, i32* %1072, align 4
  %1074 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 40
  store i32 %1073, i32* %1074, align 4
  br label %1075

1075:                                             ; preds = %1032, %1036
  %1076 = phi i8 [ %1049, %1036 ], [ %1034, %1032 ]
  %1077 = load i32, i32* %109, align 16
  %1078 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 41
  store i32 %1077, i32* %1078, align 16
  %1079 = load i32, i32* %110, align 8
  %1080 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 42
  store i32 %1079, i32* %1080, align 4
  %1081 = load i32, i32* %111, align 4
  %1082 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 43
  store i32 %1081, i32* %1082, align 8
  %1083 = load i32, i32* %112, align 4
  %1084 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %252, i64 0, i32 44
  store i32 %1083, i32* %1084, align 4
  %1085 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %1085 release, align 4
  %1086 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %3, i32* %1086 release, align 4
  %1087 = add i32 %113, %213
  %1088 = udiv i32 %1087, %213
  %1089 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %229, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1088, i32* %1089 release, align 4
  %1090 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %114) #15
  %1091 = atomicrmw add i32* %45, i32 1 acq_rel
  %1092 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %114) #15
  %1093 = load atomic i32, i32* %115 acquire, align 4
  %1094 = icmp eq i32 %1093, 0
  br i1 %1094, label %1095, label %1117

1095:                                             ; preds = %1075
  %1096 = load %"class.sw::Event"*, %"class.sw::Event"** %116, align 8
  %1097 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %1096, i64 0, i32 1
  %1098 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1097) #15
  %1099 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %1096, i64 0, i32 2
  %1100 = load volatile i8, i8* %1099, align 8, !range !2
  %1101 = icmp eq i8 %1100, 0
  br i1 %1101, label %1102, label %1108

1102:                                             ; preds = %1095
  %1103 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %1096, i64 0, i32 0
  br label %1104

1104:                                             ; preds = %1104, %1102
  %1105 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %1103, %union.pthread_mutex_t* %1097) #15
  %1106 = load volatile i8, i8* %1099, align 8, !range !2
  %1107 = icmp eq i8 %1106, 0
  br i1 %1107, label %1104, label %1108

1108:                                             ; preds = %1104, %1095
  store volatile i8 0, i8* %1099, align 8
  %1109 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1097) #15
  store atomic i32 1, i32* %115 release, align 4
  store atomic i32 2, i32* %117 release, align 4
  %1110 = load %"class.sw::Event"*, %"class.sw::Event"** %118, align 8
  %1111 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %1110, i64 0, i32 1
  %1112 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1111) #15
  %1113 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %1110, i64 0, i32 2
  store volatile i8 1, i8* %1113, align 8
  %1114 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %1110, i64 0, i32 0
  %1115 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %1114) #15
  %1116 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1111) #15
  br label %1117

1117:                                             ; preds = %120, %1075, %1108
  %1118 = phi i8 [ %1076, %1108 ], [ %1076, %1075 ], [ %122, %120 ]
  %1119 = add nuw nsw i64 %121, 1
  %1120 = icmp eq i64 %1119, %119
  br i1 %1120, label %1121, label %120

1121:                                             ; preds = %1117
  %1122 = and i8 %1118, 1
  %1123 = icmp eq i8 %1122, 0
  br i1 %1123, label %1129, label %1124

1124:                                             ; preds = %1121
  %1125 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 35
  %1126 = load %"class.sw::Resource"*, %"class.sw::Resource"** %1125, align 8
  %1127 = call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* %1126, i32 0) #15
  %1128 = load %"class.sw::Resource"*, %"class.sw::Resource"** %1125, align 8
  call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* %1128) #15
  br label %1129

1129:                                             ; preds = %203, %5, %1121, %1124
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer13updateClipperEv(%"class.sw::Renderer"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %144, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  %7 = tail call zeroext i1 @_ZN2sw15VertexProcessor15isFixedFunctionEv(%"class.sw::VertexProcessor"* %6) #15
  br i1 %7, label %8, label %93

8:                                                ; preds = %5
  %9 = tail call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw15VertexProcessor16getViewTransformEv(%"class.sw::VertexProcessor"* %6) #15
  %10 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 16
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 0
  %16 = tail call { <2 x float>, <2 x float> } @_ZN2swmlERKNS_6MatrixERKNS_5PlaneE(%"struct.sw::Matrix"* dereferenceable(64) %9, %"struct.sw::Plane"* dereferenceable(16) %15) #15
  %17 = extractvalue { <2 x float>, <2 x float> } %16, 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 1
  %19 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13
  %20 = bitcast [6 x %"struct.sw::Plane"]* %19 to <2 x float>*
  store <2 x float> %17, <2 x float>* %20, align 8
  %21 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 0, i32 2
  %22 = bitcast float* %21 to <2 x float>*
  store <2 x float> %18, <2 x float>* %22, align 8
  %23 = load i32, i32* %10, align 16
  br label %24

24:                                               ; preds = %8, %14
  %25 = phi i32 [ %11, %8 ], [ %23, %14 ]
  %26 = and i32 %25, 512
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 1
  %30 = tail call { <2 x float>, <2 x float> } @_ZN2swmlERKNS_6MatrixERKNS_5PlaneE(%"struct.sw::Matrix"* dereferenceable(64) %9, %"struct.sw::Plane"* dereferenceable(16) %29) #15
  %31 = extractvalue { <2 x float>, <2 x float> } %30, 0
  %32 = extractvalue { <2 x float>, <2 x float> } %30, 1
  %33 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 1
  %34 = bitcast %"struct.sw::Plane"* %33 to <2 x float>*
  store <2 x float> %31, <2 x float>* %34, align 8
  %35 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 1, i32 2
  %36 = bitcast float* %35 to <2 x float>*
  store <2 x float> %32, <2 x float>* %36, align 8
  %37 = load i32, i32* %10, align 16
  br label %38

38:                                               ; preds = %24, %28
  %39 = phi i32 [ %25, %24 ], [ %37, %28 ]
  %40 = and i32 %39, 1024
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 2
  %44 = tail call { <2 x float>, <2 x float> } @_ZN2swmlERKNS_6MatrixERKNS_5PlaneE(%"struct.sw::Matrix"* dereferenceable(64) %9, %"struct.sw::Plane"* dereferenceable(16) %43) #15
  %45 = extractvalue { <2 x float>, <2 x float> } %44, 0
  %46 = extractvalue { <2 x float>, <2 x float> } %44, 1
  %47 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 2
  %48 = bitcast %"struct.sw::Plane"* %47 to <2 x float>*
  store <2 x float> %45, <2 x float>* %48, align 8
  %49 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 2, i32 2
  %50 = bitcast float* %49 to <2 x float>*
  store <2 x float> %46, <2 x float>* %50, align 8
  %51 = load i32, i32* %10, align 16
  br label %52

52:                                               ; preds = %38, %42
  %53 = phi i32 [ %39, %38 ], [ %51, %42 ]
  %54 = and i32 %53, 2048
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %66, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 3
  %58 = tail call { <2 x float>, <2 x float> } @_ZN2swmlERKNS_6MatrixERKNS_5PlaneE(%"struct.sw::Matrix"* dereferenceable(64) %9, %"struct.sw::Plane"* dereferenceable(16) %57) #15
  %59 = extractvalue { <2 x float>, <2 x float> } %58, 0
  %60 = extractvalue { <2 x float>, <2 x float> } %58, 1
  %61 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 3
  %62 = bitcast %"struct.sw::Plane"* %61 to <2 x float>*
  store <2 x float> %59, <2 x float>* %62, align 8
  %63 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 3, i32 2
  %64 = bitcast float* %63 to <2 x float>*
  store <2 x float> %60, <2 x float>* %64, align 8
  %65 = load i32, i32* %10, align 16
  br label %66

66:                                               ; preds = %52, %56
  %67 = phi i32 [ %53, %52 ], [ %65, %56 ]
  %68 = and i32 %67, 4096
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 4
  %72 = tail call { <2 x float>, <2 x float> } @_ZN2swmlERKNS_6MatrixERKNS_5PlaneE(%"struct.sw::Matrix"* dereferenceable(64) %9, %"struct.sw::Plane"* dereferenceable(16) %71) #15
  %73 = extractvalue { <2 x float>, <2 x float> } %72, 0
  %74 = extractvalue { <2 x float>, <2 x float> } %72, 1
  %75 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 4
  %76 = bitcast %"struct.sw::Plane"* %75 to <2 x float>*
  store <2 x float> %73, <2 x float>* %76, align 8
  %77 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 4, i32 2
  %78 = bitcast float* %77 to <2 x float>*
  store <2 x float> %74, <2 x float>* %78, align 8
  %79 = load i32, i32* %10, align 16
  br label %80

80:                                               ; preds = %66, %70
  %81 = phi i32 [ %67, %66 ], [ %79, %70 ]
  %82 = and i32 %81, 8192
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %143, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 5
  %86 = tail call { <2 x float>, <2 x float> } @_ZN2swmlERKNS_6MatrixERKNS_5PlaneE(%"struct.sw::Matrix"* dereferenceable(64) %9, %"struct.sw::Plane"* dereferenceable(16) %85) #15
  %87 = extractvalue { <2 x float>, <2 x float> } %86, 0
  %88 = extractvalue { <2 x float>, <2 x float> } %86, 1
  %89 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 5
  %90 = bitcast %"struct.sw::Plane"* %89 to <2 x float>*
  store <2 x float> %87, <2 x float>* %90, align 8
  %91 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 5, i32 2
  %92 = bitcast float* %91 to <2 x float>*
  store <2 x float> %88, <2 x float>* %92, align 8
  br label %143

93:                                               ; preds = %5
  %94 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 9
  %95 = load i32, i32* %94, align 16
  %96 = and i32 %95, 256
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 0
  %100 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 0
  %101 = bitcast %"struct.sw::Plane"* %100 to i8*
  %102 = bitcast %"struct.sw::Plane"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 4 %102, i64 16, i1 false)
  br label %103

103:                                              ; preds = %93, %98
  %104 = and i32 %95, 512
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %111, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 1
  %108 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 1
  %109 = bitcast %"struct.sw::Plane"* %108 to i8*
  %110 = bitcast %"struct.sw::Plane"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 4 %110, i64 16, i1 false)
  br label %111

111:                                              ; preds = %103, %106
  %112 = and i32 %95, 1024
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %119, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 2
  %116 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 2
  %117 = bitcast %"struct.sw::Plane"* %116 to i8*
  %118 = bitcast %"struct.sw::Plane"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 4 %118, i64 16, i1 false)
  br label %119

119:                                              ; preds = %111, %114
  %120 = and i32 %95, 2048
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 3
  %124 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 3
  %125 = bitcast %"struct.sw::Plane"* %124 to i8*
  %126 = bitcast %"struct.sw::Plane"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 4 %126, i64 16, i1 false)
  br label %127

127:                                              ; preds = %119, %122
  %128 = and i32 %95, 4096
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 4
  %132 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 4
  %133 = bitcast %"struct.sw::Plane"* %132 to i8*
  %134 = bitcast %"struct.sw::Plane"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 4 %134, i64 16, i1 false)
  br label %135

135:                                              ; preds = %127, %130
  %136 = and i32 %95, 8192
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 5
  %140 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 13, i64 5
  %141 = bitcast %"struct.sw::Plane"* %140 to i8*
  %142 = bitcast %"struct.sw::Plane"* %139 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 4 %142, i64 16, i1 false)
  br label %143

143:                                              ; preds = %84, %80, %135, %138
  store i8 0, i8* %2, align 8
  br label %144

144:                                              ; preds = %1, %143
  ret void
}

; Function Attrs: optsize
declare i32 @_ZNK2sw7Context19getSuperSampleCountEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare i32 @_ZNK2sw7Context19getMultiSampleCountEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor6updateENS_8DrawTypeE(%"struct.sw::VertexProcessor::State"* sret, %"class.sw::VertexProcessor"*, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZNK2sw14SetupProcessor6updateEv(%"struct.sw::SetupProcessor::State"* sret, %"class.sw::SetupProcessor"*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZNK2sw14PixelProcessor6updateEv(%"struct.sw::PixelProcessor::State"* sret, %"class.sw::PixelProcessor"*) local_unnamed_addr #5

; Function Attrs: optsize
declare { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw15VertexProcessor7routineERKNS0_5StateE(%"class.sw::VertexProcessor"*, %"struct.sw::VertexProcessor::State"* dereferenceable(392)) local_unnamed_addr #5

; Function Attrs: optsize
declare { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw14SetupProcessor7routineERKNS0_5StateE(%"class.sw::SetupProcessor"*, %"struct.sw::SetupProcessor::State"* dereferenceable(136)) local_unnamed_addr #5

; Function Attrs: optsize
declare { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* } @_ZN2sw14PixelProcessor7routineERKNS0_5StateE(%"class.sw::PixelProcessor"*, %"struct.sw::PixelProcessor::State"* dereferenceable(316)) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZNK2sw7Context14isDrawTriangleEb(%"class.sw::Context"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2sw8Renderer19setupSolidTrianglesEii(%"class.sw::Renderer"* nocapture readonly, i32, i32) #2 align 2 {
  %4 = alloca %"struct.sw::Polygon", align 16
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 %5
  %7 = load %"struct.sw::Triangle"*, %"struct.sw::Triangle"** %6, align 8
  %8 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 11, i64 %5
  %9 = load %"struct.sw::Primitive"*, %"struct.sw::Primitive"** %8, align 8
  %10 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = and i32 %11, 15
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %13
  %15 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %14, align 8
  %16 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %15, i64 0, i32 6
  %17 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %15, i64 0, i32 9, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %15, i64 0, i32 30
  %20 = load %"struct.sw::DrawData"*, %"struct.sw::DrawData"** %19, align 8
  %21 = icmp sgt i32 %2, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %3
  %23 = lshr i32 %18, 8
  %24 = and i32 %23, 63
  %25 = lshr i32 %18, 25
  %26 = and i32 %25, 7
  %27 = bitcast %"struct.sw::Polygon"* %4 to i8*
  %28 = zext i32 %24 to i64
  %29 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %4, i64 0, i32 1, i64 0, i64 0
  %30 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %4, i64 0, i32 1, i64 0, i64 1
  %31 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %4, i64 0, i32 1, i64 0, i64 2
  %32 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %4, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %4, i64 0, i32 3
  %34 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %4, i64 0, i32 4
  %35 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %15, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 5
  %37 = zext i32 %26 to i64
  br label %40

38:                                               ; preds = %79, %3
  %39 = phi i32 [ 0, %3 ], [ %81, %79 ]
  ret i32 %39

40:                                               ; preds = %79, %22
  %41 = phi i32 [ 0, %22 ], [ %82, %79 ]
  %42 = phi i32 [ 0, %22 ], [ %81, %79 ]
  %43 = phi %"struct.sw::Triangle"* [ %7, %22 ], [ %83, %79 ]
  %44 = phi %"struct.sw::Primitive"* [ %9, %22 ], [ %80, %79 ]
  %45 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %43, i64 0, i32 0, i32 5
  %46 = load i32, i32* %45, align 16
  %47 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %43, i64 0, i32 1, i32 5
  %48 = load i32, i32* %47, align 16
  %49 = and i32 %48, %46
  %50 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %43, i64 0, i32 2, i32 5
  %51 = load i32, i32* %50, align 16
  %52 = and i32 %49, %51
  %53 = icmp eq i32 %52, 128
  br i1 %53, label %54, label %79

54:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 2320, i8* nonnull %27) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %27, i8* align 16 bitcast (%"struct.sw::Polygon"* @__const._ZN2sw8Renderer10setupPointERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE.polygon to i8*), i64 2320, i1 false)
  %55 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %43, i64 0, i32 0, i32 0, i32 0, i64 %28
  %56 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %43, i64 0, i32 1, i32 0, i32 0, i64 %28
  %57 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %43, i64 0, i32 2, i32 0, i32 0, i64 %28
  store %"struct.sw::float4"* %55, %"struct.sw::float4"** %29, align 16
  store %"struct.sw::float4"* %56, %"struct.sw::float4"** %30, align 8
  store %"struct.sw::float4"* %57, %"struct.sw::float4"** %31, align 16
  store i32 3, i32* %32, align 16
  store i32 0, i32* %33, align 4
  store i32 0, i32* %34, align 8
  %58 = load i32, i32* %45, align 16
  %59 = load i32, i32* %47, align 16
  %60 = or i32 %59, %58
  %61 = load i32, i32* %50, align 16
  %62 = or i32 %60, %61
  %63 = load atomic i32, i32* %35 acquire, align 4
  %64 = or i32 %62, %63
  %65 = icmp eq i32 %64, 128
  br i1 %65, label %69, label %66

66:                                               ; preds = %54
  %67 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %36, align 8
  %68 = call zeroext i1 @_ZN2sw7Clipper4clipERNS_7PolygonEiRKNS_8DrawCallE(%"class.sw::Clipper"* %67, %"struct.sw::Polygon"* nonnull dereferenceable(2320) %4, i32 %64, %"struct.sw::DrawCall"* dereferenceable(1784) %15) #15
  br i1 %68, label %69, label %76

69:                                               ; preds = %54, %66
  %70 = load i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)*, i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)** %16, align 8
  %71 = call zeroext i1 %70(%"struct.sw::Primitive"* %44, %"struct.sw::Triangle"* %43, %"struct.sw::Polygon"* nonnull %4, %"struct.sw::DrawData"* %20) #15
  %72 = getelementptr inbounds %"struct.sw::Primitive", %"struct.sw::Primitive"* %44, i64 %37
  %73 = select i1 %71, %"struct.sw::Primitive"* %72, %"struct.sw::Primitive"* %44
  %74 = zext i1 %71 to i32
  %75 = add nsw i32 %42, %74
  br label %76

76:                                               ; preds = %69, %66
  %77 = phi %"struct.sw::Primitive"* [ %44, %66 ], [ %73, %69 ]
  %78 = phi i32 [ %42, %66 ], [ %75, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 2320, i8* nonnull %27) #14
  br label %79

79:                                               ; preds = %76, %40
  %80 = phi %"struct.sw::Primitive"* [ %77, %76 ], [ %44, %40 ]
  %81 = phi i32 [ %78, %76 ], [ %42, %40 ]
  %82 = add nuw nsw i32 %41, 1
  %83 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %43, i64 1
  %84 = icmp eq i32 %82, %2
  br i1 %84, label %38, label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2sw8Renderer22setupWireframeTriangleEii(%"class.sw::Renderer"* nocapture readonly, i32, i32) #2 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 %4
  %6 = load %"struct.sw::Triangle"*, %"struct.sw::Triangle"** %5, align 8
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 11, i64 %4
  %8 = load %"struct.sw::Primitive"*, %"struct.sw::Primitive"** %7, align 8
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = and i32 %10, 15
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %12
  %14 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %13, align 8
  %15 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 0, i32 0, i32 0, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"struct.sw::Vertex", %"struct.sw::Vertex"* %15, i64 0, i32 0, i32 0, i64 0, i32 0
  %20 = load float, float* %19, align 16
  %21 = fmul float %18, %20
  %22 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0
  %23 = load float, float* %22, align 16
  %24 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 1, i32 0, i32 0, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fmul float %23, %25
  %27 = fsub float %21, %26
  %28 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 2, i32 0, i32 0, i64 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, %27
  %31 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 2, i32 0, i32 0, i64 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = fmul float %23, %32
  %34 = getelementptr inbounds %"struct.sw::Vertex", %"struct.sw::Vertex"* %16, i64 0, i32 0, i32 0, i64 0, i32 0
  %35 = load float, float* %34, align 16
  %36 = fmul float %18, %35
  %37 = fsub float %33, %36
  %38 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 1, i32 0, i32 0, i64 0, i32 3
  %39 = load float, float* %38, align 4
  %40 = fmul float %39, %37
  %41 = fadd float %30, %40
  %42 = fmul float %25, %35
  %43 = fmul float %20, %32
  %44 = fsub float %42, %43
  %45 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 0, i32 0, i32 0, i64 0, i32 3
  %46 = load float, float* %45, align 4
  %47 = fmul float %44, %46
  %48 = fadd float %47, %41
  %49 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %14, i64 0, i32 9, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 20
  %52 = and i32 %51, 3
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %56

54:                                               ; preds = %3
  %55 = fcmp ult float %48, 0.000000e+00
  br i1 %55, label %60, label %114

56:                                               ; preds = %3
  %57 = icmp eq i32 %52, 2
  %58 = fcmp ole float %48, 0.000000e+00
  %59 = and i1 %57, %58
  br i1 %59, label %114, label %60

60:                                               ; preds = %54, %56
  %61 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 1
  %62 = bitcast %"struct.sw::Triangle"* %61 to i8*
  %63 = bitcast %"struct.sw::Vertex"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %62, i8* align 16 %63, i64 576, i1 false)
  %64 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 1, i32 1
  %65 = bitcast %"struct.sw::Vertex"* %64 to i8*
  %66 = bitcast %"struct.sw::Vertex"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %65, i8* align 16 %66, i64 576, i1 false)
  %67 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 2
  %68 = bitcast %"struct.sw::Triangle"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %68, i8* align 16 %66, i64 576, i1 false)
  %69 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 2, i32 1
  %70 = bitcast %"struct.sw::Vertex"* %69 to i8*
  %71 = bitcast %"struct.sw::Triangle"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %70, i8* align 16 %71, i64 576, i1 false)
  %72 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %14, i64 0, i32 9, i32 0, i32 1, i32 0, i64 0, i64 0, i32 0
  %73 = load i8, i8* %72, align 4
  %74 = and i8 %73, 64
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %96, label %76

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 0, i32 0, i32 0, i64 1
  %78 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 1, i32 0, i32 0, i32 0, i64 1
  %79 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 1, i32 1, i32 0, i32 0, i64 1
  %80 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 2, i32 0, i32 0, i32 0, i64 1
  %81 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 2, i32 1, i32 0, i32 0, i64 1
  br label %82

82:                                               ; preds = %82, %76
  %83 = phi i64 [ 0, %76 ], [ %94, %82 ]
  %84 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %77, i64 %83
  %85 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %78, i64 %83
  %86 = bitcast %"struct.sw::float4"* %85 to i8*
  %87 = bitcast %"struct.sw::float4"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %86, i8* align 16 %87, i64 16, i1 false)
  %88 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %79, i64 %83
  %89 = bitcast %"struct.sw::float4"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %89, i8* align 16 %87, i64 16, i1 false)
  %90 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %80, i64 %83
  %91 = bitcast %"struct.sw::float4"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %91, i8* align 16 %87, i64 16, i1 false)
  %92 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %81, i64 %83
  %93 = bitcast %"struct.sw::float4"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %93, i8* align 16 %87, i64 16, i1 false)
  %94 = add nuw nsw i64 %83, 1
  %95 = icmp eq i64 %94, 2
  br i1 %95, label %96, label %82

96:                                               ; preds = %82, %60
  %97 = fmul float %48, 5.000000e-01
  br label %98

98:                                               ; preds = %108, %96
  %99 = phi i32 [ 0, %96 ], [ %112, %108 ]
  %100 = phi i32 [ 0, %96 ], [ %110, %108 ]
  %101 = phi %"struct.sw::Primitive"* [ %8, %96 ], [ %109, %108 ]
  %102 = phi %"struct.sw::Triangle"* [ %6, %96 ], [ %111, %108 ]
  %103 = tail call zeroext i1 @_ZN2sw8Renderer9setupLineERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE(%"class.sw::Renderer"* %0, %"struct.sw::Primitive"* dereferenceable(39104) %101, %"struct.sw::Triangle"* dereferenceable(1728) %102, %"struct.sw::DrawCall"* dereferenceable(1784) %14) #16
  br i1 %103, label %104, label %108

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"struct.sw::Primitive", %"struct.sw::Primitive"* %101, i64 0, i32 8
  store float %97, float* %105, align 16
  %106 = getelementptr inbounds %"struct.sw::Primitive", %"struct.sw::Primitive"* %101, i64 1
  %107 = add nsw i32 %100, 1
  br label %108

108:                                              ; preds = %104, %98
  %109 = phi %"struct.sw::Primitive"* [ %106, %104 ], [ %101, %98 ]
  %110 = phi i32 [ %107, %104 ], [ %100, %98 ]
  %111 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %102, i64 1
  %112 = add nuw nsw i32 %99, 1
  %113 = icmp eq i32 %112, 3
  br i1 %113, label %114, label %98

114:                                              ; preds = %108, %56, %54
  %115 = phi i32 [ 0, %54 ], [ 0, %56 ], [ %110, %108 ]
  ret i32 %115
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2sw8Renderer19setupVertexTriangleEii(%"class.sw::Renderer"* nocapture readonly, i32, i32) #2 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 %4
  %6 = load %"struct.sw::Triangle"*, %"struct.sw::Triangle"** %5, align 8
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 11, i64 %4
  %8 = load %"struct.sw::Primitive"*, %"struct.sw::Primitive"** %7, align 8
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = and i32 %10, 15
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %12
  %14 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %13, align 8
  %15 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 0, i32 0, i32 0, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"struct.sw::Vertex", %"struct.sw::Vertex"* %15, i64 0, i32 0, i32 0, i64 0, i32 0
  %20 = load float, float* %19, align 16
  %21 = fmul float %18, %20
  %22 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0
  %23 = load float, float* %22, align 16
  %24 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 1, i32 0, i32 0, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fmul float %23, %25
  %27 = fsub float %21, %26
  %28 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 2, i32 0, i32 0, i64 0, i32 3
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, %27
  %31 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 2, i32 0, i32 0, i64 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = fmul float %23, %32
  %34 = getelementptr inbounds %"struct.sw::Vertex", %"struct.sw::Vertex"* %16, i64 0, i32 0, i32 0, i64 0, i32 0
  %35 = load float, float* %34, align 16
  %36 = fmul float %18, %35
  %37 = fsub float %33, %36
  %38 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 1, i32 0, i32 0, i64 0, i32 3
  %39 = load float, float* %38, align 4
  %40 = fmul float %39, %37
  %41 = fadd float %30, %40
  %42 = fmul float %25, %35
  %43 = fmul float %20, %32
  %44 = fsub float %42, %43
  %45 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 0, i32 0, i32 0, i32 0, i64 0, i32 3
  %46 = load float, float* %45, align 4
  %47 = fmul float %44, %46
  %48 = fadd float %47, %41
  %49 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %14, i64 0, i32 9, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 20
  %52 = and i32 %51, 3
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %56

54:                                               ; preds = %3
  %55 = fcmp ult float %48, 0.000000e+00
  br i1 %55, label %60, label %84

56:                                               ; preds = %3
  %57 = icmp eq i32 %52, 2
  %58 = fcmp ole float %48, 0.000000e+00
  %59 = and i1 %57, %58
  br i1 %59, label %84, label %60

60:                                               ; preds = %54, %56
  %61 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 1, i32 0
  %62 = bitcast %"struct.sw::Vertex"* %61 to i8*
  %63 = bitcast %"struct.sw::Vertex"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %62, i8* align 16 %63, i64 576, i1 false)
  %64 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %6, i64 2, i32 0
  %65 = bitcast %"struct.sw::Vertex"* %64 to i8*
  %66 = bitcast %"struct.sw::Vertex"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %65, i8* align 16 %66, i64 576, i1 false)
  %67 = fmul float %48, 5.000000e-01
  br label %68

68:                                               ; preds = %78, %60
  %69 = phi i32 [ 0, %60 ], [ %82, %78 ]
  %70 = phi i32 [ 0, %60 ], [ %80, %78 ]
  %71 = phi %"struct.sw::Primitive"* [ %8, %60 ], [ %79, %78 ]
  %72 = phi %"struct.sw::Triangle"* [ %6, %60 ], [ %81, %78 ]
  %73 = tail call zeroext i1 @_ZN2sw8Renderer10setupPointERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE(%"class.sw::Renderer"* %0, %"struct.sw::Primitive"* dereferenceable(39104) %71, %"struct.sw::Triangle"* dereferenceable(1728) %72, %"struct.sw::DrawCall"* dereferenceable(1784) %14) #16
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.sw::Primitive", %"struct.sw::Primitive"* %71, i64 0, i32 8
  store float %67, float* %75, align 16
  %76 = getelementptr inbounds %"struct.sw::Primitive", %"struct.sw::Primitive"* %71, i64 1
  %77 = add nsw i32 %70, 1
  br label %78

78:                                               ; preds = %74, %68
  %79 = phi %"struct.sw::Primitive"* [ %76, %74 ], [ %71, %68 ]
  %80 = phi i32 [ %77, %74 ], [ %70, %68 ]
  %81 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %72, i64 1
  %82 = add nuw nsw i32 %69, 1
  %83 = icmp eq i32 %82, 3
  br i1 %83, label %84, label %68

84:                                               ; preds = %78, %56, %54
  %85 = phi i32 [ 0, %54 ], [ 0, %56 ], [ %80, %78 ]
  ret i32 %85
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2sw7Context10isDrawLineEb(%"class.sw::Context"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2sw8Renderer10setupLinesEii(%"class.sw::Renderer"* nocapture readonly, i32, i32) #2 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 %4
  %6 = load %"struct.sw::Triangle"*, %"struct.sw::Triangle"** %5, align 8
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 11, i64 %4
  %8 = load %"struct.sw::Primitive"*, %"struct.sw::Primitive"** %7, align 8
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = and i32 %10, 15
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %12
  %14 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %13, align 8
  %15 = icmp sgt i32 %2, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %14, i64 0, i32 9, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = lshr i32 %18, 25
  %20 = and i32 %19, 7
  %21 = zext i32 %20 to i64
  br label %24

22:                                               ; preds = %24, %3
  %23 = phi i32 [ 0, %3 ], [ %33, %24 ]
  ret i32 %23

24:                                               ; preds = %24, %16
  %25 = phi i32 [ 0, %16 ], [ %35, %24 ]
  %26 = phi %"struct.sw::Triangle"* [ %6, %16 ], [ %34, %24 ]
  %27 = phi i32 [ 0, %16 ], [ %33, %24 ]
  %28 = phi %"struct.sw::Primitive"* [ %8, %16 ], [ %31, %24 ]
  %29 = tail call zeroext i1 @_ZN2sw8Renderer9setupLineERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE(%"class.sw::Renderer"* %0, %"struct.sw::Primitive"* dereferenceable(39104) %28, %"struct.sw::Triangle"* dereferenceable(1728) %26, %"struct.sw::DrawCall"* dereferenceable(1784) %14) #16
  %30 = getelementptr inbounds %"struct.sw::Primitive", %"struct.sw::Primitive"* %28, i64 %21
  %31 = select i1 %29, %"struct.sw::Primitive"* %30, %"struct.sw::Primitive"* %28
  %32 = zext i1 %29 to i32
  %33 = add nuw nsw i32 %27, %32
  %34 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %26, i64 1
  %35 = add nuw nsw i32 %25, 1
  %36 = icmp eq i32 %35, %2
  br i1 %36, label %22, label %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2sw8Renderer11setupPointsEii(%"class.sw::Renderer"* nocapture readonly, i32, i32) #2 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 %4
  %6 = load %"struct.sw::Triangle"*, %"struct.sw::Triangle"** %5, align 8
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 11, i64 %4
  %8 = load %"struct.sw::Primitive"*, %"struct.sw::Primitive"** %7, align 8
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = and i32 %10, 15
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %12
  %14 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %13, align 8
  %15 = icmp sgt i32 %2, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %14, i64 0, i32 9, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = lshr i32 %18, 25
  %20 = and i32 %19, 7
  %21 = zext i32 %20 to i64
  br label %24

22:                                               ; preds = %24, %3
  %23 = phi i32 [ 0, %3 ], [ %33, %24 ]
  ret i32 %23

24:                                               ; preds = %24, %16
  %25 = phi i32 [ 0, %16 ], [ %35, %24 ]
  %26 = phi %"struct.sw::Triangle"* [ %6, %16 ], [ %34, %24 ]
  %27 = phi i32 [ 0, %16 ], [ %33, %24 ]
  %28 = phi %"struct.sw::Primitive"* [ %8, %16 ], [ %31, %24 ]
  %29 = tail call zeroext i1 @_ZN2sw8Renderer10setupPointERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE(%"class.sw::Renderer"* %0, %"struct.sw::Primitive"* dereferenceable(39104) %28, %"struct.sw::Triangle"* dereferenceable(1728) %26, %"struct.sw::DrawCall"* dereferenceable(1784) %14) #16
  %30 = getelementptr inbounds %"struct.sw::Primitive", %"struct.sw::Primitive"* %28, i64 %21
  %31 = select i1 %29, %"struct.sw::Primitive"* %30, %"struct.sw::Primitive"* %28
  %32 = zext i1 %29 to i32
  %33 = add nuw nsw i32 %27, %32
  %34 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %26, i64 1
  %35 = add nuw nsw i32 %25, 1
  %36 = icmp eq i32 %35, %2
  br i1 %36, label %22, label %24
}

; Function Attrs: optsize
declare i8* @_ZN2sw8Resource4lockENS_8AccessorES1_(%"class.sw::Resource"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN2sw8Renderer18isReadWriteTextureEi(%"class.sw::Renderer"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  %5 = sext i32 %1 to i64
  br label %6

6:                                                ; preds = %19, %2
  %7 = phi %"class.sw::Context"* [ %4, %2 ], [ %20, %19 ]
  %8 = phi i64 [ 0, %2 ], [ %21, %19 ]
  %9 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %7, i64 0, i32 50, i64 %8
  %10 = load %"class.sw::Surface"*, %"class.sw::Surface"** %9, align 8
  %11 = icmp eq %"class.sw::Surface"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %7, i64 0, i32 33, i64 %5
  %14 = load %"class.sw::Resource"*, %"class.sw::Resource"** %13, align 8
  %15 = tail call %"class.sw::Resource"* @_ZN2sw7Surface11getResourceEv(%"class.sw::Surface"* nonnull %10) #15
  %16 = icmp eq %"class.sw::Resource"* %14, %15
  br i1 %16, label %33, label %17

17:                                               ; preds = %12
  %18 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi %"class.sw::Context"* [ %18, %17 ], [ %7, %6 ]
  %21 = add nuw nsw i64 %8, 1
  %22 = icmp eq i64 %21, 8
  br i1 %22, label %23, label %6

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %20, i64 0, i32 52
  %25 = load %"class.sw::Surface"*, %"class.sw::Surface"** %24, align 8
  %26 = icmp eq %"class.sw::Surface"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %20, i64 0, i32 33, i64 %5
  %29 = load %"class.sw::Resource"*, %"class.sw::Resource"** %28, align 8
  %30 = tail call %"class.sw::Resource"* @_ZN2sw7Surface11getResourceEv(%"class.sw::Surface"* nonnull %25) #15
  %31 = icmp eq %"class.sw::Resource"* %29, %30
  br i1 %31, label %33, label %32

32:                                               ; preds = %23, %27
  br label %33

33:                                               ; preds = %12, %27, %32
  %34 = phi i1 [ false, %32 ], [ true, %27 ], [ true, %12 ]
  ret i1 %34
}

; Function Attrs: optsize
declare dereferenceable(2896) %"struct.sw::Texture"* @_ZN2sw7Sampler14getTextureDataEv(%"class.sw::Sampler"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZNK2sw7Sampler12requiresSyncEv(%"class.sw::Sampler"*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor18lockUniformBuffersEPPhPPNS_8ResourceE(%"class.sw::PixelProcessor"*, i8**, %"class.sw::Resource"**) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i16 @_ZNK2sw7Context16pixelShaderModelEv(%"class.sw::Context"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i16 @_ZNK2sw6Shader14getShaderModelEv(%"class.sw::Shader"*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor18lockUniformBuffersEPPhPPNS_8ResourceE(%"class.sw::VertexProcessor"*, i8**, %"class.sw::Resource"**) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor28lockTransformFeedbackBuffersEPPhPjS3_S3_S3_PPNS_8ResourceE(%"class.sw::VertexProcessor"*, i8**, i32*, i32*, i32*, i32*, %"class.sw::Resource"**) local_unnamed_addr #5

; Function Attrs: optsize
declare i8* @_ZN2sw7Surface11lockStencilEiiiNS_8AccessorE(%"class.sw::Surface"*, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 35
  %3 = load %"class.sw::Resource"*, %"class.sw::Resource"** %2, align 8
  %4 = tail call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* %3, i32 0) #15
  %5 = load %"class.sw::Resource"*, %"class.sw::Resource"** %2, align 8
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* %5) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer5clearEPvNS_6FormatEPNS_7SurfaceERKNS_5RectTIiEEj(%"class.sw::Renderer"* nocapture readonly, i8*, i32, %"class.sw::Surface"*, %"struct.sw::RectT"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %7 = alloca %"struct.sw::SliceRectT", align 4
  %8 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 6
  %9 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %8, align 16
  %10 = bitcast %"struct.sw::SliceRectT"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %10) #14
  %11 = bitcast %"struct.sw::RectT"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %11, i64 16, i1 false) #14
  %12 = getelementptr inbounds %"struct.sw::SliceRectT", %"struct.sw::SliceRectT"* %7, i64 0, i32 1
  store i32 0, i32* %12, align 4
  call void @_ZN2sw7Blitter5clearEPvNS_6FormatEPNS_7SurfaceERKNS_10SliceRectTIiEEj(%"class.sw::Blitter"* %9, i8* %1, i32 %2, %"class.sw::Surface"* %3, %"struct.sw::SliceRectT"* nonnull dereferenceable(20) %7, i32 %5) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %10) #14
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter5clearEPvNS_6FormatEPNS_7SurfaceERKNS_10SliceRectTIiEEj(%"class.sw::Blitter"*, i8*, i32, %"class.sw::Surface"*, %"struct.sw::SliceRectT"* dereferenceable(20), i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer4blitEPNS_7SurfaceERKNS_10SliceRectTIfEES2_RKNS3_IiEEbbb(%"class.sw::Renderer"* nocapture readonly, %"class.sw::Surface"*, %"struct.sw::SliceRectT.42"*, %"class.sw::Surface"*, %"struct.sw::SliceRectT"* dereferenceable(20), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %9 = alloca %"struct.sw::Blitter::Options", align 1
  %10 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 6
  %11 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %10, align 16
  %12 = getelementptr inbounds %"struct.sw::Blitter::Options", %"struct.sw::Blitter::Options"* %9, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #14
  %13 = zext i1 %5 to i8
  %14 = zext i1 %6 to i8
  %15 = zext i1 %7 to i8
  store i8 15, i8* %12, align 1
  %16 = getelementptr inbounds %"struct.sw::Blitter::Options", %"struct.sw::Blitter::Options"* %9, i64 0, i32 1
  %17 = shl nuw nsw i8 %13, 1
  %18 = shl nuw nsw i8 %14, 2
  %19 = shl nuw nsw i8 %15, 3
  %20 = or i8 %18, %17
  %21 = or i8 %20, %19
  store i8 %21, i8* %16, align 1
  call void @_ZN2sw7Blitter4blitEPNS_7SurfaceERKNS_10SliceRectTIfEES2_RKNS3_IiEERKNS0_7OptionsE(%"class.sw::Blitter"* %11, %"class.sw::Surface"* %1, %"struct.sw::SliceRectT.42"* %2, %"class.sw::Surface"* %3, %"struct.sw::SliceRectT"* dereferenceable(20) %4, %"struct.sw::Blitter::Options"* nonnull dereferenceable(2) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #14
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter4blitEPNS_7SurfaceERKNS_10SliceRectTIfEES2_RKNS3_IiEERKNS0_7OptionsE(%"class.sw::Blitter"*, %"class.sw::Surface"*, %"struct.sw::SliceRectT.42"*, %"class.sw::Surface"*, %"struct.sw::SliceRectT"* dereferenceable(20), %"struct.sw::Blitter::Options"* dereferenceable(2)) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer6blit3DEPNS_7SurfaceES2_(%"class.sw::Renderer"* nocapture readonly, %"class.sw::Surface"*, %"class.sw::Surface"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 6
  %5 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %4, align 16
  tail call void @_ZN2sw7Blitter6blit3DEPNS_7SurfaceES2_(%"class.sw::Blitter"* %5, %"class.sw::Surface"* %1, %"class.sw::Surface"* %2) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter6blit3DEPNS_7SurfaceES2_(%"class.sw::Blitter"*, %"class.sw::Surface"*, %"class.sw::Surface"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer14threadFunctionEPv(i8* nocapture readonly) #2 align 2 {
  %2 = bitcast i8* %0 to %"class.sw::Renderer"**
  %3 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %2, align 8
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = load i32, i32* @_ZN2sw12logPrecisionE, align 4
  %8 = icmp slt i32 %7, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  tail call void @_ZN2sw5CPUID14setFlushToZeroEb(i1 zeroext true) #15
  tail call void @_ZN2sw5CPUID19setDenormalsAreZeroEb(i1 zeroext true) #15
  br label %10

10:                                               ; preds = %9, %1
  tail call void @_ZN2sw8Renderer10threadLoopEi(%"class.sw::Renderer"* %3, i32 %6) #16
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw5CPUID14setFlushToZeroEb(i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw5CPUID19setDenormalsAreZeroEb(i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer10threadLoopEi(%"class.sw::Renderer"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %34

6:                                                ; preds = %2
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 19, i64 %7
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 18, i64 %7
  br label %10

10:                                               ; preds = %6, %30
  tail call void @_ZN2sw8Renderer8taskLoopEi(%"class.sw::Renderer"* %0, i32 %1) #16
  %11 = load %"class.sw::Event"*, %"class.sw::Event"** %8, align 8
  %12 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %11, i64 0, i32 1
  %13 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #15
  %14 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %11, i64 0, i32 2
  store volatile i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %11, i64 0, i32 0
  %16 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %15) #15
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #15
  %18 = load %"class.sw::Event"*, %"class.sw::Event"** %9, align 8
  %19 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %18, i64 0, i32 1
  %20 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %19) #15
  %21 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %18, i64 0, i32 2
  %22 = load volatile i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %18, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %25, %union.pthread_mutex_t* %19) #15
  %28 = load volatile i8, i8* %21, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %26, label %30

30:                                               ; preds = %26, %10
  store volatile i8 0, i8* %21, align 8
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %19) #15
  %32 = load atomic i32, i32* %3 acquire, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %10, label %34

34:                                               ; preds = %30, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer8taskLoopEi(%"class.sw::Renderer"*, i32) local_unnamed_addr #2 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 acquire, align 4
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %10, label %7

7:                                                ; preds = %2, %7
  tail call void @_ZN2sw8Renderer12scheduleTaskEi(%"class.sw::Renderer"* %0, i32 %1) #16
  tail call void @_ZN2sw8Renderer11executeTaskEi(%"class.sw::Renderer"* %0, i32 %1) #16
  %8 = load atomic i32, i32* %4 acquire, align 4
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %7

10:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer12scheduleTaskEi(%"class.sw::Renderer"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 31, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #15
  %5 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 acquire, align 4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %10 = sub nsw i32 %9, %6
  %11 = icmp sgt i32 %8, %10
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  tail call void @_ZN2sw8Renderer18findAvailableTasksEv(%"class.sw::Renderer"* %0) #16
  br label %13

13:                                               ; preds = %2, %12
  %14 = load atomic i32, i32* %7 acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %84, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 acquire, align 4
  %19 = load atomic i32, i32* %7 acquire, align 4
  %20 = sub nsw i32 %18, %19
  %21 = and i32 %20, 31
  %22 = zext i32 %21 to i64
  %23 = sext i32 %1 to i64
  %24 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 28, i64 %22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %25, i32* %26 release, align 4
  %27 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 28, i64 %22, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %23, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %28, i32* %29 release, align 4
  %30 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 28, i64 %22, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %23, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %31, i32* %32 release, align 4
  %33 = atomicrmw sub i32* %7, i32 1 acq_rel
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %35 = icmp eq i32 %6, %34
  br i1 %35, label %88, label %36

36:                                               ; preds = %16
  %37 = load atomic i32, i32* %7 acquire, align 4
  %38 = sub i32 1, %6
  %39 = add i32 %38, %37
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %41 = icmp sgt i32 %40, 0
  %42 = icmp sgt i32 %39, 0
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %88

44:                                               ; preds = %36, %76
  %45 = phi i64 [ %78, %76 ], [ 0, %36 ]
  %46 = phi i32 [ %77, %76 ], [ %39, %36 ]
  %47 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %45, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 acquire, align 4
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %50, label %76

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 19, i64 %45
  %52 = load %"class.sw::Event"*, %"class.sw::Event"** %51, align 8
  %53 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %52, i64 0, i32 1
  %54 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %53) #15
  %55 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %52, i64 0, i32 2
  %56 = load volatile i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %52, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %59, %union.pthread_mutex_t* %53) #15
  %62 = load volatile i8, i8* %55, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %60, label %64

64:                                               ; preds = %60, %50
  store volatile i8 0, i8* %55, align 8
  %65 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %53) #15
  store atomic i32 2, i32* %47 release, align 4
  %66 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 18, i64 %45
  %67 = load %"class.sw::Event"*, %"class.sw::Event"** %66, align 8
  %68 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %67, i64 0, i32 1
  %69 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %68) #15
  %70 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %67, i64 0, i32 2
  store volatile i8 1, i8* %70, align 8
  %71 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %67, i64 0, i32 0
  %72 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %71) #15
  %73 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %68) #15
  %74 = atomicrmw add i32* %5, i32 1 acq_rel
  %75 = add nsw i32 %46, -1
  br label %76

76:                                               ; preds = %44, %64
  %77 = phi i32 [ %75, %64 ], [ %46, %44 ]
  %78 = add nuw nsw i64 %45, 1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %80 = sext i32 %79 to i64
  %81 = icmp slt i64 %78, %80
  %82 = icmp sgt i32 %77, 0
  %83 = and i1 %82, %81
  br i1 %83, label %44, label %88

84:                                               ; preds = %13
  %85 = sext i32 %1 to i64
  %86 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 3, i32* %86 release, align 4
  %87 = atomicrmw sub i32* %5, i32 1 acq_rel
  br label %88

88:                                               ; preds = %76, %36, %16, %84
  %89 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11executeTaskEi(%"class.sw::Renderer"*, i32) local_unnamed_addr #2 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %3
  %5 = getelementptr inbounds %"struct.sw::Renderer::Task", %"struct.sw::Renderer::Task"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 acquire, align 4
  switch i32 %6, label %78 [
    i32 0, label %7
    i32 1, label %54
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %10, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 acquire, align 4
  %13 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %10, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 acquire, align 4
  %15 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 acquire, align 4
  %17 = and i32 %16, 15
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %18
  %20 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %19, align 8
  %21 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %20, i64 0, i32 8, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %20, i64 0, i32 8, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %20, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 acquire, align 4
  tail call void @_ZN2sw8Renderer24processPrimitiveVerticesEijjji(%"class.sw::Renderer"* %0, i32 %9, i32 %12, i32 %14, i32 %26, i32 %1) #16
  %27 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %20, i64 0, i32 9, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 268435456
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %49

31:                                               ; preds = %7
  %32 = bitcast %"class.sw::Renderer"* %0 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %24
  %34 = bitcast i8* %33 to %"class.sw::Renderer"*
  %35 = and i64 %22, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %31
  %38 = bitcast i8* %33 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = add i64 %22, -1
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = bitcast i8* %41 to i32 (%"class.sw::Renderer"*, i32, i32)**
  %43 = load i32 (%"class.sw::Renderer"*, i32, i32)*, i32 (%"class.sw::Renderer"*, i32, i32)** %42, align 8
  br label %46

44:                                               ; preds = %31
  %45 = inttoptr i64 %22 to i32 (%"class.sw::Renderer"*, i32, i32)*
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 (%"class.sw::Renderer"*, i32, i32)* [ %43, %37 ], [ %45, %44 ]
  %48 = tail call i32 %47(%"class.sw::Renderer"* %34, i32 %9, i32 %14) #15
  br label %49

49:                                               ; preds = %7, %46
  %50 = phi i32 [ 0, %7 ], [ %48, %46 ]
  %51 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %10, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %50, i32* %51 release, align 4
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer12clusterCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %53 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %10, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %52, i32* %53 release, align 4
  br label %78

54:                                               ; preds = %2
  %55 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 acquire, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %57, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 acquire, align 4
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %77

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 acquire, align 4
  %64 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 11, i64 %57
  %65 = load %"struct.sw::Primitive"*, %"struct.sw::Primitive"** %64, align 8
  %66 = sext i32 %63 to i64
  %67 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %66, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 acquire, align 4
  %69 = and i32 %68, 15
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %70
  %72 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %71, align 8
  %73 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %72, i64 0, i32 30
  %74 = load %"struct.sw::DrawData"*, %"struct.sw::DrawData"** %73, align 8
  %75 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %72, i64 0, i32 7
  %76 = load void (%"struct.sw::Primitive"*, i32, i32, %"struct.sw::DrawData"*)*, void (%"struct.sw::Primitive"*, i32, i32, %"struct.sw::DrawData"*)** %75, align 8
  tail call void %76(%"struct.sw::Primitive"* %65, i32 %59, i32 %63, %"struct.sw::DrawData"* %74) #15
  br label %77

77:                                               ; preds = %61, %54
  tail call void @_ZN2sw8Renderer15finishRenderingERNS0_4TaskE(%"class.sw::Renderer"* %0, %"struct.sw::Renderer::Task"* dereferenceable(12) %4) #16
  br label %78

78:                                               ; preds = %2, %77, %49
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer18findAvailableTasksEv(%"class.sw::Renderer"*) local_unnamed_addr #1 align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer12clusterCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %19

7:                                                ; preds = %62, %1
  %8 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %124, label %13

13:                                               ; preds = %7
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer9unitCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %124

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %67

19:                                               ; preds = %4, %62
  %20 = phi i64 [ 0, %4 ], [ %63, %62 ]
  %21 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %20, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %62

24:                                               ; preds = %19
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer9unitCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %62

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %20, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %27, %57
  %31 = phi i64 [ 0, %27 ], [ %58, %57 ]
  %32 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %31, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 acquire, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %57

35:                                               ; preds = %30
  %36 = load atomic i32, i32* %28 acquire, align 4
  %37 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %57

40:                                               ; preds = %35
  %41 = load atomic i32, i32* %29 acquire, align 4
  %42 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %31, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 acquire, align 4
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = trunc i64 %31 to i32
  %47 = load atomic i32, i32* %5 acquire, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 28, i64 %48, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 1, i32* %49 release, align 4
  %50 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 28, i64 %48, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %46, i32* %50 release, align 4
  %51 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 28, i64 %48, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = trunc i64 %20 to i32
  store atomic i32 %52, i32* %51 release, align 4
  store atomic i32 1, i32* %21 release, align 4
  %53 = load atomic i32, i32* %5 acquire, align 4
  %54 = add nsw i32 %53, 1
  %55 = and i32 %54, 31
  store atomic i32 %55, i32* %5 release, align 4
  %56 = atomicrmw add i32* %6, i32 1 acq_rel
  br label %62

57:                                               ; preds = %30, %40, %35
  %58 = add nuw nsw i64 %31, 1
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer9unitCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %60 = sext i32 %59 to i64
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %30, label %62

62:                                               ; preds = %57, %24, %45, %19
  %63 = add nuw nsw i64 %20, 1
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer12clusterCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %65 = sext i32 %64 to i64
  %66 = icmp slt i64 %63, %65
  br i1 %66, label %19, label %7

67:                                               ; preds = %16, %119
  %68 = phi i64 [ 0, %16 ], [ %120, %119 ]
  %69 = load atomic i32, i32* %8 acquire, align 4
  %70 = and i32 %69, 15
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %71
  %73 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %72, align 8
  %74 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %73, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 acquire, align 4
  %76 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %73, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 acquire, align 4
  %78 = icmp slt i32 %75, %77
  br i1 %78, label %90, label %79

79:                                               ; preds = %67
  %80 = atomicrmw add i32* %8, i32 1 acq_rel
  %81 = load atomic i32, i32* %8 acquire, align 4
  %82 = load atomic i32, i32* %10 acquire, align 4
  %83 = icmp eq i32 %81, %82
  br i1 %83, label %124, label %84

84:                                               ; preds = %79
  %85 = load atomic i32, i32* %8 acquire, align 4
  %86 = and i32 %85, 15
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %87
  %89 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %88, align 8
  br label %90

90:                                               ; preds = %67, %84
  %91 = phi %"struct.sw::DrawCall"* [ %89, %84 ], [ %73, %67 ]
  %92 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %68, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 acquire, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %119

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %91, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 acquire, align 4
  %98 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %91, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 acquire, align 4
  %100 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %91, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 acquire, align 4
  %102 = load atomic i32, i32* %8 acquire, align 4
  %103 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %68, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %102, i32* %103 release, align 4
  %104 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %68, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %97, i32* %104 release, align 4
  %105 = sub nsw i32 %99, %97
  %106 = icmp slt i32 %105, %101
  %107 = select i1 %106, i32 %105, i32 %101
  %108 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %68, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %107, i32* %108 release, align 4
  %109 = atomicrmw add i32* %96, i32 %101 acq_rel
  %110 = load atomic i32, i32* %17 acquire, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 28, i64 %111, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %112 release, align 4
  %113 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 28, i64 %111, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = trunc i64 %68 to i32
  store atomic i32 %114, i32* %113 release, align 4
  store atomic i32 -1, i32* %92 release, align 4
  %115 = load atomic i32, i32* %17 acquire, align 4
  %116 = add nsw i32 %115, 1
  %117 = and i32 %116, 31
  store atomic i32 %117, i32* %17 release, align 4
  %118 = atomicrmw add i32* %18, i32 1 acq_rel
  br label %119

119:                                              ; preds = %90, %95
  %120 = add nuw nsw i64 %68, 1
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer9unitCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %122 = sext i32 %121 to i64
  %123 = icmp slt i64 %120, %122
  br i1 %123, label %67, label %124

124:                                              ; preds = %79, %119, %13, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer24processPrimitiveVerticesEijjji(%"class.sw::Renderer"* nocapture readonly, i32, i32, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %7 = alloca [128 x [3 x i32]], align 16
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 %8
  %10 = load %"struct.sw::Triangle"*, %"struct.sw::Triangle"** %9, align 8
  %11 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 acquire, align 4
  %13 = and i32 %12, 15
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %14
  %16 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %15, align 8
  %17 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %16, i64 0, i32 30
  %18 = load %"struct.sw::DrawData"*, %"struct.sw::DrawData"** %17, align 8
  %19 = sext i32 %5 to i64
  %20 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 32, i64 %19
  %21 = load %"struct.sw::VertexTask"*, %"struct.sw::VertexTask"** %20, align 8
  %22 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %18, i64 0, i32 5
  %23 = load i8*, i8** %22, align 16
  %24 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %16, i64 0, i32 5
  %25 = load void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)*, void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)** %24, align 8
  %26 = getelementptr inbounds %"struct.sw::VertexTask", %"struct.sw::VertexTask"* %21, i64 0, i32 3, i32 2
  %27 = load i32, i32* %26, align 16
  %28 = icmp eq i32 %27, %12
  br i1 %28, label %31, label %29

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"struct.sw::VertexTask", %"struct.sw::VertexTask"* %21, i64 0, i32 3
  tail call void @_ZN2sw11VertexCache5clearEv(%"struct.sw::VertexCache"* %30) #15
  store i32 %12, i32* %26, align 16
  br label %31

31:                                               ; preds = %6, %29
  %32 = bitcast [128 x [3 x i32]]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1536, i8* nonnull %32) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 1536, i1 false)
  %33 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 acquire, align 4
  switch i32 %34, label %689 [
    i32 0, label %63
    i32 1, label %76
    i32 2, label %59
    i32 3, label %55
    i32 4, label %111
    i32 5, label %49
    i32 6, label %43
    i32 16, label %165
    i32 32, label %186
    i32 48, label %208
    i32 17, label %227
    i32 33, label %250
    i32 49, label %274
    i32 18, label %295
    i32 34, label %316
    i32 50, label %338
    i32 19, label %39
    i32 35, label %379
    i32 51, label %406
    i32 20, label %430
    i32 36, label %454
    i32 52, label %479
    i32 21, label %501
    i32 37, label %531
    i32 53, label %562
    i32 22, label %35
    i32 38, label %611
    i32 54, label %637
    i32 7, label %660
  ]

35:                                               ; preds = %31
  %36 = icmp eq i32 %3, 0
  br i1 %36, label %683, label %37

37:                                               ; preds = %35
  %38 = zext i32 %3 to i64
  br label %590

39:                                               ; preds = %31
  %40 = icmp eq i32 %3, 0
  br i1 %40, label %683, label %41

41:                                               ; preds = %39
  %42 = zext i32 %3 to i64
  br label %357

43:                                               ; preds = %31
  %44 = icmp eq i32 %3, 0
  br i1 %44, label %683, label %45

45:                                               ; preds = %43
  %46 = load i8, i8* @_ZN2sw18leadingVertexFirstE, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = zext i32 %3 to i64
  br label %152

49:                                               ; preds = %31
  %50 = icmp eq i32 %3, 0
  br i1 %50, label %683, label %51

51:                                               ; preds = %49
  %52 = load i8, i8* @_ZN2sw18leadingVertexFirstE, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  %54 = zext i32 %3 to i64
  br label %127

55:                                               ; preds = %31
  %56 = icmp eq i32 %3, 0
  br i1 %56, label %683, label %57

57:                                               ; preds = %55
  %58 = zext i32 %3 to i64
  br label %100

59:                                               ; preds = %31
  %60 = icmp eq i32 %3, 0
  br i1 %60, label %683, label %61

61:                                               ; preds = %59
  %62 = zext i32 %3 to i64
  br label %91

63:                                               ; preds = %31
  %64 = icmp eq i32 %3, 0
  br i1 %64, label %683, label %65

65:                                               ; preds = %63
  %66 = zext i32 %3 to i64
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %74, %67 ]
  %69 = phi i32 [ %2, %65 ], [ %73, %67 ]
  %70 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %68, i64 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %68, i64 1
  store i32 %69, i32* %71, align 4
  %72 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %68, i64 2
  store i32 %69, i32* %72, align 4
  %73 = add i32 %69, 1
  %74 = add nuw nsw i64 %68, 1
  %75 = icmp eq i64 %74, %66
  br i1 %75, label %683, label %67

76:                                               ; preds = %31
  %77 = icmp eq i32 %3, 0
  br i1 %77, label %683, label %78

78:                                               ; preds = %76
  %79 = shl i32 %2, 1
  %80 = zext i32 %3 to i64
  br label %81

81:                                               ; preds = %81, %78
  %82 = phi i64 [ 0, %78 ], [ %89, %81 ]
  %83 = phi i32 [ %79, %78 ], [ %88, %81 ]
  %84 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %82, i64 0
  store i32 %83, i32* %84, align 4
  %85 = or i32 %83, 1
  %86 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %82, i64 1
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %82, i64 2
  store i32 %85, i32* %87, align 4
  %88 = add i32 %83, 2
  %89 = add nuw nsw i64 %82, 1
  %90 = icmp eq i64 %89, %80
  br i1 %90, label %683, label %81

91:                                               ; preds = %91, %61
  %92 = phi i64 [ 0, %61 ], [ %98, %91 ]
  %93 = phi i32 [ %2, %61 ], [ %95, %91 ]
  %94 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %92, i64 0
  store i32 %93, i32* %94, align 4
  %95 = add i32 %93, 1
  %96 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %92, i64 1
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %92, i64 2
  store i32 %95, i32* %97, align 4
  %98 = add nuw nsw i64 %92, 1
  %99 = icmp eq i64 %98, %62
  br i1 %99, label %683, label %91

100:                                              ; preds = %100, %57
  %101 = phi i64 [ 0, %57 ], [ %109, %100 ]
  %102 = phi i32 [ %2, %57 ], [ %105, %100 ]
  %103 = urem i32 %102, %4
  %104 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %101, i64 0
  store i32 %103, i32* %104, align 4
  %105 = add i32 %102, 1
  %106 = urem i32 %105, %4
  %107 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %101, i64 1
  store i32 %106, i32* %107, align 4
  %108 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %101, i64 2
  store i32 %106, i32* %108, align 4
  %109 = add nuw nsw i64 %101, 1
  %110 = icmp eq i64 %109, %58
  br i1 %110, label %683, label %100

111:                                              ; preds = %31
  %112 = icmp eq i32 %3, 0
  br i1 %112, label %683, label %113

113:                                              ; preds = %111
  %114 = mul i32 %2, 3
  %115 = zext i32 %3 to i64
  br label %116

116:                                              ; preds = %116, %113
  %117 = phi i64 [ 0, %113 ], [ %125, %116 ]
  %118 = phi i32 [ %114, %113 ], [ %124, %116 ]
  %119 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %117, i64 0
  store i32 %118, i32* %119, align 4
  %120 = add i32 %118, 1
  %121 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %117, i64 1
  store i32 %120, i32* %121, align 4
  %122 = add i32 %118, 2
  %123 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %117, i64 2
  store i32 %122, i32* %123, align 4
  %124 = add i32 %118, 3
  %125 = add nuw nsw i64 %117, 1
  %126 = icmp eq i64 %125, %115
  br i1 %126, label %683, label %116

127:                                              ; preds = %142, %51
  %128 = phi i64 [ 0, %51 ], [ %150, %142 ]
  %129 = phi i32 [ %2, %51 ], [ %143, %142 ]
  %130 = and i32 %129, 1
  br i1 %53, label %136, label %131

131:                                              ; preds = %127
  %132 = add i32 %129, 1
  %133 = add i32 %132, %130
  %134 = or i32 %129, -2
  %135 = sub i32 %129, %134
  br label %142

136:                                              ; preds = %127
  %137 = add i32 %130, %129
  %138 = xor i32 %130, 1
  %139 = add i32 %138, %129
  %140 = add i32 %129, 2
  %141 = add i32 %129, 1
  br label %142

142:                                              ; preds = %136, %131
  %143 = phi i32 [ %141, %136 ], [ %132, %131 ]
  %144 = phi i32 [ %137, %136 ], [ %129, %131 ]
  %145 = phi i32 [ %139, %136 ], [ %133, %131 ]
  %146 = phi i32 [ %140, %136 ], [ %135, %131 ]
  %147 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %128, i64 0
  store i32 %144, i32* %147, align 4
  %148 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %128, i64 1
  store i32 %145, i32* %148, align 4
  %149 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %128, i64 2
  store i32 %146, i32* %149, align 4
  %150 = add nuw nsw i64 %128, 1
  %151 = icmp eq i64 %150, %54
  br i1 %151, label %683, label %127

152:                                              ; preds = %152, %45
  %153 = phi i64 [ 0, %45 ], [ %163, %152 ]
  %154 = phi i32 [ %2, %45 ], [ %155, %152 ]
  %155 = add i32 %154, 1
  %156 = add i32 %154, 2
  %157 = select i1 %47, i32 0, i32 %155
  %158 = select i1 %47, i32 %155, i32 %156
  %159 = select i1 %47, i32 %156, i32 0
  %160 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %153, i64 0
  store i32 %157, i32* %160, align 4
  %161 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %153, i64 1
  store i32 %158, i32* %161, align 4
  %162 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %153, i64 2
  store i32 %159, i32* %162, align 4
  %163 = add nuw nsw i64 %153, 1
  %164 = icmp eq i64 %163, %48
  br i1 %164, label %683, label %152

165:                                              ; preds = %31
  %166 = icmp eq i32 %3, 0
  br i1 %166, label %683, label %167

167:                                              ; preds = %165
  %168 = zext i32 %2 to i64
  %169 = getelementptr inbounds i8, i8* %23, i64 %168
  %170 = zext i32 %3 to i64
  br label %171

171:                                              ; preds = %171, %167
  %172 = phi i64 [ 0, %167 ], [ %184, %171 ]
  %173 = phi i8* [ %169, %167 ], [ %183, %171 ]
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %172, i64 0
  store i32 %175, i32* %176, align 4
  %177 = load i8, i8* %173, align 1
  %178 = zext i8 %177 to i32
  %179 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %172, i64 1
  store i32 %178, i32* %179, align 4
  %180 = load i8, i8* %173, align 1
  %181 = zext i8 %180 to i32
  %182 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %172, i64 2
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds i8, i8* %173, i64 1
  %184 = add nuw nsw i64 %172, 1
  %185 = icmp eq i64 %184, %170
  br i1 %185, label %683, label %171

186:                                              ; preds = %31
  %187 = icmp eq i32 %3, 0
  br i1 %187, label %683, label %188

188:                                              ; preds = %186
  %189 = bitcast i8* %23 to i16*
  %190 = zext i32 %2 to i64
  %191 = getelementptr inbounds i16, i16* %189, i64 %190
  %192 = zext i32 %3 to i64
  br label %193

193:                                              ; preds = %193, %188
  %194 = phi i64 [ 0, %188 ], [ %206, %193 ]
  %195 = phi i16* [ %191, %188 ], [ %205, %193 ]
  %196 = load i16, i16* %195, align 2
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %194, i64 0
  store i32 %197, i32* %198, align 4
  %199 = load i16, i16* %195, align 2
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %194, i64 1
  store i32 %200, i32* %201, align 4
  %202 = load i16, i16* %195, align 2
  %203 = zext i16 %202 to i32
  %204 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %194, i64 2
  store i32 %203, i32* %204, align 4
  %205 = getelementptr inbounds i16, i16* %195, i64 1
  %206 = add nuw nsw i64 %194, 1
  %207 = icmp eq i64 %206, %192
  br i1 %207, label %683, label %193

208:                                              ; preds = %31
  %209 = icmp eq i32 %3, 0
  br i1 %209, label %683, label %210

210:                                              ; preds = %208
  %211 = bitcast i8* %23 to i32*
  %212 = zext i32 %2 to i64
  %213 = getelementptr inbounds i32, i32* %211, i64 %212
  %214 = zext i32 %3 to i64
  br label %215

215:                                              ; preds = %215, %210
  %216 = phi i64 [ 0, %210 ], [ %225, %215 ]
  %217 = phi i32* [ %213, %210 ], [ %224, %215 ]
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %216, i64 0
  store i32 %218, i32* %219, align 4
  %220 = load i32, i32* %217, align 4
  %221 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %216, i64 1
  store i32 %220, i32* %221, align 4
  %222 = load i32, i32* %217, align 4
  %223 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %216, i64 2
  store i32 %222, i32* %223, align 4
  %224 = getelementptr inbounds i32, i32* %217, i64 1
  %225 = add nuw nsw i64 %216, 1
  %226 = icmp eq i64 %225, %214
  br i1 %226, label %683, label %215

227:                                              ; preds = %31
  %228 = icmp eq i32 %3, 0
  br i1 %228, label %683, label %229

229:                                              ; preds = %227
  %230 = shl i32 %2, 1
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %23, i64 %231
  %233 = zext i32 %3 to i64
  br label %234

234:                                              ; preds = %234, %229
  %235 = phi i64 [ 0, %229 ], [ %248, %234 ]
  %236 = phi i8* [ %232, %229 ], [ %247, %234 ]
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %235, i64 0
  store i32 %238, i32* %239, align 4
  %240 = getelementptr inbounds i8, i8* %236, i64 1
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %235, i64 1
  store i32 %242, i32* %243, align 4
  %244 = load i8, i8* %240, align 1
  %245 = zext i8 %244 to i32
  %246 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %235, i64 2
  store i32 %245, i32* %246, align 4
  %247 = getelementptr inbounds i8, i8* %236, i64 2
  %248 = add nuw nsw i64 %235, 1
  %249 = icmp eq i64 %248, %233
  br i1 %249, label %683, label %234

250:                                              ; preds = %31
  %251 = icmp eq i32 %3, 0
  br i1 %251, label %683, label %252

252:                                              ; preds = %250
  %253 = bitcast i8* %23 to i16*
  %254 = shl i32 %2, 1
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds i16, i16* %253, i64 %255
  %257 = zext i32 %3 to i64
  br label %258

258:                                              ; preds = %258, %252
  %259 = phi i64 [ 0, %252 ], [ %272, %258 ]
  %260 = phi i16* [ %256, %252 ], [ %271, %258 ]
  %261 = load i16, i16* %260, align 2
  %262 = zext i16 %261 to i32
  %263 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %259, i64 0
  store i32 %262, i32* %263, align 4
  %264 = getelementptr inbounds i16, i16* %260, i64 1
  %265 = load i16, i16* %264, align 2
  %266 = zext i16 %265 to i32
  %267 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %259, i64 1
  store i32 %266, i32* %267, align 4
  %268 = load i16, i16* %264, align 2
  %269 = zext i16 %268 to i32
  %270 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %259, i64 2
  store i32 %269, i32* %270, align 4
  %271 = getelementptr inbounds i16, i16* %260, i64 2
  %272 = add nuw nsw i64 %259, 1
  %273 = icmp eq i64 %272, %257
  br i1 %273, label %683, label %258

274:                                              ; preds = %31
  %275 = icmp eq i32 %3, 0
  br i1 %275, label %683, label %276

276:                                              ; preds = %274
  %277 = bitcast i8* %23 to i32*
  %278 = shl i32 %2, 1
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds i32, i32* %277, i64 %279
  %281 = zext i32 %3 to i64
  br label %282

282:                                              ; preds = %282, %276
  %283 = phi i64 [ 0, %276 ], [ %293, %282 ]
  %284 = phi i32* [ %280, %276 ], [ %292, %282 ]
  %285 = load i32, i32* %284, align 4
  %286 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %283, i64 0
  store i32 %285, i32* %286, align 4
  %287 = getelementptr inbounds i32, i32* %284, i64 1
  %288 = load i32, i32* %287, align 4
  %289 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %283, i64 1
  store i32 %288, i32* %289, align 4
  %290 = load i32, i32* %287, align 4
  %291 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %283, i64 2
  store i32 %290, i32* %291, align 4
  %292 = getelementptr inbounds i32, i32* %284, i64 2
  %293 = add nuw nsw i64 %283, 1
  %294 = icmp eq i64 %293, %281
  br i1 %294, label %683, label %282

295:                                              ; preds = %31
  %296 = icmp eq i32 %3, 0
  br i1 %296, label %683, label %297

297:                                              ; preds = %295
  %298 = zext i32 %2 to i64
  %299 = getelementptr inbounds i8, i8* %23, i64 %298
  %300 = zext i32 %3 to i64
  br label %301

301:                                              ; preds = %301, %297
  %302 = phi i64 [ 0, %297 ], [ %314, %301 ]
  %303 = phi i8* [ %299, %297 ], [ %307, %301 ]
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  %306 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %302, i64 0
  store i32 %305, i32* %306, align 4
  %307 = getelementptr inbounds i8, i8* %303, i64 1
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %302, i64 1
  store i32 %309, i32* %310, align 4
  %311 = load i8, i8* %307, align 1
  %312 = zext i8 %311 to i32
  %313 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %302, i64 2
  store i32 %312, i32* %313, align 4
  %314 = add nuw nsw i64 %302, 1
  %315 = icmp eq i64 %314, %300
  br i1 %315, label %683, label %301

316:                                              ; preds = %31
  %317 = icmp eq i32 %3, 0
  br i1 %317, label %683, label %318

318:                                              ; preds = %316
  %319 = bitcast i8* %23 to i16*
  %320 = zext i32 %2 to i64
  %321 = getelementptr inbounds i16, i16* %319, i64 %320
  %322 = zext i32 %3 to i64
  br label %323

323:                                              ; preds = %323, %318
  %324 = phi i64 [ 0, %318 ], [ %336, %323 ]
  %325 = phi i16* [ %321, %318 ], [ %329, %323 ]
  %326 = load i16, i16* %325, align 2
  %327 = zext i16 %326 to i32
  %328 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %324, i64 0
  store i32 %327, i32* %328, align 4
  %329 = getelementptr inbounds i16, i16* %325, i64 1
  %330 = load i16, i16* %329, align 2
  %331 = zext i16 %330 to i32
  %332 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %324, i64 1
  store i32 %331, i32* %332, align 4
  %333 = load i16, i16* %329, align 2
  %334 = zext i16 %333 to i32
  %335 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %324, i64 2
  store i32 %334, i32* %335, align 4
  %336 = add nuw nsw i64 %324, 1
  %337 = icmp eq i64 %336, %322
  br i1 %337, label %683, label %323

338:                                              ; preds = %31
  %339 = icmp eq i32 %3, 0
  br i1 %339, label %683, label %340

340:                                              ; preds = %338
  %341 = bitcast i8* %23 to i32*
  %342 = zext i32 %2 to i64
  %343 = getelementptr inbounds i32, i32* %341, i64 %342
  %344 = zext i32 %3 to i64
  br label %345

345:                                              ; preds = %345, %340
  %346 = phi i64 [ 0, %340 ], [ %355, %345 ]
  %347 = phi i32* [ %343, %340 ], [ %350, %345 ]
  %348 = load i32, i32* %347, align 4
  %349 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %346, i64 0
  store i32 %348, i32* %349, align 4
  %350 = getelementptr inbounds i32, i32* %347, i64 1
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %346, i64 1
  store i32 %351, i32* %352, align 4
  %353 = load i32, i32* %350, align 4
  %354 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %346, i64 2
  store i32 %353, i32* %354, align 4
  %355 = add nuw nsw i64 %346, 1
  %356 = icmp eq i64 %355, %344
  br i1 %356, label %683, label %345

357:                                              ; preds = %357, %41
  %358 = phi i64 [ 0, %41 ], [ %377, %357 ]
  %359 = trunc i64 %358 to i32
  %360 = add i32 %359, %2
  %361 = urem i32 %360, %4
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds i8, i8* %23, i64 %362
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i32
  %366 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %358, i64 0
  store i32 %365, i32* %366, align 4
  %367 = add i32 %360, 1
  %368 = urem i32 %367, %4
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds i8, i8* %23, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i32
  %373 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %358, i64 1
  store i32 %372, i32* %373, align 4
  %374 = load i8, i8* %370, align 1
  %375 = zext i8 %374 to i32
  %376 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %358, i64 2
  store i32 %375, i32* %376, align 4
  %377 = add nuw nsw i64 %358, 1
  %378 = icmp eq i64 %377, %42
  br i1 %378, label %683, label %357

379:                                              ; preds = %31
  %380 = bitcast i8* %23 to i16*
  %381 = icmp eq i32 %3, 0
  br i1 %381, label %683, label %382

382:                                              ; preds = %379
  %383 = zext i32 %3 to i64
  br label %384

384:                                              ; preds = %384, %382
  %385 = phi i64 [ 0, %382 ], [ %404, %384 ]
  %386 = trunc i64 %385 to i32
  %387 = add i32 %386, %2
  %388 = urem i32 %387, %4
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds i16, i16* %380, i64 %389
  %391 = load i16, i16* %390, align 2
  %392 = zext i16 %391 to i32
  %393 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %385, i64 0
  store i32 %392, i32* %393, align 4
  %394 = add i32 %387, 1
  %395 = urem i32 %394, %4
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds i16, i16* %380, i64 %396
  %398 = load i16, i16* %397, align 2
  %399 = zext i16 %398 to i32
  %400 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %385, i64 1
  store i32 %399, i32* %400, align 4
  %401 = load i16, i16* %397, align 2
  %402 = zext i16 %401 to i32
  %403 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %385, i64 2
  store i32 %402, i32* %403, align 4
  %404 = add nuw nsw i64 %385, 1
  %405 = icmp eq i64 %404, %383
  br i1 %405, label %683, label %384

406:                                              ; preds = %31
  %407 = bitcast i8* %23 to i32*
  %408 = icmp eq i32 %3, 0
  br i1 %408, label %683, label %409

409:                                              ; preds = %406
  %410 = zext i32 %3 to i64
  br label %411

411:                                              ; preds = %411, %409
  %412 = phi i64 [ 0, %409 ], [ %428, %411 ]
  %413 = trunc i64 %412 to i32
  %414 = add i32 %413, %2
  %415 = urem i32 %414, %4
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds i32, i32* %407, i64 %416
  %418 = load i32, i32* %417, align 4
  %419 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %412, i64 0
  store i32 %418, i32* %419, align 4
  %420 = add i32 %414, 1
  %421 = urem i32 %420, %4
  %422 = zext i32 %421 to i64
  %423 = getelementptr inbounds i32, i32* %407, i64 %422
  %424 = load i32, i32* %423, align 4
  %425 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %412, i64 1
  store i32 %424, i32* %425, align 4
  %426 = load i32, i32* %423, align 4
  %427 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %412, i64 2
  store i32 %426, i32* %427, align 4
  %428 = add nuw nsw i64 %412, 1
  %429 = icmp eq i64 %428, %410
  br i1 %429, label %683, label %411

430:                                              ; preds = %31
  %431 = icmp eq i32 %3, 0
  br i1 %431, label %683, label %432

432:                                              ; preds = %430
  %433 = mul i32 %2, 3
  %434 = zext i32 %433 to i64
  %435 = getelementptr inbounds i8, i8* %23, i64 %434
  %436 = zext i32 %3 to i64
  br label %437

437:                                              ; preds = %437, %432
  %438 = phi i64 [ 0, %432 ], [ %452, %437 ]
  %439 = phi i8* [ %435, %432 ], [ %451, %437 ]
  %440 = load i8, i8* %439, align 1
  %441 = zext i8 %440 to i32
  %442 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %438, i64 0
  store i32 %441, i32* %442, align 4
  %443 = getelementptr inbounds i8, i8* %439, i64 1
  %444 = load i8, i8* %443, align 1
  %445 = zext i8 %444 to i32
  %446 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %438, i64 1
  store i32 %445, i32* %446, align 4
  %447 = getelementptr inbounds i8, i8* %439, i64 2
  %448 = load i8, i8* %447, align 1
  %449 = zext i8 %448 to i32
  %450 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %438, i64 2
  store i32 %449, i32* %450, align 4
  %451 = getelementptr inbounds i8, i8* %439, i64 3
  %452 = add nuw nsw i64 %438, 1
  %453 = icmp eq i64 %452, %436
  br i1 %453, label %683, label %437

454:                                              ; preds = %31
  %455 = icmp eq i32 %3, 0
  br i1 %455, label %683, label %456

456:                                              ; preds = %454
  %457 = bitcast i8* %23 to i16*
  %458 = mul i32 %2, 3
  %459 = zext i32 %458 to i64
  %460 = getelementptr inbounds i16, i16* %457, i64 %459
  %461 = zext i32 %3 to i64
  br label %462

462:                                              ; preds = %462, %456
  %463 = phi i64 [ 0, %456 ], [ %477, %462 ]
  %464 = phi i16* [ %460, %456 ], [ %476, %462 ]
  %465 = load i16, i16* %464, align 2
  %466 = zext i16 %465 to i32
  %467 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %463, i64 0
  store i32 %466, i32* %467, align 4
  %468 = getelementptr inbounds i16, i16* %464, i64 1
  %469 = load i16, i16* %468, align 2
  %470 = zext i16 %469 to i32
  %471 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %463, i64 1
  store i32 %470, i32* %471, align 4
  %472 = getelementptr inbounds i16, i16* %464, i64 2
  %473 = load i16, i16* %472, align 2
  %474 = zext i16 %473 to i32
  %475 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %463, i64 2
  store i32 %474, i32* %475, align 4
  %476 = getelementptr inbounds i16, i16* %464, i64 3
  %477 = add nuw nsw i64 %463, 1
  %478 = icmp eq i64 %477, %461
  br i1 %478, label %683, label %462

479:                                              ; preds = %31
  %480 = icmp eq i32 %3, 0
  br i1 %480, label %683, label %481

481:                                              ; preds = %479
  %482 = bitcast i8* %23 to i32*
  %483 = mul i32 %2, 3
  %484 = zext i32 %483 to i64
  %485 = getelementptr inbounds i32, i32* %482, i64 %484
  %486 = zext i32 %3 to i64
  br label %487

487:                                              ; preds = %487, %481
  %488 = phi i64 [ 0, %481 ], [ %499, %487 ]
  %489 = phi i32* [ %485, %481 ], [ %498, %487 ]
  %490 = load i32, i32* %489, align 4
  %491 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %488, i64 0
  store i32 %490, i32* %491, align 4
  %492 = getelementptr inbounds i32, i32* %489, i64 1
  %493 = load i32, i32* %492, align 4
  %494 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %488, i64 1
  store i32 %493, i32* %494, align 4
  %495 = getelementptr inbounds i32, i32* %489, i64 2
  %496 = load i32, i32* %495, align 4
  %497 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %488, i64 2
  store i32 %496, i32* %497, align 4
  %498 = getelementptr inbounds i32, i32* %489, i64 3
  %499 = add nuw nsw i64 %488, 1
  %500 = icmp eq i64 %499, %486
  br i1 %500, label %683, label %487

501:                                              ; preds = %31
  %502 = icmp eq i32 %3, 0
  br i1 %502, label %683, label %503

503:                                              ; preds = %501
  %504 = zext i32 %2 to i64
  %505 = getelementptr inbounds i8, i8* %23, i64 %504
  %506 = zext i32 %3 to i64
  br label %507

507:                                              ; preds = %507, %503
  %508 = phi i64 [ 0, %503 ], [ %529, %507 ]
  %509 = phi i8* [ %505, %503 ], [ %528, %507 ]
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i32
  %512 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %508, i64 0
  store i32 %511, i32* %512, align 4
  %513 = trunc i64 %508 to i32
  %514 = add i32 %513, %2
  %515 = and i32 %514, 1
  %516 = add nuw nsw i32 %515, 1
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds i8, i8* %509, i64 %517
  %519 = load i8, i8* %518, align 1
  %520 = zext i8 %519 to i32
  %521 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %508, i64 1
  store i32 %520, i32* %521, align 4
  %522 = sub nuw nsw i32 2, %515
  %523 = zext i32 %522 to i64
  %524 = getelementptr inbounds i8, i8* %509, i64 %523
  %525 = load i8, i8* %524, align 1
  %526 = zext i8 %525 to i32
  %527 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %508, i64 2
  store i32 %526, i32* %527, align 4
  %528 = getelementptr inbounds i8, i8* %509, i64 1
  %529 = add nuw nsw i64 %508, 1
  %530 = icmp eq i64 %529, %506
  br i1 %530, label %683, label %507

531:                                              ; preds = %31
  %532 = icmp eq i32 %3, 0
  br i1 %532, label %683, label %533

533:                                              ; preds = %531
  %534 = bitcast i8* %23 to i16*
  %535 = zext i32 %2 to i64
  %536 = getelementptr inbounds i16, i16* %534, i64 %535
  %537 = zext i32 %3 to i64
  br label %538

538:                                              ; preds = %538, %533
  %539 = phi i64 [ 0, %533 ], [ %560, %538 ]
  %540 = phi i16* [ %536, %533 ], [ %559, %538 ]
  %541 = load i16, i16* %540, align 2
  %542 = zext i16 %541 to i32
  %543 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %539, i64 0
  store i32 %542, i32* %543, align 4
  %544 = trunc i64 %539 to i32
  %545 = add i32 %544, %2
  %546 = and i32 %545, 1
  %547 = add nuw nsw i32 %546, 1
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds i16, i16* %540, i64 %548
  %550 = load i16, i16* %549, align 2
  %551 = zext i16 %550 to i32
  %552 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %539, i64 1
  store i32 %551, i32* %552, align 4
  %553 = sub nuw nsw i32 2, %546
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds i16, i16* %540, i64 %554
  %556 = load i16, i16* %555, align 2
  %557 = zext i16 %556 to i32
  %558 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %539, i64 2
  store i32 %557, i32* %558, align 4
  %559 = getelementptr inbounds i16, i16* %540, i64 1
  %560 = add nuw nsw i64 %539, 1
  %561 = icmp eq i64 %560, %537
  br i1 %561, label %683, label %538

562:                                              ; preds = %31
  %563 = icmp eq i32 %3, 0
  br i1 %563, label %683, label %564

564:                                              ; preds = %562
  %565 = bitcast i8* %23 to i32*
  %566 = zext i32 %2 to i64
  %567 = getelementptr inbounds i32, i32* %565, i64 %566
  %568 = zext i32 %3 to i64
  br label %569

569:                                              ; preds = %569, %564
  %570 = phi i64 [ 0, %564 ], [ %588, %569 ]
  %571 = phi i32* [ %567, %564 ], [ %587, %569 ]
  %572 = load i32, i32* %571, align 4
  %573 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %570, i64 0
  store i32 %572, i32* %573, align 4
  %574 = trunc i64 %570 to i32
  %575 = add i32 %574, %2
  %576 = and i32 %575, 1
  %577 = add nuw nsw i32 %576, 1
  %578 = zext i32 %577 to i64
  %579 = getelementptr inbounds i32, i32* %571, i64 %578
  %580 = load i32, i32* %579, align 4
  %581 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %570, i64 1
  store i32 %580, i32* %581, align 4
  %582 = sub nuw nsw i32 2, %576
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds i32, i32* %571, i64 %583
  %585 = load i32, i32* %584, align 4
  %586 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %570, i64 2
  store i32 %585, i32* %586, align 4
  %587 = getelementptr inbounds i32, i32* %571, i64 1
  %588 = add nuw nsw i64 %570, 1
  %589 = icmp eq i64 %588, %568
  br i1 %589, label %683, label %569

590:                                              ; preds = %590, %37
  %591 = phi i64 [ 0, %37 ], [ %609, %590 ]
  %592 = trunc i64 %591 to i32
  %593 = add i32 %592, %2
  %594 = add i32 %593, 1
  %595 = zext i32 %594 to i64
  %596 = getelementptr inbounds i8, i8* %23, i64 %595
  %597 = load i8, i8* %596, align 1
  %598 = zext i8 %597 to i32
  %599 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %591, i64 0
  store i32 %598, i32* %599, align 4
  %600 = add i32 %593, 2
  %601 = zext i32 %600 to i64
  %602 = getelementptr inbounds i8, i8* %23, i64 %601
  %603 = load i8, i8* %602, align 1
  %604 = zext i8 %603 to i32
  %605 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %591, i64 1
  store i32 %604, i32* %605, align 4
  %606 = load i8, i8* %23, align 1
  %607 = zext i8 %606 to i32
  %608 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %591, i64 2
  store i32 %607, i32* %608, align 4
  %609 = add nuw nsw i64 %591, 1
  %610 = icmp eq i64 %609, %38
  br i1 %610, label %683, label %590

611:                                              ; preds = %31
  %612 = bitcast i8* %23 to i16*
  %613 = icmp eq i32 %3, 0
  br i1 %613, label %683, label %614

614:                                              ; preds = %611
  %615 = zext i32 %3 to i64
  br label %616

616:                                              ; preds = %616, %614
  %617 = phi i64 [ 0, %614 ], [ %635, %616 ]
  %618 = trunc i64 %617 to i32
  %619 = add i32 %618, %2
  %620 = add i32 %619, 1
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds i16, i16* %612, i64 %621
  %623 = load i16, i16* %622, align 2
  %624 = zext i16 %623 to i32
  %625 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %617, i64 0
  store i32 %624, i32* %625, align 4
  %626 = add i32 %619, 2
  %627 = zext i32 %626 to i64
  %628 = getelementptr inbounds i16, i16* %612, i64 %627
  %629 = load i16, i16* %628, align 2
  %630 = zext i16 %629 to i32
  %631 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %617, i64 1
  store i32 %630, i32* %631, align 4
  %632 = load i16, i16* %612, align 2
  %633 = zext i16 %632 to i32
  %634 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %617, i64 2
  store i32 %633, i32* %634, align 4
  %635 = add nuw nsw i64 %617, 1
  %636 = icmp eq i64 %635, %615
  br i1 %636, label %683, label %616

637:                                              ; preds = %31
  %638 = bitcast i8* %23 to i32*
  %639 = icmp eq i32 %3, 0
  br i1 %639, label %683, label %640

640:                                              ; preds = %637
  %641 = zext i32 %3 to i64
  br label %642

642:                                              ; preds = %642, %640
  %643 = phi i64 [ 0, %640 ], [ %658, %642 ]
  %644 = trunc i64 %643 to i32
  %645 = add i32 %644, %2
  %646 = add i32 %645, 1
  %647 = zext i32 %646 to i64
  %648 = getelementptr inbounds i32, i32* %638, i64 %647
  %649 = load i32, i32* %648, align 4
  %650 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %643, i64 0
  store i32 %649, i32* %650, align 4
  %651 = add i32 %645, 2
  %652 = zext i32 %651 to i64
  %653 = getelementptr inbounds i32, i32* %638, i64 %652
  %654 = load i32, i32* %653, align 4
  %655 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %643, i64 1
  store i32 %654, i32* %655, align 4
  %656 = load i32, i32* %638, align 4
  %657 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %643, i64 2
  store i32 %656, i32* %657, align 4
  %658 = add nuw nsw i64 %643, 1
  %659 = icmp eq i64 %658, %641
  br i1 %659, label %683, label %642

660:                                              ; preds = %31
  %661 = icmp eq i32 %3, 0
  br i1 %661, label %683, label %662

662:                                              ; preds = %660
  %663 = shl i32 %2, 1
  %664 = and i32 %663, 2147483646
  br label %665

665:                                              ; preds = %662, %665
  %666 = phi i32 [ %681, %665 ], [ 0, %662 ]
  %667 = phi i32 [ %680, %665 ], [ %664, %662 ]
  %668 = zext i32 %666 to i64
  %669 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %668, i64 0
  store i32 %667, i32* %669, align 8
  %670 = or i32 %667, 1
  %671 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %668, i64 1
  store i32 %670, i32* %671, align 4
  %672 = add i32 %667, 2
  %673 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %668, i64 2
  store i32 %672, i32* %673, align 8
  %674 = or i32 %666, 1
  %675 = zext i32 %674 to i64
  %676 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %675, i64 0
  store i32 %667, i32* %676, align 4
  %677 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %675, i64 1
  store i32 %672, i32* %677, align 4
  %678 = add i32 %667, 3
  %679 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 %675, i64 2
  store i32 %678, i32* %679, align 4
  %680 = add i32 %667, 4
  %681 = add i32 %666, 2
  %682 = icmp ult i32 %681, %3
  br i1 %682, label %665, label %683

683:                                              ; preds = %665, %642, %616, %590, %569, %538, %507, %487, %462, %437, %411, %384, %357, %345, %323, %301, %282, %258, %234, %215, %193, %171, %152, %142, %116, %100, %91, %81, %67, %63, %76, %59, %55, %111, %49, %43, %165, %186, %208, %227, %250, %274, %295, %316, %338, %39, %379, %406, %430, %454, %479, %501, %531, %562, %35, %611, %637, %660
  %684 = getelementptr inbounds %"struct.sw::VertexTask", %"struct.sw::VertexTask"* %21, i64 0, i32 1
  store i32 %2, i32* %684, align 4
  %685 = mul i32 %3, 3
  %686 = getelementptr inbounds %"struct.sw::VertexTask", %"struct.sw::VertexTask"* %21, i64 0, i32 0
  store i32 %685, i32* %686, align 16
  %687 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %10, i64 0, i32 0
  %688 = getelementptr inbounds [128 x [3 x i32]], [128 x [3 x i32]]* %7, i64 0, i64 0, i64 0
  call void %25(%"struct.sw::Vertex"* %687, i32* nonnull %688, %"struct.sw::VertexTask"* %21, %"struct.sw::DrawData"* %18) #15
  br label %689

689:                                              ; preds = %31, %683
  call void @llvm.lifetime.end.p0i8(i64 1536, i8* nonnull %32) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer15finishRenderingERNS0_4TaskE(%"class.sw::Renderer"* nocapture, %"struct.sw::Renderer::Task"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.sw::Renderer::Task", %"struct.sw::Renderer::Task"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 acquire, align 4
  %5 = getelementptr inbounds %"struct.sw::Renderer::Task", %"struct.sw::Renderer::Task"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 acquire, align 4
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = and i32 %9, 15
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 25, i64 %11
  %13 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %12, align 8
  %14 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 30
  %15 = load %"struct.sw::DrawData"*, %"struct.sw::DrawData"** %14, align 8
  %16 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %7, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 acquire, align 4
  %18 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %7, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 acquire, align 4
  %20 = add nsw i32 %19, %17
  %21 = sext i32 %6 to i64
  %22 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %21, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %20, i32* %22 release, align 4
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = icmp slt i32 %23, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 acq_rel
  store atomic i32 0, i32* %22 release, align 4
  br label %30

30:                                               ; preds = %2, %27
  %31 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 21, i64 %7, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %232

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %232

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 25
  %40 = load %"class.std::__1::list"*, %"class.std::__1::list"** %39, align 8
  %41 = icmp eq %"class.std::__1::list"* %40, null
  br i1 %41, label %97, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %40, i64 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %40, i64 0, i32 0, i32 0
  %45 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = inttoptr i64 %46 to %"struct.std::__1::__list_node_base"*
  %48 = icmp eq %"struct.std::__1::__list_node_base"* %44, %47
  br i1 %48, label %92, label %52

49:                                               ; preds = %86
  %50 = load %"class.std::__1::list"*, %"class.std::__1::list"** %39, align 8
  %51 = icmp eq %"class.std::__1::list"* %50, null
  br i1 %51, label %96, label %92

52:                                               ; preds = %42, %86
  %53 = phi %"struct.std::__1::__list_node_base"* [ %90, %86 ], [ %47, %42 ]
  %54 = phi i64 [ %89, %86 ], [ %46, %42 ]
  %55 = inttoptr i64 %54 to %"struct.std::__1::__list_node"*
  %56 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %55, i64 0, i32 1
  %57 = load %"struct.sw::Query"*, %"struct.sw::Query"** %56, align 8
  %58 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %57, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %77 [
    i32 0, label %60
    i32 1, label %74
  ]

60:                                               ; preds = %52
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer12clusterCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %77

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %70, %63 ], [ 0, %60 ]
  %65 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %15, i64 0, i32 17, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = load %"struct.sw::Query"*, %"struct.sw::Query"** %56, align 8
  %68 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %67, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 %66 acq_rel
  %70 = add nuw nsw i64 %64, 1
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer12clusterCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %72 = sext i32 %71 to i64
  %73 = icmp slt i64 %70, %72
  br i1 %73, label %63, label %77

74:                                               ; preds = %52
  %75 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %57, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 %20 acq_rel
  br label %77

77:                                               ; preds = %63, %60, %52, %74
  %78 = load %"struct.sw::Query"*, %"struct.sw::Query"** %56, align 8
  %79 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %78, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw sub i32* %79, i32 1 acq_rel
  %81 = icmp ne i32 %80, 1
  %82 = icmp eq %"struct.sw::Query"* %78, null
  %83 = or i1 %82, %81
  br i1 %83, label %86, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"struct.sw::Query", %"struct.sw::Query"* %78, i64 0, i32 0
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %77, %84
  %87 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %53, i64 0, i32 1
  %88 = bitcast %"struct.std::__1::__list_node_base"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = inttoptr i64 %89 to %"struct.std::__1::__list_node_base"*
  %91 = icmp eq %"struct.std::__1::__list_node_base"* %44, %90
  br i1 %91, label %49, label %52

92:                                               ; preds = %42, %49
  %93 = phi %"class.std::__1::list"* [ %50, %49 ], [ %40, %42 ]
  %94 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %93, i64 0, i32 0
  tail call void @_ZNSt3__110__list_impIPN2sw5QueryENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__list_imp"* %94) #15
  %95 = bitcast %"class.std::__1::list"* %93 to i8*
  tail call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %92, %49
  store %"class.std::__1::list"* null, %"class.std::__1::list"** %39, align 8
  br label %97

97:                                               ; preds = %38, %96
  br label %102

98:                                               ; preds = %112
  %99 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 13
  %100 = load %"class.sw::Surface"*, %"class.sw::Surface"** %99, align 8
  %101 = icmp eq %"class.sw::Surface"* %100, null
  br i1 %101, label %120, label %115

102:                                              ; preds = %97, %112
  %103 = phi i64 [ %113, %112 ], [ 0, %97 ]
  %104 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 12, i64 %103
  %105 = load %"class.sw::Surface"*, %"class.sw::Surface"** %104, align 8
  %106 = icmp eq %"class.sw::Surface"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.sw::Surface"* %105 to void (%"class.sw::Surface"*)***
  %109 = load void (%"class.sw::Surface"*)**, void (%"class.sw::Surface"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.sw::Surface"*)*, void (%"class.sw::Surface"*)** %109, i64 3
  %111 = load void (%"class.sw::Surface"*)*, void (%"class.sw::Surface"*)** %110, align 8
  tail call void %111(%"class.sw::Surface"* nonnull %105) #15
  br label %112

112:                                              ; preds = %102, %107
  %113 = add nuw nsw i64 %103, 1
  %114 = icmp eq i64 %113, 8
  br i1 %114, label %98, label %102

115:                                              ; preds = %98
  %116 = bitcast %"class.sw::Surface"* %100 to void (%"class.sw::Surface"*)***
  %117 = load void (%"class.sw::Surface"*)**, void (%"class.sw::Surface"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.sw::Surface"*)*, void (%"class.sw::Surface"*)** %117, i64 3
  %119 = load void (%"class.sw::Surface"*)*, void (%"class.sw::Surface"*)** %118, align 8
  tail call void %119(%"class.sw::Surface"* nonnull %100) #15
  br label %120

120:                                              ; preds = %98, %115
  %121 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 14
  %122 = load %"class.sw::Surface"*, %"class.sw::Surface"** %121, align 8
  %123 = icmp eq %"class.sw::Surface"* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  tail call void @_ZN2sw7Surface13unlockStencilEv(%"class.sw::Surface"* nonnull %122) #15
  br label %125

125:                                              ; preds = %120, %124
  br label %126

126:                                              ; preds = %125, %132
  %127 = phi i64 [ %133, %132 ], [ 0, %125 ]
  %128 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 15, i64 %127
  %129 = load %"class.sw::Resource"*, %"class.sw::Resource"** %128, align 8
  %130 = icmp eq %"class.sw::Resource"* %129, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %126
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %129) #15
  br label %132

132:                                              ; preds = %126, %131
  %133 = add nuw nsw i64 %127, 1
  %134 = icmp eq i64 %133, 32
  br i1 %134, label %139, label %126

135:                                              ; preds = %145
  %136 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 11
  %137 = load %"class.sw::Resource"*, %"class.sw::Resource"** %136, align 8
  %138 = icmp eq %"class.sw::Resource"* %137, null
  br i1 %138, label %149, label %148

139:                                              ; preds = %132, %145
  %140 = phi i64 [ %146, %145 ], [ 0, %132 ]
  %141 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 10, i64 %140
  %142 = load %"class.sw::Resource"*, %"class.sw::Resource"** %141, align 8
  %143 = icmp eq %"class.sw::Resource"* %142, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %139
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %142) #15
  br label %145

145:                                              ; preds = %139, %144
  %146 = add nuw nsw i64 %140, 1
  %147 = icmp eq i64 %146, 32
  br i1 %147, label %135, label %139

148:                                              ; preds = %135
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %137) #15
  br label %149

149:                                              ; preds = %135, %148
  br label %150

150:                                              ; preds = %149, %161
  %151 = phi i64 [ %162, %161 ], [ 0, %149 ]
  %152 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 16, i64 %151
  %153 = load %"class.sw::Resource"*, %"class.sw::Resource"** %152, align 8
  %154 = icmp eq %"class.sw::Resource"* %153, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %150
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %153) #15
  br label %156

156:                                              ; preds = %150, %155
  %157 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 17, i64 %151
  %158 = load %"class.sw::Resource"*, %"class.sw::Resource"** %157, align 8
  %159 = icmp eq %"class.sw::Resource"* %158, null
  br i1 %159, label %161, label %160

160:                                              ; preds = %156
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %158) #15
  br label %161

161:                                              ; preds = %156, %160
  %162 = add nuw nsw i64 %151, 1
  %163 = icmp eq i64 %162, 24
  br i1 %163, label %223, label %150

164:                                              ; preds = %229
  %165 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 2
  %166 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 2, i32 1
  %167 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %166, align 8
  %168 = bitcast %"class.std::__1::shared_ptr"* %165 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %168, align 8
  %169 = icmp eq %"class.std::__1::__shared_weak_count"* %167, null
  br i1 %169, label %180, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %167, i64 0, i32 0, i32 1
  %172 = atomicrmw add i64* %171, i64 -1 acq_rel
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %180

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %167, i64 0, i32 0
  %176 = bitcast %"class.std::__1::__shared_weak_count"* %167 to void (%"class.std::__1::__shared_count"*)***
  %177 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %177, i64 2
  %179 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %178, align 8
  tail call void %179(%"class.std::__1::__shared_count"* %175) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %167) #15
  br label %180

180:                                              ; preds = %164, %170, %174
  %181 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 3
  %182 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 3, i32 1
  %183 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %182, align 8
  %184 = bitcast %"class.std::__1::shared_ptr"* %181 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %184, align 8
  %185 = icmp eq %"class.std::__1::__shared_weak_count"* %183, null
  br i1 %185, label %196, label %186

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %183, i64 0, i32 0, i32 1
  %188 = atomicrmw add i64* %187, i64 -1 acq_rel
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %183, i64 0, i32 0
  %192 = bitcast %"class.std::__1::__shared_weak_count"* %183 to void (%"class.std::__1::__shared_count"*)***
  %193 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %193, i64 2
  %195 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %194, align 8
  tail call void %195(%"class.std::__1::__shared_count"* %191) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %183) #15
  br label %196

196:                                              ; preds = %180, %186, %190
  %197 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 4
  %198 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 4, i32 1
  %199 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %198, align 8
  %200 = bitcast %"class.std::__1::shared_ptr"* %197 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %200, align 8
  %201 = icmp eq %"class.std::__1::__shared_weak_count"* %199, null
  br i1 %201, label %212, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %199, i64 0, i32 0, i32 1
  %204 = atomicrmw add i64* %203, i64 -1 acq_rel
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %199, i64 0, i32 0
  %208 = bitcast %"class.std::__1::__shared_weak_count"* %199 to void (%"class.std::__1::__shared_count"*)***
  %209 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %209, i64 2
  %211 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %210, align 8
  tail call void %211(%"class.std::__1::__shared_count"* %207) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %199) #15
  br label %212

212:                                              ; preds = %196, %202, %206
  %213 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 35
  %214 = load %"class.sw::Resource"*, %"class.sw::Resource"** %213, align 8
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* %214) #15
  store atomic i32 -1, i32* %35 release, align 4
  %215 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 20
  %216 = load %"class.sw::Event"*, %"class.sw::Event"** %215, align 8
  %217 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %216, i64 0, i32 1
  %218 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %217) #15
  %219 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %216, i64 0, i32 2
  store volatile i8 1, i8* %219, align 8
  %220 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %216, i64 0, i32 0
  %221 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %220) #15
  %222 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %217) #15
  br label %232

223:                                              ; preds = %161, %229
  %224 = phi i64 [ %230, %229 ], [ 0, %161 ]
  %225 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 18, i64 %224
  %226 = load %"class.sw::Resource"*, %"class.sw::Resource"** %225, align 8
  %227 = icmp eq %"class.sw::Resource"* %226, null
  br i1 %227, label %229, label %228

228:                                              ; preds = %223
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %226) #15
  br label %229

229:                                              ; preds = %223, %228
  %230 = add nuw nsw i64 %224, 1
  %231 = icmp eq i64 %230, 64
  br i1 %231, label %164, label %223

232:                                              ; preds = %34, %212, %30
  %233 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 22, i64 %21, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %233 release, align 4
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Surface13unlockStencilEv(%"class.sw::Surface"*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw11VertexCache5clearEv(%"struct.sw::VertexCache"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw7Clipper4clipERNS_7PolygonEiRKNS_8DrawCallE(%"class.sw::Clipper"*, %"struct.sw::Polygon"* dereferenceable(2320), i32, %"struct.sw::DrawCall"* dereferenceable(1784)) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN2sw8Renderer9setupLineERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE(%"class.sw::Renderer"* nocapture readonly, %"struct.sw::Primitive"* dereferenceable(39104), %"struct.sw::Triangle"* dereferenceable(1728), %"struct.sw::DrawCall"* dereferenceable(1784)) local_unnamed_addr #2 align 2 {
  %5 = alloca [4 x %"struct.sw::float4"], align 16
  %6 = alloca %"struct.sw::Polygon", align 16
  %7 = alloca [8 x %"struct.sw::float4"], align 16
  %8 = alloca [6 x %"struct.sw::float4"], align 16
  %9 = alloca %"struct.sw::Polygon", align 16
  %10 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 6
  %11 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 30
  %12 = load %"struct.sw::DrawData"*, %"struct.sw::DrawData"** %11, align 8
  %13 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %12, i64 0, i32 12
  %14 = load float, float* %13, align 16
  %15 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 9, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = lshr i32 %16, 8
  %18 = and i32 %17, 63
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 0, i32 0, i32 0, i64 %19
  %21 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 1, i32 0, i32 0, i64 %19
  %22 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 0, i32 0, i32 0, i64 %19, i32 3
  %23 = load float, float* %22, align 4
  %24 = fcmp ugt float %23, 0.000000e+00
  %25 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 1, i32 0, i32 0, i64 %19, i32 3
  %26 = load float, float* %25, align 4
  %27 = fcmp ugt float %26, 0.000000e+00
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %294

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %12, i64 0, i32 19, i32 0
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %12, i64 0, i32 20, i32 0
  %33 = load float, float* %32, align 4
  %34 = insertelement <2 x float> undef, float %31, i32 0
  %35 = insertelement <2 x float> %34, float %33, i32 1
  %36 = fmul <2 x float> %35, <float 6.250000e-02, float 6.250000e-02>
  %37 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 1, i32 0, i32 0, i64 %19, i32 3
  %38 = bitcast %"struct.sw::float4"* %21 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 16
  %40 = insertelement <2 x float> undef, float %26, i32 0
  %41 = shufflevector <2 x float> %40, <2 x float> undef, <2 x i32> zeroinitializer
  %42 = fdiv <2 x float> %39, %41
  %43 = bitcast %"struct.sw::float4"* %20 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 16
  %45 = insertelement <2 x float> undef, float %23, i32 0
  %46 = shufflevector <2 x float> %45, <2 x float> undef, <2 x i32> zeroinitializer
  %47 = fdiv <2 x float> %44, %46
  %48 = fsub <2 x float> %42, %47
  %49 = fmul <2 x float> %36, %48
  %50 = extractelement <2 x float> %49, i32 0
  %51 = fcmp oeq float %50, 0.000000e+00
  %52 = extractelement <2 x float> %49, i32 1
  %53 = fcmp oeq float %52, 0.000000e+00
  %54 = and i1 %51, %53
  br i1 %54, label %294, label %55

55:                                               ; preds = %29
  %56 = and i32 %16, 201326592
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %153, label %58

58:                                               ; preds = %55
  %59 = bitcast [4 x %"struct.sw::float4"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %59) #14
  %60 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 0
  %61 = bitcast %"struct.sw::float4"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %59, i8* align 16 %61, i64 16, i1 false)
  %62 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 1
  %63 = bitcast %"struct.sw::float4"* %62 to i8*
  %64 = bitcast %"struct.sw::float4"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %63, i8* align 16 %64, i64 16, i1 false)
  %65 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 2
  %66 = bitcast %"struct.sw::float4"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %66, i8* align 16 %64, i64 16, i1 false)
  %67 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 3
  %68 = bitcast %"struct.sw::float4"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %68, i8* align 16 %61, i64 16, i1 false)
  %69 = fmul float %14, 5.000000e-01
  %70 = fmul float %50, %50
  %71 = fmul float %52, %52
  %72 = fadd float %70, %71
  %73 = tail call float @sqrtf(float %72) #15
  %74 = fdiv float %69, %73
  %75 = fmul float %50, %74
  %76 = fmul float %52, %74
  %77 = load float, float* %22, align 4
  %78 = fmul float %77, %75
  %79 = extractelement <2 x float> %36, i32 1
  %80 = fdiv float %78, %79
  %81 = fmul float %77, %76
  %82 = extractelement <2 x float> %36, i32 0
  %83 = fdiv float %81, %82
  %84 = load float, float* %37, align 4
  %85 = fmul float %75, %84
  %86 = fdiv float %85, %79
  %87 = fmul float %76, %84
  %88 = fdiv float %87, %82
  %89 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 0, i32 0
  %90 = load float, float* %89, align 16
  %91 = fsub float %90, %83
  store float %91, float* %89, align 16
  %92 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 0, i32 1
  %93 = load float, float* %92, align 4
  %94 = fadd float %80, %93
  store float %94, float* %92, align 4
  %95 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 5
  %96 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %95, align 8
  %97 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %96, %"struct.sw::float4"* nonnull dereferenceable(16) %60) #15
  %98 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %62, i64 0, i32 0
  %99 = load float, float* %98, align 16
  %100 = fsub float %99, %88
  store float %100, float* %98, align 16
  %101 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 1, i32 1
  %102 = load float, float* %101, align 4
  %103 = fadd float %86, %102
  store float %103, float* %101, align 4
  %104 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %95, align 8
  %105 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %104, %"struct.sw::float4"* dereferenceable(16) %62) #15
  %106 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %65, i64 0, i32 0
  %107 = load float, float* %106, align 16
  %108 = fadd float %88, %107
  store float %108, float* %106, align 16
  %109 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 2, i32 1
  %110 = load float, float* %109, align 4
  %111 = fsub float %110, %86
  store float %111, float* %109, align 4
  %112 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %95, align 8
  %113 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %112, %"struct.sw::float4"* dereferenceable(16) %65) #15
  %114 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %67, i64 0, i32 0
  %115 = load float, float* %114, align 16
  %116 = fadd float %83, %115
  store float %116, float* %114, align 16
  %117 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 3, i32 1
  %118 = load float, float* %117, align 4
  %119 = fsub float %118, %80
  store float %119, float* %117, align 4
  %120 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %95, align 8
  %121 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %120, %"struct.sw::float4"* dereferenceable(16) %67) #15
  %122 = and i32 %105, %97
  %123 = and i32 %122, %113
  %124 = and i32 %123, %121
  %125 = icmp eq i32 %124, 128
  br i1 %125, label %127, label %126

126:                                              ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %59) #14
  br label %294

127:                                              ; preds = %58
  %128 = bitcast %"struct.sw::Polygon"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2320, i8* nonnull %128) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %128, i8* align 16 bitcast (%"struct.sw::Polygon"* @__const._ZN2sw8Renderer10setupPointERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE.polygon to i8*), i64 2320, i1 false)
  %129 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, <2 x i64> <i64 0, i64 1>
  %130 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 1, i64 0, i64 0
  %131 = bitcast %"struct.sw::float4"** %130 to <2 x %"struct.sw::float4"*>*
  store <2 x %"struct.sw::float4"*> %129, <2 x %"struct.sw::float4"*>* %131, align 16
  %132 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, <2 x i64> <i64 2, i64 3>
  %133 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 1, i64 0, i64 2
  %134 = bitcast %"struct.sw::float4"** %133 to <2 x %"struct.sw::float4"*>*
  store <2 x %"struct.sw::float4"*> %132, <2 x %"struct.sw::float4"*>* %134, align 16
  %135 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 2
  store i32 4, i32* %135, align 16
  %136 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 3
  store i32 0, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 4
  store i32 0, i32* %137, align 8
  %138 = or i32 %105, %97
  %139 = or i32 %138, %113
  %140 = or i32 %139, %121
  %141 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 acquire, align 4
  %143 = or i32 %140, %142
  %144 = icmp eq i32 %143, 128
  br i1 %144, label %148, label %145

145:                                              ; preds = %127
  %146 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %95, align 8
  %147 = call zeroext i1 @_ZN2sw7Clipper4clipERNS_7PolygonEiRKNS_8DrawCallE(%"class.sw::Clipper"* %146, %"struct.sw::Polygon"* nonnull dereferenceable(2320) %6, i32 %143, %"struct.sw::DrawCall"* dereferenceable(1784) %3) #15
  br i1 %147, label %148, label %151

148:                                              ; preds = %127, %145
  %149 = load i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)*, i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)** %10, align 8
  %150 = call zeroext i1 %149(%"struct.sw::Primitive"* %1, %"struct.sw::Triangle"* %2, %"struct.sw::Polygon"* nonnull %6, %"struct.sw::DrawData"* %12) #15
  br label %151

151:                                              ; preds = %148, %145
  %152 = phi i1 [ %150, %148 ], [ false, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 2320, i8* nonnull %128) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %59) #14
  br label %294

153:                                              ; preds = %55
  %154 = bitcast [8 x %"struct.sw::float4"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %154) #14
  %155 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 0
  %156 = bitcast %"struct.sw::float4"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %154, i8* align 16 %156, i64 16, i1 false)
  %157 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 1
  %158 = bitcast %"struct.sw::float4"* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %158, i8* align 16 %156, i64 16, i1 false)
  %159 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 2
  %160 = bitcast %"struct.sw::float4"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %160, i8* align 16 %156, i64 16, i1 false)
  %161 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 3
  %162 = bitcast %"struct.sw::float4"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %162, i8* align 16 %156, i64 16, i1 false)
  %163 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 4
  %164 = bitcast %"struct.sw::float4"* %163 to i8*
  %165 = bitcast %"struct.sw::float4"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %164, i8* align 16 %165, i64 16, i1 false)
  %166 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 5
  %167 = bitcast %"struct.sw::float4"* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %167, i8* align 16 %165, i64 16, i1 false)
  %168 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 6
  %169 = bitcast %"struct.sw::float4"* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %169, i8* align 16 %165, i64 16, i1 false)
  %170 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 7
  %171 = bitcast %"struct.sw::float4"* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %171, i8* align 16 %165, i64 16, i1 false)
  %172 = fmul float %14, 5.000000e-01
  %173 = fmul float %172, %23
  %174 = extractelement <2 x float> %36, i32 0
  %175 = fdiv float %173, %174
  %176 = extractelement <2 x float> %36, i32 1
  %177 = fdiv float %173, %176
  %178 = fmul float %172, %26
  %179 = fdiv float %178, %174
  %180 = fdiv float %178, %176
  %181 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 0, i32 0
  %182 = load float, float* %181, align 16
  %183 = fsub float %182, %175
  store float %183, float* %181, align 16
  %184 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 5
  %185 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %186 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %185, %"struct.sw::float4"* nonnull dereferenceable(16) %155) #15
  %187 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 1, i32 1
  %188 = load float, float* %187, align 4
  %189 = fadd float %177, %188
  store float %189, float* %187, align 4
  %190 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %191 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %190, %"struct.sw::float4"* dereferenceable(16) %157) #15
  %192 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %159, i64 0, i32 0
  %193 = load float, float* %192, align 16
  %194 = fadd float %175, %193
  store float %194, float* %192, align 16
  %195 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %196 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %195, %"struct.sw::float4"* dereferenceable(16) %159) #15
  %197 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 3, i32 1
  %198 = load float, float* %197, align 4
  %199 = fsub float %198, %177
  store float %199, float* %197, align 4
  %200 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %201 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %200, %"struct.sw::float4"* dereferenceable(16) %161) #15
  %202 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %163, i64 0, i32 0
  %203 = load float, float* %202, align 16
  %204 = fsub float %203, %179
  store float %204, float* %202, align 16
  %205 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %206 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %205, %"struct.sw::float4"* dereferenceable(16) %163) #15
  %207 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 5, i32 1
  %208 = load float, float* %207, align 4
  %209 = fadd float %180, %208
  store float %209, float* %207, align 4
  %210 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %211 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %210, %"struct.sw::float4"* dereferenceable(16) %166) #15
  %212 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %168, i64 0, i32 0
  %213 = load float, float* %212, align 16
  %214 = fadd float %179, %213
  store float %214, float* %212, align 16
  %215 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %216 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %215, %"struct.sw::float4"* dereferenceable(16) %168) #15
  %217 = getelementptr inbounds [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"]* %7, i64 0, i64 7, i32 1
  %218 = load float, float* %217, align 4
  %219 = fsub float %218, %180
  store float %219, float* %217, align 4
  %220 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %221 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %220, %"struct.sw::float4"* dereferenceable(16) %170) #15
  %222 = and i32 %191, %186
  %223 = and i32 %222, %196
  %224 = and i32 %223, %201
  %225 = and i32 %224, %206
  %226 = and i32 %225, %211
  %227 = and i32 %226, %216
  %228 = and i32 %227, %221
  %229 = icmp eq i32 %228, 128
  br i1 %229, label %231, label %230

230:                                              ; preds = %153
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %154) #14
  br label %294

231:                                              ; preds = %153
  %232 = bitcast [6 x %"struct.sw::float4"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %232) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %232, i8 -1, i64 96, i1 false)
  %233 = fsub float -0.000000e+00, %52
  %234 = fcmp ogt float %50, %233
  %235 = fcmp ogt float %50, %52
  br i1 %234, label %236, label %241

236:                                              ; preds = %231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %232, i8* nonnull align 16 %154, i64 16, i1 false)
  %237 = getelementptr inbounds [6 x %"struct.sw::float4"], [6 x %"struct.sw::float4"]* %8, i64 0, i64 1
  %238 = bitcast %"struct.sw::float4"* %237 to i8*
  br i1 %235, label %239, label %240

239:                                              ; preds = %236
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %238, i8* align 16 %158, i64 16, i1 false)
  br label %248

240:                                              ; preds = %236
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %238, i8* align 16 %164, i64 16, i1 false)
  br label %248

241:                                              ; preds = %231
  br i1 %235, label %242, label %245

242:                                              ; preds = %241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %232, i8* nonnull align 16 %154, i64 16, i1 false)
  %243 = getelementptr inbounds [6 x %"struct.sw::float4"], [6 x %"struct.sw::float4"]* %8, i64 0, i64 1
  %244 = bitcast %"struct.sw::float4"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %244, i8* align 16 %158, i64 16, i1 false)
  br label %248

245:                                              ; preds = %241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %232, i8* align 16 %158, i64 16, i1 false)
  %246 = getelementptr inbounds [6 x %"struct.sw::float4"], [6 x %"struct.sw::float4"]* %8, i64 0, i64 1
  %247 = bitcast %"struct.sw::float4"* %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %247, i8* align 16 %160, i64 16, i1 false)
  br label %248

248:                                              ; preds = %242, %245, %239, %240
  %249 = phi i8* [ %160, %242 ], [ %162, %245 ], [ %167, %239 ], [ %167, %240 ]
  %250 = phi i8* [ %169, %242 ], [ %171, %245 ], [ %169, %239 ], [ %169, %240 ]
  %251 = phi i8* [ %171, %242 ], [ %164, %245 ], [ %171, %239 ], [ %160, %240 ]
  %252 = phi i8* [ %164, %242 ], [ %167, %245 ], [ %162, %239 ], [ %162, %240 ]
  %253 = getelementptr inbounds [6 x %"struct.sw::float4"], [6 x %"struct.sw::float4"]* %8, i64 0, i64 2
  %254 = bitcast %"struct.sw::float4"* %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %254, i8* align 16 %249, i64 16, i1 false)
  %255 = getelementptr inbounds [6 x %"struct.sw::float4"], [6 x %"struct.sw::float4"]* %8, i64 0, i64 3
  %256 = bitcast %"struct.sw::float4"* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %256, i8* align 16 %250, i64 16, i1 false)
  %257 = getelementptr inbounds [6 x %"struct.sw::float4"], [6 x %"struct.sw::float4"]* %8, i64 0, i64 4
  %258 = bitcast %"struct.sw::float4"* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %258, i8* align 16 %251, i64 16, i1 false)
  %259 = getelementptr inbounds [6 x %"struct.sw::float4"], [6 x %"struct.sw::float4"]* %8, i64 0, i64 5
  %260 = bitcast %"struct.sw::float4"* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %260, i8* align 16 %252, i64 16, i1 false)
  %261 = bitcast %"struct.sw::Polygon"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2320, i8* nonnull %261) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %261, i8* align 16 bitcast (%"struct.sw::Polygon"* @__const._ZN2sw8Renderer10setupPointERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE.polygon to i8*), i64 2320, i1 false)
  br label %262

262:                                              ; preds = %262, %248
  %263 = phi i64 [ 0, %248 ], [ %268, %262 ]
  %264 = phi <2 x i64> [ <i64 0, i64 1>, %248 ], [ %269, %262 ]
  %265 = getelementptr inbounds [6 x %"struct.sw::float4"], [6 x %"struct.sw::float4"]* %8, i64 0, <2 x i64> %264
  %266 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %9, i64 0, i32 1, i64 0, i64 %263
  %267 = bitcast %"struct.sw::float4"** %266 to <2 x %"struct.sw::float4"*>*
  store <2 x %"struct.sw::float4"*> %265, <2 x %"struct.sw::float4"*>* %267, align 16
  %268 = add i64 %263, 2
  %269 = add <2 x i64> %264, <i64 2, i64 2>
  %270 = icmp eq i64 %268, 6
  br i1 %270, label %271, label %262, !llvm.loop !9

271:                                              ; preds = %262
  %272 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %9, i64 0, i32 2
  store i32 6, i32* %272, align 16
  %273 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %9, i64 0, i32 3
  store i32 0, i32* %273, align 4
  %274 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %9, i64 0, i32 4
  store i32 0, i32* %274, align 8
  %275 = or i32 %191, %186
  %276 = or i32 %275, %196
  %277 = or i32 %276, %201
  %278 = or i32 %277, %206
  %279 = or i32 %278, %211
  %280 = or i32 %279, %216
  %281 = or i32 %280, %221
  %282 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 acquire, align 4
  %284 = or i32 %281, %283
  %285 = icmp eq i32 %284, 128
  br i1 %285, label %289, label %286

286:                                              ; preds = %271
  %287 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %184, align 8
  %288 = call zeroext i1 @_ZN2sw7Clipper4clipERNS_7PolygonEiRKNS_8DrawCallE(%"class.sw::Clipper"* %287, %"struct.sw::Polygon"* nonnull dereferenceable(2320) %9, i32 %284, %"struct.sw::DrawCall"* dereferenceable(1784) %3) #15
  br i1 %288, label %289, label %292

289:                                              ; preds = %271, %286
  %290 = load i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)*, i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)** %10, align 8
  %291 = call zeroext i1 %290(%"struct.sw::Primitive"* %1, %"struct.sw::Triangle"* %2, %"struct.sw::Polygon"* nonnull %9, %"struct.sw::DrawData"* %12) #15
  br label %292

292:                                              ; preds = %289, %286
  %293 = phi i1 [ %291, %289 ], [ false, %286 ]
  call void @llvm.lifetime.end.p0i8(i64 2320, i8* nonnull %261) #14
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %232) #14
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %154) #14
  br label %294

294:                                              ; preds = %4, %126, %230, %292, %151, %29
  %295 = phi i1 [ %152, %151 ], [ %293, %292 ], [ false, %29 ], [ false, %230 ], [ false, %126 ], [ false, %4 ]
  ret i1 %295
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN2sw8Renderer10setupPointERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE(%"class.sw::Renderer"* nocapture readonly, %"struct.sw::Primitive"* dereferenceable(39104), %"struct.sw::Triangle"* dereferenceable(1728), %"struct.sw::DrawCall"* dereferenceable(1784)) local_unnamed_addr #2 align 2 {
  %5 = alloca [4 x %"struct.sw::float4"], align 16
  %6 = alloca %"struct.sw::Polygon", align 16
  %7 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 30
  %8 = load %"struct.sw::DrawData"*, %"struct.sw::DrawData"** %7, align 8
  %9 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 9, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = lshr i32 %10, 14
  %12 = and i32 %11, 63
  %13 = icmp eq i32 %12, 34
  %14 = zext i32 %12 to i64
  %15 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 0, i32 0, i32 0, i64 %14, i32 1
  %16 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %8, i64 0, i32 11, i32 0, i32 0
  %17 = select i1 %13, float* %16, float* %15
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %8, i64 0, i32 11, i32 1
  %20 = load float, float* %19, align 16
  %21 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %8, i64 0, i32 11, i32 2
  %22 = load float, float* %21, align 4
  %23 = fcmp olt float %18, %20
  %24 = select i1 %23, float %20, float %18
  %25 = fcmp ogt float %24, %22
  %26 = select i1 %25, float %22, float %24
  %27 = bitcast [4 x %"struct.sw::float4"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #14
  %28 = lshr i32 %10, 8
  %29 = and i32 %28, 63
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 0, i32 0, i32 0, i64 %30
  %32 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 0
  %33 = bitcast %"struct.sw::float4"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %27, i8* align 16 %33, i64 16, i1 false)
  %34 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 1
  %35 = bitcast %"struct.sw::float4"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %35, i8* align 16 %33, i64 16, i1 false)
  %36 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 2
  %37 = bitcast %"struct.sw::float4"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %37, i8* align 16 %33, i64 16, i1 false)
  %38 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 3
  %39 = bitcast %"struct.sw::float4"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %39, i8* align 16 %33, i64 16, i1 false)
  %40 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 0, i32 3
  %41 = load float, float* %40, align 4
  %42 = fmul float %26, %41
  %43 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %8, i64 0, i32 25, i32 0
  %44 = load float, float* %43, align 4
  %45 = fmul float %42, %44
  %46 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %8, i64 0, i32 26, i32 0
  %47 = load float, float* %46, align 4
  %48 = fmul float %42, %47
  %49 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 0, i32 0
  %50 = load float, float* %49, align 16
  %51 = fsub float %50, %45
  store float %51, float* %49, align 16
  %52 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = fadd float %48, %53
  store float %54, float* %52, align 4
  %55 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 5
  %56 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %55, align 8
  %57 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %56, %"struct.sw::float4"* nonnull dereferenceable(16) %32) #15
  %58 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %34, i64 0, i32 0
  %59 = load float, float* %58, align 16
  %60 = fadd float %45, %59
  store float %60, float* %58, align 16
  %61 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 1, i32 1
  %62 = load float, float* %61, align 4
  %63 = fadd float %48, %62
  store float %63, float* %61, align 4
  %64 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %55, align 8
  %65 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %64, %"struct.sw::float4"* dereferenceable(16) %34) #15
  %66 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %36, i64 0, i32 0
  %67 = load float, float* %66, align 16
  %68 = fadd float %45, %67
  store float %68, float* %66, align 16
  %69 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 2, i32 1
  %70 = load float, float* %69, align 4
  %71 = fsub float %70, %48
  store float %71, float* %69, align 4
  %72 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %55, align 8
  %73 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %72, %"struct.sw::float4"* dereferenceable(16) %36) #15
  %74 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %38, i64 0, i32 0
  %75 = load float, float* %74, align 16
  %76 = fsub float %75, %45
  store float %76, float* %74, align 16
  %77 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, i64 3, i32 1
  %78 = load float, float* %77, align 4
  %79 = fsub float %78, %48
  store float %79, float* %77, align 4
  %80 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %55, align 8
  %81 = call i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"* %80, %"struct.sw::float4"* dereferenceable(16) %38) #15
  %82 = bitcast %"struct.sw::Polygon"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2320, i8* nonnull %82) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %82, i8* align 16 bitcast (%"struct.sw::Polygon"* @__const._ZN2sw8Renderer10setupPointERNS_9PrimitiveERNS_8TriangleERKNS_8DrawCallE.polygon to i8*), i64 2320, i1 false)
  %83 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, <2 x i64> <i64 0, i64 1>
  %84 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 1, i64 0, i64 0
  %85 = bitcast %"struct.sw::float4"** %84 to <2 x %"struct.sw::float4"*>*
  store <2 x %"struct.sw::float4"*> %83, <2 x %"struct.sw::float4"*>* %85, align 16
  %86 = getelementptr inbounds [4 x %"struct.sw::float4"], [4 x %"struct.sw::float4"]* %5, i64 0, <2 x i64> <i64 2, i64 3>
  %87 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 1, i64 0, i64 2
  %88 = bitcast %"struct.sw::float4"** %87 to <2 x %"struct.sw::float4"*>*
  store <2 x %"struct.sw::float4"*> %86, <2 x %"struct.sw::float4"*>* %88, align 16
  %89 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 6
  %90 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 2
  store i32 4, i32* %90, align 16
  %91 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 3
  store i32 0, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.sw::Polygon", %"struct.sw::Polygon"* %6, i64 0, i32 4
  store i32 0, i32* %92, align 8
  %93 = and i32 %65, %57
  %94 = and i32 %93, %73
  %95 = and i32 %94, %81
  %96 = icmp eq i32 %95, 128
  br i1 %96, label %97, label %131

97:                                               ; preds = %4
  %98 = or i32 %65, %57
  %99 = or i32 %98, %73
  %100 = or i32 %99, %81
  %101 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %3, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 acquire, align 4
  %103 = or i32 %100, %102
  %104 = icmp eq i32 %103, 128
  br i1 %104, label %108, label %105

105:                                              ; preds = %97
  %106 = load %"class.sw::Clipper"*, %"class.sw::Clipper"** %55, align 8
  %107 = call zeroext i1 @_ZN2sw7Clipper4clipERNS_7PolygonEiRKNS_8DrawCallE(%"class.sw::Clipper"* %106, %"struct.sw::Polygon"* nonnull dereferenceable(2320) %6, i32 %103, %"struct.sw::DrawCall"* dereferenceable(1784) %3) #15
  br i1 %107, label %108, label %131

108:                                              ; preds = %97, %105
  %109 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 1
  %110 = bitcast %"struct.sw::Vertex"* %109 to i8*
  %111 = bitcast %"struct.sw::Triangle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %110, i8* align 16 %111, i64 576, i1 false)
  %112 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 2
  %113 = bitcast %"struct.sw::Vertex"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %113, i8* align 16 %111, i64 576, i1 false)
  %114 = fmul float %26, 8.000000e+00
  %115 = fadd float %114, 5.000000e-01
  %116 = call float @llvm.floor.f32(float %115) #14
  %117 = fptosi float %116 to i32
  %118 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 1, i32 1
  %119 = load i32, i32* %118, align 16
  %120 = add nsw i32 %119, %117
  store i32 %120, i32* %118, align 16
  %121 = getelementptr inbounds %"struct.sw::DrawData", %"struct.sw::DrawData"* %8, i64 0, i32 20, i32 0
  %122 = load float, float* %121, align 4
  %123 = fcmp ogt float %122, 0.000000e+00
  %124 = select i1 %123, i32 1, i32 -1
  %125 = mul nsw i32 %124, %117
  %126 = getelementptr inbounds %"struct.sw::Triangle", %"struct.sw::Triangle"* %2, i64 0, i32 2, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = sub nsw i32 %127, %125
  store i32 %128, i32* %126, align 4
  %129 = load i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)*, i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)** %89, align 8
  %130 = call zeroext i1 %129(%"struct.sw::Primitive"* %1, %"struct.sw::Triangle"* %2, %"struct.sw::Polygon"* nonnull %6, %"struct.sw::DrawData"* %8) #15
  br label %131

131:                                              ; preds = %4, %108, %105
  %132 = phi i1 [ %130, %108 ], [ false, %105 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 2320, i8* nonnull %82) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #14
  ret i1 %132
}

; Function Attrs: optsize
declare i32 @_ZN2sw7Clipper16computeClipFlagsERKNS_6float4E(%"class.sw::Clipper"*, %"struct.sw::float4"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer17initializeThreadsEv(%"class.sw::Renderer"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.sw::Parameters", align 8
  %3 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  br label %4

4:                                                ; preds = %4, %1
  %5 = phi i32 [ 1, %1 ], [ %7, %4 ]
  %6 = icmp slt i32 %5, %3
  %7 = shl i32 %5, 1
  br i1 %6, label %4, label %8

8:                                                ; preds = %4
  store atomic i32 %5, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer9unitCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 4
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i32 [ 1, %8 ], [ %13, %10 ]
  %12 = icmp slt i32 %11, %9
  %13 = shl i32 %11, 1
  br i1 %12, label %10, label %14

14:                                               ; preds = %10
  store atomic i32 %11, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer12clusterCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) release, align 4
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer9unitCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %25, %14
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %37

20:                                               ; preds = %17
  %21 = bitcast %"struct.sw::Parameters"* %2 to i8*
  %22 = getelementptr inbounds %"struct.sw::Parameters", %"struct.sw::Parameters"* %2, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.sw::Parameters", %"struct.sw::Parameters"* %2, i64 0, i32 0
  %24 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %38

25:                                               ; preds = %14, %25
  %26 = phi i64 [ %33, %25 ], [ 0, %14 ]
  %27 = tail call i8* @_ZN2sw8allocateEmm(i64 221184, i64 16) #15
  %28 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 10, i64 %26
  %29 = bitcast %"struct.sw::Triangle"** %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = tail call i8* @_ZN2sw8allocateEmm(i64 5005312, i64 16) #15
  %31 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 11, i64 %26
  %32 = bitcast %"struct.sw::Primitive"** %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = add nuw nsw i64 %26, 1
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw8Renderer9unitCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %25, label %17

37:                                               ; preds = %71, %17
  ret void

38:                                               ; preds = %20, %71
  %39 = phi i64 [ 0, %20 ], [ %80, %71 ]
  %40 = call i8* @_ZN2sw8allocateEmm(i64 36960, i64 16) #15
  %41 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 32, i64 %39
  %42 = bitcast %"struct.sw::VertexTask"** %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %40, i64 36944
  %44 = bitcast i8* %43 to i32*
  store i32 -1, i32* %44, align 16
  %45 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 23, i64 %39, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 3, i32* %45 release, align 4
  %46 = call i8* @_Znwm(i64 96) #13
  %47 = bitcast i8* %46 to %"class.sw::Event"*
  call void @_ZN2sw5EventC1Ev(%"class.sw::Event"* nonnull %47) #15
  %48 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 18, i64 %39
  %49 = bitcast %"class.sw::Event"** %48 to i8**
  store i8* %46, i8** %49, align 8
  %50 = call i8* @_Znwm(i64 96) #13
  %51 = bitcast i8* %50 to %"class.sw::Event"*
  call void @_ZN2sw5EventC1Ev(%"class.sw::Event"* nonnull %51) #15
  %52 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 19, i64 %39
  %53 = bitcast %"class.sw::Event"** %52 to i8**
  store i8* %50, i8** %53, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %54 = trunc i64 %39 to i32
  store i32 %54, i32* %22, align 8
  store %"class.sw::Renderer"* %0, %"class.sw::Renderer"** %23, align 8
  store atomic i32 0, i32* %24 release, align 4
  %55 = call i8* @_Znwm(i64 16) #13
  %56 = bitcast i8* %55 to %"class.sw::Thread"*
  call void @_ZN2sw6ThreadC1EPFvPvES1_(%"class.sw::Thread"* nonnull %56, void (i8*)* nonnull @_ZN2sw8Renderer14threadFunctionEPv, i8* nonnull %21) #15
  %57 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 17, i64 %39
  %58 = bitcast %"class.sw::Thread"** %57 to i8**
  store i8* %55, i8** %58, align 8
  %59 = load %"class.sw::Event"*, %"class.sw::Event"** %52, align 8
  %60 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %59, i64 0, i32 1
  %61 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %60) #15
  %62 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %59, i64 0, i32 2
  %63 = load volatile i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %38
  %66 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %59, i64 0, i32 0
  br label %67

67:                                               ; preds = %67, %65
  %68 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %66, %union.pthread_mutex_t* %60) #15
  %69 = load volatile i8, i8* %62, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %67, label %71

71:                                               ; preds = %67, %38
  store volatile i8 0, i8* %62, align 8
  %72 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %60) #15
  %73 = load %"class.sw::Event"*, %"class.sw::Event"** %52, align 8
  %74 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %73, i64 0, i32 1
  %75 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %74) #15
  %76 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %73, i64 0, i32 2
  store volatile i8 1, i8* %76, align 8
  %77 = getelementptr inbounds %"class.sw::Event", %"class.sw::Event"* %73, i64 0, i32 0
  %78 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %77) #15
  %79 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %74) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #14
  %80 = add nuw nsw i64 %39, 1
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.sw::AtomicInt", %"class.sw::AtomicInt"* @_ZN2sw11threadCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %82 = sext i32 %81 to i64
  %83 = icmp slt i64 %80, %82
  br i1 %83, label %38, label %37
}

; Function Attrs: optsize
declare void @_ZN2sw6ThreadC1EPFvPvES1_(%"class.sw::Thread"*, void (i8*)*, i8*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw6Thread4joinEv(%"class.sw::Thread"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize
declare void @_ZN2sw6ThreadD1Ev(%"class.sw::Thread"*) unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer13loadConstantsEPKNS_12VertexShaderE(%"class.sw::Renderer"*, %"class.sw::VertexShader"*) local_unnamed_addr #2 align 2 {
  %3 = alloca <4 x i32>, align 16
  %4 = alloca <4 x i32>, align 16
  %5 = alloca i32, align 4
  %6 = icmp eq %"class.sw::VertexShader"* %1, null
  br i1 %6, label %42, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.sw::VertexShader"* %1 to %"class.sw::Shader"*
  %9 = tail call i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"* nonnull %8) #15
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %42, label %11

11:                                               ; preds = %7
  %12 = bitcast i32* %5 to i8*
  %13 = bitcast <4 x i32>* %4 to i8*
  %14 = getelementptr inbounds <4 x i32>, <4 x i32>* %4, i64 0, i64 0
  %15 = bitcast <4 x i32>* %3 to i8*
  %16 = bitcast <4 x i32>* %3 to float*
  br label %17

17:                                               ; preds = %39, %11
  %18 = phi i64 [ 0, %11 ], [ %40, %39 ]
  %19 = call %"struct.sw::Shader::Instruction"* @_ZNK2sw6Shader14getInstructionEm(%"class.sw::Shader"* nonnull %8, i64 %18) #15
  %20 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %39 [
    i32 81, label %22
    i32 48, label %28
    i32 47, label %34
  ]

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %25 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast i32* %25 to <4 x i32>*
  %27 = load <4 x i32>, <4 x i32>* %26, align 4
  store <4 x i32> %27, <4 x i32>* %3, align 16
  call void @_ZN2sw8Renderer24setVertexShaderConstantFEjPKfj(%"class.sw::Renderer"* %0, i32 %24, float* nonnull %16, i32 1) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  br label %39

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %31 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast i32* %31 to <4 x i32>*
  %33 = load <4 x i32>, <4 x i32>* %32, align 4
  store <4 x i32> %33, <4 x i32>* %4, align 16
  call void @_ZN2sw8Renderer24setVertexShaderConstantIEjPKij(%"class.sw::Renderer"* %0, i32 %30, i32* nonnull %14, i32 1) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  br label %39

34:                                               ; preds = %17
  %35 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #14
  %37 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %5, align 4
  call void @_ZN2sw8Renderer24setVertexShaderConstantBEjPKij(%"class.sw::Renderer"* %0, i32 %36, i32* nonnull %5, i32 1) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #14
  br label %39

39:                                               ; preds = %17, %28, %34, %22
  %40 = add nuw i64 %18, 1
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %42, label %17

42:                                               ; preds = %39, %7, %2
  ret void
}

; Function Attrs: optsize
declare i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"*) local_unnamed_addr #5

; Function Attrs: optsize
declare %"struct.sw::Shader::Instruction"* @_ZNK2sw6Shader14getInstructionEm(%"class.sw::Shader"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer24setVertexShaderConstantFEjPKfj(%"class.sw::Renderer"*, i32, float*, i32) local_unnamed_addr #2 align 2 {
  %5 = add i32 %3, %1
  br label %10

6:                                                ; preds = %18
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %6
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  br label %22

10:                                               ; preds = %18, %4
  %11 = phi i64 [ 0, %4 ], [ %19, %18 ]
  %12 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %11
  %13 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %12, align 8
  %14 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 19
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 %5, i32* %14, align 8
  br label %18

18:                                               ; preds = %10, %17
  %19 = add nuw nsw i64 %11, 1
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %6, label %10

21:                                               ; preds = %22, %6
  ret void

22:                                               ; preds = %22, %8
  %23 = phi i32 [ 0, %8 ], [ %27, %22 ]
  %24 = phi float* [ %2, %8 ], [ %26, %22 ]
  %25 = add i32 %23, %1
  tail call void @_ZN2sw15VertexProcessor16setFloatConstantEjPKf(%"class.sw::VertexProcessor"* %9, i32 %25, float* %24) #15
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = add nuw i32 %23, 1
  %28 = icmp eq i32 %27, %3
  br i1 %28, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer24setVertexShaderConstantIEjPKij(%"class.sw::Renderer"*, i32, i32*, i32) local_unnamed_addr #2 align 2 {
  %5 = add i32 %3, %1
  br label %10

6:                                                ; preds = %18
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %6
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  br label %22

10:                                               ; preds = %18, %4
  %11 = phi i64 [ 0, %4 ], [ %19, %18 ]
  %12 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %11
  %13 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %12, align 8
  %14 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 20
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %15, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 %5, i32* %14, align 4
  br label %18

18:                                               ; preds = %10, %17
  %19 = add nuw nsw i64 %11, 1
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %6, label %10

21:                                               ; preds = %22, %6
  ret void

22:                                               ; preds = %22, %8
  %23 = phi i32 [ 0, %8 ], [ %27, %22 ]
  %24 = phi i32* [ %2, %8 ], [ %26, %22 ]
  %25 = add i32 %23, %1
  tail call void @_ZN2sw15VertexProcessor18setIntegerConstantEjPKi(%"class.sw::VertexProcessor"* %9, i32 %25, i32* %24) #15
  %26 = getelementptr inbounds i32, i32* %24, i64 4
  %27 = add nuw i32 %23, 1
  %28 = icmp eq i32 %27, %3
  br i1 %28, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer24setVertexShaderConstantBEjPKij(%"class.sw::Renderer"*, i32, i32* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %5 = add i32 %3, %1
  br label %10

6:                                                ; preds = %18
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %6
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  br label %22

10:                                               ; preds = %18, %4
  %11 = phi i64 [ 0, %4 ], [ %19, %18 ]
  %12 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %11
  %13 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %12, align 8
  %14 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 21
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 %5, i32* %14, align 8
  br label %18

18:                                               ; preds = %10, %17
  %19 = add nuw nsw i64 %11, 1
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %6, label %10

21:                                               ; preds = %22, %6
  ret void

22:                                               ; preds = %22, %8
  %23 = phi i32 [ 0, %8 ], [ %28, %22 ]
  %24 = phi i32* [ %2, %8 ], [ %27, %22 ]
  %25 = add i32 %23, %1
  %26 = load i32, i32* %24, align 4
  tail call void @_ZN2sw15VertexProcessor18setBooleanConstantEji(%"class.sw::VertexProcessor"* %9, i32 %25, i32 %26) #15
  %27 = getelementptr inbounds i32, i32* %24, i64 1
  %28 = add nuw i32 %23, 1
  %29 = icmp eq i32 %28, %3
  br i1 %29, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer13loadConstantsEPKNS_11PixelShaderE(%"class.sw::Renderer"*, %"class.sw::PixelShader"*) local_unnamed_addr #2 align 2 {
  %3 = alloca <4 x i32>, align 16
  %4 = alloca <4 x i32>, align 16
  %5 = alloca i32, align 4
  %6 = icmp eq %"class.sw::PixelShader"* %1, null
  br i1 %6, label %42, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.sw::PixelShader"* %1 to %"class.sw::Shader"*
  %9 = tail call i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"* nonnull %8) #15
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %42, label %11

11:                                               ; preds = %7
  %12 = bitcast i32* %5 to i8*
  %13 = bitcast <4 x i32>* %4 to i8*
  %14 = getelementptr inbounds <4 x i32>, <4 x i32>* %4, i64 0, i64 0
  %15 = bitcast <4 x i32>* %3 to i8*
  %16 = bitcast <4 x i32>* %3 to float*
  br label %17

17:                                               ; preds = %39, %11
  %18 = phi i64 [ 0, %11 ], [ %40, %39 ]
  %19 = call %"struct.sw::Shader::Instruction"* @_ZNK2sw6Shader14getInstructionEm(%"class.sw::Shader"* nonnull %8, i64 %18) #15
  %20 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %39 [
    i32 81, label %22
    i32 48, label %28
    i32 47, label %34
  ]

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %25 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast i32* %25 to <4 x i32>*
  %27 = load <4 x i32>, <4 x i32>* %26, align 4
  store <4 x i32> %27, <4 x i32>* %3, align 16
  call void @_ZN2sw8Renderer23setPixelShaderConstantFEjPKfj(%"class.sw::Renderer"* %0, i32 %24, float* nonnull %16, i32 1) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  br label %39

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %31 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast i32* %31 to <4 x i32>*
  %33 = load <4 x i32>, <4 x i32>* %32, align 4
  store <4 x i32> %33, <4 x i32>* %4, align 16
  call void @_ZN2sw8Renderer23setPixelShaderConstantIEjPKij(%"class.sw::Renderer"* %0, i32 %30, i32* nonnull %14, i32 1) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  br label %39

34:                                               ; preds = %17
  %35 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #14
  %37 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %19, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %5, align 4
  call void @_ZN2sw8Renderer23setPixelShaderConstantBEjPKij(%"class.sw::Renderer"* %0, i32 %36, i32* nonnull %5, i32 1) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #14
  br label %39

39:                                               ; preds = %17, %28, %34, %22
  %40 = add nuw i64 %18, 1
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %42, label %17

42:                                               ; preds = %39, %7, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer23setPixelShaderConstantFEjPKfj(%"class.sw::Renderer"*, i32, float*, i32) local_unnamed_addr #2 align 2 {
  %5 = add i32 %3, %1
  br label %10

6:                                                ; preds = %18
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  br label %22

10:                                               ; preds = %18, %4
  %11 = phi i64 [ 0, %4 ], [ %19, %18 ]
  %12 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %11
  %13 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %12, align 8
  %14 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 22
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %15, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 %5, i32* %14, align 4
  br label %18

18:                                               ; preds = %10, %17
  %19 = add nuw nsw i64 %11, 1
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %6, label %10

21:                                               ; preds = %22, %6
  ret void

22:                                               ; preds = %22, %8
  %23 = phi i32 [ 0, %8 ], [ %27, %22 ]
  %24 = phi float* [ %2, %8 ], [ %26, %22 ]
  %25 = add i32 %23, %1
  tail call void @_ZN2sw14PixelProcessor16setFloatConstantEjPKf(%"class.sw::PixelProcessor"* %9, i32 %25, float* %24) #15
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = add nuw i32 %23, 1
  %28 = icmp eq i32 %27, %3
  br i1 %28, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer23setPixelShaderConstantIEjPKij(%"class.sw::Renderer"*, i32, i32*, i32) local_unnamed_addr #2 align 2 {
  %5 = add i32 %3, %1
  br label %10

6:                                                ; preds = %18
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  br label %22

10:                                               ; preds = %18, %4
  %11 = phi i64 [ 0, %4 ], [ %19, %18 ]
  %12 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %11
  %13 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %12, align 8
  %14 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 23
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 %5, i32* %14, align 8
  br label %18

18:                                               ; preds = %10, %17
  %19 = add nuw nsw i64 %11, 1
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %6, label %10

21:                                               ; preds = %22, %6
  ret void

22:                                               ; preds = %22, %8
  %23 = phi i32 [ 0, %8 ], [ %27, %22 ]
  %24 = phi i32* [ %2, %8 ], [ %26, %22 ]
  %25 = add i32 %23, %1
  tail call void @_ZN2sw14PixelProcessor18setIntegerConstantEjPKi(%"class.sw::PixelProcessor"* %9, i32 %25, i32* %24) #15
  %26 = getelementptr inbounds i32, i32* %24, i64 4
  %27 = add nuw i32 %23, 1
  %28 = icmp eq i32 %27, %3
  br i1 %28, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer23setPixelShaderConstantBEjPKij(%"class.sw::Renderer"*, i32, i32* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %5 = add i32 %3, %1
  br label %10

6:                                                ; preds = %18
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  br label %22

10:                                               ; preds = %18, %4
  %11 = phi i64 [ 0, %4 ], [ %19, %18 ]
  %12 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 24, i64 %11
  %13 = load %"struct.sw::DrawCall"*, %"struct.sw::DrawCall"** %12, align 8
  %14 = getelementptr inbounds %"struct.sw::DrawCall", %"struct.sw::DrawCall"* %13, i64 0, i32 24
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %15, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 %5, i32* %14, align 4
  br label %18

18:                                               ; preds = %10, %17
  %19 = add nuw nsw i64 %11, 1
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %6, label %10

21:                                               ; preds = %22, %6
  ret void

22:                                               ; preds = %22, %8
  %23 = phi i32 [ 0, %8 ], [ %28, %22 ]
  %24 = phi i32* [ %2, %8 ], [ %27, %22 ]
  %25 = add i32 %23, %1
  %26 = load i32, i32* %24, align 4
  tail call void @_ZN2sw14PixelProcessor18setBooleanConstantEji(%"class.sw::PixelProcessor"* %9, i32 %25, i32 %26) #15
  %27 = getelementptr inbounds i32, i32* %24, i64 1
  %28 = add nuw i32 %23, 1
  %29 = icmp eq i32 %28, %3
  br i1 %29, label %21, label %22
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer14setIndexBufferEPNS_8ResourceE(%"class.sw::Renderer"* nocapture readonly, %"class.sw::Resource"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  %5 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %4, i64 0, i32 35
  store %"class.sw::Resource"* %1, %"class.sw::Resource"** %5, align 16
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer18setMultiSampleMaskEj(%"class.sw::Renderer"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  %5 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %4, i64 0, i32 106
  store i32 %1, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw8Renderer27setTransparencyAntialiasingENS_24TransparencyAntialiasingE(%"class.sw::Renderer"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  store i32 %1, i32* @_ZN2sw24transparencyAntialiasingE, align 4
  ret void
}

; Function Attrs: optsize
declare %"class.sw::Resource"* @_ZN2sw7Surface11getResourceEv(%"class.sw::Surface"*) local_unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw15VertexProcessor15isFixedFunctionEv(%"class.sw::VertexProcessor"*) local_unnamed_addr #5

; Function Attrs: optsize
declare dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw15VertexProcessor16getViewTransformEv(%"class.sw::VertexProcessor"*) local_unnamed_addr #5

; Function Attrs: optsize
declare { <2 x float>, <2 x float> } @_ZN2swmlERKNS_6MatrixERKNS_5PlaneE(%"struct.sw::Matrix"* dereferenceable(64), %"struct.sw::Plane"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer18setTextureResourceEjPNS_8ResourceE(%"class.sw::Renderer"* nocapture readonly, i32, %"class.sw::Resource"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %5 = load %"class.sw::Context"*, %"class.sw::Context"** %4, align 16
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %5, i64 0, i32 33, i64 %6
  store %"class.sw::Resource"* %2, %"class.sw::Resource"** %7, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer15setTextureLevelEjjjPNS_7SurfaceENS_11TextureTypeE(%"class.sw::Renderer"* nocapture readonly, i32, i32, i32, %"class.sw::Surface"*, i32) local_unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %8 = load %"class.sw::Context"*, %"class.sw::Context"** %7, align 16
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %8, i64 0, i32 32, i64 %9
  tail call void @_ZN2sw7Sampler15setTextureLevelEiiPNS_7SurfaceENS_11TextureTypeE(%"class.sw::Sampler"* %10, i32 %2, i32 %3, %"class.sw::Surface"* %4, i32 %5) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Sampler15setTextureLevelEiiPNS_7SurfaceENS_11TextureTypeE(%"class.sw::Sampler"*, i32, i32, %"class.sw::Surface"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer16setTextureFilterENS_11SamplerTypeEiNS_10FilterTypeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor16setTextureFilterEjNS_10FilterTypeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor16setTextureFilterEjNS_10FilterTypeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor16setTextureFilterEjNS_10FilterTypeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor16setTextureFilterEjNS_10FilterTypeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer15setMipmapFilterENS_11SamplerTypeEiNS_10MipmapTypeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor15setMipmapFilterEjNS_10MipmapTypeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor15setMipmapFilterEjNS_10MipmapTypeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor15setMipmapFilterEjNS_10MipmapTypeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor15setMipmapFilterEjNS_10MipmapTypeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer15setGatherEnableENS_11SamplerTypeEib(%"class.sw::Renderer"*, i32, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor15setGatherEnableEjb(%"class.sw::PixelProcessor"* %7, i32 %2, i1 zeroext %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor15setGatherEnableEjb(%"class.sw::VertexProcessor"* %9, i32 %2, i1 zeroext %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor15setGatherEnableEjb(%"class.sw::PixelProcessor"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor15setGatherEnableEjb(%"class.sw::VertexProcessor"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer18setAddressingModeUENS_11SamplerTypeEiNS_14AddressingModeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor18setAddressingModeUEjNS_14AddressingModeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor18setAddressingModeUEjNS_14AddressingModeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor18setAddressingModeUEjNS_14AddressingModeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor18setAddressingModeUEjNS_14AddressingModeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer18setAddressingModeVENS_11SamplerTypeEiNS_14AddressingModeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor18setAddressingModeVEjNS_14AddressingModeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor18setAddressingModeVEjNS_14AddressingModeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor18setAddressingModeVEjNS_14AddressingModeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor18setAddressingModeVEjNS_14AddressingModeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer18setAddressingModeWENS_11SamplerTypeEiNS_14AddressingModeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor18setAddressingModeWEjNS_14AddressingModeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor18setAddressingModeWEjNS_14AddressingModeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor18setAddressingModeWEjNS_14AddressingModeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor18setAddressingModeWEjNS_14AddressingModeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11setReadSRGBENS_11SamplerTypeEib(%"class.sw::Renderer"*, i32, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor11setReadSRGBEjb(%"class.sw::PixelProcessor"* %7, i32 %2, i1 zeroext %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor11setReadSRGBEjb(%"class.sw::VertexProcessor"* %9, i32 %2, i1 zeroext %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor11setReadSRGBEjb(%"class.sw::PixelProcessor"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor11setReadSRGBEjb(%"class.sw::VertexProcessor"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer12setMipmapLODENS_11SamplerTypeEif(%"class.sw::Renderer"*, i32, i32, float) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor12setMipmapLODEjf(%"class.sw::PixelProcessor"* %7, i32 %2, float %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor12setMipmapLODEjf(%"class.sw::VertexProcessor"* %9, i32 %2, float %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor12setMipmapLODEjf(%"class.sw::PixelProcessor"*, i32, float) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor12setMipmapLODEjf(%"class.sw::VertexProcessor"*, i32, float) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer14setBorderColorENS_11SamplerTypeEiRKNS_5ColorIfEE(%"class.sw::Renderer"*, i32, i32, %"struct.sw::Color"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor14setBorderColorEjRKNS_5ColorIfEE(%"class.sw::PixelProcessor"* %7, i32 %2, %"struct.sw::Color"* dereferenceable(16) %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor14setBorderColorEjRKNS_5ColorIfEE(%"class.sw::VertexProcessor"* %9, i32 %2, %"struct.sw::Color"* dereferenceable(16) %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor14setBorderColorEjRKNS_5ColorIfEE(%"class.sw::PixelProcessor"*, i32, %"struct.sw::Color"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor14setBorderColorEjRKNS_5ColorIfEE(%"class.sw::VertexProcessor"*, i32, %"struct.sw::Color"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer16setMaxAnisotropyENS_11SamplerTypeEif(%"class.sw::Renderer"*, i32, i32, float) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor16setMaxAnisotropyEjf(%"class.sw::PixelProcessor"* %7, i32 %2, float %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor16setMaxAnisotropyEjf(%"class.sw::VertexProcessor"* %9, i32 %2, float %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor16setMaxAnisotropyEjf(%"class.sw::PixelProcessor"*, i32, float) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor16setMaxAnisotropyEjf(%"class.sw::VertexProcessor"*, i32, float) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer25setHighPrecisionFilteringENS_11SamplerTypeEib(%"class.sw::Renderer"*, i32, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor25setHighPrecisionFilteringEjb(%"class.sw::PixelProcessor"* %7, i32 %2, i1 zeroext %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor25setHighPrecisionFilteringEjb(%"class.sw::VertexProcessor"* %9, i32 %2, i1 zeroext %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor25setHighPrecisionFilteringEjb(%"class.sw::PixelProcessor"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor25setHighPrecisionFilteringEjb(%"class.sw::VertexProcessor"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11setSwizzleRENS_11SamplerTypeEiNS_11SwizzleTypeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor11setSwizzleREjNS_11SwizzleTypeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor11setSwizzleREjNS_11SwizzleTypeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor11setSwizzleREjNS_11SwizzleTypeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor11setSwizzleREjNS_11SwizzleTypeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11setSwizzleGENS_11SamplerTypeEiNS_11SwizzleTypeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor11setSwizzleGEjNS_11SwizzleTypeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor11setSwizzleGEjNS_11SwizzleTypeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor11setSwizzleGEjNS_11SwizzleTypeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor11setSwizzleGEjNS_11SwizzleTypeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11setSwizzleBENS_11SamplerTypeEiNS_11SwizzleTypeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor11setSwizzleBEjNS_11SwizzleTypeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor11setSwizzleBEjNS_11SwizzleTypeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor11setSwizzleBEjNS_11SwizzleTypeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor11setSwizzleBEjNS_11SwizzleTypeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11setSwizzleAENS_11SamplerTypeEiNS_11SwizzleTypeE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor11setSwizzleAEjNS_11SwizzleTypeE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor11setSwizzleAEjNS_11SwizzleTypeE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor11setSwizzleAEjNS_11SwizzleTypeE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor11setSwizzleAEjNS_11SwizzleTypeE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer14setCompareFuncENS_11SamplerTypeEiNS_11CompareFuncE(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor14setCompareFuncEjNS_11CompareFuncE(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor14setCompareFuncEjNS_11CompareFuncE(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor14setCompareFuncEjNS_11CompareFuncE(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor14setCompareFuncEjNS_11CompareFuncE(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer12setBaseLevelENS_11SamplerTypeEii(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor12setBaseLevelEji(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor12setBaseLevelEji(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor12setBaseLevelEji(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor12setBaseLevelEji(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11setMaxLevelENS_11SamplerTypeEii(%"class.sw::Renderer"*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor11setMaxLevelEji(%"class.sw::PixelProcessor"* %7, i32 %2, i32 %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor11setMaxLevelEji(%"class.sw::VertexProcessor"* %9, i32 %2, i32 %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor11setMaxLevelEji(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor11setMaxLevelEji(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer9setMinLodENS_11SamplerTypeEif(%"class.sw::Renderer"*, i32, i32, float) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor9setMinLodEjf(%"class.sw::PixelProcessor"* %7, i32 %2, float %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor9setMinLodEjf(%"class.sw::VertexProcessor"* %9, i32 %2, float %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor9setMinLodEjf(%"class.sw::PixelProcessor"*, i32, float) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor9setMinLodEjf(%"class.sw::VertexProcessor"*, i32, float) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer9setMaxLodENS_11SamplerTypeEif(%"class.sw::Renderer"*, i32, i32, float) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor9setMaxLodEjf(%"class.sw::PixelProcessor"* %7, i32 %2, float %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor9setMaxLodEjf(%"class.sw::VertexProcessor"* %9, i32 %2, float %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor9setMaxLodEjf(%"class.sw::PixelProcessor"*, i32, float) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor9setMaxLodEjf(%"class.sw::VertexProcessor"*, i32, float) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer15setSyncRequiredENS_11SamplerTypeEib(%"class.sw::Renderer"*, i32, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 2
  tail call void @_ZN2sw14PixelProcessor15setSyncRequiredEjb(%"class.sw::PixelProcessor"* %7, i32 %2, i1 zeroext %3) #15
  br label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor15setSyncRequiredEjb(%"class.sw::VertexProcessor"* %9, i32 %2, i1 zeroext %3) #15
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor15setSyncRequiredEjb(%"class.sw::PixelProcessor"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor15setSyncRequiredEjb(%"class.sw::VertexProcessor"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer20setPointSpriteEnableEb(%"class.sw::Renderer"* nocapture readonly, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  tail call void @_ZN2sw7Context20setPointSpriteEnableEb(%"class.sw::Context"* %4, i1 zeroext %1) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Context20setPointSpriteEnableEb(%"class.sw::Context"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer19setPointScaleEnableEb(%"class.sw::Renderer"* nocapture readonly, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  tail call void @_ZN2sw7Context19setPointScaleEnableEb(%"class.sw::Context"* %4, i1 zeroext %1) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Context19setPointScaleEnableEb(%"class.sw::Context"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer12setLineWidthEf(%"class.sw::Renderer"* nocapture readonly, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  %5 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %4, i64 0, i32 102
  store float %1, float* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer12setDepthBiasEf(%"class.sw::Renderer"* nocapture readonly, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  %5 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %4, i64 0, i32 28
  store float %1, float* %5, align 16
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer17setSlopeDepthBiasEf(%"class.sw::Renderer"* nocapture readonly, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  %5 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %4, i64 0, i32 29
  store float %1, float* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer20setRasterizerDiscardEb(%"class.sw::Renderer"* nocapture readonly, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %5 = load %"class.sw::Context"*, %"class.sw::Context"** %4, align 16
  %6 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %5, i64 0, i32 84
  store i8 %3, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer14setPixelShaderEPKNS_11PixelShaderE(%"class.sw::Renderer"*, %"class.sw::PixelShader"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  %5 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %4, i64 0, i32 66
  store %"class.sw::PixelShader"* %1, %"class.sw::PixelShader"** %5, align 8
  tail call void @_ZN2sw8Renderer13loadConstantsEPKNS_11PixelShaderE(%"class.sw::Renderer"* %0, %"class.sw::PixelShader"* %1) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer15setVertexShaderEPKNS_12VertexShaderE(%"class.sw::Renderer"*, %"class.sw::VertexShader"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 4
  %4 = load %"class.sw::Context"*, %"class.sw::Context"** %3, align 16
  %5 = getelementptr inbounds %"class.sw::Context", %"class.sw::Context"* %4, i64 0, i32 67
  store %"class.sw::VertexShader"* %1, %"class.sw::VertexShader"** %5, align 16
  tail call void @_ZN2sw8Renderer13loadConstantsEPKNS_12VertexShaderE(%"class.sw::Renderer"* %0, %"class.sw::VertexShader"* %1) #16
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor16setFloatConstantEjPKf(%"class.sw::PixelProcessor"*, i32, float*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor18setIntegerConstantEjPKi(%"class.sw::PixelProcessor"*, i32, i32*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor18setBooleanConstantEji(%"class.sw::PixelProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor16setFloatConstantEjPKf(%"class.sw::VertexProcessor"*, i32, float*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor18setIntegerConstantEjPKi(%"class.sw::VertexProcessor"*, i32, i32*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor18setBooleanConstantEji(%"class.sw::VertexProcessor"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer14setModelMatrixERKNS_6MatrixEi(%"class.sw::Renderer"*, %"struct.sw::Matrix"* dereferenceable(64), i32) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor14setModelMatrixERKNS_6MatrixEi(%"class.sw::VertexProcessor"* %4, %"struct.sw::Matrix"* dereferenceable(64) %1, i32 %2) #15
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor14setModelMatrixERKNS_6MatrixEi(%"class.sw::VertexProcessor"*, %"struct.sw::Matrix"* dereferenceable(64), i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer13setViewMatrixERKNS_6MatrixE(%"class.sw::Renderer"*, %"struct.sw::Matrix"* dereferenceable(64)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor13setViewMatrixERKNS_6MatrixE(%"class.sw::VertexProcessor"* %3, %"struct.sw::Matrix"* dereferenceable(64) %1) #15
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 14
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor13setViewMatrixERKNS_6MatrixE(%"class.sw::VertexProcessor"*, %"struct.sw::Matrix"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer13setBaseMatrixERKNS_6MatrixE(%"class.sw::Renderer"*, %"struct.sw::Matrix"* dereferenceable(64)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor13setBaseMatrixERKNS_6MatrixE(%"class.sw::VertexProcessor"* %3, %"struct.sw::Matrix"* dereferenceable(64) %1) #15
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 14
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor13setBaseMatrixERKNS_6MatrixE(%"class.sw::VertexProcessor"*, %"struct.sw::Matrix"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer19setProjectionMatrixERKNS_6MatrixE(%"class.sw::Renderer"*, %"struct.sw::Matrix"* dereferenceable(64)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.sw::Renderer"* %0 to %"class.sw::VertexProcessor"*
  tail call void @_ZN2sw15VertexProcessor19setProjectionMatrixERKNS_6MatrixE(%"class.sw::VertexProcessor"* %3, %"struct.sw::Matrix"* dereferenceable(64) %1) #15
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 14
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor19setProjectionMatrixERKNS_6MatrixE(%"class.sw::VertexProcessor"*, %"struct.sw::Matrix"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nofree nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer8addQueryEPNS_5QueryE(%"class.sw::Renderer"*, %"struct.sw::Query"*) local_unnamed_addr #8 align 2 {
  %3 = ptrtoint %"struct.sw::Query"* %1 to i64
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34
  %5 = tail call i8* @_Znwm(i64 24) #13, !noalias !10
  %6 = bitcast i8* %5 to %"struct.std::__1::__list_node_base"**
  %7 = getelementptr inbounds i8, i8* %5, i64 16
  %8 = bitcast i8* %7 to i64*
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = bitcast i8* %10 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %9, %"struct.std::__1::__list_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  store %"struct.std::__1::__list_node_base"* %13, %"struct.std::__1::__list_node_base"** %6, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %13, i64 0, i32 1
  %15 = bitcast %"struct.std::__1::__list_node_base"** %14 to i8**
  store i8* %5, i8** %15, align 8
  %16 = bitcast %"class.std::__1::list"* %4 to i8**
  store i8* %5, i8** %16, align 8
  %17 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34, i32 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11removeQueryEPNS_5QueryE(%"class.sw::Renderer"*, %"struct.sw::Query"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.sw::Query"*, align 8
  store %"struct.sw::Query"* %1, %"struct.sw::Query"** %3, align 8
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 34
  call void @_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE6removeERKS3_(%"class.std::__1::list"* %4, %"struct.sw::Query"** nonnull dereferenceable(8) %3) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE6removeERKS3_(%"class.std::__1::list"*, %"struct.sw::Query"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::list", align 8
  %4 = bitcast %"class.std::__1::list"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %5, align 8
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %6, align 8
  store i64 0, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__list_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %13 = inttoptr i64 %11 to %"struct.std::__1::__list_node_base"*
  %14 = icmp eq %"struct.std::__1::__list_node_base"* %12, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %50, %2
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0
  call void @_ZNSt3__110__list_impIPN2sw5QueryENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__list_imp"* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void

17:                                               ; preds = %2, %50
  %18 = phi %"struct.std::__1::__list_node_base"* [ %52, %50 ], [ %13, %2 ]
  %19 = phi i64 [ %51, %50 ], [ %11, %2 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__list_node"*
  %21 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %20, i64 0, i32 1
  %22 = load %"struct.sw::Query"*, %"struct.sw::Query"** %21, align 8
  %23 = load %"struct.sw::Query"*, %"struct.sw::Query"** %1, align 8
  %24 = icmp eq %"struct.sw::Query"* %22, %23
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  br i1 %24, label %28, label %50

28:                                               ; preds = %17
  %29 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %12, %29
  br i1 %30, label %44, label %31

31:                                               ; preds = %28, %38
  %32 = phi %"struct.std::__1::__list_node_base"* [ %42, %38 ], [ %29, %28 ]
  %33 = phi i64 [ %41, %38 ], [ %27, %28 ]
  %34 = inttoptr i64 %33 to %"struct.std::__1::__list_node"*
  %35 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %34, i64 0, i32 1
  %36 = load %"struct.sw::Query"*, %"struct.sw::Query"** %35, align 8
  %37 = icmp eq %"struct.sw::Query"* %36, %22
  br i1 %37, label %38, label %46

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %32, i64 0, i32 1
  %40 = bitcast %"struct.std::__1::__list_node_base"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = inttoptr i64 %41 to %"struct.std::__1::__list_node_base"*
  %43 = icmp eq %"struct.std::__1::__list_node_base"* %12, %42
  br i1 %43, label %44, label %31

44:                                               ; preds = %38, %28
  %45 = phi i64 [ %27, %28 ], [ %41, %38 ]
  call void @_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE6spliceENS_21__list_const_iteratorIS3_PvEERS6_S9_S9_(%"class.std::__1::list"* nonnull %3, %"struct.std::__1::__list_node_base"* nonnull %8, %"class.std::__1::list"* dereferenceable(24) %0, %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"* %12) #16
  br label %50

46:                                               ; preds = %31
  call void @_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE6spliceENS_21__list_const_iteratorIS3_PvEERS6_S9_S9_(%"class.std::__1::list"* nonnull %3, %"struct.std::__1::__list_node_base"* nonnull %8, %"class.std::__1::list"* dereferenceable(24) %0, %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"* %32) #16
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %32, i64 0, i32 1
  %48 = bitcast %"struct.std::__1::__list_node_base"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %17, %46, %44
  %51 = phi i64 [ %49, %46 ], [ %45, %44 ], [ %27, %17 ]
  %52 = inttoptr i64 %51 to %"struct.std::__1::__list_node_base"*
  %53 = icmp eq %"struct.std::__1::__list_node_base"* %12, %52
  br i1 %53, label %15, label %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer11setViewportERKNS_8ViewportE(%"class.sw::Renderer"* nocapture, %"struct.sw::Viewport"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 7
  %4 = bitcast %"struct.sw::Viewport"* %3 to i8*
  %5 = bitcast %"struct.sw::Viewport"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer10setScissorERKNS_5RectTIiEE(%"class.sw::Renderer"* nocapture, %"struct.sw::RectT"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 8
  %4 = bitcast %"struct.sw::RectT"* %3 to i8*
  %5 = bitcast %"struct.sw::RectT"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 4 %5, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw8Renderer12setClipFlagsEi(%"class.sw::Renderer"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = shl i32 %1, 8
  %4 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 9
  store i32 %3, i32* %4, align 16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Renderer12setClipPlaneEjPKf(%"class.sw::Renderer"* nocapture, i32, float*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.sw::Plane", align 4
  %5 = icmp ult i32 %1, 6
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = bitcast %"struct.sw::Plane"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  call void @_ZN2sw5PlaneC1EPKf(%"struct.sw::Plane"* nonnull %4, float* %2) #15
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 12, i64 %8
  %10 = bitcast %"struct.sw::Plane"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 4 %7, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br label %11

11:                                               ; preds = %3, %6
  %12 = getelementptr inbounds %"class.sw::Renderer", %"class.sw::Renderer"* %0, i64 0, i32 14
  store i8 1, i8* %12, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw5PlaneC1EPKf(%"struct.sw::Plane"*, float*) unnamed_addr #5

; Function Attrs: optsize
declare zeroext i1 @_ZN2sw11SwiftConfig19hasNewConfigurationEb(%"class.sw::SwiftConfig"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw11SwiftConfig16getConfigurationERNS0_13ConfigurationE(%"class.sw::SwiftConfig"*, %"struct.sw::SwiftConfig::Configuration"* dereferenceable(128)) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw15VertexProcessor19setRoutineCacheSizeEi(%"class.sw::VertexProcessor"*, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor19setRoutineCacheSizeEi(%"class.sw::PixelProcessor"*, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14SetupProcessor19setRoutineCacheSizeEi(%"class.sw::SetupProcessor"*, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw7Sampler16setFilterQualityENS_10FilterTypeE(i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw7Sampler16setMipmapQualityENS_10MipmapTypeE(i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw14PixelProcessor24setPerspectiveCorrectionEb(%"class.sw::PixelProcessor"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw5CPUID15setEnableSSE4_1Eb(i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw5CPUID14setEnableSSSE3Eb(i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw5CPUID13setEnableSSE3Eb(i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw5CPUID13setEnableSSE2Eb(i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw5CPUID12setEnableSSEEb(i1 zeroext) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2rr7Nucleus19adjustDefaultConfigERKNS_6Config4EditE(%"class.rr::Config::Edit"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__list_impIPN2sw5QueryENS_9allocatorIS3_EEE5clearEv(%"class.std::__1::__list_imp"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 1
  %12 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 0
  %15 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  store i64 %13, i64* %17, align 8
  %18 = bitcast %"struct.std::__1::__list_node_base"* %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64**
  %21 = load i64*, i64** %20, align 8
  store i64 %19, i64* %21, align 8
  store i64 0, i64* %2, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %22, label %29, label %23

23:                                               ; preds = %5, %23
  %24 = phi %"struct.std::__1::__list_node_base"* [ %26, %23 ], [ %7, %5 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %25, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  %28 = icmp eq %"struct.std::__1::__list_node_base"* %26, %8
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %5, %1
  ret void
}

; Function Attrs: nounwind optsize
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZN2sw7Sampler5StateC1Ev(%"struct.sw::Sampler::State"*) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2sw14PixelProcessor6StatesC2Ev(%"struct.sw::PixelProcessor::States"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"struct.sw::PixelProcessor::States"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 312, i1 false) #14
  %3 = getelementptr inbounds %"struct.sw::PixelProcessor::States", %"struct.sw::PixelProcessor::States"* %0, i64 0, i32 8, i64 0
  %4 = getelementptr inbounds %"struct.sw::PixelProcessor::States", %"struct.sw::PixelProcessor::States"* %0, i64 0, i32 8, i64 16
  br label %5

5:                                                ; preds = %5, %1
  %6 = phi %"struct.sw::Sampler::State"* [ %3, %1 ], [ %7, %5 ]
  tail call void @_ZN2sw7Sampler5StateC1Ev(%"struct.sw::Sampler::State"* %6) #15
  %7 = getelementptr inbounds %"struct.sw::Sampler::State", %"struct.sw::Sampler::State"* %6, i64 1
  %8 = icmp eq %"struct.sw::Sampler::State"* %7, %4
  br i1 %8, label %9, label %5

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.sw::PixelProcessor::States", %"struct.sw::PixelProcessor::States"* %0, i64 0, i32 9, i64 0
  %11 = getelementptr inbounds %"struct.sw::PixelProcessor::States", %"struct.sw::PixelProcessor::States"* %0, i64 0, i32 9, i64 8
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi %"struct.sw::TextureStage::State"* [ %10, %9 ], [ %14, %12 ]
  tail call void @_ZN2sw12TextureStage5StateC1Ev(%"struct.sw::TextureStage::State"* %13) #15
  %14 = getelementptr inbounds %"struct.sw::TextureStage::State", %"struct.sw::TextureStage::State"* %13, i64 1
  %15 = icmp eq %"struct.sw::TextureStage::State"* %14, %11
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw12TextureStage5StateC1Ev(%"struct.sw::TextureStage::State"*) unnamed_addr #5

; Function Attrs: nounwind optsize
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind optsize
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: optsize
declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind optsize
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

; Function Attrs: nounwind optsize
declare i32 @pthread_cond_signal(%union.pthread_cond_t*) local_unnamed_addr #7

; Function Attrs: nofree nounwind optsize
declare float @sqrtf(float) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: optsize
declare i32 @usleep(i32) local_unnamed_addr #5

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE6spliceENS_21__list_const_iteratorIS3_PvEERS6_S9_S9_(%"class.std::__1::list"*, %"struct.std::__1::__list_node_base"*, %"class.std::__1::list"* dereferenceable(24), %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"*) local_unnamed_addr #2 comdat align 2 {
  %6 = icmp eq %"struct.std::__1::__list_node_base"* %3, %4
  br i1 %6, label %47, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %4, i64 0, i32 0
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = icmp eq %"class.std::__1::list"* %0, %2
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"struct.std::__1::__list_node_base"* %9, %3
  br i1 %12, label %22, label %13

13:                                               ; preds = %11, %13
  %14 = phi i64 [ %16, %13 ], [ 0, %11 ]
  %15 = phi %"struct.std::__1::__list_node_base"* [ %18, %13 ], [ %3, %11 ]
  %16 = add nuw nsw i64 %14, 1
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %15, i64 0, i32 1
  %18 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %19 = icmp eq %"struct.std::__1::__list_node_base"* %18, %9
  br i1 %19, label %20, label %13

20:                                               ; preds = %13
  %21 = add nuw i64 %14, 2
  br label %22

22:                                               ; preds = %20, %11
  %23 = phi i64 [ 1, %11 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %23
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %23
  store i64 %29, i64* %27, align 8
  br label %30

30:                                               ; preds = %7, %22
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %3, i64 0, i32 0
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 1
  %37 = bitcast %"struct.std::__1::__list_node_base"** %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = bitcast %"struct.std::__1::__list_node_base"* %3 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64**
  %41 = load i64*, i64** %40, align 8
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 0
  %43 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %43, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %3, %"struct.std::__1::__list_node_base"** %44, align 8
  %45 = bitcast %"struct.std::__1::__list_node_base"* %1 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %38, align 8
  store %"struct.std::__1::__list_node_base"* %9, %"struct.std::__1::__list_node_base"** %42, align 8
  store %"struct.std::__1::__list_node_base"* %1, %"struct.std::__1::__list_node_base"** %31, align 8
  br label %47

47:                                               ; preds = %5, %30
  ret void
}

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind optsize }
attributes #14 = { nounwind }
attributes #15 = { nounwind optsize }
attributes #16 = { optsize }
attributes #17 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = !{i32 0, i32 33}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!9 = distinct !{!9, !4}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14listIPN2sw5QueryENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
