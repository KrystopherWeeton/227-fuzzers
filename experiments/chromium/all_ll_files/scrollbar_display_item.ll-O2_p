; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/scrollbar_display_item.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/scrollbar_display_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ScrollbarDisplayItem" = type { %"class.blink::DisplayItem.base", %"class.std::__1::unique_ptr" }
%"class.blink::DisplayItem.base" = type <{ %"class.blink::DisplayItemClient"*, %"class.blink::IntRect", i32, i16 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ScrollbarDisplayItem::Data"* }
%"struct.blink::ScrollbarDisplayItem::Data" = type { %class.scoped_refptr, %"class.blink::TransformPaintPropertyNode"*, %"struct.cc::ElementId", %class.sk_sp }
%class.scoped_refptr = type { %"class.cc::Scrollbar"* }
%"struct.cc::ElementId" = type { i64 }
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.32", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i8* }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.cc::Scrollbar" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.13" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr.1, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.0" }
%"class.base::RefCounted.0" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.6, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.7", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.6 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.39", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.39" = type { %"class.WTF::RefCounted.40", i8, i8, %class.scoped_refptr.6, i32, i32 }
%"class.WTF::RefCounted.40" = type { %"class.base::RefCounted.41" }
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.42" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.45, %"class.std::__1::unique_ptr.46" }
%class.scoped_refptr.45 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.49", %struct.SkRect }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.54, [384 x i64], %class.sk_sp.55, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.56", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.62" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.54 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.55 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.75 = type { %"class.cc::PaintOpBuffer"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::ScrollbarLayerBase" = type { %"class.cc::Layer", i32, i8, %"struct.cc::ElementId" }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.77", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.93", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.134" }>
%"class.base::RefCounted.77" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.78", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %class.scoped_refptr.80*, %class.scoped_refptr.80*, %"class.std::__1::__compressed_pair.81" }
%class.scoped_refptr.80 = type opaque
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.scoped_refptr.80* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.86" }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.88" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.117", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.123" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.96" }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.112" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.98, [20 x float], i32, [4 x i8], %"class.std::__1::vector.105", i32, [4 x i8] }>
%class.sk_sp.98 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.99, i32, %"class.absl::optional.100", i8, i32 }
%class.sk_sp.99 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %struct.SkRect }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, %union.anon.121 }
%union.anon.121 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::unique_ptr.125" = type opaque
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::unique_ptr.125"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.143", %"class.std::__1::vector.143", %"class.std::__1::vector.150" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.139 }
%union.anon.139 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { i8**, i8**, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { i8** }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.152" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.235", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.299", i8, i8, i8, i32 }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.160, %class.scoped_refptr.160, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.212", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.160 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.161", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.163" }
%"class.WTF::RefCounted.161" = type { %"class.base::RefCounted.162" }
%"class.base::RefCounted.162" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.163" = type { %"class.WTF::VectorBuffer.164" }
%"class.WTF::VectorBuffer.164" = type { %"class.WTF::VectorBufferBase.165" }
%"class.WTF::VectorBufferBase.165" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.184", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1, %class.scoped_refptr.166, %class.scoped_refptr.167 }
%class.scoped_refptr.166 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.337" }
%"class.blink::PaintPropertyNode.337" = type { %"class.WTF::RefCounted.338", i8, i8, %class.scoped_refptr.166, i32, i32 }
%"class.WTF::RefCounted.338" = type { %"class.base::RefCounted.339" }
%"class.base::RefCounted.339" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.167 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.334" }
%"class.blink::PaintPropertyNode.334" = type { %"class.WTF::RefCounted.335", i8, i8, %class.scoped_refptr.167, i32, i32 }
%"class.WTF::RefCounted.335" = type { %"class.base::RefCounted.336" }
%"class.base::RefCounted.336" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.171", %"class.WTF::Vector.176", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.171" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.173" }
%"class.WTF::VectorBufferBase.173" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.176" = type { %"class.WTF::VectorBuffer.177" }
%"class.WTF::VectorBuffer.177" = type { %"class.WTF::VectorBufferBase.178" }
%"class.WTF::VectorBufferBase.178" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.187", %"class.absl::optional.187" }
%"class.absl::optional.187" = type { %"class.absl::optional_internal::optional_data.188" }
%"class.absl::optional_internal::optional_data.188" = type { %"class.absl::optional_internal::optional_data_base.189" }
%"class.absl::optional_internal::optional_data_base.189" = type { %"class.absl::optional_internal::optional_data_dtor_base.190" }
%"class.absl::optional_internal::optional_data_dtor_base.190" = type { i8, [3 x i8], %union.anon.191 }
%union.anon.191 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.163"*, %"class.absl::optional.197", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.197" = type { %"class.absl::optional_internal::optional_data.198" }
%"class.absl::optional_internal::optional_data.198" = type { %"class.absl::optional_internal::optional_data_base.199" }
%"class.absl::optional_internal::optional_data_base.199" = type { %"class.absl::optional_internal::optional_data_dtor_base.200" }
%"class.absl::optional_internal::optional_data_dtor_base.200" = type { i8, %union.anon.201 }
%union.anon.201 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.202", %"class.WTF::Vector.207" }
%"class.WTF::Vector.202" = type { %"class.WTF::VectorBuffer.203" }
%"class.WTF::VectorBuffer.203" = type { %"class.WTF::VectorBufferBase.204", [128 x i8] }
%"class.WTF::VectorBufferBase.204" = type { i32*, i32, i32 }
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209", [128 x i8] }
%"class.WTF::VectorBufferBase.209" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.212" = type { %"class.WTF::VectorBuffer.213" }
%"class.WTF::VectorBuffer.213" = type { %"class.WTF::VectorBufferBase.214" }
%"class.WTF::VectorBufferBase.214" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.220" }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i32 }
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.225", %"class.WTF::Vector.230" }
%"class.WTF::HashMap.225" = type { %"class.WTF::HashTable.226" }
%"class.WTF::HashTable.226" = type <{ %"struct.WTF::KeyValuePair.229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.229" = type opaque
%"class.WTF::Vector.230" = type { %"class.WTF::VectorBuffer.231" }
%"class.WTF::VectorBuffer.231" = type { %"class.WTF::VectorBufferBase.232" }
%"class.WTF::VectorBufferBase.232" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.235" = type { %"class.WTF::VectorBuffer.236" }
%"class.WTF::VectorBuffer.236" = type { %"class.WTF::VectorBufferBase.237" }
%"class.WTF::VectorBufferBase.237" = type { %"class.std::__1::unique_ptr.238"*, i32, i32 }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.241, %class.sk_sp.242, %class.sk_sp.290, %class.sk_sp.291, %class.sk_sp.292, %class.sk_sp.98, i32, float, float, i32, %union.anon.293, [4 x i8] }>
%class.sk_sp.241 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.242 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.243", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.75, i32, %"class.absl::optional.266", %"class.std::__1::vector.271", %"class.std::__1::vector.278", %class.sk_sp.285, %class.sk_sp.248, i32, [4 x i8] }>
%"class.absl::optional.243" = type { %"class.absl::optional_internal::optional_data.244" }
%"class.absl::optional_internal::optional_data.244" = type { %"class.absl::optional_internal::optional_data_base.245" }
%"class.absl::optional_internal::optional_data_base.245" = type { %"class.absl::optional_internal::optional_data_dtor_base.246" }
%"class.absl::optional_internal::optional_data_dtor_base.246" = type { i8, %union.anon.247 }
%union.anon.247 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.248, %class.sk_sp.75, %"class.gfx::Rect", i32, %class.sk_sp.255, %class.sk_sp.263, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.248, %class.scoped_refptr.264 }
%class.sk_sp.255 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.256" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.249, i32, i32 }
%class.sk_sp.249 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.250" }
%"struct.std::__1::atomic.250" = type { %"struct.std::__1::__atomic_base.251" }
%"struct.std::__1::__atomic_base.251" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__cxx_atomic_impl.253" }
%"struct.std::__1::__cxx_atomic_impl.253" = type { %"struct.std::__1::__cxx_atomic_base_impl.254" }
%"struct.std::__1::__cxx_atomic_base_impl.254" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.258" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.263 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.264 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.265", [4 x i8] }>
%"class.base::RefCountedThreadSafe.265" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.266" = type { %"class.absl::optional_internal::optional_data.267" }
%"class.absl::optional_internal::optional_data.267" = type { %"class.absl::optional_internal::optional_data_base.268" }
%"class.absl::optional_internal::optional_data_base.268" = type { %"class.absl::optional_internal::optional_data_dtor_base.269" }
%"class.absl::optional_internal::optional_data_dtor_base.269" = type { i8, %union.anon.270 }
%union.anon.270 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { i32*, i32*, %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { i32* }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { float*, float*, %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { float* }
%class.sk_sp.285 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.286", [7 x i8] }>
%"struct.std::__1::atomic.286" = type { %"struct.std::__1::__atomic_base.287" }
%"struct.std::__1::__atomic_base.287" = type { %"struct.std::__1::__cxx_atomic_impl.288" }
%"struct.std::__1::__cxx_atomic_impl.288" = type { %"struct.std::__1::__cxx_atomic_base_impl.289" }
%"struct.std::__1::__cxx_atomic_base_impl.289" = type { i8 }
%class.sk_sp.248 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.290 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.291 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.292 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.293 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.241 }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.320", %"class.std::__1::unique_ptr.325" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %class.sk_sp.291 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.320" = type { %"class.absl::optional_internal::optional_data.321" }
%"class.absl::optional_internal::optional_data.321" = type { %"class.absl::optional_internal::optional_data_base.322" }
%"class.absl::optional_internal::optional_data_base.322" = type { %"class.absl::optional_internal::optional_data_dtor_base.323" }
%"class.absl::optional_internal::optional_data_dtor_base.323" = type { i8, %union.anon.324 }
%union.anon.324 = type { i32 }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::DisplayItem" = type <{ %"class.blink::DisplayItemClient"*, %"class.blink::IntRect", i32, i16, [2 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink15DisplayItemList16AllocateItemSlotEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList8ItemSlotEEEmm = comdat any

$_ZN3WTF6VectorIN5blink15DisplayItemList8ItemSlotELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList8ItemSlotEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DisplayItemList::ItemSlot]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink20ScrollbarDisplayItemC1ERKNS_17DisplayItemClientENS_11DisplayItem4TypeE13scoped_refptrIN2cc9ScrollbarEERKNS_7IntRectEPKNS_26TransformPaintPropertyNodeENS7_9ElementIdE = hidden unnamed_addr alias void (%"class.blink::ScrollbarDisplayItem"*, %"class.blink::DisplayItemClient"*, i32, %"class.cc::Scrollbar"*, %"class.blink::IntRect"*, %"class.blink::TransformPaintPropertyNode"*, i64), void (%"class.blink::ScrollbarDisplayItem"*, %"class.blink::DisplayItemClient"*, i32, %"class.cc::Scrollbar"*, %"class.blink::IntRect"*, %"class.blink::TransformPaintPropertyNode"*, i64)* @_ZN5blink20ScrollbarDisplayItemC2ERKNS_17DisplayItemClientENS_11DisplayItem4TypeE13scoped_refptrIN2cc9ScrollbarEERKNS_7IntRectEPKNS_26TransformPaintPropertyNodeENS7_9ElementIdE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ScrollbarDisplayItemC2ERKNS_17DisplayItemClientENS_11DisplayItem4TypeE13scoped_refptrIN2cc9ScrollbarEERKNS_7IntRectEPKNS_26TransformPaintPropertyNodeENS7_9ElementIdE(%"class.blink::ScrollbarDisplayItem"* nocapture, %"class.blink::DisplayItemClient"* dereferenceable(16), i32, %"class.cc::Scrollbar"*, %"class.blink::IntRect"* nocapture readonly dereferenceable(16), %"class.blink::TransformPaintPropertyNode"*, i64) unnamed_addr #0 align 2 {
  %8 = ptrtoint %"class.cc::Scrollbar"* %3 to i64
  %9 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 0, i32 0
  store %"class.blink::DisplayItemClient"* %1, %"class.blink::DisplayItemClient"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.blink::IntRect"* %10 to i8*
  %12 = bitcast %"class.blink::IntRect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 16, i1 false) #7
  %13 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 0, i32 3
  %15 = trunc i32 %2 to i16
  %16 = load i16, i16* %14, align 4
  %17 = and i16 %15, 255
  %18 = and i16 %16, -256
  %19 = or i16 %18, %17
  store i16 %19, i16* %14, align 4
  %20 = bitcast %"class.blink::DisplayItemClient"* %1 to i8 (%"class.blink::DisplayItemClient"*)***
  %21 = load i8 (%"class.blink::DisplayItemClient"*)**, i8 (%"class.blink::DisplayItemClient"*)*** %20, align 8
  %22 = getelementptr inbounds i8 (%"class.blink::DisplayItemClient"*)*, i8 (%"class.blink::DisplayItemClient"*)** %21, i64 4
  %23 = load i8 (%"class.blink::DisplayItemClient"*)*, i8 (%"class.blink::DisplayItemClient"*)** %22, align 8
  %24 = tail call zeroext i8 %23(%"class.blink::DisplayItemClient"* %1) #7
  %25 = load i16, i16* %14, align 4
  %26 = and i8 %24, 3
  %27 = zext i8 %26 to i16
  %28 = shl nuw nsw i16 %27, 8
  %29 = and i16 %25, -1793
  %30 = or i16 %29, %28
  %31 = or i16 %30, 1024
  store i16 %31, i16* %14, align 4
  %32 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %1, i64 0, i32 1
  %33 = load i8, i8* %32, align 8
  %34 = icmp ne i8 %33, 20
  %35 = zext i1 %34 to i16
  %36 = shl nuw nsw i16 %35, 11
  %37 = and i16 %31, -30721
  %38 = or i16 %37, %36
  %39 = or i16 %38, 4096
  store i16 %39, i16* %14, align 4
  %40 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 1
  %41 = tail call i8* @_Znwm(i64 32) #8
  %42 = bitcast i8* %41 to i64*
  store i64 %8, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to %"class.blink::TransformPaintPropertyNode"**
  store %"class.blink::TransformPaintPropertyNode"* %5, %"class.blink::TransformPaintPropertyNode"** %44, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 16
  %46 = bitcast i8* %45 to i64*
  store i64 %6, i64* %46, align 16
  %47 = getelementptr inbounds i8, i8* %41, i64 24
  %48 = bitcast i8* %47 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %48, align 8
  %49 = ptrtoint i8* %41 to i64
  %50 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  store i64 %49, i64* %50, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20ScrollbarDisplayItem5PaintEv(%class.sk_sp* noalias nocapture sret, %"class.blink::ScrollbarDisplayItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintRecorder", align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %class.sk_sp.75, align 8
  %9 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.cc::Scrollbar"*, %"class.cc::Scrollbar"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %10, i64 0, i32 3, i32 0
  %14 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %15 = icmp eq %"class.cc::PaintOpBuffer"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  store %"class.cc::PaintOpBuffer"* %14, %"class.cc::PaintOpBuffer"** %17, align 8
  br label %149

20:                                               ; preds = %2
  %21 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %22 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %23 = bitcast %"class.cc::PaintRecorder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.cc::PaintRecorder", %"class.cc::PaintRecorder"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = bitcast %"class.cc::PaintRecorder"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"* nonnull %3) #7
  %26 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = sitofp i32 %28 to float
  %30 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sitofp i32 %31 to float
  %33 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, %28
  %36 = sitofp i32 %35 to float
  %37 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %1, i64 0, i32 0, i32 1, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, %31
  %40 = sitofp i32 %39 to float
  %41 = insertelement <2 x float> undef, float %29, i32 0
  %42 = insertelement <2 x float> %41, float %32, i32 1
  %43 = insertelement <2 x float> undef, float %36, i32 0
  %44 = insertelement <2 x float> %43, float %40, i32 1
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %42, <2 x float>* %45, align 8
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %44, <2 x float>* %46, align 8
  %47 = call %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"* nonnull %3, %struct.SkRect* nonnull dereferenceable(16) %22) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  %48 = load %"class.cc::RecordPaintCanvas"*, %"class.cc::RecordPaintCanvas"** %24, align 8
  %49 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %48, i64 0, i32 0
  %50 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #7
  %51 = load i32, i32* %27, align 4
  %52 = load i32, i32* %30, align 4
  %53 = load i32, i32* %33, align 4
  %54 = load i32, i32* %37, align 4
  %55 = icmp sgt i32 %51, 0
  %56 = icmp sgt i32 %53, 0
  %57 = and i1 %55, %56
  %58 = sub nuw nsw i32 2147483647, %51
  %59 = icmp ult i32 %58, %53
  %60 = and i1 %59, %57
  %61 = select i1 %60, i32 %58, i32 %53
  %62 = icmp sgt i32 %52, 0
  %63 = icmp sgt i32 %54, 0
  %64 = and i1 %62, %63
  %65 = sub nuw nsw i32 2147483647, %52
  %66 = icmp ult i32 %65, %54
  %67 = and i1 %66, %64
  %68 = select i1 %67, i32 %65, i32 %54
  %69 = icmp sgt i32 %61, 0
  %70 = select i1 %69, i32 %61, i32 0
  %71 = icmp sgt i32 %68, 0
  %72 = select i1 %71, i32 %68, i32 0
  %73 = zext i32 %52 to i64
  %74 = shl nuw i64 %73, 32
  %75 = zext i32 %51 to i64
  %76 = or i64 %74, %75
  %77 = zext i32 %72 to i64
  %78 = shl nuw nsw i64 %77, 32
  %79 = zext i32 %70 to i64
  %80 = or i64 %78, %79
  %81 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %76, i64* %81, align 8
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %80, i64* %82, align 8
  %83 = bitcast %"class.cc::Scrollbar"* %12 to void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)***
  %84 = load void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)**, void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)*, void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)** %84, i64 15
  %86 = load void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)*, void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)** %85, align 8
  call void %86(%"class.cc::Scrollbar"* %12, %"class.cc::PaintCanvas"* %49, i32 1, %"class.gfx::Rect"* nonnull dereferenceable(16) %21) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #7
  %87 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #7
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %89 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false)
  %90 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %9, align 8
  %91 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.cc::Scrollbar"*, %"class.cc::Scrollbar"** %91, align 8
  %93 = bitcast %"class.cc::Scrollbar"* %92 to { i64, i64 } (%"class.cc::Scrollbar"*)***
  %94 = load { i64, i64 } (%"class.cc::Scrollbar"*)**, { i64, i64 } (%"class.cc::Scrollbar"*)*** %93, align 8
  %95 = getelementptr inbounds { i64, i64 } (%"class.cc::Scrollbar"*)*, { i64, i64 } (%"class.cc::Scrollbar"*)** %94, i64 8
  %96 = load { i64, i64 } (%"class.cc::Scrollbar"*)*, { i64, i64 } (%"class.cc::Scrollbar"*)** %95, align 8
  %97 = call { i64, i64 } %96(%"class.cc::Scrollbar"* %92) #7
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %99 = extractvalue { i64, i64 } %97, 0
  store i64 %99, i64* %98, align 8
  %100 = extractvalue { i64, i64 } %97, 1
  store i64 %100, i64* %88, align 8
  %101 = load i32, i32* %27, align 4
  %102 = load i32, i32* %30, align 4
  call void @_ZN3gfx4Rect6OffsetEii(%"class.gfx::Rect"* nonnull %7, i32 %101, i32 %102) #7
  %103 = load void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)**, void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)*** %83, align 8
  %104 = getelementptr inbounds void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)*, void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)** %103, i64 15
  %105 = load void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)*, void (%"class.cc::Scrollbar"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)** %104, align 8
  call void %105(%"class.cc::Scrollbar"* %12, %"class.cc::PaintCanvas"* %49, i32 0, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #7
  %106 = bitcast %class.sk_sp.75* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #7
  call void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp.75* nonnull sret %8, %"class.cc::PaintRecorder"* nonnull %3) #7
  %107 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %9, align 8
  %108 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %107, i64 0, i32 3
  %109 = getelementptr inbounds %class.sk_sp.75, %class.sk_sp.75* %8, i64 0, i32 0
  %110 = bitcast %class.sk_sp.75* %8 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %109, align 8
  %112 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %108, i64 0, i32 0
  %113 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %112, align 8
  %114 = bitcast %class.sk_sp* %108 to i64*
  store i64 %111, i64* %114, align 8
  %115 = icmp eq %"class.cc::PaintOpBuffer"* %113, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %20
  %117 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %113, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  %121 = bitcast %"class.cc::PaintOpBuffer"* %113 to %class.SkRefCntBase*
  %122 = bitcast %"class.cc::PaintOpBuffer"* %113 to void (%class.SkRefCntBase*)***
  %123 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %122, align 8
  %124 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, i64 2
  %125 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, align 8
  call void %125(%class.SkRefCntBase* nonnull %121) #7
  br label %126

126:                                              ; preds = %20, %116, %120
  %127 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %109, align 8
  %128 = icmp eq %"class.cc::PaintOpBuffer"* %127, null
  br i1 %128, label %139, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %127, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %139

133:                                              ; preds = %129
  %134 = bitcast %"class.cc::PaintOpBuffer"* %127 to %class.SkRefCntBase*
  %135 = bitcast %"class.cc::PaintOpBuffer"* %127 to void (%class.SkRefCntBase*)***
  %136 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %135, align 8
  %137 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, i64 2
  %138 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, align 8
  call void %138(%class.SkRefCntBase* nonnull %134) #7
  br label %139

139:                                              ; preds = %126, %129, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #7
  %140 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %9, align 8
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %142 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %140, i64 0, i32 3, i32 0
  %143 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %142, align 8
  %144 = icmp eq %"class.cc::PaintOpBuffer"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 1 monotonic
  br label %148

148:                                              ; preds = %139, %145
  store %"class.cc::PaintOpBuffer"* %143, %"class.cc::PaintOpBuffer"** %141, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #7
  call void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #7
  br label %149

149:                                              ; preds = %148, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #3

declare %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3gfx4Rect6OffsetEii(%"class.gfx::Rect"*, i32, i32) local_unnamed_addr #3

declare void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp.75* sret, %"class.cc::PaintRecorder"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::ScrollbarLayerBase"* @_ZNK5blink20ScrollbarDisplayItem18CreateOrReuseLayerEPN2cc18ScrollbarLayerBaseE(%"class.blink::ScrollbarDisplayItem"* nocapture readonly, %"class.cc::ScrollbarLayerBase"*) local_unnamed_addr #5 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Size"*
  %6 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %7, i64 0, i32 3, i32 0
  %9 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %8, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %8, align 8
  %10 = icmp eq %"class.cc::PaintOpBuffer"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::PaintOpBuffer"* %9 to %class.SkRefCntBase*
  %17 = bitcast %"class.cc::PaintOpBuffer"* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #7
  br label %21

21:                                               ; preds = %2, %11, %15
  %22 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %6, align 8
  %23 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.cc::Scrollbar"*, %"class.cc::Scrollbar"** %23, align 8
  %25 = icmp eq %"class.cc::Scrollbar"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.cc::Scrollbar", %"class.cc::Scrollbar"* %24, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #7
  br label %28

28:                                               ; preds = %21, %26
  %29 = tail call %"class.cc::ScrollbarLayerBase"* @_ZN2cc18ScrollbarLayerBase13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"* %24, %"class.cc::ScrollbarLayerBase"* %1) #7
  %30 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %29, i64 0, i32 0
  tail call void @_ZN2cc5Layer13SetIsDrawableEb(%"class.cc::Layer"* %30, i1 zeroext true) #7
  %31 = bitcast %"class.cc::Scrollbar"* %24 to i1 (%"class.cc::Scrollbar"*)***
  %32 = load i1 (%"class.cc::Scrollbar"*)**, i1 (%"class.cc::Scrollbar"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %32, i64 3
  %34 = load i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.cc::Scrollbar"* %24) #7
  br i1 %35, label %37, label %36

36:                                               ; preds = %28
  tail call void @_ZN2cc5Layer14SetHitTestableEb(%"class.cc::Layer"* %30, i1 zeroext true) #7
  br label %37

37:                                               ; preds = %36, %28
  %38 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %6, align 8
  %39 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %38, i64 0, i32 2, i32 0
  %40 = load i64, i64* %39, align 8
  tail call void @_ZN2cc5Layer12SetElementIdENS_9ElementIdE(%"class.cc::Layer"* %30, i64 %40) #7
  %41 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %6, align 8
  %42 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %41, i64 0, i32 1
  %43 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %42, align 8
  %44 = icmp eq %"class.blink::TransformPaintPropertyNode"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %43, i64 0, i32 1, i32 1, i32 0
  %47 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %47, i64 0, i32 1, i32 7, i32 0
  br label %49

49:                                               ; preds = %37, %45
  %50 = phi i64* [ %48, %45 ], [ @_ZN2cc9ElementId17kInvalidElementIdE, %37 ]
  %51 = load i64, i64* %50, align 8
  tail call void @_ZN2cc18ScrollbarLayerBase18SetScrollElementIdENS_9ElementIdE(%"class.cc::ScrollbarLayerBase"* %29, i64 %51) #7
  %52 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.blink::IntRect"* %52 to i64*
  %54 = load i64, i64* %53, align 4
  %55 = trunc i64 %54 to i32
  %56 = lshr i64 %54, 32
  %57 = trunc i64 %56 to i32
  %58 = sitofp i32 %55 to float
  %59 = sitofp i32 %57 to float
  %60 = insertelement <2 x float> undef, float %58, i32 0
  %61 = insertelement <2 x float> %60, float %59, i32 1
  tail call void @_ZN2cc5Layer26SetOffsetToTransformParentEN3gfx9Vector2dFE(%"class.cc::Layer"* %30, <2 x float> %61) #7
  %62 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #7
  %63 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 0, i32 1, i32 1
  %64 = bitcast %"class.blink::IntSize"* %63 to i64*
  %65 = load i64, i64* %64, align 4
  %66 = trunc i64 %65 to i32
  %67 = lshr i64 %65, 32
  %68 = trunc i64 %67 to i32
  %69 = icmp sgt i32 %66, 0
  %70 = icmp sgt i32 %68, 0
  %71 = and i64 %65, -4294967296
  %72 = select i1 %70, i64 %71, i64 0
  %73 = and i64 %65, 4294967295
  %74 = select i1 %69, i64 %73, i64 0
  %75 = or i64 %72, %74
  store i64 %75, i64* %4, align 8
  call void @_ZN2cc5Layer9SetBoundsERKN3gfx4SizeE(%"class.cc::Layer"* %30, %"class.gfx::Size"* nonnull dereferenceable(8) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #7
  %76 = bitcast %"class.cc::Scrollbar"* %24 to i1 (%"class.cc::Scrollbar"*, i32)***
  %77 = load i1 (%"class.cc::Scrollbar"*, i32)**, i1 (%"class.cc::Scrollbar"*, i32)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.cc::Scrollbar"*, i32)*, i1 (%"class.cc::Scrollbar"*, i32)** %77, i64 14
  %79 = load i1 (%"class.cc::Scrollbar"*, i32)*, i1 (%"class.cc::Scrollbar"*, i32)** %78, align 8
  %80 = call zeroext i1 %79(%"class.cc::Scrollbar"* %24, i32 0) #7
  br i1 %80, label %86, label %81

81:                                               ; preds = %49
  %82 = load i1 (%"class.cc::Scrollbar"*, i32)**, i1 (%"class.cc::Scrollbar"*, i32)*** %76, align 8
  %83 = getelementptr inbounds i1 (%"class.cc::Scrollbar"*, i32)*, i1 (%"class.cc::Scrollbar"*, i32)** %82, i64 14
  %84 = load i1 (%"class.cc::Scrollbar"*, i32)*, i1 (%"class.cc::Scrollbar"*, i32)** %83, align 8
  %85 = call zeroext i1 %84(%"class.cc::Scrollbar"* %24, i32 1) #7
  br i1 %85, label %86, label %99

86:                                               ; preds = %81, %49
  %87 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #7
  %88 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %29, i64 0, i32 0, i32 5, i32 2
  %89 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %90, align 4
  %91 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %92 = bitcast %"class.gfx::Size"* %88 to i64*
  %93 = bitcast %"class.gfx::Size"* %91 to i64*
  %94 = load i64, i64* %92, align 4
  store i64 %94, i64* %93, align 4
  %95 = bitcast %"class.cc::ScrollbarLayerBase"* %29 to void (%"class.cc::Layer"*, %"class.gfx::Rect"*)***
  %96 = load void (%"class.cc::Layer"*, %"class.gfx::Rect"*)**, void (%"class.cc::Layer"*, %"class.gfx::Rect"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.cc::Layer"*, %"class.gfx::Rect"*)*, void (%"class.cc::Layer"*, %"class.gfx::Rect"*)** %96, i64 1
  %98 = load void (%"class.cc::Layer"*, %"class.gfx::Rect"*)*, void (%"class.cc::Layer"*, %"class.gfx::Rect"*)** %97, align 8
  call void %98(%"class.cc::Layer"* %30, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #7
  br label %99

99:                                               ; preds = %81, %86
  ret %"class.cc::ScrollbarLayerBase"* %29
}

declare %"class.cc::ScrollbarLayerBase"* @_ZN2cc18ScrollbarLayerBase13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"*, %"class.cc::ScrollbarLayerBase"*) local_unnamed_addr #3

declare void @_ZN2cc5Layer13SetIsDrawableEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2cc5Layer14SetHitTestableEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2cc5Layer12SetElementIdENS_9ElementIdE(%"class.cc::Layer"*, i64) local_unnamed_addr #3

declare void @_ZN2cc18ScrollbarLayerBase18SetScrollElementIdENS_9ElementIdE(%"class.cc::ScrollbarLayerBase"*, i64) local_unnamed_addr #3

declare void @_ZN2cc5Layer26SetOffsetToTransformParentEN3gfx9Vector2dFE(%"class.cc::Layer"*, <2 x float>) local_unnamed_addr #3

declare void @_ZN2cc5Layer9SetBoundsERKN3gfx4SizeE(%"class.cc::Layer"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ScrollbarDisplayItem30EqualsForUnderInvalidationImplERKS0_(%"class.blink::ScrollbarDisplayItem"* nocapture readonly, %"class.blink::ScrollbarDisplayItem"* nocapture readonly dereferenceable(40)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %4, i64 0, i32 1
  %6 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ScrollbarDisplayItem", %"class.blink::ScrollbarDisplayItem"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::ScrollbarDisplayItem::Data"*, %"struct.blink::ScrollbarDisplayItem::Data"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %8, i64 0, i32 1
  %10 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %9, align 8
  %11 = icmp eq %"class.blink::TransformPaintPropertyNode"* %6, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %4, i64 0, i32 2, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.blink::ScrollbarDisplayItem::Data", %"struct.blink::ScrollbarDisplayItem::Data"* %8, i64 0, i32 2, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br label %18

18:                                               ; preds = %12, %2
  %19 = phi i1 [ false, %2 ], [ %17, %12 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ScrollbarDisplayItem6RecordERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeE13scoped_refptrIN2cc9ScrollbarEERKNS_7IntRectEPKNS_26TransformPaintPropertyNodeENS9_9ElementIdE(%"class.blink::GraphicsContext"* nocapture readonly dereferenceable(112), %"class.blink::DisplayItemClient"* dereferenceable(16), i32, %"class.cc::Scrollbar"*, %"class.blink::IntRect"* nocapture readonly dereferenceable(16), %"class.blink::TransformPaintPropertyNode"*, i64) local_unnamed_addr #0 align 2 {
  %8 = ptrtoint %"class.cc::Scrollbar"* %3 to i64
  %9 = ptrtoint %"class.blink::TransformPaintPropertyNode"* %5 to i64
  %10 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 1
  %11 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %11, i64 0, i32 2, i32 0
  %13 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::PaintArtifact", %"class.blink::PaintArtifact"* %13, i64 0, i32 2
  %15 = tail call %"struct.blink::DisplayItemList::ItemSlot"* @_ZN5blink15DisplayItemList16AllocateItemSlotEv(%"class.blink::DisplayItemList"* %14) #7
  %16 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %15 to %"class.blink::DisplayItemClient"**
  store %"class.blink::DisplayItemClient"* %1, %"class.blink::DisplayItemClient"** %16, align 8
  %17 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %15, i64 0, i32 0, i64 8
  %18 = bitcast %"class.blink::IntRect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %18, i64 16, i1 false) #7
  %19 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %15, i64 0, i32 0, i64 24
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %15, i64 0, i32 0, i64 28
  %22 = bitcast i8* %21 to i16*
  %23 = trunc i32 %2 to i16
  %24 = load i16, i16* %22, align 4
  %25 = and i16 %23, 255
  %26 = and i16 %24, -256
  %27 = or i16 %26, %25
  store i16 %27, i16* %22, align 4
  %28 = bitcast %"class.blink::DisplayItemClient"* %1 to i8 (%"class.blink::DisplayItemClient"*)***
  %29 = load i8 (%"class.blink::DisplayItemClient"*)**, i8 (%"class.blink::DisplayItemClient"*)*** %28, align 8
  %30 = getelementptr inbounds i8 (%"class.blink::DisplayItemClient"*)*, i8 (%"class.blink::DisplayItemClient"*)** %29, i64 4
  %31 = load i8 (%"class.blink::DisplayItemClient"*)*, i8 (%"class.blink::DisplayItemClient"*)** %30, align 8
  %32 = tail call zeroext i8 %31(%"class.blink::DisplayItemClient"* %1) #7
  %33 = load i16, i16* %22, align 4
  %34 = and i8 %32, 3
  %35 = zext i8 %34 to i16
  %36 = shl nuw nsw i16 %35, 8
  %37 = and i16 %33, -1793
  %38 = or i16 %37, %36
  %39 = or i16 %38, 1024
  store i16 %39, i16* %22, align 4
  %40 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %1, i64 0, i32 1
  %41 = load i8, i8* %40, align 8
  %42 = icmp ne i8 %41, 20
  %43 = zext i1 %42 to i16
  %44 = shl nuw nsw i16 %43, 11
  %45 = and i16 %39, -30721
  %46 = or i16 %45, %44
  %47 = or i16 %46, 4096
  store i16 %47, i16* %22, align 4
  %48 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %15, i64 0, i32 0, i64 32
  %49 = tail call i8* @_Znwm(i64 32) #8
  %50 = bitcast i8* %49 to i64*
  store i64 %8, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 %9, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %49, i64 16
  %54 = bitcast i8* %53 to i64*
  store i64 %6, i64* %54, align 16
  %55 = getelementptr inbounds i8, i8* %49, i64 24
  %56 = bitcast i8* %55 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %56, align 8
  %57 = ptrtoint i8* %49 to i64
  %58 = bitcast i8* %48 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %15 to %"class.blink::DisplayItem"*
  %60 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %11, i64 0, i32 19
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %20, align 8
  tail call void @_ZN5blink15PaintController14ProcessNewItemERNS_11DisplayItemE(%"class.blink::PaintController"* %11, %"class.blink::DisplayItem"* dereferenceable(32) %59) #7
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZN5blink15PaintController14ProcessNewItemERNS_11DisplayItemE(%"class.blink::PaintController"*, %"class.blink::DisplayItem"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::DisplayItemList::ItemSlot"* @_ZN5blink15DisplayItemList16AllocateItemSlotEv(%"class.blink::DisplayItemList"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  br label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, %11
  br i1 %14, label %15, label %45, !prof !2

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %16, align 8
  %18 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %17, null
  %19 = zext i32 %11 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList8ItemSlotEEEmm(i64 %19) #7
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList8ItemSlotEEEPKcv, i64 0, i64 0)) #7
  br i1 %18, label %22, label %27

22:                                               ; preds = %15
  %23 = ptrtoint i8* %21 to i64
  %24 = bitcast %"class.blink::DisplayItemList"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = udiv i64 %20, 40
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %12, align 8
  br label %45

27:                                               ; preds = %15
  %28 = udiv i64 %20, 40
  %29 = ptrtoint i8* %21 to i64
  %30 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %16, align 8
  %31 = icmp ne i8* %21, null
  %32 = icmp ne %"struct.blink::DisplayItemList::ItemSlot"* %30, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %40, !prof !2

34:                                               ; preds = %27
  %35 = load i32, i32* %3, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %30, i64 0, i32 0, i64 0
  %38 = mul nuw nsw i64 %36, 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %37, i64 %38, i1 false) #7
  %39 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %16, align 8
  br label %40

40:                                               ; preds = %34, %27
  %41 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %30, %27 ], [ %39, %34 ]
  %42 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %41, i64 0, i32 0, i64 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #7
  %43 = bitcast %"class.blink::DisplayItemList"* %0 to i64*
  store atomic i64 %29, i64* %43 monotonic, align 8
  %44 = trunc i64 %28 to i32
  store i32 %44, i32* %12, align 8
  br label %45

45:                                               ; preds = %6, %40, %22, %9
  %46 = phi i32 [ %8, %6 ], [ %44, %40 ], [ %26, %22 ], [ %13, %9 ]
  %47 = load i32, i32* %3, align 4
  %48 = add i32 %47, 1
  %49 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = icmp ult i32 %46, %48
  br i1 %50, label %51, label %90

51:                                               ; preds = %45
  %52 = lshr i32 %46, 2
  %53 = add nuw i32 %46, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %48
  %58 = select i1 %57, i32 %56, i32 %48
  %59 = icmp ult i32 %46, %58
  br i1 %59, label %60, label %90, !prof !2

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %61, align 8
  %63 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %62, null
  %64 = zext i32 %58 to i64
  %65 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList8ItemSlotEEEmm(i64 %64) #7
  %66 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %65, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList8ItemSlotEEEPKcv, i64 0, i64 0)) #7
  br i1 %63, label %67, label %72

67:                                               ; preds = %60
  %68 = ptrtoint i8* %66 to i64
  %69 = bitcast %"class.blink::DisplayItemList"* %0 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = udiv i64 %65, 40
  %71 = trunc i64 %70 to i32
  store i32 %71, i32* %49, align 8
  br label %90

72:                                               ; preds = %60
  %73 = udiv i64 %65, 40
  %74 = ptrtoint i8* %66 to i64
  %75 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %61, align 8
  %76 = icmp ne i8* %66, null
  %77 = icmp ne %"struct.blink::DisplayItemList::ItemSlot"* %75, null
  %78 = and i1 %76, %77
  br i1 %78, label %79, label %85, !prof !2

79:                                               ; preds = %72
  %80 = load i32, i32* %3, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %75, i64 0, i32 0, i64 0
  %83 = mul nuw nsw i64 %81, 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 8 %82, i64 %83, i1 false) #7
  %84 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %61, align 8
  br label %85

85:                                               ; preds = %79, %72
  %86 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %75, %72 ], [ %84, %79 ]
  %87 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %86, i64 0, i32 0, i64 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %87) #7
  %88 = bitcast %"class.blink::DisplayItemList"* %0 to i64*
  store atomic i64 %74, i64* %88 monotonic, align 8
  %89 = trunc i64 %73 to i32
  store i32 %89, i32* %49, align 8
  br label %90

90:                                               ; preds = %45, %51, %67, %85
  %91 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %91, align 8
  %93 = load i32, i32* %3, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %92, i64 %94
  %96 = zext i32 %48 to i64
  %97 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %92, i64 %96
  %98 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %95, i64 0, i32 0, i64 0
  %99 = ptrtoint %"struct.blink::DisplayItemList::ItemSlot"* %97 to i64
  %100 = ptrtoint %"struct.blink::DisplayItemList::ItemSlot"* %95 to i64
  %101 = sub i64 %99, %100
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 %101, i1 false) #7
  store i32 %48, i32* %3, align 4
  %102 = tail call dereferenceable(40) %"struct.blink::DisplayItemList::ItemSlot"* @_ZN3WTF6VectorIN5blink15DisplayItemList8ItemSlotELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %47) #7
  %103 = load i32, i32* %3, align 4
  %104 = add i32 %103, -1
  %105 = tail call dereferenceable(40) %"struct.blink::DisplayItemList::ItemSlot"* @_ZN3WTF6VectorIN5blink15DisplayItemList8ItemSlotELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %104) #7
  ret %"struct.blink::DisplayItemList::ItemSlot"* %105
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList8ItemSlotEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::DisplayItemList::ItemSlot"* @_ZN3WTF6VectorIN5blink15DisplayItemList8ItemSlotELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %24, i64 %25
  ret %"struct.blink::DisplayItemList::ItemSlot"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
