; ModuleID = '../../third_party/blink/common/page_state/page_state.cc'
source_filename = "../../third_party/blink/common/page_state/page_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.absl::optional"*, %"class.absl::optional"*, %"class.std::__1::__compressed_pair.14" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.std::__1::basic_string.5" }
%"class.std::__1::basic_string.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.absl::optional"* }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.28 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.gfx::Point" = type { i32, i32 }
%class.scoped_refptr = type { %"class.network::ResourceRequestBody"* }
%"class.network::ResourceRequestBody" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector.30", i64, i8, i8, [6 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.network::DataElement"*, %"class.network::DataElement"*, %"class.std::__1::__compressed_pair.45" }
%"class.network::DataElement" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.32" }
%"union.absl::variant_internal::DestructibleUnionImpl.32" = type { %"union.absl::variant_internal::DestructibleUnionImpl.40" }
%"union.absl::variant_internal::DestructibleUnionImpl.40" = type { %"union.absl::variant_internal::DestructibleUnionImpl.41" }
%"union.absl::variant_internal::DestructibleUnionImpl.41" = type { %"union.absl::variant_internal::DestructibleUnionImpl.43" }
%"union.absl::variant_internal::DestructibleUnionImpl.43" = type { %"class.network::DataElementFile" }
%"class.network::DataElementFile" = type { %"class.base::FilePath", i64, i64, %"class.base::Time" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.network::DataElement"* }
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"*, %"class.std::__1::__compressed_pair.52" }
%"struct.blink::ExplodedFrameState" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.19", %"class.absl::optional", %"class.absl::optional", %"class.std::__1::vector", i32, i8, %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], %"struct.blink::ExplodedHttpBody", %"class.absl::optional", %"class.gfx::PointF", i64, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.std::__1::vector.50" }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.24" }
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%"struct.blink::ExplodedHttpBody" = type <{ %"class.absl::optional", %class.scoped_refptr, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::ExplodedFrameState"* }
%"class.blink::PageState" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.blink::ExplodedPageState" = type { %"class.std::__1::vector", %"struct.blink::ExplodedFrameState" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.9 }
%struct.anon.9 = type { %"struct.std::__1::__padding.10", i8 }
%"struct.std::__1::__padding.10" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.base::FilePath"*, %"class.base::FilePath"*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.base::FilePath"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZN5blink16ExplodedHttpBodyaSERKS0_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

@__const._ZNK5blink9PageState14RemoveReferrerEv.state = private unnamed_addr constant { %"class.std::__1::vector", { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } } { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.absl::optional"* inttoptr (i64 -6148914691236517206 to %"class.absl::optional"*), %"class.absl::optional"* inttoptr (i64 -6148914691236517206 to %"class.absl::optional"*), %"class.std::__1::__compressed_pair.14" { %"struct.std::__1::__compressed_pair_elem.15" { %"class.absl::optional"* inttoptr (i64 -6148914691236517206 to %"class.absl::optional"*) } } } }, { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } { { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } } { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.28 } } } } { { { { i8, [7 x i8], %union.anon.28 } } } { { { i8, [7 x i8], %union.anon.28 } } { { i8, [7 x i8], %union.anon.28 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.28 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.absl::optional"* inttoptr (i64 -6148914691236517206 to %"class.absl::optional"*), %"class.absl::optional"* inttoptr (i64 -6148914691236517206 to %"class.absl::optional"*), %"class.std::__1::__compressed_pair.14" { %"struct.std::__1::__compressed_pair_elem.15" { %"class.absl::optional"* inttoptr (i64 -6148914691236517206 to %"class.absl::optional"*) } } } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, i64 -6148914691236517206, i64 -6148914691236517206, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }> <{ { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, %class.scoped_refptr { %"class.network::ResourceRequestBody"* inttoptr (i64 -6148914691236517206 to %"class.network::ResourceRequestBody"*) }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"class.std::__1::basic_string.5" { %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.8 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } } }, %"class.std::__1::vector.50" { %"class.std::__1::__vector_base.51" { %"struct.blink::ExplodedFrameState"* inttoptr (i64 -6148914691236517206 to %"struct.blink::ExplodedFrameState"*), %"struct.blink::ExplodedFrameState"* inttoptr (i64 -6148914691236517206 to %"struct.blink::ExplodedFrameState"*), %"class.std::__1::__compressed_pair.52" { %"struct.std::__1::__compressed_pair_elem.53" { %"struct.blink::ExplodedFrameState"* inttoptr (i64 -6148914691236517206 to %"struct.blink::ExplodedFrameState"*) } } } } } }, align 8

@_ZN5blink9PageStateC1Ev = hidden unnamed_addr alias void (%"class.blink::PageState"*), void (%"class.blink::PageState"*)* @_ZN5blink9PageStateC2Ev
@_ZN5blink9PageStateC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.blink::PageState"*, %"class.std::__1::basic_string"*), void (%"class.blink::PageState"*, %"class.std::__1::basic_string"*)* @_ZN5blink9PageStateC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::PageState"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::PageState"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #14
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #14
  br label %16

16:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9PageState13CreateFromURLERK4GURL(%"class.blink::PageState"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.blink::ExplodedPageState", align 8
  %5 = alloca %"class.std::__1::basic_string.5", align 8
  %6 = bitcast %"struct.blink::ExplodedPageState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %6) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ %"class.std::__1::vector", { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } }* @__const._ZNK5blink9PageState14RemoveReferrerEv.state to i8*), i64 536, i1 false)
  call void @_ZN5blink17ExplodedPageStateC1Ev(%"struct.blink::ExplodedPageState"* nonnull %4) #14
  %7 = bitcast %"class.std::__1::basic_string.5"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = bitcast %class.GURL* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %class.GURL* %1 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.5"* nonnull sret %5, i8* %15, i64 %19) #14
  %20 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %22, label %37, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string.5"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = bitcast %"class.std::__1::basic_string.5"* %23 to i8**
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #15
  br label %32

32:                                               ; preds = %29, %24
  %33 = bitcast %"class.std::__1::basic_string.5"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %7, i64 24, i1 false) #14
  %34 = bitcast %"class.std::__1::basic_string.5"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  store i8 0, i8* %35, align 1
  %36 = bitcast %"class.std::__1::basic_string.5"* %5 to i16*
  store i16 0, i16* %36, align 8
  br label %39

37:                                               ; preds = %2
  %38 = bitcast %"class.std::__1::basic_string.5"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %7, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %20, align 8
  br label %39

39:                                               ; preds = %37, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  %40 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14, !noalias !3
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #14, !noalias !3
  call void @_ZN5blink15EncodePageStateERKNS_17ExplodedPageStateEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* nonnull dereferenceable(536) %4, %"class.std::__1::basic_string"* nonnull %3) #14, !noalias !3
  %42 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1, !noalias !3
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %40, i64 24, i1 false) #14
  br label %57

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %51 = load i8*, i8** %41, align 8, !noalias !6
  %52 = load i64, i64* %49, align 8, !noalias !6
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %51, i64 %52) #14
  %53 = load i8, i8* %43, align 1, !noalias !3
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  %56 = load i8*, i8** %41, align 8, !noalias !3
  call void @_ZdlPv(i8* %56) #15
  br label %57

57:                                               ; preds = %46, %48, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14, !noalias !3
  call void @_ZN5blink17ExplodedPageStateD1Ev(%"struct.blink::ExplodedPageState"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %6) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink17ExplodedPageStateC1Ev(%"struct.blink::ExplodedPageState"*) unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.5"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN5blink17ExplodedPageStateD1Ev(%"struct.blink::ExplodedPageState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9PageState16CreateForTestingERK4GURLbPKcPKN4base8FilePathE(%"class.blink::PageState"* noalias sret, %class.GURL* dereferenceable(120), i1 zeroext, i8* readonly, %"class.base::FilePath"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.blink::ExplodedPageState", align 8
  %8 = alloca %"class.std::__1::basic_string.5", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::Time", align 8
  %11 = alloca %"class.std::__1::basic_string.5", align 8
  %12 = zext i1 %2 to i8
  %13 = bitcast %"struct.blink::ExplodedPageState"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %13) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ %"class.std::__1::vector", { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } }* @__const._ZNK5blink9PageState14RemoveReferrerEv.state to i8*), i64 536, i1 false)
  call void @_ZN5blink17ExplodedPageStateC1Ev(%"struct.blink::ExplodedPageState"* nonnull %7) #14
  %14 = bitcast %"class.std::__1::basic_string.5"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = bitcast %class.GURL* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %class.GURL* %1 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  %23 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %17 to i64
  %26 = select i1 %18, i64 %24, i64 %25
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.5"* nonnull sret %8, i8* %22, i64 %26) #14
  %27 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %29, label %44, label %31

31:                                               ; preds = %5
  %32 = bitcast %"class.std::__1::basic_string.5"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = bitcast %"class.std::__1::basic_string.5"* %30 to i8**
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #15
  br label %39

39:                                               ; preds = %36, %31
  %40 = bitcast %"class.std::__1::basic_string.5"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %14, i64 24, i1 false) #14
  %41 = bitcast %"class.std::__1::basic_string.5"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  store i8 0, i8* %42, align 1
  %43 = bitcast %"class.std::__1::basic_string.5"* %8 to i16*
  store i16 0, i16* %43, align 8
  br label %46

44:                                               ; preds = %5
  %45 = bitcast %"class.std::__1::basic_string.5"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %14, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %27, align 8
  br label %46

46:                                               ; preds = %44, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  %47 = icmp ne i8* %3, null
  %48 = icmp ne %"class.base::FilePath"* %4, null
  %49 = or i1 %47, %48
  br i1 %49, label %50, label %158

50:                                               ; preds = %46
  br i1 %47, label %51, label %111

51:                                               ; preds = %50
  %52 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = call i64 @strlen(i8* nonnull %3) #14
  %58 = icmp ugt i64 %57, -17
  br i1 %58, label %59, label %61

59:                                               ; preds = %51
  %60 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %60) #16
  unreachable

61:                                               ; preds = %51
  %62 = icmp ult i64 %57, 23
  br i1 %62, label %68, label %63

63:                                               ; preds = %61
  %64 = add nuw i64 %57, 16
  %65 = and i64 %64, -16
  %66 = call i8* @_Znwm(i64 %65) #15
  store i8* %66, i8** %53, align 8
  %67 = or i64 %65, -9223372036854775808
  store i64 %67, i64* %55, align 8
  store i64 %57, i64* %54, align 8
  br label %73

68:                                               ; preds = %61
  %69 = trunc i64 %57 to i8
  %70 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 %69, i8* %71, align 1
  %72 = icmp eq i64 %57, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68, %63
  %74 = phi i8* [ %66, %63 ], [ %52, %68 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* nonnull align 1 %3, i64 %57, i1 false) #14
  br label %75

75:                                               ; preds = %68, %73
  %76 = phi i8* [ %52, %68 ], [ %74, %73 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %57
  store i8 0, i8* %77, align 1
  %78 = call i8* @_Znwm(i64 48) #15
  %79 = bitcast i8* %78 to %"class.network::ResourceRequestBody"*
  call void @_ZN7network19ResourceRequestBodyC1Ev(%"class.network::ResourceRequestBody"* nonnull %79) #14
  %80 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %7, i64 0, i32 1, i32 15, i32 1
  %81 = bitcast i8* %78 to i32*
  %82 = atomicrmw add i32* %81, i32 1 monotonic
  %83 = ptrtoint i8* %78 to i64
  %84 = bitcast %class.scoped_refptr* %80 to i64*
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %80, i64 0, i32 0
  %86 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.network::ResourceRequestBody"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %75
  %89 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %86) #14
  %93 = bitcast %"class.network::ResourceRequestBody"* %86 to i8*
  call void @_ZdlPv(i8* %93) #15
  br label %94

94:                                               ; preds = %75, %88, %92
  %95 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %85, align 8
  %96 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = load i8*, i8** %53, align 8
  %101 = load i64, i64* %54, align 8
  %102 = zext i8 %98 to i64
  %103 = select i1 %99, i8* %100, i8* %52
  %104 = select i1 %99, i64 %101, i64 %102
  %105 = trunc i64 %104 to i32
  call void @_ZN7network19ResourceRequestBody11AppendBytesEPKci(%"class.network::ResourceRequestBody"* %95, i8* %103, i32 %105) #14
  %106 = load i8, i8* %97, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %94
  %109 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %94, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  br label %111

111:                                              ; preds = %110, %50
  br i1 %48, label %112, label %156

112:                                              ; preds = %111
  %113 = call i8* @_Znwm(i64 48) #15
  %114 = bitcast i8* %113 to %"class.network::ResourceRequestBody"*
  call void @_ZN7network19ResourceRequestBodyC1Ev(%"class.network::ResourceRequestBody"* nonnull %114) #14
  %115 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %7, i64 0, i32 1, i32 15, i32 1
  %116 = bitcast i8* %113 to i32*
  %117 = atomicrmw add i32* %116, i32 1 monotonic
  %118 = ptrtoint i8* %113 to i64
  %119 = bitcast %class.scoped_refptr* %115 to i64*
  %120 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %115, i64 0, i32 0
  %121 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %120, align 8
  store i64 %118, i64* %119, align 8
  %122 = icmp eq %"class.network::ResourceRequestBody"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw sub i32* %124, i32 1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %129

127:                                              ; preds = %123
  call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %121) #14
  %128 = bitcast %"class.network::ResourceRequestBody"* %121 to i8*
  call void @_ZdlPv(i8* %128) #15
  br label %129

129:                                              ; preds = %112, %123, %127
  %130 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %120, align 8
  %131 = bitcast %"class.base::Time"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #14
  %132 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %10, i64 0, i32 0, i32 0
  store i64 0, i64* %132, align 8
  call void @_ZN7network19ResourceRequestBody15AppendFileRangeERKN4base8FilePathEmmRKNS1_4TimeE(%"class.network::ResourceRequestBody"* %130, %"class.base::FilePath"* nonnull dereferenceable(24) %4, i64 0, i64 -1, %"class.base::Time"* nonnull dereferenceable(8) %10) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #14
  %133 = bitcast %"class.std::__1::basic_string.5"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #14
  call void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string.5"* nonnull sret %11, %"class.base::FilePath"* nonnull %4) #14
  %134 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %7, i64 0, i32 0, i32 0, i32 1
  %135 = load %"class.absl::optional"*, %"class.absl::optional"** %134, align 8
  %136 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %137 = load %"class.absl::optional"*, %"class.absl::optional"** %136, align 8
  %138 = icmp ult %"class.absl::optional"* %135, %137
  br i1 %138, label %139, label %146

139:                                              ; preds = %129
  %140 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %140, align 8
  %141 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %135, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %142 = bitcast %"class.std::__1::basic_string.5"* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* nonnull align 8 %133, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 24, i1 false) #14
  %143 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %135, i64 1
  %144 = ptrtoint %"class.absl::optional"* %143 to i64
  %145 = bitcast %"class.absl::optional"** %134 to i64*
  store i64 %144, i64* %145, align 8
  br label %155

146:                                              ; preds = %129
  %147 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %7, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector"* nonnull %147, %"class.std::__1::basic_string.5"* nonnull dereferenceable(24) %11) #14
  %148 = bitcast %"class.std::__1::basic_string.5"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %148, i64 0, i32 1, i32 1
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %146
  %153 = bitcast %"class.std::__1::basic_string.5"* %11 to i8**
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #15
  br label %155

155:                                              ; preds = %139, %146, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #14
  br label %156

156:                                              ; preds = %155, %111
  %157 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %7, i64 0, i32 1, i32 15, i32 2
  store i8 %12, i8* %157, align 8
  br label %158

158:                                              ; preds = %46, %156
  %159 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #14, !noalias !9
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 0, i64 24, i1 false) #14, !noalias !9
  call void @_ZN5blink15EncodePageStateERKNS_17ExplodedPageStateEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* nonnull dereferenceable(536) %7, %"class.std::__1::basic_string"* nonnull %6) #14, !noalias !9
  %161 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1, !noalias !9
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %158
  %166 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* nonnull align 8 %159, i64 24, i1 false) #14
  br label %176

167:                                              ; preds = %158
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %170 = load i8*, i8** %160, align 8, !noalias !12
  %171 = load i64, i64* %168, align 8, !noalias !12
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %169, i8* %170, i64 %171) #14
  %172 = load i8, i8* %162, align 1, !noalias !9
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %167
  %175 = load i8*, i8** %160, align 8, !noalias !9
  call void @_ZdlPv(i8* %175) #15
  br label %176

176:                                              ; preds = %165, %167, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #14, !noalias !9
  call void @_ZN5blink17ExplodedPageStateD1Ev(%"struct.blink::ExplodedPageState"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %13) #14
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN7network19ResourceRequestBodyC1Ev(%"class.network::ResourceRequestBody"*) unnamed_addr #2

declare void @_ZN7network19ResourceRequestBody11AppendBytesEPKci(%"class.network::ResourceRequestBody"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN7network19ResourceRequestBody15AppendFileRangeERKN4base8FilePathEmmRKNS1_4TimeE(%"class.network::ResourceRequestBody"*, %"class.base::FilePath"* dereferenceable(24), i64, i64, %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string.5"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9PageState35CreateForTestingWithSequenceNumbersERK4GURLll(%"class.blink::PageState"* noalias sret, %class.GURL* dereferenceable(120), i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::ExplodedPageState", align 8
  %6 = alloca %"class.std::__1::basic_string.5", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"struct.blink::ExplodedPageState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %8) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.std::__1::vector", { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } }* @__const._ZNK5blink9PageState14RemoveReferrerEv.state to i8*), i64 536, i1 false)
  call void @_ZN5blink17ExplodedPageStateC1Ev(%"struct.blink::ExplodedPageState"* nonnull %5) #14
  %9 = bitcast %"class.std::__1::basic_string.5"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #14
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.5"* nonnull sret %6, i8* %18, i64 %22) #14
  %23 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %25, label %40, label %27

27:                                               ; preds = %4
  %28 = bitcast %"class.std::__1::basic_string.5"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = bitcast %"class.std::__1::basic_string.5"* %26 to i8**
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %32, %27
  %36 = bitcast %"class.std::__1::basic_string.5"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %9, i64 24, i1 false) #14
  %37 = bitcast %"class.std::__1::basic_string.5"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  store i8 0, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string.5"* %6 to i16*
  store i16 0, i16* %39, align 8
  br label %42

40:                                               ; preds = %4
  %41 = bitcast %"class.std::__1::basic_string.5"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %9, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %23, align 8
  br label %42

42:                                               ; preds = %40, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  %43 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %5, i64 0, i32 1, i32 10
  store i64 %2, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %5, i64 0, i32 1, i32 11
  store i64 %3, i64* %44, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #14
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #14
  call void @_ZN5blink15EncodePageStateERKNS_17ExplodedPageStateEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* nonnull dereferenceable(536) %5, %"class.std::__1::basic_string"* nonnull %7) #14
  %47 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %42
  %52 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 8 %45, i64 24, i1 false) #14
  br label %62

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %56 = load i8*, i8** %46, align 8, !noalias !15
  %57 = load i64, i64* %54, align 8, !noalias !15
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %55, i8* %56, i64 %57) #14
  %58 = load i8, i8* %48, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %51, %53, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #14
  call void @_ZN5blink17ExplodedPageStateD1Ev(%"struct.blink::ExplodedPageState"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %8) #14
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

declare void @_ZN5blink15EncodePageStateERKNS_17ExplodedPageStateEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* dereferenceable(536), %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9PageStateC2Ev(%"class.blink::PageState"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PageState"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9PageState7IsValidEv(%"class.blink::PageState"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::PageState"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  %13 = icmp ne i64 %12, 0
  ret i1 %13
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9PageState6EqualsERKS0_(%"class.blink::PageState"* nocapture readonly, %"class.blink::PageState"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = bitcast %"class.blink::PageState"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.blink::PageState"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %52

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.blink::PageState"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.blink::PageState"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %40, label %52

36:                                               ; preds = %20
  br i1 %29, label %52, label %37

37:                                               ; preds = %36
  %38 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #14
  %39 = icmp eq i32 %38, 0
  br label %52

40:                                               ; preds = %31, %47
  %41 = phi i64 [ %44, %47 ], [ %9, %31 ]
  %42 = phi i8* [ %45, %47 ], [ %23, %31 ]
  %43 = phi i8* [ %48, %47 ], [ %28, %31 ]
  %44 = add i64 %41, -1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %45, align 1
  %50 = load i8, i8* %48, align 1
  %51 = icmp eq i8 %49, %50
  br i1 %51, label %40, label %52

52:                                               ; preds = %40, %47, %31, %2, %30, %36, %37
  %53 = phi i1 [ false, %2 ], [ %39, %37 ], [ true, %36 ], [ true, %30 ], [ false, %31 ], [ false, %47 ], [ true, %40 ]
  ret i1 %53
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK5blink9PageState13ToEncodedDataEv(%"class.blink::PageState"* readnone) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9PageState18GetReferencedFilesEv(%"class.std::__1::vector.57"* noalias sret, %"class.blink::PageState"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca %"struct.blink::ExplodedPageState", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.57"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %8 = bitcast %"struct.blink::ExplodedPageState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %8) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.std::__1::vector", { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } }* @__const._ZNK5blink9PageState14RemoveReferrerEv.state to i8*), i64 536, i1 false)
  call void @_ZN5blink17ExplodedPageStateC1Ev(%"struct.blink::ExplodedPageState"* nonnull %4) #14
  %9 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0
  %10 = call zeroext i1 @_ZN5blink15DecodePageStateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string"* dereferenceable(24) %9, %"struct.blink::ExplodedPageState"* nonnull %4) #14
  br i1 %10, label %11, label %64

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %4, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.absl::optional"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.blink::ExplodedPageState"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  store %"class.base::FilePath"* null, %"class.base::FilePath"** %5, align 8
  %17 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %4, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.absl::optional"** %17 to i64*
  %19 = sub i64 %14, %16
  %20 = ashr exact i64 %19, 5
  call void @_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.57"* %0, i64 %20) #14
  %21 = load i64, i64* %18, align 8
  %22 = load i64, i64* %15, align 8
  %23 = icmp eq i64 %21, %22
  br i1 %23, label %64, label %24

24:                                               ; preds = %11
  %25 = bitcast %"class.base::FilePath"* %3 to i8*
  %26 = bitcast %"class.base::FilePath"** %5 to i64*
  br label %27

27:                                               ; preds = %57, %24
  %28 = phi i64 [ %22, %24 ], [ %60, %57 ]
  %29 = phi i64 [ 0, %24 ], [ %58, %57 ]
  %30 = inttoptr i64 %28 to %"class.absl::optional"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %30, i64 %29, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !2, !noalias !18
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %30, i64 %29, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string.5"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1, !noalias !18
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8, !noalias !18
  %42 = bitcast %"class.std::__1::basic_string.5"* %35 to i16*
  %43 = select i1 %39, i16* %41, i16* %42
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %30, i64 %29, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8, !noalias !18
  %46 = zext i8 %38 to i64
  %47 = select i1 %39, i64 %45, i64 %46
  call void @_ZN4base8FilePath15FromUTF16UnsafeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::FilePath"* nonnull sret %3, i16* %43, i64 %47) #14
  br label %49

48:                                               ; preds = %27
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %3) #14
  br label %49

49:                                               ; preds = %48, %34
  %50 = load %"class.base::FilePath"*, %"class.base::FilePath"** %5, align 8
  %51 = load %"class.base::FilePath"*, %"class.base::FilePath"** %6, align 8
  %52 = icmp ult %"class.base::FilePath"* %50, %51
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %50, %"class.base::FilePath"* nonnull dereferenceable(24) %3) #14
  %54 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %50, i64 1
  %55 = ptrtoint %"class.base::FilePath"* %54 to i64
  store i64 %55, i64* %26, align 8
  br label %57

56:                                               ; preds = %49
  call void @_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.57"* %0, %"class.base::FilePath"* nonnull dereferenceable(24) %3) #14
  br label %57

57:                                               ; preds = %56, %53
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  %58 = add nuw i64 %29, 1
  %59 = load i64, i64* %18, align 8
  %60 = load i64, i64* %15, align 8
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 5
  %63 = icmp ult i64 %58, %62
  br i1 %63, label %27, label %64

64:                                               ; preds = %57, %11, %2
  call void @_ZN5blink17ExplodedPageStateD1Ev(%"struct.blink::ExplodedPageState"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %8) #14
  ret void
}

declare zeroext i1 @_ZN5blink15DecodePageStateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string"* dereferenceable(24), %"struct.blink::ExplodedPageState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9PageState18RemovePasswordDataEv(%"class.blink::PageState"* noalias sret, %"class.blink::PageState"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::ExplodedHttpBody", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.blink::ExplodedPageState", align 8
  %6 = bitcast %"struct.blink::ExplodedPageState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %6) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ %"class.std::__1::vector", { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } }* @__const._ZNK5blink9PageState14RemoveReferrerEv.state to i8*), i64 536, i1 false)
  call void @_ZN5blink17ExplodedPageStateC1Ev(%"struct.blink::ExplodedPageState"* nonnull %5) #14
  %7 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0
  %8 = call zeroext i1 @_ZN5blink15DecodePageStateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string"* dereferenceable(24) %7, %"struct.blink::ExplodedPageState"* nonnull %5) #14
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #14
  br label %38

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %5, i64 0, i32 1, i32 15, i32 2
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %5, i64 0, i32 1, i32 15
  %17 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #14
  call void @_ZN5blink16ExplodedHttpBodyC1Ev(%"struct.blink::ExplodedHttpBody"* nonnull %3) #14
  %18 = call dereferenceable(48) %"struct.blink::ExplodedHttpBody"* @_ZN5blink16ExplodedHttpBodyaSERKS0_(%"struct.blink::ExplodedHttpBody"* %16, %"struct.blink::ExplodedHttpBody"* nonnull dereferenceable(48) %3) #14
  call void @_ZN5blink16ExplodedHttpBodyD1Ev(%"struct.blink::ExplodedHttpBody"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %11, %15
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #14, !noalias !21
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #14, !noalias !21
  call void @_ZN5blink15EncodePageStateERKNS_17ExplodedPageStateEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* nonnull dereferenceable(536) %5, %"class.std::__1::basic_string"* nonnull %4) #14, !noalias !21
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1, !noalias !21
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %20, i64 24, i1 false) #14
  br label %37

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %31 = load i8*, i8** %21, align 8, !noalias !24
  %32 = load i64, i64* %29, align 8, !noalias !24
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %30, i8* %31, i64 %32) #14
  %33 = load i8, i8* %23, align 1, !noalias !21
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = load i8*, i8** %21, align 8, !noalias !21
  call void @_ZdlPv(i8* %36) #15
  br label %37

37:                                               ; preds = %26, %28, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #14, !noalias !21
  br label %38

38:                                               ; preds = %37, %9
  call void @_ZN5blink17ExplodedPageStateD1Ev(%"struct.blink::ExplodedPageState"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9PageState18RemoveScrollOffsetEv(%"class.blink::PageState"* noalias sret, %"class.blink::PageState"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.blink::ExplodedPageState", align 8
  %5 = bitcast %"struct.blink::ExplodedPageState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %5) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.std::__1::vector", { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } }* @__const._ZNK5blink9PageState14RemoveReferrerEv.state to i8*), i64 536, i1 false)
  call void @_ZN5blink17ExplodedPageStateC1Ev(%"struct.blink::ExplodedPageState"* nonnull %4) #14
  %6 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0
  %7 = call zeroext i1 @_ZN5blink15DecodePageStateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string"* dereferenceable(24) %6, %"struct.blink::ExplodedPageState"* nonnull %4) #14
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #14
  br label %31

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %4, i64 0, i32 1, i32 8
  %12 = bitcast %"class.gfx::PointF"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #14
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14, !noalias !27
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #14, !noalias !27
  call void @_ZN5blink15EncodePageStateERKNS_17ExplodedPageStateEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* nonnull dereferenceable(536) %4, %"class.std::__1::basic_string"* nonnull %3) #14, !noalias !27
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1, !noalias !27
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %13, i64 24, i1 false) #14
  br label %30

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %24 = load i8*, i8** %14, align 8, !noalias !30
  %25 = load i64, i64* %22, align 8, !noalias !30
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %24, i64 %25) #14
  %26 = load i8, i8* %16, align 1, !noalias !27
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %21
  %29 = load i8*, i8** %14, align 8, !noalias !27
  call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %19, %21, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14, !noalias !27
  br label %31

31:                                               ; preds = %30, %8
  call void @_ZN5blink17ExplodedPageStateD1Ev(%"struct.blink::ExplodedPageState"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9PageState14RemoveReferrerEv(%"class.blink::PageState"* noalias sret, %"class.blink::PageState"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.blink::ExplodedPageState", align 8
  %5 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0
  %6 = bitcast %"class.blink::PageState"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %2
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %15
  br i1 %9, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.blink::PageState"* %0 to i8*
  %21 = bitcast %"class.blink::PageState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #14
  br label %54

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #14
  br label %54

28:                                               ; preds = %15
  %29 = bitcast %"struct.blink::ExplodedPageState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %29) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 bitcast ({ %"class.std::__1::vector", { { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.28 } } } } } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector", i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::Point", i64, i64, double, i32, [4 x i8], <{ { { { { i8, [7 x i8], %union.anon.4 } } } }, %class.scoped_refptr, i8, [7 x i8] }>, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.gfx::PointF", i64, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, %"class.std::__1::vector.50" } }* @__const._ZNK5blink9PageState14RemoveReferrerEv.state to i8*), i64 536, i1 false)
  call void @_ZN5blink17ExplodedPageStateC1Ev(%"struct.blink::ExplodedPageState"* nonnull %4) #14
  %30 = call zeroext i1 @_ZN5blink15DecodePageStateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_17ExplodedPageStateE(%"class.std::__1::basic_string"* dereferenceable(24) %5, %"struct.blink::ExplodedPageState"* nonnull %4) #14
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #14
  br label %53

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.blink::ExplodedPageState", %"struct.blink::ExplodedPageState"* %4, i64 0, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_125RecursivelyRemoveReferrerEPNS_18ExplodedFrameStateE(%"struct.blink::ExplodedFrameState"* %34)
  %35 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #14, !noalias !33
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #14, !noalias !33
  call void @_ZN5blink15EncodePageStateERKNS_17ExplodedPageStateEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.blink::ExplodedPageState"* nonnull dereferenceable(536) %4, %"class.std::__1::basic_string"* nonnull %3) #14, !noalias !33
  %37 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1, !noalias !33
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.blink::PageState"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %35, i64 24, i1 false) #14
  br label %52

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %46 = load i8*, i8** %36, align 8, !noalias !36
  %47 = load i64, i64* %44, align 8, !noalias !36
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %46, i64 %47) #14
  %48 = load i8, i8* %38, align 1, !noalias !33
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %43
  %51 = load i8*, i8** %36, align 8, !noalias !33
  call void @_ZdlPv(i8* %51) #15
  br label %52

52:                                               ; preds = %41, %43, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #14, !noalias !33
  br label %53

53:                                               ; preds = %52, %31
  call void @_ZN5blink17ExplodedPageStateD1Ev(%"struct.blink::ExplodedPageState"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %29) #14
  br label %54

54:                                               ; preds = %22, %19, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_125RecursivelyRemoveReferrerEPNS_18ExplodedFrameStateE(%"struct.blink::ExplodedFrameState"* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string.5"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::basic_string.5"* %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 13
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22, i32 0, i32 0
  %18 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %17, align 8
  %19 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %0, i64 0, i32 22, i32 0, i32 1
  %20 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %19, align 8
  %21 = icmp eq %"struct.blink::ExplodedFrameState"* %18, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %23, %15
  ret void

23:                                               ; preds = %15, %23
  %24 = phi %"struct.blink::ExplodedFrameState"* [ %25, %23 ], [ %18, %15 ]
  tail call fastcc void @_ZN5blink12_GLOBAL__N_125RecursivelyRemoveReferrerEPNS_18ExplodedFrameStateE(%"struct.blink::ExplodedFrameState"* %24)
  %25 = getelementptr inbounds %"struct.blink::ExplodedFrameState", %"struct.blink::ExplodedFrameState"* %24, i64 1
  %26 = load %"struct.blink::ExplodedFrameState"*, %"struct.blink::ExplodedFrameState"** %19, align 8
  %27 = icmp eq %"struct.blink::ExplodedFrameState"* %25, %26
  br i1 %27, label %22, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9PageStateC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.blink::PageState"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::PageState"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #14
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::PageState", %"class.blink::PageState"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #14
  br label %16

16:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.57"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.base::FilePath"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.57"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.base::FilePath"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.base::FilePath"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #16
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %"class.base::FilePath"*
  %24 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %23, i64 %20
  %25 = ptrtoint %"class.base::FilePath"* %24 to i64
  %26 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %23, i64 %1
  %27 = ptrtoint %"class.base::FilePath"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.base::FilePath"*
  %29 = icmp eq %"class.base::FilePath"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.base::FilePath"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.base::FilePath"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %31, i64 -1
  %34 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %32, i64 -1
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %33, %"class.base::FilePath"* dereferenceable(24) %34) #14
  %35 = icmp eq %"class.base::FilePath"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.base::FilePath"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.base::FilePath"*, %"class.base::FilePath"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.base::FilePath"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.base::FilePath"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.base::FilePath"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.base::FilePath"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.base::FilePath"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %48, i64 -1
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %49) #14
  %50 = icmp eq %"class.base::FilePath"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8FilePathENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.57"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::FilePath"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.57"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.57"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::FilePath"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.base::FilePath"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.base::FilePath"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %33, i64 %9
  %35 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %33, i64 %32
  %36 = ptrtoint %"class.base::FilePath"* %35 to i64
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %34, %"class.base::FilePath"* dereferenceable(24) %1) #14
  %37 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %34, i64 1
  %38 = ptrtoint %"class.base::FilePath"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.base::FilePath"*, %"class.base::FilePath"** %39, align 8
  %41 = load %"class.base::FilePath"*, %"class.base::FilePath"** %3, align 8
  %42 = icmp eq %"class.base::FilePath"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.base::FilePath"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.base::FilePath"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.base::FilePath"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %46, i64 -1
  %49 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %47, i64 -1
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %48, %"class.base::FilePath"* dereferenceable(24) %49) #14
  %50 = icmp eq %"class.base::FilePath"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.base::FilePath"*, %"class.base::FilePath"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.base::FilePath"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.base::FilePath"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.base::FilePath"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.base::FilePath"*
  %60 = icmp eq %"class.base::FilePath"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.base::FilePath"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %62, i64 -1
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %63) #14
  %64 = icmp eq %"class.base::FilePath"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

declare void @_ZN4base8FilePath15FromUTF16UnsafeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::FilePath"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #2

declare void @_ZN5blink16ExplodedHttpBodyC1Ev(%"struct.blink::ExplodedHttpBody"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"struct.blink::ExplodedHttpBody"* @_ZN5blink16ExplodedHttpBodyaSERKS0_(%"struct.blink::ExplodedHttpBody"*, %"struct.blink::ExplodedHttpBody"* dereferenceable(48)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %198, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string.5"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.5"* %11, %"class.std::__1::basic_string.5"* dereferenceable(24) %7) #14
  br label %212

14:                                               ; preds = %6
  %15 = bitcast %"class.std::__1::basic_string.5"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.std::__1::basic_string.5"* %11 to i8*
  %21 = bitcast %"class.std::__1::basic_string.5"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #14
  br label %197

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %26, 11
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string.5"* %11 to i16*
  %30 = trunc i64 %26 to i8
  %31 = bitcast %"class.std::__1::basic_string.5"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  store i8 %30, i8* %32, align 1
  br label %50

33:                                               ; preds = %22
  %34 = icmp ugt i64 %26, 9223372036854775791
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::basic_string.5"* %11 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %36) #16
  unreachable

37:                                               ; preds = %33
  %38 = add nuw nsw i64 %26, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = tail call i8* @_Znwm(i64 %43) #15
  %45 = bitcast i8* %44 to i16*
  %46 = bitcast %"class.std::__1::basic_string.5"* %11 to i8**
  store i8* %44, i8** %46, align 8
  %47 = or i64 %39, -9223372036854775808
  %48 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %49, align 8
  br label %50

50:                                               ; preds = %42, %28
  %51 = phi i16* [ %29, %28 ], [ %45, %42 ]
  %52 = add nuw nsw i64 %26, 1
  %53 = add i64 %26, 1
  %54 = icmp ult i64 %53, 16
  br i1 %54, label %144, label %55

55:                                               ; preds = %50
  %56 = add i64 %26, 1
  %57 = getelementptr i16, i16* %51, i64 %56
  %58 = getelementptr i16, i16* %24, i64 %56
  %59 = icmp ult i16* %51, %58
  %60 = icmp ult i16* %24, %57
  %61 = and i1 %59, %60
  br i1 %61, label %144, label %62

62:                                               ; preds = %55
  %63 = and i64 %53, -16
  %64 = sub i64 %52, %63
  %65 = getelementptr i16, i16* %24, i64 %63
  %66 = getelementptr i16, i16* %51, i64 %63
  %67 = add i64 %63, -16
  %68 = lshr exact i64 %67, 4
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 3
  %71 = icmp ult i64 %67, 48
  br i1 %71, label %123, label %72

72:                                               ; preds = %62
  %73 = sub nsw i64 %69, %70
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ 0, %72 ], [ %120, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %121, %74 ]
  %77 = getelementptr i16, i16* %24, i64 %75
  %78 = getelementptr i16, i16* %51, i64 %75
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !39
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !39
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !42, !noalias !39
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !42, !noalias !39
  %87 = or i64 %75, 16
  %88 = getelementptr i16, i16* %24, i64 %87
  %89 = getelementptr i16, i16* %51, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !39
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !39
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !42, !noalias !39
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !42, !noalias !39
  %98 = or i64 %75, 32
  %99 = getelementptr i16, i16* %24, i64 %98
  %100 = getelementptr i16, i16* %51, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !39
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !39
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !42, !noalias !39
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !42, !noalias !39
  %109 = or i64 %75, 48
  %110 = getelementptr i16, i16* %24, i64 %109
  %111 = getelementptr i16, i16* %51, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !39
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !39
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !42, !noalias !39
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !42, !noalias !39
  %120 = add i64 %75, 64
  %121 = add i64 %76, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %74, !llvm.loop !44

123:                                              ; preds = %74, %62
  %124 = phi i64 [ 0, %62 ], [ %120, %74 ]
  %125 = icmp eq i64 %70, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %123, %126
  %127 = phi i64 [ %139, %126 ], [ %124, %123 ]
  %128 = phi i64 [ %140, %126 ], [ %70, %123 ]
  %129 = getelementptr i16, i16* %24, i64 %127
  %130 = getelementptr i16, i16* %51, i64 %127
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !39
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !39
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !42, !noalias !39
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !42, !noalias !39
  %139 = add i64 %127, 16
  %140 = add i64 %128, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %126, !llvm.loop !46

142:                                              ; preds = %126, %123
  %143 = icmp eq i64 %53, %63
  br i1 %143, label %197, label %144

144:                                              ; preds = %142, %55, %50
  %145 = phi i64 [ %52, %55 ], [ %52, %50 ], [ %64, %142 ]
  %146 = phi i16* [ %24, %55 ], [ %24, %50 ], [ %65, %142 ]
  %147 = phi i16* [ %51, %55 ], [ %51, %50 ], [ %66, %142 ]
  %148 = add i64 %145, -1
  %149 = and i64 %145, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %157, %151 ], [ %145, %144 ]
  %153 = phi i16* [ %159, %151 ], [ %146, %144 ]
  %154 = phi i16* [ %158, %151 ], [ %147, %144 ]
  %155 = phi i64 [ %160, %151 ], [ %149, %144 ]
  %156 = load i16, i16* %153, align 2
  store i16 %156, i16* %154, align 2
  %157 = add i64 %152, -1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = getelementptr inbounds i16, i16* %153, i64 1
  %160 = add i64 %155, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %151, !llvm.loop !48

162:                                              ; preds = %151, %144
  %163 = phi i64 [ %145, %144 ], [ %157, %151 ]
  %164 = phi i16* [ %146, %144 ], [ %159, %151 ]
  %165 = phi i16* [ %147, %144 ], [ %158, %151 ]
  %166 = icmp ult i64 %148, 7
  br i1 %166, label %197, label %167

167:                                              ; preds = %162, %167
  %168 = phi i64 [ %193, %167 ], [ %163, %162 ]
  %169 = phi i16* [ %195, %167 ], [ %164, %162 ]
  %170 = phi i16* [ %194, %167 ], [ %165, %162 ]
  %171 = load i16, i16* %169, align 2
  store i16 %171, i16* %170, align 2
  %172 = getelementptr inbounds i16, i16* %170, i64 1
  %173 = getelementptr inbounds i16, i16* %169, i64 1
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %170, i64 2
  %176 = getelementptr inbounds i16, i16* %169, i64 2
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %170, i64 3
  %179 = getelementptr inbounds i16, i16* %169, i64 3
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %170, i64 4
  %182 = getelementptr inbounds i16, i16* %169, i64 4
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %170, i64 5
  %185 = getelementptr inbounds i16, i16* %169, i64 5
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %170, i64 6
  %188 = getelementptr inbounds i16, i16* %169, i64 6
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %170, i64 7
  %191 = getelementptr inbounds i16, i16* %169, i64 7
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = add i64 %168, -8
  %194 = getelementptr inbounds i16, i16* %170, i64 8
  %195 = getelementptr inbounds i16, i16* %169, i64 8
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %197, label %167, !llvm.loop !49

197:                                              ; preds = %162, %167, %142, %19
  store i8 1, i8* %8, align 8
  br label %212

198:                                              ; preds = %2
  %199 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8, i8* %199, align 8, !range !2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %212, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %204 = bitcast %"class.std::__1::basic_string.5"* %203 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %202
  %209 = bitcast %"class.std::__1::basic_string.5"* %203 to i8**
  %210 = load i8*, i8** %209, align 8
  tail call void @_ZdlPv(i8* %210) #15
  br label %211

211:                                              ; preds = %208, %202
  store i8 0, i8* %199, align 8
  br label %212

212:                                              ; preds = %12, %197, %198, %211
  %213 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 1
  %214 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %1, i64 0, i32 1, i32 0
  %215 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %214, align 8
  %216 = icmp eq %"class.network::ResourceRequestBody"* %215, null
  br i1 %216, label %220, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = atomicrmw add i32* %218, i32 1 monotonic
  br label %220

220:                                              ; preds = %212, %217
  %221 = ptrtoint %"class.network::ResourceRequestBody"* %215 to i64
  %222 = bitcast %class.scoped_refptr* %213 to i64*
  %223 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %213, i64 0, i32 0
  %224 = load %"class.network::ResourceRequestBody"*, %"class.network::ResourceRequestBody"** %223, align 8
  store i64 %221, i64* %222, align 8
  %225 = icmp eq %"class.network::ResourceRequestBody"* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.network::ResourceRequestBody", %"class.network::ResourceRequestBody"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = atomicrmw sub i32* %227, i32 1 acq_rel
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %230, label %232

230:                                              ; preds = %226
  tail call void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"* nonnull %224) #14
  %231 = bitcast %"class.network::ResourceRequestBody"* %224 to i8*
  tail call void @_ZdlPv(i8* %231) #15
  br label %232

232:                                              ; preds = %220, %226, %230
  %233 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %1, i64 0, i32 2
  %234 = load i8, i8* %233, align 8, !range !2
  %235 = getelementptr inbounds %"struct.blink::ExplodedHttpBody", %"struct.blink::ExplodedHttpBody"* %0, i64 0, i32 2
  store i8 %234, i8* %235, align 8
  ret %"struct.blink::ExplodedHttpBody"* %0
}

; Function Attrs: nounwind
declare void @_ZN5blink16ExplodedHttpBodyD1Ev(%"struct.blink::ExplodedHttpBody"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.5"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.5"*, %"class.std::__1::basic_string.5"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.5"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.5"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.5"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.5"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.5"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.5"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.5"*
  %35 = icmp ugt %"class.std::__1::basic_string.5"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !50
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !50
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !53, !noalias !50
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !53, !noalias !50
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !50
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !50
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !53, !noalias !50
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !53, !noalias !50
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !50
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !50
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !53, !noalias !50
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !53, !noalias !50
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !50
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !50
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !53, !noalias !50
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !53, !noalias !50
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !55

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !50
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !50
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !53, !noalias !50
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !53, !noalias !50
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !56

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !57

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !58

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.5"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #16
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #16
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #15
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !59
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !59
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !62, !noalias !59
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !62, !noalias !59
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !59
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !59
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !62, !noalias !59
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !62, !noalias !59
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !59
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !59
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !62, !noalias !59
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !62, !noalias !59
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !59
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !59
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !62, !noalias !59
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !62, !noalias !59
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !64

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !59
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !59
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !62, !noalias !59
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !62, !noalias !59
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !65

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !66

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !67

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.5"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.5"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !68
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !68
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !71, !noalias !68
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !71, !noalias !68
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !68
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !68
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !71, !noalias !68
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !71, !noalias !68
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !68
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !68
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !71, !noalias !68
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !71, !noalias !68
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !68
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !68
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !71, !noalias !68
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !71, !noalias !68
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !73

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !68
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !68
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !71, !noalias !68
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !71, !noalias !68
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !74

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !75

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !76

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.5"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #14
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.5"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.5"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.5"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #16
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.5"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.5"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #16
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #15
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !77
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !77
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !80, !noalias !77
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !80, !noalias !77
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !77
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !77
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !80, !noalias !77
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !80, !noalias !77
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !77
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !77
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !80, !noalias !77
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !80, !noalias !77
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !77
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !77
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !80, !noalias !77
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !80, !noalias !77
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !82

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !77
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !77
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !80, !noalias !77
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !80, !noalias !77
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !83

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !84

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !85

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !86

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !87

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !88

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !90
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !90
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !93, !noalias !90
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !93, !noalias !90
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !90
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !90
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !93, !noalias !90
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !93, !noalias !90
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !90
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !90
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !93, !noalias !90
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !93, !noalias !90
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !90
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !90
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !93, !noalias !90
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !93, !noalias !90
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !95

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !90
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !90
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !93, !noalias !90
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !93, !noalias !90
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !96

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !97

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !98

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #15
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.5"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.5", %"class.std::__1::basic_string.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN7network19ResourceRequestBodyD1Ev(%"class.network::ResourceRequestBody"*) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS6_IS9_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string.5"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.absl::optional"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.absl::optional"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.absl::optional"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.absl::optional"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %35
  %39 = ptrtoint %"class.absl::optional"* %38 to i64
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %36, i64 %9, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.std::__1::basic_string.5"* %41 to i8*
  %43 = bitcast %"class.std::__1::basic_string.5"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #14
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 1
  %45 = ptrtoint %"class.absl::optional"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.absl::optional"*, %"class.absl::optional"** %46, align 8
  %48 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %49 = icmp eq %"class.absl::optional"* %48, %47
  br i1 %49, label %75, label %50

50:                                               ; preds = %34
  %51 = ptrtoint %"class.absl::optional"* %47 to i64
  %52 = getelementptr %"class.absl::optional", %"class.absl::optional"* %48, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint i8* %52 to i64
  %54 = sub i64 %53, %51
  %55 = and i64 %54, 32
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %70

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 -1
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 32, i1 false) #14
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %66 = bitcast %"class.std::__1::basic_string.5"* %65 to i8*
  %67 = bitcast %"class.std::__1::basic_string.5"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %59, align 8
  br label %68

68:                                               ; preds = %63, %57
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 -1
  br label %70

70:                                               ; preds = %68, %50
  %71 = phi %"class.absl::optional"* [ undef, %50 ], [ %69, %68 ]
  %72 = phi %"class.absl::optional"* [ %37, %50 ], [ %69, %68 ]
  %73 = phi %"class.absl::optional"* [ %48, %50 ], [ %58, %68 ]
  %74 = icmp ult i64 %54, 32
  br i1 %74, label %95, label %77

75:                                               ; preds = %34
  %76 = ptrtoint %"class.absl::optional"* %37 to i64
  store i64 %76, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  br label %119

77:                                               ; preds = %70, %130
  %78 = phi %"class.absl::optional"* [ %131, %130 ], [ %72, %70 ]
  %79 = phi %"class.absl::optional"* [ %90, %130 ], [ %73, %70 ]
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -1, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 -1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 32, i1 false) #14
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %87 = bitcast %"class.std::__1::basic_string.5"* %86 to i8*
  %88 = bitcast %"class.std::__1::basic_string.5"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %80, align 8
  br label %89

89:                                               ; preds = %84, %77
  %90 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 -2
  %91 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -2, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 32, i1 false) #14
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %130, label %125

95:                                               ; preds = %130, %70
  %96 = phi %"class.absl::optional"* [ %71, %70 ], [ %131, %130 ]
  %97 = load %"class.absl::optional"*, %"class.absl::optional"** %46, align 8
  %98 = load %"class.absl::optional"*, %"class.absl::optional"** %3, align 8
  %99 = ptrtoint %"class.absl::optional"* %96 to i64
  store i64 %99, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %100 = icmp eq %"class.absl::optional"* %98, %97
  br i1 %100, label %119, label %101

101:                                              ; preds = %95, %117
  %102 = phi %"class.absl::optional"* [ %103, %117 ], [ %98, %95 ]
  %103 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %102, i64 -1
  %104 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %117, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %102, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %109 = bitcast %"class.std::__1::basic_string.5"* %108 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = bitcast %"class.std::__1::basic_string.5"* %108 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_ZdlPv(i8* %115) #15
  br label %116

116:                                              ; preds = %113, %107
  store i8 0, i8* %104, align 8
  br label %117

117:                                              ; preds = %116, %101
  %118 = icmp eq %"class.absl::optional"* %103, %97
  br i1 %118, label %119, label %101

119:                                              ; preds = %117, %75, %95
  %120 = phi %"class.absl::optional"* [ %47, %75 ], [ %97, %95 ], [ %97, %117 ]
  %121 = icmp eq %"class.absl::optional"* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %123) #15
  br label %124

124:                                              ; preds = %119, %122
  ret void

125:                                              ; preds = %89
  %126 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %79, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %127 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -2, i32 0, i32 0, i32 0, i32 1, i32 0
  %128 = bitcast %"class.std::__1::basic_string.5"* %127 to i8*
  %129 = bitcast %"class.std::__1::basic_string.5"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #14
  store i8 1, i8* %91, align 8
  br label %130

130:                                              ; preds = %125, %89
  %131 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %78, i64 -2
  %132 = icmp eq %"class.absl::optional"* %90, %47
  br i1 %132, label %95, label %77
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!8 = distinct !{!8, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE: argument 0"}
!11 = distinct !{!11, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!14 = distinct !{!14, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!17 = distinct !{!17, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink12_GLOBAL__N_110ToFilePathERKN4absl8optionalINSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEE: argument 0"}
!20 = distinct !{!20, !"_ZN5blink12_GLOBAL__N_110ToFilePathERKN4absl8optionalINSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE: argument 0"}
!23 = distinct !{!23, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!26 = distinct !{!26, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE: argument 0"}
!29 = distinct !{!29, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE"}
!30 = !{!31, !28}
!31 = distinct !{!31, !32, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!32 = distinct !{!32, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE: argument 0"}
!35 = distinct !{!35, !"_ZN5blink12_GLOBAL__N_111ToPageStateERKNS_17ExplodedPageStateE"}
!36 = !{!37, !34}
!37 = distinct !{!37, !38, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!38 = distinct !{!38, !"_ZN5blink9PageState21CreateFromEncodedDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.isvectorized", i32 1}
!46 = distinct !{!46, !47}
!47 = !{!"llvm.loop.unroll.disable"}
!48 = distinct !{!48, !47}
!49 = distinct !{!49, !45}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !45}
!56 = distinct !{!56, !47}
!57 = distinct !{!57, !47}
!58 = distinct !{!58, !45}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !45}
!65 = distinct !{!65, !47}
!66 = distinct !{!66, !47}
!67 = distinct !{!67, !45}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !45}
!74 = distinct !{!74, !47}
!75 = distinct !{!75, !47}
!76 = distinct !{!76, !45}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !45}
!83 = distinct !{!83, !47}
!84 = distinct !{!84, !47}
!85 = distinct !{!85, !45}
!86 = distinct !{!86, !45}
!87 = distinct !{!87, !47}
!88 = distinct !{!88, !89, !45}
!89 = !{!"llvm.loop.unroll.runtime.disable"}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !45}
!96 = distinct !{!96, !47}
!97 = distinct !{!97, !47}
!98 = distinct !{!98, !45}
