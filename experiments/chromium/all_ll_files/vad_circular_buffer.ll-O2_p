; ModuleID = '../../third_party/webrtc/modules/audio_processing/vad/vad_circular_buffer.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/vad/vad_circular_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::VadCircularBuffer" = type { %"class.std::__1::unique_ptr", i8, i32, i32, double }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { double* }

@_ZN6webrtc17VadCircularBufferC1Ei = hidden unnamed_addr alias void (%"class.webrtc::VadCircularBuffer"*, i32), void (%"class.webrtc::VadCircularBuffer"*, i32)* @_ZN6webrtc17VadCircularBufferC2Ei
@_ZN6webrtc17VadCircularBufferD1Ev = hidden unnamed_addr alias void (%"class.webrtc::VadCircularBuffer"*), void (%"class.webrtc::VadCircularBuffer"*)* @_ZN6webrtc17VadCircularBufferD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6webrtc17VadCircularBufferC2Ei(%"class.webrtc::VadCircularBuffer"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 8)
  %5 = extractvalue { i64, i1 } %4, 1
  %6 = extractvalue { i64, i1 } %4, 0
  %7 = select i1 %5, i64 -1, i64 %6
  %8 = tail call i8* @_Znam(i64 %7) #8
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast %"class.webrtc::VadCircularBuffer"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 3
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  store double 0.000000e+00, double* %14, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17VadCircularBufferD2Ev(%"class.webrtc::VadCircularBuffer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load double*, double** %2, align 8
  store double* null, double** %2, align 8
  %4 = icmp eq double* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast double* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc17VadCircularBuffer5ResetEv(%"class.webrtc::VadCircularBuffer"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  store double 0.000000e+00, double* %4, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %"class.webrtc::VadCircularBuffer"* @_ZN6webrtc17VadCircularBuffer6CreateEi(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp slt i32 %0, 1
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = tail call i8* @_Znwm(i64 32) #8
  %5 = bitcast i8* %4 to %"class.webrtc::VadCircularBuffer"*
  %6 = sext i32 %0 to i64
  %7 = shl nuw nsw i64 %6, 3
  %8 = tail call i8* @_Znam(i64 %7) #8
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast i8* %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 %0, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 24
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 8
  br label %18

18:                                               ; preds = %1, %3
  %19 = phi %"class.webrtc::VadCircularBuffer"* [ %5, %3 ], [ null, %1 ]
  ret %"class.webrtc::VadCircularBuffer"* %19
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK6webrtc17VadCircularBuffer6OldestEv(%"class.webrtc::VadCircularBuffer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load double*, double** %6, align 8
  br label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds double, double* %13, i64 %11
  br label %15

15:                                               ; preds = %8, %5
  %16 = phi double* [ %14, %8 ], [ %7, %5 ]
  %17 = load double, double* %16, align 8
  ret double %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZN6webrtc17VadCircularBuffer4MeanEv(%"class.webrtc::VadCircularBuffer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  %7 = load double, double* %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = sitofp i32 %9 to double
  %11 = fdiv double %7, %10
  br label %21

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  %18 = load double, double* %17, align 8
  %19 = sitofp i32 %14 to double
  %20 = fdiv double %18, %19
  br label %21

21:                                               ; preds = %12, %16, %5
  %22 = phi double [ %11, %5 ], [ %20, %16 ], [ 0.000000e+00, %12 ]
  ret double %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc17VadCircularBuffer6InsertEd(%"class.webrtc::VadCircularBuffer"* nocapture, double) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  %8 = load double, double* %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load double*, double** %11, align 8
  %13 = sext i32 %10 to i64
  br label %25

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds double, double* %19, i64 %17
  %21 = load double, double* %20, align 8
  %22 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  %23 = load double, double* %22, align 8
  %24 = fsub double %23, %21
  store double %24, double* %22, align 8
  br label %25

25:                                               ; preds = %6, %14
  %26 = phi i64 [ %13, %6 ], [ %17, %14 ]
  %27 = phi double* [ %12, %6 ], [ %19, %14 ]
  %28 = phi double [ %8, %6 ], [ %24, %14 ]
  %29 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  %30 = fadd double %28, %1
  store double %30, double* %29, align 8
  %31 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %32 = getelementptr inbounds double, double* %27, i64 %26
  store double %1, double* %32, align 8
  %33 = load i32, i32* %31, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %31, align 4
  %35 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %34, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %25
  store i8 1, i8* %3, align 8
  store i32 0, i32* %31, align 4
  br label %39

39:                                               ; preds = %25, %38
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc17VadCircularBuffer11BufferLevelEv(%"class.webrtc::VadCircularBuffer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %7 = select i1 %4, i32* %6, i32* %5
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc17VadCircularBuffer3GetEiPd(%"class.webrtc::VadCircularBuffer"* nocapture readonly, i32, double* nocapture) local_unnamed_addr #6 align 2 {
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %9, label %30

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp ne i8 %11, 0
  %13 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  %16 = or i1 %12, %15
  br i1 %16, label %17, label %30

17:                                               ; preds = %9
  %18 = xor i32 %1, -1
  %19 = add i32 %14, %18
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 %7, i32 0
  %22 = add nsw i32 %21, %19
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load double*, double** %24, align 8
  %26 = getelementptr inbounds double, double* %25, i64 %23
  %27 = bitcast double* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast double* %2 to i64*
  store i64 %28, i64* %29, align 8
  br label %30

30:                                               ; preds = %9, %3, %5, %17
  %31 = phi i32 [ 0, %17 ], [ -1, %5 ], [ -1, %3 ], [ -1, %9 ]
  ret i32 %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc17VadCircularBuffer20ConvertToLinearIndexEPi(%"class.webrtc::VadCircularBuffer"* nocapture readonly, i32* nocapture) local_unnamed_addr #6 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %24, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %3, %7
  br i1 %8, label %9, label %24

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp ne i8 %11, 0
  %13 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %3, %14
  %16 = or i1 %12, %15
  br i1 %16, label %17, label %24

17:                                               ; preds = %9
  %18 = xor i32 %3, -1
  %19 = add i32 %14, %18
  store i32 %19, i32* %1, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = load i32, i32* %6, align 8
  %23 = add nsw i32 %22, %19
  store i32 %23, i32* %1, align 4
  br label %24

24:                                               ; preds = %9, %17, %21, %2, %5
  %25 = phi i32 [ -1, %5 ], [ -1, %2 ], [ 0, %21 ], [ 0, %17 ], [ -1, %9 ]
  ret i32 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6webrtc17VadCircularBuffer3SetEid(%"class.webrtc::VadCircularBuffer"* nocapture, i32, double) local_unnamed_addr #6 align 2 {
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %33, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp ne i8 %11, 0
  %13 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  %16 = or i1 %12, %15
  br i1 %16, label %17, label %33

17:                                               ; preds = %9
  %18 = xor i32 %1, -1
  %19 = add i32 %14, %18
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 %7, i32 0
  %22 = add nsw i32 %21, %19
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load double*, double** %24, align 8
  %26 = getelementptr inbounds double, double* %25, i64 %23
  %27 = load double, double* %26, align 8
  %28 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  %29 = load double, double* %28, align 8
  %30 = fsub double %29, %27
  store double %30, double* %28, align 8
  store double %2, double* %26, align 8
  %31 = load double, double* %28, align 8
  %32 = fadd double %31, %2
  store double %32, double* %28, align 8
  br label %33

33:                                               ; preds = %9, %3, %5, %17
  %34 = phi i32 [ 0, %17 ], [ -1, %5 ], [ -1, %3 ], [ -1, %9 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc17VadCircularBuffer15RemoveTransientEid(%"class.webrtc::VadCircularBuffer"* nocapture, i32, double) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %1, 2
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %97, label %12

12:                                               ; preds = %3, %7
  %13 = add nsw i32 %1, 1
  %14 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %97

17:                                               ; preds = %12
  %18 = icmp ne i8 %5, 0
  %19 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  %22 = or i1 %18, %21
  br i1 %22, label %23, label %97

23:                                               ; preds = %17
  %24 = add i32 %20, -1
  %25 = icmp slt i32 %24, 0
  %26 = select i1 %25, i32 %15, i32 0
  %27 = add nsw i32 %26, %24
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load double*, double** %29, align 8
  %31 = getelementptr inbounds double, double* %30, i64 %28
  %32 = load double, double* %31, align 8
  %33 = fcmp olt double %32, %2
  br i1 %33, label %34, label %97

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  %36 = load double, double* %35, align 8
  %37 = fsub double %36, %32
  store double %37, double* %35, align 8
  store double 0.000000e+00, double* %31, align 8
  %38 = load double, double* %35, align 8
  %39 = fadd double %38, 0.000000e+00
  store double %39, double* %35, align 8
  %40 = icmp sgt i32 %1, -1
  br i1 %40, label %41, label %66

41:                                               ; preds = %34
  %42 = load i32, i32* %14, align 8
  %43 = icmp slt i32 %13, %42
  br label %44

44:                                               ; preds = %41, %63
  %45 = phi i32 [ %13, %41 ], [ %64, %63 ]
  br i1 %43, label %46, label %97

46:                                               ; preds = %44
  %47 = load i8, i8* %4, align 8, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = load i32, i32* %19, align 4
  %50 = icmp sgt i32 %49, %45
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %97

52:                                               ; preds = %46
  %53 = xor i32 %45, -1
  %54 = add i32 %49, %53
  %55 = icmp slt i32 %54, 0
  %56 = select i1 %55, i32 %42, i32 0
  %57 = add nsw i32 %56, %54
  %58 = sext i32 %57 to i64
  %59 = load double*, double** %29, align 8
  %60 = getelementptr inbounds double, double* %59, i64 %58
  %61 = load double, double* %60, align 8
  %62 = fcmp olt double %61, %2
  br i1 %62, label %66, label %63

63:                                               ; preds = %52
  %64 = add nsw i32 %45, -1
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %44, label %97

66:                                               ; preds = %52, %34
  %67 = phi i32 [ %13, %34 ], [ %45, %52 ]
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %97

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.webrtc::VadCircularBuffer", %"class.webrtc::VadCircularBuffer"* %0, i64 0, i32 4
  br label %71

71:                                               ; preds = %69, %81
  %72 = phi i32 [ %67, %69 ], [ %95, %81 ]
  %73 = load i32, i32* %14, align 8
  %74 = icmp sgt i32 %73, %72
  br i1 %74, label %75, label %97

75:                                               ; preds = %71
  %76 = load i8, i8* %4, align 8, !range !2
  %77 = icmp ne i8 %76, 0
  %78 = load i32, i32* %19, align 4
  %79 = icmp sgt i32 %78, %72
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %97

81:                                               ; preds = %75
  %82 = xor i32 %72, -1
  %83 = add i32 %78, %82
  %84 = icmp slt i32 %83, 0
  %85 = select i1 %84, i32 %73, i32 0
  %86 = add nsw i32 %85, %83
  %87 = sext i32 %86 to i64
  %88 = load double*, double** %29, align 8
  %89 = getelementptr inbounds double, double* %88, i64 %87
  %90 = load double, double* %89, align 8
  %91 = load double, double* %70, align 8
  %92 = fsub double %91, %90
  store double %92, double* %70, align 8
  store double 0.000000e+00, double* %89, align 8
  %93 = load double, double* %70, align 8
  %94 = fadd double %93, 0.000000e+00
  store double %94, double* %70, align 8
  %95 = add nsw i32 %72, -1
  %96 = icmp sgt i32 %95, 0
  br i1 %96, label %71, label %97

97:                                               ; preds = %63, %46, %44, %81, %71, %75, %66, %17, %12, %23, %7
  %98 = phi i32 [ 0, %7 ], [ 0, %23 ], [ -1, %12 ], [ -1, %17 ], [ 0, %66 ], [ 0, %81 ], [ -1, %71 ], [ -1, %75 ], [ 0, %63 ], [ -1, %46 ], [ -1, %44 ]
  ret i32 %98
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
