; ModuleID = '../../third_party/skia/src/codec/SkSwizzler.cpp'
source_filename = "../../third_party/skia/src/codec/SkSwizzler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSwizzler = type <{ %class.SkSampler.base, [4 x i8], void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSampler.base = type <{ i32 (...)**, i32 }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp.11 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.10, [8 x i8] }
%struct.anon.10 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%class.sk_sp.11 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.12, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.12 = type { %"struct.std::__1::atomic" }
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZNK10SkSwizzler9fillWidthEv = comdat any

$_ZN10SkSwizzlerD0Ev = comdat any

$_ZN9SkSamplerD2Ev = comdat any

@_ZTV10SkSwizzler = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%class.SkSwizzler*)* @_ZNK10SkSwizzler9fillWidthEv to i8*), i8* bitcast (void (%class.SkSampler*)* @_ZN9SkSamplerD2Ev to i8*), i8* bitcast (void (%class.SkSwizzler*)* @_ZN10SkSwizzlerD0Ev to i8*), i8* bitcast (i32 (%class.SkSwizzler*, i32)* @_ZN10SkSwizzler12onSetSampleXEi to i8*)] }, align 8
@_ZN6SkOpts12gray_to_RGB1E = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@_ZN6SkOpts13grayA_to_rgbAE = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@_ZN6SkOpts13grayA_to_RGBAE = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@_ZN6SkOpts11RGB_to_RGB1E = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@_ZN6SkOpts11RGB_to_BGR1E = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@_ZN6SkOpts12RGBA_to_rgbAE = external local_unnamed_addr global void (i32*, i32*, i32)*, align 8
@_ZN6SkOpts12RGBA_to_bgrAE = external local_unnamed_addr global void (i32*, i32*, i32)*, align 8
@_ZN6SkOpts12RGBA_to_BGRAE = external local_unnamed_addr global void (i32*, i32*, i32)*, align 8
@_ZN6SkOpts21inverted_CMYK_to_RGB1E = external local_unnamed_addr global void (i32*, i32*, i32)*, align 8
@_ZN6SkOpts21inverted_CMYK_to_BGR1E = external local_unnamed_addr global void (i32*, i32*, i32)*, align 8
@switch.table._ZN10SkSwizzler10MakeSimpleEiRK11SkImageInfoRKN7SkCodec7OptionsE = private unnamed_addr constant [8 x void (i8*, i8*, i32, i32, i32, i32, i32*)*] [void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample1PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample2PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample1PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample4PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample1PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample6PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample1PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample8PvPKhiiiiPKj], align 8
@switch.table._ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect = private unnamed_addr constant [12 x void (i8*, i8*, i32, i32, i32, i32, i32*)*] [void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_565PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24swizzle_bit_to_grayscalePvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_bit_to_f16PvPKhiiiiPKj], align 8
@switch.table._ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect.1 = private unnamed_addr constant [10 x void (i8*, i8*, i32, i32, i32, i32, i32*)*] [void (i8*, i8*, i32, i32, i32, i32, i32*)* null, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL4copyPvPKhiiiiPKj], align 8
@switch.table._ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect.2 = private unnamed_addr constant [10 x void (i8*, i8*, i32, i32, i32, i32, i32*)*] [void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_565PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample1PvPKhiiiiPKj], align 8

@_ZN10SkSwizzlerC1EPFvPvPKhiiiiPKjES6_S4_iiiiii = hidden unnamed_addr alias void (%class.SkSwizzler*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, i32, i32, i32, i32), void (%class.SkSwizzler*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, i32, i32, i32, i32)* @_ZN10SkSwizzlerC2EPFvPvPKhiiiiPKjES6_S4_iiiiii

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkSwizzler* @_ZN10SkSwizzler10MakeSimpleEiRK11SkImageInfoRKN7SkCodec7OptionsE(i32, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = add i32 %0, -1
  %5 = icmp ult i32 %4, 8
  br i1 %5, label %6, label %64

6:                                                ; preds = %3
  %7 = trunc i32 %4 to i8
  %8 = lshr i8 -85, %7
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %64, label %11

11:                                               ; preds = %6
  %12 = sext i32 %4 to i64
  %13 = getelementptr inbounds [8 x void (i8*, i8*, i32, i32, i32, i32, i32*)*], [8 x void (i8*, i8*, i32, i32, i32, i32, i32*)*]* @switch.table._ZN10SkSwizzler10MakeSimpleEiRK11SkImageInfoRKN7SkCodec7OptionsE, i64 0, i64 %12
  %14 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32*)** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %17 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %16) #9
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %2, i64 0, i32 1
  %21 = load %struct.SkIRect*, %struct.SkIRect** %20, align 8
  %22 = icmp eq %struct.SkIRect* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %21, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %21, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %27, %25
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %25, %23 ], [ 0, %11 ]
  %31 = phi i32 [ %28, %23 ], [ %19, %11 ]
  %32 = tail call i8* @_Znwm(i64 96) #10
  %33 = bitcast i8* %32 to i32 (...)***
  %34 = getelementptr inbounds i8, i8* %32, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 1, i32* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkSwizzler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %36 = getelementptr inbounds i8, i8* %32, i64 16
  %37 = bitcast i8* %36 to void (i8*, i8*, i32, i32, i32, i32, i32*)**
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL4copyPvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)** %37, align 8
  %38 = getelementptr inbounds i8, i8* %32, i64 24
  %39 = bitcast i8* %38 to i64*
  store i64 %15, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %32, i64 32
  %41 = bitcast i8* %40 to void (i8*, i8*, i32, i32, i32, i32, i32*)**
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL4copyPvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)** %41, align 8
  %42 = getelementptr inbounds i8, i8* %32, i64 40
  %43 = bitcast i8* %42 to i32**
  store i32* null, i32** %43, align 8
  %44 = getelementptr inbounds i8, i8* %32, i64 48
  %45 = bitcast i8* %44 to i32*
  store i32 %30, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %32, i64 52
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %32, i64 56
  %49 = bitcast i8* %48 to i32*
  %50 = mul nsw i32 %30, %0
  store i32 %50, i32* %49, align 8
  %51 = getelementptr inbounds i8, i8* %32, i64 60
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %32, i64 64
  %54 = insertelement <4 x i32> undef, i32 %31, i32 0
  %55 = shufflevector <4 x i32> %54, <4 x i32> undef, <4 x i32> zeroinitializer
  %56 = bitcast i8* %53 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %56, align 8
  %57 = getelementptr inbounds i8, i8* %32, i64 80
  %58 = bitcast i8* %57 to i32*
  store i32 1, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %32, i64 84
  %60 = bitcast i8* %59 to i32*
  store i32 %0, i32* %60, align 4
  %61 = getelementptr inbounds i8, i8* %32, i64 88
  %62 = bitcast i8* %61 to i32*
  store i32 %17, i32* %62, align 8
  %63 = bitcast i8* %32 to %class.SkSwizzler*
  br label %64

64:                                               ; preds = %6, %3, %29
  %65 = phi %class.SkSwizzler* [ %63, %29 ], [ null, %3 ], [ null, %6 ]
  ret %class.SkSwizzler* %65
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL7sample1PvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %7
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = sext i32 %4 to i64
  %13 = zext i32 %2 to i64
  %14 = add nsw i64 %13, -1
  %15 = and i64 %13, 3
  %16 = icmp ult i64 %14, 3
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = sub nsw i64 %13, %15
  br label %34

19:                                               ; preds = %34, %9
  %20 = phi i64 [ 0, %9 ], [ %53, %34 ]
  %21 = phi i8* [ %11, %9 ], [ %52, %34 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %19, %23
  %24 = phi i64 [ %30, %23 ], [ %20, %19 ]
  %25 = phi i8* [ %29, %23 ], [ %21, %19 ]
  %26 = phi i64 [ %31, %23 ], [ %15, %19 ]
  %27 = load i8, i8* %25, align 1
  %28 = getelementptr inbounds i8, i8* %0, i64 %24
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %25, i64 %12
  %30 = add nuw nsw i64 %24, 1
  %31 = add i64 %26, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !2

33:                                               ; preds = %19, %23, %7
  ret void

34:                                               ; preds = %34, %17
  %35 = phi i64 [ 0, %17 ], [ %53, %34 ]
  %36 = phi i8* [ %11, %17 ], [ %52, %34 ]
  %37 = phi i64 [ %18, %17 ], [ %54, %34 ]
  %38 = load i8, i8* %36, align 1
  %39 = getelementptr inbounds i8, i8* %0, i64 %35
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %36, i64 %12
  %41 = or i64 %35, 1
  %42 = load i8, i8* %40, align 1
  %43 = getelementptr inbounds i8, i8* %0, i64 %41
  store i8 %42, i8* %43, align 1
  %44 = getelementptr inbounds i8, i8* %40, i64 %12
  %45 = or i64 %35, 2
  %46 = load i8, i8* %44, align 1
  %47 = getelementptr inbounds i8, i8* %0, i64 %45
  store i8 %46, i8* %47, align 1
  %48 = getelementptr inbounds i8, i8* %44, i64 %12
  %49 = or i64 %35, 3
  %50 = load i8, i8* %48, align 1
  %51 = getelementptr inbounds i8, i8* %0, i64 %49
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds i8, i8* %48, i64 %12
  %53 = add nuw nsw i64 %35, 4
  %54 = add i64 %37, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %19, label %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL7sample2PvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 3
  %17 = icmp ult i64 %15, 3
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = sub nsw i64 %14, %16
  br label %36

20:                                               ; preds = %36, %10
  %21 = phi i64 [ 0, %10 ], [ %59, %36 ]
  %22 = phi i8* [ %12, %10 ], [ %58, %36 ]
  %23 = icmp eq i64 %16, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %20, %24
  %25 = phi i64 [ %32, %24 ], [ %21, %20 ]
  %26 = phi i8* [ %31, %24 ], [ %22, %20 ]
  %27 = phi i64 [ %33, %24 ], [ %16, %20 ]
  %28 = bitcast i8* %26 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds i16, i16* %8, i64 %25
  store i16 %29, i16* %30, align 2
  %31 = getelementptr inbounds i8, i8* %26, i64 %13
  %32 = add nuw nsw i64 %25, 1
  %33 = add i64 %27, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %24, !llvm.loop !4

35:                                               ; preds = %20, %24, %7
  ret void

36:                                               ; preds = %36, %18
  %37 = phi i64 [ 0, %18 ], [ %59, %36 ]
  %38 = phi i8* [ %12, %18 ], [ %58, %36 ]
  %39 = phi i64 [ %19, %18 ], [ %60, %36 ]
  %40 = bitcast i8* %38 to i16*
  %41 = load i16, i16* %40, align 2
  %42 = getelementptr inbounds i16, i16* %8, i64 %37
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %38, i64 %13
  %44 = or i64 %37, 1
  %45 = bitcast i8* %43 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = getelementptr inbounds i16, i16* %8, i64 %44
  store i16 %46, i16* %47, align 2
  %48 = getelementptr inbounds i8, i8* %43, i64 %13
  %49 = or i64 %37, 2
  %50 = bitcast i8* %48 to i16*
  %51 = load i16, i16* %50, align 2
  %52 = getelementptr inbounds i16, i16* %8, i64 %49
  store i16 %51, i16* %52, align 2
  %53 = getelementptr inbounds i8, i8* %48, i64 %13
  %54 = or i64 %37, 3
  %55 = bitcast i8* %53 to i16*
  %56 = load i16, i16* %55, align 2
  %57 = getelementptr inbounds i16, i16* %8, i64 %54
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %53, i64 %13
  %59 = add nuw nsw i64 %37, 4
  %60 = add i64 %39, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %20, label %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL7sample4PvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 3
  %17 = icmp ult i64 %15, 3
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = sub nsw i64 %14, %16
  br label %36

20:                                               ; preds = %36, %10
  %21 = phi i64 [ 0, %10 ], [ %59, %36 ]
  %22 = phi i8* [ %12, %10 ], [ %58, %36 ]
  %23 = icmp eq i64 %16, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %20, %24
  %25 = phi i64 [ %32, %24 ], [ %21, %20 ]
  %26 = phi i8* [ %31, %24 ], [ %22, %20 ]
  %27 = phi i64 [ %33, %24 ], [ %16, %20 ]
  %28 = bitcast i8* %26 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %8, i64 %25
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %26, i64 %13
  %32 = add nuw nsw i64 %25, 1
  %33 = add i64 %27, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %24, !llvm.loop !5

35:                                               ; preds = %20, %24, %7
  ret void

36:                                               ; preds = %36, %18
  %37 = phi i64 [ 0, %18 ], [ %59, %36 ]
  %38 = phi i8* [ %12, %18 ], [ %58, %36 ]
  %39 = phi i64 [ %19, %18 ], [ %60, %36 ]
  %40 = bitcast i8* %38 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds i32, i32* %8, i64 %37
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %38, i64 %13
  %44 = or i64 %37, 1
  %45 = bitcast i8* %43 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds i32, i32* %8, i64 %44
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %43, i64 %13
  %49 = or i64 %37, 2
  %50 = bitcast i8* %48 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i32, i32* %8, i64 %49
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %48, i64 %13
  %54 = or i64 %37, 3
  %55 = bitcast i8* %53 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds i32, i32* %8, i64 %54
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %53, i64 %13
  %59 = add nuw nsw i64 %37, 4
  %60 = add i64 %39, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %20, label %36
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL7sample6PvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %7
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = sext i32 %4 to i64
  %13 = add i32 %2, -1
  %14 = and i32 %2, 3
  %15 = icmp ult i32 %13, 3
  br i1 %15, label %18, label %16

16:                                               ; preds = %9
  %17 = sub i32 %2, %14
  br label %31

18:                                               ; preds = %31, %9
  %19 = phi i8* [ %0, %9 ], [ %41, %31 ]
  %20 = phi i8* [ %11, %9 ], [ %42, %31 ]
  %21 = icmp eq i32 %14, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %18, %22
  %23 = phi i8* [ %26, %22 ], [ %19, %18 ]
  %24 = phi i8* [ %27, %22 ], [ %20, %18 ]
  %25 = phi i32 [ %28, %22 ], [ %14, %18 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %24, i64 6, i1 false)
  %26 = getelementptr inbounds i8, i8* %23, i64 6
  %27 = getelementptr inbounds i8, i8* %24, i64 %12
  %28 = add i32 %25, -1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %22, !llvm.loop !6

30:                                               ; preds = %18, %22, %7
  ret void

31:                                               ; preds = %31, %16
  %32 = phi i8* [ %0, %16 ], [ %41, %31 ]
  %33 = phi i8* [ %11, %16 ], [ %42, %31 ]
  %34 = phi i32 [ %17, %16 ], [ %43, %31 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %33, i64 6, i1 false)
  %35 = getelementptr inbounds i8, i8* %32, i64 6
  %36 = getelementptr inbounds i8, i8* %33, i64 %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %36, i64 6, i1 false)
  %37 = getelementptr inbounds i8, i8* %32, i64 12
  %38 = getelementptr inbounds i8, i8* %36, i64 %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64 6, i1 false)
  %39 = getelementptr inbounds i8, i8* %32, i64 18
  %40 = getelementptr inbounds i8, i8* %38, i64 %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %40, i64 6, i1 false)
  %41 = getelementptr inbounds i8, i8* %32, i64 24
  %42 = getelementptr inbounds i8, i8* %40, i64 %12
  %43 = add i32 %34, -4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %18, label %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL7sample8PvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i64*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 3
  %17 = icmp ult i64 %15, 3
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = sub nsw i64 %14, %16
  br label %36

20:                                               ; preds = %36, %10
  %21 = phi i64 [ 0, %10 ], [ %59, %36 ]
  %22 = phi i8* [ %12, %10 ], [ %58, %36 ]
  %23 = icmp eq i64 %16, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %20, %24
  %25 = phi i64 [ %32, %24 ], [ %21, %20 ]
  %26 = phi i8* [ %31, %24 ], [ %22, %20 ]
  %27 = phi i64 [ %33, %24 ], [ %16, %20 ]
  %28 = bitcast i8* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i64, i64* %8, i64 %25
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 %13
  %32 = add nuw nsw i64 %25, 1
  %33 = add i64 %27, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %24, !llvm.loop !7

35:                                               ; preds = %20, %24, %7
  ret void

36:                                               ; preds = %36, %18
  %37 = phi i64 [ 0, %18 ], [ %59, %36 ]
  %38 = phi i8* [ %12, %18 ], [ %58, %36 ]
  %39 = phi i64 [ %19, %18 ], [ %60, %36 ]
  %40 = bitcast i8* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds i64, i64* %8, i64 %37
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %38, i64 %13
  %44 = or i64 %37, 1
  %45 = bitcast i8* %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i64, i64* %8, i64 %44
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %43, i64 %13
  %49 = or i64 %37, 2
  %50 = bitcast i8* %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i64, i64* %8, i64 %49
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %48, i64 %13
  %54 = or i64 %37, 3
  %55 = bitcast i8* %53 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i64, i64* %8, i64 %54
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %53, i64 %13
  %59 = add nuw nsw i64 %37, 4
  %60 = add i64 %39, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %20, label %36
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK11SkImageInfoPFvPvPKhiiiiPKjES9_S7_iiRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkImageInfo* nocapture readonly dereferenceable(24), void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24), %struct.SkIRect* readonly) local_unnamed_addr #2 align 2 {
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 1
  %12 = load %struct.SkIRect*, %struct.SkIRect** %11, align 8
  %13 = icmp eq %struct.SkIRect* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = sub i32 %18, %16
  br label %28

20:                                               ; preds = %8
  %21 = icmp eq %struct.SkIRect* %7, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %26, %24
  br label %28

28:                                               ; preds = %20, %22, %14
  %29 = phi i32 [ %16, %14 ], [ 0, %22 ], [ 0, %20 ]
  %30 = phi i32 [ %19, %14 ], [ %27, %22 ], [ %10, %20 ]
  %31 = phi i32 [ 0, %14 ], [ %24, %22 ], [ 0, %20 ]
  %32 = phi i32 [ %19, %14 ], [ %10, %22 ], [ %10, %20 ]
  %33 = tail call i8* @_Znwm(i64 96) #10
  %34 = bitcast i8* %33 to %class.SkSwizzler*
  %35 = bitcast i8* %33 to i32 (...)***
  %36 = getelementptr inbounds i8, i8* %33, i64 8
  %37 = bitcast i8* %36 to i32*
  store i32 1, i32* %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkSwizzler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %38 = getelementptr inbounds i8, i8* %33, i64 16
  %39 = bitcast i8* %38 to void (i8*, i8*, i32, i32, i32, i32, i32*)**
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %1, void (i8*, i8*, i32, i32, i32, i32, i32*)** %39, align 8
  %40 = getelementptr inbounds i8, i8* %33, i64 24
  %41 = bitcast i8* %40 to void (i8*, i8*, i32, i32, i32, i32, i32*)**
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %2, void (i8*, i8*, i32, i32, i32, i32, i32*)** %41, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 32
  %43 = bitcast i8* %42 to void (i8*, i8*, i32, i32, i32, i32, i32*)**
  %44 = icmp eq void (i8*, i8*, i32, i32, i32, i32, i32*)* %1, null
  %45 = select i1 %44, void (i8*, i8*, i32, i32, i32, i32, i32*)* %2, void (i8*, i8*, i32, i32, i32, i32, i32*)* %1
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %45, void (i8*, i8*, i32, i32, i32, i32, i32*)** %43, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 40
  %47 = bitcast i8* %46 to i32**
  store i32* %3, i32** %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 48
  %49 = bitcast i8* %48 to i32*
  store i32 %29, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %33, i64 52
  %51 = bitcast i8* %50 to i32*
  store i32 %31, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %33, i64 56
  %53 = bitcast i8* %52 to i32*
  %54 = mul nsw i32 %29, %4
  store i32 %54, i32* %53, align 8
  %55 = getelementptr inbounds i8, i8* %33, i64 60
  %56 = bitcast i8* %55 to i32*
  %57 = mul nsw i32 %31, %5
  store i32 %57, i32* %56, align 4
  %58 = getelementptr inbounds i8, i8* %33, i64 64
  %59 = bitcast i8* %58 to i32*
  store i32 %30, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %33, i64 68
  %61 = bitcast i8* %60 to i32*
  store i32 %32, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %33, i64 72
  %63 = bitcast i8* %62 to i32*
  store i32 %30, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %33, i64 76
  %65 = bitcast i8* %64 to i32*
  store i32 %32, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %33, i64 80
  %67 = bitcast i8* %66 to i32*
  store i32 1, i32* %67, align 8
  %68 = getelementptr inbounds i8, i8* %33, i64 84
  %69 = bitcast i8* %68 to i32*
  store i32 %4, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %33, i64 88
  %71 = bitcast i8* %70 to i32*
  store i32 %5, i32* %71, align 8
  ret %class.SkSwizzler* %34
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL4copyPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = mul nsw i32 %3, %2
  %11 = sext i32 %10 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %9, i64 %11, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkEncodedInfo* nocapture readonly dereferenceable(32), i32*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24), %struct.SkIRect* readonly) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  %9 = icmp eq i32* %1, null
  %10 = and i1 %9, %8
  br i1 %10, label %260, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 0
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 2
  %20 = and i1 %16, %19
  switch i32 %7, label %260 [
    i32 0, label %21
    i32 2, label %34
    i32 1, label %34
    i32 4, label %45
    i32 3, label %58
    i32 5, label %58
    i32 6, label %78
    i32 7, label %109
    i32 8, label %114
    i32 9, label %119
    i32 12, label %138
  ]

21:                                               ; preds = %11
  %22 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %23 = load i8, i8* %22, align 8
  switch i8 %23, label %260 [
    i8 1, label %24
    i8 8, label %29
  ]

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, -2
  %28 = icmp ult i32 %27, 12
  br i1 %28, label %165, label %260

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, -2
  %33 = icmp ult i32 %32, 10
  br i1 %33, label %174, label %260

34:                                               ; preds = %11, %11
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  switch i32 %36, label %260 [
    i32 4, label %37
    i32 6, label %37
    i32 1, label %143
  ]

37:                                               ; preds = %34, %34
  %38 = icmp eq i32 %13, 0
  br i1 %20, label %39, label %42

39:                                               ; preds = %37
  %40 = select i1 %38, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler29SkipLeadingGrayAlphaZerosThenIXadL_ZL31swizzle_grayalpha_to_n32_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL31swizzle_grayalpha_to_n32_premulPvPKhiiiiPKj
  %41 = select i1 %38, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler29SkipLeadingGrayAlphaZerosThenIXadL_ZL36fast_swizzle_grayalpha_to_n32_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL36fast_swizzle_grayalpha_to_n32_premulPvPKhiiiiPKj
  br label %143

42:                                               ; preds = %37
  %43 = select i1 %38, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler29SkipLeadingGrayAlphaZerosThenIXadL_ZL33swizzle_grayalpha_to_n32_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL33swizzle_grayalpha_to_n32_unpremulPvPKhiiiiPKj
  %44 = select i1 %38, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler29SkipLeadingGrayAlphaZerosThenIXadL_ZL38fast_swizzle_grayalpha_to_n32_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL38fast_swizzle_grayalpha_to_n32_unpremulPvPKhiiiiPKj
  br label %143

45:                                               ; preds = %11
  %46 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %47 = load i8, i8* %46, align 8
  switch i8 %47, label %260 [
    i8 1, label %48
    i8 2, label %48
    i8 4, label %48
    i8 8, label %52
  ]

48:                                               ; preds = %45, %45, %45
  %49 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  switch i32 %50, label %260 [
    i32 4, label %186
    i32 6, label %186
    i32 2, label %51
  ]

51:                                               ; preds = %48
  br label %186

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  switch i32 %54, label %260 [
    i32 4, label %55
    i32 6, label %55
    i32 2, label %186
  ]

55:                                               ; preds = %52, %52
  %56 = icmp eq i32 %13, 0
  %57 = select i1 %56, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL26swizzle_index_to_n32_skipZPvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL20swizzle_index_to_n32PvPKhiiiiPKj
  br label %186

58:                                               ; preds = %11, %11
  %59 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  switch i32 %60, label %260 [
    i32 4, label %61
    i32 6, label %67
    i32 2, label %73
  ]

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %63 = load i8, i8* %62, align 8
  %64 = icmp eq i8 %63, 16
  %65 = select i1 %64, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL21swizzle_rgb16_to_rgbaPvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_rgb_to_rgbaPvPKhiiiiPKj
  %66 = select i1 %64, void (i8*, i8*, i32, i32, i32, i32, i32*)* null, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_rgb_to_rgbaPvPKhiiiiPKj
  br label %143

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %69 = load i8, i8* %68, align 8
  %70 = icmp eq i8 %69, 16
  %71 = select i1 %70, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL21swizzle_rgb16_to_bgraPvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL19swizzle_rgb_to_bgraPvPKhiiiiPKj
  %72 = select i1 %70, void (i8*, i8*, i32, i32, i32, i32, i32*)* null, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL24fast_swizzle_rgb_to_bgraPvPKhiiiiPKj
  br label %143

73:                                               ; preds = %58
  %74 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %75 = load i8, i8* %74, align 8
  %76 = icmp eq i8 %75, 16
  %77 = select i1 %76, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL20swizzle_rgb16_to_565PvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL18swizzle_rgb_to_565PvPKhiiiiPKj
  br label %143

78:                                               ; preds = %11
  %79 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  switch i32 %80, label %260 [
    i32 4, label %81
    i32 6, label %95
  ]

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %83 = load i8, i8* %82, align 8
  %84 = icmp eq i8 %83, 16
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  %86 = select i1 %20, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL29swizzle_rgba16_to_rgba_premulPvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL31swizzle_rgba16_to_rgba_unpremulPvPKhiiiiPKj
  br label %159

87:                                               ; preds = %81
  %88 = icmp eq i32 %13, 0
  br i1 %20, label %89, label %92

89:                                               ; preds = %87
  %90 = select i1 %88, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKj
  %91 = select i1 %88, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL32fast_swizzle_rgba_to_rgba_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL32fast_swizzle_rgba_to_rgba_premulPvPKhiiiiPKj
  br label %159

92:                                               ; preds = %87
  %93 = select i1 %88, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL7sample4PvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample4PvPKhiiiiPKj
  %94 = select i1 %88, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL4copyPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL4copyPvPKhiiiiPKj
  br label %159

95:                                               ; preds = %78
  %96 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %97 = load i8, i8* %96, align 8
  %98 = icmp eq i8 %97, 16
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  %100 = select i1 %20, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL29swizzle_rgba16_to_bgra_premulPvPKhiiiiPKj, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL31swizzle_rgba16_to_bgra_unpremulPvPKhiiiiPKj
  br label %159

101:                                              ; preds = %95
  %102 = icmp eq i32 %13, 0
  br i1 %20, label %103, label %106

103:                                              ; preds = %101
  %104 = select i1 %102, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKj
  %105 = select i1 %102, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL32fast_swizzle_rgba_to_bgra_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL32fast_swizzle_rgba_to_bgra_premulPvPKhiiiiPKj
  br label %159

106:                                              ; preds = %101
  %107 = select i1 %102, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj
  %108 = select i1 %102, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL34fast_swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL34fast_swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj
  br label %159

109:                                              ; preds = %11
  %110 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  switch i32 %111, label %260 [
    i32 6, label %153
    i32 4, label %112
    i32 2, label %113
  ]

112:                                              ; preds = %109
  br label %153

113:                                              ; preds = %109
  br label %153

114:                                              ; preds = %11
  %115 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  switch i32 %116, label %260 [
    i32 6, label %159
    i32 4, label %117
    i32 2, label %118
  ]

117:                                              ; preds = %114
  br label %159

118:                                              ; preds = %114
  br label %159

119:                                              ; preds = %11
  %120 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  switch i32 %121, label %260 [
    i32 6, label %122
    i32 4, label %130
  ]

122:                                              ; preds = %119
  %123 = icmp eq i32 %13, 0
  br i1 %20, label %124, label %127

124:                                              ; preds = %122
  %125 = select i1 %123, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKj
  %126 = select i1 %123, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL32fast_swizzle_rgba_to_rgba_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL32fast_swizzle_rgba_to_rgba_premulPvPKhiiiiPKj
  br label %159

127:                                              ; preds = %122
  %128 = select i1 %123, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL7sample4PvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL7sample4PvPKhiiiiPKj
  %129 = select i1 %123, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL4copyPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL4copyPvPKhiiiiPKj
  br label %159

130:                                              ; preds = %119
  %131 = icmp eq i32 %13, 0
  br i1 %20, label %132, label %135

132:                                              ; preds = %130
  %133 = select i1 %131, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKj
  %134 = select i1 %131, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL32fast_swizzle_rgba_to_bgra_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL32fast_swizzle_rgba_to_bgra_premulPvPKhiiiiPKj
  br label %159

135:                                              ; preds = %130
  %136 = select i1 %131, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj
  %137 = select i1 %131, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL34fast_swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_, void (i8*, i8*, i32, i32, i32, i32, i32*)* @_ZL34fast_swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj
  br label %159

138:                                              ; preds = %11
  %139 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %140 = load i32, i32* %139, align 8
  switch i32 %140, label %260 [
    i32 4, label %159
    i32 6, label %141
    i32 2, label %142
  ]

141:                                              ; preds = %138
  br label %159

142:                                              ; preds = %138
  br label %159

143:                                              ; preds = %73, %67, %61, %34, %42, %39
  %144 = phi void (i8*, i8*, i32, i32, i32, i32, i32*)* [ %40, %39 ], [ %43, %42 ], [ @_ZL23swizzle_grayalpha_to_a8PvPKhiiiiPKj, %34 ], [ %65, %61 ], [ %71, %67 ], [ %77, %73 ]
  %145 = phi void (i8*, i8*, i32, i32, i32, i32, i32*)* [ %41, %39 ], [ %44, %42 ], [ null, %34 ], [ %66, %61 ], [ %72, %67 ], [ null, %73 ]
  switch i32 %7, label %186 [
    i32 3, label %153
    i32 2, label %149
    i32 1, label %149
    i32 4, label %146
    i32 5, label %153
  ]

146:                                              ; preds = %143
  %147 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %148 = load i8, i8* %147, align 8
  br label %186

149:                                              ; preds = %143, %143
  %150 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %151 = load i8, i8* %150, align 8
  %152 = shl i8 %151, 1
  br label %186

153:                                              ; preds = %143, %113, %112, %109, %143
  %154 = phi void (i8*, i8*, i32, i32, i32, i32, i32*)* [ %145, %143 ], [ %145, %143 ], [ @_ZL24fast_swizzle_rgb_to_rgbaPvPKhiiiiPKj, %109 ], [ @_ZL24fast_swizzle_rgb_to_bgraPvPKhiiiiPKj, %112 ], [ null, %113 ]
  %155 = phi void (i8*, i8*, i32, i32, i32, i32, i32*)* [ %144, %143 ], [ %144, %143 ], [ @_ZL19swizzle_rgb_to_rgbaPvPKhiiiiPKj, %109 ], [ @_ZL19swizzle_rgb_to_bgraPvPKhiiiiPKj, %112 ], [ @_ZL18swizzle_bgr_to_565PvPKhiiiiPKj, %113 ]
  %156 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %157 = load i8, i8* %156, align 8
  %158 = mul i8 %157, 3
  br label %186

159:                                              ; preds = %99, %85, %118, %117, %142, %141, %89, %92, %103, %106, %114, %124, %127, %132, %135, %138
  %160 = phi void (i8*, i8*, i32, i32, i32, i32, i32*)* [ @_ZL25fast_swizzle_cmyk_to_rgbaPvPKhiiiiPKj, %138 ], [ %137, %135 ], [ %134, %132 ], [ %129, %127 ], [ %126, %124 ], [ null, %114 ], [ %108, %106 ], [ %105, %103 ], [ %94, %92 ], [ %91, %89 ], [ null, %85 ], [ null, %99 ], [ null, %117 ], [ null, %118 ], [ @_ZL25fast_swizzle_cmyk_to_bgraPvPKhiiiiPKj, %141 ], [ null, %142 ]
  %161 = phi void (i8*, i8*, i32, i32, i32, i32, i32*)* [ @_ZL20swizzle_cmyk_to_rgbaPvPKhiiiiPKj, %138 ], [ %136, %135 ], [ %133, %132 ], [ %128, %127 ], [ %125, %124 ], [ @_ZL19swizzle_rgb_to_rgbaPvPKhiiiiPKj, %114 ], [ %107, %106 ], [ %104, %103 ], [ %93, %92 ], [ %90, %89 ], [ %86, %85 ], [ %100, %99 ], [ @_ZL19swizzle_rgb_to_bgraPvPKhiiiiPKj, %117 ], [ @_ZL18swizzle_bgr_to_565PvPKhiiiiPKj, %118 ], [ @_ZL20swizzle_cmyk_to_bgraPvPKhiiiiPKj, %141 ], [ @_ZL19swizzle_cmyk_to_565PvPKhiiiiPKj, %142 ]
  %162 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %0, i64 0, i32 4
  %163 = load i8, i8* %162, align 8
  %164 = shl i8 %163, 2
  br label %186

165:                                              ; preds = %24
  %166 = trunc i32 %27 to i16
  %167 = lshr i16 2581, %166
  %168 = and i16 %167, 1
  %169 = icmp eq i16 %168, 0
  br i1 %169, label %260, label %170

170:                                              ; preds = %165
  %171 = sext i32 %27 to i64
  %172 = getelementptr inbounds [12 x void (i8*, i8*, i32, i32, i32, i32, i32*)*], [12 x void (i8*, i8*, i32, i32, i32, i32, i32*)*]* @switch.table._ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect, i64 0, i64 %171
  %173 = load void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)** %172, align 8
  br label %186

174:                                              ; preds = %29
  %175 = trunc i32 %32 to i16
  %176 = lshr i16 533, %175
  %177 = and i16 %176, 1
  %178 = icmp eq i16 %177, 0
  br i1 %178, label %260, label %179

179:                                              ; preds = %174
  %180 = sext i32 %32 to i64
  %181 = getelementptr inbounds [10 x void (i8*, i8*, i32, i32, i32, i32, i32*)*], [10 x void (i8*, i8*, i32, i32, i32, i32, i32*)*]* @switch.table._ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect.1, i64 0, i64 %180
  %182 = load void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)** %181, align 8
  %183 = sext i32 %32 to i64
  %184 = getelementptr inbounds [10 x void (i8*, i8*, i32, i32, i32, i32, i32*)*], [10 x void (i8*, i8*, i32, i32, i32, i32, i32*)*]* @switch.table._ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect.2, i64 0, i64 %183
  %185 = load void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)** %184, align 8
  br label %186

186:                                              ; preds = %179, %170, %52, %55, %48, %48, %51, %146, %143, %149, %153, %159
  %187 = phi void (i8*, i8*, i32, i32, i32, i32, i32*)* [ %160, %159 ], [ %154, %153 ], [ %145, %149 ], [ %145, %143 ], [ %145, %146 ], [ null, %52 ], [ null, %55 ], [ null, %48 ], [ null, %48 ], [ null, %51 ], [ null, %170 ], [ %182, %179 ]
  %188 = phi void (i8*, i8*, i32, i32, i32, i32, i32*)* [ %161, %159 ], [ %155, %153 ], [ %144, %149 ], [ %144, %143 ], [ %144, %146 ], [ @_ZL20swizzle_index_to_565PvPKhiiiiPKj, %52 ], [ %57, %55 ], [ @_ZL26swizzle_small_index_to_n32PvPKhiiiiPKj, %48 ], [ @_ZL26swizzle_small_index_to_n32PvPKhiiiiPKj, %48 ], [ @_ZL26swizzle_small_index_to_565PvPKhiiiiPKj, %51 ], [ %173, %170 ], [ %185, %179 ]
  %189 = phi i8 [ %164, %159 ], [ %158, %153 ], [ %152, %149 ], [ 0, %143 ], [ %148, %146 ], [ 8, %52 ], [ 8, %55 ], [ %47, %48 ], [ %47, %48 ], [ %47, %51 ], [ 1, %170 ], [ 8, %179 ]
  %190 = and i8 %189, 7
  %191 = icmp eq i8 %190, 0
  %192 = zext i8 %189 to i32
  %193 = lshr i32 %192, 3
  %194 = select i1 %191, i32 %193, i32 %192
  %195 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0
  %196 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %195) #9
  %197 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %3, i64 0, i32 1
  %200 = load %struct.SkIRect*, %struct.SkIRect** %199, align 8
  %201 = icmp eq %struct.SkIRect* %200, null
  br i1 %201, label %208, label %202

202:                                              ; preds = %186
  %203 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %200, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %200, i64 0, i32 2
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 %206, %204
  br label %216

208:                                              ; preds = %186
  %209 = icmp eq %struct.SkIRect* %4, null
  br i1 %209, label %216, label %210

210:                                              ; preds = %208
  %211 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = sub i32 %214, %212
  br label %216

216:                                              ; preds = %202, %208, %210
  %217 = phi i32 [ %204, %202 ], [ 0, %210 ], [ 0, %208 ]
  %218 = phi i32 [ %207, %202 ], [ %215, %210 ], [ %198, %208 ]
  %219 = phi i32 [ 0, %202 ], [ %212, %210 ], [ 0, %208 ]
  %220 = phi i32 [ %207, %202 ], [ %198, %210 ], [ %198, %208 ]
  %221 = tail call i8* @_Znwm(i64 96) #10
  %222 = bitcast i8* %221 to i32 (...)***
  %223 = getelementptr inbounds i8, i8* %221, i64 8
  %224 = bitcast i8* %223 to i32*
  store i32 1, i32* %224, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkSwizzler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %222, align 8
  %225 = getelementptr inbounds i8, i8* %221, i64 16
  %226 = bitcast i8* %225 to void (i8*, i8*, i32, i32, i32, i32, i32*)**
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %187, void (i8*, i8*, i32, i32, i32, i32, i32*)** %226, align 8
  %227 = getelementptr inbounds i8, i8* %221, i64 24
  %228 = bitcast i8* %227 to void (i8*, i8*, i32, i32, i32, i32, i32*)**
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %188, void (i8*, i8*, i32, i32, i32, i32, i32*)** %228, align 8
  %229 = getelementptr inbounds i8, i8* %221, i64 32
  %230 = bitcast i8* %229 to void (i8*, i8*, i32, i32, i32, i32, i32*)**
  %231 = icmp eq void (i8*, i8*, i32, i32, i32, i32, i32*)* %187, null
  %232 = select i1 %231, void (i8*, i8*, i32, i32, i32, i32, i32*)* %188, void (i8*, i8*, i32, i32, i32, i32, i32*)* %187
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %232, void (i8*, i8*, i32, i32, i32, i32, i32*)** %230, align 8
  %233 = getelementptr inbounds i8, i8* %221, i64 40
  %234 = bitcast i8* %233 to i32**
  store i32* %1, i32** %234, align 8
  %235 = getelementptr inbounds i8, i8* %221, i64 48
  %236 = bitcast i8* %235 to i32*
  store i32 %217, i32* %236, align 8
  %237 = getelementptr inbounds i8, i8* %221, i64 52
  %238 = bitcast i8* %237 to i32*
  store i32 %219, i32* %238, align 4
  %239 = getelementptr inbounds i8, i8* %221, i64 56
  %240 = bitcast i8* %239 to i32*
  %241 = mul nsw i32 %217, %194
  store i32 %241, i32* %240, align 8
  %242 = getelementptr inbounds i8, i8* %221, i64 60
  %243 = bitcast i8* %242 to i32*
  %244 = mul nsw i32 %219, %196
  store i32 %244, i32* %243, align 4
  %245 = getelementptr inbounds i8, i8* %221, i64 64
  %246 = bitcast i8* %245 to i32*
  store i32 %218, i32* %246, align 8
  %247 = getelementptr inbounds i8, i8* %221, i64 68
  %248 = bitcast i8* %247 to i32*
  store i32 %220, i32* %248, align 4
  %249 = getelementptr inbounds i8, i8* %221, i64 72
  %250 = bitcast i8* %249 to i32*
  store i32 %218, i32* %250, align 8
  %251 = getelementptr inbounds i8, i8* %221, i64 76
  %252 = bitcast i8* %251 to i32*
  store i32 %220, i32* %252, align 4
  %253 = getelementptr inbounds i8, i8* %221, i64 80
  %254 = bitcast i8* %253 to i32*
  store i32 1, i32* %254, align 8
  %255 = getelementptr inbounds i8, i8* %221, i64 84
  %256 = bitcast i8* %255 to i32*
  store i32 %194, i32* %256, align 4
  %257 = getelementptr inbounds i8, i8* %221, i64 88
  %258 = bitcast i8* %257 to i32*
  store i32 %196, i32* %258, align 8
  %259 = bitcast i8* %221 to %class.SkSwizzler*
  br label %260

260:                                              ; preds = %165, %174, %29, %24, %11, %138, %119, %114, %109, %78, %58, %45, %52, %48, %34, %21, %5, %216
  %261 = phi %class.SkSwizzler* [ %259, %216 ], [ null, %5 ], [ null, %24 ], [ null, %29 ], [ null, %21 ], [ null, %34 ], [ null, %48 ], [ null, %52 ], [ null, %45 ], [ null, %58 ], [ null, %78 ], [ null, %109 ], [ null, %114 ], [ null, %119 ], [ null, %138 ], [ null, %11 ], [ null, %165 ], [ null, %174 ]
  ret %class.SkSwizzler* %261
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL18swizzle_bit_to_n32PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = sdiv i32 %5, 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = srem i32 %5, 8
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i32
  %15 = sub nsw i32 7, %12
  %16 = shl i32 1, %15
  %17 = and i32 %16, %14
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i32 -16777216, i32 -1
  store i32 %19, i32* %8, align 4
  %20 = icmp sgt i32 %2, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %7
  %22 = zext i32 %2 to i64
  br label %24

23:                                               ; preds = %24, %7
  ret void

24:                                               ; preds = %24, %21
  %25 = phi i64 [ 1, %21 ], [ %41, %24 ]
  %26 = phi i8* [ %11, %21 ], [ %32, %24 ]
  %27 = phi i32 [ %12, %21 ], [ %29, %24 ]
  %28 = add nsw i32 %27, %4
  %29 = srem i32 %28, 8
  %30 = sdiv i32 %28, 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %26, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = sub nsw i32 7, %29
  %36 = shl i32 1, %35
  %37 = and i32 %36, %34
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i32 -16777216, i32 -1
  %40 = getelementptr inbounds i32, i32* %8, i64 %25
  store i32 %39, i32* %40, align 4
  %41 = add nuw nsw i64 %25, 1
  %42 = icmp eq i64 %41, %22
  br i1 %42, label %23, label %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL18swizzle_bit_to_565PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = sdiv i32 %5, 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = srem i32 %5, 8
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i32
  %15 = sub nsw i32 7, %12
  %16 = shl i32 1, %15
  %17 = and i32 %16, %14
  %18 = icmp ne i32 %17, 0
  %19 = sext i1 %18 to i16
  store i16 %19, i16* %8, align 2
  %20 = icmp sgt i32 %2, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %7
  %22 = zext i32 %2 to i64
  br label %24

23:                                               ; preds = %24, %7
  ret void

24:                                               ; preds = %24, %21
  %25 = phi i64 [ 1, %21 ], [ %41, %24 ]
  %26 = phi i8* [ %11, %21 ], [ %32, %24 ]
  %27 = phi i32 [ %12, %21 ], [ %29, %24 ]
  %28 = add nsw i32 %27, %4
  %29 = srem i32 %28, 8
  %30 = sdiv i32 %28, 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %26, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = sub nsw i32 7, %29
  %36 = shl i32 1, %35
  %37 = and i32 %36, %34
  %38 = icmp ne i32 %37, 0
  %39 = sext i1 %38 to i16
  %40 = getelementptr inbounds i16, i16* %8, i64 %25
  store i16 %39, i16* %40, align 2
  %41 = add nuw nsw i64 %25, 1
  %42 = icmp eq i64 %41, %22
  br i1 %42, label %23, label %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL24swizzle_bit_to_grayscalePvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = sdiv i32 %5, 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %1, i64 %9
  %11 = srem i32 %5, 8
  %12 = load i8, i8* %10, align 1
  %13 = zext i8 %12 to i32
  %14 = sub nsw i32 7, %11
  %15 = shl i32 1, %14
  %16 = and i32 %15, %13
  %17 = icmp ne i32 %16, 0
  %18 = sext i1 %17 to i8
  store i8 %18, i8* %0, align 1
  %19 = icmp sgt i32 %2, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = zext i32 %2 to i64
  br label %23

22:                                               ; preds = %23, %7
  ret void

23:                                               ; preds = %23, %20
  %24 = phi i64 [ 1, %20 ], [ %40, %23 ]
  %25 = phi i8* [ %10, %20 ], [ %31, %23 ]
  %26 = phi i32 [ %11, %20 ], [ %28, %23 ]
  %27 = add nsw i32 %26, %4
  %28 = srem i32 %27, 8
  %29 = sdiv i32 %27, 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %25, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = sub nsw i32 7, %28
  %35 = shl i32 1, %34
  %36 = and i32 %35, %33
  %37 = icmp ne i32 %36, 0
  %38 = sext i1 %37 to i8
  %39 = getelementptr inbounds i8, i8* %0, i64 %24
  store i8 %38, i8* %39, align 1
  %40 = add nuw nsw i64 %24, 1
  %41 = icmp eq i64 %40, %21
  br i1 %41, label %22, label %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL18swizzle_bit_to_f16PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i64*
  %9 = sdiv i32 %5, 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = srem i32 %5, 8
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i32
  %15 = sub nsw i32 7, %12
  %16 = shl i32 1, %15
  %17 = and i32 %16, %14
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i64 4323455642275676160, i64 4323521613979991040
  store i64 %19, i64* %8, align 8
  %20 = icmp sgt i32 %2, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %7
  %22 = zext i32 %2 to i64
  br label %24

23:                                               ; preds = %24, %7
  ret void

24:                                               ; preds = %24, %21
  %25 = phi i64 [ 1, %21 ], [ %41, %24 ]
  %26 = phi i8* [ %11, %21 ], [ %32, %24 ]
  %27 = phi i32 [ %12, %21 ], [ %29, %24 ]
  %28 = add nsw i32 %27, %4
  %29 = srem i32 %28, 8
  %30 = sdiv i32 %28, 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %26, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = sub nsw i32 7, %29
  %36 = shl i32 1, %35
  %37 = and i32 %36, %34
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i64 4323455642275676160, i64 4323521613979991040
  %40 = getelementptr inbounds i64, i64* %8, i64 %25
  store i64 %39, i64* %40, align 8
  %41 = add nuw nsw i64 %25, 1
  %42 = icmp eq i64 %41, %22
  br i1 %42, label %23, label %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL19swizzle_gray_to_n32PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %33

19:                                               ; preds = %33, %10
  %20 = phi i64 [ 0, %10 ], [ %56, %33 ]
  %21 = phi i8* [ %12, %10 ], [ %55, %33 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = load i8, i8* %21, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = shl nuw nsw i32 %25, 8
  %28 = or i32 %27, %25
  %29 = or i32 %28, %26
  %30 = or i32 %29, -16777216
  %31 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %30, i32* %31, align 4
  br label %32

32:                                               ; preds = %23, %19, %7
  ret void

33:                                               ; preds = %33, %17
  %34 = phi i64 [ 0, %17 ], [ %56, %33 ]
  %35 = phi i8* [ %12, %17 ], [ %55, %33 ]
  %36 = phi i64 [ %18, %17 ], [ %57, %33 ]
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 16
  %40 = shl nuw nsw i32 %38, 8
  %41 = or i32 %40, %38
  %42 = or i32 %41, %39
  %43 = or i32 %42, -16777216
  %44 = getelementptr inbounds i32, i32* %8, i64 %34
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %35, i64 %13
  %46 = or i64 %34, 1
  %47 = load i8, i8* %45, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 16
  %50 = shl nuw nsw i32 %48, 8
  %51 = or i32 %50, %48
  %52 = or i32 %51, %49
  %53 = or i32 %52, -16777216
  %54 = getelementptr inbounds i32, i32* %8, i64 %46
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %45, i64 %13
  %56 = add nuw nsw i64 %34, 2
  %57 = add i64 %36, -2
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %19, label %33
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL24fast_swizzle_gray_to_n32PvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts12gray_to_RGB1E, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  tail call void %8(i32* %9, i8* %11, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL19swizzle_gray_to_565PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %35

19:                                               ; preds = %35, %10
  %20 = phi i64 [ 0, %10 ], [ %62, %35 ]
  %21 = phi i8* [ %12, %10 ], [ %61, %35 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  %24 = load i8, i8* %21, align 1
  %25 = zext i8 %24 to i32
  %26 = lshr i32 %25, 3
  %27 = shl nuw nsw i32 %26, 11
  %28 = lshr i32 %25, 2
  %29 = shl nuw nsw i32 %28, 5
  %30 = or i32 %27, %26
  %31 = or i32 %30, %29
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds i16, i16* %8, i64 %20
  store i16 %32, i16* %33, align 2
  br label %34

34:                                               ; preds = %23, %19, %7
  ret void

35:                                               ; preds = %35, %17
  %36 = phi i64 [ 0, %17 ], [ %62, %35 ]
  %37 = phi i8* [ %12, %17 ], [ %61, %35 ]
  %38 = phi i64 [ %18, %17 ], [ %63, %35 ]
  %39 = load i8, i8* %37, align 1
  %40 = zext i8 %39 to i32
  %41 = lshr i32 %40, 3
  %42 = shl nuw nsw i32 %41, 11
  %43 = lshr i32 %40, 2
  %44 = shl nuw nsw i32 %43, 5
  %45 = or i32 %42, %41
  %46 = or i32 %45, %44
  %47 = trunc i32 %46 to i16
  %48 = getelementptr inbounds i16, i16* %8, i64 %36
  store i16 %47, i16* %48, align 2
  %49 = getelementptr inbounds i8, i8* %37, i64 %13
  %50 = or i64 %36, 1
  %51 = load i8, i8* %49, align 1
  %52 = zext i8 %51 to i32
  %53 = lshr i32 %52, 3
  %54 = shl nuw nsw i32 %53, 11
  %55 = lshr i32 %52, 2
  %56 = shl nuw nsw i32 %55, 5
  %57 = or i32 %54, %53
  %58 = or i32 %57, %56
  %59 = trunc i32 %58 to i16
  %60 = getelementptr inbounds i16, i16* %8, i64 %50
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %49, i64 %13
  %62 = add nuw nsw i64 %36, 2
  %63 = add i64 %38, -2
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %19, label %35
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN10SkSwizzler29SkipLeadingGrayAlphaZerosThenIXadL_ZL31swizzle_grayalpha_to_n32_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 align 2 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %58

9:                                                ; preds = %7
  %10 = bitcast i8* %0 to i32*
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = bitcast i8* %12 to i16*
  %14 = sdiv i32 %4, 2
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %9, %22
  %17 = phi i32* [ %10, %9 ], [ %24, %22 ]
  %18 = phi i16* [ %13, %9 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %9 ], [ %23, %22 ]
  %20 = load i16, i16* %18, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i16, i16* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %58

27:                                               ; preds = %16
  %28 = trunc i16 %20 to i8
  %29 = bitcast i16* %18 to i8*
  %30 = sext i32 %4 to i64
  %31 = zext i32 %19 to i64
  br label %32

32:                                               ; preds = %56, %27
  %33 = phi i8 [ %28, %27 ], [ %57, %56 ]
  %34 = phi i64 [ 0, %27 ], [ %54, %56 ]
  %35 = phi i8* [ %29, %27 ], [ %53, %56 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = zext i8 %33 to i32
  %40 = mul nuw nsw i32 %39, %38
  %41 = add nuw nsw i32 %40, 128
  %42 = lshr i32 %41, 8
  %43 = add nuw nsw i32 %42, %41
  %44 = lshr i32 %43, 8
  %45 = and i32 %44, 255
  %46 = shl nuw i32 %38, 24
  %47 = shl nuw nsw i32 %45, 16
  %48 = shl nuw nsw i32 %45, 8
  %49 = or i32 %45, %46
  %50 = or i32 %49, %47
  %51 = or i32 %50, %48
  %52 = getelementptr inbounds i32, i32* %17, i64 %34
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %35, i64 %30
  %54 = add nuw nsw i64 %34, 1
  %55 = icmp eq i64 %54, %31
  br i1 %55, label %58, label %56

56:                                               ; preds = %32
  %57 = load i8, i8* %53, align 1
  br label %32

58:                                               ; preds = %22, %32, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10SkSwizzler29SkipLeadingGrayAlphaZerosThenIXadL_ZL36fast_swizzle_grayalpha_to_n32_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 align 2 {
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = bitcast i8* %9 to i16*
  %11 = bitcast i8* %0 to i32*
  %12 = icmp sgt i32 %2, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %7
  %14 = sdiv i32 %4, 2
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %13, %22
  %17 = phi i32* [ %11, %13 ], [ %24, %22 ]
  %18 = phi i16* [ %10, %13 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %13 ], [ %23, %22 ]
  %20 = load i16, i16* %18, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i16, i16* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %27

27:                                               ; preds = %16, %22, %7
  %28 = phi i32 [ %2, %7 ], [ %23, %22 ], [ %19, %16 ]
  %29 = phi i16* [ %10, %7 ], [ %25, %22 ], [ %18, %16 ]
  %30 = phi i32* [ %11, %7 ], [ %24, %22 ], [ %17, %16 ]
  %31 = bitcast i16* %29 to i8*
  %32 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts13grayA_to_rgbAE, align 8
  tail call void %32(i32* %30, i8* %31, i32 %28) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL31swizzle_grayalpha_to_n32_premulPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %7
  ret void

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %38, %16 ]
  %18 = phi i8* [ %12, %10 ], [ %37, %16 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = load i8, i8* %18, align 1
  %23 = zext i8 %22 to i32
  %24 = mul nuw nsw i32 %23, %21
  %25 = add nuw nsw i32 %24, 128
  %26 = lshr i32 %25, 8
  %27 = add nuw nsw i32 %26, %25
  %28 = lshr i32 %27, 8
  %29 = and i32 %28, 255
  %30 = shl nuw i32 %21, 24
  %31 = shl nuw nsw i32 %29, 16
  %32 = shl nuw nsw i32 %29, 8
  %33 = or i32 %29, %30
  %34 = or i32 %33, %31
  %35 = or i32 %34, %32
  %36 = getelementptr inbounds i32, i32* %8, i64 %17
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %18, i64 %13
  %38 = add nuw nsw i64 %17, 1
  %39 = icmp eq i64 %38, %14
  br i1 %39, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL36fast_swizzle_grayalpha_to_n32_premulPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts13grayA_to_rgbAE, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  tail call void %8(i32* %9, i8* %11, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN10SkSwizzler29SkipLeadingGrayAlphaZerosThenIXadL_ZL33swizzle_grayalpha_to_n32_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 align 2 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %102

9:                                                ; preds = %7
  %10 = bitcast i8* %0 to i32*
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = bitcast i8* %12 to i16*
  %14 = sdiv i32 %4, 2
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %9, %22
  %17 = phi i32* [ %10, %9 ], [ %24, %22 ]
  %18 = phi i16* [ %13, %9 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %9 ], [ %23, %22 ]
  %20 = load i16, i16* %18, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i16, i16* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %102

27:                                               ; preds = %16
  %28 = bitcast i16* %18 to i8*
  %29 = sext i32 %4 to i64
  %30 = getelementptr inbounds i8, i8* %28, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = and i16 %20, 255
  %34 = zext i16 %33 to i32
  %35 = shl nuw i32 %32, 24
  %36 = shl nuw nsw i32 %34, 16
  %37 = shl i16 %20, 8
  %38 = zext i16 %37 to i32
  %39 = or i32 %35, %34
  %40 = or i32 %39, %36
  %41 = or i32 %40, %38
  store i32 %41, i32* %17, align 4
  %42 = icmp eq i32 %19, 1
  br i1 %42, label %102, label %43

43:                                               ; preds = %27
  %44 = zext i32 %19 to i64
  %45 = add nsw i64 %44, -1
  %46 = and i64 %45, 1
  %47 = icmp eq i32 %19, 2
  br i1 %47, label %84, label %48

48:                                               ; preds = %43
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 1, %48 ], [ %81, %50 ]
  %52 = phi i8* [ %28, %48 ], [ %68, %50 ]
  %53 = phi i64 [ %49, %48 ], [ %82, %50 ]
  %54 = getelementptr inbounds i8, i8* %52, i64 %29
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = zext i8 %55 to i32
  %60 = shl nuw i32 %58, 24
  %61 = shl nuw nsw i32 %59, 16
  %62 = shl nuw nsw i32 %59, 8
  %63 = or i32 %60, %59
  %64 = or i32 %63, %61
  %65 = or i32 %64, %62
  %66 = getelementptr inbounds i32, i32* %17, i64 %51
  store i32 %65, i32* %66, align 4
  %67 = add nuw nsw i64 %51, 1
  %68 = getelementptr inbounds i8, i8* %54, i64 %29
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %68, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = zext i8 %69 to i32
  %74 = shl nuw i32 %72, 24
  %75 = shl nuw nsw i32 %73, 16
  %76 = shl nuw nsw i32 %73, 8
  %77 = or i32 %74, %73
  %78 = or i32 %77, %75
  %79 = or i32 %78, %76
  %80 = getelementptr inbounds i32, i32* %17, i64 %67
  store i32 %79, i32* %80, align 4
  %81 = add nuw nsw i64 %51, 2
  %82 = add i64 %53, -2
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %50

84:                                               ; preds = %50, %43
  %85 = phi i64 [ 1, %43 ], [ %81, %50 ]
  %86 = phi i8* [ %28, %43 ], [ %68, %50 ]
  %87 = icmp eq i64 %46, 0
  br i1 %87, label %102, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds i8, i8* %86, i64 %29
  %90 = load i8, i8* %89, align 1
  %91 = getelementptr inbounds i8, i8* %89, i64 1
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = zext i8 %90 to i32
  %95 = shl nuw i32 %93, 24
  %96 = shl nuw nsw i32 %94, 16
  %97 = shl nuw nsw i32 %94, 8
  %98 = or i32 %95, %94
  %99 = or i32 %98, %96
  %100 = or i32 %99, %97
  %101 = getelementptr inbounds i32, i32* %17, i64 %85
  store i32 %100, i32* %101, align 4
  br label %102

102:                                              ; preds = %22, %88, %84, %27, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10SkSwizzler29SkipLeadingGrayAlphaZerosThenIXadL_ZL38fast_swizzle_grayalpha_to_n32_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 align 2 {
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = bitcast i8* %9 to i16*
  %11 = bitcast i8* %0 to i32*
  %12 = icmp sgt i32 %2, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %7
  %14 = sdiv i32 %4, 2
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %13, %22
  %17 = phi i32* [ %11, %13 ], [ %24, %22 ]
  %18 = phi i16* [ %10, %13 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %13 ], [ %23, %22 ]
  %20 = load i16, i16* %18, align 2
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i16, i16* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %27

27:                                               ; preds = %16, %22, %7
  %28 = phi i32 [ %2, %7 ], [ %23, %22 ], [ %19, %16 ]
  %29 = phi i16* [ %10, %7 ], [ %25, %22 ], [ %18, %16 ]
  %30 = phi i32* [ %11, %7 ], [ %24, %22 ], [ %17, %16 ]
  %31 = bitcast i16* %29 to i8*
  %32 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts13grayA_to_RGBAE, align 8
  tail call void %32(i32* %30, i8* %31, i32 %28) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL33swizzle_grayalpha_to_n32_unpremulPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %36

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %37

19:                                               ; preds = %37, %10
  %20 = phi i64 [ 0, %10 ], [ %68, %37 ]
  %21 = phi i8* [ %12, %10 ], [ %67, %37 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %21, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = load i8, i8* %21, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw i32 %26, 24
  %30 = shl nuw nsw i32 %28, 16
  %31 = shl nuw nsw i32 %28, 8
  %32 = or i32 %29, %28
  %33 = or i32 %32, %30
  %34 = or i32 %33, %31
  %35 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %34, i32* %35, align 4
  br label %36

36:                                               ; preds = %23, %19, %7
  ret void

37:                                               ; preds = %37, %17
  %38 = phi i64 [ 0, %17 ], [ %68, %37 ]
  %39 = phi i8* [ %12, %17 ], [ %67, %37 ]
  %40 = phi i64 [ %18, %17 ], [ %69, %37 ]
  %41 = getelementptr inbounds i8, i8* %39, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = load i8, i8* %39, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw i32 %43, 24
  %47 = shl nuw nsw i32 %45, 16
  %48 = shl nuw nsw i32 %45, 8
  %49 = or i32 %46, %45
  %50 = or i32 %49, %47
  %51 = or i32 %50, %48
  %52 = getelementptr inbounds i32, i32* %8, i64 %38
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %39, i64 %13
  %54 = or i64 %38, 1
  %55 = getelementptr inbounds i8, i8* %53, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = load i8, i8* %53, align 1
  %59 = zext i8 %58 to i32
  %60 = shl nuw i32 %57, 24
  %61 = shl nuw nsw i32 %59, 16
  %62 = shl nuw nsw i32 %59, 8
  %63 = or i32 %60, %59
  %64 = or i32 %63, %61
  %65 = or i32 %64, %62
  %66 = getelementptr inbounds i32, i32* %8, i64 %54
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %53, i64 %13
  %68 = add nuw nsw i64 %38, 2
  %69 = add i64 %40, -2
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %19, label %37
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL38fast_swizzle_grayalpha_to_n32_unpremulPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts13grayA_to_RGBAE, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  tail call void %8(i32* %9, i8* %11, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL23swizzle_grayalpha_to_a8PvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %34

9:                                                ; preds = %7
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = sext i32 %4 to i64
  %13 = zext i32 %2 to i64
  %14 = add nsw i64 %13, -1
  %15 = and i64 %13, 3
  %16 = icmp ult i64 %14, 3
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = sub nsw i64 %13, %15
  br label %35

19:                                               ; preds = %35, %9
  %20 = phi i64 [ 0, %9 ], [ %58, %35 ]
  %21 = phi i8* [ %11, %9 ], [ %57, %35 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %19, %23
  %24 = phi i64 [ %31, %23 ], [ %20, %19 ]
  %25 = phi i8* [ %30, %23 ], [ %21, %19 ]
  %26 = phi i64 [ %32, %23 ], [ %15, %19 ]
  %27 = getelementptr inbounds i8, i8* %25, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds i8, i8* %0, i64 %24
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %25, i64 %12
  %31 = add nuw nsw i64 %24, 1
  %32 = add i64 %26, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %23, !llvm.loop !8

34:                                               ; preds = %19, %23, %7
  ret void

35:                                               ; preds = %35, %17
  %36 = phi i64 [ 0, %17 ], [ %58, %35 ]
  %37 = phi i8* [ %11, %17 ], [ %57, %35 ]
  %38 = phi i64 [ %18, %17 ], [ %59, %35 ]
  %39 = getelementptr inbounds i8, i8* %37, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %0, i64 %36
  store i8 %40, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %37, i64 %12
  %43 = or i64 %36, 1
  %44 = getelementptr inbounds i8, i8* %42, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = getelementptr inbounds i8, i8* %0, i64 %43
  store i8 %45, i8* %46, align 1
  %47 = getelementptr inbounds i8, i8* %42, i64 %12
  %48 = or i64 %36, 2
  %49 = getelementptr inbounds i8, i8* %47, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds i8, i8* %0, i64 %48
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds i8, i8* %47, i64 %12
  %53 = or i64 %36, 3
  %54 = getelementptr inbounds i8, i8* %52, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %0, i64 %53
  store i8 %55, i8* %56, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 %12
  %58 = add nuw nsw i64 %36, 4
  %59 = add i64 %38, -4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %19, label %35
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL26swizzle_small_index_to_n32PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readonly) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = sdiv i32 %5, 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = srem i32 %5, 8
  %13 = load i8, i8* %11, align 1
  %14 = shl nsw i32 -1, %3
  %15 = zext i8 %13 to i32
  %16 = sub nsw i32 8, %3
  %17 = sub nsw i32 %16, %12
  %18 = lshr i32 %15, %17
  %19 = and i32 %14, 255
  %20 = xor i32 %19, 255
  %21 = and i32 %18, %20
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %6, i64 %22
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %8, align 4
  %25 = icmp sgt i32 %2, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %7
  %27 = zext i32 %2 to i64
  br label %29

28:                                               ; preds = %29, %7
  ret void

29:                                               ; preds = %29, %26
  %30 = phi i64 [ 1, %26 ], [ %47, %29 ]
  %31 = phi i8* [ %11, %26 ], [ %37, %29 ]
  %32 = phi i32 [ %12, %26 ], [ %34, %29 ]
  %33 = add nsw i32 %32, %4
  %34 = srem i32 %33, 8
  %35 = sdiv i32 %33, 8
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %31, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = sub nsw i32 %16, %34
  %41 = lshr i32 %39, %40
  %42 = and i32 %41, %20
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %6, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i32, i32* %8, i64 %30
  store i32 %45, i32* %46, align 4
  %47 = add nuw nsw i64 %30, 1
  %48 = icmp eq i64 %47, %27
  br i1 %48, label %28, label %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL26swizzle_small_index_to_565PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readonly) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = sdiv i32 %5, 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = srem i32 %5, 8
  %13 = load i8, i8* %11, align 1
  %14 = shl nsw i32 -1, %3
  %15 = zext i8 %13 to i32
  %16 = sub nsw i32 8, %3
  %17 = sub nsw i32 %16, %12
  %18 = lshr i32 %15, %17
  %19 = and i32 %14, 255
  %20 = xor i32 %19, 255
  %21 = and i32 %18, %20
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %6, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = lshr i32 %24, 8
  %26 = and i32 %25, 63488
  %27 = lshr i32 %24, 5
  %28 = and i32 %27, 2016
  %29 = lshr i32 %24, 3
  %30 = and i32 %29, 31
  %31 = or i32 %26, %28
  %32 = or i32 %31, %30
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %8, align 2
  %34 = icmp sgt i32 %2, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %7
  %36 = zext i32 %2 to i64
  br label %38

37:                                               ; preds = %38, %7
  ret void

38:                                               ; preds = %38, %35
  %39 = phi i64 [ 1, %35 ], [ %65, %38 ]
  %40 = phi i8* [ %11, %35 ], [ %46, %38 ]
  %41 = phi i32 [ %12, %35 ], [ %43, %38 ]
  %42 = add nsw i32 %41, %4
  %43 = srem i32 %42, 8
  %44 = sdiv i32 %42, 8
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %40, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = sub nsw i32 %16, %43
  %50 = lshr i32 %48, %49
  %51 = and i32 %50, %20
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %6, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = lshr i32 %54, 8
  %56 = and i32 %55, 63488
  %57 = lshr i32 %54, 5
  %58 = and i32 %57, 2016
  %59 = lshr i32 %54, 3
  %60 = and i32 %59, 31
  %61 = or i32 %56, %58
  %62 = or i32 %61, %60
  %63 = trunc i32 %62 to i16
  %64 = getelementptr inbounds i16, i16* %8, i64 %39
  store i16 %63, i16* %64, align 2
  %65 = add nuw nsw i64 %39, 1
  %66 = icmp eq i64 %65, %36
  br i1 %66, label %37, label %38
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL26swizzle_index_to_n32_skipZPvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readonly) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %31

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %32

19:                                               ; preds = %53, %10
  %20 = phi i64 [ 0, %10 ], [ %55, %53 ]
  %21 = phi i8* [ %12, %10 ], [ %54, %53 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = load i8, i8* %21, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds i32, i32* %6, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %27, i32* %30, align 4
  br label %31

31:                                               ; preds = %19, %23, %29, %7
  ret void

32:                                               ; preds = %53, %17
  %33 = phi i64 [ 0, %17 ], [ %55, %53 ]
  %34 = phi i8* [ %12, %17 ], [ %54, %53 ]
  %35 = phi i64 [ %18, %17 ], [ %56, %53 ]
  %36 = load i8, i8* %34, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds i32, i32* %6, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds i32, i32* %8, i64 %33
  store i32 %39, i32* %42, align 4
  br label %43

43:                                               ; preds = %32, %41
  %44 = getelementptr inbounds i8, i8* %34, i64 %13
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds i32, i32* %6, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %43
  %51 = or i64 %33, 1
  %52 = getelementptr inbounds i32, i32* %8, i64 %51
  store i32 %48, i32* %52, align 4
  br label %53

53:                                               ; preds = %50, %43
  %54 = getelementptr inbounds i8, i8* %44, i64 %13
  %55 = add nuw nsw i64 %33, 2
  %56 = add i64 %35, -2
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %19, label %32
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL20swizzle_index_to_n32PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readonly) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %37

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = add nsw i64 %14, -1
  %16 = and i64 %14, 3
  %17 = icmp ult i64 %15, 3
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = sub nsw i64 %14, %16
  br label %38

20:                                               ; preds = %38, %10
  %21 = phi i64 [ 0, %10 ], [ %69, %38 ]
  %22 = phi i8* [ %12, %10 ], [ %68, %38 ]
  %23 = icmp eq i64 %16, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %20, %24
  %25 = phi i64 [ %34, %24 ], [ %21, %20 ]
  %26 = phi i8* [ %33, %24 ], [ %22, %20 ]
  %27 = phi i64 [ %35, %24 ], [ %16, %20 ]
  %28 = load i8, i8* %26, align 1
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds i32, i32* %6, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i32, i32* %8, i64 %25
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %26, i64 %13
  %34 = add nuw nsw i64 %25, 1
  %35 = add i64 %27, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %24, !llvm.loop !9

37:                                               ; preds = %20, %24, %7
  ret void

38:                                               ; preds = %38, %18
  %39 = phi i64 [ 0, %18 ], [ %69, %38 ]
  %40 = phi i8* [ %12, %18 ], [ %68, %38 ]
  %41 = phi i64 [ %19, %18 ], [ %70, %38 ]
  %42 = load i8, i8* %40, align 1
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds i32, i32* %6, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i32, i32* %8, i64 %39
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %40, i64 %13
  %48 = or i64 %39, 1
  %49 = load i8, i8* %47, align 1
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds i32, i32* %6, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds i32, i32* %8, i64 %48
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %47, i64 %13
  %55 = or i64 %39, 2
  %56 = load i8, i8* %54, align 1
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds i32, i32* %6, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds i32, i32* %8, i64 %55
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds i8, i8* %54, i64 %13
  %62 = or i64 %39, 3
  %63 = load i8, i8* %61, align 1
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds i32, i32* %6, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds i32, i32* %8, i64 %62
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %61, i64 %13
  %69 = add nuw nsw i64 %39, 4
  %70 = add i64 %41, -4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %20, label %38
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL20swizzle_index_to_565PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readonly) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %39

19:                                               ; preds = %39, %10
  %20 = phi i64 [ 0, %10 ], [ %74, %39 ]
  %21 = phi i8* [ %12, %10 ], [ %73, %39 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %19
  %24 = load i8, i8* %21, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds i32, i32* %6, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = lshr i32 %27, 8
  %29 = and i32 %28, 63488
  %30 = lshr i32 %27, 5
  %31 = and i32 %30, 2016
  %32 = lshr i32 %27, 3
  %33 = and i32 %32, 31
  %34 = or i32 %29, %31
  %35 = or i32 %34, %33
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds i16, i16* %8, i64 %20
  store i16 %36, i16* %37, align 2
  br label %38

38:                                               ; preds = %23, %19, %7
  ret void

39:                                               ; preds = %39, %17
  %40 = phi i64 [ 0, %17 ], [ %74, %39 ]
  %41 = phi i8* [ %12, %17 ], [ %73, %39 ]
  %42 = phi i64 [ %18, %17 ], [ %75, %39 ]
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds i32, i32* %6, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = lshr i32 %46, 8
  %48 = and i32 %47, 63488
  %49 = lshr i32 %46, 5
  %50 = and i32 %49, 2016
  %51 = lshr i32 %46, 3
  %52 = and i32 %51, 31
  %53 = or i32 %48, %50
  %54 = or i32 %53, %52
  %55 = trunc i32 %54 to i16
  %56 = getelementptr inbounds i16, i16* %8, i64 %40
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %41, i64 %13
  %58 = or i64 %40, 1
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds i32, i32* %6, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = lshr i32 %62, 8
  %64 = and i32 %63, 63488
  %65 = lshr i32 %62, 5
  %66 = and i32 %65, 2016
  %67 = lshr i32 %62, 3
  %68 = and i32 %67, 31
  %69 = or i32 %64, %66
  %70 = or i32 %69, %68
  %71 = trunc i32 %70 to i16
  %72 = getelementptr inbounds i16, i16* %8, i64 %58
  store i16 %71, i16* %72, align 2
  %73 = getelementptr inbounds i8, i8* %57, i64 %13
  %74 = add nuw nsw i64 %40, 2
  %75 = add i64 %42, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %19, label %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL21swizzle_rgb16_to_rgbaPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %39

19:                                               ; preds = %39, %10
  %20 = phi i64 [ 0, %10 ], [ %74, %39 ]
  %21 = phi i8* [ %12, %10 ], [ %73, %39 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %21, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 16
  %28 = getelementptr inbounds i8, i8* %21, i64 2
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = load i8, i8* %21, align 1
  %33 = zext i8 %32 to i32
  %34 = or i32 %27, %31
  %35 = or i32 %34, %33
  %36 = or i32 %35, -16777216
  %37 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %36, i32* %37, align 4
  br label %38

38:                                               ; preds = %23, %19, %7
  ret void

39:                                               ; preds = %39, %17
  %40 = phi i64 [ 0, %17 ], [ %74, %39 ]
  %41 = phi i8* [ %12, %17 ], [ %73, %39 ]
  %42 = phi i64 [ %18, %17 ], [ %75, %39 ]
  %43 = getelementptr inbounds i8, i8* %41, i64 4
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 16
  %47 = getelementptr inbounds i8, i8* %41, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = load i8, i8* %41, align 1
  %52 = zext i8 %51 to i32
  %53 = or i32 %46, %50
  %54 = or i32 %53, %52
  %55 = or i32 %54, -16777216
  %56 = getelementptr inbounds i32, i32* %8, i64 %40
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %41, i64 %13
  %58 = or i64 %40, 1
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 16
  %63 = getelementptr inbounds i8, i8* %57, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = load i8, i8* %57, align 1
  %68 = zext i8 %67 to i32
  %69 = or i32 %62, %66
  %70 = or i32 %69, %68
  %71 = or i32 %70, -16777216
  %72 = getelementptr inbounds i32, i32* %8, i64 %58
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %57, i64 %13
  %74 = add nuw nsw i64 %40, 2
  %75 = add i64 %42, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %19, label %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL19swizzle_rgb_to_rgbaPvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %39

19:                                               ; preds = %39, %10
  %20 = phi i64 [ 0, %10 ], [ %74, %39 ]
  %21 = phi i8* [ %12, %10 ], [ %73, %39 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %19
  %24 = load i8, i8* %21, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %21, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %21, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %28, 8
  %33 = shl nuw nsw i32 %31, 16
  %34 = or i32 %32, %25
  %35 = or i32 %34, %33
  %36 = or i32 %35, -16777216
  %37 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %36, i32* %37, align 4
  br label %38

38:                                               ; preds = %23, %19, %7
  ret void

39:                                               ; preds = %39, %17
  %40 = phi i64 [ 0, %17 ], [ %74, %39 ]
  %41 = phi i8* [ %12, %17 ], [ %73, %39 ]
  %42 = phi i64 [ %18, %17 ], [ %75, %39 ]
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i32
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds i8, i8* %41, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %47, 8
  %52 = shl nuw nsw i32 %50, 16
  %53 = or i32 %51, %44
  %54 = or i32 %53, %52
  %55 = or i32 %54, -16777216
  %56 = getelementptr inbounds i32, i32* %8, i64 %40
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %41, i64 %13
  %58 = or i64 %40, 1
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds i8, i8* %57, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds i8, i8* %57, i64 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %63, 8
  %68 = shl nuw nsw i32 %66, 16
  %69 = or i32 %67, %60
  %70 = or i32 %69, %68
  %71 = or i32 %70, -16777216
  %72 = getelementptr inbounds i32, i32* %8, i64 %58
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %57, i64 %13
  %74 = add nuw nsw i64 %40, 2
  %75 = add i64 %42, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %19, label %39
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL24fast_swizzle_rgb_to_rgbaPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts11RGB_to_RGB1E, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  tail call void %8(i32* %9, i8* %11, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL21swizzle_rgb16_to_bgraPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %39

19:                                               ; preds = %39, %10
  %20 = phi i64 [ 0, %10 ], [ %74, %39 ]
  %21 = phi i8* [ %12, %10 ], [ %73, %39 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %19
  %24 = load i8, i8* %21, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = getelementptr inbounds i8, i8* %21, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 8
  %31 = getelementptr inbounds i8, i8* %21, i64 4
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = or i32 %26, %30
  %35 = or i32 %34, %33
  %36 = or i32 %35, -16777216
  %37 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %36, i32* %37, align 4
  br label %38

38:                                               ; preds = %23, %19, %7
  ret void

39:                                               ; preds = %39, %17
  %40 = phi i64 [ 0, %17 ], [ %74, %39 ]
  %41 = phi i8* [ %12, %17 ], [ %73, %39 ]
  %42 = phi i64 [ %18, %17 ], [ %75, %39 ]
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 16
  %46 = getelementptr inbounds i8, i8* %41, i64 2
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = getelementptr inbounds i8, i8* %41, i64 4
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = or i32 %45, %49
  %54 = or i32 %53, %52
  %55 = or i32 %54, -16777216
  %56 = getelementptr inbounds i32, i32* %8, i64 %40
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %41, i64 %13
  %58 = or i64 %40, 1
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 16
  %62 = getelementptr inbounds i8, i8* %57, i64 2
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw nsw i32 %64, 8
  %66 = getelementptr inbounds i8, i8* %57, i64 4
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = or i32 %61, %65
  %70 = or i32 %69, %68
  %71 = or i32 %70, -16777216
  %72 = getelementptr inbounds i32, i32* %8, i64 %58
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %57, i64 %13
  %74 = add nuw nsw i64 %40, 2
  %75 = add i64 %42, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %19, label %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL19swizzle_rgb_to_bgraPvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %39

19:                                               ; preds = %39, %10
  %20 = phi i64 [ 0, %10 ], [ %74, %39 ]
  %21 = phi i8* [ %12, %10 ], [ %73, %39 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %19
  %24 = load i8, i8* %21, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %21, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %21, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %25, 16
  %33 = shl nuw nsw i32 %28, 8
  %34 = or i32 %32, %33
  %35 = or i32 %34, %31
  %36 = or i32 %35, -16777216
  %37 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %36, i32* %37, align 4
  br label %38

38:                                               ; preds = %23, %19, %7
  ret void

39:                                               ; preds = %39, %17
  %40 = phi i64 [ 0, %17 ], [ %74, %39 ]
  %41 = phi i8* [ %12, %17 ], [ %73, %39 ]
  %42 = phi i64 [ %18, %17 ], [ %75, %39 ]
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i32
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds i8, i8* %41, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %44, 16
  %52 = shl nuw nsw i32 %47, 8
  %53 = or i32 %51, %52
  %54 = or i32 %53, %50
  %55 = or i32 %54, -16777216
  %56 = getelementptr inbounds i32, i32* %8, i64 %40
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %41, i64 %13
  %58 = or i64 %40, 1
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds i8, i8* %57, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds i8, i8* %57, i64 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %60, 16
  %68 = shl nuw nsw i32 %63, 8
  %69 = or i32 %67, %68
  %70 = or i32 %69, %66
  %71 = or i32 %70, -16777216
  %72 = getelementptr inbounds i32, i32* %8, i64 %58
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %57, i64 %13
  %74 = add nuw nsw i64 %40, 2
  %75 = add i64 %42, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %19, label %39
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL24fast_swizzle_rgb_to_bgraPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts11RGB_to_BGR1E, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  tail call void %8(i32* %9, i8* %11, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL20swizzle_rgb16_to_565PvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %7
  ret void

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %36, %16 ]
  %18 = phi i8* [ %12, %10 ], [ %35, %16 ]
  %19 = load i8, i8* %18, align 1
  %20 = getelementptr inbounds i8, i8* %18, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = load i8, i8* %22, align 1
  %24 = lshr i8 %19, 3
  %25 = zext i8 %24 to i16
  %26 = shl nuw i16 %25, 11
  %27 = lshr i8 %21, 2
  %28 = zext i8 %27 to i16
  %29 = shl nuw nsw i16 %28, 5
  %30 = or i16 %29, %26
  %31 = lshr i8 %23, 3
  %32 = zext i8 %31 to i16
  %33 = or i16 %30, %32
  %34 = getelementptr inbounds i16, i16* %8, i64 %17
  store i16 %33, i16* %34, align 2
  %35 = getelementptr inbounds i8, i8* %18, i64 %13
  %36 = add nuw nsw i64 %17, 1
  %37 = icmp eq i64 %36, %14
  br i1 %37, label %15, label %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL18swizzle_rgb_to_565PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %7
  ret void

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %36, %16 ]
  %18 = phi i8* [ %12, %10 ], [ %35, %16 ]
  %19 = load i8, i8* %18, align 1
  %20 = getelementptr inbounds i8, i8* %18, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %18, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = lshr i8 %19, 3
  %25 = zext i8 %24 to i16
  %26 = shl nuw i16 %25, 11
  %27 = lshr i8 %21, 2
  %28 = zext i8 %27 to i16
  %29 = shl nuw nsw i16 %28, 5
  %30 = or i16 %29, %26
  %31 = lshr i8 %23, 3
  %32 = zext i8 %31 to i16
  %33 = or i16 %30, %32
  %34 = getelementptr inbounds i16, i16* %8, i64 %17
  store i16 %33, i16* %34, align 2
  %35 = getelementptr inbounds i8, i8* %18, i64 %13
  %36 = add nuw nsw i64 %17, 1
  %37 = icmp eq i64 %36, %14
  br i1 %37, label %15, label %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL29swizzle_rgba16_to_rgba_premulPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %47, %7
  ret void

16:                                               ; preds = %47, %10
  %17 = phi i64 [ 0, %10 ], [ %59, %47 ]
  %18 = phi i8* [ %12, %10 ], [ %58, %47 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 6
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = load i8, i8* %18, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %18, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %18, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i8 %20, -1
  br i1 %30, label %47, label %31

31:                                               ; preds = %16
  %32 = mul nuw nsw i32 %23, %21
  %33 = add nuw nsw i32 %32, 128
  %34 = lshr i32 %33, 8
  %35 = add nuw nsw i32 %34, %33
  %36 = lshr i32 %35, 8
  %37 = mul nuw nsw i32 %26, %21
  %38 = add nuw nsw i32 %37, 128
  %39 = lshr i32 %38, 8
  %40 = add nuw nsw i32 %39, %38
  %41 = lshr i32 %40, 8
  %42 = mul nuw nsw i32 %29, %21
  %43 = add nuw nsw i32 %42, 128
  %44 = lshr i32 %43, 8
  %45 = add nuw nsw i32 %44, %43
  %46 = lshr i32 %45, 8
  br label %47

47:                                               ; preds = %16, %31
  %48 = phi i32 [ %36, %31 ], [ %23, %16 ]
  %49 = phi i32 [ %41, %31 ], [ %26, %16 ]
  %50 = phi i32 [ %46, %31 ], [ %29, %16 ]
  %51 = shl nuw i32 %21, 24
  %52 = or i32 %48, %51
  %53 = shl nuw nsw i32 %49, 8
  %54 = or i32 %52, %53
  %55 = shl i32 %50, 16
  %56 = or i32 %54, %55
  %57 = getelementptr inbounds i32, i32* %8, i64 %17
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %18, i64 %13
  %59 = add nuw nsw i64 %17, 1
  %60 = icmp eq i64 %59, %14
  br i1 %60, label %15, label %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL31swizzle_rgba16_to_rgba_unpremulPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %42

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %43

19:                                               ; preds = %43, %10
  %20 = phi i64 [ 0, %10 ], [ %86, %43 ]
  %21 = phi i8* [ %12, %10 ], [ %85, %43 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %21, i64 6
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds i8, i8* %21, i64 4
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds i8, i8* %21, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = load i8, i8* %21, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %37, %39
  %41 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %40, i32* %41, align 4
  br label %42

42:                                               ; preds = %23, %19, %7
  ret void

43:                                               ; preds = %43, %17
  %44 = phi i64 [ 0, %17 ], [ %86, %43 ]
  %45 = phi i8* [ %12, %17 ], [ %85, %43 ]
  %46 = phi i64 [ %18, %17 ], [ %87, %43 ]
  %47 = getelementptr inbounds i8, i8* %45, i64 6
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw i32 %49, 24
  %51 = getelementptr inbounds i8, i8* %45, i64 4
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 16
  %55 = or i32 %54, %50
  %56 = getelementptr inbounds i8, i8* %45, i64 2
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 8
  %60 = or i32 %55, %59
  %61 = load i8, i8* %45, align 1
  %62 = zext i8 %61 to i32
  %63 = or i32 %60, %62
  %64 = getelementptr inbounds i32, i32* %8, i64 %44
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %45, i64 %13
  %66 = or i64 %44, 1
  %67 = getelementptr inbounds i8, i8* %65, i64 6
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl nuw i32 %69, 24
  %71 = getelementptr inbounds i8, i8* %65, i64 4
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 16
  %75 = or i32 %74, %70
  %76 = getelementptr inbounds i8, i8* %65, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 8
  %80 = or i32 %75, %79
  %81 = load i8, i8* %65, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %80, %82
  %84 = getelementptr inbounds i32, i32* %8, i64 %66
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %65, i64 %13
  %86 = add nuw nsw i64 %44, 2
  %87 = add i64 %46, -2
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %19, label %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 align 2 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %79

9:                                                ; preds = %7
  %10 = bitcast i8* %0 to i32*
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = bitcast i8* %12 to i32*
  %14 = sdiv i32 %4, 4
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %9, %22
  %17 = phi i32* [ %10, %9 ], [ %24, %22 ]
  %18 = phi i32* [ %13, %9 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %9 ], [ %23, %22 ]
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i32, i32* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %79

27:                                               ; preds = %16
  %28 = trunc i32 %20 to i8
  %29 = bitcast i32* %18 to i8*
  %30 = sext i32 %4 to i64
  %31 = zext i32 %19 to i64
  br label %32

32:                                               ; preds = %77, %27
  %33 = phi i8 [ %28, %27 ], [ %78, %77 ]
  %34 = phi i64 [ 0, %27 ], [ %75, %77 ]
  %35 = phi i8* [ %29, %27 ], [ %74, %77 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 3
  %37 = load i8, i8* %36, align 1, !alias.scope !10, !noalias !13
  %38 = zext i8 %37 to i32
  %39 = zext i8 %33 to i32
  %40 = getelementptr inbounds i8, i8* %35, i64 1
  %41 = load i8, i8* %40, align 1, !alias.scope !10, !noalias !13
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i8, i8* %35, i64 2
  %44 = load i8, i8* %43, align 1, !alias.scope !10, !noalias !13
  %45 = zext i8 %44 to i32
  %46 = icmp eq i8 %37, -1
  br i1 %46, label %63, label %47

47:                                               ; preds = %32
  %48 = mul nuw nsw i32 %39, %38
  %49 = add nuw nsw i32 %48, 128
  %50 = lshr i32 %49, 8
  %51 = add nuw nsw i32 %50, %49
  %52 = lshr i32 %51, 8
  %53 = mul nuw nsw i32 %42, %38
  %54 = add nuw nsw i32 %53, 128
  %55 = lshr i32 %54, 8
  %56 = add nuw nsw i32 %55, %54
  %57 = lshr i32 %56, 8
  %58 = mul nuw nsw i32 %45, %38
  %59 = add nuw nsw i32 %58, 128
  %60 = lshr i32 %59, 8
  %61 = add nuw nsw i32 %60, %59
  %62 = lshr i32 %61, 8
  br label %63

63:                                               ; preds = %47, %32
  %64 = phi i32 [ %52, %47 ], [ %39, %32 ]
  %65 = phi i32 [ %57, %47 ], [ %42, %32 ]
  %66 = phi i32 [ %62, %47 ], [ %45, %32 ]
  %67 = shl nuw i32 %38, 24
  %68 = or i32 %64, %67
  %69 = shl nuw nsw i32 %65, 8
  %70 = or i32 %68, %69
  %71 = shl i32 %66, 16
  %72 = or i32 %70, %71
  %73 = getelementptr inbounds i32, i32* %17, i64 %34
  store i32 %72, i32* %73, align 4, !alias.scope !13, !noalias !10
  %74 = getelementptr inbounds i8, i8* %35, i64 %30
  %75 = add nuw nsw i64 %34, 1
  %76 = icmp eq i64 %75, %31
  br i1 %76, label %79, label %77

77:                                               ; preds = %63
  %78 = load i8, i8* %74, align 1, !alias.scope !10, !noalias !13
  br label %32

79:                                               ; preds = %22, %63, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL32fast_swizzle_rgba_to_rgba_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* noalias, i8* noalias, i32, i32, i32, i32, i32* nocapture readnone) #0 align 2 {
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = bitcast i8* %9 to i32*
  %11 = bitcast i8* %0 to i32*
  %12 = icmp sgt i32 %2, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %7
  %14 = sdiv i32 %4, 4
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %13, %22
  %17 = phi i32* [ %11, %13 ], [ %24, %22 ]
  %18 = phi i32* [ %10, %13 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %13 ], [ %23, %22 ]
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i32, i32* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %27

27:                                               ; preds = %16, %22, %7
  %28 = phi i32 [ %2, %7 ], [ %23, %22 ], [ %19, %16 ]
  %29 = phi i32* [ %10, %7 ], [ %25, %22 ], [ %18, %16 ]
  %30 = phi i32* [ %11, %7 ], [ %24, %22 ], [ %17, %16 ]
  %31 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** @_ZN6SkOpts12RGBA_to_rgbAE, align 8
  tail call void %31(i32* %30, i32* %29, i32 %28) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %47, %7
  ret void

16:                                               ; preds = %47, %10
  %17 = phi i64 [ 0, %10 ], [ %59, %47 ]
  %18 = phi i8* [ %12, %10 ], [ %58, %47 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = load i8, i8* %18, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %18, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %18, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i8 %20, -1
  br i1 %30, label %47, label %31

31:                                               ; preds = %16
  %32 = mul nuw nsw i32 %23, %21
  %33 = add nuw nsw i32 %32, 128
  %34 = lshr i32 %33, 8
  %35 = add nuw nsw i32 %34, %33
  %36 = lshr i32 %35, 8
  %37 = mul nuw nsw i32 %26, %21
  %38 = add nuw nsw i32 %37, 128
  %39 = lshr i32 %38, 8
  %40 = add nuw nsw i32 %39, %38
  %41 = lshr i32 %40, 8
  %42 = mul nuw nsw i32 %29, %21
  %43 = add nuw nsw i32 %42, 128
  %44 = lshr i32 %43, 8
  %45 = add nuw nsw i32 %44, %43
  %46 = lshr i32 %45, 8
  br label %47

47:                                               ; preds = %16, %31
  %48 = phi i32 [ %36, %31 ], [ %23, %16 ]
  %49 = phi i32 [ %41, %31 ], [ %26, %16 ]
  %50 = phi i32 [ %46, %31 ], [ %29, %16 ]
  %51 = shl nuw i32 %21, 24
  %52 = or i32 %48, %51
  %53 = shl nuw nsw i32 %49, 8
  %54 = or i32 %52, %53
  %55 = shl i32 %50, 16
  %56 = or i32 %54, %55
  %57 = getelementptr inbounds i32, i32* %8, i64 %17
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %18, i64 %13
  %59 = add nuw nsw i64 %17, 1
  %60 = icmp eq i64 %59, %14
  br i1 %60, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL32fast_swizzle_rgba_to_rgba_premulPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** @_ZN6SkOpts12RGBA_to_rgbAE, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = bitcast i8* %11 to i32*
  tail call void %8(i32* %9, i32* %12, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL7sample4PvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 align 2 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %77

9:                                                ; preds = %7
  %10 = bitcast i8* %0 to i32*
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = bitcast i8* %12 to i32*
  %14 = sdiv i32 %4, 4
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %9, %22
  %17 = phi i32* [ %10, %9 ], [ %24, %22 ]
  %18 = phi i32* [ %13, %9 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %9 ], [ %23, %22 ]
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i32, i32* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %77

27:                                               ; preds = %16
  %28 = bitcast i32* %18 to i8*
  %29 = sext i32 %4 to i64
  %30 = zext i32 %19 to i64
  %31 = add nsw i64 %30, -1
  %32 = and i64 %30, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %62, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %30, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %59, %36 ]
  %38 = phi i8* [ %28, %34 ], [ %58, %36 ]
  %39 = phi i64 [ %35, %34 ], [ %60, %36 ]
  %40 = bitcast i8* %38 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds i32, i32* %17, i64 %37
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %38, i64 %29
  %44 = or i64 %37, 1
  %45 = bitcast i8* %43 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds i32, i32* %17, i64 %44
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %43, i64 %29
  %49 = or i64 %37, 2
  %50 = bitcast i8* %48 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i32, i32* %17, i64 %49
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %48, i64 %29
  %54 = or i64 %37, 3
  %55 = bitcast i8* %53 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds i32, i32* %17, i64 %54
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %53, i64 %29
  %59 = add nuw nsw i64 %37, 4
  %60 = add i64 %39, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %36

62:                                               ; preds = %36, %27
  %63 = phi i64 [ 0, %27 ], [ %59, %36 ]
  %64 = phi i8* [ %28, %27 ], [ %58, %36 ]
  %65 = icmp eq i64 %32, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %62, %66
  %67 = phi i64 [ %74, %66 ], [ %63, %62 ]
  %68 = phi i8* [ %73, %66 ], [ %64, %62 ]
  %69 = phi i64 [ %75, %66 ], [ %32, %62 ]
  %70 = bitcast i8* %68 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds i32, i32* %17, i64 %67
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %68, i64 %29
  %74 = add nuw nsw i64 %67, 1
  %75 = add i64 %69, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %66, !llvm.loop !15

77:                                               ; preds = %22, %62, %66, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL4copyPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #0 align 2 {
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = bitcast i8* %9 to i32*
  %11 = bitcast i8* %0 to i32*
  %12 = icmp sgt i32 %2, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %7
  %14 = sdiv i32 %4, 4
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %13, %22
  %17 = phi i32* [ %11, %13 ], [ %24, %22 ]
  %18 = phi i32* [ %10, %13 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %13 ], [ %23, %22 ]
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i32, i32* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %27

27:                                               ; preds = %16, %22, %7
  %28 = phi i32 [ %2, %7 ], [ %23, %22 ], [ %19, %16 ]
  %29 = phi i32* [ %10, %7 ], [ %25, %22 ], [ %18, %16 ]
  %30 = phi i32* [ %11, %7 ], [ %24, %22 ], [ %17, %16 ]
  %31 = bitcast i32* %30 to i8*
  %32 = bitcast i32* %29 to i8*
  %33 = mul nsw i32 %28, %3
  %34 = sext i32 %33 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %32, i64 %34, i1 false) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL29swizzle_rgba16_to_bgra_premulPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %47, %7
  ret void

16:                                               ; preds = %47, %10
  %17 = phi i64 [ 0, %10 ], [ %59, %47 ]
  %18 = phi i8* [ %12, %10 ], [ %58, %47 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 6
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = load i8, i8* %18, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %18, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %18, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i8 %20, -1
  br i1 %30, label %47, label %31

31:                                               ; preds = %16
  %32 = mul nuw nsw i32 %23, %21
  %33 = add nuw nsw i32 %32, 128
  %34 = lshr i32 %33, 8
  %35 = add nuw nsw i32 %34, %33
  %36 = lshr i32 %35, 8
  %37 = mul nuw nsw i32 %26, %21
  %38 = add nuw nsw i32 %37, 128
  %39 = lshr i32 %38, 8
  %40 = add nuw nsw i32 %39, %38
  %41 = lshr i32 %40, 8
  %42 = mul nuw nsw i32 %29, %21
  %43 = add nuw nsw i32 %42, 128
  %44 = lshr i32 %43, 8
  %45 = add nuw nsw i32 %44, %43
  %46 = lshr i32 %45, 8
  br label %47

47:                                               ; preds = %16, %31
  %48 = phi i32 [ %36, %31 ], [ %23, %16 ]
  %49 = phi i32 [ %41, %31 ], [ %26, %16 ]
  %50 = phi i32 [ %46, %31 ], [ %29, %16 ]
  %51 = shl nuw i32 %21, 24
  %52 = shl i32 %48, 16
  %53 = or i32 %52, %51
  %54 = shl nuw nsw i32 %49, 8
  %55 = or i32 %53, %54
  %56 = or i32 %55, %50
  %57 = getelementptr inbounds i32, i32* %8, i64 %17
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %18, i64 %13
  %59 = add nuw nsw i64 %17, 1
  %60 = icmp eq i64 %59, %14
  br i1 %60, label %15, label %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL31swizzle_rgba16_to_bgra_unpremulPvPKhiiiiPKj(i8* nocapture, i8* nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %42

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %43

19:                                               ; preds = %43, %10
  %20 = phi i64 [ 0, %10 ], [ %86, %43 ]
  %21 = phi i8* [ %12, %10 ], [ %85, %43 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %21, i64 6
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = load i8, i8* %21, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %27
  %32 = getelementptr inbounds i8, i8* %21, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds i8, i8* %21, i64 4
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %40, i32* %41, align 4
  br label %42

42:                                               ; preds = %23, %19, %7
  ret void

43:                                               ; preds = %43, %17
  %44 = phi i64 [ 0, %17 ], [ %86, %43 ]
  %45 = phi i8* [ %12, %17 ], [ %85, %43 ]
  %46 = phi i64 [ %18, %17 ], [ %87, %43 ]
  %47 = getelementptr inbounds i8, i8* %45, i64 6
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw i32 %49, 24
  %51 = load i8, i8* %45, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 16
  %54 = or i32 %53, %50
  %55 = getelementptr inbounds i8, i8* %45, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 8
  %59 = or i32 %54, %58
  %60 = getelementptr inbounds i8, i8* %45, i64 4
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = or i32 %59, %62
  %64 = getelementptr inbounds i32, i32* %8, i64 %44
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %45, i64 %13
  %66 = or i64 %44, 1
  %67 = getelementptr inbounds i8, i8* %65, i64 6
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl nuw i32 %69, 24
  %71 = load i8, i8* %65, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 16
  %74 = or i32 %73, %70
  %75 = getelementptr inbounds i8, i8* %65, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds i8, i8* %65, i64 4
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %79, %82
  %84 = getelementptr inbounds i32, i32* %8, i64 %66
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %65, i64 %13
  %86 = add nuw nsw i64 %44, 2
  %87 = add i64 %46, -2
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %19, label %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 align 2 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %79

9:                                                ; preds = %7
  %10 = bitcast i8* %0 to i32*
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = bitcast i8* %12 to i32*
  %14 = sdiv i32 %4, 4
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %9, %22
  %17 = phi i32* [ %10, %9 ], [ %24, %22 ]
  %18 = phi i32* [ %13, %9 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %9 ], [ %23, %22 ]
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i32, i32* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %79

27:                                               ; preds = %16
  %28 = trunc i32 %20 to i8
  %29 = bitcast i32* %18 to i8*
  %30 = sext i32 %4 to i64
  %31 = zext i32 %19 to i64
  br label %32

32:                                               ; preds = %77, %27
  %33 = phi i8 [ %28, %27 ], [ %78, %77 ]
  %34 = phi i64 [ 0, %27 ], [ %75, %77 ]
  %35 = phi i8* [ %29, %27 ], [ %74, %77 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 3
  %37 = load i8, i8* %36, align 1, !alias.scope !16, !noalias !19
  %38 = zext i8 %37 to i32
  %39 = zext i8 %33 to i32
  %40 = getelementptr inbounds i8, i8* %35, i64 1
  %41 = load i8, i8* %40, align 1, !alias.scope !16, !noalias !19
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i8, i8* %35, i64 2
  %44 = load i8, i8* %43, align 1, !alias.scope !16, !noalias !19
  %45 = zext i8 %44 to i32
  %46 = icmp eq i8 %37, -1
  br i1 %46, label %63, label %47

47:                                               ; preds = %32
  %48 = mul nuw nsw i32 %39, %38
  %49 = add nuw nsw i32 %48, 128
  %50 = lshr i32 %49, 8
  %51 = add nuw nsw i32 %50, %49
  %52 = lshr i32 %51, 8
  %53 = mul nuw nsw i32 %42, %38
  %54 = add nuw nsw i32 %53, 128
  %55 = lshr i32 %54, 8
  %56 = add nuw nsw i32 %55, %54
  %57 = lshr i32 %56, 8
  %58 = mul nuw nsw i32 %45, %38
  %59 = add nuw nsw i32 %58, 128
  %60 = lshr i32 %59, 8
  %61 = add nuw nsw i32 %60, %59
  %62 = lshr i32 %61, 8
  br label %63

63:                                               ; preds = %47, %32
  %64 = phi i32 [ %52, %47 ], [ %39, %32 ]
  %65 = phi i32 [ %57, %47 ], [ %42, %32 ]
  %66 = phi i32 [ %62, %47 ], [ %45, %32 ]
  %67 = shl nuw i32 %38, 24
  %68 = shl i32 %64, 16
  %69 = or i32 %68, %67
  %70 = shl nuw nsw i32 %65, 8
  %71 = or i32 %69, %70
  %72 = or i32 %71, %66
  %73 = getelementptr inbounds i32, i32* %17, i64 %34
  store i32 %72, i32* %73, align 4, !alias.scope !19, !noalias !16
  %74 = getelementptr inbounds i8, i8* %35, i64 %30
  %75 = add nuw nsw i64 %34, 1
  %76 = icmp eq i64 %75, %31
  br i1 %76, label %79, label %77

77:                                               ; preds = %63
  %78 = load i8, i8* %74, align 1, !alias.scope !16, !noalias !19
  br label %32

79:                                               ; preds = %22, %63, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL32fast_swizzle_rgba_to_bgra_premulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* noalias, i8* noalias, i32, i32, i32, i32, i32* nocapture readnone) #0 align 2 {
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = bitcast i8* %9 to i32*
  %11 = bitcast i8* %0 to i32*
  %12 = icmp sgt i32 %2, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %7
  %14 = sdiv i32 %4, 4
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %13, %22
  %17 = phi i32* [ %11, %13 ], [ %24, %22 ]
  %18 = phi i32* [ %10, %13 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %13 ], [ %23, %22 ]
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i32, i32* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %27

27:                                               ; preds = %16, %22, %7
  %28 = phi i32 [ %2, %7 ], [ %23, %22 ], [ %19, %16 ]
  %29 = phi i32* [ %10, %7 ], [ %25, %22 ], [ %18, %16 ]
  %30 = phi i32* [ %11, %7 ], [ %24, %22 ], [ %17, %16 ]
  %31 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** @_ZN6SkOpts12RGBA_to_bgrAE, align 8
  tail call void %31(i32* %30, i32* %29, i32 %28) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %47, %7
  ret void

16:                                               ; preds = %47, %10
  %17 = phi i64 [ 0, %10 ], [ %59, %47 ]
  %18 = phi i8* [ %12, %10 ], [ %58, %47 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = load i8, i8* %18, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %18, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %18, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i8 %20, -1
  br i1 %30, label %47, label %31

31:                                               ; preds = %16
  %32 = mul nuw nsw i32 %23, %21
  %33 = add nuw nsw i32 %32, 128
  %34 = lshr i32 %33, 8
  %35 = add nuw nsw i32 %34, %33
  %36 = lshr i32 %35, 8
  %37 = mul nuw nsw i32 %26, %21
  %38 = add nuw nsw i32 %37, 128
  %39 = lshr i32 %38, 8
  %40 = add nuw nsw i32 %39, %38
  %41 = lshr i32 %40, 8
  %42 = mul nuw nsw i32 %29, %21
  %43 = add nuw nsw i32 %42, 128
  %44 = lshr i32 %43, 8
  %45 = add nuw nsw i32 %44, %43
  %46 = lshr i32 %45, 8
  br label %47

47:                                               ; preds = %16, %31
  %48 = phi i32 [ %36, %31 ], [ %23, %16 ]
  %49 = phi i32 [ %41, %31 ], [ %26, %16 ]
  %50 = phi i32 [ %46, %31 ], [ %29, %16 ]
  %51 = shl nuw i32 %21, 24
  %52 = shl i32 %48, 16
  %53 = or i32 %52, %51
  %54 = shl nuw nsw i32 %49, 8
  %55 = or i32 %53, %54
  %56 = or i32 %55, %50
  %57 = getelementptr inbounds i32, i32* %8, i64 %17
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %18, i64 %13
  %59 = add nuw nsw i64 %17, 1
  %60 = icmp eq i64 %59, %14
  br i1 %60, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL32fast_swizzle_rgba_to_bgra_premulPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** @_ZN6SkOpts12RGBA_to_bgrAE, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = bitcast i8* %11 to i32*
  tail call void %8(i32* %9, i32* %12, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 align 2 {
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %124

9:                                                ; preds = %7
  %10 = bitcast i8* %0 to i32*
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = bitcast i8* %12 to i32*
  %14 = sdiv i32 %4, 4
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %9, %22
  %17 = phi i32* [ %10, %9 ], [ %24, %22 ]
  %18 = phi i32* [ %13, %9 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %9 ], [ %23, %22 ]
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i32, i32* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %124

27:                                               ; preds = %16
  %28 = bitcast i32* %18 to i8*
  %29 = sext i32 %4 to i64
  %30 = getelementptr inbounds i8, i8* %28, i64 3
  %31 = load i8, i8* %30, align 1, !alias.scope !21, !noalias !24
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds i8, i8* %28, i64 1
  %34 = load i8, i8* %33, align 1, !alias.scope !21, !noalias !24
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds i8, i8* %28, i64 2
  %37 = load i8, i8* %36, align 1, !alias.scope !21, !noalias !24
  %38 = zext i8 %37 to i32
  %39 = shl nuw i32 %32, 24
  %40 = shl i32 %20, 16
  %41 = and i32 %40, 16711680
  %42 = or i32 %41, %39
  %43 = shl nuw nsw i32 %35, 8
  %44 = or i32 %42, %43
  %45 = or i32 %44, %38
  store i32 %45, i32* %17, align 4, !alias.scope !24, !noalias !21
  %46 = icmp eq i32 %19, 1
  br i1 %46, label %124, label %47

47:                                               ; preds = %27
  %48 = zext i32 %19 to i64
  %49 = add nsw i64 %48, -1
  %50 = and i64 %49, 1
  %51 = icmp eq i32 %19, 2
  br i1 %51, label %100, label %52

52:                                               ; preds = %47
  %53 = sub nsw i64 %49, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 1, %52 ], [ %97, %54 ]
  %56 = phi i8* [ %28, %52 ], [ %78, %54 ]
  %57 = phi i64 [ %53, %52 ], [ %98, %54 ]
  %58 = getelementptr inbounds i8, i8* %56, i64 %29
  %59 = load i8, i8* %58, align 1, !alias.scope !21, !noalias !24
  %60 = getelementptr inbounds i8, i8* %58, i64 3
  %61 = load i8, i8* %60, align 1, !alias.scope !21, !noalias !24
  %62 = zext i8 %61 to i32
  %63 = zext i8 %59 to i32
  %64 = getelementptr inbounds i8, i8* %58, i64 1
  %65 = load i8, i8* %64, align 1, !alias.scope !21, !noalias !24
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds i8, i8* %58, i64 2
  %68 = load i8, i8* %67, align 1, !alias.scope !21, !noalias !24
  %69 = zext i8 %68 to i32
  %70 = shl nuw i32 %62, 24
  %71 = shl nuw nsw i32 %63, 16
  %72 = or i32 %71, %70
  %73 = shl nuw nsw i32 %66, 8
  %74 = or i32 %72, %73
  %75 = or i32 %74, %69
  %76 = getelementptr inbounds i32, i32* %17, i64 %55
  store i32 %75, i32* %76, align 4, !alias.scope !24, !noalias !21
  %77 = add nuw nsw i64 %55, 1
  %78 = getelementptr inbounds i8, i8* %58, i64 %29
  %79 = load i8, i8* %78, align 1, !alias.scope !21, !noalias !24
  %80 = getelementptr inbounds i8, i8* %78, i64 3
  %81 = load i8, i8* %80, align 1, !alias.scope !21, !noalias !24
  %82 = zext i8 %81 to i32
  %83 = zext i8 %79 to i32
  %84 = getelementptr inbounds i8, i8* %78, i64 1
  %85 = load i8, i8* %84, align 1, !alias.scope !21, !noalias !24
  %86 = zext i8 %85 to i32
  %87 = getelementptr inbounds i8, i8* %78, i64 2
  %88 = load i8, i8* %87, align 1, !alias.scope !21, !noalias !24
  %89 = zext i8 %88 to i32
  %90 = shl nuw i32 %82, 24
  %91 = shl nuw nsw i32 %83, 16
  %92 = or i32 %91, %90
  %93 = shl nuw nsw i32 %86, 8
  %94 = or i32 %92, %93
  %95 = or i32 %94, %89
  %96 = getelementptr inbounds i32, i32* %17, i64 %77
  store i32 %95, i32* %96, align 4, !alias.scope !24, !noalias !21
  %97 = add nuw nsw i64 %55, 2
  %98 = add i64 %57, -2
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %54

100:                                              ; preds = %54, %47
  %101 = phi i64 [ 1, %47 ], [ %97, %54 ]
  %102 = phi i8* [ %28, %47 ], [ %78, %54 ]
  %103 = icmp eq i64 %50, 0
  br i1 %103, label %124, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds i8, i8* %102, i64 %29
  %106 = load i8, i8* %105, align 1, !alias.scope !21, !noalias !24
  %107 = getelementptr inbounds i8, i8* %105, i64 3
  %108 = load i8, i8* %107, align 1, !alias.scope !21, !noalias !24
  %109 = zext i8 %108 to i32
  %110 = zext i8 %106 to i32
  %111 = getelementptr inbounds i8, i8* %105, i64 1
  %112 = load i8, i8* %111, align 1, !alias.scope !21, !noalias !24
  %113 = zext i8 %112 to i32
  %114 = getelementptr inbounds i8, i8* %105, i64 2
  %115 = load i8, i8* %114, align 1, !alias.scope !21, !noalias !24
  %116 = zext i8 %115 to i32
  %117 = shl nuw i32 %109, 24
  %118 = shl nuw nsw i32 %110, 16
  %119 = or i32 %118, %117
  %120 = shl nuw nsw i32 %113, 8
  %121 = or i32 %119, %120
  %122 = or i32 %121, %116
  %123 = getelementptr inbounds i32, i32* %17, i64 %101
  store i32 %122, i32* %123, align 4, !alias.scope !24, !noalias !21
  br label %124

124:                                              ; preds = %22, %104, %100, %27, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10SkSwizzler24SkipLeading8888ZerosThenIXadL_ZL34fast_swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKjEEEEvS1_S3_iiiiS5_(i8* noalias, i8* noalias, i32, i32, i32, i32, i32* nocapture readnone) #0 align 2 {
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = bitcast i8* %9 to i32*
  %11 = bitcast i8* %0 to i32*
  %12 = icmp sgt i32 %2, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %7
  %14 = sdiv i32 %4, 4
  %15 = sext i32 %14 to i64
  br label %16

16:                                               ; preds = %13, %22
  %17 = phi i32* [ %11, %13 ], [ %24, %22 ]
  %18 = phi i32* [ %10, %13 ], [ %25, %22 ]
  %19 = phi i32 [ %2, %13 ], [ %23, %22 ]
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = add nsw i32 %19, -1
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = getelementptr inbounds i32, i32* %18, i64 %15
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %16, label %27

27:                                               ; preds = %16, %22, %7
  %28 = phi i32 [ %2, %7 ], [ %23, %22 ], [ %19, %16 ]
  %29 = phi i32* [ %10, %7 ], [ %25, %22 ], [ %18, %16 ]
  %30 = phi i32* [ %11, %7 ], [ %24, %22 ], [ %17, %16 ]
  %31 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** @_ZN6SkOpts12RGBA_to_BGRAE, align 8
  tail call void %31(i32* %30, i32* %29, i32 %28) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %42

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = sub nsw i64 %14, %15
  br label %43

19:                                               ; preds = %43, %10
  %20 = phi i64 [ 0, %10 ], [ %86, %43 ]
  %21 = phi i8* [ %12, %10 ], [ %85, %43 ]
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %21, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = load i8, i8* %21, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %21, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds i8, i8* %21, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw i32 %26, 24
  %36 = shl nuw nsw i32 %28, 16
  %37 = or i32 %36, %35
  %38 = shl nuw nsw i32 %31, 8
  %39 = or i32 %37, %38
  %40 = or i32 %39, %34
  %41 = getelementptr inbounds i32, i32* %8, i64 %20
  store i32 %40, i32* %41, align 4
  br label %42

42:                                               ; preds = %23, %19, %7
  ret void

43:                                               ; preds = %43, %17
  %44 = phi i64 [ 0, %17 ], [ %86, %43 ]
  %45 = phi i8* [ %12, %17 ], [ %85, %43 ]
  %46 = phi i64 [ %18, %17 ], [ %87, %43 ]
  %47 = getelementptr inbounds i8, i8* %45, i64 3
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = load i8, i8* %45, align 1
  %51 = zext i8 %50 to i32
  %52 = getelementptr inbounds i8, i8* %45, i64 1
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds i8, i8* %45, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw i32 %49, 24
  %59 = shl nuw nsw i32 %51, 16
  %60 = or i32 %59, %58
  %61 = shl nuw nsw i32 %54, 8
  %62 = or i32 %60, %61
  %63 = or i32 %62, %57
  %64 = getelementptr inbounds i32, i32* %8, i64 %44
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %45, i64 %13
  %66 = or i64 %44, 1
  %67 = getelementptr inbounds i8, i8* %65, i64 3
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = load i8, i8* %65, align 1
  %71 = zext i8 %70 to i32
  %72 = getelementptr inbounds i8, i8* %65, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = getelementptr inbounds i8, i8* %65, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw i32 %69, 24
  %79 = shl nuw nsw i32 %71, 16
  %80 = or i32 %79, %78
  %81 = shl nuw nsw i32 %74, 8
  %82 = or i32 %80, %81
  %83 = or i32 %82, %77
  %84 = getelementptr inbounds i32, i32* %8, i64 %66
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %65, i64 %13
  %86 = add nuw nsw i64 %44, 2
  %87 = add i64 %46, -2
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %19, label %43
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL34fast_swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** @_ZN6SkOpts12RGBA_to_BGRAE, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = bitcast i8* %11 to i32*
  tail call void %8(i32* %9, i32* %12, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL18swizzle_bgr_to_565PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %7
  ret void

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %36, %16 ]
  %18 = phi i8* [ %12, %10 ], [ %35, %16 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds i8, i8* %18, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = load i8, i8* %18, align 1
  %24 = lshr i8 %20, 3
  %25 = zext i8 %24 to i16
  %26 = shl nuw i16 %25, 11
  %27 = lshr i8 %22, 2
  %28 = zext i8 %27 to i16
  %29 = shl nuw nsw i16 %28, 5
  %30 = or i16 %29, %26
  %31 = lshr i8 %23, 3
  %32 = zext i8 %31 to i16
  %33 = or i16 %30, %32
  %34 = getelementptr inbounds i16, i16* %8, i64 %17
  store i16 %33, i16* %34, align 2
  %35 = getelementptr inbounds i8, i8* %18, i64 %13
  %36 = add nuw nsw i64 %17, 1
  %37 = icmp eq i64 %36, %14
  br i1 %37, label %15, label %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL20swizzle_cmyk_to_rgbaPvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %7
  ret void

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %50, %16 ]
  %18 = phi i8* [ %12, %10 ], [ %49, %16 ]
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds i8, i8* %18, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = mul nuw nsw i32 %23, %20
  %25 = add nuw nsw i32 %24, 128
  %26 = lshr i32 %25, 8
  %27 = add nuw nsw i32 %26, %25
  %28 = lshr i32 %27, 8
  %29 = getelementptr inbounds i8, i8* %18, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = mul nuw nsw i32 %31, %23
  %33 = add nuw nsw i32 %32, 128
  %34 = lshr i32 %33, 8
  %35 = add nuw nsw i32 %34, %33
  %36 = getelementptr inbounds i8, i8* %18, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = and i32 %28, 255
  %40 = and i32 %35, 65280
  %41 = mul nuw nsw i32 %23, 257
  %42 = mul nuw nsw i32 %41, %38
  %43 = add nuw nsw i32 %42, 32896
  %44 = and i32 %43, 16711680
  %45 = or i32 %44, %40
  %46 = or i32 %45, %39
  %47 = or i32 %46, -16777216
  %48 = getelementptr inbounds i32, i32* %8, i64 %17
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %18, i64 %13
  %50 = add nuw nsw i64 %17, 1
  %51 = icmp eq i64 %50, %14
  br i1 %51, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL25fast_swizzle_cmyk_to_rgbaPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** @_ZN6SkOpts21inverted_CMYK_to_RGB1E, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = bitcast i8* %11 to i32*
  tail call void %8(i32* %9, i32* %12, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL20swizzle_cmyk_to_bgraPvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %7
  ret void

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %50, %16 ]
  %18 = phi i8* [ %12, %10 ], [ %49, %16 ]
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds i8, i8* %18, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %18, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = mul nuw nsw i32 %26, %23
  %28 = add nuw nsw i32 %27, 128
  %29 = lshr i32 %28, 8
  %30 = add nuw nsw i32 %29, %28
  %31 = getelementptr inbounds i8, i8* %18, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = mul nuw nsw i32 %33, %23
  %35 = add nuw nsw i32 %34, 128
  %36 = lshr i32 %35, 8
  %37 = add nuw nsw i32 %36, %35
  %38 = lshr i32 %37, 8
  %39 = and i32 %30, 65280
  %40 = and i32 %38, 255
  %41 = mul nuw nsw i32 %20, 257
  %42 = mul nuw nsw i32 %41, %23
  %43 = add nuw nsw i32 %42, 32896
  %44 = and i32 %43, 16711680
  %45 = or i32 %44, %39
  %46 = or i32 %45, %40
  %47 = or i32 %46, -16777216
  %48 = getelementptr inbounds i32, i32* %8, i64 %17
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %18, i64 %13
  %50 = add nuw nsw i64 %17, 1
  %51 = icmp eq i64 %50, %14
  br i1 %51, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL25fast_swizzle_cmyk_to_bgraPvPKhiiiiPKj(i8*, i8*, i32, i32, i32, i32, i32* nocapture readnone) #0 {
  %8 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** @_ZN6SkOpts21inverted_CMYK_to_BGR1E, align 8
  %9 = bitcast i8* %0 to i32*
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = bitcast i8* %11 to i32*
  tail call void %8(i32* %9, i32* %12, i32 %2) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL19swizzle_cmyk_to_565PvPKhiiiiPKj(i8* noalias nocapture, i8* noalias nocapture readonly, i32, i32, i32, i32, i32* nocapture readnone) #1 {
  %8 = bitcast i8* %0 to i16*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sext i32 %4 to i64
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %16, %7
  ret void

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %52, %16 ]
  %18 = phi i8* [ %12, %10 ], [ %51, %16 ]
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds i8, i8* %18, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = mul nuw nsw i32 %23, %20
  %25 = add nuw nsw i32 %24, 128
  %26 = lshr i32 %25, 8
  %27 = add nuw nsw i32 %26, %25
  %28 = getelementptr inbounds i8, i8* %18, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nuw nsw i32 %30, %23
  %32 = add nuw nsw i32 %31, 128
  %33 = lshr i32 %32, 8
  %34 = add nuw nsw i32 %33, %32
  %35 = getelementptr inbounds i8, i8* %18, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = mul nuw nsw i32 %37, %23
  %39 = add nuw nsw i32 %38, 128
  %40 = lshr i32 %39, 8
  %41 = add nuw nsw i32 %40, %39
  %42 = lshr i32 %41, 11
  %43 = and i32 %27, 63488
  %44 = and i32 %42, 31
  %45 = lshr i32 %34, 5
  %46 = and i32 %45, 2016
  %47 = or i32 %46, %43
  %48 = or i32 %47, %44
  %49 = trunc i32 %48 to i16
  %50 = getelementptr inbounds i16, i16* %8, i64 %17
  store i16 %49, i16* %50, align 2
  %51 = getelementptr inbounds i8, i8* %18, i64 %13
  %52 = add nuw nsw i64 %17, 1
  %53 = icmp eq i64 %52, %14
  br i1 %53, label %15, label %16
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkSwizzlerC2EPFvPvPKhiiiiPKjES6_S4_iiiiii(%class.SkSwizzler* nocapture, void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, i32, i32, i32, i32) unnamed_addr #4 align 2 {
  %11 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkSwizzler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 2
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %1, void (i8*, i8*, i32, i32, i32, i32, i32*)** %13, align 8
  %14 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 3
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %2, void (i8*, i8*, i32, i32, i32, i32, i32*)** %14, align 8
  %15 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 4
  %16 = icmp eq void (i8*, i8*, i32, i32, i32, i32, i32*)* %1, null
  %17 = select i1 %16, void (i8*, i8*, i32, i32, i32, i32, i32*)* %2, void (i8*, i8*, i32, i32, i32, i32, i32*)* %1
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %17, void (i8*, i8*, i32, i32, i32, i32, i32*)** %15, align 8
  %18 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 5
  store i32* %3, i32** %18, align 8
  %19 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 6
  store i32 %4, i32* %19, align 8
  %20 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 7
  store i32 %6, i32* %20, align 4
  %21 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 8
  %22 = mul nsw i32 %8, %4
  store i32 %22, i32* %21, align 8
  %23 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 9
  %24 = mul nsw i32 %9, %6
  store i32 %24, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 10
  store i32 %5, i32* %25, align 8
  %26 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 11
  store i32 %7, i32* %26, align 4
  %27 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 12
  store i32 %5, i32* %27, align 8
  %28 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 13
  store i32 %7, i32* %28, align 4
  %29 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 14
  store i32 1, i32* %29, align 8
  %30 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 15
  store i32 %8, i32* %30, align 4
  %31 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 16
  store i32 %9, i32* %31, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN10SkSwizzler12onSetSampleXEi(%class.SkSwizzler* nocapture, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 14
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = sdiv i32 %5, %1
  %7 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 16
  %8 = load i32, i32* %7, align 8
  %9 = mul nsw i32 %8, %6
  %10 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 9
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 10
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, %1
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = sdiv i32 %12, %1
  br label %16

16:                                               ; preds = %2, %14
  %17 = phi i32 [ %15, %14 ], [ 1, %2 ]
  %18 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 12
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 11
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %1
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = sdiv i32 %20, %1
  br label %24

24:                                               ; preds = %16, %22
  %25 = phi i32 [ %23, %22 ], [ 1, %16 ]
  %26 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 13
  store i32 %25, i32* %26, align 4
  %27 = icmp slt i32 %12, %20
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = sdiv i32 %12, %17
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi i32 [ %29, %28 ], [ %1, %24 ]
  %32 = sdiv i32 %31, 2
  %33 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = add nsw i32 %32, %34
  %36 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 15
  %37 = load i32, i32* %36, align 4
  %38 = mul nsw i32 %35, %37
  %39 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 8
  store i32 %38, i32* %39, align 8
  %40 = icmp sgt i32 %9, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %30
  %42 = mul nsw i32 %17, %8
  %43 = sext i32 %42 to i64
  %44 = mul nsw i32 %25, %8
  %45 = sext i32 %44 to i64
  %46 = sext i32 %9 to i64
  %47 = add nsw i64 %43, %46
  %48 = icmp ugt i64 %47, %45
  br i1 %48, label %49, label %51

49:                                               ; preds = %41
  %50 = sub i32 %44, %42
  store i32 %50, i32* %10, align 4
  br label %51

51:                                               ; preds = %41, %49, %30
  %52 = icmp eq i32 %1, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %51
  %54 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 2
  %55 = load void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)** %54, align 8
  %56 = icmp eq void (i8*, i8*, i32, i32, i32, i32, i32*)* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 4
  store void (i8*, i8*, i32, i32, i32, i32, i32*)* %55, void (i8*, i8*, i32, i32, i32, i32, i32*)** %58, align 8
  br label %65

59:                                               ; preds = %53, %51
  %60 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 3
  %61 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32*)** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 4
  %64 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32*)** %63 to i64*
  store i64 %62, i64* %64, align 8
  br label %65

65:                                               ; preds = %59, %57
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* nocapture readonly, i8*, i8* noalias) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 4
  %5 = load void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)** %4, align 8
  %6 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 12
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 15
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 14
  %15 = load i32, i32* %14, align 8
  %16 = mul nsw i32 %15, %13
  %17 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 8
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 5
  %20 = load i32*, i32** %19, align 8
  tail call void %5(i8* %9, i8* %2, i32 %11, i32 %13, i32 %16, i32 %18, i32* %20) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkSwizzler9fillWidthEv(%class.SkSwizzler*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkSwizzlerD0Ev(%class.SkSwizzler*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkSwizzler* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkSamplerD2Ev(%class.SkSampler*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKj: argument 1"}
!12 = distinct !{!12, !"_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKj"}
!13 = !{!14}
!14 = distinct !{!14, !12, !"_ZL27swizzle_rgba_to_rgba_premulPvPKhiiiiPKj: argument 0"}
!15 = distinct !{!15, !3}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKj: argument 1"}
!18 = distinct !{!18, !"_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKj"}
!19 = !{!20}
!20 = distinct !{!20, !18, !"_ZL27swizzle_rgba_to_bgra_premulPvPKhiiiiPKj: argument 0"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj: argument 1"}
!23 = distinct !{!23, !"_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj"}
!24 = !{!25}
!25 = distinct !{!25, !23, !"_ZL29swizzle_rgba_to_bgra_unpremulPvPKhiiiiPKj: argument 0"}
