; ModuleID = '../../third_party/fontconfig/src/src/fcatomic.c'
source_filename = "../../third_party/fontconfig/src/src/fcatomic.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcAtomic = type { i8*, i8*, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [5 x i8] c".NEW\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c".LCK\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c".TMP-XXXXXX\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1

@FcAtomicCreate = hidden alias %struct._FcAtomic* (i8*), %struct._FcAtomic* (i8*)* @IA__FcAtomicCreate
@FcAtomicLock = hidden alias i32 (%struct._FcAtomic*), i32 (%struct._FcAtomic*)* @IA__FcAtomicLock
@FcAtomicNewFile = hidden alias i8* (%struct._FcAtomic*), i8* (%struct._FcAtomic*)* @IA__FcAtomicNewFile
@FcAtomicOrigFile = hidden alias i8* (%struct._FcAtomic*), i8* (%struct._FcAtomic*)* @IA__FcAtomicOrigFile
@FcAtomicReplaceOrig = hidden alias i32 (%struct._FcAtomic*), i32 (%struct._FcAtomic*)* @IA__FcAtomicReplaceOrig
@FcAtomicDeleteNew = hidden alias void (%struct._FcAtomic*), void (%struct._FcAtomic*)* @IA__FcAtomicDeleteNew
@FcAtomicUnlock = hidden alias void (%struct._FcAtomic*), void (%struct._FcAtomic*)* @IA__FcAtomicUnlock
@FcAtomicDestroy = hidden alias void (%struct._FcAtomic*), void (%struct._FcAtomic*)* @IA__FcAtomicDestroy

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcAtomic* @IA__FcAtomicCreate(i8* nocapture readonly) #0 {
  %2 = tail call i64 @strlen(i8* %0) #9
  %3 = shl i64 %2, 32
  %4 = ashr exact i64 %3, 32
  %5 = add i64 %3, 21474836480
  %6 = ashr exact i64 %5, 32
  %7 = lshr exact i64 %5, 31
  %8 = add nsw i64 %4, 34
  %9 = add nsw i64 %8, %7
  %10 = shl i64 %9, 32
  %11 = add i64 %3, 60129542144
  %12 = add i64 %11, %10
  %13 = ashr exact i64 %12, 32
  %14 = tail call noalias i8* @malloc(i64 %13) #10
  %15 = icmp eq i8* %14, null
  br i1 %15, label %44, label %16

16:                                               ; preds = %1
  %17 = bitcast i8* %14 to %struct._FcAtomic*
  %18 = getelementptr inbounds i8, i8* %14, i64 32
  %19 = bitcast i8* %14 to i8**
  store i8* %18, i8** %19, align 8
  %20 = tail call i8* @strcpy(i8* %18, i8* %0) #10
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %4
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = getelementptr inbounds i8, i8* %14, i64 8
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = tail call i8* @strcpy(i8* %23, i8* %0) #10
  %27 = load i8*, i8** %25, align 8
  %28 = tail call i64 @strlen(i8* %27)
  %29 = getelementptr i8, i8* %27, i64 %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 5, i1 false)
  %30 = load i8*, i8** %25, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 %6
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = getelementptr inbounds i8, i8* %14, i64 16
  %34 = bitcast i8* %33 to i8**
  store i8* %32, i8** %34, align 8
  %35 = tail call i8* @strcpy(i8* %32, i8* %0) #10
  %36 = load i8*, i8** %34, align 8
  %37 = tail call i64 @strlen(i8* %36)
  %38 = getelementptr i8, i8* %36, i64 %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false)
  %39 = load i8*, i8** %34, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %6
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  %42 = getelementptr inbounds i8, i8* %14, i64 24
  %43 = bitcast i8* %42 to i8**
  store i8* %41, i8** %43, align 8
  br label %44

44:                                               ; preds = %1, %16
  %45 = phi %struct._FcAtomic* [ %17, %16 ], [ null, %1 ]
  ret %struct._FcAtomic* %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcAtomicLock(%struct._FcAtomic* readonly) #0 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 144, i1 false)
  %4 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i8* @strcpy(i8* %5, i8* %7) #10
  %9 = load i8*, i8** %4, align 8
  %10 = tail call i64 @strlen(i8* %9)
  %11 = getelementptr i8, i8* %9, i64 %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 12, i1 false)
  %12 = load i8*, i8** %4, align 8
  %13 = tail call i32 @FcMakeTempfile(i8* %12) #10
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %84, label %15

15:                                               ; preds = %1
  %16 = tail call %struct._IO_FILE* @fdopen(i32 %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #10
  %17 = icmp eq %struct._IO_FILE* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %15
  %19 = tail call i32 @close(i32 %13) #10
  %20 = load i8*, i8** %4, align 8
  %21 = tail call i32 @unlink(i8* %20) #10
  br label %84

22:                                               ; preds = %15
  %23 = tail call i32 @getpid() #10
  %24 = sext i32 %23 to i64
  %25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 %24)
  %26 = icmp slt i32 %25, 1
  %27 = tail call i32 @fclose(%struct._IO_FILE* nonnull %16)
  br i1 %26, label %28, label %31

28:                                               ; preds = %22
  %29 = load i8*, i8** %4, align 8
  %30 = tail call i32 @unlink(i8* %29) #10
  br label %84

31:                                               ; preds = %22
  %32 = icmp eq i32 %27, -1
  %33 = load i8*, i8** %4, align 8
  br i1 %32, label %34, label %36

34:                                               ; preds = %31
  %35 = tail call i32 @unlink(i8* %33) #10
  br label %84

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = tail call i32 @link(i8* %33, i8* %38) #10
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = load i8*, i8** %4, align 8
  %43 = tail call i32 @unlink(i8* %42) #10
  br label %80

44:                                               ; preds = %36
  %45 = tail call i32* @__errno_location() #11
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %47 [
    i32 1, label %50
    i32 95, label %50
    i32 13, label %50
  ]

47:                                               ; preds = %44
  %48 = load i8*, i8** %4, align 8
  %49 = tail call i32 @unlink(i8* %48) #10
  br label %56

50:                                               ; preds = %44, %44, %44
  %51 = load i8*, i8** %37, align 8
  %52 = tail call i32 @mkdir(i8* %51, i32 384) #10
  %53 = load i8*, i8** %4, align 8
  %54 = tail call i32 @unlink(i8* %53) #10
  %55 = icmp slt i32 %52, 0
  br i1 %55, label %56, label %80

56:                                               ; preds = %47, %50
  %57 = phi i32 [ 0, %47 ], [ 1, %50 ]
  %58 = load i8*, i8** %37, align 8
  %59 = call i32 @FcStat(i8* %58, %struct.stat* nonnull %2) #10
  %60 = icmp sgt i32 %59, -1
  br i1 %60, label %61, label %84

61:                                               ; preds = %56
  %62 = call i64 @time(i64* null) #10
  %63 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 12, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = sub nsw i64 %62, %64
  %66 = icmp sgt i64 %65, 600
  br i1 %66, label %67, label %84

67:                                               ; preds = %61
  %68 = icmp eq i32 %57, 0
  %69 = load i8*, i8** %37, align 8
  br i1 %68, label %75, label %70

70:                                               ; preds = %67
  %71 = call i32 @rmdir(i8* %69) #10
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %84

73:                                               ; preds = %70
  %74 = call i32 @IA__FcAtomicLock(%struct._FcAtomic* %0)
  br label %84

75:                                               ; preds = %67
  %76 = call i32 @unlink(i8* %69) #10
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %75
  %79 = call i32 @IA__FcAtomicLock(%struct._FcAtomic* %0)
  br label %84

80:                                               ; preds = %41, %50
  %81 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 1
  %82 = load i8*, i8** %81, align 8
  %83 = tail call i32 @unlink(i8* %82) #10
  br label %84

84:                                               ; preds = %61, %75, %70, %56, %73, %78, %1, %80, %34, %28, %18
  %85 = phi i32 [ 0, %28 ], [ 0, %34 ], [ 1, %80 ], [ 0, %18 ], [ 0, %1 ], [ %74, %73 ], [ %79, %78 ], [ 0, %56 ], [ 0, %70 ], [ 0, %75 ], [ 0, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %3) #10
  ret i32 %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare hidden i32 @FcMakeTempfile(i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fdopen(i32, i8* nocapture readonly) local_unnamed_addr #3

declare i32 @close(i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @unlink(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @getpid() local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @link(i8*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @mkdir(i8* nocapture readonly, i32) local_unnamed_addr #3

declare hidden i32 @FcStat(i8*, %struct.stat*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @rmdir(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @IA__FcAtomicNewFile(%struct._FcAtomic* nocapture readonly) #7 {
  %2 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @IA__FcAtomicOrigFile(%struct._FcAtomic* nocapture readonly) #7 {
  %2 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @IA__FcAtomicReplaceOrig(%struct._FcAtomic* nocapture readonly) #8 {
  %2 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i32 @rename(i8* %3, i8* %5) #10
  %7 = lshr i32 %6, 31
  %8 = xor i32 %7, 1
  ret i32 %8
}

; Function Attrs: nofree nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @IA__FcAtomicDeleteNew(%struct._FcAtomic* nocapture readonly) #8 {
  %2 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = tail call i32 @unlink(i8* %3) #10
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @IA__FcAtomicUnlock(%struct._FcAtomic* nocapture readonly) #8 {
  %2 = getelementptr inbounds %struct._FcAtomic, %struct._FcAtomic* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = tail call i32 @unlink(i8* %3) #10
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = load i8*, i8** %2, align 8
  %8 = tail call i32 @rmdir(i8* %7) #10
  br label %9

9:                                                ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcAtomicDestroy(%struct._FcAtomic* nocapture) #0 {
  %2 = bitcast %struct._FcAtomic* %0 to i8*
  tail call void @free(i8* %2) #10
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
