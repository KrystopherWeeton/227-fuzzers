; ModuleID = '../../third_party/icu/source/common/ucnv_io.cpp'
source_filename = "../../third_party/icu/source/common/ucnv_io.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UConverterAlias = type { i16*, i16*, i16*, i16*, i16*, i16*, %struct.UConverterAliasOptions*, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.UConverterAliasOptions = type { i16, i16 }
%struct.UEnumeration = type { i8*, i8*, void (%struct.UEnumeration*)*, i32 (%struct.UEnumeration*, i32*)*, i16* (%struct.UEnumeration*, i32*, i32*)*, i8* (%struct.UEnumeration*, i32*, i32*)*, void (%struct.UEnumeration*, i32*)* }
%struct.UDataMemory = type opaque
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.UDataSwapper = type { i8, i8, i8, i8, i16 (i16)*, i32 (i32)*, i32 (%struct.UDataSwapper*, i8*, i32, i16*, i32)*, void (i16*, i16)*, void (i32*, i32)*, {}*, {}*, {}*, {}*, void (i8*, i8*, %struct.__va_list_tag*)*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.TempRow = type { i16, i16 }
%struct.TempAliasTable = type { i8*, %struct.TempRow*, i16*, i8* (i8*, i8*)* }
%struct.UDataInfo = type { i16, i16, i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8] }
%struct.UAliasContext = type { i32, i32 }

@_ZL10asciiTypes = internal unnamed_addr constant [128 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\02\02\02\02\02\02\02\02\02\00\00\00\00\00\00\00abcdefghijklmnopqrstuvwxyz\00\00\00\00\00\00abcdefghijklmnopqrstuvwxyz\00\00\00\00\00", align 16
@_ZL11ebcdicTypes = internal unnamed_addr constant [128 x i8] c"\00\81\82\83\84\85\86\87\88\89\00\00\00\00\00\00\00\91\92\93\94\95\96\97\98\99\00\00\00\00\00\00\00\00\A2\A3\A4\A5\A6\A7\A8\A9\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\81\82\83\84\85\86\87\88\89\00\00\00\00\00\00\00\91\92\93\94\95\96\97\98\99\00\00\00\00\00\00\00\00\A2\A3\A4\A5\A6\A7\A8\A9\00\00\00\00\00\00\01\02\02\02\02\02\02\02\02\02\00\00\00\00\00\00", align 16
@_ZL10gMainTable = internal unnamed_addr global %struct.UConverterAlias zeroinitializer, align 8
@_ZL12gEnumAliases = internal unnamed_addr constant %struct.UEnumeration { i8* null, i8* null, void (%struct.UEnumeration*)* @_ZL25ucnv_io_closeUEnumerationP12UEnumeration, i32 (%struct.UEnumeration*, i32*)* @_ZL28ucnv_io_countStandardAliasesP12UEnumerationP10UErrorCode, i16* (%struct.UEnumeration*, i32*, i32*)* @uenum_unextDefault_69, i8* (%struct.UEnumeration*, i32*, i32*)* @_ZL27ucnv_io_nextStandardAliasesP12UEnumerationPiP10UErrorCode, void (%struct.UEnumeration*, i32*)* @_ZL28ucnv_io_resetStandardAliasesP12UEnumerationP10UErrorCode }, align 8
@_ZL18gEnumAllConverters = internal unnamed_addr constant %struct.UEnumeration { i8* null, i8* null, void (%struct.UEnumeration*)* @_ZL25ucnv_io_closeUEnumerationP12UEnumeration, i32 (%struct.UEnumeration*, i32*)* @_ZL26ucnv_io_countAllConvertersP12UEnumerationP10UErrorCode, i16* (%struct.UEnumeration*, i32*, i32*)* @uenum_unextDefault_69, i8* (%struct.UEnumeration*, i32*, i32*)* @_ZL25ucnv_io_nextAllConvertersP12UEnumerationPiP10UErrorCode, void (%struct.UEnumeration*, i32*)* @_ZL26ucnv_io_resetAllConvertersP12UEnumerationP10UErrorCode }, align 8
@.str = private unnamed_addr constant [97 x i8] c"ucnv_swapAliases(): data format %02x.%02x.%02x.%02x (format version %02x) is not an alias table\0A\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"ucnv_swapAliases(): too few bytes (%d after header) for an alias table\0A\00", align 1
@.str.2 = private unnamed_addr constant [93 x i8] c"ucnv_swapAliases(): table of contents contains unsupported number of sections (%u sections)\0A\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"ucnv_swapAliases().swapInvChars(charset names) failed\0A\00", align 1
@.str.4 = private unnamed_addr constant [83 x i8] c"ucnv_swapAliases(): unable to allocate memory for sorting tables (max length: %u)\0A\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"ucnv_swapAliases().uprv_sortArray(%u items) failed\0A\00", align 1
@_ZL18gAliasDataInitOnce = internal global { { { i32 } }, i32 } zeroinitializer, align 4
@_ZL9DATA_TYPE = internal constant [4 x i8] c"icu\00", align 1
@_ZL9DATA_NAME = internal constant [9 x i8] c"cnvalias\00", align 1
@_ZL10gAliasData = internal unnamed_addr global %struct.UDataMemory* null, align 8
@_ZL19defaultTableOptions = internal constant %struct.UConverterAliasOptions zeroinitializer, align 2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @ucnv_io_stripASCIIForCompare_69(i8* returned, i8* nocapture readonly) #0 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %44, label %5

5:                                                ; preds = %2, %38
  %6 = phi i8 [ %42, %38 ], [ %3, %2 ]
  %7 = phi i8* [ %14, %38 ], [ %1, %2 ]
  %8 = phi i8 [ %40, %38 ], [ 0, %2 ]
  %9 = phi i8* [ %41, %38 ], [ %0, %2 ]
  br label %10

10:                                               ; preds = %5, %22
  %11 = phi i8 [ %6, %5 ], [ %23, %22 ]
  %12 = phi i8* [ %7, %5 ], [ %14, %22 ]
  %13 = phi i8 [ %8, %5 ], [ 0, %22 ]
  %14 = getelementptr inbounds i8, i8* %12, i64 1
  %15 = icmp sgt i8 %11, -1
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = zext i8 %11 to i64
  %18 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL10asciiTypes, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  switch i8 %19, label %38 [
    i8 0, label %20
    i8 1, label %25
    i8 2, label %36
  ]

20:                                               ; preds = %10, %16
  %21 = load i8, i8* %14, align 1
  br label %22

22:                                               ; preds = %20, %30
  %23 = phi i8 [ %21, %20 ], [ %28, %30 ]
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %44, label %10

25:                                               ; preds = %16
  %26 = icmp eq i8 %13, 0
  br i1 %26, label %27, label %36

27:                                               ; preds = %25
  %28 = load i8, i8* %14, align 1
  %29 = icmp sgt i8 %28, -1
  br i1 %29, label %30, label %36

30:                                               ; preds = %27
  %31 = zext i8 %28 to i64
  %32 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL10asciiTypes, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = add i8 %33, -1
  %35 = icmp ult i8 %34, 2
  br i1 %35, label %22, label %36

36:                                               ; preds = %25, %16, %30, %27
  %37 = phi i8 [ 0, %27 ], [ 0, %30 ], [ 1, %16 ], [ %13, %25 ]
  br label %38

38:                                               ; preds = %16, %36
  %39 = phi i8 [ %11, %36 ], [ %19, %16 ]
  %40 = phi i8 [ %37, %36 ], [ 0, %16 ]
  %41 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %39, i8* %9, align 1
  %42 = load i8, i8* %14, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %5

44:                                               ; preds = %38, %22, %2
  %45 = phi i8* [ %0, %2 ], [ %9, %22 ], [ %41, %38 ]
  store i8 0, i8* %45, align 1
  ret i8* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @ucnv_io_stripEBCDICForCompare_69(i8* returned, i8* nocapture readonly) #0 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %46, label %5

5:                                                ; preds = %2, %40
  %6 = phi i8 [ %44, %40 ], [ %3, %2 ]
  %7 = phi i8* [ %14, %40 ], [ %1, %2 ]
  %8 = phi i8 [ %42, %40 ], [ 0, %2 ]
  %9 = phi i8* [ %43, %40 ], [ %0, %2 ]
  br label %10

10:                                               ; preds = %5, %23
  %11 = phi i8 [ %6, %5 ], [ %24, %23 ]
  %12 = phi i8* [ %7, %5 ], [ %14, %23 ]
  %13 = phi i8 [ %8, %5 ], [ 0, %23 ]
  %14 = getelementptr inbounds i8, i8* %12, i64 1
  %15 = icmp slt i8 %11, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = and i8 %11, 127
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL11ebcdicTypes, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  switch i8 %20, label %40 [
    i8 0, label %21
    i8 1, label %26
    i8 2, label %38
  ]

21:                                               ; preds = %10, %16
  %22 = load i8, i8* %14, align 1
  br label %23

23:                                               ; preds = %21, %31
  %24 = phi i8 [ %22, %21 ], [ %29, %31 ]
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %46, label %10

26:                                               ; preds = %16
  %27 = icmp eq i8 %13, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %26
  %29 = load i8, i8* %14, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = and i8 %29, 127
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL11ebcdicTypes, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = add i8 %35, -1
  %37 = icmp ult i8 %36, 2
  br i1 %37, label %23, label %38

38:                                               ; preds = %26, %16, %31, %28
  %39 = phi i8 [ 0, %28 ], [ 0, %31 ], [ 1, %16 ], [ %13, %26 ]
  br label %40

40:                                               ; preds = %16, %38
  %41 = phi i8 [ %11, %38 ], [ %20, %16 ]
  %42 = phi i8 [ %39, %38 ], [ 0, %16 ]
  %43 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %41, i8* %9, align 1
  %44 = load i8, i8* %14, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %5

46:                                               ; preds = %40, %23, %2
  %47 = phi i8* [ %0, %2 ], [ %9, %23 ], [ %43, %40 ]
  store i8 0, i8* %47, align 1
  ret i8* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucnv_compareNames_69(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #2 {
  br label %3

3:                                                ; preds = %84, %2
  %4 = phi i8* [ %0, %2 ], [ %42, %84 ]
  %5 = phi i8* [ %1, %2 ], [ %79, %84 ]
  %6 = phi i8 [ 0, %2 ], [ %44, %84 ]
  %7 = phi i8 [ 0, %2 ], [ %81, %84 ]
  %8 = getelementptr inbounds i8, i8* %4, i64 1
  %9 = load i8, i8* %4, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %41, label %11

11:                                               ; preds = %3, %22
  %12 = phi i8 [ %23, %22 ], [ %9, %3 ]
  %13 = phi i8* [ %24, %22 ], [ %8, %3 ]
  %14 = phi i8 [ 0, %22 ], [ %6, %3 ]
  %15 = icmp sgt i8 %12, -1
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = zext i8 %12 to i64
  %18 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL10asciiTypes, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  switch i8 %19, label %41 [
    i8 0, label %20
    i8 1, label %26
    i8 2, label %37
  ]

20:                                               ; preds = %11, %16
  %21 = load i8, i8* %13, align 1
  br label %22

22:                                               ; preds = %20, %31
  %23 = phi i8 [ %21, %20 ], [ %29, %31 ]
  %24 = getelementptr inbounds i8, i8* %13, i64 1
  %25 = icmp eq i8 %23, 0
  br i1 %25, label %37, label %11

26:                                               ; preds = %16
  %27 = icmp eq i8 %14, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %26
  %29 = load i8, i8* %13, align 1
  %30 = icmp sgt i8 %29, -1
  br i1 %30, label %31, label %37

31:                                               ; preds = %28
  %32 = zext i8 %29 to i64
  %33 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL10asciiTypes, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = add i8 %34, -1
  %36 = icmp ult i8 %35, 2
  br i1 %36, label %22, label %37

37:                                               ; preds = %28, %31, %16, %26, %22
  %38 = phi i8* [ %13, %28 ], [ %13, %31 ], [ %13, %16 ], [ %13, %26 ], [ %24, %22 ]
  %39 = phi i8 [ %12, %28 ], [ %12, %31 ], [ %12, %16 ], [ %12, %26 ], [ 0, %22 ]
  %40 = phi i8 [ 0, %28 ], [ 0, %31 ], [ 1, %16 ], [ %14, %26 ], [ 0, %22 ]
  br label %41

41:                                               ; preds = %16, %37, %3
  %42 = phi i8* [ %8, %3 ], [ %38, %37 ], [ %13, %16 ]
  %43 = phi i8 [ 0, %3 ], [ %39, %37 ], [ %19, %16 ]
  %44 = phi i8 [ %6, %3 ], [ %40, %37 ], [ 0, %16 ]
  %45 = getelementptr inbounds i8, i8* %5, i64 1
  %46 = load i8, i8* %5, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %78, label %48

48:                                               ; preds = %41, %59
  %49 = phi i8 [ %60, %59 ], [ %46, %41 ]
  %50 = phi i8* [ %61, %59 ], [ %45, %41 ]
  %51 = phi i8 [ 0, %59 ], [ %7, %41 ]
  %52 = icmp sgt i8 %49, -1
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = zext i8 %49 to i64
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL10asciiTypes, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  switch i8 %56, label %78 [
    i8 0, label %57
    i8 1, label %63
    i8 2, label %74
  ]

57:                                               ; preds = %48, %53
  %58 = load i8, i8* %50, align 1
  br label %59

59:                                               ; preds = %57, %68
  %60 = phi i8 [ %58, %57 ], [ %66, %68 ]
  %61 = getelementptr inbounds i8, i8* %50, i64 1
  %62 = icmp eq i8 %60, 0
  br i1 %62, label %74, label %48

63:                                               ; preds = %53
  %64 = icmp eq i8 %51, 0
  br i1 %64, label %65, label %74

65:                                               ; preds = %63
  %66 = load i8, i8* %50, align 1
  %67 = icmp sgt i8 %66, -1
  br i1 %67, label %68, label %74

68:                                               ; preds = %65
  %69 = zext i8 %66 to i64
  %70 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL10asciiTypes, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = add i8 %71, -1
  %73 = icmp ult i8 %72, 2
  br i1 %73, label %59, label %74

74:                                               ; preds = %65, %68, %53, %63, %59
  %75 = phi i8* [ %50, %65 ], [ %50, %68 ], [ %50, %53 ], [ %50, %63 ], [ %61, %59 ]
  %76 = phi i8 [ %49, %65 ], [ %49, %68 ], [ %49, %53 ], [ %49, %63 ], [ 0, %59 ]
  %77 = phi i8 [ 0, %65 ], [ 0, %68 ], [ 1, %53 ], [ %51, %63 ], [ 0, %59 ]
  br label %78

78:                                               ; preds = %53, %74, %41
  %79 = phi i8* [ %45, %41 ], [ %75, %74 ], [ %50, %53 ]
  %80 = phi i8 [ 0, %41 ], [ %76, %74 ], [ %56, %53 ]
  %81 = phi i8 [ %7, %41 ], [ %77, %74 ], [ 0, %53 ]
  %82 = or i8 %80, %43
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %78
  %85 = zext i8 %43 to i32
  %86 = zext i8 %80 to i32
  %87 = sub nsw i32 %85, %86
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %3, label %89

89:                                               ; preds = %84, %78
  %90 = phi i32 [ 0, %78 ], [ %87, %84 ]
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_io_getConverterName_69(i8* readonly, i8*, i32*) local_unnamed_addr #3 {
  %4 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %2)
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %3
  %7 = icmp eq i8* %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %39, %6
  store i32 1, i32* %2, align 4
  br label %26

9:                                                ; preds = %6
  %10 = load i8, i8* %0, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %9
  %13 = tail call fastcc i32 @_ZL13findConverterPKcPaP10UErrorCode(i8* nonnull %0, i8* %1, i32* %2)
  %14 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %44, %12
  %17 = phi i32 [ %13, %12 ], [ %45, %44 ]
  %18 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %19 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 0), align 8
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds i16, i16* %19, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i64
  %24 = getelementptr inbounds i16, i16* %18, i64 %23
  %25 = bitcast i16* %24 to i8*
  br label %26

26:                                               ; preds = %44, %3, %9, %28, %31, %35, %41, %16, %8
  %27 = phi i8* [ %25, %16 ], [ null, %8 ], [ null, %41 ], [ null, %35 ], [ null, %31 ], [ null, %28 ], [ null, %9 ], [ null, %3 ], [ null, %44 ]
  ret i8* %27

28:                                               ; preds = %12
  %29 = load i8, i8* %0, align 1
  %30 = icmp eq i8 %29, 120
  br i1 %30, label %31, label %26

31:                                               ; preds = %28
  %32 = getelementptr inbounds i8, i8* %0, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 45
  br i1 %34, label %35, label %26

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %0, i64 2
  %37 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %2)
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %26, label %39

39:                                               ; preds = %35
  %40 = icmp eq i8* %36, null
  br i1 %40, label %8, label %41

41:                                               ; preds = %39
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %26, label %44

44:                                               ; preds = %41
  %45 = tail call fastcc i32 @_ZL13findConverterPKcPaP10UErrorCode(i8* nonnull %36, i8* %1, i32* %2)
  %46 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %47 = icmp ult i32 %45, %46
  br i1 %47, label %16, label %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32*) unnamed_addr #3 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %98

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL18gAliasDataInitOnce, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %94, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL18gAliasDataInitOnce to %"struct.icu_69::UInitOnce"*)) #10
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %94, label %10

10:                                               ; preds = %7
  tail call void @ucln_common_registerCleanup_69(i32 21, i8 ()* nonnull @_ZL15ucnv_io_cleanupv) #10
  %11 = tail call %struct.UDataMemory* @udata_openChoice_69(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL9DATA_TYPE, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL9DATA_NAME, i64 0, i64 0), i8 (i8*, i8*, i8*, %struct.UDataInfo*)* nonnull @_ZL12isAcceptablePvPKcS1_PK9UDataInfo, i8* null, i32* %0) #10
  %12 = load i32, i32* %0, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %92

14:                                               ; preds = %10
  %15 = tail call i8* @udata_getMemory_69(%struct.UDataMemory* %11) #10
  %16 = bitcast i8* %15 to i32*
  %17 = bitcast i8* %15 to i16*
  %18 = load i32, i32* %16, align 4
  %19 = icmp ult i32 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %14
  store i32 3, i32* %0, align 4
  tail call void @udata_close_69(%struct.UDataMemory* %11) #10
  br label %92

21:                                               ; preds = %14
  store %struct.UDataMemory* %11, %struct.UDataMemory** @_ZL10gAliasData, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 4
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %28 = getelementptr inbounds i8, i8* %15, i64 12
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 11), align 8
  %31 = getelementptr inbounds i8, i8* %15, i64 16
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 12), align 4
  %34 = getelementptr inbounds i8, i8* %15, i64 20
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 13), align 8
  %37 = getelementptr inbounds i8, i8* %15, i64 24
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 14), align 4
  %40 = getelementptr inbounds i8, i8* %15, i64 28
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 15), align 8
  %43 = getelementptr inbounds i8, i8* %15, i64 32
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 16), align 4
  %46 = icmp eq i32 %18, 8
  br i1 %46, label %51, label %47

47:                                               ; preds = %21
  %48 = getelementptr inbounds i8, i8* %15, i64 36
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 17), align 8
  br label %51

51:                                               ; preds = %47, %21
  %52 = shl i32 %18, 1
  %53 = add i32 %52, 2
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i16, i16* %17, i64 %54
  store i16* %55, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 0), align 8
  %56 = add i32 %24, %53
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i16, i16* %17, i64 %57
  store i16* %58, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 1), align 8
  %59 = add i32 %27, %56
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %17, i64 %60
  store i16* %61, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 2), align 8
  %62 = add i32 %30, %59
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i16, i16* %17, i64 %63
  store i16* %64, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 3), align 8
  %65 = add i32 %33, %62
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i16, i16* %17, i64 %66
  store i16* %67, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 4), align 8
  %68 = add i32 %36, %65
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i16, i16* %17, i64 %69
  store i16* %70, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %71 = add i32 %39, %68
  %72 = icmp eq i32 %42, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %51
  %74 = zext i32 %71 to i64
  %75 = getelementptr inbounds i16, i16* %17, i64 %74
  %76 = load i16, i16* %75, align 2
  %77 = icmp ult i16 %76, 2
  %78 = bitcast i16* %75 to %struct.UConverterAliasOptions*
  %79 = select i1 %77, %struct.UConverterAliasOptions* %78, %struct.UConverterAliasOptions* @_ZL19defaultTableOptions
  br label %80

80:                                               ; preds = %73, %51
  %81 = phi %struct.UConverterAliasOptions* [ @_ZL19defaultTableOptions, %51 ], [ %79, %73 ]
  store %struct.UConverterAliasOptions* %81, %struct.UConverterAliasOptions** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 6), align 8
  %82 = add i32 %42, %71
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i16, i16* %17, i64 %83
  store i16* %84, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %85 = add i32 %45, %82
  %86 = getelementptr inbounds %struct.UConverterAliasOptions, %struct.UConverterAliasOptions* %81, i64 0, i32 0
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  %89 = zext i32 %85 to i64
  %90 = getelementptr inbounds i16, i16* %17, i64 %89
  %91 = select i1 %88, i16* %84, i16* %90
  store i16* %91, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 8), align 8
  br label %92

92:                                               ; preds = %10, %20, %80
  %93 = load i32, i32* %0, align 4
  store i32 %93, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL18gAliasDataInitOnce, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL18gAliasDataInitOnce to %"struct.icu_69::UInitOnce"*)) #10
  br label %98

94:                                               ; preds = %7, %4
  %95 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL18gAliasDataInitOnce, i64 0, i32 1), align 4
  %96 = icmp slt i32 %95, 1
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  store i32 %95, i32* %0, align 4
  br label %98

98:                                               ; preds = %1, %92, %94, %97
  %99 = load i32, i32* %0, align 4
  %100 = icmp slt i32 %99, 1
  %101 = zext i1 %100 to i8
  ret i8 %101
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i32 @_ZL13findConverterPKcPaP10UErrorCode(i8* nocapture readonly, i8*, i32* nocapture) unnamed_addr #4 {
  %4 = alloca [60 x i8], align 16
  %5 = load %struct.UConverterAliasOptions*, %struct.UConverterAliasOptions** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 6), align 8
  %6 = getelementptr inbounds %struct.UConverterAliasOptions, %struct.UConverterAliasOptions* %5, i64 0, i32 0
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  %9 = getelementptr inbounds [60 x i8], [60 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 60, i1 false)
  br i1 %8, label %57, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @strlen(i8* %0) #11
  %12 = icmp ugt i64 %11, 59
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  store i32 15, i32* %2, align 4
  br label %123

14:                                               ; preds = %10
  %15 = load i8, i8* %0, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %55, label %17

17:                                               ; preds = %14, %49
  %18 = phi i8 [ %53, %49 ], [ %15, %14 ]
  %19 = phi i8* [ %26, %49 ], [ %0, %14 ]
  %20 = phi i8 [ %51, %49 ], [ 0, %14 ]
  %21 = phi i8* [ %52, %49 ], [ %9, %14 ]
  br label %22

22:                                               ; preds = %34, %17
  %23 = phi i8 [ %18, %17 ], [ %35, %34 ]
  %24 = phi i8* [ %19, %17 ], [ %26, %34 ]
  %25 = phi i8 [ %20, %17 ], [ 0, %34 ]
  %26 = getelementptr inbounds i8, i8* %24, i64 1
  %27 = icmp sgt i8 %23, -1
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = zext i8 %23 to i64
  %30 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL10asciiTypes, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  switch i8 %31, label %48 [
    i8 0, label %32
    i8 1, label %37
    i8 2, label %49
  ]

32:                                               ; preds = %28, %22
  %33 = load i8, i8* %26, align 1
  br label %34

34:                                               ; preds = %42, %32
  %35 = phi i8 [ %33, %32 ], [ %40, %42 ]
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %55, label %22

37:                                               ; preds = %28
  %38 = icmp eq i8 %25, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %37
  %40 = load i8, i8* %26, align 1
  %41 = icmp sgt i8 %40, -1
  br i1 %41, label %42, label %49

42:                                               ; preds = %39
  %43 = zext i8 %40 to i64
  %44 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZL10asciiTypes, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = add i8 %45, -1
  %47 = icmp ult i8 %46, 2
  br i1 %47, label %34, label %49

48:                                               ; preds = %28
  br label %49

49:                                               ; preds = %28, %37, %39, %42, %48
  %50 = phi i8 [ %31, %48 ], [ %23, %42 ], [ %23, %39 ], [ %23, %37 ], [ %23, %28 ]
  %51 = phi i8 [ 0, %48 ], [ 1, %28 ], [ %25, %37 ], [ 0, %39 ], [ 0, %42 ]
  %52 = getelementptr inbounds i8, i8* %21, i64 1
  store i8 %50, i8* %21, align 1
  %53 = load i8, i8* %26, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %17

55:                                               ; preds = %49, %34, %14
  %56 = phi i8* [ %9, %14 ], [ %21, %34 ], [ %52, %49 ]
  store i8 0, i8* %56, align 1
  br label %57

57:                                               ; preds = %55, %3
  %58 = phi i8* [ %0, %3 ], [ %9, %55 ]
  %59 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 12), align 4
  %60 = lshr i32 %59, 1
  %61 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 8), align 8
  %62 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 2), align 8
  %63 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  br label %64

64:                                               ; preds = %57, %117
  %65 = phi i32 [ %60, %57 ], [ %121, %117 ]
  %66 = phi i32 [ %59, %57 ], [ %119, %117 ]
  %67 = phi i32 [ 0, %57 ], [ %118, %117 ]
  %68 = zext i32 %65 to i64
  %69 = getelementptr inbounds i16, i16* %62, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i64
  br i1 %8, label %72, label %76

72:                                               ; preds = %64
  %73 = getelementptr inbounds i16, i16* %63, i64 %71
  %74 = bitcast i16* %73 to i8*
  %75 = call i32 @ucnv_compareNames_69(i8* %58, i8* %74)
  br label %80

76:                                               ; preds = %64
  %77 = getelementptr inbounds i16, i16* %61, i64 %71
  %78 = bitcast i16* %77 to i8*
  %79 = call i32 @strcmp(i8* %58, i8* %78) #11
  br label %80

80:                                               ; preds = %76, %72
  %81 = phi i32 [ %75, %72 ], [ %79, %76 ]
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %117, label %83

83:                                               ; preds = %80
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %117

85:                                               ; preds = %83
  %86 = zext i32 %65 to i64
  %87 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 3), align 8
  %88 = getelementptr inbounds i16, i16* %87, i64 %86
  %89 = load i16, i16* %88, align 2
  %90 = icmp slt i16 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %85
  store i32 -122, i32* %2, align 4
  br label %92

92:                                               ; preds = %91, %85
  %93 = icmp eq i8* %1, null
  br i1 %93, label %111, label %94

94:                                               ; preds = %92
  %95 = load %struct.UConverterAliasOptions*, %struct.UConverterAliasOptions** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 6), align 8
  %96 = getelementptr inbounds %struct.UConverterAliasOptions, %struct.UConverterAliasOptions* %95, i64 0, i32 1
  %97 = load i16, i16* %96, align 2
  %98 = trunc i16 %97 to i8
  %99 = icmp ne i8 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %94
  %101 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 3), align 8
  %102 = getelementptr inbounds i16, i16* %101, i64 %86
  %103 = load i16, i16* %102, align 2
  %104 = and i16 %103, 16384
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %100, %94
  %107 = xor i1 %99, true
  %108 = zext i1 %107 to i8
  br label %109

109:                                              ; preds = %100, %106
  %110 = phi i8 [ 1, %100 ], [ %108, %106 ]
  store i8 %110, i8* %1, align 1
  br label %111

111:                                              ; preds = %92, %109
  %112 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 3), align 8
  %113 = getelementptr inbounds i16, i16* %112, i64 %86
  %114 = load i16, i16* %113, align 2
  %115 = and i16 %114, 4095
  %116 = zext i16 %115 to i32
  br label %123

117:                                              ; preds = %83, %80
  %118 = phi i32 [ %67, %80 ], [ %65, %83 ]
  %119 = phi i32 [ %65, %80 ], [ %66, %83 ]
  %120 = add i32 %119, %118
  %121 = lshr i32 %120, 1
  %122 = icmp eq i32 %65, %121
  br i1 %122, label %123, label %64

123:                                              ; preds = %117, %111, %13
  %124 = phi i32 [ %116, %111 ], [ -1, %13 ], [ -1, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %9) #10
  ret i32 %124
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UEnumeration* @ucnv_openStandardNames_69(i8* readonly, i8*, i32*) local_unnamed_addr #3 {
  %4 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %2)
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %31, label %6

6:                                                ; preds = %3
  %7 = icmp eq i8* %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 1, i32* %2, align 4
  br label %31

9:                                                ; preds = %6
  %10 = load i8, i8* %0, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %9
  %13 = tail call fastcc i32 @_ZL26findTaggedAliasListsOffsetPKcS0_P10UErrorCode(i8* nonnull %0, i8* %1, i32* %2)
  %14 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 14), align 4
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %31

16:                                               ; preds = %12
  %17 = tail call noalias i8* @uprv_malloc_69(i64 56) #12
  %18 = bitcast i8* %17 to %struct.UEnumeration*
  %19 = icmp eq i8* %17, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store i32 7, i32* %2, align 4
  br label %31

21:                                               ; preds = %16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (%struct.UEnumeration* @_ZL12gEnumAliases to i8*), i64 56, i1 false)
  %22 = tail call noalias i8* @uprv_malloc_69(i64 8) #12
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store i32 7, i32* %2, align 4
  tail call void @uprv_free_69(i8* nonnull %17) #10
  br label %31

25:                                               ; preds = %21
  %26 = bitcast i8* %22 to i32*
  store i32 %13, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %22, i64 4
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %17, i64 8
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  br label %31

31:                                               ; preds = %12, %25, %3, %9, %8, %24, %20
  %32 = phi %struct.UEnumeration* [ null, %20 ], [ null, %24 ], [ null, %9 ], [ null, %3 ], [ null, %8 ], [ null, %12 ], [ %18, %25 ]
  ret %struct.UEnumeration* %32
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL26findTaggedAliasListsOffsetPKcS0_P10UErrorCode(i8* nocapture readonly, i8*, i32* nocapture) unnamed_addr #3 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 0, i32* %4, align 4
  %6 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 1), align 8
  %7 = icmp ne i16* %6, null
  %8 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %9 = icmp ne i32 %8, 0
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %37

11:                                               ; preds = %3
  %12 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %13 = load i16, i16* %6, align 2
  %14 = zext i16 %13 to i64
  %15 = getelementptr inbounds i16, i16* %12, i64 %14
  %16 = bitcast i16* %15 to i8*
  %17 = tail call i32 @uprv_stricmp_69(i8* %16, i8* %1) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %11, %25
  %20 = phi i64 [ %21, %25 ], [ 0, %11 ]
  %21 = add nuw nsw i64 %20, 1
  %22 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %23 = zext i32 %22 to i64
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %19
  %26 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 1), align 8
  %27 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %28 = getelementptr inbounds i16, i16* %26, i64 %21
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i64
  %31 = getelementptr inbounds i16, i16* %27, i64 %30
  %32 = bitcast i16* %31 to i8*
  %33 = tail call i32 @uprv_stricmp_69(i8* %32, i8* %1) #10
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %19

35:                                               ; preds = %25
  %36 = trunc i64 %21 to i32
  br label %37

37:                                               ; preds = %19, %11, %35, %3
  %38 = phi i32 [ -1, %3 ], [ 0, %11 ], [ %36, %35 ], [ -1, %19 ]
  %39 = call fastcc i32 @_ZL13findConverterPKcPaP10UErrorCode(i8* %0, i8* null, i32* nonnull %4)
  %40 = load i32, i32* %4, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  store i32 %40, i32* %2, align 4
  br label %43

43:                                               ; preds = %37, %42
  %44 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %45 = add i32 %44, -1
  %46 = icmp ult i32 %38, %45
  br i1 %46, label %47, label %121

47:                                               ; preds = %43
  %48 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %49 = icmp ult i32 %39, %48
  br i1 %49, label %50, label %121

50:                                               ; preds = %47
  %51 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 4), align 8
  %52 = mul i32 %48, %38
  %53 = add i32 %52, %39
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i16, i16* %51, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp eq i16 %56, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %50
  %60 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %61 = add nuw nsw i32 %57, 1
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i16, i16* %60, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %121

66:                                               ; preds = %59, %50
  %67 = icmp eq i32 %40, -122
  %68 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 13), align 8
  %69 = icmp ne i32 %68, 0
  %70 = and i1 %67, %69
  br i1 %70, label %71, label %121

71:                                               ; preds = %66
  %72 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %73 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %74 = zext i32 %68 to i64
  br label %75

75:                                               ; preds = %71, %116
  %76 = phi i64 [ 0, %71 ], [ %117, %116 ]
  %77 = getelementptr inbounds i16, i16* %51, i64 %76
  %78 = load i16, i16* %77, align 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %116, label %80

80:                                               ; preds = %75
  %81 = zext i16 %78 to i64
  %82 = getelementptr inbounds i16, i16* %72, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = getelementptr inbounds i16, i16* %82, i64 1
  %85 = icmp eq i16 %83, 0
  br i1 %85, label %116, label %86

86:                                               ; preds = %80
  %87 = zext i16 %83 to i64
  br label %88

88:                                               ; preds = %99, %86
  %89 = phi i64 [ 0, %86 ], [ %100, %99 ]
  %90 = getelementptr inbounds i16, i16* %84, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = icmp eq i16 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %88
  %94 = zext i16 %91 to i64
  %95 = getelementptr inbounds i16, i16* %73, i64 %94
  %96 = bitcast i16* %95 to i8*
  %97 = tail call i32 @ucnv_compareNames_69(i8* %0, i8* %96) #10
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93, %88
  %100 = add nuw nsw i64 %89, 1
  %101 = icmp eq i64 %100, %87
  br i1 %101, label %116, label %88

102:                                              ; preds = %93
  %103 = trunc i64 %76 to i32
  %104 = urem i32 %103, %48
  %105 = add i32 %104, %52
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i16, i16* %51, i64 %106
  %108 = load i16, i16* %107, align 2
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %116, label %110

110:                                              ; preds = %102
  %111 = zext i16 %108 to i64
  %112 = add nuw nsw i64 %111, 1
  %113 = getelementptr inbounds i16, i16* %72, i64 %112
  %114 = load i16, i16* %113, align 2
  %115 = icmp eq i16 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %99, %110, %102, %80, %75
  %117 = add nuw nsw i64 %76, 1
  %118 = icmp ult i64 %117, %74
  br i1 %118, label %75, label %121

119:                                              ; preds = %110
  %120 = zext i16 %108 to i32
  br label %121

121:                                              ; preds = %116, %119, %43, %47, %66, %59
  %122 = phi i32 [ %57, %59 ], [ 0, %66 ], [ -1, %47 ], [ -1, %43 ], [ %120, %119 ], [ 0, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret i32 %122
}

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @uprv_free_69(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_getStandard_69(i16 zeroext, i32*) local_unnamed_addr #3 {
  %3 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %1)
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %2
  %6 = zext i16 %0 to i32
  %7 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %8 = add i32 %7, -1
  %9 = icmp ugt i32 %8, %6
  br i1 %9, label %10, label %19

10:                                               ; preds = %5
  %11 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %12 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 1), align 8
  %13 = zext i16 %0 to i64
  %14 = getelementptr inbounds i16, i16* %12, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i64
  %17 = getelementptr inbounds i16, i16* %11, i64 %16
  %18 = bitcast i16* %17 to i8*
  br label %20

19:                                               ; preds = %5
  store i32 8, i32* %1, align 4
  br label %20

20:                                               ; preds = %19, %2, %10
  %21 = phi i8* [ %18, %10 ], [ null, %2 ], [ null, %19 ]
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_getStandardName_69(i8* readonly, i8*, i32*) local_unnamed_addr #3 {
  %4 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %2)
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %3
  %7 = icmp eq i8* %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 1, i32* %2, align 4
  br label %29

9:                                                ; preds = %6
  %10 = load i8, i8* %0, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %9
  %13 = tail call fastcc i32 @_ZL26findTaggedAliasListsOffsetPKcS0_P10UErrorCode(i8* nonnull %0, i8* %1, i32* %2)
  %14 = icmp ne i32 %13, 0
  %15 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 14), align 4
  %16 = icmp ult i32 %13, %15
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %29

18:                                               ; preds = %12
  %19 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %20 = zext i32 %13 to i64
  %21 = getelementptr inbounds i16, i16* %19, i64 %20
  %22 = getelementptr inbounds i16, i16* %21, i64 1
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  %25 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %26 = zext i16 %23 to i64
  %27 = getelementptr inbounds i16, i16* %25, i64 %26
  %28 = bitcast i16* %27 to i8*
  br i1 %24, label %29, label %30

29:                                               ; preds = %12, %18, %8, %9, %3
  br label %30

30:                                               ; preds = %18, %29
  %31 = phi i8* [ null, %29 ], [ %28, %18 ]
  ret i8* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @ucnv_countAliases_69(i8* readonly, i32*) local_unnamed_addr #3 {
  %3 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %1) #10
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %2
  %6 = icmp eq i8* %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i32 1, i32* %1, align 4
  br label %30

8:                                                ; preds = %5
  %9 = load i8, i8* %0, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %30, label %11

11:                                               ; preds = %8
  %12 = tail call fastcc i32 @_ZL13findConverterPKcPaP10UErrorCode(i8* nonnull %0, i8* null, i32* %1) #10
  %13 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %15, label %30

15:                                               ; preds = %11
  %16 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 4), align 8
  %17 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %18 = add i32 %17, -1
  %19 = mul i32 %18, %13
  %20 = add i32 %19, %12
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %16, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %15
  %26 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %27 = zext i16 %23 to i64
  %28 = getelementptr inbounds i16, i16* %26, i64 %27
  %29 = load i16, i16* %28, align 2
  br label %30

30:                                               ; preds = %2, %7, %8, %11, %15, %25
  %31 = phi i16 [ %29, %25 ], [ 0, %7 ], [ 0, %8 ], [ 0, %2 ], [ 0, %11 ], [ 0, %15 ]
  ret i16 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_getAlias_69(i8* readonly, i16 zeroext, i32*) local_unnamed_addr #3 {
  %4 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %2) #10
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %42, label %6

6:                                                ; preds = %3
  %7 = icmp eq i8* %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 1, i32* %2, align 4
  br label %42

9:                                                ; preds = %6
  %10 = load i8, i8* %0, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %9
  %13 = tail call fastcc i32 @_ZL13findConverterPKcPaP10UErrorCode(i8* nonnull %0, i8* null, i32* %2) #10
  %14 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %42

16:                                               ; preds = %12
  %17 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 4), align 8
  %18 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %19 = add i32 %18, -1
  %20 = mul i32 %19, %14
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %17, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %16
  %27 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %28 = zext i16 %24 to i64
  %29 = getelementptr inbounds i16, i16* %27, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp ugt i16 %30, %1
  br i1 %31, label %33, label %32

32:                                               ; preds = %26
  store i32 8, i32* %2, align 4
  br label %42

33:                                               ; preds = %26
  %34 = getelementptr inbounds i16, i16* %29, i64 1
  %35 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %36 = zext i16 %1 to i64
  %37 = getelementptr inbounds i16, i16* %34, i64 %36
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i64
  %40 = getelementptr inbounds i16, i16* %35, i64 %39
  %41 = bitcast i16* %40 to i8*
  br label %42

42:                                               ; preds = %3, %8, %9, %12, %16, %32, %33
  %43 = phi i8* [ %41, %33 ], [ null, %8 ], [ null, %9 ], [ null, %3 ], [ null, %12 ], [ null, %32 ], [ null, %16 ]
  ret i8* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucnv_getAliases_69(i8* readonly, i8** nocapture, i32*) local_unnamed_addr #3 {
  %4 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %2) #10
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %187, label %6

6:                                                ; preds = %3
  %7 = icmp eq i8* %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 1, i32* %2, align 4
  br label %187

9:                                                ; preds = %6
  %10 = load i8, i8* %0, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %187, label %12

12:                                               ; preds = %9
  %13 = tail call fastcc i32 @_ZL13findConverterPKcPaP10UErrorCode(i8* nonnull %0, i8* null, i32* %2) #10
  %14 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %187

16:                                               ; preds = %12
  %17 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 4), align 8
  %18 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %19 = add i32 %18, -1
  %20 = mul i32 %19, %14
  %21 = add i32 %20, %13
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %17, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %187, label %26

26:                                               ; preds = %16
  %27 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %28 = zext i16 %24 to i64
  %29 = getelementptr inbounds i16, i16* %27, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = getelementptr inbounds i16, i16* %29, i64 1
  %32 = icmp eq i16 %30, 0
  br i1 %32, label %187, label %33

33:                                               ; preds = %26
  %34 = zext i16 %30 to i64
  %35 = icmp ult i16 %30, 4
  br i1 %35, label %130, label %36

36:                                               ; preds = %33
  %37 = add nsw i64 %34, -1
  %38 = getelementptr i8*, i8** %1, i64 %37
  %39 = add nuw nsw i64 %34, %28
  %40 = add nuw nsw i64 %39, 1
  %41 = getelementptr i16, i16* %27, i64 %40
  %42 = icmp ult i8** %1, bitcast (i8* getelementptr (i8, i8* bitcast (i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7) to i8*), i64 1) to i8**)
  %43 = icmp ugt i8** %38, bitcast (i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7) to i8**)
  %44 = and i1 %42, %43
  %45 = bitcast i16* %41 to i8**
  %46 = icmp ugt i8** %45, %1
  %47 = bitcast i8** %38 to i16*
  %48 = icmp ult i16* %31, %47
  %49 = and i1 %46, %48
  %50 = or i1 %44, %49
  br i1 %50, label %130, label %51

51:                                               ; preds = %36
  %52 = and i64 %34, 65532
  %53 = add nsw i64 %52, -4
  %54 = lshr exact i64 %53, 2
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %53, 0
  br i1 %57, label %105, label %58

58:                                               ; preds = %51
  %59 = sub nuw nsw i64 %55, %56
  %60 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8, !alias.scope !2
  %61 = insertelement <2 x i16*> undef, i16* %60, i32 0
  %62 = shufflevector <2 x i16*> %61, <2 x i16*> undef, <2 x i32> zeroinitializer
  %63 = insertelement <2 x i16*> undef, i16* %60, i32 0
  %64 = shufflevector <2 x i16*> %63, <2 x i16*> undef, <2 x i32> zeroinitializer
  %65 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8, !alias.scope !2
  %66 = insertelement <2 x i16*> undef, i16* %65, i32 0
  %67 = shufflevector <2 x i16*> %66, <2 x i16*> undef, <2 x i32> zeroinitializer
  %68 = insertelement <2 x i16*> undef, i16* %65, i32 0
  %69 = shufflevector <2 x i16*> %68, <2 x i16*> undef, <2 x i32> zeroinitializer
  br label %70

70:                                               ; preds = %70, %58
  %71 = phi i64 [ 0, %58 ], [ %102, %70 ]
  %72 = phi i64 [ %59, %58 ], [ %103, %70 ]
  %73 = getelementptr inbounds i16, i16* %31, i64 %71
  %74 = bitcast i16* %73 to <2 x i16>*
  %75 = load <2 x i16>, <2 x i16>* %74, align 2, !alias.scope !5
  %76 = getelementptr inbounds i16, i16* %73, i64 2
  %77 = bitcast i16* %76 to <2 x i16>*
  %78 = load <2 x i16>, <2 x i16>* %77, align 2, !alias.scope !5
  %79 = zext <2 x i16> %75 to <2 x i64>
  %80 = zext <2 x i16> %78 to <2 x i64>
  %81 = getelementptr inbounds i16, <2 x i16*> %62, <2 x i64> %79
  %82 = getelementptr inbounds i16, <2 x i16*> %64, <2 x i64> %80
  %83 = getelementptr inbounds i8*, i8** %1, i64 %71
  %84 = bitcast i8** %83 to <2 x i16*>*
  store <2 x i16*> %81, <2 x i16*>* %84, align 8, !alias.scope !7, !noalias !9
  %85 = getelementptr inbounds i8*, i8** %83, i64 2
  %86 = bitcast i8** %85 to <2 x i16*>*
  store <2 x i16*> %82, <2 x i16*>* %86, align 8, !alias.scope !7, !noalias !9
  %87 = or i64 %71, 4
  %88 = getelementptr inbounds i16, i16* %31, i64 %87
  %89 = bitcast i16* %88 to <2 x i16>*
  %90 = load <2 x i16>, <2 x i16>* %89, align 2, !alias.scope !5
  %91 = getelementptr inbounds i16, i16* %88, i64 2
  %92 = bitcast i16* %91 to <2 x i16>*
  %93 = load <2 x i16>, <2 x i16>* %92, align 2, !alias.scope !5
  %94 = zext <2 x i16> %90 to <2 x i64>
  %95 = zext <2 x i16> %93 to <2 x i64>
  %96 = getelementptr inbounds i16, <2 x i16*> %67, <2 x i64> %94
  %97 = getelementptr inbounds i16, <2 x i16*> %69, <2 x i64> %95
  %98 = getelementptr inbounds i8*, i8** %1, i64 %87
  %99 = bitcast i8** %98 to <2 x i16*>*
  store <2 x i16*> %96, <2 x i16*>* %99, align 8, !alias.scope !7, !noalias !9
  %100 = getelementptr inbounds i8*, i8** %98, i64 2
  %101 = bitcast i8** %100 to <2 x i16*>*
  store <2 x i16*> %97, <2 x i16*>* %101, align 8, !alias.scope !7, !noalias !9
  %102 = add i64 %71, 8
  %103 = add i64 %72, -2
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %70, !llvm.loop !10

105:                                              ; preds = %70, %51
  %106 = phi i64 [ 0, %51 ], [ %102, %70 ]
  %107 = icmp eq i64 %56, 0
  br i1 %107, label %128, label %108

108:                                              ; preds = %105
  %109 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8, !alias.scope !2
  %110 = insertelement <2 x i16*> undef, i16* %109, i32 0
  %111 = shufflevector <2 x i16*> %110, <2 x i16*> undef, <2 x i32> zeroinitializer
  %112 = insertelement <2 x i16*> undef, i16* %109, i32 0
  %113 = shufflevector <2 x i16*> %112, <2 x i16*> undef, <2 x i32> zeroinitializer
  %114 = getelementptr inbounds i16, i16* %31, i64 %106
  %115 = bitcast i16* %114 to <2 x i16>*
  %116 = load <2 x i16>, <2 x i16>* %115, align 2, !alias.scope !5
  %117 = getelementptr inbounds i16, i16* %114, i64 2
  %118 = bitcast i16* %117 to <2 x i16>*
  %119 = load <2 x i16>, <2 x i16>* %118, align 2, !alias.scope !5
  %120 = zext <2 x i16> %116 to <2 x i64>
  %121 = zext <2 x i16> %119 to <2 x i64>
  %122 = getelementptr inbounds i16, <2 x i16*> %111, <2 x i64> %120
  %123 = getelementptr inbounds i16, <2 x i16*> %113, <2 x i64> %121
  %124 = getelementptr inbounds i8*, i8** %1, i64 %106
  %125 = bitcast i8** %124 to <2 x i16*>*
  store <2 x i16*> %122, <2 x i16*>* %125, align 8, !alias.scope !7, !noalias !9
  %126 = getelementptr inbounds i8*, i8** %124, i64 2
  %127 = bitcast i8** %126 to <2 x i16*>*
  store <2 x i16*> %123, <2 x i16*>* %127, align 8, !alias.scope !7, !noalias !9
  br label %128

128:                                              ; preds = %105, %108
  %129 = icmp eq i64 %52, %34
  br i1 %129, label %187, label %130

130:                                              ; preds = %128, %36, %33
  %131 = phi i64 [ 0, %36 ], [ 0, %33 ], [ %52, %128 ]
  %132 = xor i64 %131, -1
  %133 = add nsw i64 %132, %34
  %134 = and i64 %34, 3
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %149, label %136

136:                                              ; preds = %130, %136
  %137 = phi i64 [ %146, %136 ], [ %131, %130 ]
  %138 = phi i64 [ %147, %136 ], [ %134, %130 ]
  %139 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %140 = getelementptr inbounds i16, i16* %31, i64 %137
  %141 = load i16, i16* %140, align 2
  %142 = zext i16 %141 to i64
  %143 = getelementptr inbounds i16, i16* %139, i64 %142
  %144 = getelementptr inbounds i8*, i8** %1, i64 %137
  %145 = bitcast i8** %144 to i16**
  store i16* %143, i16** %145, align 8
  %146 = add nuw nsw i64 %137, 1
  %147 = add i64 %138, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %136, !llvm.loop !12

149:                                              ; preds = %136, %130
  %150 = phi i64 [ %131, %130 ], [ %146, %136 ]
  %151 = icmp ult i64 %133, 3
  br i1 %151, label %187, label %152

152:                                              ; preds = %149, %152
  %153 = phi i64 [ %185, %152 ], [ %150, %149 ]
  %154 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %155 = getelementptr inbounds i16, i16* %31, i64 %153
  %156 = load i16, i16* %155, align 2
  %157 = zext i16 %156 to i64
  %158 = getelementptr inbounds i16, i16* %154, i64 %157
  %159 = getelementptr inbounds i8*, i8** %1, i64 %153
  %160 = bitcast i8** %159 to i16**
  store i16* %158, i16** %160, align 8
  %161 = add nuw nsw i64 %153, 1
  %162 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %163 = getelementptr inbounds i16, i16* %31, i64 %161
  %164 = load i16, i16* %163, align 2
  %165 = zext i16 %164 to i64
  %166 = getelementptr inbounds i16, i16* %162, i64 %165
  %167 = getelementptr inbounds i8*, i8** %1, i64 %161
  %168 = bitcast i8** %167 to i16**
  store i16* %166, i16** %168, align 8
  %169 = add nuw nsw i64 %153, 2
  %170 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %171 = getelementptr inbounds i16, i16* %31, i64 %169
  %172 = load i16, i16* %171, align 2
  %173 = zext i16 %172 to i64
  %174 = getelementptr inbounds i16, i16* %170, i64 %173
  %175 = getelementptr inbounds i8*, i8** %1, i64 %169
  %176 = bitcast i8** %175 to i16**
  store i16* %174, i16** %176, align 8
  %177 = add nuw nsw i64 %153, 3
  %178 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %179 = getelementptr inbounds i16, i16* %31, i64 %177
  %180 = load i16, i16* %179, align 2
  %181 = zext i16 %180 to i64
  %182 = getelementptr inbounds i16, i16* %178, i64 %181
  %183 = getelementptr inbounds i8*, i8** %1, i64 %177
  %184 = bitcast i8** %183 to i16**
  store i16* %182, i16** %184, align 8
  %185 = add nuw nsw i64 %153, 4
  %186 = icmp eq i64 %185, %34
  br i1 %186, label %187, label %152, !llvm.loop !14

187:                                              ; preds = %149, %152, %128, %3, %8, %9, %12, %16, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @ucnv_countStandards_69() local_unnamed_addr #3 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #10
  store i32 0, i32* %1, align 4
  %3 = call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* nonnull %1) #10
  %4 = icmp eq i8 %3, 0
  %5 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %6 = trunc i32 %5 to i16
  %7 = add i16 %6, -1
  %8 = select i1 %4, i16 0, i16 %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #10
  ret i16 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ucnv_getCanonicalName_69(i8* readonly, i8*, i32*) local_unnamed_addr #3 {
  %4 = alloca i32, align 4
  %5 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %2)
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %148, label %7

7:                                                ; preds = %3
  %8 = icmp eq i8* %0, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i32 1, i32* %2, align 4
  br label %148

10:                                               ; preds = %7
  %11 = load i8, i8* %0, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %148, label %13

13:                                               ; preds = %10
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 0, i32* %4, align 4
  %15 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 1), align 8
  %16 = icmp ne i16* %15, null
  %17 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %18 = icmp ne i32 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %46

20:                                               ; preds = %13
  %21 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %22 = load i16, i16* %15, align 2
  %23 = zext i16 %22 to i64
  %24 = getelementptr inbounds i16, i16* %21, i64 %23
  %25 = bitcast i16* %24 to i8*
  %26 = tail call i32 @uprv_stricmp_69(i8* %25, i8* %1) #10
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %20, %34
  %29 = phi i64 [ %30, %34 ], [ 0, %20 ]
  %30 = add nuw nsw i64 %29, 1
  %31 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %32 = zext i32 %31 to i64
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  %35 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 1), align 8
  %36 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %37 = getelementptr inbounds i16, i16* %35, i64 %30
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i64
  %40 = getelementptr inbounds i16, i16* %36, i64 %39
  %41 = bitcast i16* %40 to i8*
  %42 = tail call i32 @uprv_stricmp_69(i8* %41, i8* %1) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %28

44:                                               ; preds = %34
  %45 = trunc i64 %30 to i32
  br label %46

46:                                               ; preds = %28, %44, %20, %13
  %47 = phi i32 [ -1, %13 ], [ 0, %20 ], [ %45, %44 ], [ -1, %28 ]
  %48 = call fastcc i32 @_ZL13findConverterPKcPaP10UErrorCode(i8* nonnull %0, i8* null, i32* nonnull %4) #10
  %49 = load i32, i32* %4, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  store i32 %49, i32* %2, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 10), align 4
  %54 = add i32 %53, -1
  %55 = icmp ult i32 %47, %54
  br i1 %55, label %56, label %135

56:                                               ; preds = %52
  %57 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %58 = icmp ult i32 %48, %57
  br i1 %58, label %59, label %135

59:                                               ; preds = %56
  %60 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 4), align 8
  %61 = mul i32 %57, %47
  %62 = add i32 %61, %48
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i16, i16* %60, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %91, label %67

67:                                               ; preds = %59
  %68 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %69 = zext i16 %65 to i64
  %70 = getelementptr inbounds i16, i16* %68, i64 %69
  %71 = load i16, i16* %70, align 2
  %72 = getelementptr inbounds i16, i16* %70, i64 1
  %73 = icmp eq i16 %71, 0
  br i1 %73, label %91, label %74

74:                                               ; preds = %67
  %75 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %76 = zext i16 %71 to i64
  br label %77

77:                                               ; preds = %88, %74
  %78 = phi i64 [ 0, %74 ], [ %89, %88 ]
  %79 = getelementptr inbounds i16, i16* %72, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %77
  %83 = zext i16 %80 to i64
  %84 = getelementptr inbounds i16, i16* %75, i64 %83
  %85 = bitcast i16* %84 to i8*
  %86 = tail call i32 @ucnv_compareNames_69(i8* nonnull %0, i8* %85) #10
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %136, label %88

88:                                               ; preds = %82, %77
  %89 = add nuw nsw i64 %78, 1
  %90 = icmp eq i64 %89, %76
  br i1 %90, label %91, label %77

91:                                               ; preds = %88, %67, %59
  %92 = icmp eq i32 %49, -122
  br i1 %92, label %93, label %135

93:                                               ; preds = %91
  %94 = add i32 %47, 1
  %95 = mul i32 %57, %94
  %96 = icmp ult i32 %61, %95
  br i1 %96, label %97, label %135

97:                                               ; preds = %93
  %98 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %99 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %100 = zext i32 %61 to i64
  %101 = zext i32 %95 to i64
  br label %102

102:                                              ; preds = %129, %97
  %103 = phi i64 [ %100, %97 ], [ %130, %129 ]
  %104 = getelementptr inbounds i16, i16* %60, i64 %103
  %105 = load i16, i16* %104, align 2
  %106 = icmp eq i16 %105, 0
  br i1 %106, label %129, label %107

107:                                              ; preds = %102
  %108 = zext i16 %105 to i64
  %109 = getelementptr inbounds i16, i16* %98, i64 %108
  %110 = load i16, i16* %109, align 2
  %111 = getelementptr inbounds i16, i16* %109, i64 1
  %112 = icmp eq i16 %110, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %107
  %114 = zext i16 %110 to i64
  br label %115

115:                                              ; preds = %126, %113
  %116 = phi i64 [ 0, %113 ], [ %127, %126 ]
  %117 = getelementptr inbounds i16, i16* %111, i64 %116
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %115
  %121 = zext i16 %118 to i64
  %122 = getelementptr inbounds i16, i16* %99, i64 %121
  %123 = bitcast i16* %122 to i8*
  %124 = tail call i32 @ucnv_compareNames_69(i8* nonnull %0, i8* %123) #10
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %132, label %126

126:                                              ; preds = %120, %115
  %127 = add nuw nsw i64 %116, 1
  %128 = icmp eq i64 %127, %114
  br i1 %128, label %129, label %115

129:                                              ; preds = %126, %107, %102
  %130 = add nuw nsw i64 %103, 1
  %131 = icmp eq i64 %130, %101
  br i1 %131, label %135, label %102

132:                                              ; preds = %120
  %133 = trunc i64 %103 to i32
  %134 = sub i32 %133, %61
  br label %136

135:                                              ; preds = %129, %91, %56, %52, %93
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  br label %148

136:                                              ; preds = %82, %132
  %137 = phi i16* [ %99, %132 ], [ %75, %82 ]
  %138 = phi i32 [ %134, %132 ], [ %48, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  %139 = icmp ult i32 %138, %57
  br i1 %139, label %140, label %148

140:                                              ; preds = %136
  %141 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 0), align 8
  %142 = zext i32 %138 to i64
  %143 = getelementptr inbounds i16, i16* %141, i64 %142
  %144 = load i16, i16* %143, align 2
  %145 = zext i16 %144 to i64
  %146 = getelementptr inbounds i16, i16* %137, i64 %145
  %147 = bitcast i16* %146 to i8*
  br label %148

148:                                              ; preds = %135, %136, %3, %10, %9, %140
  %149 = phi i8* [ %147, %140 ], [ null, %9 ], [ null, %10 ], [ null, %3 ], [ null, %136 ], [ null, %135 ]
  ret i8* %149
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UEnumeration* @ucnv_openAllNames_69(i32*) local_unnamed_addr #3 {
  %2 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %0)
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %17, label %4

4:                                                ; preds = %1
  %5 = tail call noalias i8* @uprv_malloc_69(i64 56) #12
  %6 = bitcast i8* %5 to %struct.UEnumeration*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  store i32 7, i32* %0, align 4
  br label %17

9:                                                ; preds = %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast (%struct.UEnumeration* @_ZL18gEnumAllConverters to i8*), i64 56, i1 false)
  %10 = tail call noalias i8* @uprv_malloc_69(i64 2) #12
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  store i32 7, i32* %0, align 4
  tail call void @uprv_free_69(i8* nonnull %5) #10
  br label %17

13:                                               ; preds = %9
  %14 = bitcast i8* %10 to i16*
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds i8, i8* %5, i64 8
  %16 = bitcast i8* %15 to i8**
  store i8* %10, i8** %16, align 8
  br label %17

17:                                               ; preds = %1, %13, %12, %8
  %18 = phi %struct.UEnumeration* [ null, %8 ], [ null, %12 ], [ %6, %13 ], [ null, %1 ]
  ret %struct.UEnumeration* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @ucnv_io_countKnownConverters_69(i32*) local_unnamed_addr #3 {
  %2 = tail call fastcc signext i8 @_ZL13haveAliasDataP10UErrorCode(i32* %0)
  %3 = icmp eq i8 %2, 0
  %4 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %5 = trunc i32 %4 to i16
  %6 = select i1 %3, i16 0, i16 %5
  ret i16 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_swapAliases_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #3 {
  %6 = alloca [10 x i32], align 16
  %7 = alloca [10 x i32], align 16
  %8 = alloca [500 x %struct.TempRow], align 16
  %9 = alloca [500 x i16], align 16
  %10 = alloca %struct.TempAliasTable, align 8
  %11 = bitcast [10 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 40, i1 false)
  %12 = bitcast [10 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 40, i1 false)
  %13 = bitcast [500 x %struct.TempRow]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2000, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 2000, i1 false)
  %14 = bitcast [500 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1000, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 1000, i1 false)
  %15 = bitcast %struct.TempAliasTable* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #10
  %16 = getelementptr inbounds %struct.TempAliasTable, %struct.TempAliasTable* %10, i64 0, i32 1
  %17 = getelementptr inbounds %struct.TempAliasTable, %struct.TempAliasTable* %10, i64 0, i32 2
  %18 = getelementptr inbounds %struct.TempAliasTable, %struct.TempAliasTable* %10, i64 0, i32 3
  %19 = bitcast %struct.TempAliasTable* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = tail call i32 @udata_swapDataHeader_69(%struct.UDataSwapper* %0, i8* %1, i32 %2, i8* %3, i32* %4) #10
  %21 = icmp eq i32* %4, null
  br i1 %21, label %342, label %22

22:                                               ; preds = %5
  %23 = load i32, i32* %4, align 4
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %342

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %1, i64 12
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, 67
  %29 = getelementptr inbounds i8, i8* %1, i64 13
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 118
  %32 = and i1 %28, %31
  br i1 %32, label %33, label %45

33:                                               ; preds = %25
  %34 = getelementptr inbounds i8, i8* %1, i64 14
  %35 = load i8, i8* %34, align 2
  %36 = icmp eq i8 %35, 65
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %1, i64 15
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 108
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds i8, i8* %1, i64 16
  %43 = load i8, i8* %42, align 2
  %44 = icmp eq i8 %43, 3
  br i1 %44, label %58, label %45

45:                                               ; preds = %25, %41, %37, %33
  %46 = phi i8 [ 118, %41 ], [ 118, %37 ], [ 118, %33 ], [ %30, %25 ]
  %47 = zext i8 %27 to i32
  %48 = zext i8 %46 to i32
  %49 = getelementptr inbounds i8, i8* %1, i64 14
  %50 = load i8, i8* %49, align 2
  %51 = zext i8 %50 to i32
  %52 = getelementptr inbounds i8, i8* %1, i64 15
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds i8, i8* %1, i64 16
  %56 = load i8, i8* %55, align 2
  %57 = zext i8 %56 to i32
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str, i64 0, i64 0), i32 %47, i32 %48, i32 %51, i32 %54, i32 %57) #10
  store i32 16, i32* %4, align 4
  br label %342

58:                                               ; preds = %41
  %59 = icmp sgt i32 %2, -1
  br i1 %59, label %60, label %64

60:                                               ; preds = %58
  %61 = sub nsw i32 %2, %20
  %62 = icmp slt i32 %61, 36
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 %61) #10
  store i32 8, i32* %4, align 4
  br label %342

64:                                               ; preds = %60, %58
  %65 = sext i32 %20 to i64
  %66 = getelementptr inbounds i8, i8* %1, i64 %65
  %67 = bitcast i8* %66 to i32*
  %68 = bitcast i8* %66 to i16*
  %69 = getelementptr inbounds [10 x i32], [10 x i32]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 40, i1 false)
  %70 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %71 = load i32 (i32)*, i32 (i32)** %70, align 8
  %72 = load i32, i32* %67, align 4
  %73 = tail call i32 %71(i32 %72) #10
  store i32 %73, i32* %69, align 16
  %74 = and i32 %73, -2
  %75 = icmp eq i32 %74, 8
  br i1 %75, label %76, label %78

76:                                               ; preds = %64
  %77 = icmp eq i32 %73, 0
  br i1 %77, label %92, label %79

78:                                               ; preds = %64
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.2, i64 0, i64 0), i32 %73) #10
  store i32 3, i32* %4, align 4
  br label %342

79:                                               ; preds = %76, %79
  %80 = phi i32 [ %87, %79 ], [ 1, %76 ]
  %81 = load i32 (i32)*, i32 (i32)** %70, align 8
  %82 = zext i32 %80 to i64
  %83 = getelementptr inbounds i32, i32* %67, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = tail call i32 %81(i32 %84) #10
  %86 = getelementptr inbounds [10 x i32], [10 x i32]* %6, i64 0, i64 %82
  store i32 %85, i32* %86, align 4
  %87 = add i32 %80, 1
  %88 = icmp ugt i32 %87, %73
  br i1 %88, label %89, label %79

89:                                               ; preds = %79
  %90 = getelementptr inbounds [10 x i32], [10 x i32]* %6, i64 0, i64 1
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %89, %76
  %93 = phi i32 [ %91, %89 ], [ 0, %76 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 40, i1 false)
  %94 = add nuw i32 %73, 1
  %95 = shl i32 %94, 1
  %96 = getelementptr inbounds [10 x i32], [10 x i32]* %7, i64 0, i64 1
  store i32 %95, i32* %96, align 4
  %97 = icmp ult i32 %73, 2
  %98 = add i32 %93, %95
  br i1 %97, label %109, label %99

99:                                               ; preds = %92, %99
  %100 = phi i32 [ %108, %99 ], [ %98, %92 ]
  %101 = phi i32 [ %104, %99 ], [ 2, %92 ]
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [10 x i32], [10 x i32]* %7, i64 0, i64 %102
  store i32 %100, i32* %103, align 4
  %104 = add i32 %101, 1
  %105 = icmp ugt i32 %104, %73
  %106 = getelementptr inbounds [10 x i32], [10 x i32]* %6, i64 0, i64 %102
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, %100
  br i1 %105, label %109, label %99

109:                                              ; preds = %99, %92
  %110 = phi i32 [ %98, %92 ], [ %108, %99 ]
  br i1 %59, label %113, label %111

111:                                              ; preds = %109
  %112 = shl i32 %110, 1
  br label %339

113:                                              ; preds = %109
  %114 = sub nsw i32 %2, %20
  %115 = shl i32 %110, 1
  %116 = icmp slt i32 %114, %115
  br i1 %116, label %117, label %118

117:                                              ; preds = %113
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 %114) #10
  store i32 8, i32* %4, align 4
  br label %342

118:                                              ; preds = %113
  %119 = getelementptr inbounds i8, i8* %3, i64 %65
  %120 = bitcast i8* %119 to i16*
  %121 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %122 = bitcast {}** %121 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %123 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %122, align 8
  %124 = shl i32 %94, 2
  %125 = tail call i32 %123(%struct.UDataSwapper* %0, i8* %66, i32 %124, i8* %119, i32* nonnull %4) #10
  %126 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 12
  %127 = bitcast {}** %126 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %128 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %127, align 8
  %129 = getelementptr inbounds [10 x i32], [10 x i32]* %7, i64 0, i64 8
  %130 = load i32, i32* %129, align 16
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i16, i16* %68, i64 %131
  %133 = bitcast i16* %132 to i8*
  %134 = getelementptr inbounds [10 x i32], [10 x i32]* %6, i64 0, i64 8
  %135 = load i32, i32* %134, align 16
  %136 = getelementptr inbounds [10 x i32], [10 x i32]* %6, i64 0, i64 9
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, %135
  %139 = shl nsw i32 %138, 1
  %140 = getelementptr inbounds i16, i16* %120, i64 %131
  %141 = bitcast i16* %140 to i8*
  %142 = tail call i32 %128(%struct.UDataSwapper* %0, i8* %133, i32 %139, i8* %141, i32* nonnull %4) #10
  %143 = load i32, i32* %4, align 4
  %144 = icmp slt i32 %143, 1
  br i1 %144, label %146, label %145

145:                                              ; preds = %118
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %342

146:                                              ; preds = %118
  %147 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 1
  %148 = load i8, i8* %147, align 1
  %149 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 3
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %148, %150
  br i1 %151, label %152, label %165

152:                                              ; preds = %146
  %153 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %154 = bitcast {}** %153 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %155 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %154, align 8
  %156 = load i32, i32* %96, align 4
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds i16, i16* %68, i64 %157
  %159 = bitcast i16* %158 to i8*
  %160 = sub i32 %130, %156
  %161 = shl nsw i32 %160, 1
  %162 = getelementptr inbounds i16, i16* %120, i64 %157
  %163 = bitcast i16* %162 to i8*
  %164 = tail call i32 %155(%struct.UDataSwapper* %0, i8* %159, i32 %161, i8* %163, i32* nonnull %4) #10
  br label %339

165:                                              ; preds = %146
  %166 = getelementptr inbounds [10 x i32], [10 x i32]* %6, i64 0, i64 3
  %167 = load i32, i32* %166, align 4
  %168 = bitcast %struct.TempAliasTable* %10 to i16**
  store i16* %140, i16** %168, align 8
  %169 = icmp ult i32 %167, 501
  br i1 %169, label %170, label %174

170:                                              ; preds = %165
  %171 = getelementptr inbounds [500 x %struct.TempRow], [500 x %struct.TempRow]* %8, i64 0, i64 0
  store %struct.TempRow* %171, %struct.TempRow** %16, align 8
  %172 = getelementptr inbounds [500 x i16], [500 x i16]* %9, i64 0, i64 0
  %173 = bitcast [500 x %struct.TempRow]* %8 to i8*
  br label %188

174:                                              ; preds = %165
  %175 = zext i32 %167 to i64
  %176 = shl nuw nsw i64 %175, 2
  %177 = shl i32 %167, 1
  %178 = zext i32 %177 to i64
  %179 = add nuw nsw i64 %176, %178
  %180 = tail call noalias i8* @uprv_malloc_69(i64 %179) #12
  %181 = bitcast %struct.TempRow** %16 to i8**
  store i8* %180, i8** %181, align 8
  %182 = icmp eq i8* %180, null
  br i1 %182, label %183, label %184

183:                                              ; preds = %174
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.4, i64 0, i64 0), i32 %167) #10
  store i32 7, i32* %4, align 4
  br label %342

184:                                              ; preds = %174
  %185 = bitcast i8* %180 to %struct.TempRow*
  %186 = getelementptr inbounds %struct.TempRow, %struct.TempRow* %185, i64 %175, i32 0
  %187 = load i8, i8* %149, align 1
  br label %188

188:                                              ; preds = %184, %170
  %189 = phi i8* [ %180, %184 ], [ %173, %170 ]
  %190 = phi i8 [ %187, %184 ], [ %150, %170 ]
  %191 = phi i16* [ %186, %184 ], [ %172, %170 ]
  store i16* %191, i16** %17, align 8
  %192 = icmp eq i8 %190, 0
  %193 = select i1 %192, i8* (i8*, i8*)* @ucnv_io_stripASCIIForCompare_69, i8* (i8*, i8*)* @ucnv_io_stripEBCDICForCompare_69
  store i8* (i8*, i8*)* %193, i8* (i8*, i8*)** %18, align 8
  %194 = getelementptr inbounds [10 x i32], [10 x i32]* %7, i64 0, i64 3
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds i16, i16* %68, i64 %196
  %198 = getelementptr inbounds i16, i16* %120, i64 %196
  %199 = getelementptr inbounds [10 x i32], [10 x i32]* %7, i64 0, i64 4
  %200 = load i32, i32* %199, align 16
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i16, i16* %68, i64 %201
  %203 = getelementptr inbounds i16, i16* %120, i64 %201
  %204 = icmp eq i32 %167, 0
  br i1 %204, label %224, label %205

205:                                              ; preds = %188
  %206 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 4
  %207 = zext i32 %167 to i64
  br label %208

208:                                              ; preds = %208, %205
  %209 = phi i64 [ 0, %205 ], [ %219, %208 ]
  %210 = load i16 (i16)*, i16 (i16)** %206, align 8
  %211 = getelementptr inbounds i16, i16* %197, i64 %209
  %212 = load i16, i16* %211, align 2
  %213 = call zeroext i16 %210(i16 zeroext %212) #10
  %214 = load %struct.TempRow*, %struct.TempRow** %16, align 8
  %215 = getelementptr inbounds %struct.TempRow, %struct.TempRow* %214, i64 %209, i32 0
  store i16 %213, i16* %215, align 2
  %216 = trunc i64 %209 to i16
  %217 = load %struct.TempRow*, %struct.TempRow** %16, align 8
  %218 = getelementptr inbounds %struct.TempRow, %struct.TempRow* %217, i64 %209, i32 1
  store i16 %216, i16* %218, align 2
  %219 = add nuw nsw i64 %209, 1
  %220 = icmp eq i64 %219, %207
  br i1 %220, label %221, label %208

221:                                              ; preds = %208
  %222 = bitcast %struct.TempRow** %16 to i8**
  %223 = load i8*, i8** %222, align 8
  br label %224

224:                                              ; preds = %188, %221
  %225 = phi i8* [ %223, %221 ], [ %189, %188 ]
  call void @uprv_sortArray_69(i8* %225, i32 %167, i32 4, i32 (i8*, i8*, i8*)* nonnull @_ZL14io_compareRowsPKvS0_S0_, i8* nonnull %15, i8 signext 0, i32* nonnull %4) #10
  %226 = load i32, i32* %4, align 4
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %305, label %228

228:                                              ; preds = %224
  %229 = icmp eq i8* %1, %3
  br i1 %229, label %255, label %230

230:                                              ; preds = %228
  br i1 %204, label %305, label %231

231:                                              ; preds = %230
  %232 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %233 = bitcast {}** %232 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %234 = zext i32 %167 to i64
  br label %235

235:                                              ; preds = %235, %231
  %236 = phi i64 [ 0, %231 ], [ %253, %235 ]
  %237 = load %struct.TempRow*, %struct.TempRow** %16, align 8
  %238 = getelementptr inbounds %struct.TempRow, %struct.TempRow* %237, i64 %236, i32 1
  %239 = load i16, i16* %238, align 2
  %240 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %233, align 8
  %241 = zext i16 %239 to i64
  %242 = getelementptr inbounds i16, i16* %197, i64 %241
  %243 = bitcast i16* %242 to i8*
  %244 = getelementptr inbounds i16, i16* %198, i64 %236
  %245 = bitcast i16* %244 to i8*
  %246 = call i32 %240(%struct.UDataSwapper* %0, i8* %243, i32 2, i8* %245, i32* nonnull %4) #10
  %247 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %233, align 8
  %248 = getelementptr inbounds i16, i16* %202, i64 %241
  %249 = bitcast i16* %248 to i8*
  %250 = getelementptr inbounds i16, i16* %203, i64 %236
  %251 = bitcast i16* %250 to i8*
  %252 = call i32 %247(%struct.UDataSwapper* %0, i8* %249, i32 2, i8* %251, i32* nonnull %4) #10
  %253 = add nuw nsw i64 %236, 1
  %254 = icmp eq i64 %253, %234
  br i1 %254, label %305, label %235

255:                                              ; preds = %228
  %256 = load i16*, i16** %17, align 8
  br i1 %204, label %257, label %262

257:                                              ; preds = %255
  %258 = zext i32 %167 to i64
  %259 = bitcast i16* %198 to i8*
  %260 = bitcast i16* %256 to i8*
  %261 = shl nuw nsw i64 %258, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %259, i8* align 2 %260, i64 %261, i1 false)
  br label %301

262:                                              ; preds = %255
  %263 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %264 = bitcast {}** %263 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %265 = zext i32 %167 to i64
  br label %266

266:                                              ; preds = %266, %262
  %267 = phi i64 [ 0, %262 ], [ %278, %266 ]
  %268 = load %struct.TempRow*, %struct.TempRow** %16, align 8
  %269 = getelementptr inbounds %struct.TempRow, %struct.TempRow* %268, i64 %267, i32 1
  %270 = load i16, i16* %269, align 2
  %271 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %264, align 8
  %272 = zext i16 %270 to i64
  %273 = getelementptr inbounds i16, i16* %197, i64 %272
  %274 = bitcast i16* %273 to i8*
  %275 = getelementptr inbounds i16, i16* %256, i64 %267
  %276 = bitcast i16* %275 to i8*
  %277 = call i32 %271(%struct.UDataSwapper* %0, i8* %274, i32 2, i8* %276, i32* nonnull %4) #10
  %278 = add nuw nsw i64 %267, 1
  %279 = icmp eq i64 %278, %265
  br i1 %279, label %280, label %266

280:                                              ; preds = %266
  %281 = bitcast i16* %198 to i8*
  %282 = bitcast i16* %256 to i8*
  %283 = shl nuw nsw i64 %265, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %281, i8* align 2 %282, i64 %283, i1 false)
  br i1 %204, label %301, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %286 = bitcast {}** %285 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  br label %287

287:                                              ; preds = %287, %284
  %288 = phi i64 [ 0, %284 ], [ %299, %287 ]
  %289 = load %struct.TempRow*, %struct.TempRow** %16, align 8
  %290 = getelementptr inbounds %struct.TempRow, %struct.TempRow* %289, i64 %288, i32 1
  %291 = load i16, i16* %290, align 2
  %292 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %286, align 8
  %293 = zext i16 %291 to i64
  %294 = getelementptr inbounds i16, i16* %202, i64 %293
  %295 = bitcast i16* %294 to i8*
  %296 = getelementptr inbounds i16, i16* %256, i64 %288
  %297 = bitcast i16* %296 to i8*
  %298 = call i32 %292(%struct.UDataSwapper* %0, i8* %295, i32 2, i8* %297, i32* nonnull %4) #10
  %299 = add nuw nsw i64 %288, 1
  %300 = icmp eq i64 %299, %265
  br i1 %300, label %301, label %287

301:                                              ; preds = %287, %257, %280
  %302 = phi i64 [ 0, %257 ], [ %283, %280 ], [ %283, %287 ]
  %303 = phi i8* [ %260, %257 ], [ %282, %280 ], [ %282, %287 ]
  %304 = bitcast i16* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %304, i8* align 2 %303, i64 %302, i1 false)
  br label %305

305:                                              ; preds = %235, %230, %224, %301
  %306 = load %struct.TempRow*, %struct.TempRow** %16, align 8
  %307 = getelementptr inbounds [500 x %struct.TempRow], [500 x %struct.TempRow]* %8, i64 0, i64 0
  %308 = icmp eq %struct.TempRow* %306, %307
  br i1 %308, label %311, label %309

309:                                              ; preds = %305
  %310 = bitcast %struct.TempRow* %306 to i8*
  call void @uprv_free_69(i8* %310) #10
  br label %311

311:                                              ; preds = %305, %309
  %312 = load i32, i32* %4, align 4
  %313 = icmp slt i32 %312, 1
  br i1 %313, label %315, label %314

314:                                              ; preds = %311
  call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), i32 %167) #10
  br label %342

315:                                              ; preds = %311
  %316 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %317 = bitcast {}** %316 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %318 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %317, align 8
  %319 = load i32, i32* %96, align 4
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds i16, i16* %68, i64 %320
  %322 = bitcast i16* %321 to i8*
  %323 = sub i32 %195, %319
  %324 = shl nsw i32 %323, 1
  %325 = getelementptr inbounds i16, i16* %120, i64 %320
  %326 = bitcast i16* %325 to i8*
  %327 = call i32 %318(%struct.UDataSwapper* %0, i8* %322, i32 %324, i8* %326, i32* nonnull %4) #10
  %328 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %317, align 8
  %329 = getelementptr inbounds [10 x i32], [10 x i32]* %7, i64 0, i64 5
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds i16, i16* %68, i64 %331
  %333 = bitcast i16* %332 to i8*
  %334 = sub i32 %130, %330
  %335 = shl nsw i32 %334, 1
  %336 = getelementptr inbounds i16, i16* %120, i64 %331
  %337 = bitcast i16* %336 to i8*
  %338 = call i32 %328(%struct.UDataSwapper* %0, i8* %333, i32 %335, i8* %337, i32* nonnull %4) #10
  br label %339

339:                                              ; preds = %111, %315, %152
  %340 = phi i32 [ %112, %111 ], [ %115, %315 ], [ %115, %152 ]
  %341 = add nsw i32 %340, %20
  br label %342

342:                                              ; preds = %183, %314, %145, %117, %5, %22, %339, %78, %63, %45
  %343 = phi i32 [ 0, %63 ], [ 0, %78 ], [ %341, %339 ], [ 0, %45 ], [ 0, %22 ], [ 0, %5 ], [ 0, %117 ], [ 0, %145 ], [ 0, %314 ], [ 0, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 1000, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 2000, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #10
  ret i32 %343
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @udata_swapDataHeader_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #6

declare void @udata_printError_69(%struct.UDataSwapper*, i8*, ...) local_unnamed_addr #6

declare void @uprv_sortArray_69(i8*, i32, i32, i32 (i8*, i8*, i8*)*, i8*, i8 signext, i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL14io_compareRowsPKvS0_S0_(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #3 {
  %4 = alloca [60 x i8], align 16
  %5 = alloca [60 x i8], align 16
  %6 = getelementptr inbounds [60 x i8], [60 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 60, i1 false)
  %7 = getelementptr inbounds [60 x i8], [60 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 60, i1 false)
  %8 = bitcast i8* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to i8* (i8*, i8*)**
  %12 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %11, align 8
  %13 = bitcast i8* %1 to i16*
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i64
  %16 = shl nuw nsw i64 %15, 1
  %17 = getelementptr inbounds i8, i8* %9, i64 %16
  %18 = call i8* %12(i8* nonnull %6, i8* %17) #10
  %19 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %11, align 8
  %20 = bitcast i8* %2 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i64
  %23 = shl nuw nsw i64 %22, 1
  %24 = getelementptr inbounds i8, i8* %9, i64 %23
  %25 = call i8* %19(i8* nonnull %7, i8* %24) #10
  %26 = call i32 @strcmp(i8* %18, i8* %25) #11
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %6) #10
  ret i32 %26
}

declare signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #6

declare void @ucln_common_registerCleanup_69(i32, i8 ()*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal signext i8 @_ZL15ucnv_io_cleanupv() #3 {
  %1 = load %struct.UDataMemory*, %struct.UDataMemory** @_ZL10gAliasData, align 8
  %2 = icmp eq %struct.UDataMemory* %1, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void @udata_close_69(%struct.UDataMemory* nonnull %1) #10
  store %struct.UDataMemory* null, %struct.UDataMemory** @_ZL10gAliasData, align 8
  br label %4

4:                                                ; preds = %0, %3
  store atomic i32 0, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL18gAliasDataInitOnce, i64 0, i32 0, i32 0, i32 0) seq_cst, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.UConverterAlias* @_ZL10gMainTable to i8*), i8 0, i64 112, i1 false)
  ret i8 1
}

declare %struct.UDataMemory* @udata_openChoice_69(i8*, i8*, i8*, i8 (i8*, i8*, i8*, %struct.UDataInfo*)*, i8*, i32*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal signext i8 @_ZL12isAcceptablePvPKcS1_PK9UDataInfo(i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, %struct.UDataInfo* nocapture readonly) #2 {
  %5 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = icmp ugt i16 %6, 19
  br i1 %7, label %8, label %37

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 2
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %37

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 3
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 0
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 67
  br i1 %19, label %20, label %37

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 118
  br i1 %23, label %24, label %37

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 2
  %26 = load i8, i8* %25, align 2
  %27 = icmp eq i8 %26, 65
  br i1 %27, label %28, label %37

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 108
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 7, i64 0
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 3
  %36 = zext i1 %35 to i8
  br label %37

37:                                               ; preds = %32, %28, %24, %20, %16, %12, %8, %4
  %38 = phi i8 [ 0, %28 ], [ 0, %24 ], [ 0, %20 ], [ 0, %16 ], [ 0, %12 ], [ 0, %8 ], [ 0, %4 ], [ %36, %32 ]
  ret i8 %38
}

declare i8* @udata_getMemory_69(%struct.UDataMemory*) local_unnamed_addr #6

declare void @udata_close_69(%struct.UDataMemory*) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

declare i32 @uprv_stricmp_69(i8*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL25ucnv_io_closeUEnumerationP12UEnumeration(%struct.UEnumeration*) #3 {
  %2 = getelementptr inbounds %struct.UEnumeration, %struct.UEnumeration* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  tail call void @uprv_free_69(i8* %3) #10
  %4 = bitcast %struct.UEnumeration* %0 to i8*
  tail call void @uprv_free_69(i8* %4) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZL28ucnv_io_countStandardAliasesP12UEnumerationP10UErrorCode(%struct.UEnumeration* nocapture readonly, i32* nocapture readnone) #2 {
  %3 = getelementptr inbounds %struct.UEnumeration, %struct.UEnumeration* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to %struct.UAliasContext**
  %5 = load %struct.UAliasContext*, %struct.UAliasContext** %4, align 8
  %6 = getelementptr inbounds %struct.UAliasContext, %struct.UAliasContext* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %11 = zext i32 %7 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i32 [ %14, %9 ], [ 0, %2 ]
  ret i32 %16
}

declare i16* @uenum_unextDefault_69(%struct.UEnumeration*, i32*, i32*) #6

; Function Attrs: nofree nounwind ssp uwtable
define internal i8* @_ZL27ucnv_io_nextStandardAliasesP12UEnumerationPiP10UErrorCode(%struct.UEnumeration* nocapture readonly, i32*, i32* nocapture readnone) #9 {
  %4 = getelementptr inbounds %struct.UEnumeration, %struct.UEnumeration* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to %struct.UAliasContext**
  %6 = load %struct.UAliasContext*, %struct.UAliasContext** %5, align 8
  %7 = getelementptr inbounds %struct.UAliasContext, %struct.UAliasContext* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %3
  %11 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 5), align 8
  %12 = zext i32 %8 to i64
  %13 = getelementptr inbounds i16, i16* %11, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = getelementptr inbounds %struct.UAliasContext, %struct.UAliasContext* %6, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %17, %15
  br i1 %18, label %19, label %33

19:                                               ; preds = %10
  %20 = getelementptr inbounds i16, i16* %13, i64 1
  %21 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %22 = add nuw i32 %17, 1
  store i32 %22, i32* %16, align 4
  %23 = zext i32 %17 to i64
  %24 = getelementptr inbounds i16, i16* %20, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i64
  %27 = getelementptr inbounds i16, i16* %21, i64 %26
  %28 = bitcast i16* %27 to i8*
  %29 = icmp eq i32* %1, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %19
  %31 = tail call i64 @strlen(i8* %28) #11
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %1, align 4
  br label %36

33:                                               ; preds = %10, %3
  %34 = icmp eq i32* %1, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %33
  store i32 0, i32* %1, align 4
  br label %36

36:                                               ; preds = %30, %19, %35, %33
  %37 = phi i8* [ null, %33 ], [ null, %35 ], [ %28, %19 ], [ %28, %30 ]
  ret i8* %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL28ucnv_io_resetStandardAliasesP12UEnumerationP10UErrorCode(%struct.UEnumeration* nocapture readonly, i32* nocapture readnone) #0 {
  %3 = getelementptr inbounds %struct.UEnumeration, %struct.UEnumeration* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to %struct.UAliasContext**
  %5 = load %struct.UAliasContext*, %struct.UAliasContext** %4, align 8
  %6 = getelementptr inbounds %struct.UAliasContext, %struct.UAliasContext* %5, i64 0, i32 1
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZL26ucnv_io_countAllConvertersP12UEnumerationP10UErrorCode(%struct.UEnumeration* nocapture readnone, i32* nocapture readnone) #2 {
  %3 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  ret i32 %3
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i8* @_ZL25ucnv_io_nextAllConvertersP12UEnumerationPiP10UErrorCode(%struct.UEnumeration* nocapture readonly, i32*, i32* nocapture readnone) #9 {
  %4 = getelementptr inbounds %struct.UEnumeration, %struct.UEnumeration* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i16**
  %6 = load i16*, i16** %5, align 8
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = load i32, i32* getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 9), align 8
  %10 = icmp ugt i32 %9, %8
  br i1 %10, label %11, label %25

11:                                               ; preds = %3
  %12 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 7), align 8
  %13 = load i16*, i16** getelementptr inbounds (%struct.UConverterAlias, %struct.UConverterAlias* @_ZL10gMainTable, i64 0, i32 0), align 8
  %14 = add i16 %7, 1
  store i16 %14, i16* %6, align 2
  %15 = zext i16 %7 to i64
  %16 = getelementptr inbounds i16, i16* %13, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds i16, i16* %12, i64 %18
  %20 = bitcast i16* %19 to i8*
  %21 = icmp eq i32* %1, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %11
  %23 = tail call i64 @strlen(i8* %20) #11
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %1, align 4
  br label %28

25:                                               ; preds = %3
  %26 = icmp eq i32* %1, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %25
  store i32 0, i32* %1, align 4
  br label %28

28:                                               ; preds = %27, %25, %22, %11
  %29 = phi i8* [ %20, %11 ], [ %20, %22 ], [ null, %25 ], [ null, %27 ]
  ret i8* %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL26ucnv_io_resetAllConvertersP12UEnumerationP10UErrorCode(%struct.UEnumeration* nocapture readonly, i32* nocapture readnone) #0 {
  %3 = getelementptr inbounds %struct.UEnumeration, %struct.UEnumeration* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i16**
  %5 = load i16*, i16** %4, align 8
  store i16 0, i16* %5, align 2
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = !{!8}
!8 = distinct !{!8, !4}
!9 = !{!3, !6}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !11}
