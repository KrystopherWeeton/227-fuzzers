; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_absolute_utils.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_absolute_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1798", %"class.std::__1::unique_ptr.1803", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1824, %"class.blink::Persistent.1825" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2157 }
%class.scoped_refptr.2157 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2158", %"class.WTF::Vector.630", %"class.WTF::Vector.2160", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2158" = type { %"class.base::RefCounted.2159" }
%"class.base::RefCounted.2159" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2160" = type { %"class.WTF::VectorBuffer.2161" }
%"class.WTF::VectorBuffer.2161" = type { %"class.WTF::VectorBufferBase.2162" }
%"class.WTF::VectorBufferBase.2162" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2163 }
%union.anon.2163 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2148" }
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2150" }
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2171 }
%class.scoped_refptr.2171 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2181" }
%"class.blink::Member.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2177" }
%"class.blink::MemberBase.2177" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2178" }
%"class.blink::MemberBase.2178" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2180" }
%"class.blink::MemberBase.2180" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2172", %"class.WTF::Vector.2172" }
%"class.WTF::Vector.2172" = type { %"class.WTF::VectorBuffer.2173" }
%"class.WTF::VectorBuffer.2173" = type { %"class.WTF::VectorBufferBase.2174" }
%"class.WTF::VectorBufferBase.2174" = type { %class.scoped_refptr.2171*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2152" }
%"class.WTF::Vector.2152" = type { %"class.WTF::VectorBuffer.2153" }
%"class.WTF::VectorBuffer.2153" = type { %"class.WTF::VectorBufferBase.2154" }
%"class.WTF::VectorBufferBase.2154" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1641", %"class.absl::optional.1641", %"class.absl::optional.1641" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2167" }
%"class.WTF::VectorBuffer.2167" = type { %"class.WTF::VectorBufferBase.2168", [32 x i8] }
%"class.WTF::VectorBufferBase.2168" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1779, %union.anon.1797, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1634, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1634 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1635 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1635 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1670", [4 x i8], %"class.std::__1::unique_ptr.1672", i64, %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.WTF::Vector.1687", %"class.WTF::Vector.1705", %class.scoped_refptr.1546, %"class.WTF::HashMap.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1676", %"class.WTF::Vector.1721", %"class.WTF::HashMap.1726", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1670" = type { %"class.base::RefCountedThreadSafe.1671" }
%"class.base::RefCountedThreadSafe.1671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { i8* }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [8 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %class.scoped_refptr.1684*, i32, i32 }
%class.scoped_refptr.1684 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1691", %"class.std::__1::unique_ptr.1697" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1708", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1708" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type opaque
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718" }
%"class.WTF::VectorBufferBase.1718" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [16 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type { i8**, %"class.std::__1::unique_ptr.2183" }
%"class.std::__1::unique_ptr.2183" = type { %"class.std::__1::__compressed_pair.2184" }
%"class.std::__1::__compressed_pair.2184" = type { %"struct.std::__1::__compressed_pair_elem.2185" }
%"struct.std::__1::__compressed_pair_elem.2185" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1734, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1751" }
%class.scoped_refptr.1734 = type { %"class.base::RefCountedData.1735"* }
%"class.base::RefCountedData.1735" = type { %"class.base::RefCountedThreadSafe.1736", %"class.WTF::Vector.1737" }
%"class.base::RefCountedThreadSafe.1736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %class.scoped_refptr.1740*, i32, i32 }
%class.scoped_refptr.1740 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1741", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1743" }
%"class.WTF::RefCounted.1741" = type { %"class.base::RefCounted.1742" }
%"class.base::RefCounted.1742" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1754", %"class.WTF::Vector.1767", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756", [320 x i8] }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1757", %"class.WTF::Vector.1757", %class.scoped_refptr.1762, i8, [7 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [8 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1762 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1763", %"class.WTF::Vector.1737", %"class.WTF::Vector.1737" }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [288 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1757", %"class.WTF::Vector.1757" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1770 }
%class.scoped_refptr.1770 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1779 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1780", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1782, %"class.std::__1::unique_ptr.1785" }
%"class.WTF::RefCounted.1780" = type { %"class.base::RefCounted.1781" }
%"class.base::RefCounted.1781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1782 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.WTF::Vector.1788"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1791 }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1791 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%union.anon.1797 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1636", %class.scoped_refptr.1841, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1842, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1669, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1843", %"class.absl::optional.1859" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1841 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1864", [4 x i8], %union.anon.1866, %class.scoped_refptr.1841, i32, [4 x i8] }>
%"class.WTF::RefCounted.1864" = type { %"class.base::RefCounted.1865" }
%"class.base::RefCounted.1865" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1866 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%union.anon.1842 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1843" = type { %"class.std::__1::__compressed_pair.1844" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1845" }
%"struct.std::__1::__compressed_pair_elem.1845" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1846", %"class.WTF::Vector.1851", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1846" = type { %"class.WTF::VectorBuffer.1847" }
%"class.WTF::VectorBuffer.1847" = type { %"class.WTF::VectorBufferBase.1848" }
%"class.WTF::VectorBufferBase.1848" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1851" = type { %"class.WTF::VectorBuffer.1852" }
%"class.WTF::VectorBuffer.1852" = type { %"class.WTF::VectorBufferBase.1853" }
%"class.WTF::VectorBufferBase.1853" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1859" = type { %"class.absl::optional_internal::optional_data.1860" }
%"class.absl::optional_internal::optional_data.1860" = type { %"class.absl::optional_internal::optional_data_base.1861" }
%"class.absl::optional_internal::optional_data_base.1861" = type { %"class.absl::optional_internal::optional_data_dtor_base.1862" }
%"class.absl::optional_internal::optional_data_dtor_base.1862" = type { i8, %union.anon.1863 }
%union.anon.1863 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800", [8 x i8] }
%"class.WTF::VectorBufferBase.1800" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1806", %"class.absl::optional.1811", %"class.absl::optional.1816" }
%"class.absl::optional.1806" = type { %"class.absl::optional_internal::optional_data.1807" }
%"class.absl::optional_internal::optional_data.1807" = type { %"class.absl::optional_internal::optional_data_base.1808" }
%"class.absl::optional_internal::optional_data_base.1808" = type { %"class.absl::optional_internal::optional_data_dtor_base.1809" }
%"class.absl::optional_internal::optional_data_dtor_base.1809" = type { i8, %union.anon.1810 }
%union.anon.1810 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1824 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1825" = type { %"class.blink::PersistentBase.1826" }
%"class.blink::PersistentBase.1826" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1829", %"struct.blink::PhysicalRect", %"class.blink::Member.1839" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.WTF::HashSet.1832"* }
%"class.WTF::HashSet.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"class.absl::optional.1867" = type { %"class.absl::optional_internal::optional_data.1868" }
%"class.absl::optional_internal::optional_data.1868" = type { %"class.absl::optional_internal::optional_data_base.1869" }
%"class.absl::optional_internal::optional_data_base.1869" = type { %"class.absl::optional_internal::optional_data_dtor_base.1870" }
%"class.absl::optional_internal::optional_data_dtor_base.1870" = type { i8, %union.anon.1871 }
%union.anon.1871 = type { %"struct.blink::LogicalSize" }
%"struct.blink::NGLogicalOutOfFlowDimensions" = type { %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut" }
%"class.absl::optional.2190" = type { %"class.absl::optional_internal::optional_data.2191" }
%"class.absl::optional_internal::optional_data.2191" = type { %"class.absl::optional_internal::optional_data_base.2192" }
%"class.absl::optional_internal::optional_data_base.2192" = type { %"class.absl::optional_internal::optional_data_dtor_base.2193" }
%"class.absl::optional_internal::optional_data_dtor_base.2193" = type { i8, %union.anon.2194 }
%union.anon.2194 = type { %"struct.blink::MinMaxSizes" }
%class.anon = type { %"class.blink::NGBlockNode"*, i8*, i8*, %"class.blink::ComputedStyle"*, %"class.blink::NGConstraintSpace"*, %"struct.blink::NGLogicalOutOfFlowDimensions"**, %"struct.blink::NGBoxStrut"*, %"struct.blink::NGLogicalStaticPosition"*, %"class.blink::WritingDirectionMode"* }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%class.anon.1877 = type { %"class.blink::NGBlockNode"*, %"struct.blink::NGLogicalOutOfFlowDimensions"**, %class.scoped_refptr.1631*, %"class.blink::ComputedStyle"*, %"class.blink::NGConstraintSpace"* }
%class.anon.1878 = type { %"class.blink::NGBlockNode"*, %class.anon.1877* }
%"class.blink::NGConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpace", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%"class.blink::NGBoxFragmentBuilder" = type { %"class.blink::NGContainerFragmentBuilder.base", %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.absl::optional.1883", %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGBlockNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.2061", i32, %"class.absl::optional.1636", %"class.absl::optional.1636", %"class.absl::optional.2066", %"class.absl::optional.2071", %class.scoped_refptr.2081, %"class.std::__1::unique_ptr.2099", %"class.absl::optional.2110", %"class.absl::optional.2110", %"class.std::__1::unique_ptr.2115", %"struct.blink::LogicalBoxSides", %class.scoped_refptr.1669, %"class.absl::optional.1641", %"class.std::__1::unique_ptr.2121", %"class.absl::optional.1859", %class.scoped_refptr.2127 }
%"class.blink::NGContainerFragmentBuilder.base" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1636", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1880", %"class.WTF::Vector.1880", %"class.WTF::Vector.1880", %"class.WTF::HashMap.1890", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2021", %"class.WTF::Vector.2026", %class.scoped_refptr.2031, %class.scoped_refptr.1841, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.1879, i8, i8 }>
%class.scoped_refptr.1879 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.1880" = type { %"class.WTF::VectorBuffer.1881" }
%"class.WTF::VectorBuffer.1881" = type { %"class.WTF::VectorBufferBase.1882" }
%"class.WTF::VectorBufferBase.1882" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.1883", [4 x i8] }>
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.1779 }
%"class.WTF::HashMap.1890" = type { %"class.WTF::HashTable.1891" }
%"class.WTF::HashTable.1891" = type <{ %"struct.WTF::KeyValuePair.1894"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1894" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.1946" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1895", %"class.std::__1::unique_ptr.1915" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1895" = type { %"class.blink::PersistentBase.1896" }
%"class.blink::PersistentBase.1896" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1899", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1899" = type { %"class.std::__1::__compressed_pair.1900" }
%"class.std::__1::__compressed_pair.1900" = type { %"struct.std::__1::__compressed_pair_elem.1901" }
%"struct.std::__1::__compressed_pair_elem.1901" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1902", %"class.WTF::HashMap.1907", %"class.WTF::String" }
%"class.WTF::Vector.1902" = type { %"class.WTF::VectorBuffer.1903" }
%"class.WTF::VectorBuffer.1903" = type { %"class.WTF::VectorBufferBase.1904" }
%"class.WTF::VectorBufferBase.1904" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1907" = type { %"class.WTF::HashTable.1908" }
%"class.WTF::HashTable.1908" = type <{ %"struct.WTF::KeyValuePair.1911"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1911" = type opaque
%"class.std::__1::unique_ptr.1915" = type { %"class.std::__1::__compressed_pair.1916" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.1917" }
%"struct.std::__1::__compressed_pair_elem.1917" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1918", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1918" = type { %"class.WTF::HashTable.1921", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1921" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1924", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1924" = type { %"class.std::__1::__compressed_pair.1925" }
%"class.std::__1::__compressed_pair.1925" = type { %"struct.std::__1::__compressed_pair_elem.1926" }
%"struct.std::__1::__compressed_pair_elem.1926" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1927, %"class.std::__1::unique_ptr.1928", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1927 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2128", i16, %class.scoped_refptr.1927 }
%"class.WTF::ThreadSafeRefCounted.2128" = type { %"class.base::RefCountedThreadSafe.2129" }
%"class.base::RefCountedThreadSafe.2129" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.WTF::Vector.1931"* }
%"class.WTF::Vector.1931" = type { %"class.WTF::VectorBuffer.1932" }
%"class.WTF::VectorBuffer.1932" = type { %"class.WTF::VectorBufferBase.1933" }
%"class.WTF::VectorBufferBase.1933" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1942, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1942 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1946" = type { %"class.std::__1::__compressed_pair.1947" }
%"class.std::__1::__compressed_pair.1947" = type { %"struct.std::__1::__compressed_pair_elem.1948" }
%"struct.std::__1::__compressed_pair_elem.1948" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.1990", %"class.std::__1::unique_ptr.1996", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1949", %"class.std::__1::unique_ptr.1975", %"class.std::__1::unique_ptr.1899" }
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951" }
%"class.WTF::VectorBufferBase.1951" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1952, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.1952 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1953", float, %"class.blink::FloatRect", %"class.WTF::Vector.1955", %class.scoped_refptr.1961, %"class.std::__1::unique_ptr.1962", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1953" = type { %"class.base::RefCounted.1954" }
%"class.base::RefCounted.1954" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1955" = type { %"class.WTF::VectorBuffer.1956" }
%"class.WTF::VectorBuffer.1956" = type { %"class.WTF::VectorBufferBase.1957" }
%"class.WTF::VectorBufferBase.1957" = type { %class.scoped_refptr.1958*, i32, i32 }
%class.scoped_refptr.1958 = type opaque
%class.scoped_refptr.1961 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.1962" = type { %"class.std::__1::__compressed_pair.1963" }
%"class.std::__1::__compressed_pair.1963" = type { %"struct.std::__1::__compressed_pair_elem.1964" }
%"struct.std::__1::__compressed_pair_elem.1964" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1965", i32, float }
%"class.WTF::Vector.1965" = type { %"class.WTF::VectorBuffer.1966" }
%"class.WTF::VectorBuffer.1966" = type { %"class.WTF::VectorBufferBase.1967" }
%"class.WTF::VectorBufferBase.1967" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.1975" = type { %"class.std::__1::__compressed_pair.1976" }
%"class.std::__1::__compressed_pair.1976" = type { %"struct.std::__1::__compressed_pair_elem.1977" }
%"struct.std::__1::__compressed_pair_elem.1977" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1978", %"class.WTF::Vector.1983" }
%"class.WTF::Vector.1978" = type { %"class.WTF::VectorBuffer.1979" }
%"class.WTF::VectorBuffer.1979" = type { %"class.WTF::VectorBufferBase.1980" }
%"class.WTF::VectorBufferBase.1980" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1983" = type { %"class.WTF::VectorBuffer.1984" }
%"class.WTF::VectorBuffer.1984" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.1990" = type { %"class.std::__1::__compressed_pair.1991" }
%"class.std::__1::__compressed_pair.1991" = type { %"struct.std::__1::__compressed_pair_elem.1992" }
%"struct.std::__1::__compressed_pair_elem.1992" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.1996" = type { %"class.std::__1::__compressed_pair.1997" }
%"class.std::__1::__compressed_pair.1997" = type { %"struct.std::__1::__compressed_pair_elem.1998" }
%"struct.std::__1::__compressed_pair_elem.1998" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.1999", %"class.WTF::Vector.2005", %"class.WTF::Vector.2005", %"class.WTF::HashMap.2010" }
%"class.WTF::Vector.1999" = type { %"class.WTF::VectorBuffer.2000" }
%"class.WTF::VectorBuffer.2000" = type { %"class.WTF::VectorBufferBase.2001" }
%"class.WTF::VectorBufferBase.2001" = type { %"struct.std::__1::pair.2002"*, i32, i32 }
%"struct.std::__1::pair.2002" = type opaque
%"class.WTF::Vector.2005" = type { %"class.WTF::VectorBuffer.2006" }
%"class.WTF::VectorBuffer.2006" = type { %"class.WTF::VectorBufferBase.2007" }
%"class.WTF::VectorBufferBase.2007" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.2010" = type { %"class.WTF::HashTable.2011" }
%"class.WTF::HashTable.2011" = type <{ %"struct.WTF::KeyValuePair.2014"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2014" = type opaque
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.2021" = type { %"class.WTF::VectorBuffer.2022" }
%"class.WTF::VectorBuffer.2022" = type { %"class.WTF::VectorBufferBase.2023", [64 x i8] }
%"class.WTF::VectorBufferBase.2023" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.1779 }
%"class.WTF::Vector.2026" = type { %"class.WTF::VectorBuffer.2027" }
%"class.WTF::VectorBuffer.2027" = type { %"class.WTF::VectorBufferBase.2028" }
%"class.WTF::VectorBufferBase.2028" = type { %class.scoped_refptr.1782*, i32, i32 }
%class.scoped_refptr.2031 = type { %"class.blink::NGInlineBreakToken"* }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.absl::optional.1883" = type { %"class.absl::optional_internal::optional_data.1884" }
%"class.absl::optional_internal::optional_data.1884" = type { %"class.absl::optional_internal::optional_data_base.1885" }
%"class.absl::optional_internal::optional_data_base.1885" = type { %"class.absl::optional_internal::optional_data_dtor_base.1886" }
%"class.absl::optional_internal::optional_data_dtor_base.1886" = type { i8, %union.anon.1887 }
%union.anon.1887 = type { %"struct.blink::LogicalRect" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGFragmentItemsBuilder" = type <{ %"class.WTF::Vector.2032", %"class.WTF::String", %"class.WTF::String", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGPhysicalFragment"*, %"class.WTF::HashMap.2056", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineNode", %"class.blink::WritingDirectionMode", i8, i8, i8, [3 x i8] }>
%"class.WTF::Vector.2032" = type { %"class.WTF::VectorBuffer.2033" }
%"class.WTF::VectorBuffer.2033" = type { %"class.WTF::VectorBufferBase.2034", [9216 x i8] }
%"class.WTF::VectorBufferBase.2034" = type { %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, i32, i32 }
%"struct.blink::NGFragmentItemsBuilder::ItemWithOffset" = type { %"class.blink::NGFragmentItem", %"struct.blink::LogicalOffset" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.2035, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.2035 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.2036, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.2036 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2037", %class.scoped_refptr.1961, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2039] }
%"class.WTF::RefCounted.2037" = type { %"class.base::RefCounted.2038" }
%"class.base::RefCounted.2038" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.2039 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.2048 }
%union.anon.2048 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.WTF::HashMap.2056" = type { %"class.WTF::HashTable.2057" }
%"class.WTF::HashTable.2057" = type <{ %"struct.WTF::KeyValuePair.2060"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2060" = type opaque
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.2051" }
%"class.WTF::Vector.2051" = type { %"class.WTF::VectorBuffer.2052" }
%"class.WTF::VectorBuffer.2052" = type { %"class.WTF::VectorBufferBase.2053", [1920 x i8] }
%"class.WTF::VectorBufferBase.2053" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1631, %"class.blink::NGInlineItem"*, %class.scoped_refptr.2036, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.absl::optional.2061" = type { %"class.absl::optional_internal::optional_data.2062" }
%"class.absl::optional_internal::optional_data.2062" = type { %"class.absl::optional_internal::optional_data_base.2063" }
%"class.absl::optional_internal::optional_data_base.2063" = type { %"class.absl::optional_internal::optional_data_dtor_base.2064" }
%"class.absl::optional_internal::optional_data_dtor_base.2064" = type { i8, %union.anon.2065 }
%union.anon.2065 = type { i32 }
%"class.absl::optional.2066" = type { %"class.absl::optional_internal::optional_data.2067" }
%"class.absl::optional_internal::optional_data.2067" = type { %"class.absl::optional_internal::optional_data_base.2068" }
%"class.absl::optional_internal::optional_data_base.2068" = type { %"class.absl::optional_internal::optional_data_dtor_base.2069" }
%"class.absl::optional_internal::optional_data_dtor_base.2069" = type { i8, %union.anon.2070 }
%union.anon.2070 = type { %"struct.blink::PhysicalRect" }
%"class.absl::optional.2071" = type { %"class.absl::optional_internal::optional_data.2072" }
%"class.absl::optional_internal::optional_data.2072" = type { %"class.absl::optional_internal::optional_data_base.2073" }
%"class.absl::optional_internal::optional_data_base.2073" = type { %"class.absl::optional_internal::optional_data_dtor_base.2074" }
%"class.absl::optional_internal::optional_data_dtor_base.2074" = type { i8, %union.anon.2075 }
%union.anon.2075 = type { %"class.WTF::Vector.2076" }
%"class.WTF::Vector.2076" = type { %"class.WTF::VectorBuffer.2077" }
%"class.WTF::VectorBuffer.2077" = type { %"class.WTF::VectorBufferBase.2078" }
%"class.WTF::VectorBufferBase.2078" = type { %"struct.blink::NGTableFragmentData::ColumnGeometry"*, i32, i32 }
%"struct.blink::NGTableFragmentData::ColumnGeometry" = type { i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGLayoutInputNode" }
%class.scoped_refptr.2081 = type { %"class.blink::NGTableBorders"* }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.2082", [4 x i8], %"class.WTF::Vector.2084", %"class.WTF::Vector.2089", i32, %"class.absl::optional.2094", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.2082" = type { %"class.base::RefCounted.2083" }
%"class.base::RefCounted.2083" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2084" = type { %"class.WTF::VectorBuffer.2085" }
%"class.WTF::VectorBuffer.2085" = type { %"class.WTF::VectorBufferBase.2086" }
%"class.WTF::VectorBufferBase.2086" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.2089" = type { %"class.WTF::VectorBuffer.2090" }
%"class.WTF::VectorBuffer.2090" = type { %"class.WTF::VectorBufferBase.2091" }
%"class.WTF::VectorBufferBase.2091" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.2094" = type { %"class.absl::optional_internal::optional_data.2095" }
%"class.absl::optional_internal::optional_data.2095" = type { %"class.absl::optional_internal::optional_data_base.2096" }
%"class.absl::optional_internal::optional_data_base.2096" = type { %"class.absl::optional_internal::optional_data_dtor_base.2097" }
%"class.absl::optional_internal::optional_data_dtor_base.2097" = type { i8, %union.anon.2098 }
%union.anon.2098 = type { %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.2099" = type { %"class.std::__1::__compressed_pair.2100" }
%"class.std::__1::__compressed_pair.2100" = type { %"struct.std::__1::__compressed_pair_elem.2101" }
%"struct.std::__1::__compressed_pair_elem.2101" = type { %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* }
%"struct.blink::NGTableFragmentData::CollapsedBordersGeometry" = type { %"class.WTF::Vector.2102", %"class.WTF::Vector.2102" }
%"class.WTF::Vector.2102" = type { %"class.WTF::VectorBuffer.2103" }
%"class.WTF::VectorBuffer.2103" = type { %"class.WTF::VectorBufferBase.2104" }
%"class.WTF::VectorBufferBase.2104" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.absl::optional.2110" = type { %"class.absl::optional_internal::optional_data.2111" }
%"class.absl::optional_internal::optional_data.2111" = type { %"class.absl::optional_internal::optional_data_base.2112" }
%"class.absl::optional_internal::optional_data_base.2112" = type { %"class.absl::optional_internal::optional_data_dtor_base.2113" }
%"class.absl::optional_internal::optional_data_dtor_base.2113" = type { i8, %union.anon.2114 }
%union.anon.2114 = type { i32 }
%"class.std::__1::unique_ptr.2115" = type { %"class.std::__1::__compressed_pair.2116" }
%"class.std::__1::__compressed_pair.2116" = type { %"struct.std::__1::__compressed_pair_elem.2117" }
%"struct.std::__1::__compressed_pair_elem.2117" = type { %"struct.blink::NGGridData"* }
%"struct.blink::LogicalBoxSides" = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.2121" = type { %"class.std::__1::__compressed_pair.2122" }
%"class.std::__1::__compressed_pair.2122" = type { %"struct.std::__1::__compressed_pair_elem.2123" }
%"struct.std::__1::__compressed_pair_elem.2123" = type { %"struct.blink::NGMathMLPaintInfo"* }
%"struct.blink::NGMathMLPaintInfo" = type <{ i16, [6 x i8], %class.scoped_refptr.2036, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", %"class.absl::optional.1636", [4 x i8] }>
%class.scoped_refptr.2127 = type { %"class.blink::NGBlockBreakToken"* }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"struct.std::__1::default_delete.1774" = type { i8 }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1647", [4 x i8], %"class.WTF::Vector.1649", %"class.WTF::Vector.1654", %"class.WTF::Vector.1659", %"class.WTF::Vector.1664", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>

$_ZN5blink17NGConstraintSpaceD2Ev = comdat any

$_ZN5blink17NGConstraintSpace8RareDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16), %"class.absl::optional.1867"* nocapture readonly dereferenceable(12), i16, %"struct.blink::NGLogicalOutOfFlowDimensions"*) local_unnamed_addr #0 {
  %8 = alloca %"class.absl::optional.2190", align 4
  %9 = alloca %"class.absl::optional.2190", align 4
  %10 = alloca %"class.absl::optional.2190", align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca %"class.blink::Length"*, align 8
  %23 = alloca %"class.blink::Length"*, align 8
  %24 = alloca %"class.blink::Length"*, align 8
  %25 = alloca %"class.blink::Length"*, align 8
  %26 = alloca %"class.blink::Length"*, align 8
  %27 = alloca %"class.blink::Length"*, align 8
  %28 = alloca %"class.blink::Length"*, align 8
  %29 = alloca %"class.blink::Length"*, align 8
  %30 = alloca %"class.blink::Length"*, align 8
  %31 = alloca %"class.blink::Length"*, align 8
  %32 = alloca %"class.blink::Length"*, align 8
  %33 = alloca %"class.blink::Length"*, align 8
  %34 = alloca %"class.blink::Length"*, align 8
  %35 = alloca %"class.blink::Length"*, align 8
  %36 = alloca %"class.blink::Length"*, align 8
  %37 = alloca %"class.blink::Length"*, align 8
  %38 = alloca i16, align 2
  %39 = alloca %"struct.blink::NGLogicalOutOfFlowDimensions"*, align 8
  %40 = alloca i8, align 1
  %41 = alloca i8, align 1
  %42 = alloca %class.anon, align 8
  %43 = alloca i64, align 8
  %44 = bitcast i64* %43 to %"class.blink::Length"*
  %45 = alloca i64, align 8
  %46 = bitcast i64* %45 to %"class.blink::Length"*
  %47 = alloca i64, align 8
  %48 = bitcast i64* %47 to %"struct.blink::MinMaxSizes"*
  store i16 %5, i16* %38, align 2
  store %"struct.blink::NGLogicalOutOfFlowDimensions"* %6, %"struct.blink::NGLogicalOutOfFlowDimensions"** %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #9
  store i8 0, i8* %40, align 1
  %49 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 5, i32 0
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 1
  %54 = load i8, i8* %53, align 8
  %55 = and i8 %54, 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %7
  %58 = bitcast %"class.blink::LayoutObject"* %50 to i1 (%"class.blink::LayoutObject"*, i32)***
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, i64 92
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::LayoutObject"* %50, i32 44) #9
  %63 = load i8, i8* %53, align 8
  br label %64

64:                                               ; preds = %7, %57
  %65 = phi i8 [ %54, %7 ], [ %63, %57 ]
  %66 = phi i1 [ false, %7 ], [ %62, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #9
  store i8 -86, i8* %41, align 1
  %67 = and i8 %65, 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %64
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %71 = bitcast %"class.blink::LayoutObject"* %70 to i1 (%"class.blink::LayoutObject"*, i32)***
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, i64 92
  %74 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::LayoutObject"* %70, i32 44) #9
  br i1 %75, label %162, label %76

76:                                               ; preds = %69, %64
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %78 = bitcast %"class.blink::LayoutObject"* %77 to i1 (%"class.blink::LayoutObject"*, i32)***
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, i64 92
  %81 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %80, align 8
  %82 = tail call zeroext i1 %81(%"class.blink::LayoutObject"* %77, i32 39) #9
  br i1 %82, label %162, label %83

83:                                               ; preds = %76
  %84 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %84, i64 0, i32 5, i32 0
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = and i160 %89, 15211807202738752817960438464512
  %91 = icmp eq i160 %90, 0
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 5, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %93, i64 0, i32 3
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %93, i64 0, i32 8
  %96 = select i1 %91, %"class.blink::Length"* %94, %"class.blink::Length"* %95
  %97 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 0, i32 2
  %98 = load i8, i8* %97, align 1
  %99 = add i8 %98, -3
  %100 = icmp ult i8 %99, 5
  br i1 %100, label %150, label %101

101:                                              ; preds = %150, %83
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %93, i64 0, i32 6
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %93, i64 0, i32 7
  %104 = select i1 %91, %"class.blink::Length"* %102, %"class.blink::Length"* %103
  %105 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %104, i64 0, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = add i8 %106, -3
  %108 = icmp ult i8 %107, 5
  br i1 %108, label %154, label %109

109:                                              ; preds = %154, %101
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %93, i64 0, i32 4
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %93, i64 0, i32 5
  %112 = select i1 %91, %"class.blink::Length"* %110, %"class.blink::Length"* %111
  %113 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %112, i64 0, i32 2
  %114 = load i8, i8* %113, align 1
  %115 = add i8 %114, -3
  %116 = icmp ult i8 %115, 5
  br i1 %116, label %158, label %117

117:                                              ; preds = %158, %109
  %118 = icmp eq i8 %98, 0
  br i1 %118, label %119, label %162

119:                                              ; preds = %117
  %120 = bitcast %"class.blink::Length"** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120)
  %121 = bitcast %"class.blink::Length"** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121)
  %122 = bitcast %"class.blink::Length"** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122)
  %123 = lshr i160 %89, 102
  %124 = trunc i160 %123 to i8
  %125 = and i8 %124, 3
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 7, i32 0, i32 0
  %127 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %126, align 8, !noalias !2
  %128 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %127, i64 0, i32 18
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %127, i64 0, i32 17
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %127, i64 0, i32 8
  store %"class.blink::Length"* %128, %"class.blink::Length"** %32, align 8, !alias.scope !2
  store %"class.blink::Length"* %129, %"class.blink::Length"** %33, align 8, !alias.scope !2
  store %"class.blink::Length"* %130, %"class.blink::Length"** %34, align 8, !alias.scope !2
  %131 = icmp eq i8 %125, 0
  %132 = icmp eq i8 %125, 1
  %133 = select i1 %132, %"class.blink::Length"** %33, %"class.blink::Length"** %34
  %134 = select i1 %131, %"class.blink::Length"** %32, %"class.blink::Length"** %133
  %135 = load %"class.blink::Length"*, %"class.blink::Length"** %134, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122)
  %136 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %135, i64 0, i32 2
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %162, label %139

139:                                              ; preds = %119
  %140 = bitcast %"class.blink::Length"** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140)
  %141 = bitcast %"class.blink::Length"** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141)
  %142 = bitcast %"class.blink::Length"** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142)
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %127, i64 0, i32 7
  store %"class.blink::Length"* %129, %"class.blink::Length"** %35, align 8, !alias.scope !5
  store %"class.blink::Length"* %143, %"class.blink::Length"** %36, align 8, !alias.scope !5
  store %"class.blink::Length"* %130, %"class.blink::Length"** %37, align 8, !alias.scope !5
  %144 = select i1 %132, %"class.blink::Length"** %37, %"class.blink::Length"** %35
  %145 = select i1 %131, %"class.blink::Length"** %36, %"class.blink::Length"** %144
  %146 = load %"class.blink::Length"*, %"class.blink::Length"** %145, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142)
  %147 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %146, i64 0, i32 2
  %148 = load i8, i8* %147, align 1
  %149 = icmp ne i8 %148, 0
  br label %162

150:                                              ; preds = %83
  %151 = lshr i8 23, %99
  %152 = and i8 %151, 1
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %101, label %162

154:                                              ; preds = %101
  %155 = lshr i8 23, %107
  %156 = and i8 %155, 1
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %109, label %162

158:                                              ; preds = %109
  %159 = lshr i8 23, %115
  %160 = and i8 %159, 1
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %117, label %162

162:                                              ; preds = %150, %154, %158, %69, %76, %117, %119, %139
  %163 = phi i1 [ false, %69 ], [ true, %76 ], [ true, %117 ], [ false, %119 ], [ %149, %139 ], [ false, %150 ], [ false, %154 ], [ false, %158 ]
  %164 = zext i1 %163 to i8
  store i8 %164, i8* %41, align 1
  br i1 %66, label %170, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %166, align 8
  %168 = tail call zeroext i1 @_ZNK5blink9LayoutBox28ShouldBeConsideredAsReplacedEv(%"class.blink::LayoutBox"* %167) #9
  %169 = zext i1 %168 to i8
  br label %170

170:                                              ; preds = %165, %162
  %171 = phi i8 [ 1, %162 ], [ %169, %165 ]
  %172 = bitcast %class.anon* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %172) #9
  %173 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 0
  store %"class.blink::NGBlockNode"* %0, %"class.blink::NGBlockNode"** %173, align 8
  %174 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 1
  store i8* %40, i8** %174, align 8
  %175 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 2
  store i8* %41, i8** %175, align 8
  %176 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 3
  store %"class.blink::ComputedStyle"* %52, %"class.blink::ComputedStyle"** %176, align 8
  %177 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 4
  store %"class.blink::NGConstraintSpace"* %1, %"class.blink::NGConstraintSpace"** %177, align 8
  %178 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 5
  store %"struct.blink::NGLogicalOutOfFlowDimensions"** %39, %"struct.blink::NGLogicalOutOfFlowDimensions"*** %178, align 8
  %179 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 6
  store %"struct.blink::NGBoxStrut"* %2, %"struct.blink::NGBoxStrut"** %179, align 8
  %180 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 7
  store %"struct.blink::NGLogicalStaticPosition"* %3, %"struct.blink::NGLogicalStaticPosition"** %180, align 8
  %181 = getelementptr inbounds %class.anon, %class.anon* %42, i64 0, i32 8
  %182 = bitcast %"class.blink::WritingDirectionMode"** %181 to i16**
  store i16* %38, i16** %182, align 8
  %183 = bitcast i64* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #9
  %184 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 2
  %185 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %186 = bitcast [20 x i8]* %185 to i160*
  %187 = load i160, i160* %186, align 8
  %188 = and i160 %187, 15211807202738752817960438464512
  %189 = icmp eq i160 %188, 0
  %190 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 5, i32 0, i32 0
  %191 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %191, i64 0, i32 7
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %191, i64 0, i32 6
  %194 = select i1 %189, %"class.blink::Length"* %192, %"class.blink::Length"* %193
  %195 = bitcast %"class.blink::Length"* %194 to i64*
  %196 = load i64, i64* %195, align 4
  store i64 %196, i64* %43, align 8
  %197 = and i64 %196, 280375465082880
  %198 = icmp eq i64 %197, 8796093022208
  br i1 %198, label %199, label %200

199:                                              ; preds = %170
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %44) #9
  br label %200

200:                                              ; preds = %170, %199
  %201 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8, i8* %201, align 4, !range !8
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  br label %311

207:                                              ; preds = %200
  %208 = load i160, i160* %186, align 8
  %209 = and i160 %208, 15211807202738752817960438464512
  %210 = icmp eq i160 %209, 0
  %211 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %190, align 8
  %212 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %211, i64 0, i32 8
  %213 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %211, i64 0, i32 3
  %214 = select i1 %210, %"class.blink::Length"* %212, %"class.blink::Length"* %213
  %215 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %214, i64 0, i32 2
  %216 = load i8, i8* %215, align 1
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %230, label %218

218:                                              ; preds = %207
  %219 = getelementptr inbounds %"class.absl::optional.2190", %"class.absl::optional.2190"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %219) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %219, i8 -86, i64 12, i1 false) #9
  store i8 0, i8* %219, align 4
  %220 = load i8, i8* %215, align 1
  switch i8 %220, label %228 [
    i8 3, label %221
    i8 4, label %221
    i8 7, label %221
    i8 5, label %221
  ]

221:                                              ; preds = %218, %218, %218, %218
  %222 = icmp eq i8 %220, 5
  %223 = zext i1 %222 to i32
  %224 = call fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* nonnull %42, i32 %223) #9
  %225 = extractvalue { i64, i8 } %224, 0
  %226 = getelementptr inbounds %"class.absl::optional.2190", %"class.absl::optional.2190"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %227 = bitcast %union.anon.2194* %226 to i64*
  store i64 %225, i64* %227, align 4
  store i8 1, i8* %219, align 4
  br label %228

228:                                              ; preds = %218, %221
  %229 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %52, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.2190"* nonnull dereferenceable(12) %8, %"class.blink::Length"* dereferenceable(8) %214, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %219) #9
  br label %311

230:                                              ; preds = %207
  %231 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %211, i64 0, i32 1, i32 1, i32 0
  %232 = load float, float* %231, align 4
  %233 = fcmp oeq float %232, 0.000000e+00
  br i1 %233, label %311, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %211, i64 0, i32 1, i32 1, i32 1
  %236 = load float, float* %235, align 4
  %237 = fcmp oeq float %236, 0.000000e+00
  %238 = fcmp olt float %232, 1.562500e-02
  %239 = or i1 %238, %237
  %240 = fcmp olt float %236, 1.562500e-02
  %241 = or i1 %240, %239
  br i1 %241, label %311, label %242

242:                                              ; preds = %234
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %211, i64 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 4
  %245 = and i8 %244, 3
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %311, label %247

247:                                              ; preds = %242
  %248 = load i8, i8* %53, align 8
  %249 = and i8 %248, 1
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %251, label %261

251:                                              ; preds = %247
  %252 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %253 = bitcast %"class.blink::LayoutObject"* %252 to i1 (%"class.blink::LayoutObject"*, i32)***
  %254 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %253, align 8
  %255 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %254, i64 92
  %256 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %255, align 8
  %257 = call zeroext i1 %256(%"class.blink::LayoutObject"* %252, i32 44) #9
  br i1 %257, label %287, label %258

258:                                              ; preds = %251
  %259 = load i160, i160* %186, align 8, !noalias !9
  %260 = and i160 %259, 15211807202738752817960438464512
  br label %261

261:                                              ; preds = %258, %247
  %262 = phi i160 [ %260, %258 ], [ %209, %247 ]
  %263 = phi i160 [ %259, %258 ], [ %208, %247 ]
  %264 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 7, i32 0, i32 0
  %265 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %264, align 8, !noalias !9
  %266 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 18
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 8
  %268 = icmp eq i160 %262, 0
  %269 = select i1 %268, %"class.blink::Length"* %267, %"class.blink::Length"* %266
  %270 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %269, i64 0, i32 2
  %271 = load i8, i8* %270, align 1
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %287, label %273

273:                                              ; preds = %261
  %274 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 17
  %275 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %265, i64 0, i32 7
  %276 = select i1 %268, %"class.blink::Length"* %274, %"class.blink::Length"* %275
  %277 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %276, i64 0, i32 2
  %278 = load i8, i8* %277, align 1
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %287, label %280

280:                                              ; preds = %273
  %281 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %190, align 8
  %282 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %281, i64 0, i32 3
  %283 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %281, i64 0, i32 8
  %284 = select i1 %268, %"class.blink::Length"* %282, %"class.blink::Length"* %283
  %285 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %284, i64 0, i32 2
  %286 = load i8, i8* %285, align 1
  switch i8 %286, label %293 [
    i8 0, label %311
    i8 3, label %311
    i8 4, label %311
    i8 7, label %311
    i8 5, label %311
  ]

287:                                              ; preds = %273, %251, %261
  %288 = load i8, i8* %41, align 1, !range !8
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %311, label %290

290:                                              ; preds = %287
  %291 = load i160, i160* %186, align 8
  %292 = and i160 %291, 15211807202738752817960438464512
  br label %293

293:                                              ; preds = %290, %280
  %294 = phi i160 [ %292, %290 ], [ %262, %280 ]
  %295 = phi i160 [ %291, %290 ], [ %263, %280 ]
  %296 = icmp eq i160 %294, 0
  %297 = select i1 %296, i160 74, i160 77
  %298 = lshr i160 %295, %297
  %299 = and i160 %298, 7
  %300 = icmp eq i160 %299, 2
  %301 = load i8, i8* %184, align 1
  %302 = icmp eq i8 %301, 0
  %303 = and i1 %302, %300
  br i1 %303, label %304, label %311

304:                                              ; preds = %293
  %305 = bitcast i64* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #9
  %306 = bitcast i64* %45 to i32*
  store i32 0, i32* %306, align 8, !alias.scope !12
  %307 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %46, i64 0, i32 1
  store i8 0, i8* %307, align 4, !alias.scope !12
  %308 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %46, i64 0, i32 2
  store i8 5, i8* %308, align 1, !alias.scope !12
  %309 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %46, i64 0, i32 3
  store i8 0, i8* %309, align 2, !alias.scope !12
  %310 = load i64, i64* %45, align 8
  store i64 %310, i64* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #9
  br label %311

311:                                              ; preds = %280, %280, %280, %280, %280, %230, %234, %304, %293, %287, %228, %242, %204
  %312 = phi i64 [ 2863311361, %204 ], [ 2863311360, %242 ], [ 2863311360, %287 ], [ 2863311360, %304 ], [ 2863311360, %293 ], [ 2863311361, %228 ], [ 2863311360, %234 ], [ 2863311360, %230 ], [ 2863311360, %280 ], [ 2863311360, %280 ], [ 2863311360, %280 ], [ 2863311360, %280 ], [ 2863311360, %280 ]
  %313 = phi i32 [ %206, %204 ], [ -1431655766, %242 ], [ -1431655766, %287 ], [ -1431655766, %304 ], [ -1431655766, %293 ], [ %229, %228 ], [ -1431655766, %234 ], [ -1431655766, %230 ], [ -1431655766, %280 ], [ -1431655766, %280 ], [ -1431655766, %280 ], [ -1431655766, %280 ], [ -1431655766, %280 ]
  %314 = phi i8 [ %171, %204 ], [ %171, %242 ], [ %171, %287 ], [ 1, %304 ], [ 1, %293 ], [ %171, %228 ], [ %171, %234 ], [ %171, %230 ], [ %171, %280 ], [ %171, %280 ], [ %171, %280 ], [ %171, %280 ], [ %171, %280 ]
  %315 = bitcast i64* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %315) #9
  %316 = bitcast i64* %47 to i32*
  %317 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %48, i64 0, i32 1, i32 0
  store i32 0, i32* %316, align 8
  store i32 0, i32* %317, align 4
  %318 = load i8, i8* %201, align 4, !range !8
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %472

320:                                              ; preds = %311
  %321 = load i8, i8* %41, align 1, !range !8
  %322 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %322)
  %323 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %323)
  %324 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %325 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %324, i64 0, i32 5, i32 0
  %326 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %325, align 8
  store i32 -1431655766, i32* %12, align 8
  store i32 -1431655766, i32* %13, align 4
  %327 = load i8, i8* %184, align 1
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %331, label %329

329:                                              ; preds = %320
  %330 = call zeroext i1 @_ZN5blink24InlineLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::Length"* nonnull dereferenceable(8) %44) #9
  br i1 %330, label %331, label %342, !prof !15

331:                                              ; preds = %329, %320
  %332 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %333 = load i32, i32* %332, align 4
  %334 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = icmp slt i32 %335, 0
  %337 = select i1 %336, i32 -2147483648, i32 2147483647
  %338 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %333, i32 %335) #9
  %339 = extractvalue { i32, i1 } %338, 1
  %340 = extractvalue { i32, i1 } %338, 0
  %341 = select i1 %339, i32 %337, i32 %340, !prof !16
  br label %354

342:                                              ; preds = %329
  %343 = getelementptr inbounds %"class.absl::optional.2190", %"class.absl::optional.2190"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %343) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %343, i8 -86, i64 12, i1 false) #9
  store i8 0, i8* %343, align 4
  %344 = load i8, i8* %184, align 1
  switch i8 %344, label %352 [
    i8 3, label %345
    i8 4, label %345
    i8 7, label %345
    i8 5, label %345
  ]

345:                                              ; preds = %342, %342, %342, %342
  %346 = icmp eq i8 %344, 5
  %347 = zext i1 %346 to i32
  %348 = call fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* nonnull %42, i32 %347) #9
  %349 = extractvalue { i64, i8 } %348, 0
  %350 = getelementptr inbounds %"class.absl::optional.2190", %"class.absl::optional.2190"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %351 = bitcast %union.anon.2194* %350 to i64*
  store i64 %349, i64* %351, align 4
  store i8 1, i8* %343, align 4
  br label %352

352:                                              ; preds = %345, %342
  %353 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %326, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.2190"* nonnull dereferenceable(12) %9, %"class.blink::Length"* nonnull dereferenceable(8) %44, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %343) #9
  br label %354

354:                                              ; preds = %352, %331
  %355 = phi i32 [ %341, %331 ], [ %353, %352 ]
  store i32 %355, i32* %12, align 8
  %356 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %326, i64 0, i32 0, i32 9
  %357 = bitcast [20 x i8]* %356 to i160*
  %358 = load i160, i160* %357, align 8
  %359 = and i160 %358, 15211807202738752817960438464512
  %360 = icmp eq i160 %359, 0
  %361 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %326, i64 0, i32 0, i32 5, i32 0, i32 0
  %362 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %361, align 8
  %363 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %362, i64 0, i32 5
  %364 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %362, i64 0, i32 4
  %365 = select i1 %360, %"class.blink::Length"* %363, %"class.blink::Length"* %364
  %366 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %365, i64 0, i32 2
  %367 = load i8, i8* %366, align 1
  %368 = icmp eq i8 %367, 12
  br i1 %368, label %383, label %369

369:                                              ; preds = %354
  %370 = call zeroext i1 @_ZN5blink24InlineLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::Length"* dereferenceable(8) %365) #9
  br i1 %370, label %383, label %371, !prof !15

371:                                              ; preds = %369
  %372 = getelementptr inbounds %"class.absl::optional.2190", %"class.absl::optional.2190"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %372) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %372, i8 -86, i64 12, i1 false) #9
  store i8 0, i8* %372, align 4
  %373 = load i8, i8* %366, align 1
  switch i8 %373, label %381 [
    i8 3, label %374
    i8 4, label %374
    i8 7, label %374
    i8 5, label %374
  ]

374:                                              ; preds = %371, %371, %371, %371
  %375 = icmp eq i8 %373, 5
  %376 = zext i1 %375 to i32
  %377 = call fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* nonnull %42, i32 %376) #9
  %378 = extractvalue { i64, i8 } %377, 0
  %379 = getelementptr inbounds %"class.absl::optional.2190", %"class.absl::optional.2190"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %380 = bitcast %union.anon.2194* %379 to i64*
  store i64 %378, i64* %380, align 4
  store i8 1, i8* %372, align 4
  br label %381

381:                                              ; preds = %374, %371
  %382 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %326, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.2190"* nonnull dereferenceable(12) %10, %"class.blink::Length"* dereferenceable(8) %365, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %372) #9
  br label %383

383:                                              ; preds = %381, %369, %354
  %384 = phi i32 [ %382, %381 ], [ 2147483647, %354 ], [ 2147483647, %369 ]
  store i32 %384, i32* %13, align 4
  %385 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %361, align 8
  %386 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 1, i32 1, i32 0
  %387 = load float, float* %386, align 4
  %388 = fcmp oeq float %387, 0.000000e+00
  br i1 %388, label %434, label %389

389:                                              ; preds = %383
  %390 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 1, i32 1, i32 1
  %391 = load float, float* %390, align 4
  %392 = fcmp oeq float %391, 0.000000e+00
  %393 = fcmp olt float %387, 1.562500e-02
  %394 = or i1 %393, %392
  %395 = fcmp olt float %391, 1.562500e-02
  %396 = or i1 %395, %394
  br i1 %396, label %434, label %397

397:                                              ; preds = %389
  %398 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 4
  %400 = and i8 %399, 3
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %434, label %402

402:                                              ; preds = %397
  %403 = load i160, i160* %357, align 8
  %404 = and i160 %403, 15211807202738752817960438464512
  %405 = icmp eq i160 %404, 0
  %406 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 3
  %407 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 8
  %408 = select i1 %405, %"class.blink::Length"* %406, %"class.blink::Length"* %407
  %409 = call zeroext i1 @_ZN5blink23BlockLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthEPKNS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::Length"* dereferenceable(8) %408, %"class.blink::LayoutUnit"* null) #9
  %410 = icmp eq i8 %321, 1
  br i1 %410, label %434, label %411

411:                                              ; preds = %402
  %412 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %412)
  %413 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %413)
  %414 = call i64 @_ZN5blink39ComputeMinMaxInlineSizesFromAspectRatioERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %326, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2) #9
  %415 = trunc i64 %414 to i32
  store i32 %415, i32* %14, align 8
  %416 = lshr i64 %414, 32
  %417 = trunc i64 %416 to i32
  store i32 %417, i32* %15, align 4
  %418 = icmp slt i32 %384, %415
  %419 = bitcast i32* %14 to %"class.blink::LayoutUnit"*
  %420 = bitcast i32* %13 to %"class.blink::LayoutUnit"*
  %421 = select i1 %418, %"class.blink::LayoutUnit"* %420, %"class.blink::LayoutUnit"* %419
  %422 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %421, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  %424 = icmp slt i32 %355, %423
  %425 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %426 = select i1 %424, %"class.blink::LayoutUnit"* %421, %"class.blink::LayoutUnit"* %425
  %427 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %426, i64 0, i32 0
  %428 = load i32, i32* %427, align 4
  store i32 %428, i32* %12, align 8
  %429 = icmp sgt i32 %384, %417
  %430 = bitcast i32* %15 to %"class.blink::LayoutUnit"*
  %431 = select i1 %429, %"class.blink::LayoutUnit"* %430, %"class.blink::LayoutUnit"* %420
  %432 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %431, i64 0, i32 0
  %433 = load i32, i32* %432, align 4
  store i32 %433, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %412)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %413)
  br label %434

434:                                              ; preds = %411, %402, %397, %389, %383
  %435 = phi i32 [ %384, %402 ], [ %384, %383 ], [ %384, %389 ], [ %384, %397 ], [ %433, %411 ]
  %436 = phi i32 [ %355, %402 ], [ %355, %383 ], [ %355, %389 ], [ %355, %397 ], [ %428, %411 ]
  %437 = load i8, i8* %53, align 8
  %438 = and i8 %437, 1
  %439 = icmp eq i8 %438, 0
  br i1 %439, label %440, label %463

440:                                              ; preds = %434
  %441 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %442 = bitcast %"class.blink::LayoutObject"* %441 to i1 (%"class.blink::LayoutObject"*, i32)***
  %443 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %442, align 8
  %444 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %443, i64 92
  %445 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %444, align 8
  %446 = call zeroext i1 %445(%"class.blink::LayoutObject"* %441, i32 44) #9
  br i1 %446, label %447, label %463

447:                                              ; preds = %440
  %448 = call fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* nonnull %42, i32 1) #9
  %449 = extractvalue { i64, i8 } %448, 0
  %450 = trunc i64 %449 to i32
  %451 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %451)
  store i32 %450, i32* %11, align 4
  %452 = icmp slt i32 %436, %450
  %453 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %454 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %455 = select i1 %452, %"class.blink::LayoutUnit"* %454, %"class.blink::LayoutUnit"* %453
  %456 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %455, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  store i32 %457, i32* %12, align 8
  %458 = icmp slt i32 %435, %450
  %459 = bitcast i32* %13 to %"class.blink::LayoutUnit"*
  %460 = select i1 %458, %"class.blink::LayoutUnit"* %454, %"class.blink::LayoutUnit"* %459
  %461 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %460, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  store i32 %462, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %451)
  br label %463

463:                                              ; preds = %434, %440, %447
  %464 = phi i32 [ %436, %434 ], [ %457, %447 ], [ %436, %440 ]
  %465 = phi i32 [ %435, %434 ], [ %462, %447 ], [ %435, %440 ]
  %466 = icmp slt i32 %465, %464
  %467 = select i1 %466, i32 %464, i32 %465
  %468 = zext i32 %467 to i64
  %469 = shl nuw i64 %468, 32
  %470 = zext i32 %464 to i64
  %471 = or i64 %469, %470
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %322)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %323)
  br label %472

472:                                              ; preds = %311, %463
  %473 = phi i64 [ %471, %463 ], [ 9223372032559808512, %311 ]
  store i64 %473, i64* %47, align 8
  %474 = load i160, i160* %186, align 8
  %475 = and i160 %474, 15211807202738752817960438464512
  %476 = icmp eq i160 %475, 0
  %477 = load i16, i16* %38, align 2
  %478 = trunc i16 %477 to i8
  br i1 %476, label %479, label %483

479:                                              ; preds = %472
  switch i8 %478, label %482 [
    i8 1, label %487
    i8 0, label %480
  ]

480:                                              ; preds = %479
  %481 = icmp ult i16 %477, 256
  br label %487

482:                                              ; preds = %479
  br label %487

483:                                              ; preds = %472
  %484 = icmp eq i8 %478, 0
  %485 = icmp ult i16 %477, 256
  %486 = or i1 %485, %484
  br label %487

487:                                              ; preds = %482, %480, %479, %483
  %488 = phi i1 [ %486, %483 ], [ false, %479 ], [ %481, %480 ], [ true, %482 ]
  %489 = and i160 %474, 41538374868278621028243970633760768
  %490 = icmp ne i160 %489, 0
  %491 = xor i1 %488, %490
  %492 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %493 = load i32, i32* %492, align 4
  %494 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %495 = load i32, i32* %494, align 4
  %496 = icmp slt i32 %495, 0
  %497 = select i1 %496, i32 -2147483648, i32 2147483647
  %498 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %493, i32 %495) #9
  %499 = extractvalue { i32, i1 } %498, 1
  %500 = extractvalue { i32, i1 } %498, 0
  %501 = select i1 %499, i32 %497, i32 %500, !prof !16
  %502 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %503 = load i32, i32* %502, align 8
  %504 = and i32 %503, 2048
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %519

506:                                              ; preds = %487
  %507 = lshr i32 %503, 26
  %508 = and i32 %507, 3
  switch i32 %508, label %509 [
    i32 0, label %510
    i32 1, label %544
    i32 2, label %513
    i32 3, label %514
  ]

509:                                              ; preds = %506
  unreachable

510:                                              ; preds = %506
  %511 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  %512 = load i32, i32* %511, align 8
  br label %544

513:                                              ; preds = %506
  br label %544

514:                                              ; preds = %506
  %515 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %516 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %515 to i32**
  %517 = load i32*, i32** %516, align 8
  %518 = load i32, i32* %517, align 8
  br label %544

519:                                              ; preds = %487
  %520 = lshr i32 %503, 28
  %521 = and i32 %520, 3
  switch i32 %521, label %522 [
    i32 0, label %523
    i32 1, label %544
    i32 2, label %544
    i32 3, label %525
  ]

522:                                              ; preds = %519
  unreachable

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  br label %529

525:                                              ; preds = %519
  %526 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %527 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %526, align 8
  %528 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %527, i64 0, i32 0, i32 1, i32 0
  br label %529

529:                                              ; preds = %525, %523
  %530 = phi i32* [ %528, %525 ], [ %524, %523 ]
  %531 = load i32, i32* %530, align 4
  %532 = icmp eq i32 %531, -64
  br i1 %532, label %544, label %533

533:                                              ; preds = %529
  switch i32 %521, label %534 [
    i32 0, label %535
    i32 1, label %544
    i32 2, label %538
    i32 3, label %539
  ]

534:                                              ; preds = %533
  unreachable

535:                                              ; preds = %533
  %536 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  %537 = load i32, i32* %536, align 4
  br label %544

538:                                              ; preds = %533
  br label %544

539:                                              ; preds = %533
  %540 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %541 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %540, align 8
  %542 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %541, i64 0, i32 0, i32 1, i32 0
  %543 = load i32, i32* %542, align 4
  br label %544

544:                                              ; preds = %506, %510, %513, %514, %519, %519, %529, %533, %535, %538, %539
  %545 = phi i32 [ %518, %514 ], [ -64, %513 ], [ %512, %510 ], [ 0, %506 ], [ %543, %539 ], [ -64, %538 ], [ %537, %535 ], [ 0, %533 ], [ 0, %529 ], [ 0, %519 ], [ 0, %519 ]
  %546 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = trunc i64 %547 to i32
  %549 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %549)
  %550 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %550)
  %551 = bitcast %"class.blink::Length"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %551)
  %552 = bitcast %"class.blink::Length"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %552)
  %553 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 7, i32 0, i32 0
  %554 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %553, align 8, !noalias !17
  %555 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %554, i64 0, i32 12
  %556 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %554, i64 0, i32 11
  %557 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %554, i64 0, i32 9
  %558 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %554, i64 0, i32 10
  store %"class.blink::Length"* %555, %"class.blink::Length"** %16, align 8, !alias.scope !17
  store %"class.blink::Length"* %556, %"class.blink::Length"** %17, align 8, !alias.scope !17
  store %"class.blink::Length"* %557, %"class.blink::Length"** %18, align 8, !alias.scope !17
  store %"class.blink::Length"* %558, %"class.blink::Length"** %19, align 8, !alias.scope !17
  %559 = and i160 %474, 15211807202738752817960438464512
  %560 = icmp eq i160 %559, 0
  %561 = and i160 %474, 41538374868278621028243970633760768
  %562 = icmp eq i160 %561, 0
  %563 = select i1 %562, %"class.blink::Length"** %19, %"class.blink::Length"** %17
  %564 = select i1 %562, %"class.blink::Length"** %16, %"class.blink::Length"** %18
  %565 = select i1 %560, %"class.blink::Length"** %563, %"class.blink::Length"** %564
  %566 = load %"class.blink::Length"*, %"class.blink::Length"** %565, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %549)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %550)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %551)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %552)
  %567 = bitcast %"class.blink::Length"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %567)
  %568 = bitcast %"class.blink::Length"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %568)
  %569 = bitcast %"class.blink::Length"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %569)
  %570 = bitcast %"class.blink::Length"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %570)
  store %"class.blink::Length"* %555, %"class.blink::Length"** %20, align 8, !alias.scope !20
  store %"class.blink::Length"* %556, %"class.blink::Length"** %21, align 8, !alias.scope !20
  store %"class.blink::Length"* %557, %"class.blink::Length"** %22, align 8, !alias.scope !20
  store %"class.blink::Length"* %558, %"class.blink::Length"** %23, align 8, !alias.scope !20
  %571 = select i1 %562, %"class.blink::Length"** %21, %"class.blink::Length"** %23
  %572 = select i1 %562, %"class.blink::Length"** %22, %"class.blink::Length"** %20
  %573 = select i1 %560, %"class.blink::Length"** %571, %"class.blink::Length"** %572
  %574 = load %"class.blink::Length"*, %"class.blink::Length"** %573, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %567)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %568)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %569)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %570)
  %575 = bitcast %"class.blink::Length"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %575)
  %576 = bitcast %"class.blink::Length"** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %576)
  %577 = bitcast %"class.blink::Length"** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %577)
  %578 = bitcast %"class.blink::Length"** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %578)
  %579 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %554, i64 0, i32 18
  %580 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %554, i64 0, i32 17
  %581 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %554, i64 0, i32 7
  %582 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %554, i64 0, i32 8
  store %"class.blink::Length"* %579, %"class.blink::Length"** %24, align 8, !alias.scope !23
  store %"class.blink::Length"* %580, %"class.blink::Length"** %25, align 8, !alias.scope !23
  store %"class.blink::Length"* %581, %"class.blink::Length"** %26, align 8, !alias.scope !23
  store %"class.blink::Length"* %582, %"class.blink::Length"** %27, align 8, !alias.scope !23
  %583 = select i1 %562, %"class.blink::Length"** %27, %"class.blink::Length"** %25
  %584 = select i1 %562, %"class.blink::Length"** %24, %"class.blink::Length"** %26
  %585 = select i1 %560, %"class.blink::Length"** %583, %"class.blink::Length"** %584
  %586 = load %"class.blink::Length"*, %"class.blink::Length"** %585, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %575)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %576)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %577)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %578)
  %587 = bitcast %"class.blink::Length"** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587)
  %588 = bitcast %"class.blink::Length"** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %588)
  %589 = bitcast %"class.blink::Length"** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %589)
  %590 = bitcast %"class.blink::Length"** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %590)
  store %"class.blink::Length"* %579, %"class.blink::Length"** %28, align 8, !alias.scope !26
  store %"class.blink::Length"* %580, %"class.blink::Length"** %29, align 8, !alias.scope !26
  store %"class.blink::Length"* %581, %"class.blink::Length"** %30, align 8, !alias.scope !26
  store %"class.blink::Length"* %582, %"class.blink::Length"** %31, align 8, !alias.scope !26
  %591 = select i1 %562, %"class.blink::Length"** %29, %"class.blink::Length"** %31
  %592 = select i1 %562, %"class.blink::Length"** %30, %"class.blink::Length"** %28
  %593 = select i1 %560, %"class.blink::Length"** %591, %"class.blink::Length"** %592
  %594 = load %"class.blink::Length"*, %"class.blink::Length"** %593, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %588)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %590)
  %595 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %3, i64 0, i32 0, i32 0, i32 0
  %596 = load i32, i32* %595, align 4
  %597 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %3, i64 0, i32 1
  %598 = load i32, i32* %597, align 4
  %599 = and i8 %314, 1
  %600 = icmp ne i8 %599, 0
  %601 = zext i32 %313 to i64
  %602 = shl nuw i64 %601, 32
  %603 = or i64 %312, %602
  %604 = load %"struct.blink::NGLogicalOutOfFlowDimensions"*, %"struct.blink::NGLogicalOutOfFlowDimensions"** %39, align 8
  %605 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %604, i64 0, i32 1, i32 0
  %606 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %604, i64 0, i32 0, i32 0
  %607 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %604, i64 0, i32 0, i32 1
  %608 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %604, i64 0, i32 2, i32 0
  %609 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %604, i64 0, i32 2, i32 1
  call fastcc void @"_ZN5blink12_GLOBAL__N_119ComputeAbsoluteSizeIZNS_32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEE3$_0EEvNS_10LayoutUnitERKT_SO_SO_RKNS_6LengthESU_SU_SU_RKNS_11MinMaxSizesESO_NS0_18StaticPositionEdgeEbbbbNSF_ISO_EEPSO_S10_S10_S10_S10_"(i32 %501, %class.anon* nonnull dereferenceable(72) %42, i32 %545, i32 %548, %"class.blink::Length"* dereferenceable(8) %566, %"class.blink::Length"* dereferenceable(8) %574, %"class.blink::Length"* dereferenceable(8) %586, %"class.blink::Length"* dereferenceable(8) %594, %"struct.blink::MinMaxSizes"* nonnull dereferenceable(8) %48, i32 %596, i32 %598, i1 zeroext %491, i1 zeroext %66, i1 zeroext %600, i64 %603, %"class.blink::LayoutUnit"* %605, %"class.blink::LayoutUnit"* %606, %"class.blink::LayoutUnit"* %607, %"class.blink::LayoutUnit"* %608, %"class.blink::LayoutUnit"* %609)
  %610 = load i8, i8* %40, align 1, !range !8
  %611 = icmp ne i8 %610, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %315) #9
  %612 = load i8, i8* %184, align 1
  %613 = icmp eq i8 %612, 8
  br i1 %613, label %614, label %615

614:                                              ; preds = %544
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %44) #9
  br label %615

615:                                              ; preds = %544, %614
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %172) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #9
  ret i1 %611
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZN5blink12_GLOBAL__N_119ComputeAbsoluteSizeIZNS_32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEE3$_0EEvNS_10LayoutUnitERKT_SO_SO_RKNS_6LengthESU_SU_SU_RKNS_11MinMaxSizesESO_NS0_18StaticPositionEdgeEbbbbNSF_ISO_EEPSO_S10_S10_S10_S10_"(i32, %class.anon* nocapture readonly dereferenceable(72), i32, i32, %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"struct.blink::MinMaxSizes"* nocapture readonly dereferenceable(8), i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, i64, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture) unnamed_addr #0 {
  %21 = alloca i32, align 4
  %22 = trunc i64 %14 to i8
  %23 = lshr i64 %14, 32
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %26 = load i8, i8* %25, align 1
  switch i8 %26, label %48 [
    i8 0, label %50
    i8 2, label %27
  ], !prof !29

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 3
  %29 = load i8, i8* %28, align 2, !range !8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::Length"* %4 to float*
  %33 = load float, float* %32, align 4
  br label %38

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = sitofp i32 %36 to float
  br label %38

38:                                               ; preds = %34, %31
  %39 = phi float [ %33, %31 ], [ %37, %34 ]
  %40 = fmul float %39, 6.400000e+01
  %41 = fcmp ult float %40, 0xC1E0000000000000
  %42 = fcmp ugt float %40, 0x41DFFFFFE0000000
  %43 = fcmp ogt float %40, 0xC1E0000000000000
  %44 = select i1 %43, float %40, float 0xC1E0000000000000
  %45 = fptosi float %44 to i32
  %46 = select i1 %41, i32 0, i32 2147483647
  %47 = select i1 %42, i32 %46, i32 %45
  br label %50

48:                                               ; preds = %20
  %49 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %4, i32 %2) #9
  br label %50

50:                                               ; preds = %20, %48, %38
  %51 = phi i8 [ %26, %20 ], [ 1, %38 ], [ 1, %48 ]
  %52 = phi i32 [ -1431655766, %20 ], [ %47, %38 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %54 = load i8, i8* %53, align 1
  switch i8 %54, label %76 [
    i8 0, label %78
    i8 2, label %55
  ], !prof !29

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  %57 = load i8, i8* %56, align 2, !range !8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.blink::Length"* %5 to float*
  %61 = load float, float* %60, align 4
  br label %66

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = sitofp i32 %64 to float
  br label %66

66:                                               ; preds = %62, %59
  %67 = phi float [ %61, %59 ], [ %65, %62 ]
  %68 = fmul float %67, 6.400000e+01
  %69 = fcmp ult float %68, 0xC1E0000000000000
  %70 = fcmp ugt float %68, 0x41DFFFFFE0000000
  %71 = fcmp ogt float %68, 0xC1E0000000000000
  %72 = select i1 %71, float %68, float 0xC1E0000000000000
  %73 = fptosi float %72 to i32
  %74 = select i1 %69, i32 0, i32 2147483647
  %75 = select i1 %70, i32 %74, i32 %73
  br label %78

76:                                               ; preds = %50
  %77 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %5, i32 %2) #9
  br label %78

78:                                               ; preds = %50, %76, %66
  %79 = phi i8 [ %54, %50 ], [ 1, %66 ], [ 1, %76 ]
  %80 = phi i32 [ -1431655766, %50 ], [ %75, %66 ], [ %77, %76 ]
  %81 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %82 = load i8, i8* %81, align 1
  switch i8 %82, label %104 [
    i8 0, label %106
    i8 2, label %83
  ], !prof !29

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 3
  %85 = load i8, i8* %84, align 2, !range !8
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.blink::Length"* %6 to float*
  %89 = load float, float* %88, align 4
  br label %94

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = sitofp i32 %92 to float
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi float [ %89, %87 ], [ %93, %90 ]
  %96 = fmul float %95, 6.400000e+01
  %97 = fcmp ult float %96, 0xC1E0000000000000
  %98 = fcmp ugt float %96, 0x41DFFFFFE0000000
  %99 = fcmp ogt float %96, 0xC1E0000000000000
  %100 = select i1 %99, float %96, float 0xC1E0000000000000
  %101 = fptosi float %100 to i32
  %102 = select i1 %97, i32 0, i32 2147483647
  %103 = select i1 %98, i32 %102, i32 %101
  br label %106

104:                                              ; preds = %78
  %105 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %6, i32 %3) #9
  br label %106

106:                                              ; preds = %78, %104, %94
  %107 = phi i8 [ %82, %78 ], [ 1, %94 ], [ 1, %104 ]
  %108 = phi i32 [ -1431655766, %78 ], [ %103, %94 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %110 = load i8, i8* %109, align 1
  switch i8 %110, label %132 [
    i8 0, label %134
    i8 2, label %111
  ], !prof !29

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  %113 = load i8, i8* %112, align 2, !range !8
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = bitcast %"class.blink::Length"* %7 to float*
  %117 = load float, float* %116, align 4
  br label %122

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = sitofp i32 %120 to float
  br label %122

122:                                              ; preds = %118, %115
  %123 = phi float [ %117, %115 ], [ %121, %118 ]
  %124 = fmul float %123, 6.400000e+01
  %125 = fcmp ult float %124, 0xC1E0000000000000
  %126 = fcmp ugt float %124, 0x41DFFFFFE0000000
  %127 = fcmp ogt float %124, 0xC1E0000000000000
  %128 = select i1 %127, float %124, float 0xC1E0000000000000
  %129 = fptosi float %128 to i32
  %130 = select i1 %125, i32 0, i32 2147483647
  %131 = select i1 %126, i32 %130, i32 %129
  br label %134

132:                                              ; preds = %106
  %133 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %3) #9
  br label %134

134:                                              ; preds = %106, %132, %122
  %135 = phi i1 [ false, %106 ], [ true, %122 ], [ true, %132 ]
  %136 = phi i32 [ -1431655766, %106 ], [ %131, %122 ], [ %133, %132 ]
  %137 = icmp eq i8 %107, 0
  br i1 %137, label %138, label %282

138:                                              ; preds = %134
  br i1 %135, label %355, label %139

139:                                              ; preds = %138
  %140 = icmp eq i8 %22, 0
  %141 = icmp eq i8 %51, 0
  %142 = select i1 %141, i32 0, i32 %52
  %143 = icmp eq i8 %79, 0
  %144 = select i1 %143, i32 0, i32 %80
  br i1 %140, label %145, label %394

145:                                              ; preds = %139
  switch i32 %10, label %169 [
    i32 0, label %146
    i32 1, label %153
    i32 2, label %168
  ]

146:                                              ; preds = %145
  %147 = icmp sgt i32 %9, -1
  %148 = select i1 %147, i32 -2147483648, i32 2147483647
  %149 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %150 = extractvalue { i32, i1 } %149, 1
  %151 = extractvalue { i32, i1 } %149, 0
  %152 = select i1 %150, i32 %148, i32 %151, !prof !16
  br label %169

153:                                              ; preds = %145
  %154 = icmp sgt i32 %9, -1
  %155 = select i1 %154, i32 -2147483648, i32 2147483647
  %156 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 %155, i32 %158, !prof !16
  %160 = icmp slt i32 %159, %9
  %161 = select i1 %160, i32 %159, i32 %9
  %162 = shl i32 %161, 1
  %163 = xor i32 %162, %161
  %164 = icmp sgt i32 %163, -1
  %165 = lshr i32 %161, 31
  %166 = add nuw i32 %165, 2147483647
  %167 = select i1 %164, i32 %162, i32 %166
  br label %169

168:                                              ; preds = %145
  br label %169

169:                                              ; preds = %153, %146, %168, %145
  %170 = phi i32 [ 0, %145 ], [ %9, %168 ], [ %152, %146 ], [ %167, %153 ]
  %171 = icmp sgt i32 %170, %3
  %172 = and i1 %171, %12
  %173 = select i1 %172, i32 %3, i32 %170
  %174 = tail call fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* %1, i32 0) #9
  %175 = extractvalue { i64, i8 } %174, 0
  %176 = trunc i64 %175 to i32
  %177 = lshr i64 %175, 32
  %178 = trunc i64 %177 to i32
  %179 = icmp sgt i32 %142, -1
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %173, i32 %142) #9
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !16
  %185 = icmp sgt i32 %144, -1
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %184, i32 %144) #9
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !16
  %191 = icmp sgt i32 %190, 0
  %192 = select i1 %191, i32 %190, i32 0
  %193 = icmp sgt i32 %192, %176
  %194 = select i1 %193, i32 %192, i32 %176
  %195 = icmp slt i32 %194, %178
  %196 = select i1 %195, i32 %194, i32 %178
  %197 = icmp slt i32 %142, 0
  %198 = select i1 %197, i32 -2147483648, i32 2147483647
  %199 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %196, i32 %142) #9
  %200 = extractvalue { i32, i1 } %199, 1
  %201 = extractvalue { i32, i1 } %199, 0
  %202 = select i1 %200, i32 %198, i32 %201, !prof !16
  %203 = icmp slt i32 %144, 0
  %204 = select i1 %203, i32 -2147483648, i32 2147483647
  %205 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %202, i32 %144) #9
  %206 = extractvalue { i32, i1 } %205, 1
  %207 = extractvalue { i32, i1 } %205, 0
  %208 = select i1 %206, i32 %204, i32 %207, !prof !16
  br i1 %11, label %209, label %236

209:                                              ; preds = %169
  switch i32 %10, label %235 [
    i32 0, label %552
    i32 1, label %210
    i32 2, label %228
  ]

210:                                              ; preds = %209
  %211 = sdiv i32 %208, 2
  %212 = sext i32 %211 to i64
  %213 = tail call i1 @llvm.is.constant.i64(i64 %212) #9
  br i1 %213, label %220, label %214

214:                                              ; preds = %210
  %215 = icmp slt i32 %208, -1
  %216 = select i1 %215, i32 -2147483648, i32 2147483647
  %217 = add nsw i64 %212, 2147483648
  %218 = icmp ult i64 %217, 4294967296
  %219 = select i1 %218, i32 %211, i32 %216, !prof !15
  br label %220

220:                                              ; preds = %214, %210
  %221 = phi i32 [ %219, %214 ], [ %211, %210 ]
  %222 = icmp sgt i32 %221, -1
  %223 = select i1 %222, i32 -2147483648, i32 2147483647
  %224 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %221) #9
  %225 = extractvalue { i32, i1 } %224, 1
  %226 = extractvalue { i32, i1 } %224, 0
  %227 = select i1 %225, i32 %223, i32 %226, !prof !16
  br label %552

228:                                              ; preds = %209
  %229 = icmp sgt i32 %208, -1
  %230 = select i1 %229, i32 -2147483648, i32 2147483647
  %231 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %208) #9
  %232 = extractvalue { i32, i1 } %231, 1
  %233 = extractvalue { i32, i1 } %231, 0
  %234 = select i1 %232, i32 %230, i32 %233, !prof !16
  br label %552

235:                                              ; preds = %209
  unreachable

236:                                              ; preds = %169
  switch i32 %10, label %281 [
    i32 0, label %237
    i32 1, label %250
    i32 2, label %274
  ]

237:                                              ; preds = %236
  %238 = icmp sgt i32 %9, -1
  %239 = select i1 %238, i32 -2147483648, i32 2147483647
  %240 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %241 = extractvalue { i32, i1 } %240, 1
  %242 = extractvalue { i32, i1 } %240, 0
  %243 = select i1 %241, i32 %239, i32 %242, !prof !16
  %244 = icmp sgt i32 %208, -1
  %245 = select i1 %244, i32 -2147483648, i32 2147483647
  %246 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %243, i32 %208) #9
  %247 = extractvalue { i32, i1 } %246, 1
  %248 = extractvalue { i32, i1 } %246, 0
  %249 = select i1 %247, i32 %245, i32 %248, !prof !16
  br label %523

250:                                              ; preds = %236
  %251 = icmp sgt i32 %9, -1
  %252 = select i1 %251, i32 -2147483648, i32 2147483647
  %253 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %254 = extractvalue { i32, i1 } %253, 1
  %255 = extractvalue { i32, i1 } %253, 0
  %256 = select i1 %254, i32 %252, i32 %255, !prof !16
  %257 = sdiv i32 %208, 2
  %258 = sext i32 %257 to i64
  %259 = tail call i1 @llvm.is.constant.i64(i64 %258) #9
  br i1 %259, label %266, label %260

260:                                              ; preds = %250
  %261 = icmp slt i32 %208, -1
  %262 = select i1 %261, i32 -2147483648, i32 2147483647
  %263 = add nsw i64 %258, 2147483648
  %264 = icmp ult i64 %263, 4294967296
  %265 = select i1 %264, i32 %257, i32 %262, !prof !15
  br label %266

266:                                              ; preds = %260, %250
  %267 = phi i32 [ %265, %260 ], [ %257, %250 ]
  %268 = icmp sgt i32 %267, -1
  %269 = select i1 %268, i32 -2147483648, i32 2147483647
  %270 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %256, i32 %267) #9
  %271 = extractvalue { i32, i1 } %270, 1
  %272 = extractvalue { i32, i1 } %270, 0
  %273 = select i1 %271, i32 %269, i32 %272, !prof !16
  br label %523

274:                                              ; preds = %236
  %275 = icmp sgt i32 %9, -1
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !16
  br label %523

281:                                              ; preds = %236
  unreachable

282:                                              ; preds = %134
  br i1 %135, label %283, label %480

283:                                              ; preds = %282
  %284 = icmp eq i8 %22, 0
  br i1 %284, label %285, label %290

285:                                              ; preds = %283
  %286 = icmp eq i8 %51, 0
  %287 = select i1 %286, i32 0, i32 %52
  %288 = icmp eq i8 %79, 0
  %289 = select i1 %288, i32 0, i32 %80
  br label %486

290:                                              ; preds = %283
  %291 = icmp sgt i32 %108, -1
  %292 = select i1 %291, i32 -2147483648, i32 2147483647
  %293 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %108) #9
  %294 = extractvalue { i32, i1 } %293, 1
  %295 = extractvalue { i32, i1 } %293, 0
  %296 = select i1 %294, i32 %292, i32 %295, !prof !16
  %297 = icmp sgt i32 %136, -1
  %298 = select i1 %297, i32 -2147483648, i32 2147483647
  %299 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %296, i32 %136) #9
  %300 = extractvalue { i32, i1 } %299, 1
  %301 = extractvalue { i32, i1 } %299, 0
  %302 = select i1 %300, i32 %298, i32 %301, !prof !16
  %303 = icmp sgt i32 %24, -1
  %304 = select i1 %303, i32 -2147483648, i32 2147483647
  %305 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %302, i32 %24) #9
  %306 = extractvalue { i32, i1 } %305, 1
  %307 = extractvalue { i32, i1 } %305, 0
  %308 = select i1 %306, i32 %304, i32 %307, !prof !16
  %309 = icmp eq i8 %51, 0
  %310 = icmp ne i8 %79, 0
  br i1 %309, label %311, label %327

311:                                              ; preds = %290
  br i1 %310, label %320, label %312

312:                                              ; preds = %311
  %313 = icmp sgt i32 %308, 0
  br i1 %313, label %314, label %317

314:                                              ; preds = %312
  %315 = lshr i32 %308, 1
  %316 = sub nsw i32 %308, %315
  br label %628

317:                                              ; preds = %312
  %318 = select i1 %11, i32 %308, i32 0
  %319 = select i1 %11, i32 0, i32 %308
  br label %628

320:                                              ; preds = %311
  %321 = icmp sgt i32 %80, -1
  %322 = select i1 %321, i32 -2147483648, i32 2147483647
  %323 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %308, i32 %80) #9
  %324 = extractvalue { i32, i1 } %323, 1
  %325 = extractvalue { i32, i1 } %323, 0
  %326 = select i1 %324, i32 %322, i32 %325, !prof !16
  br label %628

327:                                              ; preds = %290
  %328 = icmp sgt i32 %52, -1
  %329 = select i1 %328, i32 -2147483648, i32 2147483647
  %330 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %308, i32 %52) #9
  %331 = extractvalue { i32, i1 } %330, 1
  %332 = extractvalue { i32, i1 } %330, 0
  %333 = select i1 %331, i32 %329, i32 %332
  br i1 %310, label %334, label %628

334:                                              ; preds = %327
  %335 = icmp sgt i32 %80, -1
  %336 = select i1 %335, i32 -2147483648, i32 2147483647
  %337 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %333, i32 %80) #9
  %338 = extractvalue { i32, i1 } %337, 1
  %339 = extractvalue { i32, i1 } %337, 0
  %340 = select i1 %338, i32 %336, i32 %339, !prof !16
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %628, label %342

342:                                              ; preds = %334
  %343 = icmp slt i32 %340, 0
  %344 = select i1 %343, i32 -2147483648, i32 2147483647
  br i1 %11, label %345, label %350

345:                                              ; preds = %342
  %346 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %340) #9
  %347 = extractvalue { i32, i1 } %346, 1
  %348 = extractvalue { i32, i1 } %346, 0
  %349 = select i1 %347, i32 %344, i32 %348, !prof !16
  br label %628

350:                                              ; preds = %342
  %351 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %340) #9
  %352 = extractvalue { i32, i1 } %351, 1
  %353 = extractvalue { i32, i1 } %351, 0
  %354 = select i1 %352, i32 %344, i32 %353, !prof !16
  br label %628

355:                                              ; preds = %138
  %356 = icmp eq i8 %51, 0
  %357 = select i1 %356, i32 0, i32 %52
  %358 = icmp eq i8 %79, 0
  %359 = select i1 %358, i32 0, i32 %80
  %360 = icmp eq i8 %22, 0
  br i1 %360, label %361, label %523

361:                                              ; preds = %355
  %362 = icmp sgt i32 %136, -1
  %363 = select i1 %362, i32 -2147483648, i32 2147483647
  %364 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %136) #9
  %365 = extractvalue { i32, i1 } %364, 1
  %366 = extractvalue { i32, i1 } %364, 0
  %367 = select i1 %365, i32 %363, i32 %366, !prof !16
  %368 = icmp sgt i32 %367, %3
  %369 = and i1 %368, %12
  %370 = select i1 %369, i32 %3, i32 %367
  %371 = tail call fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* %1, i32 0) #9
  %372 = extractvalue { i64, i8 } %371, 0
  %373 = trunc i64 %372 to i32
  %374 = lshr i64 %372, 32
  %375 = trunc i64 %374 to i32
  %376 = icmp sgt i32 %357, -1
  %377 = select i1 %376, i32 -2147483648, i32 2147483647
  %378 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %370, i32 %357) #9
  %379 = extractvalue { i32, i1 } %378, 1
  %380 = extractvalue { i32, i1 } %378, 0
  %381 = select i1 %379, i32 %377, i32 %380, !prof !16
  %382 = icmp sgt i32 %359, -1
  %383 = select i1 %382, i32 -2147483648, i32 2147483647
  %384 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %381, i32 %359) #9
  %385 = extractvalue { i32, i1 } %384, 1
  %386 = extractvalue { i32, i1 } %384, 0
  %387 = select i1 %385, i32 %383, i32 %386, !prof !16
  %388 = icmp sgt i32 %387, 0
  %389 = select i1 %388, i32 %387, i32 0
  %390 = icmp sgt i32 %389, %373
  %391 = select i1 %390, i32 %389, i32 %373
  %392 = icmp slt i32 %391, %375
  %393 = select i1 %392, i32 %391, i32 %375
  br label %523

394:                                              ; preds = %139
  %395 = icmp slt i32 %142, 0
  %396 = select i1 %395, i32 -2147483648, i32 2147483647
  %397 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %142) #9
  %398 = extractvalue { i32, i1 } %397, 1
  %399 = extractvalue { i32, i1 } %397, 0
  %400 = select i1 %398, i32 %396, i32 %399, !prof !16
  %401 = icmp slt i32 %144, 0
  %402 = select i1 %401, i32 -2147483648, i32 2147483647
  %403 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %400, i32 %144) #9
  %404 = extractvalue { i32, i1 } %403, 1
  %405 = extractvalue { i32, i1 } %403, 0
  %406 = select i1 %404, i32 %402, i32 %405, !prof !16
  br i1 %11, label %407, label %434

407:                                              ; preds = %394
  switch i32 %10, label %433 [
    i32 0, label %552
    i32 1, label %408
    i32 2, label %426
  ]

408:                                              ; preds = %407
  %409 = sdiv i32 %406, 2
  %410 = sext i32 %409 to i64
  %411 = tail call i1 @llvm.is.constant.i64(i64 %410) #9
  br i1 %411, label %418, label %412

412:                                              ; preds = %408
  %413 = icmp slt i32 %406, -1
  %414 = select i1 %413, i32 -2147483648, i32 2147483647
  %415 = add nsw i64 %410, 2147483648
  %416 = icmp ult i64 %415, 4294967296
  %417 = select i1 %416, i32 %409, i32 %414, !prof !15
  br label %418

418:                                              ; preds = %412, %408
  %419 = phi i32 [ %417, %412 ], [ %409, %408 ]
  %420 = icmp sgt i32 %419, -1
  %421 = select i1 %420, i32 -2147483648, i32 2147483647
  %422 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %419) #9
  %423 = extractvalue { i32, i1 } %422, 1
  %424 = extractvalue { i32, i1 } %422, 0
  %425 = select i1 %423, i32 %421, i32 %424, !prof !16
  br label %552

426:                                              ; preds = %407
  %427 = icmp sgt i32 %406, -1
  %428 = select i1 %427, i32 -2147483648, i32 2147483647
  %429 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %406) #9
  %430 = extractvalue { i32, i1 } %429, 1
  %431 = extractvalue { i32, i1 } %429, 0
  %432 = select i1 %430, i32 %428, i32 %431, !prof !16
  br label %552

433:                                              ; preds = %407
  unreachable

434:                                              ; preds = %394
  switch i32 %10, label %479 [
    i32 0, label %435
    i32 1, label %448
    i32 2, label %472
  ]

435:                                              ; preds = %434
  %436 = icmp sgt i32 %9, -1
  %437 = select i1 %436, i32 -2147483648, i32 2147483647
  %438 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %439 = extractvalue { i32, i1 } %438, 1
  %440 = extractvalue { i32, i1 } %438, 0
  %441 = select i1 %439, i32 %437, i32 %440, !prof !16
  %442 = icmp sgt i32 %406, -1
  %443 = select i1 %442, i32 -2147483648, i32 2147483647
  %444 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %441, i32 %406) #9
  %445 = extractvalue { i32, i1 } %444, 1
  %446 = extractvalue { i32, i1 } %444, 0
  %447 = select i1 %445, i32 %443, i32 %446, !prof !16
  br label %523

448:                                              ; preds = %434
  %449 = icmp sgt i32 %9, -1
  %450 = select i1 %449, i32 -2147483648, i32 2147483647
  %451 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %452 = extractvalue { i32, i1 } %451, 1
  %453 = extractvalue { i32, i1 } %451, 0
  %454 = select i1 %452, i32 %450, i32 %453, !prof !16
  %455 = sdiv i32 %406, 2
  %456 = sext i32 %455 to i64
  %457 = tail call i1 @llvm.is.constant.i64(i64 %456) #9
  br i1 %457, label %464, label %458

458:                                              ; preds = %448
  %459 = icmp slt i32 %406, -1
  %460 = select i1 %459, i32 -2147483648, i32 2147483647
  %461 = add nsw i64 %456, 2147483648
  %462 = icmp ult i64 %461, 4294967296
  %463 = select i1 %462, i32 %455, i32 %460, !prof !15
  br label %464

464:                                              ; preds = %458, %448
  %465 = phi i32 [ %463, %458 ], [ %455, %448 ]
  %466 = icmp sgt i32 %465, -1
  %467 = select i1 %466, i32 -2147483648, i32 2147483647
  %468 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %454, i32 %465) #9
  %469 = extractvalue { i32, i1 } %468, 1
  %470 = extractvalue { i32, i1 } %468, 0
  %471 = select i1 %469, i32 %467, i32 %470, !prof !16
  br label %523

472:                                              ; preds = %434
  %473 = icmp sgt i32 %9, -1
  %474 = select i1 %473, i32 -2147483648, i32 2147483647
  %475 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %476 = extractvalue { i32, i1 } %475, 1
  %477 = extractvalue { i32, i1 } %475, 0
  %478 = select i1 %476, i32 %474, i32 %477, !prof !16
  br label %523

479:                                              ; preds = %434
  unreachable

480:                                              ; preds = %282
  %481 = icmp eq i8 %51, 0
  %482 = select i1 %481, i32 0, i32 %52
  %483 = icmp eq i8 %79, 0
  %484 = select i1 %483, i32 0, i32 %80
  %485 = icmp eq i8 %22, 0
  br i1 %485, label %486, label %552

486:                                              ; preds = %480, %285
  %487 = phi i1 [ true, %285 ], [ false, %480 ]
  %488 = phi i32 [ %289, %285 ], [ %484, %480 ]
  %489 = phi i32 [ %287, %285 ], [ %482, %480 ]
  %490 = icmp sgt i32 %108, -1
  %491 = select i1 %490, i32 -2147483648, i32 2147483647
  %492 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %108) #9
  %493 = extractvalue { i32, i1 } %492, 1
  %494 = extractvalue { i32, i1 } %492, 0
  %495 = select i1 %493, i32 %491, i32 %494
  br i1 %487, label %581, label %496

496:                                              ; preds = %486
  %497 = icmp sgt i32 %495, %3
  %498 = and i1 %497, %12
  %499 = select i1 %498, i32 %3, i32 %495
  %500 = tail call fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* %1, i32 0) #9
  %501 = extractvalue { i64, i8 } %500, 0
  %502 = trunc i64 %501 to i32
  %503 = lshr i64 %501, 32
  %504 = trunc i64 %503 to i32
  %505 = icmp sgt i32 %489, -1
  %506 = select i1 %505, i32 -2147483648, i32 2147483647
  %507 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %499, i32 %489) #9
  %508 = extractvalue { i32, i1 } %507, 1
  %509 = extractvalue { i32, i1 } %507, 0
  %510 = select i1 %508, i32 %506, i32 %509, !prof !16
  %511 = icmp sgt i32 %488, -1
  %512 = select i1 %511, i32 -2147483648, i32 2147483647
  %513 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %510, i32 %488) #9
  %514 = extractvalue { i32, i1 } %513, 1
  %515 = extractvalue { i32, i1 } %513, 0
  %516 = select i1 %514, i32 %512, i32 %515, !prof !16
  %517 = icmp sgt i32 %516, 0
  %518 = select i1 %517, i32 %516, i32 0
  %519 = icmp sgt i32 %518, %502
  %520 = select i1 %519, i32 %518, i32 %502
  %521 = icmp slt i32 %520, %504
  %522 = select i1 %521, i32 %520, i32 %504
  br label %552

523:                                              ; preds = %355, %237, %266, %274, %361, %435, %464, %472
  %524 = phi i32 [ %393, %361 ], [ %24, %472 ], [ %24, %464 ], [ %24, %435 ], [ %196, %274 ], [ %196, %266 ], [ %196, %237 ], [ %24, %355 ]
  %525 = phi i32 [ %359, %361 ], [ %144, %472 ], [ %144, %464 ], [ %144, %435 ], [ %144, %274 ], [ %144, %266 ], [ %144, %237 ], [ %359, %355 ]
  %526 = phi i32 [ %357, %361 ], [ %142, %472 ], [ %142, %464 ], [ %142, %435 ], [ %142, %274 ], [ %142, %266 ], [ %142, %237 ], [ %357, %355 ]
  %527 = phi i32 [ %136, %361 ], [ %478, %472 ], [ %471, %464 ], [ %447, %435 ], [ %280, %274 ], [ %273, %266 ], [ %249, %237 ], [ %136, %355 ]
  %528 = icmp sgt i32 %524, -1
  %529 = select i1 %528, i32 -2147483648, i32 2147483647
  %530 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %524) #9
  %531 = extractvalue { i32, i1 } %530, 1
  %532 = extractvalue { i32, i1 } %530, 0
  %533 = select i1 %531, i32 %529, i32 %532, !prof !16
  %534 = icmp sgt i32 %527, -1
  %535 = select i1 %534, i32 -2147483648, i32 2147483647
  %536 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %533, i32 %527) #9
  %537 = extractvalue { i32, i1 } %536, 1
  %538 = extractvalue { i32, i1 } %536, 0
  %539 = select i1 %537, i32 %535, i32 %538, !prof !16
  %540 = icmp sgt i32 %526, -1
  %541 = select i1 %540, i32 -2147483648, i32 2147483647
  %542 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %539, i32 %526) #9
  %543 = extractvalue { i32, i1 } %542, 1
  %544 = extractvalue { i32, i1 } %542, 0
  %545 = select i1 %543, i32 %541, i32 %544, !prof !16
  %546 = icmp sgt i32 %525, -1
  %547 = select i1 %546, i32 -2147483648, i32 2147483647
  %548 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %545, i32 %525) #9
  %549 = extractvalue { i32, i1 } %548, 1
  %550 = extractvalue { i32, i1 } %548, 0
  %551 = select i1 %549, i32 %547, i32 %550, !prof !16
  br label %628

552:                                              ; preds = %480, %209, %220, %228, %407, %418, %426, %496
  %553 = phi i32 [ %522, %496 ], [ %24, %426 ], [ %24, %418 ], [ %24, %407 ], [ %196, %228 ], [ %196, %220 ], [ %196, %209 ], [ %24, %480 ]
  %554 = phi i32 [ %488, %496 ], [ %144, %426 ], [ %144, %418 ], [ %144, %407 ], [ %144, %228 ], [ %144, %220 ], [ %144, %209 ], [ %484, %480 ]
  %555 = phi i32 [ %489, %496 ], [ %142, %426 ], [ %142, %418 ], [ %142, %407 ], [ %142, %228 ], [ %142, %220 ], [ %142, %209 ], [ %482, %480 ]
  %556 = phi i32 [ %108, %496 ], [ %432, %426 ], [ %425, %418 ], [ %9, %407 ], [ %234, %228 ], [ %227, %220 ], [ %9, %209 ], [ %108, %480 ]
  %557 = icmp sgt i32 %553, -1
  %558 = select i1 %557, i32 -2147483648, i32 2147483647
  %559 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %553) #9
  %560 = extractvalue { i32, i1 } %559, 1
  %561 = extractvalue { i32, i1 } %559, 0
  %562 = select i1 %560, i32 %558, i32 %561, !prof !16
  %563 = icmp sgt i32 %556, -1
  %564 = select i1 %563, i32 -2147483648, i32 2147483647
  %565 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %562, i32 %556) #9
  %566 = extractvalue { i32, i1 } %565, 1
  %567 = extractvalue { i32, i1 } %565, 0
  %568 = select i1 %566, i32 %564, i32 %567, !prof !16
  %569 = icmp sgt i32 %555, -1
  %570 = select i1 %569, i32 -2147483648, i32 2147483647
  %571 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %568, i32 %555) #9
  %572 = extractvalue { i32, i1 } %571, 1
  %573 = extractvalue { i32, i1 } %571, 0
  %574 = select i1 %572, i32 %570, i32 %573, !prof !16
  %575 = icmp sgt i32 %554, -1
  %576 = select i1 %575, i32 -2147483648, i32 2147483647
  %577 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %574, i32 %554) #9
  %578 = extractvalue { i32, i1 } %577, 1
  %579 = extractvalue { i32, i1 } %577, 0
  %580 = select i1 %578, i32 %576, i32 %579, !prof !16
  br label %628

581:                                              ; preds = %486
  %582 = icmp sgt i32 %136, -1
  %583 = select i1 %582, i32 -2147483648, i32 2147483647
  %584 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %495, i32 %136) #9
  %585 = extractvalue { i32, i1 } %584, 1
  %586 = extractvalue { i32, i1 } %584, 0
  %587 = select i1 %585, i32 %583, i32 %586, !prof !16
  br i1 %13, label %588, label %615

588:                                              ; preds = %581
  %589 = icmp sgt i32 %587, %3
  %590 = and i1 %589, %12
  %591 = select i1 %590, i32 %3, i32 %587
  %592 = tail call fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* %1, i32 0) #9
  %593 = extractvalue { i64, i8 } %592, 0
  %594 = trunc i64 %593 to i32
  %595 = lshr i64 %593, 32
  %596 = trunc i64 %595 to i32
  %597 = icmp sgt i32 %489, -1
  %598 = select i1 %597, i32 -2147483648, i32 2147483647
  %599 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %591, i32 %489) #9
  %600 = extractvalue { i32, i1 } %599, 1
  %601 = extractvalue { i32, i1 } %599, 0
  %602 = select i1 %600, i32 %598, i32 %601, !prof !16
  %603 = icmp sgt i32 %488, -1
  %604 = select i1 %603, i32 -2147483648, i32 2147483647
  %605 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %602, i32 %488) #9
  %606 = extractvalue { i32, i1 } %605, 1
  %607 = extractvalue { i32, i1 } %605, 0
  %608 = select i1 %606, i32 %604, i32 %607, !prof !16
  %609 = icmp sgt i32 %608, 0
  %610 = select i1 %609, i32 %608, i32 0
  %611 = icmp sgt i32 %610, %594
  %612 = select i1 %611, i32 %610, i32 %594
  %613 = icmp slt i32 %612, %596
  %614 = select i1 %613, i32 %612, i32 %596
  br label %628

615:                                              ; preds = %581
  %616 = icmp sgt i32 %489, -1
  %617 = select i1 %616, i32 -2147483648, i32 2147483647
  %618 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %587, i32 %489) #9
  %619 = extractvalue { i32, i1 } %618, 1
  %620 = extractvalue { i32, i1 } %618, 0
  %621 = select i1 %619, i32 %617, i32 %620, !prof !16
  %622 = icmp sgt i32 %488, -1
  %623 = select i1 %622, i32 -2147483648, i32 2147483647
  %624 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %621, i32 %488) #9
  %625 = extractvalue { i32, i1 } %624, 1
  %626 = extractvalue { i32, i1 } %624, 0
  %627 = select i1 %625, i32 %623, i32 %626, !prof !16
  br label %628

628:                                              ; preds = %334, %317, %327, %350, %345, %314, %320, %523, %552, %615, %588
  %629 = phi i32 [ %553, %552 ], [ %524, %523 ], [ %627, %615 ], [ %614, %588 ], [ %24, %334 ], [ %24, %350 ], [ %24, %345 ], [ %24, %314 ], [ %24, %320 ], [ %24, %317 ], [ %24, %327 ]
  %630 = phi i32 [ %554, %552 ], [ %525, %523 ], [ %488, %615 ], [ %488, %588 ], [ %80, %334 ], [ %80, %350 ], [ %80, %345 ], [ %316, %314 ], [ %80, %320 ], [ %318, %317 ], [ %333, %327 ]
  %631 = phi i32 [ %555, %552 ], [ %526, %523 ], [ %489, %615 ], [ %489, %588 ], [ %52, %334 ], [ %52, %350 ], [ %52, %345 ], [ %315, %314 ], [ %326, %320 ], [ %319, %317 ], [ %52, %327 ]
  %632 = phi i32 [ %580, %552 ], [ %527, %523 ], [ %136, %615 ], [ %136, %588 ], [ %136, %334 ], [ %136, %350 ], [ %349, %345 ], [ %136, %314 ], [ %136, %320 ], [ %136, %317 ], [ %136, %327 ]
  %633 = phi i32 [ %556, %552 ], [ %551, %523 ], [ %108, %615 ], [ %108, %588 ], [ %108, %334 ], [ %354, %350 ], [ %108, %345 ], [ %108, %314 ], [ %108, %320 ], [ %108, %317 ], [ %108, %327 ]
  %634 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %634)
  store i32 %629, i32* %21, align 4
  %635 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %8, i64 0, i32 0
  %636 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %8, i64 0, i32 1
  %637 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %636, i64 0, i32 0
  %638 = load i32, i32* %637, align 4
  %639 = icmp slt i32 %638, %629
  %640 = bitcast i32* %21 to %"class.blink::LayoutUnit"*
  %641 = select i1 %639, %"class.blink::LayoutUnit"* %636, %"class.blink::LayoutUnit"* %640
  %642 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %8, i64 0, i32 0, i32 0
  %643 = load i32, i32* %642, align 4
  %644 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %641, i64 0, i32 0
  %645 = load i32, i32* %644, align 4
  %646 = icmp slt i32 %643, %645
  %647 = select i1 %646, %"class.blink::LayoutUnit"* %641, %"class.blink::LayoutUnit"* %635
  %648 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %647, i64 0, i32 0
  %649 = load i32, i32* %648, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %634)
  %650 = icmp eq i32 %629, %649
  br i1 %650, label %655, label %651

651:                                              ; preds = %628
  %652 = zext i32 %649 to i64
  %653 = shl nuw i64 %652, 32
  %654 = or i64 %653, 1
  tail call fastcc void @"_ZN5blink12_GLOBAL__N_119ComputeAbsoluteSizeIZNS_32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEE3$_0EEvNS_10LayoutUnitERKT_SO_SO_RKNS_6LengthESU_SU_SU_RKNS_11MinMaxSizesESO_NS0_18StaticPositionEdgeEbbbbNSF_ISO_EEPSO_S10_S10_S10_S10_"(i32 %0, %class.anon* dereferenceable(72) %1, i32 %2, i32 %3, %"class.blink::Length"* dereferenceable(8) %4, %"class.blink::Length"* dereferenceable(8) %5, %"class.blink::Length"* dereferenceable(8) %6, %"class.blink::Length"* dereferenceable(8) %7, %"struct.blink::MinMaxSizes"* dereferenceable(8) %8, i32 %9, i32 %10, i1 zeroext %11, i1 zeroext %12, i1 zeroext %13, i64 %654, %"class.blink::LayoutUnit"* %15, %"class.blink::LayoutUnit"* %16, %"class.blink::LayoutUnit"* %17, %"class.blink::LayoutUnit"* %18, %"class.blink::LayoutUnit"* %19)
  br label %675

655:                                              ; preds = %628
  %656 = icmp slt i32 %629, %0
  %657 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %15, i64 0, i32 0
  %658 = select i1 %656, i32 %0, i32 %629
  store i32 %658, i32* %657, align 4
  %659 = icmp slt i32 %631, 0
  %660 = select i1 %659, i32 -2147483648, i32 2147483647
  %661 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %633, i32 %631) #9
  %662 = extractvalue { i32, i1 } %661, 1
  %663 = extractvalue { i32, i1 } %661, 0
  %664 = select i1 %662, i32 %660, i32 %663, !prof !16
  %665 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  store i32 %664, i32* %665, align 4
  %666 = icmp slt i32 %630, 0
  %667 = select i1 %666, i32 -2147483648, i32 2147483647
  %668 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %632, i32 %630) #9
  %669 = extractvalue { i32, i1 } %668, 1
  %670 = extractvalue { i32, i1 } %668, 0
  %671 = select i1 %669, i32 %667, i32 %670, !prof !16
  %672 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %17, i64 0, i32 0
  store i32 %671, i32* %672, align 4
  %673 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %18, i64 0, i32 0
  store i32 %631, i32* %673, align 4
  %674 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %19, i64 0, i32 0
  store i32 %630, i32* %674, align 4
  br label %675

675:                                              ; preds = %655, %651
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::NGLogicalStaticPosition"* nocapture readonly dereferenceable(16), %"class.absl::optional.1867"* nocapture readonly dereferenceable(12), i16, %"struct.blink::NGLogicalOutOfFlowDimensions"*) local_unnamed_addr #0 {
  %8 = alloca i32, align 4
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %class.scoped_refptr.1631, align 8
  %22 = alloca %"struct.blink::NGLogicalOutOfFlowDimensions"*, align 8
  %23 = alloca %class.anon.1877, align 8
  %24 = alloca %class.anon.1878, align 8
  %25 = alloca i64, align 8
  %26 = bitcast i64* %25 to %"struct.blink::MinMaxSizes"*
  store %"struct.blink::NGLogicalOutOfFlowDimensions"* %6, %"struct.blink::NGLogicalOutOfFlowDimensions"** %22, align 8
  %27 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %21, i64 0, i32 0
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %27, align 8
  %28 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 1
  %33 = load i8, i8* %32, align 8
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %7
  %37 = bitcast %"class.blink::LayoutObject"* %29 to i1 (%"class.blink::LayoutObject"*, i32)***
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %29, i32 44) #9
  br label %42

42:                                               ; preds = %7, %36
  %43 = phi i1 [ false, %7 ], [ %41, %36 ]
  %44 = bitcast %class.anon.1877* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #9
  %45 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %23, i64 0, i32 0
  %46 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %23, i64 0, i32 1
  %47 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %23, i64 0, i32 2
  %48 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %23, i64 0, i32 3
  %49 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %23, i64 0, i32 4
  store %"class.blink::NGBlockNode"* %0, %"class.blink::NGBlockNode"** %45, align 8
  store %"struct.blink::NGLogicalOutOfFlowDimensions"** %22, %"struct.blink::NGLogicalOutOfFlowDimensions"*** %46, align 8
  store %class.scoped_refptr.1631* %21, %class.scoped_refptr.1631** %47, align 8
  store %"class.blink::ComputedStyle"* %31, %"class.blink::ComputedStyle"** %48, align 8
  store %"class.blink::NGConstraintSpace"* %1, %"class.blink::NGConstraintSpace"** %49, align 8
  %50 = bitcast %class.anon.1878* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = getelementptr inbounds %class.anon.1878, %class.anon.1878* %24, i64 0, i32 0
  %52 = getelementptr inbounds %class.anon.1878, %class.anon.1878* %24, i64 0, i32 1
  store %"class.blink::NGBlockNode"* %0, %"class.blink::NGBlockNode"** %51, align 8
  store %class.anon.1877* %23, %class.anon.1877** %52, align 8
  %53 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 4, !range !8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  br label %107

59:                                               ; preds = %42
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = and i160 %62, 15211807202738752817960438464512
  %64 = icmp eq i160 %63, 0
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 5, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 3
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 8
  %69 = select i1 %64, %"class.blink::Length"* %67, %"class.blink::Length"* %68
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 0, i32 2
  %71 = load i8, i8* %70, align 1
  switch i8 %71, label %78 [
    i8 0, label %85
    i8 8, label %72
    i8 1, label %72
    i8 6, label %72
  ]

72:                                               ; preds = %59, %59, %59
  %73 = call zeroext i1 @_ZN5blink23BlockLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthEPKNS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::Length"* dereferenceable(8) %69, %"class.blink::LayoutUnit"* null) #9
  br i1 %73, label %76, label %74, !prof !16

74:                                               ; preds = %72
  %75 = load i8, i8* %70, align 1
  br label %78

76:                                               ; preds = %72
  %77 = call fastcc i32 @"_ZZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_1clEv"(%class.anon.1877* nonnull %23) #9
  br label %107

78:                                               ; preds = %59, %74
  %79 = phi i8 [ %75, %74 ], [ %71, %59 ]
  switch i8 %79, label %82 [
    i8 3, label %80
    i8 4, label %80
    i8 7, label %80
    i8 5, label %80
  ]

80:                                               ; preds = %78, %78, %78, %78
  %81 = call fastcc i32 @"_ZZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_1clEv"(%class.anon.1877* nonnull %23) #9
  br label %82

82:                                               ; preds = %80, %78
  %83 = phi i32 [ %81, %80 ], [ -64, %78 ]
  %84 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %31, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.blink::Length"* dereferenceable(8) %69, i32 %83, i32 0, %"class.blink::LayoutUnit"* null) #9
  br label %107

85:                                               ; preds = %59
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 1, i32 1, i32 0
  %87 = load float, float* %86, align 4
  %88 = fcmp oeq float %87, 0.000000e+00
  br i1 %88, label %107, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 1, i32 1, i32 1
  %91 = load float, float* %90, align 4
  %92 = fcmp oeq float %91, 0.000000e+00
  %93 = fcmp olt float %87, 1.562500e-02
  %94 = or i1 %93, %92
  %95 = fcmp olt float %91, 1.562500e-02
  %96 = or i1 %95, %94
  br i1 %96, label %107, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 4
  %100 = and i8 %99, 3
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %6, i64 0, i32 1, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp ne i32 %104, -64
  %106 = or i1 %43, %105
  br label %107

107:                                              ; preds = %85, %89, %97, %82, %76, %102, %56
  %108 = phi i64 [ 2863311361, %56 ], [ 2863311360, %102 ], [ 2863311361, %76 ], [ 2863311361, %82 ], [ 2863311360, %97 ], [ 2863311360, %89 ], [ 2863311360, %85 ]
  %109 = phi i32 [ %58, %56 ], [ -1431655766, %102 ], [ %77, %76 ], [ %84, %82 ], [ -1431655766, %97 ], [ -1431655766, %89 ], [ -1431655766, %85 ]
  %110 = phi i1 [ %43, %56 ], [ %106, %102 ], [ %43, %76 ], [ %43, %82 ], [ %43, %97 ], [ %43, %89 ], [ %43, %85 ]
  %111 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #9
  %112 = bitcast i64* %25 to i32*
  %113 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %26, i64 0, i32 1, i32 0
  store i32 0, i32* %112, align 8
  store i32 0, i32* %113, align 4
  %114 = load i8, i8* %53, align 4, !range !8
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %107
  store i64 9223372032559808512, i64* %25, align 8
  br label %137

117:                                              ; preds = %107
  %118 = call i64 @_ZN5blink23ComputeMinMaxBlockSizesERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEPKS9_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %31, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, i32 0, %"class.blink::LayoutUnit"* null) #9
  store i64 %118, i64* %25, align 8
  br i1 %43, label %119, label %137

119:                                              ; preds = %117
  %120 = lshr i64 %118, 32
  %121 = trunc i64 %120 to i32
  %122 = trunc i64 %118 to i32
  %123 = call fastcc i32 @"_ZZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_1clEv"(%class.anon.1877* nonnull %23)
  %124 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124)
  store i32 %123, i32* %8, align 4
  %125 = bitcast i64* %25 to %"class.blink::LayoutUnit"*
  %126 = icmp sgt i32 %123, %122
  %127 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %128 = select i1 %126, %"class.blink::LayoutUnit"* %127, %"class.blink::LayoutUnit"* %125
  %129 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %128, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %112, align 8
  %131 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %26, i64 0, i32 1
  %132 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %131, i64 0, i32 0
  %133 = icmp sgt i32 %123, %121
  %134 = select i1 %133, %"class.blink::LayoutUnit"* %127, %"class.blink::LayoutUnit"* %131
  %135 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  store i32 %136, i32* %132, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124)
  br label %137

137:                                              ; preds = %117, %119, %116
  %138 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %139 = bitcast [20 x i8]* %138 to i160*
  %140 = load i160, i160* %139, align 8
  %141 = lshr i160 %140, 102
  %142 = trunc i160 %141 to i16
  %143 = and i16 %142, 3
  %144 = icmp eq i16 %143, 0
  %145 = trunc i16 %5 to i8
  br i1 %144, label %146, label %150

146:                                              ; preds = %137
  %147 = icmp ne i8 %145, 0
  %148 = icmp ugt i16 %5, 255
  %149 = and i1 %148, %147
  br label %164

150:                                              ; preds = %137
  switch i8 %145, label %153 [
    i8 1, label %154
    i8 0, label %151
  ]

151:                                              ; preds = %150
  %152 = icmp ult i16 %5, 256
  br label %154

153:                                              ; preds = %150
  br label %154

154:                                              ; preds = %150, %151, %153
  %155 = phi i1 [ false, %150 ], [ %152, %151 ], [ true, %153 ]
  %156 = trunc i16 %143 to i8
  switch i8 %156, label %160 [
    i8 1, label %161
    i8 0, label %157
  ]

157:                                              ; preds = %154
  %158 = and i160 %140, 41538374868278621028243970633760768
  %159 = icmp eq i160 %158, 0
  br label %161

160:                                              ; preds = %154
  br label %161

161:                                              ; preds = %154, %157, %160
  %162 = phi i1 [ false, %154 ], [ %159, %157 ], [ true, %160 ]
  %163 = xor i1 %155, %162
  br label %164

164:                                              ; preds = %161, %146
  %165 = phi i1 [ %149, %146 ], [ %163, %161 ]
  %166 = xor i1 %165, true
  %167 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp slt i32 %170, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %168, i32 %170) #9
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !16
  %177 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, 2048
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %194

181:                                              ; preds = %164
  %182 = lshr i32 %178, 26
  %183 = and i32 %182, 3
  switch i32 %183, label %184 [
    i32 0, label %185
    i32 1, label %219
    i32 2, label %188
    i32 3, label %189
  ]

184:                                              ; preds = %181
  unreachable

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  %187 = load i32, i32* %186, align 8
  br label %219

188:                                              ; preds = %181
  br label %219

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %191 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %190 to i32**
  %192 = load i32*, i32** %191, align 8
  %193 = load i32, i32* %192, align 8
  br label %219

194:                                              ; preds = %164
  %195 = lshr i32 %178, 28
  %196 = and i32 %195, 3
  switch i32 %196, label %197 [
    i32 0, label %198
    i32 1, label %219
    i32 2, label %219
    i32 3, label %200
  ]

197:                                              ; preds = %194
  unreachable

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  br label %204

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %202 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %201, align 8
  %203 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %202, i64 0, i32 0, i32 1, i32 0
  br label %204

204:                                              ; preds = %200, %198
  %205 = phi i32* [ %203, %200 ], [ %199, %198 ]
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, -64
  br i1 %207, label %219, label %208

208:                                              ; preds = %204
  switch i32 %196, label %209 [
    i32 0, label %210
    i32 1, label %219
    i32 2, label %213
    i32 3, label %214
  ]

209:                                              ; preds = %208
  unreachable

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  %212 = load i32, i32* %211, align 4
  br label %219

213:                                              ; preds = %208
  br label %219

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %216 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %215, align 8
  %217 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %216, i64 0, i32 0, i32 1, i32 0
  %218 = load i32, i32* %217, align 4
  br label %219

219:                                              ; preds = %181, %185, %188, %189, %194, %194, %204, %208, %210, %213, %214
  %220 = phi i32 [ %193, %189 ], [ -64, %188 ], [ %187, %185 ], [ 0, %181 ], [ %218, %214 ], [ -64, %213 ], [ %212, %210 ], [ 0, %208 ], [ 0, %204 ], [ 0, %194 ], [ 0, %194 ]
  %221 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = lshr i64 %222, 32
  %224 = trunc i64 %223 to i32
  %225 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225)
  %226 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226)
  %227 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227)
  %228 = trunc i160 %141 to i8
  %229 = and i8 %228, 3
  %230 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 7, i32 0, i32 0
  %231 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %230, align 8, !noalias !30
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 12
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 11
  %234 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 10
  store %"class.blink::Length"* %232, %"class.blink::Length"** %9, align 8, !alias.scope !30
  store %"class.blink::Length"* %233, %"class.blink::Length"** %10, align 8, !alias.scope !30
  store %"class.blink::Length"* %234, %"class.blink::Length"** %11, align 8, !alias.scope !30
  %235 = icmp eq i8 %229, 0
  %236 = icmp eq i8 %229, 1
  %237 = select i1 %236, %"class.blink::Length"** %10, %"class.blink::Length"** %11
  %238 = select i1 %235, %"class.blink::Length"** %9, %"class.blink::Length"** %237
  %239 = load %"class.blink::Length"*, %"class.blink::Length"** %238, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227)
  %240 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240)
  %241 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241)
  %242 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242)
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 9
  store %"class.blink::Length"* %233, %"class.blink::Length"** %12, align 8, !alias.scope !33
  store %"class.blink::Length"* %243, %"class.blink::Length"** %13, align 8, !alias.scope !33
  store %"class.blink::Length"* %234, %"class.blink::Length"** %14, align 8, !alias.scope !33
  %244 = select i1 %236, %"class.blink::Length"** %14, %"class.blink::Length"** %12
  %245 = select i1 %235, %"class.blink::Length"** %13, %"class.blink::Length"** %244
  %246 = load %"class.blink::Length"*, %"class.blink::Length"** %245, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242)
  %247 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247)
  %248 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248)
  %249 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249)
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 18
  %251 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 17
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 8
  store %"class.blink::Length"* %250, %"class.blink::Length"** %15, align 8, !alias.scope !36
  store %"class.blink::Length"* %251, %"class.blink::Length"** %16, align 8, !alias.scope !36
  store %"class.blink::Length"* %252, %"class.blink::Length"** %17, align 8, !alias.scope !36
  %253 = select i1 %236, %"class.blink::Length"** %16, %"class.blink::Length"** %17
  %254 = select i1 %235, %"class.blink::Length"** %15, %"class.blink::Length"** %253
  %255 = load %"class.blink::Length"*, %"class.blink::Length"** %254, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249)
  %256 = bitcast %"class.blink::Length"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256)
  %257 = bitcast %"class.blink::Length"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257)
  %258 = bitcast %"class.blink::Length"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258)
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %231, i64 0, i32 7
  store %"class.blink::Length"* %251, %"class.blink::Length"** %18, align 8, !alias.scope !39
  store %"class.blink::Length"* %259, %"class.blink::Length"** %19, align 8, !alias.scope !39
  store %"class.blink::Length"* %252, %"class.blink::Length"** %20, align 8, !alias.scope !39
  %260 = select i1 %236, %"class.blink::Length"** %20, %"class.blink::Length"** %18
  %261 = select i1 %235, %"class.blink::Length"** %19, %"class.blink::Length"** %260
  %262 = load %"class.blink::Length"*, %"class.blink::Length"** %261, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258)
  %263 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %3, i64 0, i32 0, i32 1, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %3, i64 0, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %109 to i64
  %268 = shl nuw i64 %267, 32
  %269 = or i64 %108, %268
  %270 = load %"struct.blink::NGLogicalOutOfFlowDimensions"*, %"struct.blink::NGLogicalOutOfFlowDimensions"** %22, align 8
  %271 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %270, i64 0, i32 1, i32 1
  %272 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %270, i64 0, i32 0, i32 2
  %273 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %270, i64 0, i32 0, i32 3
  %274 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %270, i64 0, i32 2, i32 2
  %275 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %270, i64 0, i32 2, i32 3
  call fastcc void @"_ZN5blink12_GLOBAL__N_119ComputeAbsoluteSizeIZNS_31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEE3$_2EEvNS_10LayoutUnitERKT_SO_SO_RKNS_6LengthESU_SU_SU_RKNS_11MinMaxSizesESO_NS0_18StaticPositionEdgeEbbbbNSF_ISO_EEPSO_S10_S10_S10_S10_"(i32 %176, %class.anon.1878* nonnull dereferenceable(16) %24, i32 %220, i32 %224, %"class.blink::Length"* dereferenceable(8) %239, %"class.blink::Length"* dereferenceable(8) %246, %"class.blink::Length"* dereferenceable(8) %255, %"class.blink::Length"* dereferenceable(8) %262, %"struct.blink::MinMaxSizes"* nonnull dereferenceable(8) %26, i32 %264, i32 %266, i1 zeroext %166, i1 zeroext %43, i1 zeroext %110, i64 %269, %"class.blink::LayoutUnit"* %271, %"class.blink::LayoutUnit"* %272, %"class.blink::LayoutUnit"* %273, %"class.blink::LayoutUnit"* %274, %"class.blink::LayoutUnit"* %275)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #9
  %276 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %27, align 8
  ret %"class.blink::NGLayoutResult"* %276
}

declare i64 @_ZN5blink23ComputeMinMaxBlockSizesERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEPKS9_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* dereferenceable(16), i32, %"class.blink::LayoutUnit"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i32 @"_ZZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_1clEv"(%class.anon.1877* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %3 = alloca %"class.blink::NGConstraintSpace", align 8
  %4 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %0, i64 0, i32 2
  %5 = load %class.scoped_refptr.1631*, %class.scoped_refptr.1631** %4, align 8
  %6 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %5, i64 0, i32 0
  %7 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %6, align 8
  %8 = icmp eq %"class.blink::NGLayoutResult"* %7, null
  br i1 %8, label %9, label %144

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %0, i64 0, i32 3
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %13, i64 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 102
  %18 = trunc i160 %17 to i16
  %19 = and i16 %18, 3
  %20 = lshr i160 %16, 108
  %21 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 3, i32 0
  %25 = shl nuw nsw i16 %19, 4
  %26 = trunc i160 %20 to i16
  %27 = and i16 %26, 128
  %28 = or i16 %25, %27
  %29 = zext i16 %28 to i32
  %30 = bitcast %union.anon.1634* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  %31 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 1, i32 0
  store i32 -64, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 2
  %33 = and i160 %16, 15211807202738752817960438464512
  %34 = icmp ne i160 %33, 0
  %35 = icmp eq i16 %19, 0
  %36 = xor i1 %34, %35
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %32, align 4
  %38 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %38, align 1
  %39 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %39, align 2
  %40 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 5
  store i8 1, i8* %40, align 1
  %41 = select i1 %36, i32 1024, i32 3072
  %42 = or i32 %41, %29
  store i32 %42, i32* %24, align 8
  %43 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %0, i64 0, i32 1
  %44 = load %"struct.blink::NGLogicalOutOfFlowDimensions"**, %"struct.blink::NGLogicalOutOfFlowDimensions"*** %43, align 8
  %45 = load %"struct.blink::NGLogicalOutOfFlowDimensions"*, %"struct.blink::NGLogicalOutOfFlowDimensions"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %45, i64 0, i32 1, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %0, i64 0, i32 4
  %49 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %48, align 8
  %50 = bitcast %"class.blink::NGConstraintSpace"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, -4294967296
  %53 = zext i32 %47 to i64
  %54 = or i64 %52, %53
  %55 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %2 to i64*
  store i64 %54, i64* %55, align 8
  %56 = lshr i64 %51, 32
  %57 = trunc i64 %56 to i32
  br i1 %36, label %61, label %58, !prof !15

58:                                               ; preds = %9
  store i32 %57, i32* %21, align 8
  store i32 %47, i32* %22, align 4
  %59 = icmp eq i32 %57, -64
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  store i32 -64, i32* %21, align 8
  br label %61

61:                                               ; preds = %60, %58, %9
  %62 = phi i32 [ 2097152, %9 ], [ 4194304, %58 ], [ 4194304, %60 ]
  %63 = or i32 %42, %62
  store i32 %63, i32* %24, align 8
  %64 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %49, i64 0, i32 3, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = lshr i32 %65, 26
  %67 = and i32 %66, 3
  switch i32 %67, label %68 [
    i32 0, label %69
    i32 1, label %78
    i32 2, label %72
    i32 3, label %73
  ]

68:                                               ; preds = %61
  unreachable

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %49, i64 0, i32 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  br label %78

72:                                               ; preds = %61
  br label %78

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %49, i64 0, i32 1, i32 0
  %75 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %74 to i32**
  %76 = load i32*, i32** %75, align 8
  %77 = load i32, i32* %76, align 8
  br label %78

78:                                               ; preds = %73, %72, %69, %61
  %79 = phi i32 [ %77, %73 ], [ -64, %72 ], [ %71, %69 ], [ 0, %61 ]
  %80 = lshr i32 %65, 28
  %81 = and i32 %80, 3
  switch i32 %81, label %82 [
    i32 0, label %83
    i32 1, label %92
    i32 2, label %86
    i32 3, label %87
  ]

82:                                               ; preds = %78
  unreachable

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %49, i64 0, i32 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  br label %92

86:                                               ; preds = %78
  br label %92

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %49, i64 0, i32 1, i32 0
  %89 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %88, align 8
  %90 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %89, i64 0, i32 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %78, %83, %86, %87
  %93 = phi i32 [ %91, %87 ], [ -64, %86 ], [ %85, %83 ], [ 0, %78 ]
  %94 = zext i32 %93 to i64
  %95 = shl nuw i64 %94, 32
  %96 = zext i32 %79 to i64
  %97 = or i64 %95, %96
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %2, i64 %97) #9
  %98 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %0, i64 0, i32 0
  %99 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %98, align 8
  %100 = bitcast %"class.blink::NGConstraintSpace"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #9
  %101 = bitcast %"class.blink::NGConstraintSpace"* %3 to i64*
  %102 = load i64, i64* %55, align 8, !noalias !42
  store i64 %102, i64* %101, align 8, !alias.scope !42
  %103 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 2
  %104 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 2
  %105 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.blink::NGExclusionSpace"* %104 to i64*
  %107 = load i64, i64* %106, align 8, !noalias !42
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %105, align 8, !noalias !42
  %108 = bitcast %"class.blink::NGExclusionSpace"* %103 to i64*
  store i64 %107, i64* %108, align 8, !alias.scope !42
  %109 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 3, i32 0
  %110 = load i32, i32* %24, align 8, !noalias !42
  store i32 %110, i32* %109, align 8, !alias.scope !42
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %92
  %114 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %23, i64 0, i32 0
  %115 = bitcast %union.anon.1634* %23 to i64*
  %116 = load i64, i64* %115, align 8, !noalias !42
  %117 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 1
  %118 = bitcast %union.anon.1634* %117 to i64*
  store i64 %116, i64* %118, align 8, !alias.scope !42
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %114, align 8, !noalias !42
  br label %124

119:                                              ; preds = %92
  %120 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 1
  %121 = bitcast %union.anon.1634* %23 to i64*
  %122 = bitcast %union.anon.1634* %120 to i64*
  %123 = load i64, i64* %121, align 8, !noalias !42
  store i64 %123, i64* %122, align 8, !alias.scope !42
  br label %124

124:                                              ; preds = %113, %119
  %125 = call %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* %99, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %3, %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGEarlyBreak"* null) #9
  %126 = load %class.scoped_refptr.1631*, %class.scoped_refptr.1631** %4, align 8
  %127 = ptrtoint %"class.blink::NGLayoutResult"* %125 to i64
  %128 = bitcast %class.scoped_refptr.1631* %126 to i64*
  %129 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %126, i64 0, i32 0
  %130 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %129, align 8
  store i64 %127, i64* %128, align 8
  %131 = icmp eq %"class.blink::NGLayoutResult"* %130, null
  br i1 %131, label %139, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %130, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %133) #9
  %134 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %130) #9
  %138 = bitcast %"class.blink::NGLayoutResult"* %130 to i8*
  call void @free(i8* %138) #9
  br label %139

139:                                              ; preds = %124, %132, %137
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #9
  %140 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %140) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #9
  %141 = load %class.scoped_refptr.1631*, %class.scoped_refptr.1631** %4, align 8
  %142 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %141, i64 0, i32 0
  %143 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %142, align 8
  br label %144

144:                                              ; preds = %1, %139
  %145 = phi %"class.blink::NGLayoutResult"* [ %7, %1 ], [ %143, %139 ]
  %146 = getelementptr inbounds %class.anon.1877, %class.anon.1877* %0, i64 0, i32 3
  %147 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %147, i64 0, i32 0, i32 9
  %149 = bitcast [20 x i8]* %148 to i160*
  %150 = load i160, i160* %149, align 8
  %151 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %145, i64 0, i32 3, i32 0
  %152 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %151, align 8
  %153 = and i160 %150, 15211807202738752817960438464512
  %154 = icmp eq i160 %153, 0
  %155 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %152, i64 0, i32 2, i32 1, i32 0
  %156 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %152, i64 0, i32 2, i32 0, i32 0
  %157 = select i1 %154, i32* %155, i32* %156
  %158 = load i32, i32* %157, align 4
  ret i32 %158
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZN5blink12_GLOBAL__N_119ComputeAbsoluteSizeIZNS_31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEE3$_2EEvNS_10LayoutUnitERKT_SO_SO_RKNS_6LengthESU_SU_SU_RKNS_11MinMaxSizesESO_NS0_18StaticPositionEdgeEbbbbNSF_ISO_EEPSO_S10_S10_S10_S10_"(i32, %class.anon.1878* nocapture readonly dereferenceable(16), i32, i32, %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"struct.blink::MinMaxSizes"* nocapture readonly dereferenceable(8), i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, i64, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture) unnamed_addr #0 {
  %21 = alloca i32, align 4
  %22 = trunc i64 %14 to i8
  %23 = lshr i64 %14, 32
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %26 = load i8, i8* %25, align 1
  switch i8 %26, label %48 [
    i8 0, label %50
    i8 2, label %27
  ], !prof !29

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 3
  %29 = load i8, i8* %28, align 2, !range !8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::Length"* %4 to float*
  %33 = load float, float* %32, align 4
  br label %38

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = sitofp i32 %36 to float
  br label %38

38:                                               ; preds = %34, %31
  %39 = phi float [ %33, %31 ], [ %37, %34 ]
  %40 = fmul float %39, 6.400000e+01
  %41 = fcmp ult float %40, 0xC1E0000000000000
  %42 = fcmp ugt float %40, 0x41DFFFFFE0000000
  %43 = fcmp ogt float %40, 0xC1E0000000000000
  %44 = select i1 %43, float %40, float 0xC1E0000000000000
  %45 = fptosi float %44 to i32
  %46 = select i1 %41, i32 0, i32 2147483647
  %47 = select i1 %42, i32 %46, i32 %45
  br label %50

48:                                               ; preds = %20
  %49 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %4, i32 %2) #9
  br label %50

50:                                               ; preds = %20, %48, %38
  %51 = phi i8 [ %26, %20 ], [ 1, %38 ], [ 1, %48 ]
  %52 = phi i32 [ -1431655766, %20 ], [ %47, %38 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %54 = load i8, i8* %53, align 1
  switch i8 %54, label %76 [
    i8 0, label %78
    i8 2, label %55
  ], !prof !29

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  %57 = load i8, i8* %56, align 2, !range !8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.blink::Length"* %5 to float*
  %61 = load float, float* %60, align 4
  br label %66

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = sitofp i32 %64 to float
  br label %66

66:                                               ; preds = %62, %59
  %67 = phi float [ %61, %59 ], [ %65, %62 ]
  %68 = fmul float %67, 6.400000e+01
  %69 = fcmp ult float %68, 0xC1E0000000000000
  %70 = fcmp ugt float %68, 0x41DFFFFFE0000000
  %71 = fcmp ogt float %68, 0xC1E0000000000000
  %72 = select i1 %71, float %68, float 0xC1E0000000000000
  %73 = fptosi float %72 to i32
  %74 = select i1 %69, i32 0, i32 2147483647
  %75 = select i1 %70, i32 %74, i32 %73
  br label %78

76:                                               ; preds = %50
  %77 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %5, i32 %2) #9
  br label %78

78:                                               ; preds = %50, %76, %66
  %79 = phi i8 [ %54, %50 ], [ 1, %66 ], [ 1, %76 ]
  %80 = phi i32 [ -1431655766, %50 ], [ %75, %66 ], [ %77, %76 ]
  %81 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %82 = load i8, i8* %81, align 1
  switch i8 %82, label %104 [
    i8 0, label %106
    i8 2, label %83
  ], !prof !29

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 3
  %85 = load i8, i8* %84, align 2, !range !8
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.blink::Length"* %6 to float*
  %89 = load float, float* %88, align 4
  br label %94

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = sitofp i32 %92 to float
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi float [ %89, %87 ], [ %93, %90 ]
  %96 = fmul float %95, 6.400000e+01
  %97 = fcmp ult float %96, 0xC1E0000000000000
  %98 = fcmp ugt float %96, 0x41DFFFFFE0000000
  %99 = fcmp ogt float %96, 0xC1E0000000000000
  %100 = select i1 %99, float %96, float 0xC1E0000000000000
  %101 = fptosi float %100 to i32
  %102 = select i1 %97, i32 0, i32 2147483647
  %103 = select i1 %98, i32 %102, i32 %101
  br label %106

104:                                              ; preds = %78
  %105 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %6, i32 %3) #9
  br label %106

106:                                              ; preds = %78, %104, %94
  %107 = phi i8 [ %82, %78 ], [ 1, %94 ], [ 1, %104 ]
  %108 = phi i32 [ -1431655766, %78 ], [ %103, %94 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %110 = load i8, i8* %109, align 1
  switch i8 %110, label %132 [
    i8 0, label %134
    i8 2, label %111
  ], !prof !29

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  %113 = load i8, i8* %112, align 2, !range !8
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = bitcast %"class.blink::Length"* %7 to float*
  %117 = load float, float* %116, align 4
  br label %122

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = sitofp i32 %120 to float
  br label %122

122:                                              ; preds = %118, %115
  %123 = phi float [ %117, %115 ], [ %121, %118 ]
  %124 = fmul float %123, 6.400000e+01
  %125 = fcmp ult float %124, 0xC1E0000000000000
  %126 = fcmp ugt float %124, 0x41DFFFFFE0000000
  %127 = fcmp ogt float %124, 0xC1E0000000000000
  %128 = select i1 %127, float %124, float 0xC1E0000000000000
  %129 = fptosi float %128 to i32
  %130 = select i1 %125, i32 0, i32 2147483647
  %131 = select i1 %126, i32 %130, i32 %129
  br label %134

132:                                              ; preds = %106
  %133 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %3) #9
  br label %134

134:                                              ; preds = %106, %132, %122
  %135 = phi i1 [ false, %106 ], [ true, %122 ], [ true, %132 ]
  %136 = phi i32 [ -1431655766, %106 ], [ %131, %122 ], [ %133, %132 ]
  %137 = icmp eq i8 %107, 0
  br i1 %137, label %138, label %234

138:                                              ; preds = %134
  br i1 %135, label %324, label %139

139:                                              ; preds = %138
  %140 = icmp eq i8 %22, 0
  %141 = icmp eq i8 %51, 0
  %142 = select i1 %141, i32 0, i32 %52
  %143 = icmp eq i8 %79, 0
  %144 = select i1 %143, i32 0, i32 %80
  br i1 %140, label %145, label %334

145:                                              ; preds = %139
  %146 = getelementptr inbounds %class.anon.1878, %class.anon.1878* %1, i64 0, i32 1
  %147 = load %class.anon.1877*, %class.anon.1877** %146, align 8
  %148 = tail call fastcc i32 @"_ZZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_1clEv"(%class.anon.1877* %147) #9
  %149 = icmp slt i32 %142, 0
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %148, i32 %142) #9
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %150, i32 %153, !prof !16
  %155 = icmp slt i32 %144, 0
  %156 = select i1 %155, i32 -2147483648, i32 2147483647
  %157 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %154, i32 %144) #9
  %158 = extractvalue { i32, i1 } %157, 1
  %159 = extractvalue { i32, i1 } %157, 0
  %160 = select i1 %158, i32 %156, i32 %159, !prof !16
  br i1 %11, label %161, label %188

161:                                              ; preds = %145
  switch i32 %10, label %187 [
    i32 0, label %459
    i32 1, label %162
    i32 2, label %180
  ]

162:                                              ; preds = %161
  %163 = sdiv i32 %160, 2
  %164 = sext i32 %163 to i64
  %165 = tail call i1 @llvm.is.constant.i64(i64 %164) #9
  br i1 %165, label %172, label %166

166:                                              ; preds = %162
  %167 = icmp slt i32 %160, -1
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  %169 = add nsw i64 %164, 2147483648
  %170 = icmp ult i64 %169, 4294967296
  %171 = select i1 %170, i32 %163, i32 %168, !prof !15
  br label %172

172:                                              ; preds = %166, %162
  %173 = phi i32 [ %171, %166 ], [ %163, %162 ]
  %174 = icmp sgt i32 %173, -1
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %173) #9
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !16
  br label %459

180:                                              ; preds = %161
  %181 = icmp sgt i32 %160, -1
  %182 = select i1 %181, i32 -2147483648, i32 2147483647
  %183 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %160) #9
  %184 = extractvalue { i32, i1 } %183, 1
  %185 = extractvalue { i32, i1 } %183, 0
  %186 = select i1 %184, i32 %182, i32 %185, !prof !16
  br label %459

187:                                              ; preds = %161
  unreachable

188:                                              ; preds = %145
  switch i32 %10, label %233 [
    i32 0, label %189
    i32 1, label %202
    i32 2, label %226
  ]

189:                                              ; preds = %188
  %190 = icmp sgt i32 %9, -1
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !16
  %196 = icmp sgt i32 %160, -1
  %197 = select i1 %196, i32 -2147483648, i32 2147483647
  %198 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %195, i32 %160) #9
  %199 = extractvalue { i32, i1 } %198, 1
  %200 = extractvalue { i32, i1 } %198, 0
  %201 = select i1 %199, i32 %197, i32 %200, !prof !16
  br label %430

202:                                              ; preds = %188
  %203 = icmp sgt i32 %9, -1
  %204 = select i1 %203, i32 -2147483648, i32 2147483647
  %205 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %206 = extractvalue { i32, i1 } %205, 1
  %207 = extractvalue { i32, i1 } %205, 0
  %208 = select i1 %206, i32 %204, i32 %207, !prof !16
  %209 = sdiv i32 %160, 2
  %210 = sext i32 %209 to i64
  %211 = tail call i1 @llvm.is.constant.i64(i64 %210) #9
  br i1 %211, label %218, label %212

212:                                              ; preds = %202
  %213 = icmp slt i32 %160, -1
  %214 = select i1 %213, i32 -2147483648, i32 2147483647
  %215 = add nsw i64 %210, 2147483648
  %216 = icmp ult i64 %215, 4294967296
  %217 = select i1 %216, i32 %209, i32 %214, !prof !15
  br label %218

218:                                              ; preds = %212, %202
  %219 = phi i32 [ %217, %212 ], [ %209, %202 ]
  %220 = icmp sgt i32 %219, -1
  %221 = select i1 %220, i32 -2147483648, i32 2147483647
  %222 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %208, i32 %219) #9
  %223 = extractvalue { i32, i1 } %222, 1
  %224 = extractvalue { i32, i1 } %222, 0
  %225 = select i1 %223, i32 %221, i32 %224, !prof !16
  br label %430

226:                                              ; preds = %188
  %227 = icmp sgt i32 %9, -1
  %228 = select i1 %227, i32 -2147483648, i32 2147483647
  %229 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %230 = extractvalue { i32, i1 } %229, 1
  %231 = extractvalue { i32, i1 } %229, 0
  %232 = select i1 %230, i32 %228, i32 %231, !prof !16
  br label %430

233:                                              ; preds = %188
  unreachable

234:                                              ; preds = %134
  br i1 %135, label %235, label %420

235:                                              ; preds = %234
  %236 = icmp eq i8 %22, 0
  br i1 %236, label %237, label %249

237:                                              ; preds = %235
  %238 = icmp eq i8 %51, 0
  %239 = select i1 %238, i32 0, i32 %52
  %240 = icmp eq i8 %79, 0
  %241 = select i1 %240, i32 0, i32 %80
  %242 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %108) #9
  %243 = extractvalue { i32, i1 } %242, 0
  %244 = extractvalue { i32, i1 } %242, 1
  %245 = icmp sgt i32 %108, -1
  %246 = select i1 %245, i32 -2147483648, i32 2147483647
  %247 = select i1 %244, i32 %246, i32 %243, !prof !16
  %248 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %247, i32 %136) #9
  br i1 %13, label %488, label %492

249:                                              ; preds = %235
  %250 = icmp sgt i32 %108, -1
  %251 = select i1 %250, i32 -2147483648, i32 2147483647
  %252 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %108) #9
  %253 = extractvalue { i32, i1 } %252, 1
  %254 = extractvalue { i32, i1 } %252, 0
  %255 = select i1 %253, i32 %251, i32 %254, !prof !16
  %256 = icmp sgt i32 %136, -1
  %257 = select i1 %256, i32 -2147483648, i32 2147483647
  %258 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %255, i32 %136) #9
  %259 = extractvalue { i32, i1 } %258, 1
  %260 = extractvalue { i32, i1 } %258, 0
  %261 = select i1 %259, i32 %257, i32 %260, !prof !16
  %262 = icmp sgt i32 %24, -1
  %263 = select i1 %262, i32 -2147483648, i32 2147483647
  %264 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %261, i32 %24) #9
  %265 = extractvalue { i32, i1 } %264, 1
  %266 = extractvalue { i32, i1 } %264, 0
  %267 = select i1 %265, i32 %263, i32 %266, !prof !16
  %268 = icmp eq i8 %51, 0
  %269 = icmp ne i8 %79, 0
  br i1 %268, label %270, label %296

270:                                              ; preds = %249
  br i1 %269, label %289, label %271

271:                                              ; preds = %270
  %272 = sdiv i32 %267, 2
  %273 = sext i32 %272 to i64
  %274 = tail call i1 @llvm.is.constant.i64(i64 %273) #9
  br i1 %274, label %281, label %275

275:                                              ; preds = %271
  %276 = icmp slt i32 %267, -1
  %277 = select i1 %276, i32 -2147483648, i32 2147483647
  %278 = add nsw i64 %273, 2147483648
  %279 = icmp ult i64 %278, 4294967296
  %280 = select i1 %279, i32 %272, i32 %277, !prof !15
  br label %281

281:                                              ; preds = %271, %275
  %282 = phi i32 [ %280, %275 ], [ %272, %271 ]
  %283 = icmp sgt i32 %282, -1
  %284 = select i1 %283, i32 -2147483648, i32 2147483647
  %285 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %267, i32 %282) #9
  %286 = extractvalue { i32, i1 } %285, 1
  %287 = extractvalue { i32, i1 } %285, 0
  %288 = select i1 %286, i32 %284, i32 %287, !prof !16
  br label %510

289:                                              ; preds = %270
  %290 = icmp sgt i32 %80, -1
  %291 = select i1 %290, i32 -2147483648, i32 2147483647
  %292 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %267, i32 %80) #9
  %293 = extractvalue { i32, i1 } %292, 1
  %294 = extractvalue { i32, i1 } %292, 0
  %295 = select i1 %293, i32 %291, i32 %294, !prof !16
  br label %510

296:                                              ; preds = %249
  %297 = icmp sgt i32 %52, -1
  %298 = select i1 %297, i32 -2147483648, i32 2147483647
  %299 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %267, i32 %52) #9
  %300 = extractvalue { i32, i1 } %299, 1
  %301 = extractvalue { i32, i1 } %299, 0
  %302 = select i1 %300, i32 %298, i32 %301
  br i1 %269, label %303, label %510

303:                                              ; preds = %296
  %304 = icmp sgt i32 %80, -1
  %305 = select i1 %304, i32 -2147483648, i32 2147483647
  %306 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %302, i32 %80) #9
  %307 = extractvalue { i32, i1 } %306, 1
  %308 = extractvalue { i32, i1 } %306, 0
  %309 = select i1 %307, i32 %305, i32 %308, !prof !16
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %510, label %311

311:                                              ; preds = %303
  %312 = icmp slt i32 %309, 0
  %313 = select i1 %312, i32 -2147483648, i32 2147483647
  br i1 %11, label %314, label %319

314:                                              ; preds = %311
  %315 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %309) #9
  %316 = extractvalue { i32, i1 } %315, 1
  %317 = extractvalue { i32, i1 } %315, 0
  %318 = select i1 %316, i32 %313, i32 %317, !prof !16
  br label %510

319:                                              ; preds = %311
  %320 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %309) #9
  %321 = extractvalue { i32, i1 } %320, 1
  %322 = extractvalue { i32, i1 } %320, 0
  %323 = select i1 %321, i32 %313, i32 %322, !prof !16
  br label %510

324:                                              ; preds = %138
  %325 = icmp eq i8 %51, 0
  %326 = select i1 %325, i32 0, i32 %52
  %327 = icmp eq i8 %79, 0
  %328 = select i1 %327, i32 0, i32 %80
  %329 = icmp eq i8 %22, 0
  br i1 %329, label %330, label %430

330:                                              ; preds = %324
  %331 = getelementptr inbounds %class.anon.1878, %class.anon.1878* %1, i64 0, i32 1
  %332 = load %class.anon.1877*, %class.anon.1877** %331, align 8
  %333 = tail call fastcc i32 @"_ZZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_1clEv"(%class.anon.1877* %332) #9
  br label %430

334:                                              ; preds = %139
  %335 = icmp slt i32 %142, 0
  %336 = select i1 %335, i32 -2147483648, i32 2147483647
  %337 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %142) #9
  %338 = extractvalue { i32, i1 } %337, 1
  %339 = extractvalue { i32, i1 } %337, 0
  %340 = select i1 %338, i32 %336, i32 %339, !prof !16
  %341 = icmp slt i32 %144, 0
  %342 = select i1 %341, i32 -2147483648, i32 2147483647
  %343 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %340, i32 %144) #9
  %344 = extractvalue { i32, i1 } %343, 1
  %345 = extractvalue { i32, i1 } %343, 0
  %346 = select i1 %344, i32 %342, i32 %345, !prof !16
  br i1 %11, label %347, label %374

347:                                              ; preds = %334
  switch i32 %10, label %373 [
    i32 0, label %459
    i32 1, label %348
    i32 2, label %366
  ]

348:                                              ; preds = %347
  %349 = sdiv i32 %346, 2
  %350 = sext i32 %349 to i64
  %351 = tail call i1 @llvm.is.constant.i64(i64 %350) #9
  br i1 %351, label %358, label %352

352:                                              ; preds = %348
  %353 = icmp slt i32 %346, -1
  %354 = select i1 %353, i32 -2147483648, i32 2147483647
  %355 = add nsw i64 %350, 2147483648
  %356 = icmp ult i64 %355, 4294967296
  %357 = select i1 %356, i32 %349, i32 %354, !prof !15
  br label %358

358:                                              ; preds = %352, %348
  %359 = phi i32 [ %357, %352 ], [ %349, %348 ]
  %360 = icmp sgt i32 %359, -1
  %361 = select i1 %360, i32 -2147483648, i32 2147483647
  %362 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %359) #9
  %363 = extractvalue { i32, i1 } %362, 1
  %364 = extractvalue { i32, i1 } %362, 0
  %365 = select i1 %363, i32 %361, i32 %364, !prof !16
  br label %459

366:                                              ; preds = %347
  %367 = icmp sgt i32 %346, -1
  %368 = select i1 %367, i32 -2147483648, i32 2147483647
  %369 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %346) #9
  %370 = extractvalue { i32, i1 } %369, 1
  %371 = extractvalue { i32, i1 } %369, 0
  %372 = select i1 %370, i32 %368, i32 %371, !prof !16
  br label %459

373:                                              ; preds = %347
  unreachable

374:                                              ; preds = %334
  switch i32 %10, label %419 [
    i32 0, label %375
    i32 1, label %388
    i32 2, label %412
  ]

375:                                              ; preds = %374
  %376 = icmp sgt i32 %9, -1
  %377 = select i1 %376, i32 -2147483648, i32 2147483647
  %378 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %379 = extractvalue { i32, i1 } %378, 1
  %380 = extractvalue { i32, i1 } %378, 0
  %381 = select i1 %379, i32 %377, i32 %380, !prof !16
  %382 = icmp sgt i32 %346, -1
  %383 = select i1 %382, i32 -2147483648, i32 2147483647
  %384 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %381, i32 %346) #9
  %385 = extractvalue { i32, i1 } %384, 1
  %386 = extractvalue { i32, i1 } %384, 0
  %387 = select i1 %385, i32 %383, i32 %386, !prof !16
  br label %430

388:                                              ; preds = %374
  %389 = icmp sgt i32 %9, -1
  %390 = select i1 %389, i32 -2147483648, i32 2147483647
  %391 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %392 = extractvalue { i32, i1 } %391, 1
  %393 = extractvalue { i32, i1 } %391, 0
  %394 = select i1 %392, i32 %390, i32 %393, !prof !16
  %395 = sdiv i32 %346, 2
  %396 = sext i32 %395 to i64
  %397 = tail call i1 @llvm.is.constant.i64(i64 %396) #9
  br i1 %397, label %404, label %398

398:                                              ; preds = %388
  %399 = icmp slt i32 %346, -1
  %400 = select i1 %399, i32 -2147483648, i32 2147483647
  %401 = add nsw i64 %396, 2147483648
  %402 = icmp ult i64 %401, 4294967296
  %403 = select i1 %402, i32 %395, i32 %400, !prof !15
  br label %404

404:                                              ; preds = %398, %388
  %405 = phi i32 [ %403, %398 ], [ %395, %388 ]
  %406 = icmp sgt i32 %405, -1
  %407 = select i1 %406, i32 -2147483648, i32 2147483647
  %408 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %394, i32 %405) #9
  %409 = extractvalue { i32, i1 } %408, 1
  %410 = extractvalue { i32, i1 } %408, 0
  %411 = select i1 %409, i32 %407, i32 %410, !prof !16
  br label %430

412:                                              ; preds = %374
  %413 = icmp sgt i32 %9, -1
  %414 = select i1 %413, i32 -2147483648, i32 2147483647
  %415 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %9) #9
  %416 = extractvalue { i32, i1 } %415, 1
  %417 = extractvalue { i32, i1 } %415, 0
  %418 = select i1 %416, i32 %414, i32 %417, !prof !16
  br label %430

419:                                              ; preds = %374
  unreachable

420:                                              ; preds = %234
  %421 = icmp eq i8 %51, 0
  %422 = select i1 %421, i32 0, i32 %52
  %423 = icmp eq i8 %79, 0
  %424 = select i1 %423, i32 0, i32 %80
  %425 = icmp eq i8 %22, 0
  br i1 %425, label %426, label %459

426:                                              ; preds = %420
  %427 = getelementptr inbounds %class.anon.1878, %class.anon.1878* %1, i64 0, i32 1
  %428 = load %class.anon.1877*, %class.anon.1877** %427, align 8
  %429 = tail call fastcc i32 @"_ZZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_1clEv"(%class.anon.1877* %428) #9
  br label %459

430:                                              ; preds = %324, %189, %218, %226, %330, %375, %404, %412
  %431 = phi i32 [ %333, %330 ], [ %24, %412 ], [ %24, %404 ], [ %24, %375 ], [ %148, %226 ], [ %148, %218 ], [ %148, %189 ], [ %24, %324 ]
  %432 = phi i32 [ %328, %330 ], [ %144, %412 ], [ %144, %404 ], [ %144, %375 ], [ %144, %226 ], [ %144, %218 ], [ %144, %189 ], [ %328, %324 ]
  %433 = phi i32 [ %326, %330 ], [ %142, %412 ], [ %142, %404 ], [ %142, %375 ], [ %142, %226 ], [ %142, %218 ], [ %142, %189 ], [ %326, %324 ]
  %434 = phi i32 [ %136, %330 ], [ %418, %412 ], [ %411, %404 ], [ %387, %375 ], [ %232, %226 ], [ %225, %218 ], [ %201, %189 ], [ %136, %324 ]
  %435 = icmp sgt i32 %431, -1
  %436 = select i1 %435, i32 -2147483648, i32 2147483647
  %437 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %431) #9
  %438 = extractvalue { i32, i1 } %437, 1
  %439 = extractvalue { i32, i1 } %437, 0
  %440 = select i1 %438, i32 %436, i32 %439, !prof !16
  %441 = icmp sgt i32 %434, -1
  %442 = select i1 %441, i32 -2147483648, i32 2147483647
  %443 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %440, i32 %434) #9
  %444 = extractvalue { i32, i1 } %443, 1
  %445 = extractvalue { i32, i1 } %443, 0
  %446 = select i1 %444, i32 %442, i32 %445, !prof !16
  %447 = icmp sgt i32 %433, -1
  %448 = select i1 %447, i32 -2147483648, i32 2147483647
  %449 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %446, i32 %433) #9
  %450 = extractvalue { i32, i1 } %449, 1
  %451 = extractvalue { i32, i1 } %449, 0
  %452 = select i1 %450, i32 %448, i32 %451, !prof !16
  %453 = icmp sgt i32 %432, -1
  %454 = select i1 %453, i32 -2147483648, i32 2147483647
  %455 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %452, i32 %432) #9
  %456 = extractvalue { i32, i1 } %455, 1
  %457 = extractvalue { i32, i1 } %455, 0
  %458 = select i1 %456, i32 %454, i32 %457, !prof !16
  br label %510

459:                                              ; preds = %420, %161, %172, %180, %347, %358, %366, %426
  %460 = phi i32 [ %429, %426 ], [ %24, %366 ], [ %24, %358 ], [ %24, %347 ], [ %148, %180 ], [ %148, %172 ], [ %148, %161 ], [ %24, %420 ]
  %461 = phi i32 [ %424, %426 ], [ %144, %366 ], [ %144, %358 ], [ %144, %347 ], [ %144, %180 ], [ %144, %172 ], [ %144, %161 ], [ %424, %420 ]
  %462 = phi i32 [ %422, %426 ], [ %142, %366 ], [ %142, %358 ], [ %142, %347 ], [ %142, %180 ], [ %142, %172 ], [ %142, %161 ], [ %422, %420 ]
  %463 = phi i32 [ %108, %426 ], [ %372, %366 ], [ %365, %358 ], [ %9, %347 ], [ %186, %180 ], [ %179, %172 ], [ %9, %161 ], [ %108, %420 ]
  %464 = icmp sgt i32 %460, -1
  %465 = select i1 %464, i32 -2147483648, i32 2147483647
  %466 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %460) #9
  %467 = extractvalue { i32, i1 } %466, 1
  %468 = extractvalue { i32, i1 } %466, 0
  %469 = select i1 %467, i32 %465, i32 %468, !prof !16
  %470 = icmp sgt i32 %463, -1
  %471 = select i1 %470, i32 -2147483648, i32 2147483647
  %472 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %469, i32 %463) #9
  %473 = extractvalue { i32, i1 } %472, 1
  %474 = extractvalue { i32, i1 } %472, 0
  %475 = select i1 %473, i32 %471, i32 %474, !prof !16
  %476 = icmp sgt i32 %462, -1
  %477 = select i1 %476, i32 -2147483648, i32 2147483647
  %478 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %475, i32 %462) #9
  %479 = extractvalue { i32, i1 } %478, 1
  %480 = extractvalue { i32, i1 } %478, 0
  %481 = select i1 %479, i32 %477, i32 %480, !prof !16
  %482 = icmp sgt i32 %461, -1
  %483 = select i1 %482, i32 -2147483648, i32 2147483647
  %484 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %481, i32 %461) #9
  %485 = extractvalue { i32, i1 } %484, 1
  %486 = extractvalue { i32, i1 } %484, 0
  %487 = select i1 %485, i32 %483, i32 %486, !prof !16
  br label %510

488:                                              ; preds = %237
  %489 = getelementptr inbounds %class.anon.1878, %class.anon.1878* %1, i64 0, i32 1
  %490 = load %class.anon.1877*, %class.anon.1877** %489, align 8
  %491 = tail call fastcc i32 @"_ZZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_1clEv"(%class.anon.1877* %490) #9
  br label %510

492:                                              ; preds = %237
  %493 = extractvalue { i32, i1 } %248, 1
  %494 = icmp sgt i32 %136, -1
  %495 = select i1 %494, i32 -2147483648, i32 2147483647
  %496 = extractvalue { i32, i1 } %248, 0
  %497 = select i1 %493, i32 %495, i32 %496, !prof !16
  %498 = icmp sgt i32 %239, -1
  %499 = select i1 %498, i32 -2147483648, i32 2147483647
  %500 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %497, i32 %239) #9
  %501 = extractvalue { i32, i1 } %500, 1
  %502 = extractvalue { i32, i1 } %500, 0
  %503 = select i1 %501, i32 %499, i32 %502, !prof !16
  %504 = icmp sgt i32 %241, -1
  %505 = select i1 %504, i32 -2147483648, i32 2147483647
  %506 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %503, i32 %241) #9
  %507 = extractvalue { i32, i1 } %506, 1
  %508 = extractvalue { i32, i1 } %506, 0
  %509 = select i1 %507, i32 %505, i32 %508, !prof !16
  br label %510

510:                                              ; preds = %303, %296, %319, %314, %281, %289, %430, %459, %492, %488
  %511 = phi i32 [ %460, %459 ], [ %431, %430 ], [ %509, %492 ], [ %491, %488 ], [ %24, %303 ], [ %24, %319 ], [ %24, %314 ], [ %24, %281 ], [ %24, %289 ], [ %24, %296 ]
  %512 = phi i32 [ %461, %459 ], [ %432, %430 ], [ %241, %492 ], [ %241, %488 ], [ %80, %303 ], [ %80, %319 ], [ %80, %314 ], [ %288, %281 ], [ %80, %289 ], [ %302, %296 ]
  %513 = phi i32 [ %462, %459 ], [ %433, %430 ], [ %239, %492 ], [ %239, %488 ], [ %52, %303 ], [ %52, %319 ], [ %52, %314 ], [ %282, %281 ], [ %295, %289 ], [ %52, %296 ]
  %514 = phi i32 [ %487, %459 ], [ %434, %430 ], [ %136, %492 ], [ %136, %488 ], [ %136, %303 ], [ %136, %319 ], [ %318, %314 ], [ %136, %281 ], [ %136, %289 ], [ %136, %296 ]
  %515 = phi i32 [ %463, %459 ], [ %458, %430 ], [ %108, %492 ], [ %108, %488 ], [ %108, %303 ], [ %323, %319 ], [ %108, %314 ], [ %108, %281 ], [ %108, %289 ], [ %108, %296 ]
  %516 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %516)
  store i32 %511, i32* %21, align 4
  %517 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %8, i64 0, i32 0
  %518 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %8, i64 0, i32 1
  %519 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %518, i64 0, i32 0
  %520 = load i32, i32* %519, align 4
  %521 = icmp slt i32 %520, %511
  %522 = bitcast i32* %21 to %"class.blink::LayoutUnit"*
  %523 = select i1 %521, %"class.blink::LayoutUnit"* %518, %"class.blink::LayoutUnit"* %522
  %524 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %8, i64 0, i32 0, i32 0
  %525 = load i32, i32* %524, align 4
  %526 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %523, i64 0, i32 0
  %527 = load i32, i32* %526, align 4
  %528 = icmp slt i32 %525, %527
  %529 = select i1 %528, %"class.blink::LayoutUnit"* %523, %"class.blink::LayoutUnit"* %517
  %530 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %529, i64 0, i32 0
  %531 = load i32, i32* %530, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %516)
  %532 = icmp eq i32 %511, %531
  br i1 %532, label %537, label %533

533:                                              ; preds = %510
  %534 = zext i32 %531 to i64
  %535 = shl nuw i64 %534, 32
  %536 = or i64 %535, 1
  tail call fastcc void @"_ZN5blink12_GLOBAL__N_119ComputeAbsoluteSizeIZNS_31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEE3$_2EEvNS_10LayoutUnitERKT_SO_SO_RKNS_6LengthESU_SU_SU_RKNS_11MinMaxSizesESO_NS0_18StaticPositionEdgeEbbbbNSF_ISO_EEPSO_S10_S10_S10_S10_"(i32 %0, %class.anon.1878* dereferenceable(16) %1, i32 %2, i32 %3, %"class.blink::Length"* dereferenceable(8) %4, %"class.blink::Length"* dereferenceable(8) %5, %"class.blink::Length"* dereferenceable(8) %6, %"class.blink::Length"* dereferenceable(8) %7, %"struct.blink::MinMaxSizes"* dereferenceable(8) %8, i32 %9, i32 %10, i1 zeroext %11, i1 zeroext %12, i1 zeroext %13, i64 %536, %"class.blink::LayoutUnit"* %15, %"class.blink::LayoutUnit"* %16, %"class.blink::LayoutUnit"* %17, %"class.blink::LayoutUnit"* %18, %"class.blink::LayoutUnit"* %19)
  br label %557

537:                                              ; preds = %510
  %538 = icmp slt i32 %511, %0
  %539 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %15, i64 0, i32 0
  %540 = select i1 %538, i32 %0, i32 %511
  store i32 %540, i32* %539, align 4
  %541 = icmp slt i32 %513, 0
  %542 = select i1 %541, i32 -2147483648, i32 2147483647
  %543 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %515, i32 %513) #9
  %544 = extractvalue { i32, i1 } %543, 1
  %545 = extractvalue { i32, i1 } %543, 0
  %546 = select i1 %544, i32 %542, i32 %545, !prof !16
  %547 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  store i32 %546, i32* %547, align 4
  %548 = icmp slt i32 %512, 0
  %549 = select i1 %548, i32 -2147483648, i32 2147483647
  %550 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %514, i32 %512) #9
  %551 = extractvalue { i32, i1 } %550, 1
  %552 = extractvalue { i32, i1 } %550, 0
  %553 = select i1 %551, i32 %549, i32 %552, !prof !16
  %554 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %17, i64 0, i32 0
  store i32 %553, i32* %554, align 4
  %555 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %18, i64 0, i32 0
  store i32 %513, i32* %555, align 4
  %556 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %19, i64 0, i32 0
  store i32 %512, i32* %556, align 4
  br label %557

557:                                              ; preds = %537, %533
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26AdjustOffsetForSplitInlineERKNS_11NGBlockNodeEPKNS_20NGBoxFragmentBuilderERNS_13LogicalOffsetE(%"class.blink::NGBlockNode"* nocapture readonly dereferenceable(16), %"class.blink::NGBoxFragmentBuilder"*, %"struct.blink::LogicalOffset"* nocapture dereferenceable(8)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %5, i64 0, i32 0, i32 0
  %7 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #9
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 16777216
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %63, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = lshr i160 %18, 32
  %20 = trunc i160 %19 to i32
  %21 = and i32 %20, 31
  switch i32 %21, label %63 [
    i32 1, label %22
    i32 14, label %22
  ]

22:                                               ; preds = %13, %13
  %23 = and i160 %18, 2113929216
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %25, label %63

25:                                               ; preds = %22
  %26 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*)***
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 23
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %7) #9
  br i1 %30, label %31, label %63

31:                                               ; preds = %25
  %32 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %26, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, i64 25
  %34 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %7) #9
  br i1 %35, label %63, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %7, i32 20) #9
  br i1 %41, label %63, label %42

42:                                               ; preds = %36
  %43 = tail call i64 @_ZNK5blink20NGBoxFragmentBuilder14GetChildOffsetEPKNS_12LayoutObjectE(%"class.blink::NGBoxFragmentBuilder"* %1, %"class.blink::LayoutObject"* %7) #9
  %44 = trunc i64 %43 to i32
  %45 = lshr i64 %43, 32
  %46 = trunc i64 %45 to i32
  %47 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %2, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %44, -1
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %44) #9
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !16
  store i32 %54, i32* %47, align 4
  %55 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %2, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %46, -1
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %56, i32 %46) #9
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = select i1 %60, i32 %58, i32 %61, !prof !16
  store i32 %62, i32* %55, align 4
  br label %129

63:                                               ; preds = %36, %13, %3, %22, %25, %31
  %64 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*)***
  %65 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %65, i64 26
  %67 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* %7) #9
  br i1 %68, label %69, label %129

69:                                               ; preds = %63
  %70 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #9
  %71 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %70, i64 0, i32 0, i32 0, i32 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = and i96 %74, 16777216
  %76 = icmp eq i96 %75, 0
  br i1 %76, label %129, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %70, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 9
  %81 = bitcast [20 x i8]* %80 to i160*
  %82 = load i160, i160* %81, align 8
  %83 = lshr i160 %82, 32
  %84 = trunc i160 %83 to i32
  %85 = and i32 %84, 31
  switch i32 %85, label %129 [
    i32 1, label %86
    i32 14, label %86
  ]

86:                                               ; preds = %77, %77
  %87 = and i160 %82, 2113929216
  %88 = icmp eq i160 %87, 0
  br i1 %88, label %89, label %129

89:                                               ; preds = %86
  %90 = bitcast %"class.blink::LayoutBlock"* %70 to i1 (%"class.blink::LayoutObject"*)***
  %91 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %91, i64 23
  %93 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.blink::LayoutObject"* %71) #9
  br i1 %94, label %95, label %129

95:                                               ; preds = %89
  %96 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %90, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %96, i64 25
  %98 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::LayoutObject"* %71) #9
  br i1 %99, label %129, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.blink::LayoutBlock"* %70 to i1 (%"class.blink::LayoutObject"*, i32)***
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %101, align 8
  %103 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, i64 92
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, align 8
  %105 = tail call zeroext i1 %104(%"class.blink::LayoutObject"* %71, i32 20) #9
  br i1 %105, label %129, label %106

106:                                              ; preds = %100
  %107 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #9
  %108 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = tail call i64 @_ZNK5blink20NGBoxFragmentBuilder14GetChildOffsetEPKNS_12LayoutObjectE(%"class.blink::NGBoxFragmentBuilder"* %1, %"class.blink::LayoutObject"* %108) #9
  %110 = trunc i64 %109 to i32
  %111 = lshr i64 %109, 32
  %112 = trunc i64 %111 to i32
  %113 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %2, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %110, -1
  %116 = select i1 %115, i32 -2147483648, i32 2147483647
  %117 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %114, i32 %110) #9
  %118 = extractvalue { i32, i1 } %117, 1
  %119 = extractvalue { i32, i1 } %117, 0
  %120 = select i1 %118, i32 %116, i32 %119, !prof !16
  store i32 %120, i32* %113, align 4
  %121 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %2, i64 0, i32 1, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp sgt i32 %112, -1
  %124 = select i1 %123, i32 -2147483648, i32 2147483647
  %125 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %122, i32 %112) #9
  %126 = extractvalue { i32, i1 } %125, 1
  %127 = extractvalue { i32, i1 } %125, 0
  %128 = select i1 %126, i32 %124, i32 %127, !prof !16
  store i32 %128, i32* %121, align 4
  br label %129

129:                                              ; preds = %100, %77, %69, %86, %89, %95, %63, %106, %42
  ret void
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare i64 @_ZNK5blink20NGBoxFragmentBuilder14GetChildOffsetEPKNS_12LayoutObjectE(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink9LayoutBox28ShouldBeConsideredAsReplacedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

declare void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #2

declare %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockBreakToken"*, %"class.blink::NGEarlyBreak"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %8 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %7, align 8
  %9 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %8) #9
  %11 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %8 to i8*
  tail call void @free(i8* %11) #9
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %13, align 8
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %13, align 8
  %15 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %14, null
  br i1 %15, label %76, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %14, i64 0, i32 6
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.1751", %"class.std::__1::unique_ptr.1751"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %18, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %18, align 8
  %20 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::unique_ptr.1751"* %17 to %"struct.std::__1::default_delete.1774"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"* %22, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %19) #9
  br label %23

23:                                               ; preds = %21, %16
  %24 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %14, i64 0, i32 0, i32 0
  %25 = load %"class.base::RefCountedData.1735"*, %"class.base::RefCountedData.1735"** %24, align 8
  %26 = icmp eq %"class.base::RefCountedData.1735"* %25, null
  br i1 %26, label %74, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %74

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %33, align 8
  %35 = icmp eq %class.scoped_refptr.1740* %34, null
  br i1 %35, label %72, label %36, !prof !15

36:                                               ; preds = %31
  %37 = bitcast %class.scoped_refptr.1740* %34 to i8*
  %38 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %70, label %41, !prof !16

41:                                               ; preds = %36
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %34, i64 %42
  br label %44

44:                                               ; preds = %64, %41
  %45 = phi %class.scoped_refptr.1740* [ %65, %64 ], [ %34, %41 ]
  %46 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 0, i32 0
  %47 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %46, align 8
  %48 = icmp eq %"struct.blink::NGExclusion"* %47, null
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #9
  %51 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %55, i64 8
  %57 = bitcast %"class.base::RefCounted.1742"* %56 to %"struct.blink::NGExclusionShapeData"**
  %58 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %57, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusionShapeData"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = bitcast %"struct.blink::NGExclusionShapeData"* %58 to i8*
  tail call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %60, %54
  %63 = bitcast %"struct.blink::NGExclusion"* %47 to i8*
  tail call void @free(i8* %63) #9
  br label %64

64:                                               ; preds = %62, %49, %44
  %65 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 1
  %66 = icmp eq %class.scoped_refptr.1740* %65, %43
  br i1 %66, label %67, label %44

67:                                               ; preds = %64
  store i32 0, i32* %38, align 4
  %68 = bitcast %"class.WTF::Vector.1737"* %32 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %36
  %71 = phi i8* [ %69, %67 ], [ %37, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #9
  br label %72

72:                                               ; preds = %31, %70
  %73 = bitcast %"class.base::RefCountedData.1735"* %25 to i8*
  tail call void @_ZdlPv(i8* %73) #10
  br label %74

74:                                               ; preds = %72, %27, %23
  %75 = bitcast %"class.blink::NGExclusionSpaceInternal"* %14 to i8*
  tail call void @free(i8* %75) #9
  br label %76

76:                                               ; preds = %12, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %128 [
    i32 5, label %118
    i32 4, label %62
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %8 = bitcast %union.anon.1635* %7 to %"class.blink::NGTableConstraintSpaceData"**
  %9 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %8, align 8
  %10 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %9, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #9
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %128

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  %19 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %18, null
  %20 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !15

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !16

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #9
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  %30 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %29, null
  %31 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %29 to i8*
  br i1 %30, label %38, label %32, !prof !15

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !16

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #9
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %40, null
  %42 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !15

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !16

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #9
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %50, align 8
  %52 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51, null
  %53 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !15

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !16

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #9
  br label %60

60:                                               ; preds = %49, %59
  %61 = bitcast %"class.blink::NGTableConstraintSpaceData"* %9 to i8*
  tail call void @free(i8* %61) #9
  br label %128

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %64 = bitcast %union.anon.1635* %63 to %"class.blink::NGTableConstraintSpaceData"**
  %65 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %64, align 8
  %66 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #9
  %69 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  %75 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %74, null
  %76 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !15

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !16

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #9
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  br label %83

83:                                               ; preds = %82, %72
  %84 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %85, null
  %87 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %85 to i8*
  br i1 %86, label %94, label %88, !prof !15

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !16

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #9
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  br label %94

94:                                               ; preds = %93, %83
  %95 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  %97 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %96, null
  %98 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %96 to i8*
  br i1 %97, label %105, label %99, !prof !15

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !16

103:                                              ; preds = %99
  store i32 0, i32* %100, align 4
  br label %104

104:                                              ; preds = %103, %99
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #9
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  br label %105

105:                                              ; preds = %104, %94
  %106 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %106, align 8
  %108 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107, null
  %109 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107 to i8*
  br i1 %108, label %116, label %110, !prof !15

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !16

114:                                              ; preds = %110
  store i32 0, i32* %111, align 4
  br label %115

115:                                              ; preds = %114, %110
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #9
  br label %116

116:                                              ; preds = %105, %115
  %117 = bitcast %"class.blink::NGTableConstraintSpaceData"* %65 to i8*
  tail call void @free(i8* %117) #9
  br label %128

118:                                              ; preds = %1
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %119, align 8
  %121 = icmp eq %"class.blink::SerializedScriptValue"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %120) #9
  %127 = bitcast %"class.blink::SerializedScriptValue"* %120 to i8*
  tail call void @free(i8* %127) #9
  br label %128

128:                                              ; preds = %126, %122, %118, %116, %67, %62, %60, %11, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !16

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !16

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !15

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #9
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !16

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !15

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #9
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #9
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #9
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #9
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !15

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #9
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !16

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #9
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #9
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #9
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !16

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !15

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #9
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !16

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !15

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #9
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !15

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #9
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #9
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1740* %4, null
  br i1 %5, label %42, label %6, !prof !15

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1740* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !16

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1740* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #9
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.1742"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #9
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1740* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.1737"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #9
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1740* %45, null
  br i1 %46, label %83, label %47, !prof !15

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1740* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !16

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1740* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #9
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.1742"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #10
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #9
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1740* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.1737"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #9
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc { i64, i8 } @"_ZZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsEENK3$_0clENS_15MinMaxSizesTypeE"(%class.anon* nocapture readonly, i32) unnamed_addr #3 align 2 {
  %3 = alloca %"class.absl::optional.1867", align 4
  %4 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %5 = alloca %"class.blink::NGConstraintSpace", align 8
  %6 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = load i8, i8* %9, align 1, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %29

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %14 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %13, align 8
  %15 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %16 = bitcast %"class.blink::ComputedStyle"** %15 to %"class.blink::ComputedStyleBase"**
  %17 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %17, i64 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = lshr i160 %20, 102
  %22 = trunc i160 %21 to i8
  %23 = and i8 %22, 3
  %24 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %25 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %24, align 8
  %26 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %14, i8 zeroext %23, i32 %1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %25, i64 0) #9
  %27 = extractvalue { i64, i8 } %26, 0
  %28 = extractvalue { i64, i8 } %26, 1
  br label %187

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 5
  %31 = load %"struct.blink::NGLogicalOutOfFlowDimensions"**, %"struct.blink::NGLogicalOutOfFlowDimensions"*** %30, align 8
  %32 = load %"struct.blink::NGLogicalOutOfFlowDimensions"*, %"struct.blink::NGLogicalOutOfFlowDimensions"** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %32, i64 0, i32 1, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -64
  br i1 %35, label %36, label %61

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %38 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %37, align 8
  %39 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %40 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %39, align 8
  %41 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 6
  %42 = load %"struct.blink::NGBoxStrut"*, %"struct.blink::NGBoxStrut"** %41, align 8
  %43 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 7
  %44 = load %"struct.blink::NGLogicalStaticPosition"*, %"struct.blink::NGLogicalStaticPosition"** %43, align 8
  %45 = getelementptr inbounds %"class.absl::optional.1867", %"class.absl::optional.1867"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %45) #9
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 8
  %47 = bitcast %"class.blink::WritingDirectionMode"** %46 to i16**
  %48 = load i16*, i16** %47, align 8
  %49 = load i16, i16* %48, align 1
  %50 = call %"class.blink::NGLayoutResult"* @_ZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsE(%"class.blink::NGBlockNode"* dereferenceable(16) %38, %"class.blink::NGConstraintSpace"* dereferenceable(32) %40, %"struct.blink::NGBoxStrut"* dereferenceable(16) %42, %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16) %44, %"class.absl::optional.1867"* nonnull dereferenceable(12) %3, i16 %49, %"struct.blink::NGLogicalOutOfFlowDimensions"* %32)
  %51 = icmp eq %"class.blink::NGLayoutResult"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #9
  %54 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %50) #9
  %58 = bitcast %"class.blink::NGLayoutResult"* %50 to i8*
  tail call void @free(i8* %58) #9
  br label %59

59:                                               ; preds = %36, %52, %57
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %45) #9
  %60 = load %"struct.blink::NGLogicalOutOfFlowDimensions"**, %"struct.blink::NGLogicalOutOfFlowDimensions"*** %30, align 8
  br label %61

61:                                               ; preds = %59, %29
  %62 = phi %"struct.blink::NGLogicalOutOfFlowDimensions"** [ %60, %59 ], [ %31, %29 ]
  %63 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 32, i1 false)
  %64 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %65 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %66 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %66, i64 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8
  %70 = lshr i160 %69, 102
  %71 = trunc i160 %70 to i16
  %72 = and i16 %71, 3
  %73 = lshr i160 %69, 108
  %74 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %74, align 8
  %75 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %75, align 4
  %76 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 3, i32 0
  %78 = shl nuw nsw i16 %72, 4
  %79 = trunc i160 %73 to i16
  %80 = and i16 %79, 128
  %81 = or i16 %78, %80
  %82 = zext i16 %81 to i32
  %83 = bitcast %union.anon.1634* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false) #9
  %84 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 1, i32 0
  store i32 -64, i32* %84, align 8
  %85 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 2
  %86 = and i160 %69, 15211807202738752817960438464512
  %87 = icmp ne i160 %86, 0
  %88 = icmp eq i16 %72, 0
  %89 = xor i1 %87, %88
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %85, align 4
  %91 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %91, align 1
  %92 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %92, align 2
  %93 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 5
  store i8 1, i8* %93, align 1
  %94 = select i1 %89, i32 1024, i32 3072
  %95 = or i32 %94, %82
  store i32 %95, i32* %77, align 8
  %96 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %97 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %96, align 8
  %98 = bitcast %"class.blink::NGConstraintSpace"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = load %"struct.blink::NGLogicalOutOfFlowDimensions"*, %"struct.blink::NGLogicalOutOfFlowDimensions"** %62, align 8
  %101 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %100, i64 0, i32 1, i32 1, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = shl nuw i64 %103, 32
  %105 = and i64 %99, 4294967295
  %106 = or i64 %104, %105
  %107 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %4 to i64*
  store i64 %106, i64* %107, align 8
  br i1 %89, label %112, label %108, !prof !15

108:                                              ; preds = %61
  %109 = trunc i64 %99 to i32
  store i32 %102, i32* %74, align 8
  store i32 %109, i32* %75, align 4
  %110 = icmp eq i32 %102, -64
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  store i32 -64, i32* %74, align 8
  br label %112

112:                                              ; preds = %111, %108, %61
  %113 = phi i32 [ 4194304, %61 ], [ 2097152, %108 ], [ 2097152, %111 ]
  %114 = or i32 %95, %113
  store i32 %114, i32* %77, align 8
  %115 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %97, i64 0, i32 3, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = lshr i32 %116, 26
  %118 = and i32 %117, 3
  switch i32 %118, label %119 [
    i32 0, label %120
    i32 1, label %129
    i32 2, label %123
    i32 3, label %124
  ]

119:                                              ; preds = %112
  unreachable

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %97, i64 0, i32 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  br label %129

123:                                              ; preds = %112
  br label %129

124:                                              ; preds = %112
  %125 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %97, i64 0, i32 1, i32 0
  %126 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %125 to i32**
  %127 = load i32*, i32** %126, align 8
  %128 = load i32, i32* %127, align 8
  br label %129

129:                                              ; preds = %124, %123, %120, %112
  %130 = phi i32 [ %128, %124 ], [ -64, %123 ], [ %122, %120 ], [ 0, %112 ]
  %131 = lshr i32 %116, 28
  %132 = and i32 %131, 3
  switch i32 %132, label %133 [
    i32 0, label %134
    i32 1, label %143
    i32 2, label %137
    i32 3, label %138
  ]

133:                                              ; preds = %129
  unreachable

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %97, i64 0, i32 0, i32 1, i32 0
  %136 = load i32, i32* %135, align 4
  br label %143

137:                                              ; preds = %129
  br label %143

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %97, i64 0, i32 1, i32 0
  %140 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %139, align 8
  %141 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %140, i64 0, i32 0, i32 1, i32 0
  %142 = load i32, i32* %141, align 4
  br label %143

143:                                              ; preds = %129, %134, %137, %138
  %144 = phi i32 [ %142, %138 ], [ -64, %137 ], [ %136, %134 ], [ 0, %129 ]
  %145 = zext i32 %144 to i64
  %146 = shl nuw i64 %145, 32
  %147 = zext i32 %130 to i64
  %148 = or i64 %146, %147
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %4, i64 %148) #9
  %149 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %150 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %149, align 8
  %151 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %65, align 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %151, i64 0, i32 9
  %153 = bitcast [20 x i8]* %152 to i160*
  %154 = load i160, i160* %153, align 8
  %155 = lshr i160 %154, 102
  %156 = trunc i160 %155 to i8
  %157 = and i8 %156, 3
  %158 = bitcast %"class.blink::NGConstraintSpace"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %158) #9
  %159 = bitcast %"class.blink::NGConstraintSpace"* %5 to i64*
  %160 = load i64, i64* %107, align 8, !noalias !45
  store i64 %160, i64* %159, align 8, !alias.scope !45
  %161 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 2
  %162 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0, i32 2
  %163 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %162, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = bitcast %"class.blink::NGExclusionSpace"* %162 to i64*
  %165 = load i64, i64* %164, align 8, !noalias !45
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %163, align 8, !noalias !45
  %166 = bitcast %"class.blink::NGExclusionSpace"* %161 to i64*
  store i64 %165, i64* %166, align 8, !alias.scope !45
  %167 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 3, i32 0
  %168 = load i32, i32* %77, align 8, !noalias !45
  store i32 %168, i32* %167, align 8, !alias.scope !45
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %177, label %171

171:                                              ; preds = %143
  %172 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %76, i64 0, i32 0
  %173 = bitcast %union.anon.1634* %76 to i64*
  %174 = load i64, i64* %173, align 8, !noalias !45
  %175 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 1
  %176 = bitcast %union.anon.1634* %175 to i64*
  store i64 %174, i64* %176, align 8, !alias.scope !45
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %172, align 8, !noalias !45
  br label %182

177:                                              ; preds = %143
  %178 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %5, i64 0, i32 1
  %179 = bitcast %union.anon.1634* %76 to i64*
  %180 = bitcast %union.anon.1634* %178 to i64*
  %181 = load i64, i64* %179, align 8, !noalias !45
  store i64 %181, i64* %180, align 8, !alias.scope !45
  br label %182

182:                                              ; preds = %171, %177
  %183 = call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %150, i8 zeroext %157, i32 %1, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %5, i64 0) #9
  %184 = extractvalue { i64, i8 } %183, 0
  %185 = extractvalue { i64, i8 } %183, 1
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %158) #9
  %186 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %4, i64 0, i32 0
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %186) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #9
  br label %187

187:                                              ; preds = %182, %12
  %188 = phi i64 [ %184, %182 ], [ %27, %12 ]
  %189 = phi i8 [ %185, %182 ], [ %28, %12 ]
  %190 = insertvalue { i64, i8 } undef, i64 %188, 0
  %191 = insertvalue { i64, i8 } %190, i8 %189, 1
  ret { i64, i8 } %191
}

declare i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"class.absl::optional.2190"* dereferenceable(12), %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #2

declare { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"*, i8 zeroext, i32, %"class.blink::NGConstraintSpace"* dereferenceable(32), i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink23BlockLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthEPKNS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::Length"* dereferenceable(8), %"class.blink::LayoutUnit"*) local_unnamed_addr #2

declare i64 @_ZN5blink39ComputeMinMaxInlineSizesFromAspectRatioERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink24InlineLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #8

declare i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"class.blink::Length"* dereferenceable(8), i32, i32, %"class.blink::LayoutUnit"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink6Length12MinIntrinsicEv: argument 0"}
!14 = distinct !{!14, !"_ZN5blink6Length12MinIntrinsicEv"}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!"branch_weights", i32 1, i32 2000}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!29 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!32 = distinct !{!32, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!35 = distinct !{!35, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!38 = distinct !{!38, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!41 = distinct !{!41, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!44 = distinct !{!44, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!47 = distinct !{!47, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
