; ModuleID = '../../third_party/blink/renderer/platform/exported/web_crypto_key.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_crypto_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.0" }
%"class.blink::WebPrivatePtr.0" = type { i8* }
%"class.blink::WebCryptoKeyHandle" = type { i32 (...)** }
%"class.blink::WebCryptoKeyAlgorithm" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%class.scoped_refptr = type { %"class.blink::WebCryptoKeyPrivate"* }
%"class.blink::WebCryptoKeyPrivate" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr", i32, i8, [3 x i8], %"class.blink::WebCryptoKeyAlgorithm", i32, [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebCryptoKeyHandle"* }
%"class.blink::PtrStorageImpl" = type { %"class.blink::WebCryptoKeyPrivate"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink14PtrStorageImplINS_19WebCryptoKeyPrivateELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS1_E = comdat any

$_ZN5blink14PtrStorageImplINS_19WebCryptoKeyPrivateELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignERKS5_ = comdat any

@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12WebCryptoKey6CreateEPNS_18WebCryptoKeyHandleENS_16WebCryptoKeyTypeEbRKNS_21WebCryptoKeyAlgorithmEi(%"class.blink::WebCryptoKey"* noalias sret, %"class.blink::WebCryptoKeyHandle"*, i32, i1 zeroext, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.scoped_refptr, align 8
  %8 = getelementptr inbounds %"class.blink::WebCryptoKey", %"class.blink::WebCryptoKey"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %8, align 8
  %9 = bitcast %class.scoped_refptr* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = tail call noalias i8* @malloc(i64 40) #7
  %11 = ptrtoint %"class.blink::WebCryptoKeyHandle"* %1 to i64
  %12 = zext i1 %3 to i8
  %13 = bitcast i8* %10 to i32*
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 20
  store i8 %12, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %10, i64 24
  %20 = bitcast i8* %19 to %"class.blink::WebCryptoKeyAlgorithm"*
  %21 = bitcast i8* %19 to i8**
  store i8* null, i8** %21, align 8
  tail call void @_ZN5blink21WebCryptoKeyAlgorithm6AssignERKS0_(%"class.blink::WebCryptoKeyAlgorithm"* %20, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8) %4) #7
  %22 = getelementptr inbounds i8, i8* %10, i64 32
  %23 = bitcast i8* %22 to i32*
  store i32 %5, i32* %23, align 8
  %24 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %25 = bitcast %class.scoped_refptr* %7 to i8**
  store i8* %10, i8** %25, align 8
  %26 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::PtrStorageImpl"*
  call void @_ZN5blink14PtrStorageImplINS_19WebCryptoKeyPrivateELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS1_E(%"class.blink::PtrStorageImpl"* %26, %class.scoped_refptr* nonnull dereferenceable(8) %7) #7
  %27 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %24, align 8
  %28 = icmp eq %"class.blink::WebCryptoKeyPrivate"* %27, null
  br i1 %28, label %48, label %29

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %27, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 6
  %36 = bitcast %"class.base::RefCountedThreadSafe"* %35 to %"class.blink::WebCryptoKeyAlgorithm"*
  call void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"* %36) #7
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 2
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %37 to %"class.blink::WebCryptoKeyHandle"**
  %39 = load %"class.blink::WebCryptoKeyHandle"*, %"class.blink::WebCryptoKeyHandle"** %38, align 8
  store %"class.blink::WebCryptoKeyHandle"* null, %"class.blink::WebCryptoKeyHandle"** %38, align 8
  %40 = icmp eq %"class.blink::WebCryptoKeyHandle"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::WebCryptoKeyHandle"* %39 to void (%"class.blink::WebCryptoKeyHandle"*)***
  %43 = load void (%"class.blink::WebCryptoKeyHandle"*)**, void (%"class.blink::WebCryptoKeyHandle"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %43, i64 1
  %45 = load void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %44, align 8
  call void %45(%"class.blink::WebCryptoKeyHandle"* nonnull %39) #7
  br label %46

46:                                               ; preds = %41, %34
  %47 = bitcast %"class.blink::WebCryptoKeyPrivate"* %27 to i8*
  call void @free(i8* %47) #7
  br label %48

48:                                               ; preds = %6, %29, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12WebCryptoKey10CreateNullEv(%"class.blink::WebCryptoKey"* noalias nocapture sret) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoKey", %"class.blink::WebCryptoKey"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::WebCryptoKeyHandle"* @_ZNK5blink12WebCryptoKey6HandleEv(%"class.blink::WebCryptoKey"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::WebCryptoKeyPrivate"**
  %3 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::WebCryptoKeyHandle"*, %"class.blink::WebCryptoKeyHandle"** %4, align 8
  ret %"class.blink::WebCryptoKeyHandle"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink12WebCryptoKey7GetTypeEv(%"class.blink::WebCryptoKey"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::WebCryptoKeyPrivate"**
  %3 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12WebCryptoKey11ExtractableEv(%"class.blink::WebCryptoKey"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::WebCryptoKeyPrivate"**
  %3 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %3, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::WebCryptoKeyPrivate"**
  %3 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %3, i64 0, i32 6
  ret %"class.blink::WebCryptoKeyAlgorithm"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink12WebCryptoKey6UsagesEv(%"class.blink::WebCryptoKey"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::WebCryptoKeyPrivate"**
  %3 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %3, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12WebCryptoKey6IsNullEv(%"class.blink::WebCryptoKey"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoKey", %"class.blink::WebCryptoKey"* %0, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12WebCryptoKey14KeyUsageAllowsENS_17WebCryptoKeyUsageE(%"class.blink::WebCryptoKey"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::WebCryptoKeyPrivate"**
  %4 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %4, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, %1
  %8 = icmp ne i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12WebCryptoKey6AssignERKS0_(%"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::PtrStorageImpl"*
  %4 = bitcast %"class.blink::WebCryptoKey"* %1 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_19WebCryptoKeyPrivateELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignERKS5_(%"class.blink::PtrStorageImpl"* %3, %"class.blink::PtrStorageImpl"* dereferenceable(8) %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebCryptoKey"* %0 to %"class.blink::WebCryptoKeyPrivate"**
  %3 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %2, align 8
  %4 = icmp eq %"class.blink::WebCryptoKeyPrivate"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 6
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.blink::WebCryptoKeyAlgorithm"*
  tail call void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"* %12) #7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.blink::WebCryptoKeyHandle"**
  %15 = load %"class.blink::WebCryptoKeyHandle"*, %"class.blink::WebCryptoKeyHandle"** %14, align 8
  store %"class.blink::WebCryptoKeyHandle"* null, %"class.blink::WebCryptoKeyHandle"** %14, align 8
  %16 = icmp eq %"class.blink::WebCryptoKeyHandle"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::WebCryptoKeyHandle"* %15 to void (%"class.blink::WebCryptoKeyHandle"*)***
  %19 = load void (%"class.blink::WebCryptoKeyHandle"*)**, void (%"class.blink::WebCryptoKeyHandle"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %19, i64 1
  %21 = load void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %20, align 8
  tail call void %21(%"class.blink::WebCryptoKeyHandle"* nonnull %15) #7
  br label %22

22:                                               ; preds = %17, %10
  %23 = bitcast %"class.blink::WebCryptoKeyPrivate"* %3 to i8*
  tail call void @free(i8* %23) #7
  br label %24

24:                                               ; preds = %1, %5, %22
  store %"class.blink::WebCryptoKeyPrivate"* null, %"class.blink::WebCryptoKeyPrivate"** %2, align 8
  ret void
}

declare void @_ZN5blink21WebCryptoKeyAlgorithm6AssignERKS0_(%"class.blink::WebCryptoKeyAlgorithm"*, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_19WebCryptoKeyPrivateELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS1_E(%"class.blink::PtrStorageImpl"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %5 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %4, align 8
  %6 = icmp eq %"class.blink::WebCryptoKeyPrivate"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 6
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.blink::WebCryptoKeyAlgorithm"*
  tail call void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"* %14) #7
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 2
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.blink::WebCryptoKeyHandle"**
  %17 = load %"class.blink::WebCryptoKeyHandle"*, %"class.blink::WebCryptoKeyHandle"** %16, align 8
  store %"class.blink::WebCryptoKeyHandle"* null, %"class.blink::WebCryptoKeyHandle"** %16, align 8
  %18 = icmp eq %"class.blink::WebCryptoKeyHandle"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::WebCryptoKeyHandle"* %17 to void (%"class.blink::WebCryptoKeyHandle"*)***
  %21 = load void (%"class.blink::WebCryptoKeyHandle"*)**, void (%"class.blink::WebCryptoKeyHandle"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %21, i64 1
  %23 = load void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %22, align 8
  tail call void %23(%"class.blink::WebCryptoKeyHandle"* nonnull %17) #7
  br label %24

24:                                               ; preds = %19, %12
  %25 = bitcast %"class.blink::WebCryptoKeyPrivate"* %5 to i8*
  tail call void @free(i8* %25) #7
  br label %26

26:                                               ; preds = %2, %7, %24
  store %"class.blink::WebCryptoKeyPrivate"* null, %"class.blink::WebCryptoKeyPrivate"** %4, align 8
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %28 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %27, align 8
  %29 = icmp eq %"class.blink::WebCryptoKeyPrivate"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #7
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  br label %37

37:                                               ; preds = %26, %34, %30
  %38 = bitcast %class.scoped_refptr* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PtrStorageImpl"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %27, align 8
  store i64 0, i64* %38, align 8
  %42 = icmp eq %"class.blink::WebCryptoKeyPrivate"* %41, null
  br i1 %42, label %62, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %41, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %62

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 6
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %49 to %"class.blink::WebCryptoKeyAlgorithm"*
  call void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"* %50) #7
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 2
  %52 = bitcast %"class.base::RefCountedThreadSafe"* %51 to %"class.blink::WebCryptoKeyHandle"**
  %53 = load %"class.blink::WebCryptoKeyHandle"*, %"class.blink::WebCryptoKeyHandle"** %52, align 8
  store %"class.blink::WebCryptoKeyHandle"* null, %"class.blink::WebCryptoKeyHandle"** %52, align 8
  %54 = icmp eq %"class.blink::WebCryptoKeyHandle"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.blink::WebCryptoKeyHandle"* %53 to void (%"class.blink::WebCryptoKeyHandle"*)***
  %57 = load void (%"class.blink::WebCryptoKeyHandle"*)**, void (%"class.blink::WebCryptoKeyHandle"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %57, i64 1
  %59 = load void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %58, align 8
  call void %59(%"class.blink::WebCryptoKeyHandle"* nonnull %53) #7
  br label %60

60:                                               ; preds = %55, %48
  %61 = bitcast %"class.blink::WebCryptoKeyPrivate"* %41 to i8*
  call void @free(i8* %61) #7
  br label %62

62:                                               ; preds = %37, %43, %60
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_19WebCryptoKeyPrivateELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignERKS5_(%"class.blink::PtrStorageImpl"*, %"class.blink::PtrStorageImpl"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %1, i64 0, i32 0
  %5 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %7 = load %"class.blink::WebCryptoKeyPrivate"*, %"class.blink::WebCryptoKeyPrivate"** %6, align 8
  %8 = icmp eq %"class.blink::WebCryptoKeyPrivate"* %7, %5
  br i1 %8, label %40, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.blink::WebCryptoKeyPrivate"* %7, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %30

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 6
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %17 to %"class.blink::WebCryptoKeyAlgorithm"*
  tail call void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"* %18) #7
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 2
  %20 = bitcast %"class.base::RefCountedThreadSafe"* %19 to %"class.blink::WebCryptoKeyHandle"**
  %21 = load %"class.blink::WebCryptoKeyHandle"*, %"class.blink::WebCryptoKeyHandle"** %20, align 8
  store %"class.blink::WebCryptoKeyHandle"* null, %"class.blink::WebCryptoKeyHandle"** %20, align 8
  %22 = icmp eq %"class.blink::WebCryptoKeyHandle"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::WebCryptoKeyHandle"* %21 to void (%"class.blink::WebCryptoKeyHandle"*)***
  %25 = load void (%"class.blink::WebCryptoKeyHandle"*)**, void (%"class.blink::WebCryptoKeyHandle"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %25, i64 1
  %27 = load void (%"class.blink::WebCryptoKeyHandle"*)*, void (%"class.blink::WebCryptoKeyHandle"*)** %26, align 8
  tail call void %27(%"class.blink::WebCryptoKeyHandle"* nonnull %21) #7
  br label %28

28:                                               ; preds = %23, %16
  %29 = bitcast %"class.blink::WebCryptoKeyPrivate"* %7 to i8*
  tail call void @free(i8* %29) #7
  br label %30

30:                                               ; preds = %9, %11, %28
  store %"class.blink::WebCryptoKeyPrivate"* null, %"class.blink::WebCryptoKeyPrivate"** %6, align 8
  %31 = icmp eq %"class.blink::WebCryptoKeyPrivate"* %5, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::WebCryptoKeyPrivate", %"class.blink::WebCryptoKeyPrivate"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #7
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7
  br label %39

39:                                               ; preds = %36, %32, %30
  store %"class.blink::WebCryptoKeyPrivate"* %5, %"class.blink::WebCryptoKeyPrivate"** %6, align 8
  br label %40

40:                                               ; preds = %2, %39
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
