; ModuleID = '../../third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc'
source_filename = "../../third_party/abseil-cpp/absl/strings/internal/charconv_parse.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.absl::strings_internal::ParsedFloat" = type { i64, i32, i32, i32, i8*, i8*, i8* }

$_ZN4absl16strings_internal10ParseFloatILi10EEENS0_11ParsedFloatEPKcS4_NS_12chars_formatE = comdat any

$_ZN4absl16strings_internal10ParseFloatILi16EEENS0_11ParsedFloatEPKcS4_NS_12chars_formatE = comdat any

@.str = private unnamed_addr constant [3 x i8] c"nf\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"inity\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"an\00", align 1
@_ZN4absl12_GLOBAL__N_111kAsciiToIntE = internal unnamed_addr constant [256 x i8] calign 16

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4absl16strings_internal10ParseFloatILi10EEENS0_11ParsedFloatEPKcS4_NS_12chars_formatE(%"struct.absl::strings_internal::ParsedFloat"* noalias sret, i8*, i8*, i32) local_unnamed_addr #0 comdat {
  %5 = bitcast %"struct.absl::strings_internal::ParsedFloat"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  %6 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #3
  %7 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #3
  %8 = icmp eq i8* %1, %2
  br i1 %8, label %297, label %9

9:                                                ; preds = %4
  %10 = tail call fastcc zeroext i1 @_ZN4absl12_GLOBAL__N_118ParseInfinityOrNanEPKcS2_PNS_16strings_internal11ParsedFloatE(i8* %1, i8* %2, %"struct.absl::strings_internal::ParsedFloat"* %0)
  br i1 %10, label %297, label %11

11:                                               ; preds = %9
  %12 = icmp ult i8* %1, %2
  br i1 %12, label %13, label %20

13:                                               ; preds = %11, %17
  %14 = phi i8* [ %18, %17 ], [ %1, %11 ]
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 48
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %14, i64 1
  %19 = icmp eq i8* %18, %2
  br i1 %19, label %30, label %13

20:                                               ; preds = %13, %11
  %21 = phi i8* [ %1, %11 ], [ %14, %13 ]
  %22 = icmp eq i8* %21, %2
  br i1 %22, label %30, label %23

23:                                               ; preds = %20, %27
  %24 = phi i8* [ %28, %27 ], [ %21, %20 ]
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 48
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds i8, i8* %24, i64 1
  %29 = icmp eq i8* %28, %2
  br i1 %29, label %30, label %23

30:                                               ; preds = %17, %27, %23, %20
  %31 = phi i8* [ %21, %20 ], [ %21, %23 ], [ %21, %27 ], [ %2, %17 ]
  %32 = phi i8* [ %2, %20 ], [ %2, %27 ], [ %24, %23 ], [ %2, %17 ]
  %33 = ptrtoint i8* %2 to i64
  %34 = ptrtoint i8* %32 to i64
  %35 = sub i64 %33, %34
  %36 = icmp sgt i64 %35, 19
  %37 = getelementptr inbounds i8, i8* %32, i64 19
  %38 = select i1 %36, i8* %37, i8* %2
  %39 = icmp ult i8* %32, %38
  br i1 %39, label %40, label %54

40:                                               ; preds = %30, %46
  %41 = phi i8* [ %52, %46 ], [ %32, %30 ]
  %42 = phi i64 [ %51, %46 ], [ 0, %30 ]
  %43 = load i8, i8* %41, align 1
  %44 = add i8 %43, -48
  %45 = icmp ult i8 %44, 10
  br i1 %45, label %46, label %54

46:                                               ; preds = %40
  %47 = sext i8 %43 to i64
  %48 = add nuw nsw i64 %47, 4294967248
  %49 = and i64 %48, 4294967295
  %50 = mul i64 %42, 10
  %51 = add i64 %49, %50
  %52 = getelementptr inbounds i8, i8* %41, i64 1
  %53 = icmp eq i8* %52, %38
  br i1 %53, label %54, label %40

54:                                               ; preds = %46, %40, %30
  %55 = phi i64 [ 0, %30 ], [ %42, %40 ], [ %51, %46 ]
  %56 = phi i8* [ %32, %30 ], [ %41, %40 ], [ %38, %46 ]
  %57 = icmp ult i8* %56, %2
  br i1 %57, label %58, label %73

58:                                               ; preds = %54, %64
  %59 = phi i1 [ %66, %64 ], [ false, %54 ]
  %60 = phi i8* [ %67, %64 ], [ %56, %54 ]
  %61 = load i8, i8* %60, align 1
  %62 = add i8 %61, -48
  %63 = icmp ult i8 %62, 10
  br i1 %63, label %64, label %69

64:                                               ; preds = %58
  %65 = icmp ne i8 %61, 48
  %66 = or i1 %59, %65
  %67 = getelementptr inbounds i8, i8* %60, i64 1
  %68 = icmp eq i8* %67, %2
  br i1 %68, label %69, label %58

69:                                               ; preds = %64, %58
  %70 = phi i8* [ %60, %58 ], [ %2, %64 ]
  %71 = phi i1 [ %59, %58 ], [ %66, %64 ]
  %72 = zext i1 %71 to i8
  br label %73

73:                                               ; preds = %69, %54
  %74 = phi i8 [ 0, %54 ], [ %72, %69 ]
  %75 = phi i8* [ %56, %54 ], [ %70, %69 ]
  %76 = ptrtoint i8* %75 to i64
  %77 = ptrtoint i8* %31 to i64
  %78 = sub i64 %76, %77
  %79 = trunc i64 %78 to i32
  %80 = shl i64 %78, 32
  %81 = ashr exact i64 %80, 32
  %82 = getelementptr inbounds i8, i8* %31, i64 %81
  %83 = icmp sgt i32 %79, 49999999
  br i1 %83, label %297, label %84

84:                                               ; preds = %73
  %85 = icmp sgt i32 %79, 19
  %86 = add nsw i32 %79, -19
  %87 = sub nsw i32 19, %79
  %88 = select i1 %85, i32 %86, i32 0
  %89 = select i1 %85, i32 0, i32 %87
  %90 = icmp ult i8* %82, %2
  br i1 %90, label %91, label %184

91:                                               ; preds = %84
  %92 = load i8, i8* %82, align 1
  %93 = icmp eq i8 %92, 46
  br i1 %93, label %94, label %184

94:                                               ; preds = %91
  %95 = getelementptr inbounds i8, i8* %82, i64 1
  %96 = icmp eq i64 %55, 0
  br i1 %96, label %97, label %124

97:                                               ; preds = %94
  %98 = icmp ult i8* %95, %2
  br i1 %98, label %99, label %106

99:                                               ; preds = %97, %103
  %100 = phi i8* [ %104, %103 ], [ %95, %97 ]
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, 48
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = getelementptr inbounds i8, i8* %100, i64 1
  %105 = icmp eq i8* %104, %2
  br i1 %105, label %106, label %99

106:                                              ; preds = %99, %103, %97
  %107 = phi i8* [ %95, %97 ], [ %2, %103 ], [ %100, %99 ]
  %108 = ptrtoint i8* %107 to i64
  %109 = ptrtoint i8* %95 to i64
  %110 = sub i64 %108, %109
  %111 = trunc i64 %110 to i32
  %112 = icmp sgt i32 %111, 49999999
  %113 = select i1 %112, i32 0, i32 %111
  %114 = sub nsw i32 %88, %113
  br i1 %112, label %297, label %115

115:                                              ; preds = %106
  %116 = icmp eq i8* %107, %2
  br i1 %116, label %124, label %117

117:                                              ; preds = %115, %121
  %118 = phi i8* [ %122, %121 ], [ %107, %115 ]
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 48
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = getelementptr inbounds i8, i8* %118, i64 1
  %123 = icmp eq i8* %122, %2
  br i1 %123, label %124, label %117

124:                                              ; preds = %121, %117, %94, %115
  %125 = phi i8* [ %2, %115 ], [ %95, %94 ], [ %107, %117 ], [ %107, %121 ]
  %126 = phi i32 [ %114, %115 ], [ %88, %94 ], [ %114, %117 ], [ %114, %121 ]
  %127 = phi i8* [ %2, %115 ], [ %95, %94 ], [ %2, %121 ], [ %118, %117 ]
  %128 = phi i64 [ 0, %115 ], [ %55, %94 ], [ 0, %117 ], [ 0, %121 ]
  %129 = ptrtoint i8* %127 to i64
  %130 = sub i64 %33, %129
  %131 = sext i32 %89 to i64
  %132 = icmp sgt i64 %130, %131
  %133 = getelementptr inbounds i8, i8* %127, i64 %131
  %134 = select i1 %132, i8* %133, i8* %2
  %135 = icmp ult i8* %127, %134
  br i1 %135, label %136, label %150

136:                                              ; preds = %124, %142
  %137 = phi i8* [ %148, %142 ], [ %127, %124 ]
  %138 = phi i64 [ %147, %142 ], [ %128, %124 ]
  %139 = load i8, i8* %137, align 1
  %140 = add i8 %139, -48
  %141 = icmp ult i8 %140, 10
  br i1 %141, label %142, label %150

142:                                              ; preds = %136
  %143 = sext i8 %139 to i64
  %144 = add nuw nsw i64 %143, 4294967248
  %145 = and i64 %144, 4294967295
  %146 = mul i64 %138, 10
  %147 = add i64 %145, %146
  %148 = getelementptr inbounds i8, i8* %137, i64 1
  %149 = icmp eq i8* %148, %134
  br i1 %149, label %150, label %136

150:                                              ; preds = %142, %136, %124
  %151 = phi i64 [ %128, %124 ], [ %138, %136 ], [ %147, %142 ]
  %152 = phi i8* [ %127, %124 ], [ %137, %136 ], [ %134, %142 ]
  %153 = icmp ult i8* %152, %2
  br i1 %153, label %154, label %169

154:                                              ; preds = %150, %160
  %155 = phi i1 [ %162, %160 ], [ false, %150 ]
  %156 = phi i8* [ %163, %160 ], [ %152, %150 ]
  %157 = load i8, i8* %156, align 1
  %158 = add i8 %157, -48
  %159 = icmp ult i8 %158, 10
  br i1 %159, label %160, label %165

160:                                              ; preds = %154
  %161 = icmp ne i8 %157, 48
  %162 = or i1 %155, %161
  %163 = getelementptr inbounds i8, i8* %156, i64 1
  %164 = icmp eq i8* %163, %2
  br i1 %164, label %165, label %154

165:                                              ; preds = %160, %154
  %166 = phi i8* [ %156, %154 ], [ %2, %160 ]
  %167 = phi i1 [ %155, %154 ], [ %162, %160 ]
  %168 = select i1 %167, i8 1, i8 %74
  br label %169

169:                                              ; preds = %165, %150
  %170 = phi i8 [ %74, %150 ], [ %168, %165 ]
  %171 = phi i8* [ %152, %150 ], [ %166, %165 ]
  %172 = ptrtoint i8* %171 to i64
  %173 = ptrtoint i8* %125 to i64
  %174 = sub i64 %172, %173
  %175 = trunc i64 %174 to i32
  %176 = icmp sgt i32 %175, 49999999
  br i1 %176, label %297, label %177

177:                                              ; preds = %169
  %178 = shl i64 %174, 32
  %179 = ashr exact i64 %178, 32
  %180 = getelementptr inbounds i8, i8* %125, i64 %179
  %181 = icmp slt i32 %89, %175
  %182 = select i1 %181, i32 %89, i32 %175
  %183 = sub nsw i32 %126, %182
  br label %184

184:                                              ; preds = %177, %91, %84
  %185 = phi i64 [ %55, %91 ], [ %55, %84 ], [ %151, %177 ]
  %186 = phi i8 [ %74, %91 ], [ %74, %84 ], [ %170, %177 ]
  %187 = phi i32 [ %88, %91 ], [ %88, %84 ], [ %183, %177 ]
  %188 = phi i8* [ %82, %91 ], [ %82, %84 ], [ %180, %177 ]
  %189 = icmp eq i8* %188, %1
  br i1 %189, label %297, label %190

190:                                              ; preds = %184
  %191 = ptrtoint i8* %188 to i64
  %192 = ptrtoint i8* %1 to i64
  %193 = sub i64 %191, %192
  %194 = icmp eq i64 %193, 1
  br i1 %194, label %195, label %198

195:                                              ; preds = %190
  %196 = load i8, i8* %1, align 1
  %197 = icmp eq i8 %196, 46
  br i1 %197, label %297, label %198

198:                                              ; preds = %195, %190
  %199 = icmp eq i8 %186, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %198
  store i8* %1, i8** %6, align 8
  %201 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 5
  store i8* %188, i8** %201, align 8
  br label %202

202:                                              ; preds = %198, %200
  %203 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 0
  store i64 %185, i64* %203, align 8
  %204 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 2
  store i32 0, i32* %204, align 4
  %205 = and i32 %3, 3
  %206 = icmp ne i32 %205, 2
  %207 = icmp ult i8* %188, %2
  %208 = and i1 %206, %207
  br i1 %208, label %209, label %285

209:                                              ; preds = %202
  %210 = load i8, i8* %188, align 1
  %211 = or i8 %210, 32
  %212 = icmp eq i8 %211, 101
  br i1 %212, label %213, label %285

213:                                              ; preds = %209
  %214 = getelementptr inbounds i8, i8* %188, i64 1
  %215 = icmp ult i8* %214, %2
  br i1 %215, label %216, label %225

216:                                              ; preds = %213
  %217 = load i8, i8* %214, align 1
  %218 = icmp eq i8 %217, 45
  br i1 %218, label %219, label %221

219:                                              ; preds = %216
  %220 = getelementptr inbounds i8, i8* %188, i64 2
  br label %225

221:                                              ; preds = %216
  %222 = icmp eq i8 %217, 43
  %223 = getelementptr inbounds i8, i8* %188, i64 2
  %224 = select i1 %222, i8* %223, i8* %214
  br label %225

225:                                              ; preds = %221, %213, %219
  %226 = phi i1 [ false, %219 ], [ true, %221 ], [ true, %213 ]
  %227 = phi i8* [ %220, %219 ], [ %224, %221 ], [ %214, %213 ]
  %228 = icmp eq i8* %227, %2
  br i1 %228, label %238, label %229

229:                                              ; preds = %225, %235
  %230 = phi i8* [ %236, %235 ], [ %227, %225 ]
  %231 = load i8, i8* %230, align 1
  %232 = icmp eq i8 %231, 48
  br i1 %232, label %235, label %233

233:                                              ; preds = %229
  %234 = ptrtoint i8* %230 to i64
  br label %238

235:                                              ; preds = %229
  %236 = getelementptr inbounds i8, i8* %230, i64 1
  %237 = icmp eq i8* %236, %2
  br i1 %237, label %238, label %229

238:                                              ; preds = %235, %233, %225
  %239 = phi i64 [ %33, %225 ], [ %234, %233 ], [ %33, %235 ]
  %240 = phi i8* [ %2, %225 ], [ %230, %233 ], [ %2, %235 ]
  %241 = sub i64 %33, %239
  %242 = icmp sgt i64 %241, 9
  %243 = getelementptr inbounds i8, i8* %240, i64 9
  %244 = select i1 %242, i8* %243, i8* %2
  %245 = icmp ult i8* %240, %244
  br i1 %245, label %246, label %259

246:                                              ; preds = %238, %252
  %247 = phi i8* [ %257, %252 ], [ %240, %238 ]
  %248 = phi i32 [ %256, %252 ], [ 0, %238 ]
  %249 = load i8, i8* %247, align 1
  %250 = add i8 %249, -48
  %251 = icmp ult i8 %250, 10
  br i1 %251, label %252, label %259

252:                                              ; preds = %246
  %253 = sext i8 %249 to i32
  %254 = mul nsw i32 %248, 10
  %255 = add i32 %254, -48
  %256 = add i32 %255, %253
  %257 = getelementptr inbounds i8, i8* %247, i64 1
  %258 = icmp eq i8* %257, %244
  br i1 %258, label %259, label %246

259:                                              ; preds = %252, %246, %238
  %260 = phi i32 [ 0, %238 ], [ %248, %246 ], [ %256, %252 ]
  %261 = phi i8* [ %240, %238 ], [ %247, %246 ], [ %244, %252 ]
  %262 = icmp ult i8* %261, %2
  br i1 %262, label %263, label %271

263:                                              ; preds = %259, %268
  %264 = phi i8* [ %269, %268 ], [ %261, %259 ]
  %265 = load i8, i8* %264, align 1
  %266 = add i8 %265, -48
  %267 = icmp ult i8 %266, 10
  br i1 %267, label %268, label %271

268:                                              ; preds = %263
  %269 = getelementptr inbounds i8, i8* %264, i64 1
  %270 = icmp eq i8* %269, %2
  br i1 %270, label %271, label %263

271:                                              ; preds = %263, %268, %259
  %272 = phi i8* [ %261, %259 ], [ %2, %268 ], [ %264, %263 ]
  store i32 %260, i32* %204, align 4
  %273 = ptrtoint i8* %272 to i64
  %274 = ptrtoint i8* %227 to i64
  %275 = sub i64 %273, %274
  %276 = trunc i64 %275 to i32
  %277 = shl i64 %275, 32
  %278 = ashr exact i64 %277, 32
  %279 = getelementptr inbounds i8, i8* %227, i64 %278
  %280 = icmp eq i32 %276, 0
  %281 = or i1 %226, %280
  br i1 %281, label %284, label %282

282:                                              ; preds = %271
  %283 = sub nsw i32 0, %260
  store i32 %283, i32* %204, align 4
  br label %288

284:                                              ; preds = %271
  br i1 %280, label %285, label %288

285:                                              ; preds = %284, %202, %209
  %286 = phi i32 [ %260, %284 ], [ 0, %209 ], [ 0, %202 ]
  %287 = icmp eq i32 %205, 1
  br i1 %287, label %297, label %288

288:                                              ; preds = %284, %282, %285
  %289 = phi i32 [ %286, %285 ], [ %260, %284 ], [ %283, %282 ]
  %290 = phi i8* [ %188, %285 ], [ %279, %284 ], [ %279, %282 ]
  %291 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 3
  store i32 0, i32* %291, align 8
  %292 = icmp eq i64 %185, 0
  %293 = add nsw i32 %289, %187
  %294 = select i1 %292, i32 0, i32 %293
  %295 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 1
  store i32 %294, i32* %295, align 8
  %296 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 6
  store i8* %290, i8** %296, align 8
  br label %297

297:                                              ; preds = %106, %73, %184, %195, %285, %288, %169, %9, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4absl12_GLOBAL__N_118ParseInfinityOrNanEPKcS2_PNS_16strings_internal11ParsedFloatE(i8*, i8*, %"struct.absl::strings_internal::ParsedFloat"* nocapture) unnamed_addr #0 {
  %4 = ptrtoint i8* %1 to i64
  %5 = ptrtoint i8* %0 to i64
  %6 = sub i64 %4, %5
  %7 = icmp slt i64 %6, 3
  br i1 %7, label %63, label %8

8:                                                ; preds = %3
  %9 = load i8, i8* %0, align 1
  %10 = sext i8 %9 to i32
  switch i32 %10, label %63 [
    i32 105, label %11
    i32 73, label %11
    i32 110, label %28
    i32 78, label %28
  ]

11:                                               ; preds = %8, %8
  %12 = getelementptr inbounds i8, i8* %0, i64 1
  %13 = tail call i32 @_ZN4absl16strings_internal10memcasecmpEPKcS2_m(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %63

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %2, i64 0, i32 3
  store i32 1, i32* %16, align 8
  %17 = icmp sgt i64 %6, 7
  br i1 %17, label %18, label %25

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %0, i64 3
  %20 = tail call i32 @_ZN4absl16strings_internal10memcasecmpEPKcS2_m(i8* %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %0, i64 8
  %24 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %2, i64 0, i32 6
  store i8* %23, i8** %24, align 8
  br label %63

25:                                               ; preds = %18, %15
  %26 = getelementptr inbounds i8, i8* %0, i64 3
  %27 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %2, i64 0, i32 6
  store i8* %26, i8** %27, align 8
  br label %63

28:                                               ; preds = %8, %8
  %29 = getelementptr inbounds i8, i8* %0, i64 1
  %30 = tail call i32 @_ZN4absl16strings_internal10memcasecmpEPKcS2_m(i8* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %63

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %2, i64 0, i32 3
  store i32 2, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %0, i64 3
  %35 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %2, i64 0, i32 6
  store i8* %34, i8** %35, align 8
  %36 = icmp ult i8* %34, %1
  br i1 %36, label %37, label %63

37:                                               ; preds = %32
  %38 = load i8, i8* %34, align 1
  %39 = icmp eq i8 %38, 40
  br i1 %39, label %40, label %63

40:                                               ; preds = %37
  %41 = getelementptr inbounds i8, i8* %0, i64 4
  %42 = icmp ult i8* %41, %1
  br i1 %42, label %43, label %63

43:                                               ; preds = %40, %54
  %44 = phi i8* [ %55, %54 ], [ %41, %40 ]
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 95
  %47 = add i8 %45, -48
  %48 = icmp ult i8 %47, 10
  %49 = or i1 %46, %48
  %50 = and i8 %45, -33
  %51 = add i8 %50, -65
  %52 = icmp ult i8 %51, 26
  %53 = or i1 %52, %49
  br i1 %53, label %54, label %57

54:                                               ; preds = %43
  %55 = getelementptr inbounds i8, i8* %44, i64 1
  %56 = icmp eq i8* %55, %1
  br i1 %56, label %63, label %43

57:                                               ; preds = %43
  %58 = icmp eq i8 %45, 41
  br i1 %58, label %59, label %63

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %2, i64 0, i32 4
  store i8* %41, i8** %60, align 8
  %61 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %2, i64 0, i32 5
  store i8* %44, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %44, i64 1
  store i8* %62, i8** %35, align 8
  br label %63

63:                                               ; preds = %54, %40, %8, %32, %37, %59, %57, %28, %22, %25, %11, %3
  %64 = phi i1 [ false, %3 ], [ false, %11 ], [ true, %25 ], [ true, %22 ], [ false, %28 ], [ true, %57 ], [ true, %59 ], [ true, %37 ], [ true, %32 ], [ false, %8 ], [ true, %40 ], [ true, %54 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4absl16strings_internal10ParseFloatILi16EEENS0_11ParsedFloatEPKcS4_NS_12chars_formatE(%"struct.absl::strings_internal::ParsedFloat"* noalias sret, i8*, i8*, i32) local_unnamed_addr #0 comdat {
  %5 = bitcast %"struct.absl::strings_internal::ParsedFloat"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  %6 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #3
  %7 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #3
  %8 = icmp eq i8* %1, %2
  br i1 %8, label %303, label %9

9:                                                ; preds = %4
  %10 = tail call fastcc zeroext i1 @_ZN4absl12_GLOBAL__N_118ParseInfinityOrNanEPKcS2_PNS_16strings_internal11ParsedFloatE(i8* %1, i8* %2, %"struct.absl::strings_internal::ParsedFloat"* %0)
  br i1 %10, label %303, label %11

11:                                               ; preds = %9
  %12 = icmp ult i8* %1, %2
  br i1 %12, label %13, label %20

13:                                               ; preds = %11, %17
  %14 = phi i8* [ %18, %17 ], [ %1, %11 ]
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 48
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %14, i64 1
  %19 = icmp eq i8* %18, %2
  br i1 %19, label %30, label %13

20:                                               ; preds = %13, %11
  %21 = phi i8* [ %1, %11 ], [ %14, %13 ]
  %22 = icmp eq i8* %21, %2
  br i1 %22, label %30, label %23

23:                                               ; preds = %20, %27
  %24 = phi i8* [ %28, %27 ], [ %21, %20 ]
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 48
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds i8, i8* %24, i64 1
  %29 = icmp eq i8* %28, %2
  br i1 %29, label %30, label %23

30:                                               ; preds = %17, %27, %23, %20
  %31 = phi i8* [ %21, %20 ], [ %21, %23 ], [ %21, %27 ], [ %2, %17 ]
  %32 = phi i8* [ %2, %20 ], [ %2, %27 ], [ %24, %23 ], [ %2, %17 ]
  %33 = ptrtoint i8* %2 to i64
  %34 = ptrtoint i8* %32 to i64
  %35 = sub i64 %33, %34
  %36 = icmp sgt i64 %35, 15
  %37 = getelementptr inbounds i8, i8* %32, i64 15
  %38 = select i1 %36, i8* %37, i8* %2
  %39 = icmp ult i8* %32, %38
  br i1 %39, label %40, label %55

40:                                               ; preds = %30, %48
  %41 = phi i8* [ %53, %48 ], [ %32, %30 ]
  %42 = phi i64 [ %52, %48 ], [ 0, %30 ]
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl12_GLOBAL__N_111kAsciiToIntE, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = icmp sgt i8 %46, -1
  br i1 %47, label %48, label %55

48:                                               ; preds = %40
  %49 = sext i8 %46 to i64
  %50 = and i64 %49, 4294967295
  %51 = shl i64 %42, 4
  %52 = add i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %41, i64 1
  %54 = icmp eq i8* %53, %38
  br i1 %54, label %55, label %40

55:                                               ; preds = %48, %40, %30
  %56 = phi i64 [ 0, %30 ], [ %42, %40 ], [ %52, %48 ]
  %57 = phi i8* [ %32, %30 ], [ %41, %40 ], [ %38, %48 ]
  %58 = icmp ult i8* %57, %2
  br i1 %58, label %59, label %76

59:                                               ; preds = %55, %67
  %60 = phi i1 [ %69, %67 ], [ false, %55 ]
  %61 = phi i8* [ %70, %67 ], [ %57, %55 ]
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl12_GLOBAL__N_111kAsciiToIntE, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = icmp ne i8 %62, 48
  %69 = or i1 %60, %68
  %70 = getelementptr inbounds i8, i8* %61, i64 1
  %71 = icmp eq i8* %70, %2
  br i1 %71, label %72, label %59

72:                                               ; preds = %67, %59
  %73 = phi i8* [ %61, %59 ], [ %2, %67 ]
  %74 = phi i1 [ %60, %59 ], [ %69, %67 ]
  %75 = zext i1 %74 to i8
  br label %76

76:                                               ; preds = %72, %55
  %77 = phi i8 [ 0, %55 ], [ %75, %72 ]
  %78 = phi i8* [ %57, %55 ], [ %73, %72 ]
  %79 = ptrtoint i8* %78 to i64
  %80 = ptrtoint i8* %31 to i64
  %81 = sub i64 %79, %80
  %82 = trunc i64 %81 to i32
  %83 = shl i64 %81, 32
  %84 = ashr exact i64 %83, 32
  %85 = getelementptr inbounds i8, i8* %31, i64 %84
  %86 = icmp sgt i32 %82, 12499999
  br i1 %86, label %303, label %87

87:                                               ; preds = %76
  %88 = icmp sgt i32 %82, 15
  %89 = add nsw i32 %82, -15
  %90 = sub nsw i32 15, %82
  %91 = select i1 %88, i32 %89, i32 0
  %92 = select i1 %88, i32 0, i32 %90
  %93 = icmp ult i8* %85, %2
  br i1 %93, label %94, label %190

94:                                               ; preds = %87
  %95 = load i8, i8* %85, align 1
  %96 = icmp eq i8 %95, 46
  br i1 %96, label %97, label %190

97:                                               ; preds = %94
  %98 = getelementptr inbounds i8, i8* %85, i64 1
  %99 = icmp eq i64 %56, 0
  br i1 %99, label %100, label %127

100:                                              ; preds = %97
  %101 = icmp ult i8* %98, %2
  br i1 %101, label %102, label %109

102:                                              ; preds = %100, %106
  %103 = phi i8* [ %107, %106 ], [ %98, %100 ]
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, 48
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = getelementptr inbounds i8, i8* %103, i64 1
  %108 = icmp eq i8* %107, %2
  br i1 %108, label %109, label %102

109:                                              ; preds = %102, %106, %100
  %110 = phi i8* [ %98, %100 ], [ %2, %106 ], [ %103, %102 ]
  %111 = ptrtoint i8* %110 to i64
  %112 = ptrtoint i8* %98 to i64
  %113 = sub i64 %111, %112
  %114 = trunc i64 %113 to i32
  %115 = icmp sgt i32 %114, 12499999
  %116 = select i1 %115, i32 0, i32 %114
  %117 = sub nsw i32 %91, %116
  br i1 %115, label %303, label %118

118:                                              ; preds = %109
  %119 = icmp eq i8* %110, %2
  br i1 %119, label %127, label %120

120:                                              ; preds = %118, %124
  %121 = phi i8* [ %125, %124 ], [ %110, %118 ]
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 48
  br i1 %123, label %124, label %127

124:                                              ; preds = %120
  %125 = getelementptr inbounds i8, i8* %121, i64 1
  %126 = icmp eq i8* %125, %2
  br i1 %126, label %127, label %120

127:                                              ; preds = %124, %120, %97, %118
  %128 = phi i8* [ %2, %118 ], [ %98, %97 ], [ %110, %120 ], [ %110, %124 ]
  %129 = phi i32 [ %117, %118 ], [ %91, %97 ], [ %117, %120 ], [ %117, %124 ]
  %130 = phi i8* [ %2, %118 ], [ %98, %97 ], [ %2, %124 ], [ %121, %120 ]
  %131 = phi i64 [ 0, %118 ], [ %56, %97 ], [ 0, %120 ], [ 0, %124 ]
  %132 = ptrtoint i8* %130 to i64
  %133 = sub i64 %33, %132
  %134 = sext i32 %92 to i64
  %135 = icmp sgt i64 %133, %134
  %136 = getelementptr inbounds i8, i8* %130, i64 %134
  %137 = select i1 %135, i8* %136, i8* %2
  %138 = icmp ult i8* %130, %137
  br i1 %138, label %139, label %154

139:                                              ; preds = %127, %147
  %140 = phi i8* [ %152, %147 ], [ %130, %127 ]
  %141 = phi i64 [ %151, %147 ], [ %131, %127 ]
  %142 = load i8, i8* %140, align 1
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl12_GLOBAL__N_111kAsciiToIntE, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = icmp sgt i8 %145, -1
  br i1 %146, label %147, label %154

147:                                              ; preds = %139
  %148 = sext i8 %145 to i64
  %149 = and i64 %148, 4294967295
  %150 = shl i64 %141, 4
  %151 = add i64 %149, %150
  %152 = getelementptr inbounds i8, i8* %140, i64 1
  %153 = icmp eq i8* %152, %137
  br i1 %153, label %154, label %139

154:                                              ; preds = %147, %139, %127
  %155 = phi i64 [ %131, %127 ], [ %141, %139 ], [ %151, %147 ]
  %156 = phi i8* [ %130, %127 ], [ %140, %139 ], [ %137, %147 ]
  %157 = icmp ult i8* %156, %2
  br i1 %157, label %158, label %175

158:                                              ; preds = %154, %166
  %159 = phi i1 [ %168, %166 ], [ false, %154 ]
  %160 = phi i8* [ %169, %166 ], [ %156, %154 ]
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl12_GLOBAL__N_111kAsciiToIntE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = icmp sgt i8 %164, -1
  br i1 %165, label %166, label %171

166:                                              ; preds = %158
  %167 = icmp ne i8 %161, 48
  %168 = or i1 %159, %167
  %169 = getelementptr inbounds i8, i8* %160, i64 1
  %170 = icmp eq i8* %169, %2
  br i1 %170, label %171, label %158

171:                                              ; preds = %166, %158
  %172 = phi i8* [ %160, %158 ], [ %2, %166 ]
  %173 = phi i1 [ %159, %158 ], [ %168, %166 ]
  %174 = select i1 %173, i8 1, i8 %77
  br label %175

175:                                              ; preds = %171, %154
  %176 = phi i8 [ %77, %154 ], [ %174, %171 ]
  %177 = phi i8* [ %156, %154 ], [ %172, %171 ]
  %178 = ptrtoint i8* %177 to i64
  %179 = ptrtoint i8* %128 to i64
  %180 = sub i64 %178, %179
  %181 = trunc i64 %180 to i32
  %182 = icmp sgt i32 %181, 12499999
  br i1 %182, label %303, label %183

183:                                              ; preds = %175
  %184 = shl i64 %180, 32
  %185 = ashr exact i64 %184, 32
  %186 = getelementptr inbounds i8, i8* %128, i64 %185
  %187 = icmp slt i32 %92, %181
  %188 = select i1 %187, i32 %92, i32 %181
  %189 = sub nsw i32 %129, %188
  br label %190

190:                                              ; preds = %183, %94, %87
  %191 = phi i64 [ %56, %94 ], [ %56, %87 ], [ %155, %183 ]
  %192 = phi i8 [ %77, %94 ], [ %77, %87 ], [ %176, %183 ]
  %193 = phi i32 [ %91, %94 ], [ %91, %87 ], [ %189, %183 ]
  %194 = phi i8* [ %85, %94 ], [ %85, %87 ], [ %186, %183 ]
  %195 = icmp eq i8* %194, %1
  br i1 %195, label %303, label %196

196:                                              ; preds = %190
  %197 = ptrtoint i8* %194 to i64
  %198 = ptrtoint i8* %1 to i64
  %199 = sub i64 %197, %198
  %200 = icmp eq i64 %199, 1
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = load i8, i8* %1, align 1
  %203 = icmp eq i8 %202, 46
  br i1 %203, label %303, label %204

204:                                              ; preds = %201, %196
  %205 = icmp ne i8 %192, 0
  %206 = zext i1 %205 to i64
  %207 = or i64 %191, %206
  %208 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 0
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 2
  store i32 0, i32* %209, align 4
  %210 = and i32 %3, 3
  %211 = icmp ne i32 %210, 2
  %212 = icmp ult i8* %194, %2
  %213 = and i1 %211, %212
  br i1 %213, label %214, label %290

214:                                              ; preds = %204
  %215 = load i8, i8* %194, align 1
  %216 = or i8 %215, 32
  %217 = icmp eq i8 %216, 112
  br i1 %217, label %218, label %290

218:                                              ; preds = %214
  %219 = getelementptr inbounds i8, i8* %194, i64 1
  %220 = icmp ult i8* %219, %2
  br i1 %220, label %221, label %230

221:                                              ; preds = %218
  %222 = load i8, i8* %219, align 1
  %223 = icmp eq i8 %222, 45
  br i1 %223, label %224, label %226

224:                                              ; preds = %221
  %225 = getelementptr inbounds i8, i8* %194, i64 2
  br label %230

226:                                              ; preds = %221
  %227 = icmp eq i8 %222, 43
  %228 = getelementptr inbounds i8, i8* %194, i64 2
  %229 = select i1 %227, i8* %228, i8* %219
  br label %230

230:                                              ; preds = %226, %218, %224
  %231 = phi i1 [ false, %224 ], [ true, %226 ], [ true, %218 ]
  %232 = phi i8* [ %225, %224 ], [ %229, %226 ], [ %219, %218 ]
  %233 = icmp eq i8* %232, %2
  br i1 %233, label %243, label %234

234:                                              ; preds = %230, %240
  %235 = phi i8* [ %241, %240 ], [ %232, %230 ]
  %236 = load i8, i8* %235, align 1
  %237 = icmp eq i8 %236, 48
  br i1 %237, label %240, label %238

238:                                              ; preds = %234
  %239 = ptrtoint i8* %235 to i64
  br label %243

240:                                              ; preds = %234
  %241 = getelementptr inbounds i8, i8* %235, i64 1
  %242 = icmp eq i8* %241, %2
  br i1 %242, label %243, label %234

243:                                              ; preds = %240, %238, %230
  %244 = phi i64 [ %33, %230 ], [ %239, %238 ], [ %33, %240 ]
  %245 = phi i8* [ %2, %230 ], [ %235, %238 ], [ %2, %240 ]
  %246 = sub i64 %33, %244
  %247 = icmp sgt i64 %246, 9
  %248 = getelementptr inbounds i8, i8* %245, i64 9
  %249 = select i1 %247, i8* %248, i8* %2
  %250 = icmp ult i8* %245, %249
  br i1 %250, label %251, label %264

251:                                              ; preds = %243, %257
  %252 = phi i8* [ %262, %257 ], [ %245, %243 ]
  %253 = phi i32 [ %261, %257 ], [ 0, %243 ]
  %254 = load i8, i8* %252, align 1
  %255 = add i8 %254, -48
  %256 = icmp ult i8 %255, 10
  br i1 %256, label %257, label %264

257:                                              ; preds = %251
  %258 = sext i8 %254 to i32
  %259 = mul nsw i32 %253, 10
  %260 = add i32 %259, -48
  %261 = add i32 %260, %258
  %262 = getelementptr inbounds i8, i8* %252, i64 1
  %263 = icmp eq i8* %262, %249
  br i1 %263, label %264, label %251

264:                                              ; preds = %257, %251, %243
  %265 = phi i32 [ 0, %243 ], [ %253, %251 ], [ %261, %257 ]
  %266 = phi i8* [ %245, %243 ], [ %252, %251 ], [ %249, %257 ]
  %267 = icmp ult i8* %266, %2
  br i1 %267, label %268, label %276

268:                                              ; preds = %264, %273
  %269 = phi i8* [ %274, %273 ], [ %266, %264 ]
  %270 = load i8, i8* %269, align 1
  %271 = add i8 %270, -48
  %272 = icmp ult i8 %271, 10
  br i1 %272, label %273, label %276

273:                                              ; preds = %268
  %274 = getelementptr inbounds i8, i8* %269, i64 1
  %275 = icmp eq i8* %274, %2
  br i1 %275, label %276, label %268

276:                                              ; preds = %268, %273, %264
  %277 = phi i8* [ %266, %264 ], [ %2, %273 ], [ %269, %268 ]
  store i32 %265, i32* %209, align 4
  %278 = ptrtoint i8* %277 to i64
  %279 = ptrtoint i8* %232 to i64
  %280 = sub i64 %278, %279
  %281 = trunc i64 %280 to i32
  %282 = shl i64 %280, 32
  %283 = ashr exact i64 %282, 32
  %284 = getelementptr inbounds i8, i8* %232, i64 %283
  %285 = icmp eq i32 %281, 0
  %286 = or i1 %231, %285
  br i1 %286, label %289, label %287

287:                                              ; preds = %276
  %288 = sub nsw i32 0, %265
  store i32 %288, i32* %209, align 4
  br label %293

289:                                              ; preds = %276
  br i1 %285, label %290, label %293

290:                                              ; preds = %289, %204, %214
  %291 = phi i32 [ %265, %289 ], [ 0, %214 ], [ 0, %204 ]
  %292 = icmp eq i32 %210, 1
  br i1 %292, label %303, label %293

293:                                              ; preds = %289, %287, %290
  %294 = phi i32 [ %291, %290 ], [ %265, %289 ], [ %288, %287 ]
  %295 = phi i8* [ %194, %290 ], [ %284, %289 ], [ %284, %287 ]
  %296 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 3
  store i32 0, i32* %296, align 8
  %297 = icmp eq i64 %207, 0
  %298 = shl i32 %193, 2
  %299 = add nsw i32 %294, %298
  %300 = select i1 %297, i32 0, i32 %299
  %301 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 1
  store i32 %300, i32* %301, align 8
  %302 = getelementptr inbounds %"struct.absl::strings_internal::ParsedFloat", %"struct.absl::strings_internal::ParsedFloat"* %0, i64 0, i32 6
  store i8* %295, i8** %302, align 8
  br label %303

303:                                              ; preds = %109, %76, %190, %201, %290, %293, %175, %9, %4
  ret void
}

declare i32 @_ZN4absl16strings_internal10memcasecmpEPKcS2_m(i8*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
