; ModuleID = '../../third_party/blink/renderer/core/animation/invalidatable_interpolation.cc'
source_filename = "../../third_party/blink/renderer/core/animation/invalidatable_interpolation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::InvalidatableInterpolation" = type { %"class.blink::Interpolation", %"class.blink::PropertyHandle", %"class.WTF::Vector"*, i64, %"class.blink::Member", %"class.blink::Member", double, i8, %"class.std::__1::unique_ptr.11", %"class.WTF::Vector.17", %"class.std::__1::unique_ptr.28" }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolationType"* }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.5, i32, [4 x i8] }>
%class.scoped_refptr.5 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::PrimitiveInterpolation"* }
%"class.blink::PrimitiveInterpolation" = type { i32 (...)** }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"class.std::__1::unique_ptr.20"*, i32, i32 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::TypedInterpolationValue"* }
%"class.blink::TypedInterpolationValue" = type { %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue" }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.31", %class.scoped_refptr.37 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.37 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.38", [4 x i8] }>
%"class.WTF::RefCounted.38" = type { %"class.base::RefCounted.39" }
%"class.base::RefCounted.39" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::PairwisePrimitiveInterpolation" = type { %"class.blink::PrimitiveInterpolation", %"class.blink::InterpolationType"*, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31", %class.scoped_refptr.37 }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31", %class.scoped_refptr.37 }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.755, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.83, %class.scoped_refptr.83, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.83, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.65" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.57", %"class.blink::Member.57" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.57", %"class.blink::Member.59", %"class.blink::Member.57", %"class.blink::Member.57", %"class.blink::Member.61" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.408", %"class.blink::Member.410", %"class.blink::Member.59", %"class.blink::Member.412", %"class.blink::Member.412", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.445", %"class.blink::HeapVector.447" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::Document"* }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.416" }
%"class.blink::HeapHashMap.416" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.422" = type { %"class.WTF::AtomicString", %"class.blink::Member.423" }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.427", i32, %"class.blink::HeapVector.429" }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.429" = type { %"class.WTF::Vector.432" }
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { %"class.blink::Member.427"*, i32, i32 }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.442" }
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::HeapHashMap.444"* }
%"class.blink::HeapHashMap.444" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.447" = type { %"class.WTF::Vector.450" }
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"class.blink::Member.453"*, i32, i32 }
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.69", %"class.blink::Member.71", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.69" = type { %"class.WTF::SingleThreadedBitField.70" }
%"class.WTF::SingleThreadedBitField.70" = type { i32 }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.75 }
%class.scoped_refptr.75 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.76", %"class.WTF::AtomicString", %"class.WTF::Vector.78" }
%"class.WTF::RefCounted.76" = type { %"class.base::RefCounted.77" }
%"class.base::RefCounted.77" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.78" = type { %"class.WTF::VectorBuffer.79" }
%"class.WTF::VectorBuffer.79" = type { %"class.WTF::VectorBufferBase.80", [32 x i8] }
%"class.WTF::VectorBufferBase.80" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1014", %"class.WTF::Vector.1014", i8, i32, %"class.blink::Member.1021", %"class.blink::Member.1023", %"class.blink::Member.1025", %"class.blink::Member.1027", %"class.blink::Member.1029", %"class.blink::Member.1031", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1039", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1045", %"class.blink::Member.1047", %"class.blink::Member.453", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1050", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.429", %"class.blink::Member.427", %"class.blink::Member.1075", %"class.blink::Member.427", %"class.blink::Member.427", %"class.blink::Member.427", %"class.blink::UserActionElementSet", %"class.blink::Member.1084", double, double, i64, i64, %"class.blink::HeapHashSet.1086", %"class.blink::HeapHashSet.1093", i16, i8, %"class.blink::Member.1100", %"class.blink::Member.1102", %"class.blink::Member.1104", %"class.blink::Member.1106", %"class.blink::TextLinkColors", %"class.blink::Member.1108", i8, [7 x i8], %"class.blink::HeapHashMap.1110", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.427", %"class.WTF::Vector.1117", %"class.blink::Member.1122", %"class.blink::Member.1124", i8, %"class.blink::Member.427", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1126", %"class.blink::HeapVector.1128", %"class.std::__1::unique_ptr.1136", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1142", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1155", %"class.WTF::Vector.1157", i8, i8, %"class.std::__1::unique_ptr.1162", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.429", %"class.blink::HeapVector.1168", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1176", i8, i32, %"class.blink::Member.1178", %"class.blink::Member.1180", %"class.blink::Member.1182", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1184", %"class.WTF::HashMap.1186", %"class.blink::Member.1191", %"class.blink::Member.1193", %"class.blink::Member.1195", %"class.blink::Member.1197", %"class.blink::Member.410", %"class.blink::Member.410", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1199", i8, i32, %"class.blink::Member.1206", %"class.blink::Member.1208", i32, %"class.blink::Member.1210", %"class.blink::Member.1212", %"class.blink::Member.1214", %"class.std::__1::unique_ptr.1216", i64, %"class.std::__1::unique_ptr.1222", i32, i32, %"class.blink::Member.1237", %"class.blink::Member.1239", %"class.blink::Member.1241", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1243", %"class.WTF::Vector.1245", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1250", %"class.blink::Member.1257", %"class.std::__1::unique_ptr.1259", %"class.blink::Member.1265", i8, i8, %"class.WTF::String", %"class.blink::Member.1267", i8, [7 x i8], %"class.blink::HeapHashMap.1269", %"class.blink::HeapObserverSet.1276", %"class.blink::Member.1284", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1286", i32, i8, i8, %"class.blink::WeakMember.1288", %"class.blink::Member.1289" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1007" }
%"class.blink::HeapHashMap.1007" = type { %"class.WTF::HashMap.1010" }
%"class.WTF::HashMap.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ %"struct.WTF::KeyValuePair.1013"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1013" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1014" = type { %"class.WTF::VectorBuffer.1015" }
%"class.WTF::VectorBuffer.1015" = type { %"class.WTF::VectorBufferBase.1016" }
%"class.WTF::VectorBufferBase.1016" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1017 }
%class.scoped_refptr.1017 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1018", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1018" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1302", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1335", i32, i8, [3 x i8], %"class.blink::HeapVector.1337", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1345", %"class.blink::Member.1347", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1356", %"class.blink::Member.1362", %"class.blink::Member.1364", i8, [7 x i8] }>
%"class.blink::Supplementable.1302" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1303" }
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1310" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.975" }
%"class.blink::HeapHashSet.975" = type { %"class.WTF::HashSet.978" }
%"class.WTF::HashSet.978" = type { %"class.WTF::HashTable.979" }
%"class.WTF::HashTable.979" = type <{ %"class.blink::WeakMember.981"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.981" = type opaque
%"class.blink::Supplementable.1310" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1311" }
%"class.blink::HeapHashMap.1311" = type { %"class.WTF::HashMap.1314" }
%"class.WTF::HashMap.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"struct.WTF::KeyValuePair.1317"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1317" = type { i8*, %"class.blink::Member.1391" }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1393" }
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1318, %"class.std::__1::unique_ptr.1319", %"class.std::__1::unique_ptr.1319", %"class.std::__1::unique_ptr.1325", %"class.std::__1::unique_ptr.1325", %"class.blink::Member.1023", i32, [4 x i8], %"class.WTF::HashSet.1331", i32, i32 }
%class.scoped_refptr.1318 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1319" = type { %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1331" = type { %"class.WTF::HashTable.1332" }
%"class.WTF::HashTable.1332" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1337" = type { %"class.WTF::Vector.1340" }
%"class.WTF::Vector.1340" = type { %"class.WTF::VectorBuffer.1341" }
%"class.WTF::VectorBuffer.1341" = type { %"class.WTF::VectorBufferBase.1342" }
%"class.WTF::VectorBufferBase.1342" = type { %"class.blink::Member.1343"*, i32, i32 }
%"class.blink::Member.1343" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1349", i32, i32 }
%"class.blink::HeapHashMap.1349" = type { %"class.WTF::HashMap.1352" }
%"class.WTF::HashMap.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"struct.WTF::KeyValuePair.1355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1355" = type opaque
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1032" }
%"class.blink::MemberBase.1032" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1033" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.blink::KURL"* }
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1049 }
%class.scoped_refptr.1049 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052" }
%"class.WTF::VectorBufferBase.1052" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1053 }
%class.scoped_refptr.1053 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1054", i32, i32, %"class.blink::Persistent.1056" }
%"class.WTF::RefCounted.1054" = type { %"class.base::RefCounted.1055" }
%"class.base::RefCounted.1055" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1056" = type { %"class.blink::PersistentBase.1057" }
%"class.blink::PersistentBase.1057" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1060" }
%"class.blink::HeapHashMap.1060" = type { %"class.WTF::HashMap.1063" }
%"class.WTF::HashMap.1063" = type { %"class.WTF::HashTable.1064" }
%"class.WTF::HashTable.1064" = type <{ %"struct.WTF::KeyValuePair.1066"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1066" = type { %"class.blink::WeakMember.1067", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.362" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.149", i32, [4 x i8], %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.328", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.267", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.185" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i64 }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist.196"* }
%"class.blink::Worklist.196" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.185" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::Worklist.203"* }
%"class.blink::Worklist.203" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.185" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::Worklist.210"* }
%"class.blink::Worklist.210" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.185" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist.217"* }
%"class.blink::Worklist.217" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.185" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.185" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.185" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.185" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.245", %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.261", [4 x i8] }>
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247", %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { i64 }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { float }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.270", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.309" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.196"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.203"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.210"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.217"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.224"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1366" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.1367" }
%"struct.std::__1::__compressed_pair_elem.1367" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.327 }
%class.scoped_refptr.327 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__cxx_atomic_impl.330" }
%"struct.std::__1::__cxx_atomic_impl.330" = type { %"struct.std::__1::__cxx_atomic_base_impl.331" }
%"struct.std::__1::__cxx_atomic_base_impl.331" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1077" }
%"class.blink::HeapHashMap.1077" = type { %"class.WTF::HashMap.1080" }
%"class.WTF::HashMap.1080" = type { %"class.WTF::HashTable.1081" }
%"class.WTF::HashTable.1081" = type <{ %"struct.WTF::KeyValuePair.1083"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1083" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1086" = type { %"class.WTF::HashSet.1089" }
%"class.WTF::HashSet.1089" = type { %"class.WTF::HashTable.1090" }
%"class.WTF::HashTable.1090" = type <{ %"class.blink::WeakMember.1092"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1092" = type opaque
%"class.blink::HeapHashSet.1093" = type { %"class.WTF::HashSet.1096" }
%"class.WTF::HashSet.1096" = type { %"class.WTF::HashTable.1097" }
%"class.WTF::HashTable.1097" = type <{ %"class.blink::WeakMember.1099"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1099" = type opaque
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1110" = type { %"class.WTF::HashMap.1113" }
%"class.WTF::HashMap.1113" = type { %"class.WTF::HashTable.1114" }
%"class.WTF::HashTable.1114" = type <{ %"struct.WTF::KeyValuePair.1116"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1116" = type opaque
%"class.WTF::Vector.1117" = type { %"class.WTF::VectorBuffer.1118" }
%"class.WTF::VectorBuffer.1118" = type { %"class.WTF::VectorBufferBase.1119" }
%"class.WTF::VectorBufferBase.1119" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1128" = type { %"class.WTF::Vector.1131" }
%"class.WTF::Vector.1131" = type { %"class.WTF::VectorBuffer.1132" }
%"class.WTF::VectorBuffer.1132" = type { %"class.WTF::VectorBufferBase.1133" }
%"class.WTF::VectorBufferBase.1133" = type { %"class.blink::Member.1134"*, i32, i32 }
%"class.blink::Member.1134" = type opaque
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1142" = type { %"class.WTF::HashSet.1145" }
%"class.WTF::HashSet.1145" = type { %"class.WTF::HashTable.1146" }
%"class.WTF::HashTable.1146" = type <{ %"class.blink::WeakMember.1148"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1148" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1149", i32, [4 x i8] }>
%"class.WTF::Vector.1149" = type { %"class.WTF::VectorBuffer.1150" }
%"class.WTF::VectorBuffer.1150" = type { %"class.WTF::VectorBufferBase.1151" }
%"class.WTF::VectorBufferBase.1151" = type { %"struct.std::__1::pair.1152"*, i32, i32 }
%"struct.std::__1::pair.1152" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1157" = type { %"class.WTF::VectorBuffer.1158" }
%"class.WTF::VectorBuffer.1158" = type { %"class.WTF::VectorBufferBase.1159" }
%"class.WTF::VectorBufferBase.1159" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1168" = type { %"class.WTF::Vector.1171" }
%"class.WTF::Vector.1171" = type { %"class.WTF::VectorBuffer.1172" }
%"class.WTF::VectorBuffer.1172" = type { %"class.WTF::VectorBufferBase.1173" }
%"class.WTF::VectorBufferBase.1173" = type { %"class.blink::Member.1174"*, i32, i32 }
%"class.blink::Member.1174" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.410" }
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1186" = type { %"class.WTF::HashTable.1187" }
%"class.WTF::HashTable.1187" = type <{ %"struct.WTF::KeyValuePair.1190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1190" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1074", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1071, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1071 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1072" }>
%"class.base::RefCountedThreadSafe.1072" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1073 }
%class.scoped_refptr.1073 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.333", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.333" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.133" }
%"struct.std::__1::atomic.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__cxx_atomic_impl.136" }
%"struct.std::__1::__cxx_atomic_impl.136" = type { %"struct.std::__1::__cxx_atomic_base_impl.137" }
%"struct.std::__1::__cxx_atomic_base_impl.137" = type { i8 }
%"class.blink::WeakMember.1074" = type { %"class.blink::MemberBase.411" }
%"class.blink::HeapHashSet.1199" = type { %"class.WTF::HashSet.1202" }
%"class.WTF::HashSet.1202" = type { %"class.WTF::HashTable.1203" }
%"class.WTF::HashTable.1203" = type <{ %"class.blink::Member.1205"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1205" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1225", %"class.WTF::HashSet.1225", %"class.WTF::HashSet.1225", %"class.WTF::HashSet.1225", %"class.WTF::HashSet.1225", %"class.WTF::HashSet.1225", i32, [4 x i8], %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1225" = type { %"class.WTF::HashTable.1226" }
%"class.WTF::HashTable.1226" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1229" = type { %"class.WTF::HashTable.1230" }
%"class.WTF::HashTable.1230" = type <{ %"struct.WTF::KeyValuePair.1233"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1233" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1237" = type { %"class.blink::MemberBase.1238" }
%"class.blink::MemberBase.1238" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1245" = type { %"class.WTF::VectorBuffer.1246" }
%"class.WTF::VectorBuffer.1246" = type { %"class.WTF::VectorBufferBase.1247" }
%"class.WTF::VectorBufferBase.1247" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1250" = type { %"class.WTF::HashMap.1253" }
%"class.WTF::HashMap.1253" = type { %"class.WTF::HashTable.1254" }
%"class.WTF::HashTable.1254" = type <{ %"struct.WTF::KeyValuePair.1256"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1256" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1259" = type { %"class.std::__1::__compressed_pair.1260" }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem.1261" }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1269" = type { %"class.WTF::HashMap.1272" }
%"class.WTF::HashMap.1272" = type { %"class.WTF::HashTable.1273" }
%"class.WTF::HashTable.1273" = type <{ %"struct.WTF::KeyValuePair.1275"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1275" = type opaque
%"class.blink::HeapObserverSet.1276" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1277" }
%"class.blink::HeapHashSet.1277" = type { %"class.WTF::HashSet.1280" }
%"class.WTF::HashSet.1280" = type { %"class.WTF::HashTable.1281" }
%"class.WTF::HashTable.1281" = type <{ %"class.blink::WeakMember.1283"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1283" = type opaque
%"class.blink::Member.1284" = type { %"class.blink::MemberBase.1285" }
%"class.blink::MemberBase.1285" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.410", %"class.blink::HeapHashSet.1293", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1300", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1293" = type { %"class.WTF::HashSet.1296" }
%"class.WTF::HashSet.1296" = type { %"class.WTF::HashTable.1297" }
%"class.WTF::HashTable.1297" = type <{ %"class.blink::Member.1299"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1299" = type opaque
%"class.blink::HeapTaskRunnerTimer.1300" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1301", { i64, i64 } }
%"class.blink::WeakMember.1301" = type { %"class.blink::MemberBase.1287" }
%"class.blink::WeakMember.1288" = type { %"class.blink::MemberBase.58" }
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.755 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.740", %"class.std::__1::unique_ptr.742" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.335", %"class.blink::DataRef.458", %"class.blink::DataRef.462", %"class.blink::DataRef.660", %"class.blink::DataRef.723", %"class.blink::DataRef.727", %"class.blink::DataRef.731", %"class.blink::DataRef.735", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.85", %"class.blink::DataRef.87", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.85" = type { %"class.base::RefCounted.86" }
%"class.base::RefCounted.86" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.87" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.89", %"class.blink::Font" }
%"class.WTF::RefCounted.89" = type { %"class.base::RefCounted.90" }
%"class.base::RefCounted.90" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.121 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.92, %class.scoped_refptr.100, %class.scoped_refptr.110, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.120 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.91 }
%class.scoped_refptr.91 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1371", [4 x i8] }>
%"class.WTF::RefCounted.1371" = type { %"class.base::RefCounted.1372" }
%"class.base::RefCounted.1372" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.92 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.98", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.93" }
%"class.WTF::Vector.93" = type { %"class.WTF::VectorBuffer.94" }
%"class.WTF::VectorBuffer.94" = type { %"class.WTF::VectorBufferBase.95" }
%"class.WTF::VectorBufferBase.95" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.98" = type { %"class.base::RefCounted.99" }
%"class.base::RefCounted.99" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.100 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.101", %"class.WTF::RefCounted.108", [4 x i8] }>
%"class.blink::FontSettings.101" = type { %"class.WTF::Vector.102" }
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.blink::FontTagValuePair.105"*, i32, i32 }
%"class.blink::FontTagValuePair.105" = type { i32, float }
%"class.WTF::RefCounted.108" = type { %"class.base::RefCounted.109" }
%"class.base::RefCounted.109" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.110 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.111", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.117, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.111" = type { %"class.base::RefCounted.112" }
%"class.base::RefCounted.112" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.115 }
%union.anon.115 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.117 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.118", [4 x i8] }>
%"class.WTF::RefCounted.118" = type { %"class.base::RefCounted.119" }
%"class.base::RefCounted.119" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.120 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.121 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.122", %"class.WTF::Vector.124", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.122" = type { %"class.base::RefCounted.123" }
%"class.base::RefCounted.123" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126", [8 x i8] }
%"class.WTF::VectorBufferBase.126" = type { %class.scoped_refptr.127*, i32, i32 }
%class.scoped_refptr.127 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.128", [4 x i8] }>
%"class.WTF::RefCounted.128" = type { %"class.base::RefCounted.129" }
%"class.base::RefCounted.129" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.139", %class.scoped_refptr.146, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.128" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.132 }
%union.anon.132 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.138, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.6" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.6" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.133" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.138 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.142, %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.146 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.147", [4 x i8] }>
%"class.WTF::RefCounted.147" = type { %"class.base::RefCounted.148" }
%"class.base::RefCounted.148" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.332 }
%class.scoped_refptr.332 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.334, i8, i8, i8, i8 }>
%union.anon.334 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.335" = type { %class.scoped_refptr.336 }
%class.scoped_refptr.336 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.337", [4 x i8], %"class.blink::DataRef.339", %"class.blink::DataRef.375", %"class.WTF::Vector.379", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.383, %class.scoped_refptr.392, %"class.blink::Persistent.400", %"class.blink::Persistent.402", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.337" = type { %"class.base::RefCounted.338" }
%"class.base::RefCounted.338" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.339" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.341", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.343, %class.scoped_refptr.350, %"class.blink::Persistent.363", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.341" = type { %"class.base::RefCounted.342" }
%"class.base::RefCounted.342" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.343 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.344", %"class.WTF::Vector.345" }
%"class.base::RefCountedThreadSafe.344" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.350 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.351", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.351" = type { %"class.base::RefCounted.352" }
%"class.base::RefCounted.352" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1423 }
%class.scoped_refptr.1423 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1424", %"class.WTF::Vector.643", %"class.WTF::Vector.1426", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1424" = type { %"class.base::RefCounted.1425" }
%"class.base::RefCounted.1425" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1426" = type { %"class.WTF::VectorBuffer.1427" }
%"class.WTF::VectorBuffer.1427" = type { %"class.WTF::VectorBufferBase.1428" }
%"class.WTF::VectorBufferBase.1428" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1429 }
%union.anon.1429 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.355" }
%"class.blink::PersistentBase.355" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.blink::Persistent.363" = type { %"class.blink::PersistentBase.364" }
%"class.blink::PersistentBase.364" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.367" }
%"class.WTF::Vector.367" = type { %"class.WTF::VectorBuffer.368" }
%"class.WTF::VectorBuffer.368" = type { %"class.WTF::VectorBufferBase.369" }
%"class.WTF::VectorBufferBase.369" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.370", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.375" = type { %class.scoped_refptr.376 }
%class.scoped_refptr.376 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.377", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.377" = type { %"class.base::RefCounted.378" }
%"class.base::RefCounted.378" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.80" }
%class.scoped_refptr.383 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.384", %"class.WTF::Vector.386" }
%"class.WTF::RefCounted.384" = type { %"class.base::RefCounted.385" }
%"class.base::RefCounted.385" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"struct.std::__1::pair.389"*, i32, i32 }
%"struct.std::__1::pair.389" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.392 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.393", [4 x i8], %"class.WTF::Vector.395" }
%"class.WTF::RefCounted.393" = type { %"class.base::RefCounted.394" }
%"class.base::RefCounted.394" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.397", [28 x i8] }>
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.400" = type { %"class.blink::PersistentBase.401" }
%"class.blink::PersistentBase.401" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::Persistent.402" = type { %"class.blink::PersistentBase.403" }
%"class.blink::PersistentBase.403" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.406", %"class.blink::Member.456" }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.458" = type { %class.scoped_refptr.459 }
%class.scoped_refptr.459 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.460", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.460" = type { %"class.base::RefCounted.461" }
%"class.base::RefCounted.461" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.462" = type { %class.scoped_refptr.463 }
%class.scoped_refptr.463 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.464", [4 x i8], %"class.blink::DataRef.466", %"class.blink::DataRef.532", %"class.blink::TransformOperations", %class.scoped_refptr.392, %"class.blink::Persistent.654", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.464" = type { %"class.base::RefCounted.465" }
%"class.base::RefCounted.465" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.466" = type { %class.scoped_refptr.467 }
%class.scoped_refptr.467 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.468", [4 x i8], %"class.blink::DataRef.470", %"class.blink::Persistent.508", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.468" = type { %"class.base::RefCounted.469" }
%"class.base::RefCounted.469" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.470" = type { %class.scoped_refptr.471 }
%class.scoped_refptr.471 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.472", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.490, %class.scoped_refptr.493, %class.scoped_refptr.496, %class.scoped_refptr.499, %class.scoped_refptr.500, %class.scoped_refptr.501, %"class.blink::Persistent.508", %"class.blink::Persistent.523", %"class.absl::optional.527", %"class.absl::optional.527", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.472" = type { %"class.base::RefCounted.473" }
%"class.base::RefCounted.473" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.474", %"class.std::__1::unique_ptr.479" }
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.482", %"class.WTF::Vector.474", i32, i32 }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.490 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.491", [4 x i8] }>
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.493 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.494", [4 x i8] }>
%"class.WTF::RefCounted.494" = type { %"class.base::RefCounted.495" }
%"class.base::RefCounted.495" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.496 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.497" }>
%"class.WTF::RefCounted.497" = type { %"class.base::RefCounted.498" }
%"class.base::RefCounted.498" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.499 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.500 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.501 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.502", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.502" = type { %"class.base::RefCounted.503" }
%"class.base::RefCounted.503" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.504" }
%"class.blink::DataRef.504" = type { %class.scoped_refptr.505 }
%class.scoped_refptr.505 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.400", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.506" }
%"class.WTF::RefCounted.506" = type { %"class.base::RefCounted.507" }
%"class.base::RefCounted.507" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.523" = type { %"class.blink::PersistentBase.524" }
%"class.blink::PersistentBase.524" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.493, %"class.blink::Member.370", i32, [4 x i8] }>
%"class.absl::optional.527" = type { %"class.absl::optional_internal::optional_data.528" }
%"class.absl::optional_internal::optional_data.528" = type { %"class.absl::optional_internal::optional_data_base.529" }
%"class.absl::optional_internal::optional_data_base.529" = type { %"class.absl::optional_internal::optional_data_dtor_base.530" }
%"class.absl::optional_internal::optional_data_dtor_base.530" = type { i8, [3 x i8], %union.anon.531 }
%union.anon.531 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.512" }
%"class.blink::HeapVector.512" = type { %"class.WTF::Vector.515" }
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"class.blink::Member.518"*, i32, i32 }
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.532" = type { %class.scoped_refptr.533 }
%class.scoped_refptr.533 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.534", %"class.blink::DataRef.536", %"class.blink::DataRef.540", %"class.blink::DataRef.549", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.568", %"class.std::__1::unique_ptr.579", %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.626", %"class.std::__1::unique_ptr.637", %"class.WTF::Vector.643", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.534" = type { %"class.base::RefCounted.535" }
%"class.base::RefCounted.535" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.536" = type { %class.scoped_refptr.537 }
%class.scoped_refptr.537 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.538", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.538" = type { %"class.base::RefCounted.539" }
%"class.base::RefCounted.539" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.540" = type { %class.scoped_refptr.541 }
%class.scoped_refptr.541 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.542", [4 x i8], %"class.WTF::Vector.544", i8, [7 x i8] }>
%"class.WTF::RefCounted.542" = type { %"class.base::RefCounted.543" }
%"class.base::RefCounted.543" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.544" = type { %"class.WTF::VectorBuffer.545" }
%"class.WTF::VectorBuffer.545" = type { %"class.WTF::VectorBufferBase.546" }
%"class.WTF::VectorBufferBase.546" = type { i32*, i32, i32 }
%"class.blink::DataRef.549" = type { %class.scoped_refptr.550 }
%class.scoped_refptr.550 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.551", [4 x i8], %"class.WTF::HashMap.553", %"class.WTF::HashMap.553", %"class.WTF::HashMap.553", %"class.WTF::HashMap.553", %"class.WTF::HashMap.553", %"class.WTF::HashMap.553", %"class.WTF::HashMap.558", %"class.WTF::HashMap.558", %"class.WTF::HashMap.558", %"class.WTF::HashMap.558", %"class.WTF::HashMap.563", %"class.WTF::Vector.474", %"class.WTF::Vector.474", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.551" = type { %"class.base::RefCounted.552" }
%"class.base::RefCounted.552" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"struct.WTF::KeyValuePair.557"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.557" = type { %"class.WTF::String", %"class.WTF::Vector.1413" }
%"class.WTF::Vector.1413" = type { %"class.WTF::VectorBuffer.1414" }
%"class.WTF::VectorBuffer.1414" = type { %"class.WTF::VectorBufferBase.1415" }
%"class.WTF::VectorBufferBase.1415" = type { i64*, i32, i32 }
%"class.WTF::HashMap.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"struct.WTF::KeyValuePair.562"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.562" = type { i64, %"class.WTF::Vector.643" }
%"class.WTF::HashMap.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"struct.WTF::KeyValuePair.567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.567" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1418", %"class.absl::optional.1418", %"class.absl::optional.1418" }
%"class.absl::optional.1418" = type { %"class.absl::optional_internal::optional_data.1419" }
%"class.absl::optional_internal::optional_data.1419" = type { %"class.absl::optional_internal::optional_data_base.1420" }
%"class.absl::optional_internal::optional_data_base.1420" = type { %"class.absl::optional_internal::optional_data_dtor_base.1421" }
%"class.absl::optional_internal::optional_data_dtor_base.1421" = type { i8, %union.anon.1422 }
%union.anon.1422 = type { i32 }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.379", %"class.WTF::Vector.592", %"class.WTF::Vector.582", %"class.WTF::Vector.597", %"class.WTF::Vector.602", %"class.WTF::Vector.607" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.582", %"class.WTF::Vector.582", %"class.WTF::Vector.587" }
%"class.WTF::Vector.587" = type { %"class.WTF::VectorBuffer.588" }
%"class.WTF::VectorBuffer.588" = type { %"class.WTF::VectorBufferBase.589" }
%"class.WTF::VectorBufferBase.589" = type { %class.scoped_refptr.5*, i32, i32 }
%"class.WTF::Vector.592" = type { %"class.WTF::VectorBuffer.593" }
%"class.WTF::VectorBuffer.593" = type { %"class.WTF::VectorBufferBase.594" }
%"class.WTF::VectorBufferBase.594" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.582" = type { %"class.WTF::VectorBuffer.583" }
%"class.WTF::VectorBuffer.583" = type { %"class.WTF::VectorBufferBase.584" }
%"class.WTF::VectorBufferBase.584" = type { double*, i32, i32 }
%"class.WTF::Vector.597" = type { %"class.WTF::VectorBuffer.598" }
%"class.WTF::VectorBuffer.598" = type { %"class.WTF::VectorBufferBase.599" }
%"class.WTF::VectorBufferBase.599" = type { i32*, i32, i32 }
%"class.WTF::Vector.602" = type { %"class.WTF::VectorBuffer.603" }
%"class.WTF::VectorBuffer.603" = type { %"class.WTF::VectorBufferBase.604" }
%"class.WTF::VectorBufferBase.604" = type { i32*, i32, i32 }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.618" }
%"class.WTF::Vector.618" = type { %"class.WTF::VectorBuffer.619" }
%"class.WTF::VectorBuffer.619" = type { %"class.WTF::VectorBufferBase.620" }
%"class.WTF::VectorBufferBase.620" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.629" }
%"class.WTF::Vector.629" = type { %"class.WTF::VectorBuffer.630" }
%"class.WTF::VectorBuffer.630" = type { %"class.WTF::VectorBufferBase.631" }
%"class.WTF::VectorBufferBase.631" = type { %"class.blink::Persistent.400"*, i32, i32 }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.400", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.648" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %class.scoped_refptr.651*, i32, i32 }
%class.scoped_refptr.651 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.497", [4 x i8] }>
%"class.blink::Persistent.654" = type { %"class.blink::PersistentBase.655" }
%"class.blink::PersistentBase.655" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.658" }
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.660" = type { %class.scoped_refptr.661 }
%class.scoped_refptr.661 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.662", [4 x i8], %"class.blink::DataRef.664", %"class.blink::DataRef.668", %"class.blink::DataRef.685", %"class.blink::DataRef.703", %"class.blink::DataRef.715", %"class.blink::DataRef.719", %class.scoped_refptr.689, i32, [4 x i8] }>
%"class.WTF::RefCounted.662" = type { %"class.base::RefCounted.663" }
%"class.base::RefCounted.663" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.664" = type { %class.scoped_refptr.665 }
%class.scoped_refptr.665 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.666", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.666" = type { %"class.base::RefCounted.667" }
%"class.base::RefCounted.667" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.668" = type { %class.scoped_refptr.669 }
%class.scoped_refptr.669 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.670", %class.scoped_refptr.672, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.670" = type { %"class.base::RefCounted.671" }
%"class.base::RefCounted.671" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.672 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.673", %"class.std::__1::unique_ptr.679", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.494" }>
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.685" = type { %class.scoped_refptr.686 }
%class.scoped_refptr.686 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.687", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.687" = type { %"class.base::RefCounted.688" }
%"class.base::RefCounted.688" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.689, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.703" = type { %class.scoped_refptr.704 }
%class.scoped_refptr.704 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.705", [4 x i8], %class.scoped_refptr.707, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.705" = type { %"class.base::RefCounted.706" }
%"class.base::RefCounted.706" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.707 = type { %"class.base::RefCountedData.708"* }
%"class.base::RefCountedData.708" = type { %"class.base::RefCountedThreadSafe.709", %"class.WTF::Vector.710" }
%"class.base::RefCountedThreadSafe.709" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.710" = type { %"class.WTF::VectorBuffer.711" }
%"class.WTF::VectorBuffer.711" = type { %"class.WTF::VectorBufferBase.712" }
%"class.WTF::VectorBufferBase.712" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.715" = type { %class.scoped_refptr.716 }
%class.scoped_refptr.716 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.717", %class.scoped_refptr.689, %class.scoped_refptr.689, %class.scoped_refptr.689 }
%"class.WTF::RefCounted.717" = type { %"class.base::RefCounted.718" }
%"class.base::RefCounted.718" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.719" = type { %class.scoped_refptr.720 }
%class.scoped_refptr.720 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.721", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.721" = type { %"class.base::RefCounted.722" }
%"class.base::RefCounted.722" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.689 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.690", %"class.blink::Persistent.692", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.690" = type { %"class.base::RefCounted.691" }
%"class.base::RefCounted.691" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.692" = type { %"class.blink::PersistentBase.693" }
%"class.blink::PersistentBase.693" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.427", %"class.blink::HeapHashMap.696" }
%"class.blink::HeapHashMap.696" = type { %"class.WTF::HashMap.699" }
%"class.WTF::HashMap.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"struct.WTF::KeyValuePair.702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.702" = type opaque
%"class.blink::DataRef.723" = type { %class.scoped_refptr.724 }
%class.scoped_refptr.724 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.725", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.725" = type { %"class.base::RefCounted.726" }
%"class.base::RefCounted.726" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.727" = type { %class.scoped_refptr.728 }
%class.scoped_refptr.728 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.729", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.729" = type { %"class.base::RefCounted.730" }
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.731" = type { %class.scoped_refptr.732 }
%class.scoped_refptr.732 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.733", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.733" = type { %"class.base::RefCounted.734" }
%"class.base::RefCounted.734" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.735" = type { %class.scoped_refptr.736 }
%class.scoped_refptr.736 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.737", %class.scoped_refptr.739 }
%"class.WTF::RefCounted.737" = type { %"class.base::RefCounted.738" }
%"class.base::RefCounted.738" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.739 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1005", %"class.blink::StyleVariables", %class.scoped_refptr.739 }
%"class.WTF::RefCounted.1005" = type { %"class.base::RefCounted.1006" }
%"class.base::RefCounted.1006" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.740" = type { %"class.base::RefCounted.741" }
%"class.base::RefCounted.741" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.745" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.WTF::Vector.748"* }
%"class.WTF::Vector.748" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.83 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.756", %"class.WTF::Vector.904", %"class.blink::HeapHashSet.909", %"class.WTF::Vector.904", %"class.blink::HeapVector.916", %"class.blink::HeapVector.923", %"class.blink::HeapHashMap.930", %"class.WTF::HashSet.937", %"class.WTF::HashSet.937", %"class.blink::HeapHashMap.941", %"class.blink::HeapHashMap.941", %"class.blink::HeapHashMap.941", %"class.blink::HeapHashMap.941" }
%"class.blink::HeapVector.756" = type { %"class.WTF::Vector.759" }
%"class.WTF::Vector.759" = type { %"class.WTF::VectorBuffer.760" }
%"class.WTF::VectorBuffer.760" = type { %"class.WTF::VectorBufferBase.761" }
%"class.WTF::VectorBufferBase.761" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.762", %"struct.blink::Timing", %"class.blink::Member.834", i32, %"class.blink::Member.846", %"class.WTF::Vector.607" }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.785", i8, %"class.absl::optional.766", %"class.absl::optional.829" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.764", %"struct.blink::Timing", %"class.blink::Member.771", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.766", %"class.absl::optional.780", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.775", %"class.absl::optional.775", i8, i8, i8, %"class.absl::optional.766", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.775" = type { %"class.absl::optional_internal::optional_data.776" }
%"class.absl::optional_internal::optional_data.776" = type { %"class.absl::optional_internal::optional_data_base.777" }
%"class.absl::optional_internal::optional_data_base.777" = type { %"class.absl::optional_internal::optional_data_dtor_base.778" }
%"class.absl::optional_internal::optional_data_dtor_base.778" = type { i8, %union.anon.779 }
%union.anon.779 = type { double }
%"class.absl::optional.780" = type { %"class.absl::optional_internal::optional_data.781" }
%"class.absl::optional_internal::optional_data.781" = type { %"class.absl::optional_internal::optional_data_base.782" }
%"class.absl::optional_internal::optional_data_base.782" = type { %"class.absl::optional_internal::optional_data_dtor_base.783" }
%"class.absl::optional_internal::optional_data_dtor_base.783" = type { i8, %union.anon.784 }
%union.anon.784 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.789", %"class.blink::Member.797", %"class.blink::Member.817", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.5, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.789" = type { %"class.WTF::Vector.792" }
%"class.WTF::Vector.792" = type { %"class.WTF::VectorBuffer.793" }
%"class.WTF::VectorBuffer.793" = type { %"class.WTF::VectorBufferBase.794" }
%"class.WTF::VectorBufferBase.794" = type { %"class.blink::Member.795"*, i32, i32 }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.775", %"class.absl::optional.1401", %class.scoped_refptr.5 }
%"class.absl::optional.1401" = type { %"class.absl::optional_internal::optional_data.1402" }
%"class.absl::optional_internal::optional_data.1402" = type { %"class.absl::optional_internal::optional_data_base.1403" }
%"class.absl::optional_internal::optional_data_base.1403" = type { %"class.absl::optional_internal::optional_data_dtor_base.1404" }
%"class.absl::optional_internal::optional_data_dtor_base.1404" = type { i8, %union.anon.1405 }
%union.anon.1405 = type { i32 }
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::HeapHashMap.799"* }
%"class.blink::HeapHashMap.799" = type { %"class.WTF::HashMap.802" }
%"class.WTF::HashMap.802" = type { %"class.WTF::HashTable.803" }
%"class.WTF::HashTable.803" = type <{ %"struct.WTF::KeyValuePair.805"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.805" = type { %"class.blink::PropertyHandle", %"class.blink::Member.806" }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.810" }
%"class.blink::HeapVector.810" = type { %"class.WTF::Vector.813" }
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.821" }
%"class.blink::HeapVector.821" = type { %"class.WTF::Vector.824" }
%"class.WTF::Vector.824" = type { %"class.WTF::VectorBuffer.825" }
%"class.WTF::VectorBuffer.825" = type { %"class.WTF::VectorBufferBase.826" }
%"class.WTF::VectorBufferBase.826" = type { %"class.blink::Member.827"*, i32, i32 }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1387", %class.scoped_refptr.5, double, double, double, double }
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::Interpolation"* }
%"class.absl::optional.766" = type { %"class.absl::optional_internal::optional_data.767" }
%"class.absl::optional_internal::optional_data.767" = type { %"class.absl::optional_internal::optional_data_base.768" }
%"class.absl::optional_internal::optional_data_base.768" = type { %"class.absl::optional_internal::optional_data_dtor_base.769" }
%"class.absl::optional_internal::optional_data_dtor_base.769" = type { i8, %union.anon.770 }
%union.anon.770 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.829" = type { %"class.absl::optional_internal::optional_data.830" }
%"class.absl::optional_internal::optional_data.830" = type { %"class.absl::optional_internal::optional_data_base.831" }
%"class.absl::optional_internal::optional_data_base.831" = type { %"class.absl::optional_internal::optional_data_dtor_base.832" }
%"class.absl::optional_internal::optional_data_dtor_base.832" = type { i8, %union.anon.833 }
%union.anon.833 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.766", i32, [4 x i8], %class.scoped_refptr.5, i16, [6 x i8] }>
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.838", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.838" = type { %"class.WTF::Vector.841" }
%"class.WTF::Vector.841" = type { %"class.WTF::VectorBuffer.842" }
%"class.WTF::VectorBuffer.842" = type { %"class.WTF::VectorBufferBase.843" }
%"class.WTF::VectorBufferBase.843" = type { %"class.blink::Member.844"*, i32, i32 }
%"class.blink::Member.844" = type opaque
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.410", i32, [4 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.854", %"class.std::__1::unique_ptr.860", %"class.absl::optional.893" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.850" }
%"class.WTF::HashTable.850" = type <{ %"class.blink::Member.852"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.775", %"class.absl::optional.766", %"class.absl::optional.766", %"class.absl::optional.829", %"class.absl::optional.766", i8, [3 x i8], i32, %"class.blink::Member.982", %"class.blink::Member.982", %"class.blink::Member.984", %"class.blink::Member.410", %"class.blink::Member.846", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.986", %"class.blink::Member.986", %"class.blink::Member.986", %"class.std::__1::unique_ptr.988", i8, [3 x i8], i32, %"class.blink::Member.994", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.966" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.954" }
%"class.blink::HeapVector.954" = type { %"class.WTF::Vector.957" }
%"class.WTF::Vector.957" = type { %"class.WTF::VectorBuffer.958" }
%"class.WTF::VectorBuffer.958" = type { %"class.WTF::VectorBufferBase.959", [32 x i8] }
%"class.WTF::VectorBufferBase.959" = type { %"struct.std::__1::pair.960"*, i32, i32 }
%"struct.std::__1::pair.960" = type { %"class.WTF::AtomicString", %"class.blink::Member.961" }
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::HeapVector.963"* }
%"class.blink::HeapVector.963" = type opaque
%"class.std::__1::unique_ptr.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"class.WTF::Vector.969"* }
%"class.WTF::Vector.969" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.973" }
%"class.blink::WeakMember.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.775", %"class.absl::optional.775", double, i8, i32 }
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.998", %"class.std::__1::unique_ptr.999", %"class.blink::Member.852" }
%"class.blink::ThreadState::PrefinalizerRegistration.998" = type { i8 }
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.854" = type { %"class.WTF::HashSet.857" }
%"class.WTF::HashSet.857" = type { %"class.WTF::HashTable.858" }
%"class.WTF::HashTable.858" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.863 }
%class.scoped_refptr.863 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.864", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.864" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.865" }
%"class.std::__1::__hash_table.865" = type <{ %"class.std::__1::unique_ptr.866", %"class.std::__1::__compressed_pair.876", %"class.std::__1::__compressed_pair.881", %"class.std::__1::__compressed_pair.885", [4 x i8] }>
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868", %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::__hash_node_base.869"** }
%"struct.std::__1::__hash_node_base.869" = type { %"struct.std::__1::__hash_node_base.869"* }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.std::__1::__bucket_list_deallocator.871" }
%"class.std::__1::__bucket_list_deallocator.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::__hash_node_base.869" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.893" = type { %"class.absl::optional_internal::optional_data.894" }
%"class.absl::optional_internal::optional_data.894" = type { %"class.absl::optional_internal::optional_data_base.895" }
%"class.absl::optional_internal::optional_data_base.895" = type { %"class.absl::optional_internal::optional_data_dtor_base.896" }
%"class.absl::optional_internal::optional_data_dtor_base.896" = type { i8, %union.anon.897 }
%union.anon.897 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.898" }
%"class.absl::optional.898" = type { %"class.absl::optional_internal::optional_data.899" }
%"class.absl::optional_internal::optional_data.899" = type { %"class.absl::optional_internal::optional_data_base.900" }
%"class.absl::optional_internal::optional_data_base.900" = type { %"class.absl::optional_internal::optional_data_dtor_base.901" }
%"class.absl::optional_internal::optional_data_dtor_base.901" = type { i8, %union.anon.902 }
%union.anon.902 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.909" = type { %"class.WTF::HashSet.912" }
%"class.WTF::HashSet.912" = type { %"class.WTF::HashTable.913" }
%"class.WTF::HashTable.913" = type <{ %"class.blink::Member.915"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.915" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.904" = type { %"class.WTF::VectorBuffer.905" }
%"class.WTF::VectorBuffer.905" = type { %"class.WTF::VectorBufferBase.906" }
%"class.WTF::VectorBufferBase.906" = type { i32*, i32, i32 }
%"class.blink::HeapVector.916" = type { %"class.WTF::Vector.919" }
%"class.WTF::Vector.919" = type { %"class.WTF::VectorBuffer.920" }
%"class.WTF::VectorBuffer.920" = type { %"class.WTF::VectorBufferBase.921" }
%"class.WTF::VectorBufferBase.921" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.852", %"class.blink::Member.762", %"struct.blink::Timing", %"class.blink::Member.834", i32, %"class.blink::Member.846", %"class.WTF::Vector.607" }
%"class.blink::HeapVector.923" = type { %"class.WTF::Vector.926" }
%"class.WTF::Vector.926" = type { %"class.WTF::VectorBuffer.927" }
%"class.WTF::VectorBuffer.927" = type { %"class.WTF::VectorBufferBase.928" }
%"class.WTF::VectorBufferBase.928" = type { %"class.blink::Member.852"*, i32, i32 }
%"class.blink::HeapHashMap.930" = type { %"class.WTF::HashMap.933" }
%"class.WTF::HashMap.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"struct.WTF::KeyValuePair.936"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.936" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1409" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.83, %class.scoped_refptr.83, %class.scoped_refptr.83, double, %"class.blink::Member.762" }
%"class.WTF::HashSet.937" = type { %"class.WTF::HashTable.938" }
%"class.WTF::HashTable.938" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.941" = type { %"class.WTF::HashMap.944" }
%"class.WTF::HashMap.944" = type { %"class.WTF::HashTable.945" }
%"class.WTF::HashTable.945" = type <{ %"struct.WTF::KeyValuePair.947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.947" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1407" }
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::HeapVector.1381"* }
%"class.blink::HeapVector.1381" = type { %"class.WTF::Vector.1384" }
%"class.WTF::Vector.1384" = type { %"class.WTF::VectorBuffer.1385" }
%"class.WTF::VectorBuffer.1385" = type { %"class.WTF::VectorBufferBase.1386", [8 x i8] }
%"class.WTF::VectorBufferBase.1386" = type { %"class.blink::Member.1387"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.948", %"class.WTF::HashSet.948", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.948" = type { %"class.WTF::HashTable.949" }
%"class.WTF::HashTable.949" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe" = type { %"class.blink::Keyframe::PropertySpecificKeyframe.base", %"class.blink::Member.1375", %"class.blink::Member.1377" }
%"class.blink::Keyframe::PropertySpecificKeyframe.base" = type <{ i32 (...)**, double, %class.scoped_refptr.5, i32 }>
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::CompositorKeyframeValue"* }
%"class.blink::CompositorKeyframeValue" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::FlipPrimitiveInterpolation" = type { %"class.blink::PrimitiveInterpolation", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28", double }

$_ZNK3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink26InvalidatableInterpolationD2Ev = comdat any

$_ZN5blink26InvalidatableInterpolationD0Ev = comdat any

$_ZNK5blink26InvalidatableInterpolation28IsInvalidatableInterpolationEv = comdat any

$_ZNK5blink13Interpolation25IsTransitionInterpolationEv = comdat any

$_ZNK5blink26InvalidatableInterpolation11GetPropertyEv = comdat any

$_ZNK5blink26InvalidatableInterpolation5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink30PairwisePrimitiveInterpolationD2Ev = comdat any

$_ZN5blink30PairwisePrimitiveInterpolationD0Ev = comdat any

$_ZNK5blink30PairwisePrimitiveInterpolation16InterpolateValueEdRNSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE = comdat any

$_ZNK5blink30PairwisePrimitiveInterpolation29InterpolateUnderlyingFractionEddd = comdat any

$_ZNK5blink22PrimitiveInterpolation6IsFlipEv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS8_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN5blink26FlipPrimitiveInterpolationD2Ev = comdat any

$_ZN5blink26FlipPrimitiveInterpolationD0Ev = comdat any

$_ZNK5blink26FlipPrimitiveInterpolation16InterpolateValueEdRNSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE = comdat any

$_ZNK5blink26FlipPrimitiveInterpolation29InterpolateUnderlyingFractionEddd = comdat any

$_ZNK5blink26FlipPrimitiveInterpolation6IsFlipEv = comdat any

$_ZTVN5blink30PairwisePrimitiveInterpolationE = comdat any

$_ZTVN5blink26FlipPrimitiveInterpolationE = comdat any

@_ZTVN5blink26InvalidatableInterpolationE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InvalidatableInterpolation"*)* @_ZN5blink26InvalidatableInterpolationD2Ev to i8*), i8* bitcast (void (%"class.blink::InvalidatableInterpolation"*)* @_ZN5blink26InvalidatableInterpolationD0Ev to i8*), i8* bitcast (void (%"class.blink::InvalidatableInterpolation"*, i32, double)* @_ZN5blink26InvalidatableInterpolation11InterpolateEid to i8*), i8* bitcast (i1 (%"class.blink::InvalidatableInterpolation"*)* @_ZNK5blink26InvalidatableInterpolation28IsInvalidatableInterpolationEv to i8*), i8* bitcast (i1 (%"class.blink::Interpolation"*)* @_ZNK5blink13Interpolation25IsTransitionInterpolationEv to i8*), i8* bitcast (%"class.blink::PropertyHandle"* (%"class.blink::InvalidatableInterpolation"*)* @_ZNK5blink26InvalidatableInterpolation11GetPropertyEv to i8*), i8* bitcast (i1 (%"class.blink::InvalidatableInterpolation"*)* @_ZNK5blink26InvalidatableInterpolation24DependsOnUnderlyingValueEv to i8*), i8* bitcast (void (%"class.blink::InvalidatableInterpolation"*, %"class.blink::Visitor"*)* @_ZNK5blink26InvalidatableInterpolation5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink20UnderlyingValueOwnerE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink30PairwisePrimitiveInterpolationE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PairwisePrimitiveInterpolation"*)* @_ZN5blink30PairwisePrimitiveInterpolationD2Ev to i8*), i8* bitcast (void (%"class.blink::PairwisePrimitiveInterpolation"*)* @_ZN5blink30PairwisePrimitiveInterpolationD0Ev to i8*), i8* bitcast (void (%"class.blink::PairwisePrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)* @_ZNK5blink30PairwisePrimitiveInterpolation16InterpolateValueEdRNSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (double (%"class.blink::PairwisePrimitiveInterpolation"*, double, double, double)* @_ZNK5blink30PairwisePrimitiveInterpolation29InterpolateUnderlyingFractionEddd to i8*), i8* bitcast (i1 (%"class.blink::PrimitiveInterpolation"*)* @_ZNK5blink22PrimitiveInterpolation6IsFlipEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1
@_ZTVN5blink26FlipPrimitiveInterpolationE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FlipPrimitiveInterpolation"*)* @_ZN5blink26FlipPrimitiveInterpolationD2Ev to i8*), i8* bitcast (void (%"class.blink::FlipPrimitiveInterpolation"*)* @_ZN5blink26FlipPrimitiveInterpolationD0Ev to i8*), i8* bitcast (void (%"class.blink::FlipPrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)* @_ZNK5blink26FlipPrimitiveInterpolation16InterpolateValueEdRNSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (double (%"class.blink::FlipPrimitiveInterpolation"*, double, double, double)* @_ZNK5blink26FlipPrimitiveInterpolation29InterpolateUnderlyingFractionEddd to i8*), i8* bitcast (i1 (%"class.blink::FlipPrimitiveInterpolation"*)* @_ZNK5blink26FlipPrimitiveInterpolation6IsFlipEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InvalidatableInterpolation11InterpolateEid(%"class.blink::InvalidatableInterpolation"*, i32, double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %5 = load double, double* %4, align 8
  %6 = fcmp oeq double %5, %2
  br i1 %6, label %30, label %7

7:                                                ; preds = %3
  %8 = fcmp oeq double %5, 0.000000e+00
  br i1 %8, label %15, label %9

9:                                                ; preds = %7
  %10 = fcmp oeq double %5, 1.000000e+00
  %11 = fcmp oeq double %2, 0.000000e+00
  %12 = or i1 %11, %10
  %13 = fcmp oeq double %2, 1.000000e+00
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %9, %7
  tail call void @_ZNK5blink26InvalidatableInterpolation20ClearConversionCacheEv(%"class.blink::InvalidatableInterpolation"* %0)
  br label %16

16:                                               ; preds = %9, %15
  store double %2, double* %4, align 8
  %17 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 7
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %21, align 8
  %23 = icmp eq %"class.blink::PrimitiveInterpolation"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10
  %26 = bitcast %"class.blink::PrimitiveInterpolation"* %22 to void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)***
  %27 = load void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)**, void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)*, void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)** %27, i64 2
  %29 = load void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)*, void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)** %28, align 8
  tail call void %29(%"class.blink::PrimitiveInterpolation"* nonnull %22, double %2, %"class.std::__1::unique_ptr.28"* dereferenceable(8) %25) #9
  br label %30

30:                                               ; preds = %20, %16, %3, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26InvalidatableInterpolation20ClearConversionCacheEv(%"class.blink::InvalidatableInterpolation"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %3, align 8
  store %"class.blink::PrimitiveInterpolation"* null, %"class.blink::PrimitiveInterpolation"** %3, align 8
  %5 = icmp eq %"class.blink::PrimitiveInterpolation"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::PrimitiveInterpolation"* %4 to void (%"class.blink::PrimitiveInterpolation"*)***
  %8 = load void (%"class.blink::PrimitiveInterpolation"*)**, void (%"class.blink::PrimitiveInterpolation"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::PrimitiveInterpolation"*)*, void (%"class.blink::PrimitiveInterpolation"*)** %8, i64 1
  %10 = load void (%"class.blink::PrimitiveInterpolation"*)*, void (%"class.blink::PrimitiveInterpolation"*)** %9, align 8
  tail call void %10(%"class.blink::PrimitiveInterpolation"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9
  %13 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %39, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %12, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %21, align 8
  %23 = zext i32 %18 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %22, i64 %23
  br label %25

25:                                               ; preds = %35, %20
  %26 = phi %"class.std::__1::unique_ptr.20"* [ %36, %35 ], [ %22, %20 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %27, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %27, align 8
  %29 = icmp eq %"class.blink::InterpolationType::ConversionChecker"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::InterpolationType::ConversionChecker"* %28 to void (%"class.blink::InterpolationType::ConversionChecker"*)***
  %32 = load void (%"class.blink::InterpolationType::ConversionChecker"*)**, void (%"class.blink::InterpolationType::ConversionChecker"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %32, i64 1
  %34 = load void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %33, align 8
  tail call void %34(%"class.blink::InterpolationType::ConversionChecker"* nonnull %28) #9
  br label %35

35:                                               ; preds = %30, %25
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %26, i64 1
  %37 = icmp eq %"class.std::__1::unique_ptr.20"* %36, %24
  br i1 %37, label %38, label %25

38:                                               ; preds = %35
  store i32 0, i32* %17, align 4
  br label %39

39:                                               ; preds = %38, %16
  %40 = bitcast %"class.WTF::Vector.17"* %12 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.WTF::Vector.17"* %12 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store i32 0, i32* %13, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #9
  br label %43

43:                                               ; preds = %11, %39
  %44 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %45 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %44, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %44, align 8
  %46 = icmp eq %"class.blink::TypedInterpolationValue"* %45, null
  br i1 %46, label %75, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %45, i64 0, i32 1, i32 1, i32 0
  %49 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %48, align 8
  %50 = icmp eq %"class.blink::NonInterpolableValue"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %49, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %52, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #9
  %54 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %52, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %52, i64 -2
  %59 = bitcast %"class.base::RefCounted.39"* %58 to %"class.blink::NonInterpolableValue"*
  %60 = bitcast %"class.base::RefCounted.39"* %58 to void (%"class.blink::NonInterpolableValue"*)***
  %61 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %61, i64 1
  %63 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %62, align 8
  tail call void %63(%"class.blink::NonInterpolableValue"* nonnull %59) #9
  br label %64

64:                                               ; preds = %57, %51, %47
  %65 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %65, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %65, align 8
  %67 = icmp eq %"class.blink::InterpolableValue"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.blink::InterpolableValue"* %66 to void (%"class.blink::InterpolableValue"*)***
  %70 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %70, i64 1
  %72 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %71, align 8
  tail call void %72(%"class.blink::InterpolableValue"* nonnull %66) #9
  br label %73

73:                                               ; preds = %68, %64
  %74 = bitcast %"class.blink::TypedInterpolationValue"* %45 to i8*
  tail call void @free(i8* %74) #9
  br label %75

75:                                               ; preds = %43, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PairwisePrimitiveInterpolation"* @_ZNK5blink26InvalidatableInterpolation20MaybeConvertPairwiseERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"class.blink::UnderlyingValueOwner"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.17", align 8
  %5 = alloca %"struct.blink::PairwiseInterpolationValue", align 16
  %6 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 2
  %7 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %182, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %2, i64 0, i32 1
  %19 = bitcast %"class.WTF::Vector.17"* %4 to i8*
  %20 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %4, i64 0, i32 0, i32 0, i32 2
  %22 = bitcast %"struct.blink::PairwiseInterpolationValue"* %5 to i8*
  %23 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %5, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %5, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9
  %27 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %28 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %26, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %5, i64 0, i32 2, i32 0
  %31 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::Vector.17"* %4 to i8**
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %5 to i8*
  %34 = bitcast %"struct.blink::PairwiseInterpolationValue"* %5 to <2 x %"class.blink::InterpolableValue"*>*
  %35 = bitcast %"class.std::__1::unique_ptr.31"* %24 to <2 x i64>*
  br label %36

36:                                               ; preds = %15, %178
  %37 = phi %"class.std::__1::unique_ptr"* [ %9, %15 ], [ %180, %178 ]
  %38 = phi i64 [ undef, %15 ], [ %179, %178 ]
  %39 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %16, align 8
  %40 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %39 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %41 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %41, i64 2
  %43 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %42, align 8
  %44 = call zeroext i1 %43(%"class.blink::Keyframe::PropertySpecificKeyframe"* %39) #9
  br i1 %44, label %52, label %45

45:                                               ; preds = %36
  %46 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %17, align 8
  %47 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %46 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %48 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %48, i64 2
  %50 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %49, align 8
  %51 = call zeroext i1 %50(%"class.blink::Keyframe::PropertySpecificKeyframe"* %46) #9
  br i1 %51, label %52, label %59

52:                                               ; preds = %45, %36
  %53 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %18, align 8
  %54 = icmp eq %"class.blink::InterpolationType"* %53, null
  br i1 %54, label %178, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %56, align 8
  %58 = icmp eq %"class.blink::InterpolationType"* %53, %57
  br i1 %58, label %59, label %178

59:                                               ; preds = %55, %45
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 24, i1 false)
  %61 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %60, align 8
  %62 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %16, align 8
  %63 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %17, align 8
  %64 = call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* %2) #9
  %65 = bitcast %"class.blink::InterpolationType"* %61 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)***
  %66 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)** %66, i64 2
  %68 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)** %67, align 8
  call void %68(%"struct.blink::PairwiseInterpolationValue"* nonnull sret %5, %"class.blink::InterpolationType"* %61, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %62, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %63, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"struct.blink::InterpolationValue"* dereferenceable(16) %64, %"class.WTF::Vector.17"* nonnull dereferenceable(16) %4) #9
  %69 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = load i32, i32* %21, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %99, label %73

73:                                               ; preds = %59, %95
  %74 = phi i32 [ %96, %95 ], [ 0, %59 ]
  %75 = call dereferenceable(8) %"class.std::__1::unique_ptr.20"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* nonnull %4, i32 %74) #9
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::InterpolationType::ConversionChecker", %"class.blink::InterpolationType::ConversionChecker"* %77, i64 0, i32 1
  %79 = bitcast %"class.blink::InterpolationType"** %78 to i64*
  store i64 %70, i64* %79, align 8
  %80 = call dereferenceable(8) %"class.std::__1::unique_ptr.20"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* nonnull %4, i32 %74) #9
  %81 = load i32, i32* %27, align 4
  %82 = load i32, i32* %28, align 8
  %83 = icmp eq i32 %81, %82
  br i1 %83, label %94, label %84, !prof !3

84:                                               ; preds = %73
  %85 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %29, align 8
  %86 = zext i32 %81 to i64
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %85, i64 %86
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %80, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr.20"* %80 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.20"* %87 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load i32, i32* %27, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %27, align 4
  br label %95

94:                                               ; preds = %73
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS8_EEvOT_(%"class.WTF::Vector.17"* %26, %"class.std::__1::unique_ptr.20"* dereferenceable(8) %80) #9
  br label %95

95:                                               ; preds = %94, %84
  %96 = add nuw i32 %74, 1
  %97 = load i32, i32* %21, align 4
  %98 = icmp ult i32 %96, %97
  br i1 %98, label %73, label %99

99:                                               ; preds = %95, %59
  %100 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %23, align 16
  %101 = icmp eq %"class.blink::InterpolableValue"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %99
  %103 = ptrtoint %"class.blink::InterpolableValue"* %100 to i64
  %104 = load i64, i64* %69, align 8
  %105 = call noalias i8* @malloc(i64 40) #9
  %106 = load <2 x i64>, <2 x i64>* %35, align 8
  store <2 x %"class.blink::InterpolableValue"*> zeroinitializer, <2 x %"class.blink::InterpolableValue"*>* %34, align 16
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %25, align 16
  %107 = bitcast i8* %105 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink30PairwisePrimitiveInterpolationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds i8, i8* %105, i64 8
  %109 = bitcast i8* %108 to i64*
  store i64 %104, i64* %109, align 8
  %110 = getelementptr inbounds i8, i8* %105, i64 16
  %111 = bitcast i8* %110 to i64*
  store i64 %103, i64* %111, align 8
  %112 = getelementptr inbounds i8, i8* %105, i64 24
  %113 = bitcast i8* %112 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %113, align 8
  %114 = ptrtoint i8* %105 to i64
  br label %131

115:                                              ; preds = %99
  %116 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %30, align 16
  %117 = icmp eq %"class.blink::NonInterpolableValue"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %116, i64 0, i32 1, i32 0
  %120 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %119, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %120) #9
  %121 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %119, i64 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %119, i64 -2
  %126 = bitcast %"class.base::RefCounted.39"* %125 to %"class.blink::NonInterpolableValue"*
  %127 = bitcast %"class.base::RefCounted.39"* %125 to void (%"class.blink::NonInterpolableValue"*)***
  %128 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %128, i64 1
  %130 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %129, align 8
  call void %130(%"class.blink::NonInterpolableValue"* nonnull %126) #9
  br label %131

131:                                              ; preds = %102, %124, %118, %115
  %132 = phi i32 [ 1, %102 ], [ 0, %124 ], [ 0, %118 ], [ 0, %115 ]
  %133 = phi i64 [ %114, %102 ], [ %38, %124 ], [ %38, %118 ], [ %38, %115 ]
  %134 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %31, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %31, align 8
  %135 = icmp eq %"class.blink::InterpolableValue"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %131
  %137 = bitcast %"class.blink::InterpolableValue"* %134 to void (%"class.blink::InterpolableValue"*)***
  %138 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %138, i64 1
  %140 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %139, align 8
  call void %140(%"class.blink::InterpolableValue"* nonnull %134) #9
  br label %141

141:                                              ; preds = %136, %131
  %142 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %23, align 16
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %23, align 16
  %143 = icmp eq %"class.blink::InterpolableValue"* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.blink::InterpolableValue"* %142 to void (%"class.blink::InterpolableValue"*)***
  %146 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %146, i64 1
  %148 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %147, align 8
  call void %148(%"class.blink::InterpolableValue"* nonnull %142) #9
  br label %149

149:                                              ; preds = %141, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  %150 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %20, align 8
  %151 = icmp eq %"class.std::__1::unique_ptr.20"* %150, null
  br i1 %151, label %176, label %152, !prof !4

152:                                              ; preds = %149
  %153 = bitcast %"class.std::__1::unique_ptr.20"* %150 to i8*
  %154 = load i32, i32* %21, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %174, label %156, !prof !3

156:                                              ; preds = %152
  %157 = zext i32 %154 to i64
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %150, i64 %157
  br label %159

159:                                              ; preds = %169, %156
  %160 = phi %"class.std::__1::unique_ptr.20"* [ %170, %169 ], [ %150, %156 ]
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %161, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %161, align 8
  %163 = icmp eq %"class.blink::InterpolationType::ConversionChecker"* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %159
  %165 = bitcast %"class.blink::InterpolationType::ConversionChecker"* %162 to void (%"class.blink::InterpolationType::ConversionChecker"*)***
  %166 = load void (%"class.blink::InterpolationType::ConversionChecker"*)**, void (%"class.blink::InterpolationType::ConversionChecker"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %166, i64 1
  %168 = load void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %167, align 8
  call void %168(%"class.blink::InterpolationType::ConversionChecker"* nonnull %162) #9
  br label %169

169:                                              ; preds = %164, %159
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %160, i64 1
  %171 = icmp eq %"class.std::__1::unique_ptr.20"* %170, %158
  br i1 %171, label %172, label %159

172:                                              ; preds = %169
  store i32 0, i32* %21, align 4
  %173 = load i8*, i8** %32, align 8
  br label %174

174:                                              ; preds = %172, %152
  %175 = phi i8* [ %173, %172 ], [ %153, %152 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %175) #9
  store %"class.std::__1::unique_ptr.20"* null, %"class.std::__1::unique_ptr.20"** %20, align 8
  br label %176

176:                                              ; preds = %174, %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  %177 = icmp eq i32 %132, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %55, %52, %176
  %179 = phi i64 [ %133, %176 ], [ %38, %55 ], [ %38, %52 ]
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %181 = icmp eq %"class.std::__1::unique_ptr"* %180, %13
  br i1 %181, label %182, label %36

182:                                              ; preds = %178, %176, %3
  %183 = phi i64 [ 0, %3 ], [ %133, %176 ], [ 0, %178 ]
  %184 = inttoptr i64 %183 to %"class.blink::PairwisePrimitiveInterpolation"*
  ret %"class.blink::PairwisePrimitiveInterpolation"* %184
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26InvalidatableInterpolation21AddConversionCheckersERKNS_17InterpolationTypeERN3WTF6VectorINSt3__110unique_ptrINS1_17ConversionCheckerENS6_14default_deleteIS8_EEEELj0ENS4_18PartitionAllocatorEEE(%"class.blink::InvalidatableInterpolation"*, %"class.blink::InterpolationType"* dereferenceable(32), %"class.WTF::Vector.17"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %2, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9
  %9 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %8, i64 0, i32 0, i32 0, i32 0
  br label %13

12:                                               ; preds = %34, %3
  ret void

13:                                               ; preds = %7, %34
  %14 = phi i32 [ 0, %7 ], [ %35, %34 ]
  %15 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.20"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %2, i32 %14) #9
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::InterpolationType::ConversionChecker", %"class.blink::InterpolationType::ConversionChecker"* %17, i64 0, i32 1
  store %"class.blink::InterpolationType"* %1, %"class.blink::InterpolationType"** %18, align 8
  %19 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.20"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %2, i32 %14) #9
  %20 = load i32, i32* %9, align 4
  %21 = load i32, i32* %10, align 8
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %33, label %23, !prof !3

23:                                               ; preds = %13
  %24 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %11, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %24, i64 %25
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %19, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.20"* %19 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %27, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.20"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %9, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %9, align 4
  br label %34

33:                                               ; preds = %13
  tail call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS8_EEvOT_(%"class.WTF::Vector.17"* %8, %"class.std::__1::unique_ptr.20"* dereferenceable(8) %19) #9
  br label %34

34:                                               ; preds = %23, %33
  %35 = add nuw i32 %14, 1
  %36 = load i32, i32* %4, align 4
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %13, label %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation21ConvertSingleKeyframeERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"class.blink::UnderlyingValueOwner"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.17", align 8
  %6 = alloca %"struct.blink::InterpolationValue", align 8
  %7 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %1 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %8 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %8, i64 2
  %10 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Keyframe::PropertySpecificKeyframe"* %1) #9
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %3, i64 0, i32 1
  %14 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %13, align 8
  %15 = icmp eq %"class.blink::InterpolationType"* %14, null
  br i1 %15, label %169, label %16

16:                                               ; preds = %12, %4
  %17 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 2
  %18 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %169, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %3, i64 0, i32 1
  %28 = bitcast %"class.WTF::Vector.17"* %5 to i8*
  %29 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %5, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"struct.blink::InterpolationValue"* %6 to i8*
  %32 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 1
  %34 = getelementptr inbounds %class.scoped_refptr.37, %class.scoped_refptr.37* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9
  %36 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %35, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %class.scoped_refptr.37* %33 to i64*
  %40 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 1, i32 0
  %41 = bitcast %"class.WTF::Vector.17"* %5 to i8**
  %42 = bitcast %"struct.blink::InterpolationValue"* %6 to i8*
  br label %43

43:                                               ; preds = %26, %165
  %44 = phi %"class.std::__1::unique_ptr"* [ %20, %26 ], [ %167, %165 ]
  %45 = phi i64 [ undef, %26 ], [ %166, %165 ]
  %46 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %7, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %46, i64 2
  %48 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %47, align 8
  %49 = call zeroext i1 %48(%"class.blink::Keyframe::PropertySpecificKeyframe"* %1) #9
  br i1 %49, label %50, label %55

50:                                               ; preds = %43
  %51 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %27, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %52, align 8
  %54 = icmp eq %"class.blink::InterpolationType"* %51, %53
  br i1 %54, label %55, label %165

55:                                               ; preds = %50, %43
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  %57 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %56, align 8
  %58 = call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* %3) #9
  %59 = bitcast %"class.blink::InterpolationType"* %57 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)***
  %60 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)** %60, i64 3
  %62 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.17"*)** %61, align 8
  call void %62(%"struct.blink::InterpolationValue"* nonnull sret %6, %"class.blink::InterpolationType"* %57, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %1, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %2, %"struct.blink::InterpolationValue"* dereferenceable(16) %58, %"class.WTF::Vector.17"* nonnull dereferenceable(16) %5) #9
  %63 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = load i32, i32* %30, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %93, label %67

67:                                               ; preds = %55, %89
  %68 = phi i32 [ %90, %89 ], [ 0, %55 ]
  %69 = call dereferenceable(8) %"class.std::__1::unique_ptr.20"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* nonnull %5, i32 %68) #9
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::InterpolationType::ConversionChecker", %"class.blink::InterpolationType::ConversionChecker"* %71, i64 0, i32 1
  %73 = bitcast %"class.blink::InterpolationType"** %72 to i64*
  store i64 %64, i64* %73, align 8
  %74 = call dereferenceable(8) %"class.std::__1::unique_ptr.20"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* nonnull %5, i32 %68) #9
  %75 = load i32, i32* %36, align 4
  %76 = load i32, i32* %37, align 8
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %88, label %78, !prof !3

78:                                               ; preds = %67
  %79 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %38, align 8
  %80 = zext i32 %75 to i64
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %79, i64 %80
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %74, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.20"* %74 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.20"* %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = load i32, i32* %36, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %36, align 4
  br label %89

88:                                               ; preds = %67
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS8_EEvOT_(%"class.WTF::Vector.17"* %35, %"class.std::__1::unique_ptr.20"* dereferenceable(8) %74) #9
  br label %89

89:                                               ; preds = %88, %78
  %90 = add nuw i32 %68, 1
  %91 = load i32, i32* %30, align 4
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %67, label %93

93:                                               ; preds = %89, %55
  %94 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %32, align 8
  %95 = icmp eq %"class.blink::InterpolableValue"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %93
  %97 = ptrtoint %"class.blink::InterpolableValue"* %94 to i64
  %98 = load i64, i64* %63, align 8
  %99 = call noalias i8* @malloc(i64 24) #9
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %32, align 8
  %100 = load i64, i64* %39, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %34, align 8
  %101 = bitcast i8* %99 to i64*
  store i64 %98, i64* %101, align 8
  %102 = getelementptr inbounds i8, i8* %99, i64 8
  %103 = bitcast i8* %102 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %99, i64 16
  %105 = bitcast i8* %104 to i64*
  store i64 %100, i64* %105, align 8
  %106 = ptrtoint i8* %99 to i64
  br label %124

107:                                              ; preds = %93
  %108 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %40, align 8
  %109 = icmp eq %"class.blink::NonInterpolableValue"* %108, null
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %32, align 8
  br label %134

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %108, i64 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %112, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %113) #9
  %114 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %112, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %124

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %112, i64 -2
  %119 = bitcast %"class.base::RefCounted.39"* %118 to %"class.blink::NonInterpolableValue"*
  %120 = bitcast %"class.base::RefCounted.39"* %118 to void (%"class.blink::NonInterpolableValue"*)***
  %121 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %121, i64 1
  %123 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %122, align 8
  call void %123(%"class.blink::NonInterpolableValue"* nonnull %119) #9
  br label %124

124:                                              ; preds = %96, %117, %111
  %125 = phi i32 [ 0, %111 ], [ 0, %117 ], [ 1, %96 ]
  %126 = phi i64 [ %45, %111 ], [ %45, %117 ], [ %106, %96 ]
  %127 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %32, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %32, align 8
  %128 = icmp eq %"class.blink::InterpolableValue"* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %124
  %130 = bitcast %"class.blink::InterpolableValue"* %127 to void (%"class.blink::InterpolableValue"*)***
  %131 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %131, i64 1
  %133 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %132, align 8
  call void %133(%"class.blink::InterpolableValue"* nonnull %127) #9
  br label %134

134:                                              ; preds = %110, %124, %129
  %135 = phi i64 [ %45, %110 ], [ %126, %124 ], [ %126, %129 ]
  %136 = phi i32 [ 0, %110 ], [ %125, %124 ], [ %125, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  %137 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %29, align 8
  %138 = icmp eq %"class.std::__1::unique_ptr.20"* %137, null
  br i1 %138, label %163, label %139, !prof !4

139:                                              ; preds = %134
  %140 = bitcast %"class.std::__1::unique_ptr.20"* %137 to i8*
  %141 = load i32, i32* %30, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %161, label %143, !prof !3

143:                                              ; preds = %139
  %144 = zext i32 %141 to i64
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %137, i64 %144
  br label %146

146:                                              ; preds = %156, %143
  %147 = phi %"class.std::__1::unique_ptr.20"* [ %157, %156 ], [ %137, %143 ]
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %148, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %148, align 8
  %150 = icmp eq %"class.blink::InterpolationType::ConversionChecker"* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %146
  %152 = bitcast %"class.blink::InterpolationType::ConversionChecker"* %149 to void (%"class.blink::InterpolationType::ConversionChecker"*)***
  %153 = load void (%"class.blink::InterpolationType::ConversionChecker"*)**, void (%"class.blink::InterpolationType::ConversionChecker"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %153, i64 1
  %155 = load void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %154, align 8
  call void %155(%"class.blink::InterpolationType::ConversionChecker"* nonnull %149) #9
  br label %156

156:                                              ; preds = %151, %146
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %147, i64 1
  %158 = icmp eq %"class.std::__1::unique_ptr.20"* %157, %145
  br i1 %158, label %159, label %146

159:                                              ; preds = %156
  store i32 0, i32* %30, align 4
  %160 = load i8*, i8** %41, align 8
  br label %161

161:                                              ; preds = %159, %139
  %162 = phi i8* [ %160, %159 ], [ %140, %139 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %162) #9
  store %"class.std::__1::unique_ptr.20"* null, %"class.std::__1::unique_ptr.20"** %29, align 8
  br label %163

163:                                              ; preds = %161, %134
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  %164 = icmp eq i32 %136, 0
  br i1 %164, label %165, label %169

165:                                              ; preds = %50, %163
  %166 = phi i64 [ %135, %163 ], [ %45, %50 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 1
  %168 = icmp eq %"class.std::__1::unique_ptr"* %167, %24
  br i1 %168, label %169, label %43

169:                                              ; preds = %165, %163, %16, %12
  %170 = phi i64 [ 0, %12 ], [ 0, %16 ], [ 0, %165 ], [ %135, %163 ]
  %171 = inttoptr i64 %170 to %"class.blink::TypedInterpolationValue"*
  ret %"class.blink::TypedInterpolationValue"* %171
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"class.blink::InvalidatableInterpolation"* nocapture readonly, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::InterpolationValue", align 8
  %4 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 2
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %77, label %13

13:                                               ; preds = %2
  %14 = bitcast %"struct.blink::InterpolationValue"* %3 to i8*
  %15 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %class.scoped_refptr.37, %class.scoped_refptr.37* %16, i64 0, i32 0
  %18 = bitcast %class.scoped_refptr.37* %16 to i64*
  %19 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  %20 = bitcast %"struct.blink::InterpolationValue"* %3 to i8*
  br label %25

21:                                               ; preds = %51, %75
  %22 = phi i64 [ %27, %51 ], [ %67, %75 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %24 = icmp eq %"class.std::__1::unique_ptr"* %23, %11
  br i1 %24, label %77, label %25

25:                                               ; preds = %13, %21
  %26 = phi %"class.std::__1::unique_ptr"* [ %7, %13 ], [ %23, %21 ]
  %27 = phi i64 [ undef, %13 ], [ %22, %21 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %29 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %28, align 8
  %30 = bitcast %"class.blink::InterpolationType"* %29 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::InterpolationEnvironment"*)***
  %31 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::InterpolationEnvironment"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::InterpolationEnvironment"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::InterpolationEnvironment"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::InterpolationEnvironment"*)** %31, i64 5
  %33 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::InterpolationEnvironment"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::InterpolationEnvironment"*)** %32, align 8
  call void %33(%"struct.blink::InterpolationValue"* nonnull sret %3, %"class.blink::InterpolationType"* %29, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1) #9
  %34 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %15, align 8
  %35 = icmp eq %"class.blink::InterpolableValue"* %34, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %25
  %37 = ptrtoint %"class.blink::InterpolableValue"* %34 to i64
  %38 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = call noalias i8* @malloc(i64 24) #9
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %15, align 8
  %41 = load i64, i64* %18, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %17, align 8
  %42 = bitcast i8* %40 to i64*
  store i64 %39, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %40, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %40, i64 16
  %46 = bitcast i8* %45 to i64*
  store i64 %41, i64* %46, align 8
  %47 = ptrtoint i8* %40 to i64
  br label %65

48:                                               ; preds = %25
  %49 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %19, align 8
  %50 = icmp eq %"class.blink::NonInterpolableValue"* %49, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %21

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %49, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %53, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #9
  %55 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %53, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %53, i64 -2
  %60 = bitcast %"class.base::RefCounted.39"* %59 to %"class.blink::NonInterpolableValue"*
  %61 = bitcast %"class.base::RefCounted.39"* %59 to void (%"class.blink::NonInterpolableValue"*)***
  %62 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %62, i64 1
  %64 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %63, align 8
  call void %64(%"class.blink::NonInterpolableValue"* nonnull %60) #9
  br label %65

65:                                               ; preds = %36, %58, %52
  %66 = phi i32 [ 0, %52 ], [ 0, %58 ], [ 1, %36 ]
  %67 = phi i64 [ %27, %52 ], [ %27, %58 ], [ %47, %36 ]
  %68 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %15, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %15, align 8
  %69 = icmp eq %"class.blink::InterpolableValue"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::InterpolableValue"* %68 to void (%"class.blink::InterpolableValue"*)***
  %72 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %72, i64 1
  %74 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %73, align 8
  call void %74(%"class.blink::InterpolableValue"* nonnull %68) #9
  br label %75

75:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  %76 = icmp eq i32 %66, 0
  br i1 %76, label %21, label %77

77:                                               ; preds = %75, %21, %2
  %78 = phi i64 [ 0, %2 ], [ 0, %21 ], [ %67, %75 ]
  %79 = inttoptr i64 %78 to %"class.blink::TypedInterpolationValue"*
  ret %"class.blink::TypedInterpolationValue"* %79
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink26InvalidatableInterpolation24DependsOnUnderlyingValueEv(%"class.blink::InvalidatableInterpolation"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %9 = load double, double* %8, align 8
  %10 = fcmp une double %9, 1.000000e+00
  br i1 %10, label %21, label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %19 = load double, double* %18, align 8
  %20 = fcmp une double %19, 0.000000e+00
  br label %21

21:                                               ; preds = %11, %17, %7
  %22 = phi i1 [ true, %7 ], [ false, %11 ], [ %20, %17 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink26InvalidatableInterpolation23IsNeutralKeyframeActiveEv(%"class.blink::InvalidatableInterpolation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %2, align 8
  %4 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %3 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %5 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %5, i64 2
  %7 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Keyframe::PropertySpecificKeyframe"* %3) #9
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %11 = load double, double* %10, align 8
  %12 = fcmp une double %11, 1.000000e+00
  br i1 %12, label %25, label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %14, align 8
  %16 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %15 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %17 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %17, i64 2
  %19 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::Keyframe::PropertySpecificKeyframe"* %15) #9
  br i1 %20, label %21, label %25

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %23 = load double, double* %22, align 8
  %24 = fcmp une double %23, 0.000000e+00
  br label %25

25:                                               ; preds = %13, %21, %9
  %26 = phi i1 [ true, %9 ], [ false, %13 ], [ %24, %21 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink26InvalidatableInterpolation22IsConversionCacheValidERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* nocapture readonly, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"class.blink::UnderlyingValueOwner"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %74, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %8, align 8
  %10 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %9 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %11 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %11, i64 2
  %13 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::Keyframe::PropertySpecificKeyframe"* %9) #9
  br i1 %14, label %15, label %19

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %17 = load double, double* %16, align 8
  %18 = fcmp une double %17, 1.000000e+00
  br i1 %18, label %31, label %19

19:                                               ; preds = %15, %7
  %20 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %20, align 8
  %22 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %21 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %23 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %23, i64 2
  %25 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::Keyframe::PropertySpecificKeyframe"* %21) #9
  br i1 %26, label %27, label %53

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %29 = load double, double* %28, align 8
  %30 = fcmp une double %29, 0.000000e+00
  br i1 %30, label %31, label %53

31:                                               ; preds = %15, %27
  %32 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %33 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %32, align 8
  %34 = icmp eq %"class.blink::PrimitiveInterpolation"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.blink::PrimitiveInterpolation"* %33 to i1 (%"class.blink::PrimitiveInterpolation"*)***
  %37 = load i1 (%"class.blink::PrimitiveInterpolation"*)**, i1 (%"class.blink::PrimitiveInterpolation"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::PrimitiveInterpolation"*)*, i1 (%"class.blink::PrimitiveInterpolation"*)** %37, i64 4
  %39 = load i1 (%"class.blink::PrimitiveInterpolation"*)*, i1 (%"class.blink::PrimitiveInterpolation"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::PrimitiveInterpolation"* nonnull %33) #9
  br i1 %40, label %74, label %41

41:                                               ; preds = %31, %35
  %42 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %2, i64 0, i32 1
  %43 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %42, align 8
  %44 = icmp eq %"class.blink::InterpolationType"* %43, null
  br i1 %44, label %74, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %47 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %46, align 8
  %48 = icmp eq %"class.blink::TypedInterpolationValue"* %47, null
  br i1 %48, label %74, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %47, i64 0, i32 0
  %51 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %50, align 8
  %52 = icmp eq %"class.blink::InterpolationType"* %51, %43
  br i1 %52, label %53, label %74

53:                                               ; preds = %49, %19, %27
  %54 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %55, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %74, label %63

61:                                               ; preds = %63
  %62 = icmp eq %"class.std::__1::unique_ptr.20"* %73, %59
  br i1 %62, label %74, label %63

63:                                               ; preds = %53, %61
  %64 = phi %"class.std::__1::unique_ptr.20"* [ %73, %61 ], [ %55, %53 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %65, align 8
  %67 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* %2) #9
  %68 = bitcast %"class.blink::InterpolationType::ConversionChecker"* %66 to i1 (%"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)***
  %69 = load i1 (%"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)** %69, i64 2
  %71 = load i1 (%"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)** %70, align 8
  %72 = tail call zeroext i1 %71(%"class.blink::InterpolationType::ConversionChecker"* %66, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"struct.blink::InterpolationValue"* dereferenceable(16) %67) #9
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %64, i64 1
  br i1 %72, label %61, label %74

74:                                               ; preds = %63, %61, %53, %49, %45, %41, %3, %35
  %75 = phi i1 [ false, %41 ], [ false, %45 ], [ false, %49 ], [ false, %35 ], [ false, %3 ], [ true, %53 ], [ false, %63 ], [ true, %61 ]
  ret i1 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation21EnsureValidConversionERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"class.blink::UnderlyingValueOwner"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK5blink26InvalidatableInterpolation22IsConversionCacheValidERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* %0, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"class.blink::UnderlyingValueOwner"* dereferenceable(40) %2)
  br i1 %4, label %196, label %5

5:                                                ; preds = %3
  tail call void @_ZNK5blink26InvalidatableInterpolation20ClearConversionCacheEv(%"class.blink::InvalidatableInterpolation"* %0)
  %6 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %7 = load double, double* %6, align 8
  %8 = fcmp oeq double %7, 0.000000e+00
  br i1 %8, label %9, label %47

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %10, align 8
  %12 = tail call %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation21ConvertSingleKeyframeERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* %0, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %11, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"class.blink::UnderlyingValueOwner"* dereferenceable(40) %2)
  %13 = ptrtoint %"class.blink::TypedInterpolationValue"* %12 to i64
  %14 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.28"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.blink::TypedInterpolationValue"* %16, null
  br i1 %18, label %194, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %16, i64 0, i32 1, i32 1, i32 0
  %21 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %20, align 8
  %22 = icmp eq %"class.blink::NonInterpolableValue"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %21, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %24, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #9
  %26 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %24, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %24, i64 -2
  %31 = bitcast %"class.base::RefCounted.39"* %30 to %"class.blink::NonInterpolableValue"*
  %32 = bitcast %"class.base::RefCounted.39"* %30 to void (%"class.blink::NonInterpolableValue"*)***
  %33 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %33, i64 1
  %35 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %34, align 8
  tail call void %35(%"class.blink::NonInterpolableValue"* nonnull %31) #9
  br label %36

36:                                               ; preds = %29, %23, %19
  %37 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %37, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %37, align 8
  %39 = icmp eq %"class.blink::InterpolableValue"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::InterpolableValue"* %38 to void (%"class.blink::InterpolableValue"*)***
  %42 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %42, i64 1
  %44 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %43, align 8
  tail call void %44(%"class.blink::InterpolableValue"* nonnull %38) #9
  br label %45

45:                                               ; preds = %40, %36
  %46 = bitcast %"class.blink::TypedInterpolationValue"* %16 to i8*
  tail call void @free(i8* %46) #9
  br label %194

47:                                               ; preds = %5
  %48 = fcmp oeq double %7, 1.000000e+00
  br i1 %48, label %49, label %87

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %51 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %50, align 8
  %52 = tail call %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation21ConvertSingleKeyframeERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* %0, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %51, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"class.blink::UnderlyingValueOwner"* dereferenceable(40) %2)
  %53 = ptrtoint %"class.blink::TypedInterpolationValue"* %52 to i64
  %54 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.28"* %54 to i64*
  store i64 %53, i64* %57, align 8
  %58 = icmp eq %"class.blink::TypedInterpolationValue"* %56, null
  br i1 %58, label %194, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %56, i64 0, i32 1, i32 1, i32 0
  %61 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %60, align 8
  %62 = icmp eq %"class.blink::NonInterpolableValue"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %61, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %64, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %65) #9
  %66 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %64, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %64, i64 -2
  %71 = bitcast %"class.base::RefCounted.39"* %70 to %"class.blink::NonInterpolableValue"*
  %72 = bitcast %"class.base::RefCounted.39"* %70 to void (%"class.blink::NonInterpolableValue"*)***
  %73 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %73, i64 1
  %75 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %74, align 8
  tail call void %75(%"class.blink::NonInterpolableValue"* nonnull %71) #9
  br label %76

76:                                               ; preds = %69, %63, %59
  %77 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %56, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %77, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %77, align 8
  %79 = icmp eq %"class.blink::InterpolableValue"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.blink::InterpolableValue"* %78 to void (%"class.blink::InterpolableValue"*)***
  %82 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %82, i64 1
  %84 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %83, align 8
  tail call void %84(%"class.blink::InterpolableValue"* nonnull %78) #9
  br label %85

85:                                               ; preds = %80, %76
  %86 = bitcast %"class.blink::TypedInterpolationValue"* %56 to i8*
  tail call void @free(i8* %86) #9
  br label %194

87:                                               ; preds = %47
  %88 = tail call %"class.blink::PairwisePrimitiveInterpolation"* @_ZNK5blink26InvalidatableInterpolation20MaybeConvertPairwiseERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* %0, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"class.blink::UnderlyingValueOwner"* dereferenceable(40) %2)
  %89 = icmp eq %"class.blink::PairwisePrimitiveInterpolation"* %88, null
  br i1 %89, label %159, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %88, i64 0, i32 1
  %92 = bitcast %"class.blink::InterpolationType"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %88, i64 0, i32 2, i32 0, i32 0, i32 0
  %95 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %94, align 8
  %96 = bitcast %"class.blink::InterpolableValue"* %95 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %97 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %96, align 8
  %98 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %97, i64 16
  %99 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %98, align 8
  %100 = tail call %"class.blink::InterpolableValue"* %99(%"class.blink::InterpolableValue"* %95) #9
  %101 = ptrtoint %"class.blink::InterpolableValue"* %100 to i64
  %102 = tail call noalias i8* @malloc(i64 24) #9
  %103 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %88, i64 0, i32 4, i32 0
  %104 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %103, align 8
  %105 = icmp eq %"class.blink::NonInterpolableValue"* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %90
  %107 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %104, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %107) #9
  br label %108

108:                                              ; preds = %90, %106
  %109 = ptrtoint %"class.blink::NonInterpolableValue"* %104 to i64
  %110 = bitcast i8* %102 to i64*
  store i64 %93, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %102, i64 8
  %112 = bitcast i8* %111 to i64*
  store i64 %101, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %102, i64 16
  %114 = bitcast i8* %113 to i64*
  store i64 %109, i64* %114, align 8
  %115 = ptrtoint i8* %102 to i64
  %116 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.28"* %116 to i64*
  store i64 %115, i64* %119, align 8
  %120 = icmp eq %"class.blink::TypedInterpolationValue"* %118, null
  br i1 %120, label %149, label %121

121:                                              ; preds = %108
  %122 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %118, i64 0, i32 1, i32 1, i32 0
  %123 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %122, align 8
  %124 = icmp eq %"class.blink::NonInterpolableValue"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %123, i64 0, i32 1, i32 0
  %127 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %126, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %127) #9
  %128 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %126, i64 0, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %138

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %126, i64 -2
  %133 = bitcast %"class.base::RefCounted.39"* %132 to %"class.blink::NonInterpolableValue"*
  %134 = bitcast %"class.base::RefCounted.39"* %132 to void (%"class.blink::NonInterpolableValue"*)***
  %135 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %135, i64 1
  %137 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %136, align 8
  tail call void %137(%"class.blink::NonInterpolableValue"* nonnull %133) #9
  br label %138

138:                                              ; preds = %131, %125, %121
  %139 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %118, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %139, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %139, align 8
  %141 = icmp eq %"class.blink::InterpolableValue"* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %138
  %143 = bitcast %"class.blink::InterpolableValue"* %140 to void (%"class.blink::InterpolableValue"*)***
  %144 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %144, i64 1
  %146 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %145, align 8
  tail call void %146(%"class.blink::InterpolableValue"* nonnull %140) #9
  br label %147

147:                                              ; preds = %142, %138
  %148 = bitcast %"class.blink::TypedInterpolationValue"* %118 to i8*
  tail call void @free(i8* %148) #9
  br label %149

149:                                              ; preds = %147, %108
  %150 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %88, i64 0, i32 0
  %151 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %152 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %151, align 8
  store %"class.blink::PrimitiveInterpolation"* %150, %"class.blink::PrimitiveInterpolation"** %151, align 8
  %153 = icmp eq %"class.blink::PrimitiveInterpolation"* %152, null
  br i1 %153, label %185, label %154

154:                                              ; preds = %149
  %155 = bitcast %"class.blink::PrimitiveInterpolation"* %152 to void (%"class.blink::PrimitiveInterpolation"*)***
  %156 = load void (%"class.blink::PrimitiveInterpolation"*)**, void (%"class.blink::PrimitiveInterpolation"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.blink::PrimitiveInterpolation"*)*, void (%"class.blink::PrimitiveInterpolation"*)** %156, i64 1
  %158 = load void (%"class.blink::PrimitiveInterpolation"*)*, void (%"class.blink::PrimitiveInterpolation"*)** %157, align 8
  tail call void %158(%"class.blink::PrimitiveInterpolation"* nonnull %152) #9
  br label %185

159:                                              ; preds = %87
  %160 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %161 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %160, align 8
  %162 = tail call %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation21ConvertSingleKeyframeERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* %0, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %161, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"class.blink::UnderlyingValueOwner"* dereferenceable(40) %2)
  %163 = ptrtoint %"class.blink::TypedInterpolationValue"* %162 to i64
  %164 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %165 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %164, align 8
  %166 = tail call %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation21ConvertSingleKeyframeERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* %0, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %165, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"class.blink::UnderlyingValueOwner"* dereferenceable(40) %2)
  %167 = ptrtoint %"class.blink::TypedInterpolationValue"* %166 to i64
  %168 = tail call noalias i8* @malloc(i64 32) #9
  %169 = bitcast i8* %168 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink26FlipPrimitiveInterpolationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %169, align 8
  %170 = getelementptr inbounds i8, i8* %168, i64 8
  %171 = bitcast i8* %170 to i64*
  store i64 %163, i64* %171, align 8
  %172 = getelementptr inbounds i8, i8* %168, i64 16
  %173 = bitcast i8* %172 to i64*
  store i64 %167, i64* %173, align 8
  %174 = getelementptr inbounds i8, i8* %168, i64 24
  %175 = bitcast i8* %174 to double*
  store double 0x7FF8000000000000, double* %175, align 8
  %176 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %177 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %176, align 8
  %178 = bitcast %"class.blink::PrimitiveInterpolation"** %176 to i8**
  store i8* %168, i8** %178, align 8
  %179 = icmp eq %"class.blink::PrimitiveInterpolation"* %177, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %159
  %181 = bitcast %"class.blink::PrimitiveInterpolation"* %177 to void (%"class.blink::PrimitiveInterpolation"*)***
  %182 = load void (%"class.blink::PrimitiveInterpolation"*)**, void (%"class.blink::PrimitiveInterpolation"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.blink::PrimitiveInterpolation"*)*, void (%"class.blink::PrimitiveInterpolation"*)** %182, i64 1
  %184 = load void (%"class.blink::PrimitiveInterpolation"*)*, void (%"class.blink::PrimitiveInterpolation"*)** %183, align 8
  tail call void %184(%"class.blink::PrimitiveInterpolation"* nonnull %177) #9
  br label %185

185:                                              ; preds = %149, %154, %180, %159
  %186 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %187 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %186, align 8
  %188 = load double, double* %6, align 8
  %189 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10
  %190 = bitcast %"class.blink::PrimitiveInterpolation"* %187 to void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)***
  %191 = load void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)**, void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)*, void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)** %191, i64 2
  %193 = load void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)*, void (%"class.blink::PrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"*)** %192, align 8
  tail call void %193(%"class.blink::PrimitiveInterpolation"* %187, double %188, %"class.std::__1::unique_ptr.28"* dereferenceable(8) %189) #9
  br label %194

194:                                              ; preds = %49, %85, %9, %45, %185
  %195 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 7
  store i8 1, i8* %195, align 8
  br label %196

196:                                              ; preds = %3, %194
  %197 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %198 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %197, align 8
  ret %"class.blink::TypedInterpolationValue"* %198
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26InvalidatableInterpolation29EnsureValidInterpolationTypesERKNS_24InterpolationEnvironmentE(%"class.blink::InvalidatableInterpolation"*, %"class.blink::InterpolationEnvironment"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 0, i32 1
  %4 = load %"class.blink::InterpolationTypesMap"*, %"class.blink::InterpolationTypesMap"** %3, align 8
  %5 = bitcast %"class.blink::InterpolationTypesMap"* %4 to i64 (%"class.blink::InterpolationTypesMap"*)***
  %6 = load i64 (%"class.blink::InterpolationTypesMap"*)**, i64 (%"class.blink::InterpolationTypesMap"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.blink::InterpolationTypesMap"*)*, i64 (%"class.blink::InterpolationTypesMap"*)** %6, i64 1
  %8 = load i64 (%"class.blink::InterpolationTypesMap"*)*, i64 (%"class.blink::InterpolationTypesMap"*)** %7, align 8
  %9 = tail call i64 %8(%"class.blink::InterpolationTypesMap"* %4) #9
  %10 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 2
  %11 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %10, align 8
  %12 = icmp eq %"class.WTF::Vector"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %9
  br i1 %16, label %28, label %17

17:                                               ; preds = %2, %13
  %18 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::InterpolationTypesMap"* %4 to %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)***
  %20 = load %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)**, %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)*** %19, align 8
  %21 = load %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)*, %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)** %20, align 8
  %22 = tail call dereferenceable(16) %"class.WTF::Vector"* %21(%"class.blink::InterpolationTypesMap"* %4, %"class.blink::PropertyHandle"* dereferenceable(24) %18) #9
  %23 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %10, align 8
  %24 = icmp eq %"class.WTF::Vector"* %23, %22
  br i1 %24, label %26, label %25

25:                                               ; preds = %17
  tail call void @_ZNK5blink26InvalidatableInterpolation20ClearConversionCacheEv(%"class.blink::InvalidatableInterpolation"* %0)
  br label %26

26:                                               ; preds = %17, %25
  store %"class.WTF::Vector"* %22, %"class.WTF::Vector"** %10, align 8
  %27 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 3
  store i64 %9, i64* %27, align 8
  br label %28

28:                                               ; preds = %13, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink26InvalidatableInterpolation20SetFlagIfInheritUsedERNS_24InterpolationEnvironmentE(%"class.blink::InvalidatableInterpolation"* nocapture readonly, %"class.blink::InterpolationEnvironment"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -2
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %7, label %41

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %9 = bitcast %"class.blink::InterpolationEnvironment"* %8 to %"class.blink::StyleResolverState"**
  %10 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %10, i64 0, i32 4, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = icmp eq %"class.blink::ComputedStyle"* %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %16 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %15 to %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"**
  %17 = load %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %20 to %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"**
  %22 = load %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %23, align 8
  %25 = icmp eq %"class.blink::CSSValue"* %19, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %19, i64 0, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 32
  br i1 %29, label %36, label %30

30:                                               ; preds = %14, %26
  %31 = icmp eq %"class.blink::CSSValue"* %24, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %24, i64 0, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 32
  br i1 %35, label %36, label %41

36:                                               ; preds = %32, %26
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8
  %40 = or i160 %39, 5192296858534827628530496329220096
  store i160 %40, i160* %38, align 8
  br label %41

41:                                               ; preds = %2, %7, %30, %36, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink26InvalidatableInterpolation18UnderlyingFractionEv(%"class.blink::InvalidatableInterpolation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 6
  %3 = load double, double* %2, align 8
  %4 = fcmp oeq double %3, 0.000000e+00
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  %11 = uitofp i1 %10 to double
  br label %41

12:                                               ; preds = %1
  %13 = fcmp oeq double %3, 1.000000e+00
  br i1 %13, label %14, label %21

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 0
  %20 = uitofp i1 %19 to double
  br label %41

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4, i32 0, i32 0
  %25 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %25, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 0
  %29 = uitofp i1 %28 to double
  %30 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %31, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = icmp ne i32 %33, 0
  %35 = uitofp i1 %34 to double
  %36 = bitcast %"class.blink::PrimitiveInterpolation"* %23 to double (%"class.blink::PrimitiveInterpolation"*, double, double, double)***
  %37 = load double (%"class.blink::PrimitiveInterpolation"*, double, double, double)**, double (%"class.blink::PrimitiveInterpolation"*, double, double, double)*** %36, align 8
  %38 = getelementptr inbounds double (%"class.blink::PrimitiveInterpolation"*, double, double, double)*, double (%"class.blink::PrimitiveInterpolation"*, double, double, double)** %37, i64 3
  %39 = load double (%"class.blink::PrimitiveInterpolation"*, double, double, double)*, double (%"class.blink::PrimitiveInterpolation"*, double, double, double)** %38, align 8
  %40 = tail call double %39(%"class.blink::PrimitiveInterpolation"* %23, double %29, double %35, double %3) #9
  br label %41

41:                                               ; preds = %21, %14, %5
  %42 = phi double [ %11, %5 ], [ %20, %14 ], [ %40, %21 ]
  ret double %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26InvalidatableInterpolation10ApplyStackERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEERNS_24InterpolationEnvironmentE(%"class.blink::HeapVector.1381"* dereferenceable(24), %"class.blink::InterpolationEnvironment"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::UnderlyingValueOwner", align 8
  %4 = bitcast %"class.blink::UnderlyingValueOwner"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::UnderlyingValueOwner", %"class.blink::UnderlyingValueOwner"* %3, i64 0, i32 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20UnderlyingValueOwnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = bitcast %"class.blink::InterpolationType"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #9
  %10 = getelementptr inbounds %"class.blink::HeapVector.1381", %"class.blink::HeapVector.1381"* %0, i64 0, i32 0
  %11 = tail call dereferenceable(8) %"class.blink::Member.1387"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1384"* %10, i32 0)
  %12 = bitcast %"class.blink::Member.1387"* %11 to %"class.blink::InvalidatableInterpolation"**
  %13 = load %"class.blink::InvalidatableInterpolation"*, %"class.blink::InvalidatableInterpolation"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 0, i32 1
  %15 = load %"class.blink::InterpolationTypesMap"*, %"class.blink::InterpolationTypesMap"** %14, align 8
  %16 = bitcast %"class.blink::InterpolationTypesMap"* %15 to i64 (%"class.blink::InterpolationTypesMap"*)***
  %17 = load i64 (%"class.blink::InterpolationTypesMap"*)**, i64 (%"class.blink::InterpolationTypesMap"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.blink::InterpolationTypesMap"*)*, i64 (%"class.blink::InterpolationTypesMap"*)** %17, i64 1
  %19 = load i64 (%"class.blink::InterpolationTypesMap"*)*, i64 (%"class.blink::InterpolationTypesMap"*)** %18, align 8
  %20 = tail call i64 %19(%"class.blink::InterpolationTypesMap"* %15) #9
  %21 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 2
  %22 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %21, align 8
  %23 = icmp eq %"class.WTF::Vector"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, %20
  br i1 %27, label %39, label %28

28:                                               ; preds = %24, %2
  %29 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 1
  %30 = bitcast %"class.blink::InterpolationTypesMap"* %15 to %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)***
  %31 = load %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)**, %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)*** %30, align 8
  %32 = load %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)*, %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)** %31, align 8
  %33 = tail call dereferenceable(16) %"class.WTF::Vector"* %32(%"class.blink::InterpolationTypesMap"* %15, %"class.blink::PropertyHandle"* dereferenceable(24) %29) #9
  %34 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %21, align 8
  %35 = icmp eq %"class.WTF::Vector"* %34, %33
  br i1 %35, label %37, label %36

36:                                               ; preds = %28
  tail call void @_ZNK5blink26InvalidatableInterpolation20ClearConversionCacheEv(%"class.blink::InvalidatableInterpolation"* %13) #9
  br label %37

37:                                               ; preds = %36, %28
  store %"class.WTF::Vector"* %33, %"class.WTF::Vector"** %21, align 8
  %38 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 3
  store i64 %20, i64* %38, align 8
  br label %39

39:                                               ; preds = %24, %37
  %40 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 4, i32 0, i32 0
  %41 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %41, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 6
  %47 = load double, double* %46, align 8
  %48 = fcmp une double %47, 1.000000e+00
  br i1 %48, label %59, label %49

49:                                               ; preds = %45, %39
  %50 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 5, i32 0, i32 0
  %51 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %51, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 6
  %57 = load double, double* %56, align 8
  %58 = fcmp une double %57, 0.000000e+00
  br i1 %58, label %59, label %61

59:                                               ; preds = %45, %55
  %60 = tail call %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"class.blink::InvalidatableInterpolation"* %13, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1)
  call void @_ZN5blink20UnderlyingValueOwner3SetENSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE(%"class.blink::UnderlyingValueOwner"* nonnull %3, %"class.blink::TypedInterpolationValue"* %60) #9
  br label %117

61:                                               ; preds = %49, %55
  %62 = call %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation21EnsureValidConversionERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* %13, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"class.blink::UnderlyingValueOwner"* nonnull dereferenceable(40) %3)
  %63 = getelementptr inbounds %"class.blink::HeapVector.1381", %"class.blink::HeapVector.1381"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %116

66:                                               ; preds = %61
  %67 = icmp eq %"class.blink::TypedInterpolationValue"* %62, null
  br i1 %67, label %275, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %13, i64 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, -2
  %72 = icmp ult i32 %71, 3
  br i1 %72, label %73, label %105

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %75 = bitcast %"class.blink::InterpolationEnvironment"* %74 to %"class.blink::StyleResolverState"**
  %76 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %76, i64 0, i32 4, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = icmp eq %"class.blink::ComputedStyle"* %78, null
  br i1 %79, label %105, label %80

80:                                               ; preds = %73
  %81 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %40 to %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"**
  %82 = load %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %82, i64 0, i32 1, i32 0, i32 0
  %84 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %83, align 8
  %85 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %50 to %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"**
  %86 = load %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %86, i64 0, i32 1, i32 0, i32 0
  %88 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %87, align 8
  %89 = icmp eq %"class.blink::CSSValue"* %84, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %84, i64 0, i32 2
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %92, 32
  br i1 %93, label %100, label %94

94:                                               ; preds = %90, %80
  %95 = icmp eq %"class.blink::CSSValue"* %88, null
  br i1 %95, label %105, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %88, i64 0, i32 2
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 32
  br i1 %99, label %100, label %105

100:                                              ; preds = %96, %90
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8
  %104 = or i160 %103, 5192296858534827628530496329220096
  store i160 %104, i160* %102, align 8
  br label %105

105:                                              ; preds = %68, %73, %94, %96, %100
  %106 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %62, i64 0, i32 0
  %107 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %62, i64 0, i32 1, i32 1, i32 0
  %111 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %110, align 8
  %112 = bitcast %"class.blink::InterpolationType"* %107 to void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)***
  %113 = load void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)**, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)** %113, i64 7
  %115 = load void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)** %114, align 8
  call void %115(%"class.blink::InterpolationType"* %107, %"class.blink::InterpolableValue"* dereferenceable(8) %109, %"class.blink::NonInterpolableValue"* %111, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1) #9
  br label %275

116:                                              ; preds = %61
  call void @_ZN5blink20UnderlyingValueOwner3SetEPKNS_23TypedInterpolationValueE(%"class.blink::UnderlyingValueOwner"* nonnull %3, %"class.blink::TypedInterpolationValue"* %62) #9
  br label %117

117:                                              ; preds = %116, %59
  %118 = phi i32 [ 0, %59 ], [ 1, %116 ]
  %119 = getelementptr inbounds %"class.blink::HeapVector.1381", %"class.blink::HeapVector.1381"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp ult i32 %118, %120
  br i1 %121, label %122, label %275

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %124 = bitcast %"class.blink::InterpolationEnvironment"* %123 to %"class.blink::StyleResolverState"**
  br label %128

125:                                              ; preds = %256
  %126 = and i8 %257, 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %275, label %261

128:                                              ; preds = %122, %256
  %129 = phi i32 [ %118, %122 ], [ %258, %256 ]
  %130 = phi i8 [ 0, %122 ], [ %257, %256 ]
  %131 = call dereferenceable(8) %"class.blink::Member.1387"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1384"* %10, i32 %129)
  %132 = bitcast %"class.blink::Member.1387"* %131 to %"class.blink::InvalidatableInterpolation"**
  %133 = load %"class.blink::InvalidatableInterpolation"*, %"class.blink::InvalidatableInterpolation"** %132, align 8
  %134 = load %"class.blink::InterpolationTypesMap"*, %"class.blink::InterpolationTypesMap"** %14, align 8
  %135 = bitcast %"class.blink::InterpolationTypesMap"* %134 to i64 (%"class.blink::InterpolationTypesMap"*)***
  %136 = load i64 (%"class.blink::InterpolationTypesMap"*)**, i64 (%"class.blink::InterpolationTypesMap"*)*** %135, align 8
  %137 = getelementptr inbounds i64 (%"class.blink::InterpolationTypesMap"*)*, i64 (%"class.blink::InterpolationTypesMap"*)** %136, i64 1
  %138 = load i64 (%"class.blink::InterpolationTypesMap"*)*, i64 (%"class.blink::InterpolationTypesMap"*)** %137, align 8
  %139 = call i64 %138(%"class.blink::InterpolationTypesMap"* %134) #9
  %140 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 2
  %141 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %140, align 8
  %142 = icmp eq %"class.WTF::Vector"* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %128
  %144 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 3
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, %139
  br i1 %146, label %158, label %147

147:                                              ; preds = %143, %128
  %148 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 1
  %149 = bitcast %"class.blink::InterpolationTypesMap"* %134 to %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)***
  %150 = load %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)**, %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)*** %149, align 8
  %151 = load %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)*, %"class.WTF::Vector"* (%"class.blink::InterpolationTypesMap"*, %"class.blink::PropertyHandle"*)** %150, align 8
  %152 = call dereferenceable(16) %"class.WTF::Vector"* %151(%"class.blink::InterpolationTypesMap"* %134, %"class.blink::PropertyHandle"* dereferenceable(24) %148) #9
  %153 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %140, align 8
  %154 = icmp eq %"class.WTF::Vector"* %153, %152
  br i1 %154, label %156, label %155

155:                                              ; preds = %147
  call void @_ZNK5blink26InvalidatableInterpolation20ClearConversionCacheEv(%"class.blink::InvalidatableInterpolation"* %133) #9
  br label %156

156:                                              ; preds = %155, %147
  store %"class.WTF::Vector"* %152, %"class.WTF::Vector"** %140, align 8
  %157 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 3
  store i64 %139, i64* %157, align 8
  br label %158

158:                                              ; preds = %143, %156
  %159 = call %"class.blink::TypedInterpolationValue"* @_ZNK5blink26InvalidatableInterpolation21EnsureValidConversionERKNS_24InterpolationEnvironmentERKNS_20UnderlyingValueOwnerE(%"class.blink::InvalidatableInterpolation"* %133, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1, %"class.blink::UnderlyingValueOwner"* nonnull dereferenceable(40) %3)
  %160 = icmp eq %"class.blink::TypedInterpolationValue"* %159, null
  br i1 %160, label %256, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 1, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = add i32 %163, -2
  %165 = icmp ult i32 %164, 3
  br i1 %165, label %166, label %198

166:                                              ; preds = %161
  %167 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %124, align 8
  %168 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %167, i64 0, i32 4, i32 0
  %169 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %168, align 8
  %170 = icmp eq %"class.blink::ComputedStyle"* %169, null
  br i1 %170, label %198, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 4, i32 0, i32 0
  %173 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %172 to %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"**
  %174 = load %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %174, i64 0, i32 1, i32 0, i32 0
  %176 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 5, i32 0, i32 0
  %178 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %177 to %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"**
  %179 = load %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %179, i64 0, i32 1, i32 0, i32 0
  %181 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %180, align 8
  %182 = icmp eq %"class.blink::CSSValue"* %176, null
  br i1 %182, label %187, label %183

183:                                              ; preds = %171
  %184 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %176, i64 0, i32 2
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 32
  br i1 %186, label %193, label %187

187:                                              ; preds = %183, %171
  %188 = icmp eq %"class.blink::CSSValue"* %181, null
  br i1 %188, label %198, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %181, i64 0, i32 2
  %191 = load i8, i8* %190, align 1
  %192 = icmp eq i8 %191, 32
  br i1 %192, label %193, label %198

193:                                              ; preds = %189, %183
  %194 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %169, i64 0, i32 0, i32 9
  %195 = bitcast [20 x i8]* %194 to i160*
  %196 = load i160, i160* %195, align 8
  %197 = or i160 %196, 5192296858534827628530496329220096
  store i160 %197, i160* %195, align 8
  br label %198

198:                                              ; preds = %161, %166, %187, %189, %193
  %199 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 6
  %200 = load double, double* %199, align 8
  %201 = fcmp oeq double %200, 0.000000e+00
  br i1 %201, label %202, label %209

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 4, i32 0, i32 0
  %204 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %204, i64 0, i32 3
  %206 = load i32, i32* %205, align 8
  %207 = icmp ne i32 %206, 0
  %208 = uitofp i1 %207 to double
  br label %238

209:                                              ; preds = %198
  %210 = fcmp oeq double %200, 1.000000e+00
  br i1 %210, label %211, label %218

211:                                              ; preds = %209
  %212 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 5, i32 0, i32 0
  %213 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %213, i64 0, i32 3
  %215 = load i32, i32* %214, align 8
  %216 = icmp ne i32 %215, 0
  %217 = uitofp i1 %216 to double
  br label %238

218:                                              ; preds = %209
  %219 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 8, i32 0, i32 0, i32 0
  %220 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 4, i32 0, i32 0
  %222 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %222, i64 0, i32 3
  %224 = load i32, i32* %223, align 8
  %225 = icmp ne i32 %224, 0
  %226 = uitofp i1 %225 to double
  %227 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %133, i64 0, i32 5, i32 0, i32 0
  %228 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %228, i64 0, i32 3
  %230 = load i32, i32* %229, align 8
  %231 = icmp ne i32 %230, 0
  %232 = uitofp i1 %231 to double
  %233 = bitcast %"class.blink::PrimitiveInterpolation"* %220 to double (%"class.blink::PrimitiveInterpolation"*, double, double, double)***
  %234 = load double (%"class.blink::PrimitiveInterpolation"*, double, double, double)**, double (%"class.blink::PrimitiveInterpolation"*, double, double, double)*** %233, align 8
  %235 = getelementptr inbounds double (%"class.blink::PrimitiveInterpolation"*, double, double, double)*, double (%"class.blink::PrimitiveInterpolation"*, double, double, double)** %234, i64 3
  %236 = load double (%"class.blink::PrimitiveInterpolation"*, double, double, double)*, double (%"class.blink::PrimitiveInterpolation"*, double, double, double)** %235, align 8
  %237 = call double %236(%"class.blink::PrimitiveInterpolation"* %220, double %226, double %232, double %200) #9
  br label %238

238:                                              ; preds = %202, %211, %218
  %239 = phi double [ %208, %202 ], [ %217, %211 ], [ %237, %218 ]
  %240 = fcmp oeq double %239, 0.000000e+00
  br i1 %240, label %248, label %241

241:                                              ; preds = %238
  %242 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %6, align 8
  %243 = icmp eq %"class.blink::InterpolationType"* %242, null
  br i1 %243, label %248, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %159, i64 0, i32 0
  %246 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %245, align 8
  %247 = icmp eq %"class.blink::InterpolationType"* %242, %246
  br i1 %247, label %249, label %248

248:                                              ; preds = %244, %241, %238
  call void @_ZN5blink20UnderlyingValueOwner3SetEPKNS_23TypedInterpolationValueE(%"class.blink::UnderlyingValueOwner"* nonnull %3, %"class.blink::TypedInterpolationValue"* nonnull %159) #9
  br label %256

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %159, i64 0, i32 1
  %251 = load double, double* %199, align 8
  %252 = bitcast %"class.blink::InterpolationType"* %242 to void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)***
  %253 = load void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)**, void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)*** %252, align 8
  %254 = getelementptr inbounds void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)*, void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)** %253, i64 6
  %255 = load void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)*, void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)** %254, align 8
  call void %255(%"class.blink::InterpolationType"* nonnull %242, %"class.blink::UnderlyingValueOwner"* nonnull dereferenceable(40) %3, double %239, %"struct.blink::InterpolationValue"* dereferenceable(16) %250, double %251) #9
  br label %256

256:                                              ; preds = %248, %249, %158
  %257 = phi i8 [ %130, %158 ], [ 1, %249 ], [ 1, %248 ]
  %258 = add nuw i32 %129, 1
  %259 = load i32, i32* %119, align 4
  %260 = icmp ult i32 %258, %259
  br i1 %260, label %128, label %125

261:                                              ; preds = %125
  %262 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %6, align 8
  %263 = icmp eq %"class.blink::InterpolationType"* %262, null
  br i1 %263, label %275, label %264

264:                                              ; preds = %261
  %265 = call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* nonnull %3) #9
  %266 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %265, i64 0, i32 0, i32 0, i32 0, i32 0
  %267 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %266, align 8
  %268 = call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* nonnull %3) #9
  %269 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %268, i64 0, i32 1, i32 0
  %270 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %269, align 8
  %271 = bitcast %"class.blink::InterpolationType"* %262 to void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)***
  %272 = load void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)**, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)** %272, i64 7
  %274 = load void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)*, void (%"class.blink::InterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)** %273, align 8
  call void %274(%"class.blink::InterpolationType"* nonnull %262, %"class.blink::InterpolableValue"* dereferenceable(8) %267, %"class.blink::NonInterpolableValue"* %270, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %1) #9
  br label %275

275:                                              ; preds = %117, %261, %105, %66, %264, %125
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20UnderlyingValueOwnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %276 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %8, align 8
  %277 = icmp eq %"class.blink::NonInterpolableValue"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %276, i64 0, i32 1, i32 0
  %280 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %279, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %280) #9
  %281 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %279, i64 0, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %291

284:                                              ; preds = %278
  %285 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %279, i64 -2
  %286 = bitcast %"class.base::RefCounted.39"* %285 to %"class.blink::NonInterpolableValue"*
  %287 = bitcast %"class.base::RefCounted.39"* %285 to void (%"class.blink::NonInterpolableValue"*)***
  %288 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %287, align 8
  %289 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %288, i64 1
  %290 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %289, align 8
  call void %290(%"class.blink::NonInterpolableValue"* nonnull %286) #9
  br label %291

291:                                              ; preds = %284, %278, %275
  %292 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %293 = icmp eq %"class.blink::InterpolableValue"* %292, null
  br i1 %293, label %299, label %294

294:                                              ; preds = %291
  %295 = bitcast %"class.blink::InterpolableValue"* %292 to void (%"class.blink::InterpolableValue"*)***
  %296 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %295, align 8
  %297 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %296, i64 1
  %298 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %297, align 8
  call void %298(%"class.blink::InterpolableValue"* nonnull %292) #9
  br label %299

299:                                              ; preds = %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1387"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1384"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1384", %"class.WTF::Vector.1384"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1387"*, %"class.blink::Member.1387"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1387", %"class.blink::Member.1387"* %24, i64 %25
  ret %"class.blink::Member.1387"* %26
}

declare void @_ZN5blink20UnderlyingValueOwner3SetENSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::TypedInterpolationValue"*) local_unnamed_addr #2

declare void @_ZN5blink20UnderlyingValueOwner3SetEPKNS_23TypedInterpolationValueE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::TypedInterpolationValue"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26InvalidatableInterpolationD2Ev(%"class.blink::InvalidatableInterpolation"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink26InvalidatableInterpolationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %3, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %3, align 8
  %5 = icmp eq %"class.blink::TypedInterpolationValue"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %7, align 8
  %9 = icmp eq %"class.blink::NonInterpolableValue"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #9
  %13 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.39"* %17 to %"class.blink::NonInterpolableValue"*
  %19 = bitcast %"class.base::RefCounted.39"* %17 to void (%"class.blink::NonInterpolableValue"*)***
  %20 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %20, i64 1
  %22 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %21, align 8
  tail call void %22(%"class.blink::NonInterpolableValue"* nonnull %18) #9
  br label %23

23:                                               ; preds = %16, %10, %6
  %24 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %26 = icmp eq %"class.blink::InterpolableValue"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::InterpolableValue"* %25 to void (%"class.blink::InterpolableValue"*)***
  %29 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %29, i64 1
  %31 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %30, align 8
  tail call void %31(%"class.blink::InterpolableValue"* nonnull %25) #9
  br label %32

32:                                               ; preds = %27, %23
  %33 = bitcast %"class.blink::TypedInterpolationValue"* %4 to i8*
  tail call void @free(i8* %33) #9
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9
  %36 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %36, align 8
  %38 = icmp eq %"class.std::__1::unique_ptr.20"* %37, null
  br i1 %38, label %65, label %39, !prof !4

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::unique_ptr.20"* %37 to i8*
  %41 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %63, label %44, !prof !3

44:                                               ; preds = %39
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %37, i64 %45
  br label %47

47:                                               ; preds = %57, %44
  %48 = phi %"class.std::__1::unique_ptr.20"* [ %58, %57 ], [ %37, %44 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %49, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %49, align 8
  %51 = icmp eq %"class.blink::InterpolationType::ConversionChecker"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::InterpolationType::ConversionChecker"* %50 to void (%"class.blink::InterpolationType::ConversionChecker"*)***
  %54 = load void (%"class.blink::InterpolationType::ConversionChecker"*)**, void (%"class.blink::InterpolationType::ConversionChecker"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %54, i64 1
  %56 = load void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %55, align 8
  tail call void %56(%"class.blink::InterpolationType::ConversionChecker"* nonnull %50) #9
  br label %57

57:                                               ; preds = %52, %47
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %48, i64 1
  %59 = icmp eq %"class.std::__1::unique_ptr.20"* %58, %46
  br i1 %59, label %60, label %47

60:                                               ; preds = %57
  store i32 0, i32* %41, align 4
  %61 = bitcast %"class.WTF::Vector.17"* %35 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %39
  %64 = phi i8* [ %62, %60 ], [ %40, %39 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #9
  store %"class.std::__1::unique_ptr.20"* null, %"class.std::__1::unique_ptr.20"** %36, align 8
  br label %65

65:                                               ; preds = %34, %63
  %66 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %67 = load %"class.blink::PrimitiveInterpolation"*, %"class.blink::PrimitiveInterpolation"** %66, align 8
  store %"class.blink::PrimitiveInterpolation"* null, %"class.blink::PrimitiveInterpolation"** %66, align 8
  %68 = icmp eq %"class.blink::PrimitiveInterpolation"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = bitcast %"class.blink::PrimitiveInterpolation"* %67 to void (%"class.blink::PrimitiveInterpolation"*)***
  %71 = load void (%"class.blink::PrimitiveInterpolation"*)**, void (%"class.blink::PrimitiveInterpolation"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::PrimitiveInterpolation"*)*, void (%"class.blink::PrimitiveInterpolation"*)** %71, i64 1
  %73 = load void (%"class.blink::PrimitiveInterpolation"*)*, void (%"class.blink::PrimitiveInterpolation"*)** %72, align 8
  tail call void %73(%"class.blink::PrimitiveInterpolation"* nonnull %67) #9
  br label %74

74:                                               ; preds = %65, %69
  %75 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %91

91:                                               ; preds = %74, %87, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26InvalidatableInterpolationD0Ev(%"class.blink::InvalidatableInterpolation"*) unnamed_addr #5 comdat align 2 {
  tail call void @_ZN5blink26InvalidatableInterpolationD2Ev(%"class.blink::InvalidatableInterpolation"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26InvalidatableInterpolation28IsInvalidatableInterpolationEv(%"class.blink::InvalidatableInterpolation"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13Interpolation25IsTransitionInterpolationEv(%"class.blink::Interpolation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::PropertyHandle"* @_ZNK5blink26InvalidatableInterpolation11GetPropertyEv(%"class.blink::InvalidatableInterpolation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 1
  ret %"class.blink::PropertyHandle"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink26InvalidatableInterpolation5TraceEPNS_7VisitorE(%"class.blink::InvalidatableInterpolation"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InvalidatableInterpolation", %"class.blink::InvalidatableInterpolation"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe::PropertySpecificKeyframe"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30PairwisePrimitiveInterpolationD2Ev(%"class.blink::PairwisePrimitiveInterpolation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink30PairwisePrimitiveInterpolationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::NonInterpolableValue"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.39"* %13 to %"class.blink::NonInterpolableValue"*
  %15 = bitcast %"class.base::RefCounted.39"* %13 to void (%"class.blink::NonInterpolableValue"*)***
  %16 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %16, i64 1
  %18 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %17, align 8
  tail call void %18(%"class.blink::NonInterpolableValue"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %20, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %20, align 8
  %22 = icmp eq %"class.blink::InterpolableValue"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::InterpolableValue"* %21 to void (%"class.blink::InterpolableValue"*)***
  %25 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %25, i64 1
  %27 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %26, align 8
  tail call void %27(%"class.blink::InterpolableValue"* nonnull %21) #9
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %29, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %29, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::InterpolableValue"* %30 to void (%"class.blink::InterpolableValue"*)***
  %34 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %34, i64 1
  %36 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %35, align 8
  tail call void %36(%"class.blink::InterpolableValue"* nonnull %30) #9
  br label %37

37:                                               ; preds = %28, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30PairwisePrimitiveInterpolationD0Ev(%"class.blink::PairwisePrimitiveInterpolation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink30PairwisePrimitiveInterpolationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::NonInterpolableValue"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.39"* %13 to %"class.blink::NonInterpolableValue"*
  %15 = bitcast %"class.base::RefCounted.39"* %13 to void (%"class.blink::NonInterpolableValue"*)***
  %16 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %16, i64 1
  %18 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %17, align 8
  tail call void %18(%"class.blink::NonInterpolableValue"* nonnull %14) #9
  br label %19

19:                                               ; preds = %12, %6, %1
  %20 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %20, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %20, align 8
  %22 = icmp eq %"class.blink::InterpolableValue"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::InterpolableValue"* %21 to void (%"class.blink::InterpolableValue"*)***
  %25 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %25, i64 1
  %27 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %26, align 8
  tail call void %27(%"class.blink::InterpolableValue"* nonnull %21) #9
  br label %28

28:                                               ; preds = %23, %19
  %29 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %29, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %29, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::InterpolableValue"* %30 to void (%"class.blink::InterpolableValue"*)***
  %34 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %34, i64 1
  %36 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %35, align 8
  tail call void %36(%"class.blink::InterpolableValue"* nonnull %30) #9
  br label %37

37:                                               ; preds = %28, %32
  %38 = bitcast %"class.blink::PairwisePrimitiveInterpolation"* %0 to i8*
  tail call void @free(i8* %38) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink30PairwisePrimitiveInterpolation16InterpolateValueEdRNSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE(%"class.blink::PairwisePrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::PairwisePrimitiveInterpolation", %"class.blink::PairwisePrimitiveInterpolation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %6, align 8
  %8 = bitcast %"class.blink::InterpolableValue"* %5 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %9, i64 15
  %11 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* %5, %"class.blink::InterpolableValue"* dereferenceable(8) %7) #9
  %12 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  %13 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %6, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %16, align 8
  %18 = bitcast %"class.blink::InterpolableValue"* %12 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %19 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %19, i64 2
  %21 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %20, align 8
  tail call void %21(%"class.blink::InterpolableValue"* %12, %"class.blink::InterpolableValue"* dereferenceable(8) %13, double %1, %"class.blink::InterpolableValue"* dereferenceable(8) %17) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink30PairwisePrimitiveInterpolation29InterpolateUnderlyingFractionEddd(%"class.blink::PairwisePrimitiveInterpolation"*, double, double, double) unnamed_addr #0 comdat align 2 {
  %5 = fsub double %2, %1
  %6 = fmul double %5, %3
  %7 = fadd double %6, %1
  ret double %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22PrimitiveInterpolation6IsFlipEv(%"class.blink::PrimitiveInterpolation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.20"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.20"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS8_EEvOT_(%"class.WTF::Vector.17"*, %"class.std::__1::unique_ptr.20"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.20"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.20"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.20"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.20"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.20"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.20"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.20"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.20"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.20"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.20"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.20"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.20"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.20"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.20"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.20"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.20"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.20"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.20"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26FlipPrimitiveInterpolationD2Ev(%"class.blink::FlipPrimitiveInterpolation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FlipPrimitiveInterpolation", %"class.blink::FlipPrimitiveInterpolation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink26FlipPrimitiveInterpolationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FlipPrimitiveInterpolation", %"class.blink::FlipPrimitiveInterpolation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %3, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %3, align 8
  %5 = icmp eq %"class.blink::TypedInterpolationValue"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %7, align 8
  %9 = icmp eq %"class.blink::NonInterpolableValue"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #9
  %13 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted.39"* %17 to %"class.blink::NonInterpolableValue"*
  %19 = bitcast %"class.base::RefCounted.39"* %17 to void (%"class.blink::NonInterpolableValue"*)***
  %20 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %20, i64 1
  %22 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %21, align 8
  tail call void %22(%"class.blink::NonInterpolableValue"* nonnull %18) #9
  br label %23

23:                                               ; preds = %16, %10, %6
  %24 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %26 = icmp eq %"class.blink::InterpolableValue"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::InterpolableValue"* %25 to void (%"class.blink::InterpolableValue"*)***
  %29 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %29, i64 1
  %31 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %30, align 8
  tail call void %31(%"class.blink::InterpolableValue"* nonnull %25) #9
  br label %32

32:                                               ; preds = %27, %23
  %33 = bitcast %"class.blink::TypedInterpolationValue"* %4 to i8*
  tail call void @free(i8* %33) #9
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::FlipPrimitiveInterpolation", %"class.blink::FlipPrimitiveInterpolation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %35, align 8
  store %"class.blink::TypedInterpolationValue"* null, %"class.blink::TypedInterpolationValue"** %35, align 8
  %37 = icmp eq %"class.blink::TypedInterpolationValue"* %36, null
  br i1 %37, label %66, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %36, i64 0, i32 1, i32 1, i32 0
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %39, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %43, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #9
  %45 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.39"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.39"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  tail call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #9
  br label %55

55:                                               ; preds = %48, %42, %38
  %56 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %56, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %56, align 8
  %58 = icmp eq %"class.blink::InterpolableValue"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.blink::InterpolableValue"* %57 to void (%"class.blink::InterpolableValue"*)***
  %61 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, i64 1
  %63 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %62, align 8
  tail call void %63(%"class.blink::InterpolableValue"* nonnull %57) #9
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.blink::TypedInterpolationValue"* %36 to i8*
  tail call void @free(i8* %65) #9
  br label %66

66:                                               ; preds = %34, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26FlipPrimitiveInterpolationD0Ev(%"class.blink::FlipPrimitiveInterpolation"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink26FlipPrimitiveInterpolationD2Ev(%"class.blink::FlipPrimitiveInterpolation"* %0) #9
  %2 = bitcast %"class.blink::FlipPrimitiveInterpolation"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink26FlipPrimitiveInterpolation16InterpolateValueEdRNSt3__110unique_ptrINS_23TypedInterpolationValueENS1_14default_deleteIS3_EEEE(%"class.blink::FlipPrimitiveInterpolation"*, double, %"class.std::__1::unique_ptr.28"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::FlipPrimitiveInterpolation", %"class.blink::FlipPrimitiveInterpolation"* %0, i64 0, i32 3
  %5 = load double, double* %4, align 8
  %6 = fcmp uno double %5, 0.000000e+00
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = fcmp uge double %1, 5.000000e-01
  %9 = fcmp olt double %5, 5.000000e-01
  %10 = xor i1 %8, %9
  br i1 %10, label %83, label %11

11:                                               ; preds = %7, %3
  %12 = fcmp olt double %1, 5.000000e-01
  %13 = getelementptr inbounds %"class.blink::FlipPrimitiveInterpolation", %"class.blink::FlipPrimitiveInterpolation"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::FlipPrimitiveInterpolation", %"class.blink::FlipPrimitiveInterpolation"* %0, i64 0, i32 2
  %15 = select i1 %12, %"class.std::__1::unique_ptr.28"* %13, %"class.std::__1::unique_ptr.28"* %14
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %16, align 8
  %18 = icmp eq %"class.blink::TypedInterpolationValue"* %17, null
  br i1 %18, label %48, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %20, align 8, !noalias !5
  %22 = icmp eq %"class.blink::InterpolableValue"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::InterpolableValue"* %21 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %25 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %24, align 8, !noalias !5
  %26 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %25, i64 16
  %27 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %26, align 8, !noalias !5
  %28 = tail call %"class.blink::InterpolableValue"* %27(%"class.blink::InterpolableValue"* nonnull %21) #9, !noalias !5
  %29 = ptrtoint %"class.blink::InterpolableValue"* %28 to i64
  br label %30

30:                                               ; preds = %23, %19
  %31 = phi i64 [ %29, %23 ], [ 0, %19 ]
  %32 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %17, i64 0, i32 1, i32 1, i32 0
  %33 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %32, align 8, !noalias !5
  %34 = icmp eq %"class.blink::NonInterpolableValue"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %33, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #9, !noalias !5
  br label %37

37:                                               ; preds = %30, %35
  %38 = ptrtoint %"class.blink::NonInterpolableValue"* %33 to i64
  %39 = bitcast %"class.blink::TypedInterpolationValue"* %17 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = tail call noalias i8* @malloc(i64 24) #9
  %42 = bitcast i8* %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 %31, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 16
  %46 = bitcast i8* %45 to i64*
  store i64 %38, i64* %46, align 8
  %47 = ptrtoint i8* %41 to i64
  br label %48

48:                                               ; preds = %11, %37
  %49 = phi i64 [ %47, %37 ], [ 0, %11 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %2, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::TypedInterpolationValue"*, %"class.blink::TypedInterpolationValue"** %50, align 8
  %52 = bitcast %"class.std::__1::unique_ptr.28"* %2 to i64*
  store i64 %49, i64* %52, align 8
  %53 = icmp eq %"class.blink::TypedInterpolationValue"* %51, null
  br i1 %53, label %82, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %51, i64 0, i32 1, i32 1, i32 0
  %56 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %55, align 8
  %57 = icmp eq %"class.blink::NonInterpolableValue"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %56, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %59, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #9
  %61 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %59, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.base::RefCounted.39", %"class.base::RefCounted.39"* %59, i64 -2
  %66 = bitcast %"class.base::RefCounted.39"* %65 to %"class.blink::NonInterpolableValue"*
  %67 = bitcast %"class.base::RefCounted.39"* %65 to void (%"class.blink::NonInterpolableValue"*)***
  %68 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %68, i64 1
  %70 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %69, align 8
  tail call void %70(%"class.blink::NonInterpolableValue"* nonnull %66) #9
  br label %71

71:                                               ; preds = %64, %58, %54
  %72 = getelementptr inbounds %"class.blink::TypedInterpolationValue", %"class.blink::TypedInterpolationValue"* %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %72, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %72, align 8
  %74 = icmp eq %"class.blink::InterpolableValue"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::InterpolableValue"* %73 to void (%"class.blink::InterpolableValue"*)***
  %77 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %78, align 8
  tail call void %79(%"class.blink::InterpolableValue"* nonnull %73) #9
  br label %80

80:                                               ; preds = %75, %71
  %81 = bitcast %"class.blink::TypedInterpolationValue"* %51 to i8*
  tail call void @free(i8* %81) #9
  br label %82

82:                                               ; preds = %80, %48
  store double %1, double* %4, align 8
  br label %83

83:                                               ; preds = %7, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink26FlipPrimitiveInterpolation29InterpolateUnderlyingFractionEddd(%"class.blink::FlipPrimitiveInterpolation"*, double, double, double) unnamed_addr #0 comdat align 2 {
  %5 = fcmp olt double %3, 5.000000e-01
  %6 = select i1 %5, double %1, double %2
  ret double %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26FlipPrimitiveInterpolation6IsFlipEv(%"class.blink::FlipPrimitiveInterpolation"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink18InterpolationValue5CloneEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink18InterpolationValue5CloneEv"}
