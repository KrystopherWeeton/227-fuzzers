; ModuleID = '../../third_party/icu/source/common/utrie.cpp'
source_filename = "../../third_party/icu/source/common/utrie.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UNewTrie = type { [34848 x i32], i32*, i32, i32, i32, i32, i8, i8, i8, i8, [34849 x i32] }
%struct.UTrie = type { i16*, i32*, i32 (i32)*, i32, i32, i32, i8 }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UNewTrie* @utrie_open_69(%struct.UNewTrie*, i32*, i32, i32, i32, i8 signext) local_unnamed_addr #0 {
  %7 = icmp slt i32 %2, 32
  br i1 %7, label %80, label %8

8:                                                ; preds = %6
  %9 = icmp ne i8 %5, 0
  %10 = icmp slt i32 %2, 1024
  %11 = and i1 %10, %9
  br i1 %11, label %80, label %12

12:                                               ; preds = %8
  %13 = icmp eq %struct.UNewTrie* %0, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = tail call noalias i8* @uprv_malloc_69(i64 278816) #7
  %16 = bitcast i8* %15 to %struct.UNewTrie*
  %17 = icmp eq i8* %15, null
  br i1 %17, label %80, label %18

18:                                               ; preds = %12, %14
  %19 = phi %struct.UNewTrie* [ %16, %14 ], [ %0, %12 ]
  %20 = bitcast %struct.UNewTrie* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 278816, i1 false)
  %21 = zext i1 %13 to i8
  %22 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 6
  store i8 %21, i8* %22, align 8
  %23 = icmp eq i32* %1, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 1
  store i32* %1, i32** %25, align 8
  br label %36

26:                                               ; preds = %18
  %27 = shl nsw i32 %2, 2
  %28 = sext i32 %27 to i64
  %29 = tail call noalias i8* @uprv_malloc_69(i64 %28) #7
  %30 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 1
  %31 = bitcast i32** %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = icmp eq i8* %29, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  tail call void @uprv_free_69(i8* %20) #8
  br label %80

34:                                               ; preds = %26
  %35 = bitcast i8* %29 to i32*
  br label %36

36:                                               ; preds = %34, %24
  %37 = phi i8 [ 1, %34 ], [ 0, %24 ]
  %38 = phi i32* [ %35, %34 ], [ %1, %24 ]
  %39 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 7
  store i8 %37, i8* %39, align 1
  br i1 %9, label %40, label %44

40:                                               ; preds = %36
  %41 = bitcast %struct.UNewTrie* %19 to <4 x i32>*
  store <4 x i32> <i32 32, i32 64, i32 96, i32 128>, <4 x i32>* %41, align 4
  %42 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 0, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 160, i32 192, i32 224, i32 256>, <4 x i32>* %43, align 4
  br label %44

44:                                               ; preds = %40, %36
  %45 = phi i32 [ 32, %36 ], [ 288, %40 ]
  %46 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 5
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 1
  %48 = zext i32 %45 to i64
  %49 = add nsw i64 %48, -1
  %50 = getelementptr inbounds i32, i32* %38, i64 %49
  store i32 %3, i32* %50, align 4
  br label %51

51:                                               ; preds = %51, %44
  %52 = phi i64 [ %49, %44 ], [ %55, %51 ]
  %53 = phi i64 [ 3, %44 ], [ %57, %51 ]
  %54 = load i32*, i32** %47, align 8
  %55 = add nsw i64 %52, -1
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  store i32 %3, i32* %56, align 4
  %57 = add i64 %53, -1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %51, !llvm.loop !2

59:                                               ; preds = %51, %59
  %60 = phi i64 [ %71, %59 ], [ %55, %51 ]
  %61 = load i32*, i32** %47, align 8
  %62 = add nsw i64 %60, -1
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  store i32 %3, i32* %63, align 4
  %64 = load i32*, i32** %47, align 8
  %65 = add nsw i64 %60, -2
  %66 = getelementptr inbounds i32, i32* %64, i64 %65
  store i32 %3, i32* %66, align 4
  %67 = load i32*, i32** %47, align 8
  %68 = add nsw i64 %60, -3
  %69 = getelementptr inbounds i32, i32* %67, i64 %68
  store i32 %3, i32* %69, align 4
  %70 = load i32*, i32** %47, align 8
  %71 = add nsw i64 %60, -4
  %72 = getelementptr inbounds i32, i32* %70, i64 %71
  store i32 %3, i32* %72, align 4
  %73 = icmp sgt i64 %71, 0
  br i1 %73, label %59, label %74

74:                                               ; preds = %59
  %75 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 2
  store i32 %4, i32* %75, align 8
  %76 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 3
  store i32 34816, i32* %76, align 4
  %77 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 4
  store i32 %2, i32* %77, align 8
  %78 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 8
  store i8 %5, i8* %78, align 2
  %79 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %19, i64 0, i32 9
  store i8 0, i8* %79, align 1
  br label %80

80:                                               ; preds = %14, %6, %8, %74, %33
  %81 = phi %struct.UNewTrie* [ %19, %74 ], [ null, %33 ], [ null, %8 ], [ null, %6 ], [ null, %14 ]
  ret %struct.UNewTrie* %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @uprv_free_69(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UNewTrie* @utrie_clone_69(%struct.UNewTrie*, %struct.UNewTrie* readonly, i32*, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.UNewTrie* %1, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %1, i64 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %57, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %1, i64 0, i32 9
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %57

14:                                               ; preds = %10
  %15 = icmp eq i32* %2, null
  %16 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %1, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, %3
  %19 = or i1 %15, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %14
  %21 = shl nsw i32 %17, 2
  %22 = sext i32 %21 to i64
  %23 = tail call noalias i8* @uprv_malloc_69(i64 %22) #7
  %24 = icmp eq i8* %23, null
  br i1 %24, label %57, label %25

25:                                               ; preds = %20
  %26 = bitcast i8* %23 to i32*
  %27 = load i32*, i32** %7, align 8
  br label %28

28:                                               ; preds = %14, %25
  %29 = phi i32* [ %27, %25 ], [ %8, %14 ]
  %30 = phi i32* [ %26, %25 ], [ %2, %14 ]
  %31 = phi i32 [ %17, %25 ], [ %3, %14 ]
  %32 = phi i8 [ 1, %25 ], [ 0, %14 ]
  %33 = load i32, i32* %29, align 4
  %34 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %1, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %1, i64 0, i32 8
  %37 = load i8, i8* %36, align 2
  %38 = tail call %struct.UNewTrie* @utrie_open_69(%struct.UNewTrie* %0, i32* %30, i32 %31, i32 %33, i32 %35, i8 signext %37)
  %39 = icmp eq %struct.UNewTrie* %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = bitcast i32* %30 to i8*
  tail call void @uprv_free_69(i8* %41) #8
  br label %57

42:                                               ; preds = %28
  %43 = bitcast %struct.UNewTrie* %38 to i8*
  %44 = bitcast %struct.UNewTrie* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* nonnull align 8 %44, i64 139392, i1 false)
  %45 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %38, i64 0, i32 1
  %46 = bitcast i32** %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast i32** %7 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %1, i64 0, i32 5
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = shl nsw i64 %52, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %49, i64 %53, i1 false)
  %54 = load i32, i32* %50, align 4
  %55 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %38, i64 0, i32 5
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %38, i64 0, i32 7
  store i8 %32, i8* %56, align 1
  br label %57

57:                                               ; preds = %40, %42, %20, %4, %6, %10
  %58 = phi %struct.UNewTrie* [ null, %10 ], [ null, %6 ], [ null, %4 ], [ null, %20 ], [ %38, %42 ], [ null, %40 ]
  ret %struct.UNewTrie* %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie_close_69(%struct.UNewTrie*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UNewTrie* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %9 = bitcast i32** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @uprv_free_69(i8* %10) #8
  store i32* null, i32** %8, align 8
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %struct.UNewTrie* %0 to i8*
  tail call void @uprv_free_69(i8* nonnull %16) #8
  br label %17

17:                                               ; preds = %11, %1, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32* @utrie_getData_69(%struct.UNewTrie* readonly, i32*) local_unnamed_addr #4 {
  %3 = icmp eq %struct.UNewTrie* %0, null
  %4 = icmp eq i32* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %1, align 4
  %9 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %10 = load i32*, i32** %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i32* [ %10, %6 ], [ null, %2 ]
  ret i32* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @utrie_set32_69(%struct.UNewTrie*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.UNewTrie* %0, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = icmp ugt i32 %1, 1114111
  %10 = or i1 %9, %8
  br i1 %10, label %44, label %11

11:                                               ; preds = %5
  %12 = lshr i32 %1, 5
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %36, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 32
  %21 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %20, %22
  br i1 %23, label %44, label %24

24:                                               ; preds = %17
  store i32 %20, i32* %18, align 4
  %25 = icmp slt i32 %19, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %24
  store i32 %19, i32* %14, align 4
  %27 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %28 = load i32*, i32** %27, align 8
  %29 = sext i32 %19 to i64
  %30 = getelementptr inbounds i32, i32* %28, i64 %29
  %31 = bitcast i32* %30 to i8*
  %32 = sext i32 %15 to i64
  %33 = sub nsw i64 0, %32
  %34 = getelementptr inbounds i32, i32* %28, i64 %33
  %35 = bitcast i32* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %35, i64 128, i1 false) #8
  br label %36

36:                                               ; preds = %26, %11
  %37 = phi i32 [ %19, %26 ], [ %15, %11 ]
  %38 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %39 = load i32*, i32** %38, align 8
  %40 = and i32 %1, 31
  %41 = add nuw nsw i32 %37, %40
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %39, i64 %42
  store i32 %2, i32* %43, align 4
  br label %44

44:                                               ; preds = %17, %24, %3, %5, %36
  %45 = phi i8 [ 1, %36 ], [ 0, %5 ], [ 0, %3 ], [ 0, %24 ], [ 0, %17 ]
  ret i8 %45
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @utrie_get32_69(%struct.UNewTrie* readonly, i32, i8*) local_unnamed_addr #4 {
  %4 = icmp eq %struct.UNewTrie* %0, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = icmp ugt i32 %1, 1114111
  %10 = or i1 %9, %8
  br i1 %10, label %11, label %14

11:                                               ; preds = %5, %3
  %12 = icmp eq i8* %2, null
  br i1 %12, label %34, label %13

13:                                               ; preds = %11
  store i8 1, i8* %2, align 1
  br label %34

14:                                               ; preds = %5
  %15 = lshr i32 %1, 5
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i8* %2, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = icmp eq i32 %18, 0
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %2, align 1
  br label %23

23:                                               ; preds = %14, %20
  %24 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %25 = load i32*, i32** %24, align 8
  %26 = icmp slt i32 %18, 0
  %27 = sub nsw i32 0, %18
  %28 = select i1 %26, i32 %27, i32 %18
  %29 = and i32 %1, 31
  %30 = add nuw nsw i32 %28, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %25, i64 %31
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %13, %11, %23
  %35 = phi i32 [ %33, %23 ], [ 0, %11 ], [ 0, %13 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @utrie_setRange32_69(%struct.UNewTrie*, i32, i32, i32, i8 signext) local_unnamed_addr #0 {
  %6 = icmp eq %struct.UNewTrie* %0, null
  br i1 %6, label %744, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 9
  %9 = load i8, i8* %8, align 1
  %10 = icmp ne i8 %9, 0
  %11 = icmp ugt i32 %1, 1114111
  %12 = or i1 %11, %10
  %13 = icmp ugt i32 %2, 1114112
  %14 = or i1 %13, %12
  %15 = icmp sgt i32 %1, %2
  %16 = or i1 %15, %14
  br i1 %16, label %744, label %17

17:                                               ; preds = %7
  %18 = icmp eq i32 %1, %2
  br i1 %18, label %744, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %1, 31
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %395, label %25

25:                                               ; preds = %19
  %26 = lshr i32 %1, 5
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = sext i32 %29 to i64
  br label %52

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i32 %35, 32
  %37 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %36, %38
  br i1 %39, label %744, label %40

40:                                               ; preds = %33
  store i32 %36, i32* %34, align 4
  %41 = icmp slt i32 %35, 0
  br i1 %41, label %744, label %42

42:                                               ; preds = %40
  store i32 %35, i32* %28, align 4
  %43 = load i32*, i32** %20, align 8
  %44 = sext i32 %35 to i64
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  %46 = bitcast i32* %45 to i8*
  %47 = sext i32 %29 to i64
  %48 = sub nsw i64 0, %47
  %49 = getelementptr inbounds i32, i32* %43, i64 %48
  %50 = bitcast i32* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %50, i64 128, i1 false) #8
  %51 = load i32*, i32** %20, align 8
  br label %52

52:                                               ; preds = %31, %42
  %53 = phi i64 [ %32, %31 ], [ %44, %42 ]
  %54 = phi i32* [ %21, %31 ], [ %51, %42 ]
  %55 = ptrtoint i32* %54 to i64
  %56 = add nuw nsw i32 %1, 32
  %57 = and i32 %56, -32
  %58 = icmp sgt i32 %57, %2
  %59 = getelementptr inbounds i32, i32* %54, i64 %53
  br i1 %58, label %204, label %60

60:                                               ; preds = %52
  %61 = zext i32 %23 to i64
  %62 = icmp eq i8 %4, 0
  %63 = sub nuw nsw i64 32, %61
  %64 = icmp ugt i32 %23, 24
  br i1 %62, label %127, label %65

65:                                               ; preds = %60
  br i1 %64, label %66, label %68

66:                                               ; preds = %125, %65
  %67 = phi i64 [ %61, %65 ], [ %70, %125 ]
  br label %190

68:                                               ; preds = %65
  %69 = and i64 %63, 56
  %70 = add nuw nsw i64 %69, %61
  %71 = insertelement <4 x i32> undef, i32 %3, i32 0
  %72 = shufflevector <4 x i32> %71, <4 x i32> undef, <4 x i32> zeroinitializer
  %73 = insertelement <4 x i32> undef, i32 %3, i32 0
  %74 = shufflevector <4 x i32> %73, <4 x i32> undef, <4 x i32> zeroinitializer
  %75 = add nsw i64 %69, -8
  %76 = lshr exact i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 24
  br i1 %79, label %111, label %80

80:                                               ; preds = %68
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %108, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %109, %82 ]
  %85 = or i64 %83, %61
  %86 = getelementptr inbounds i32, i32* %59, i64 %85
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %89, align 4
  %90 = or i64 %83, 8
  %91 = add i64 %90, %61
  %92 = getelementptr inbounds i32, i32* %59, i64 %91
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %93, align 4
  %94 = getelementptr inbounds i32, i32* %92, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %95, align 4
  %96 = or i64 %83, 16
  %97 = add i64 %96, %61
  %98 = getelementptr inbounds i32, i32* %59, i64 %97
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds i32, i32* %98, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %101, align 4
  %102 = or i64 %83, 24
  %103 = add i64 %102, %61
  %104 = getelementptr inbounds i32, i32* %59, i64 %103
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds i32, i32* %104, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %107, align 4
  %108 = add i64 %83, 32
  %109 = add i64 %84, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %82, !llvm.loop !4

111:                                              ; preds = %82, %68
  %112 = phi i64 [ 0, %68 ], [ %108, %82 ]
  %113 = icmp eq i64 %78, 0
  br i1 %113, label %125, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %122, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %123, %114 ], [ %78, %111 ]
  %117 = add i64 %115, %61
  %118 = getelementptr inbounds i32, i32* %59, i64 %117
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds i32, i32* %118, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %121, align 4
  %122 = add i64 %115, 8
  %123 = add i64 %116, -1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %114, !llvm.loop !6

125:                                              ; preds = %114, %111
  %126 = icmp eq i64 %63, %69
  br i1 %126, label %395, label %66

127:                                              ; preds = %60
  br i1 %64, label %128, label %130

128:                                              ; preds = %188, %127
  %129 = phi i64 [ %61, %127 ], [ %132, %188 ]
  br label %195

130:                                              ; preds = %127
  %131 = and i64 %63, 56
  %132 = add nuw nsw i64 %131, %61
  %133 = insertelement <4 x i32> undef, i32 %22, i32 0
  %134 = shufflevector <4 x i32> %133, <4 x i32> undef, <4 x i32> zeroinitializer
  %135 = insertelement <4 x i32> undef, i32 %22, i32 0
  %136 = shufflevector <4 x i32> %135, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %137

137:                                              ; preds = %185, %130
  %138 = phi i64 [ 0, %130 ], [ %186, %185 ]
  %139 = add i64 %138, %61
  %140 = getelementptr inbounds i32, i32* %59, i64 %139
  %141 = bitcast i32* %140 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4
  %143 = getelementptr inbounds i32, i32* %140, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4
  %146 = icmp eq <4 x i32> %142, %134
  %147 = icmp eq <4 x i32> %145, %136
  %148 = extractelement <4 x i1> %146, i32 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %137
  store i32 %3, i32* %140, align 4
  br label %150

150:                                              ; preds = %149, %137
  %151 = extractelement <4 x i1> %146, i32 1
  br i1 %151, label %152, label %155

152:                                              ; preds = %150
  %153 = add i64 %139, 1
  %154 = getelementptr inbounds i32, i32* %59, i64 %153
  store i32 %3, i32* %154, align 4
  br label %155

155:                                              ; preds = %152, %150
  %156 = extractelement <4 x i1> %146, i32 2
  br i1 %156, label %157, label %160

157:                                              ; preds = %155
  %158 = add i64 %139, 2
  %159 = getelementptr inbounds i32, i32* %59, i64 %158
  store i32 %3, i32* %159, align 4
  br label %160

160:                                              ; preds = %157, %155
  %161 = extractelement <4 x i1> %146, i32 3
  br i1 %161, label %162, label %165

162:                                              ; preds = %160
  %163 = add i64 %139, 3
  %164 = getelementptr inbounds i32, i32* %59, i64 %163
  store i32 %3, i32* %164, align 4
  br label %165

165:                                              ; preds = %162, %160
  %166 = extractelement <4 x i1> %147, i32 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %165
  %168 = add i64 %139, 4
  %169 = getelementptr inbounds i32, i32* %59, i64 %168
  store i32 %3, i32* %169, align 4
  br label %170

170:                                              ; preds = %167, %165
  %171 = extractelement <4 x i1> %147, i32 1
  br i1 %171, label %172, label %175

172:                                              ; preds = %170
  %173 = add i64 %139, 5
  %174 = getelementptr inbounds i32, i32* %59, i64 %173
  store i32 %3, i32* %174, align 4
  br label %175

175:                                              ; preds = %172, %170
  %176 = extractelement <4 x i1> %147, i32 2
  br i1 %176, label %177, label %180

177:                                              ; preds = %175
  %178 = add i64 %139, 6
  %179 = getelementptr inbounds i32, i32* %59, i64 %178
  store i32 %3, i32* %179, align 4
  br label %180

180:                                              ; preds = %177, %175
  %181 = extractelement <4 x i1> %147, i32 3
  br i1 %181, label %182, label %185

182:                                              ; preds = %180
  %183 = add i64 %139, 7
  %184 = getelementptr inbounds i32, i32* %59, i64 %183
  store i32 %3, i32* %184, align 4
  br label %185

185:                                              ; preds = %182, %180
  %186 = add i64 %138, 8
  %187 = icmp eq i64 %186, %131
  br i1 %187, label %188, label %137, !llvm.loop !7

188:                                              ; preds = %185
  %189 = icmp eq i64 %63, %131
  br i1 %189, label %395, label %128

190:                                              ; preds = %66, %190
  %191 = phi i64 [ %193, %190 ], [ %67, %66 ]
  %192 = getelementptr inbounds i32, i32* %59, i64 %191
  %193 = add nuw nsw i64 %191, 1
  store i32 %3, i32* %192, align 4
  %194 = icmp eq i64 %193, 32
  br i1 %194, label %395, label %190, !llvm.loop !8

195:                                              ; preds = %128, %201
  %196 = phi i64 [ %202, %201 ], [ %129, %128 ]
  %197 = getelementptr inbounds i32, i32* %59, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %198, %22
  br i1 %199, label %200, label %201

200:                                              ; preds = %195
  store i32 %3, i32* %197, align 4
  br label %201

201:                                              ; preds = %200, %195
  %202 = add nuw nsw i64 %196, 1
  %203 = icmp eq i64 %202, 32
  br i1 %203, label %395, label %195, !llvm.loop !10

204:                                              ; preds = %52
  %205 = and i32 %2, 31
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i32, i32* %59, i64 %206
  %208 = zext i32 %23 to i64
  %209 = getelementptr inbounds i32, i32* %59, i64 %208
  %210 = icmp eq i8 %4, 0
  %211 = icmp ult i32 %23, %205
  br i1 %210, label %305, label %212

212:                                              ; preds = %204
  br i1 %211, label %213, label %744

213:                                              ; preds = %212
  %214 = add nsw i64 %53, %208
  %215 = add nsw i64 %214, 1
  %216 = getelementptr i32, i32* %54, i64 %215
  %217 = icmp ugt i32* %216, %207
  %218 = select i1 %217, i32* %216, i32* %207
  %219 = sub nsw i64 0, %53
  %220 = sub nsw i64 %219, %208
  %221 = getelementptr i32, i32* %218, i64 %220
  %222 = bitcast i32* %221 to i8*
  %223 = xor i64 %55, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = lshr i64 %225, 2
  %227 = add nuw nsw i64 %226, 1
  %228 = icmp ult i64 %227, 8
  br i1 %228, label %229, label %231

229:                                              ; preds = %303, %213
  %230 = phi i32* [ %209, %213 ], [ %233, %303 ]
  br label %383

231:                                              ; preds = %213
  %232 = and i64 %227, 9223372036854775800
  %233 = getelementptr i32, i32* %209, i64 %232
  %234 = insertelement <4 x i32> undef, i32 %3, i32 0
  %235 = shufflevector <4 x i32> %234, <4 x i32> undef, <4 x i32> zeroinitializer
  %236 = insertelement <4 x i32> undef, i32 %3, i32 0
  %237 = shufflevector <4 x i32> %236, <4 x i32> undef, <4 x i32> zeroinitializer
  %238 = add nsw i64 %232, -8
  %239 = lshr exact i64 %238, 3
  %240 = add nuw nsw i64 %239, 1
  %241 = and i64 %240, 7
  %242 = icmp ult i64 %238, 56
  br i1 %242, label %290, label %243

243:                                              ; preds = %231
  %244 = sub nsw i64 %240, %241
  br label %245

245:                                              ; preds = %245, %243
  %246 = phi i64 [ 0, %243 ], [ %287, %245 ]
  %247 = phi i64 [ %244, %243 ], [ %288, %245 ]
  %248 = getelementptr i32, i32* %209, i64 %246
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %249, align 4
  %250 = getelementptr i32, i32* %248, i64 4
  %251 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %251, align 4
  %252 = or i64 %246, 8
  %253 = getelementptr i32, i32* %209, i64 %252
  %254 = bitcast i32* %253 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %254, align 4
  %255 = getelementptr i32, i32* %253, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %256, align 4
  %257 = or i64 %246, 16
  %258 = getelementptr i32, i32* %209, i64 %257
  %259 = bitcast i32* %258 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %259, align 4
  %260 = getelementptr i32, i32* %258, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %261, align 4
  %262 = or i64 %246, 24
  %263 = getelementptr i32, i32* %209, i64 %262
  %264 = bitcast i32* %263 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %264, align 4
  %265 = getelementptr i32, i32* %263, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %266, align 4
  %267 = or i64 %246, 32
  %268 = getelementptr i32, i32* %209, i64 %267
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %269, align 4
  %270 = getelementptr i32, i32* %268, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %271, align 4
  %272 = or i64 %246, 40
  %273 = getelementptr i32, i32* %209, i64 %272
  %274 = bitcast i32* %273 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %274, align 4
  %275 = getelementptr i32, i32* %273, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %276, align 4
  %277 = or i64 %246, 48
  %278 = getelementptr i32, i32* %209, i64 %277
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %279, align 4
  %280 = getelementptr i32, i32* %278, i64 4
  %281 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %281, align 4
  %282 = or i64 %246, 56
  %283 = getelementptr i32, i32* %209, i64 %282
  %284 = bitcast i32* %283 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %284, align 4
  %285 = getelementptr i32, i32* %283, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %286, align 4
  %287 = add i64 %246, 64
  %288 = add i64 %247, -8
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %245, !llvm.loop !11

290:                                              ; preds = %245, %231
  %291 = phi i64 [ 0, %231 ], [ %287, %245 ]
  %292 = icmp eq i64 %241, 0
  br i1 %292, label %303, label %293

293:                                              ; preds = %290, %293
  %294 = phi i64 [ %300, %293 ], [ %291, %290 ]
  %295 = phi i64 [ %301, %293 ], [ %241, %290 ]
  %296 = getelementptr i32, i32* %209, i64 %294
  %297 = bitcast i32* %296 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %297, align 4
  %298 = getelementptr i32, i32* %296, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %299, align 4
  %300 = add i64 %294, 8
  %301 = add i64 %295, -1
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %293, !llvm.loop !12

303:                                              ; preds = %293, %290
  %304 = icmp eq i64 %227, %232
  br i1 %304, label %744, label %229

305:                                              ; preds = %204
  br i1 %211, label %306, label %744

306:                                              ; preds = %305
  %307 = add nsw i64 %53, %208
  %308 = add nsw i64 %307, 1
  %309 = getelementptr i32, i32* %54, i64 %308
  %310 = icmp ugt i32* %309, %207
  %311 = select i1 %310, i32* %309, i32* %207
  %312 = sub nsw i64 0, %53
  %313 = sub nsw i64 %312, %208
  %314 = getelementptr i32, i32* %311, i64 %313
  %315 = bitcast i32* %314 to i8*
  %316 = xor i64 %55, -1
  %317 = getelementptr i8, i8* %315, i64 %316
  %318 = ptrtoint i8* %317 to i64
  %319 = lshr i64 %318, 2
  %320 = add nuw nsw i64 %319, 1
  %321 = icmp ult i64 %320, 8
  br i1 %321, label %322, label %324

322:                                              ; preds = %381, %306
  %323 = phi i32* [ %209, %306 ], [ %326, %381 ]
  br label %387

324:                                              ; preds = %306
  %325 = and i64 %320, 9223372036854775800
  %326 = getelementptr i32, i32* %209, i64 %325
  %327 = insertelement <4 x i32> undef, i32 %22, i32 0
  %328 = shufflevector <4 x i32> %327, <4 x i32> undef, <4 x i32> zeroinitializer
  %329 = insertelement <4 x i32> undef, i32 %22, i32 0
  %330 = shufflevector <4 x i32> %329, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %331

331:                                              ; preds = %378, %324
  %332 = phi i64 [ 0, %324 ], [ %379, %378 ]
  %333 = getelementptr i32, i32* %209, i64 %332
  %334 = bitcast i32* %333 to <4 x i32>*
  %335 = load <4 x i32>, <4 x i32>* %334, align 4
  %336 = getelementptr i32, i32* %333, i64 4
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4
  %339 = icmp eq <4 x i32> %335, %328
  %340 = icmp eq <4 x i32> %338, %330
  %341 = extractelement <4 x i1> %339, i32 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %331
  store i32 %3, i32* %333, align 4
  br label %343

343:                                              ; preds = %342, %331
  %344 = extractelement <4 x i1> %339, i32 1
  br i1 %344, label %345, label %348

345:                                              ; preds = %343
  %346 = or i64 %332, 1
  %347 = getelementptr i32, i32* %209, i64 %346
  store i32 %3, i32* %347, align 4
  br label %348

348:                                              ; preds = %345, %343
  %349 = extractelement <4 x i1> %339, i32 2
  br i1 %349, label %350, label %353

350:                                              ; preds = %348
  %351 = or i64 %332, 2
  %352 = getelementptr i32, i32* %209, i64 %351
  store i32 %3, i32* %352, align 4
  br label %353

353:                                              ; preds = %350, %348
  %354 = extractelement <4 x i1> %339, i32 3
  br i1 %354, label %355, label %358

355:                                              ; preds = %353
  %356 = or i64 %332, 3
  %357 = getelementptr i32, i32* %209, i64 %356
  store i32 %3, i32* %357, align 4
  br label %358

358:                                              ; preds = %355, %353
  %359 = extractelement <4 x i1> %340, i32 0
  br i1 %359, label %360, label %363

360:                                              ; preds = %358
  %361 = or i64 %332, 4
  %362 = getelementptr i32, i32* %209, i64 %361
  store i32 %3, i32* %362, align 4
  br label %363

363:                                              ; preds = %360, %358
  %364 = extractelement <4 x i1> %340, i32 1
  br i1 %364, label %365, label %368

365:                                              ; preds = %363
  %366 = or i64 %332, 5
  %367 = getelementptr i32, i32* %209, i64 %366
  store i32 %3, i32* %367, align 4
  br label %368

368:                                              ; preds = %365, %363
  %369 = extractelement <4 x i1> %340, i32 2
  br i1 %369, label %370, label %373

370:                                              ; preds = %368
  %371 = or i64 %332, 6
  %372 = getelementptr i32, i32* %209, i64 %371
  store i32 %3, i32* %372, align 4
  br label %373

373:                                              ; preds = %370, %368
  %374 = extractelement <4 x i1> %340, i32 3
  br i1 %374, label %375, label %378

375:                                              ; preds = %373
  %376 = or i64 %332, 7
  %377 = getelementptr i32, i32* %209, i64 %376
  store i32 %3, i32* %377, align 4
  br label %378

378:                                              ; preds = %375, %373
  %379 = add i64 %332, 8
  %380 = icmp eq i64 %379, %325
  br i1 %380, label %381, label %331, !llvm.loop !13

381:                                              ; preds = %378
  %382 = icmp eq i64 %320, %325
  br i1 %382, label %744, label %322

383:                                              ; preds = %229, %383
  %384 = phi i32* [ %385, %383 ], [ %230, %229 ]
  %385 = getelementptr inbounds i32, i32* %384, i64 1
  store i32 %3, i32* %384, align 4
  %386 = icmp ult i32* %385, %207
  br i1 %386, label %383, label %744, !llvm.loop !14

387:                                              ; preds = %322, %392
  %388 = phi i32* [ %393, %392 ], [ %323, %322 ]
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, %22
  br i1 %390, label %391, label %392

391:                                              ; preds = %387
  store i32 %3, i32* %388, align 4
  br label %392

392:                                              ; preds = %391, %387
  %393 = getelementptr inbounds i32, i32* %388, i64 1
  %394 = icmp ult i32* %393, %207
  br i1 %394, label %387, label %744, !llvm.loop !15

395:                                              ; preds = %190, %201, %125, %188, %19
  %396 = phi i32 [ %1, %19 ], [ %57, %188 ], [ %57, %125 ], [ %57, %201 ], [ %57, %190 ]
  %397 = and i32 %2, 31
  %398 = and i32 %2, -32
  %399 = icmp slt i32 %396, %398
  br i1 %399, label %400, label %543

400:                                              ; preds = %395
  %401 = icmp ne i32 %22, %3
  %402 = sext i1 %401 to i32
  %403 = icmp ne i8 %4, 0
  %404 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %405 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 4
  %406 = icmp eq i8 %4, 0
  %407 = insertelement <4 x i32> undef, i32 %3, i32 0
  %408 = shufflevector <4 x i32> %407, <4 x i32> undef, <4 x i32> zeroinitializer
  %409 = insertelement <4 x i32> undef, i32 %3, i32 0
  %410 = shufflevector <4 x i32> %409, <4 x i32> undef, <4 x i32> zeroinitializer
  %411 = insertelement <4 x i32> undef, i32 %3, i32 0
  %412 = shufflevector <4 x i32> %411, <4 x i32> undef, <4 x i32> zeroinitializer
  %413 = insertelement <4 x i32> undef, i32 %3, i32 0
  %414 = shufflevector <4 x i32> %413, <4 x i32> undef, <4 x i32> zeroinitializer
  %415 = insertelement <4 x i32> undef, i32 %3, i32 0
  %416 = shufflevector <4 x i32> %415, <4 x i32> undef, <4 x i32> zeroinitializer
  %417 = insertelement <4 x i32> undef, i32 %3, i32 0
  %418 = shufflevector <4 x i32> %417, <4 x i32> undef, <4 x i32> zeroinitializer
  %419 = insertelement <4 x i32> undef, i32 %3, i32 0
  %420 = shufflevector <4 x i32> %419, <4 x i32> undef, <4 x i32> zeroinitializer
  %421 = insertelement <4 x i32> undef, i32 %3, i32 0
  %422 = shufflevector <4 x i32> %421, <4 x i32> undef, <4 x i32> zeroinitializer
  %423 = insertelement <4 x i32> undef, i32 %3, i32 0
  %424 = shufflevector <4 x i32> %423, <4 x i32> undef, <4 x i32> zeroinitializer
  %425 = insertelement <4 x i32> undef, i32 %3, i32 0
  %426 = shufflevector <4 x i32> %425, <4 x i32> undef, <4 x i32> zeroinitializer
  %427 = insertelement <4 x i32> undef, i32 %3, i32 0
  %428 = shufflevector <4 x i32> %427, <4 x i32> undef, <4 x i32> zeroinitializer
  %429 = insertelement <4 x i32> undef, i32 %3, i32 0
  %430 = shufflevector <4 x i32> %429, <4 x i32> undef, <4 x i32> zeroinitializer
  %431 = insertelement <4 x i32> undef, i32 %3, i32 0
  %432 = shufflevector <4 x i32> %431, <4 x i32> undef, <4 x i32> zeroinitializer
  %433 = insertelement <4 x i32> undef, i32 %3, i32 0
  %434 = shufflevector <4 x i32> %433, <4 x i32> undef, <4 x i32> zeroinitializer
  %435 = insertelement <4 x i32> undef, i32 %3, i32 0
  %436 = shufflevector <4 x i32> %435, <4 x i32> undef, <4 x i32> zeroinitializer
  %437 = insertelement <4 x i32> undef, i32 %3, i32 0
  %438 = shufflevector <4 x i32> %437, <4 x i32> undef, <4 x i32> zeroinitializer
  %439 = insertelement <4 x i32> undef, i32 %22, i32 0
  %440 = shufflevector <4 x i32> %439, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %441

441:                                              ; preds = %400, %539
  %442 = phi i32 [ %402, %400 ], [ %540, %539 ]
  %443 = phi i32 [ %396, %400 ], [ %541, %539 ]
  %444 = ashr i32 %443, 5
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %445
  %447 = load i32, i32* %446, align 4
  %448 = icmp sgt i32 %447, 0
  %449 = load i32*, i32** %20, align 8
  br i1 %448, label %450, label %492

450:                                              ; preds = %441
  %451 = sext i32 %447 to i64
  %452 = getelementptr inbounds i32, i32* %449, i64 %451
  %453 = bitcast i32* %452 to <4 x i32>*
  br i1 %406, label %454, label %477

454:                                              ; preds = %450
  %455 = load <4 x i32>, <4 x i32>* %453, align 4
  %456 = icmp eq <4 x i32> %455, %440
  %457 = extractelement <4 x i1> %456, i32 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %454
  store i32 %3, i32* %452, align 4
  br label %459

459:                                              ; preds = %458, %454
  %460 = extractelement <4 x i1> %456, i32 1
  br i1 %460, label %461, label %463

461:                                              ; preds = %459
  %462 = getelementptr inbounds i32, i32* %452, i64 1
  store i32 %3, i32* %462, align 4
  br label %463

463:                                              ; preds = %461, %459
  %464 = extractelement <4 x i1> %456, i32 2
  br i1 %464, label %465, label %467

465:                                              ; preds = %463
  %466 = getelementptr inbounds i32, i32* %452, i64 2
  store i32 %3, i32* %466, align 4
  br label %467

467:                                              ; preds = %465, %463
  %468 = extractelement <4 x i1> %456, i32 3
  br i1 %468, label %469, label %471

469:                                              ; preds = %467
  %470 = getelementptr inbounds i32, i32* %452, i64 3
  store i32 %3, i32* %470, align 4
  br label %471

471:                                              ; preds = %469, %467
  %472 = getelementptr inbounds i32, i32* %452, i64 4
  %473 = bitcast i32* %472 to <4 x i32>*
  %474 = load <4 x i32>, <4 x i32>* %473, align 4
  %475 = icmp eq <4 x i32> %474, %440
  %476 = extractelement <4 x i1> %475, i32 0
  br i1 %476, label %746, label %747

477:                                              ; preds = %450
  store <4 x i32> %408, <4 x i32>* %453, align 4
  %478 = getelementptr inbounds i32, i32* %452, i64 4
  %479 = bitcast i32* %478 to <4 x i32>*
  store <4 x i32> %410, <4 x i32>* %479, align 4
  %480 = getelementptr inbounds i32, i32* %452, i64 8
  %481 = bitcast i32* %480 to <4 x i32>*
  store <4 x i32> %412, <4 x i32>* %481, align 4
  %482 = getelementptr inbounds i32, i32* %452, i64 12
  %483 = bitcast i32* %482 to <4 x i32>*
  store <4 x i32> %414, <4 x i32>* %483, align 4
  %484 = getelementptr inbounds i32, i32* %452, i64 16
  %485 = bitcast i32* %484 to <4 x i32>*
  store <4 x i32> %416, <4 x i32>* %485, align 4
  %486 = getelementptr inbounds i32, i32* %452, i64 20
  %487 = bitcast i32* %486 to <4 x i32>*
  store <4 x i32> %418, <4 x i32>* %487, align 4
  %488 = getelementptr inbounds i32, i32* %452, i64 24
  %489 = bitcast i32* %488 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %489, align 4
  %490 = getelementptr inbounds i32, i32* %452, i64 28
  %491 = bitcast i32* %490 to <4 x i32>*
  store <4 x i32> %422, <4 x i32>* %491, align 4
  br label %539

492:                                              ; preds = %441
  %493 = sub nsw i32 0, %447
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i32, i32* %449, i64 %494
  %496 = load i32, i32* %495, align 4
  %497 = icmp ne i32 %496, %3
  %498 = icmp eq i32 %447, 0
  %499 = or i1 %403, %498
  %500 = and i1 %497, %499
  br i1 %500, label %501, label %539

501:                                              ; preds = %492
  %502 = icmp sgt i32 %442, -1
  br i1 %502, label %503, label %505

503:                                              ; preds = %501
  %504 = sub nsw i32 0, %442
  store i32 %504, i32* %446, align 4
  br label %539

505:                                              ; preds = %501
  %506 = load i32, i32* %404, align 4
  %507 = add nsw i32 %506, 32
  %508 = load i32, i32* %405, align 8
  %509 = icmp sgt i32 %507, %508
  br i1 %509, label %744, label %510

510:                                              ; preds = %505
  store i32 %507, i32* %404, align 4
  %511 = icmp slt i32 %506, 0
  br i1 %511, label %744, label %512

512:                                              ; preds = %510
  store i32 %506, i32* %446, align 4
  %513 = load i32*, i32** %20, align 8
  %514 = sext i32 %506 to i64
  %515 = getelementptr inbounds i32, i32* %513, i64 %514
  %516 = bitcast i32* %515 to i8*
  %517 = sext i32 %447 to i64
  %518 = sub nsw i64 0, %517
  %519 = getelementptr inbounds i32, i32* %513, i64 %518
  %520 = bitcast i32* %519 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %516, i8* align 4 %520, i64 128, i1 false) #8
  %521 = sub nsw i32 0, %506
  store i32 %521, i32* %446, align 4
  %522 = load i32*, i32** %20, align 8
  %523 = getelementptr inbounds i32, i32* %522, i64 %514
  %524 = bitcast i32* %523 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %524, align 4
  %525 = getelementptr inbounds i32, i32* %523, i64 4
  %526 = bitcast i32* %525 to <4 x i32>*
  store <4 x i32> %426, <4 x i32>* %526, align 4
  %527 = getelementptr inbounds i32, i32* %523, i64 8
  %528 = bitcast i32* %527 to <4 x i32>*
  store <4 x i32> %428, <4 x i32>* %528, align 4
  %529 = getelementptr inbounds i32, i32* %523, i64 12
  %530 = bitcast i32* %529 to <4 x i32>*
  store <4 x i32> %430, <4 x i32>* %530, align 4
  %531 = getelementptr inbounds i32, i32* %523, i64 16
  %532 = bitcast i32* %531 to <4 x i32>*
  store <4 x i32> %432, <4 x i32>* %532, align 4
  %533 = getelementptr inbounds i32, i32* %523, i64 20
  %534 = bitcast i32* %533 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %534, align 4
  %535 = getelementptr inbounds i32, i32* %523, i64 24
  %536 = bitcast i32* %535 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %536, align 4
  %537 = getelementptr inbounds i32, i32* %523, i64 28
  %538 = bitcast i32* %537 to <4 x i32>*
  store <4 x i32> %438, <4 x i32>* %538, align 4
  br label %539

539:                                              ; preds = %869, %871, %512, %477, %492, %503
  %540 = phi i32 [ %442, %503 ], [ %442, %492 ], [ %442, %477 ], [ %506, %512 ], [ %442, %871 ], [ %442, %869 ]
  %541 = add nsw i32 %443, 32
  %542 = icmp slt i32 %541, %398
  br i1 %542, label %441, label %543

543:                                              ; preds = %539, %395
  %544 = phi i32 [ %396, %395 ], [ %541, %539 ]
  %545 = icmp eq i32 %397, 0
  br i1 %545, label %744, label %546

546:                                              ; preds = %543
  %547 = ashr i32 %544, 5
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = icmp sgt i32 %550, 0
  br i1 %551, label %552, label %554

552:                                              ; preds = %546
  %553 = sext i32 %550 to i64
  br label %572

554:                                              ; preds = %546
  %555 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %556 = load i32, i32* %555, align 4
  %557 = add nsw i32 %556, 32
  %558 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 4
  %559 = load i32, i32* %558, align 8
  %560 = icmp sgt i32 %557, %559
  br i1 %560, label %744, label %561

561:                                              ; preds = %554
  store i32 %557, i32* %555, align 4
  %562 = icmp slt i32 %556, 0
  br i1 %562, label %744, label %563

563:                                              ; preds = %561
  store i32 %556, i32* %549, align 4
  %564 = load i32*, i32** %20, align 8
  %565 = sext i32 %556 to i64
  %566 = getelementptr inbounds i32, i32* %564, i64 %565
  %567 = bitcast i32* %566 to i8*
  %568 = sext i32 %550 to i64
  %569 = sub nsw i64 0, %568
  %570 = getelementptr inbounds i32, i32* %564, i64 %569
  %571 = bitcast i32* %570 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %567, i8* align 4 %571, i64 128, i1 false) #8
  br label %572

572:                                              ; preds = %552, %563
  %573 = phi i64 [ %553, %552 ], [ %565, %563 ]
  %574 = load i32*, i32** %20, align 8
  %575 = ptrtoint i32* %574 to i64
  %576 = getelementptr inbounds i32, i32* %574, i64 %573
  %577 = zext i32 %397 to i64
  %578 = getelementptr inbounds i32, i32* %576, i64 %577
  %579 = icmp eq i8 %4, 0
  %580 = add nsw i64 %573, 1
  %581 = getelementptr i32, i32* %574, i64 %580
  %582 = icmp ugt i32* %578, %581
  %583 = select i1 %582, i32* %578, i32* %581
  %584 = sub nsw i64 0, %573
  %585 = getelementptr i32, i32* %583, i64 %584
  %586 = bitcast i32* %585 to i8*
  %587 = xor i64 %575, -1
  %588 = getelementptr i8, i8* %586, i64 %587
  %589 = ptrtoint i8* %588 to i64
  %590 = lshr i64 %589, 2
  %591 = add nuw nsw i64 %590, 1
  %592 = icmp ult i64 %591, 8
  br i1 %579, label %670, label %593

593:                                              ; preds = %572
  br i1 %592, label %594, label %596

594:                                              ; preds = %668, %593
  %595 = phi i32* [ %576, %593 ], [ %598, %668 ]
  br label %732

596:                                              ; preds = %593
  %597 = and i64 %591, 9223372036854775800
  %598 = getelementptr i32, i32* %576, i64 %597
  %599 = insertelement <4 x i32> undef, i32 %3, i32 0
  %600 = shufflevector <4 x i32> %599, <4 x i32> undef, <4 x i32> zeroinitializer
  %601 = insertelement <4 x i32> undef, i32 %3, i32 0
  %602 = shufflevector <4 x i32> %601, <4 x i32> undef, <4 x i32> zeroinitializer
  %603 = add nsw i64 %597, -8
  %604 = lshr exact i64 %603, 3
  %605 = add nuw nsw i64 %604, 1
  %606 = and i64 %605, 7
  %607 = icmp ult i64 %603, 56
  br i1 %607, label %655, label %608

608:                                              ; preds = %596
  %609 = sub nsw i64 %605, %606
  br label %610

610:                                              ; preds = %610, %608
  %611 = phi i64 [ 0, %608 ], [ %652, %610 ]
  %612 = phi i64 [ %609, %608 ], [ %653, %610 ]
  %613 = getelementptr i32, i32* %576, i64 %611
  %614 = bitcast i32* %613 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %614, align 4
  %615 = getelementptr i32, i32* %613, i64 4
  %616 = bitcast i32* %615 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %616, align 4
  %617 = or i64 %611, 8
  %618 = getelementptr i32, i32* %576, i64 %617
  %619 = bitcast i32* %618 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %619, align 4
  %620 = getelementptr i32, i32* %618, i64 4
  %621 = bitcast i32* %620 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %621, align 4
  %622 = or i64 %611, 16
  %623 = getelementptr i32, i32* %576, i64 %622
  %624 = bitcast i32* %623 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %624, align 4
  %625 = getelementptr i32, i32* %623, i64 4
  %626 = bitcast i32* %625 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %626, align 4
  %627 = or i64 %611, 24
  %628 = getelementptr i32, i32* %576, i64 %627
  %629 = bitcast i32* %628 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %629, align 4
  %630 = getelementptr i32, i32* %628, i64 4
  %631 = bitcast i32* %630 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %631, align 4
  %632 = or i64 %611, 32
  %633 = getelementptr i32, i32* %576, i64 %632
  %634 = bitcast i32* %633 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %634, align 4
  %635 = getelementptr i32, i32* %633, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %636, align 4
  %637 = or i64 %611, 40
  %638 = getelementptr i32, i32* %576, i64 %637
  %639 = bitcast i32* %638 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %639, align 4
  %640 = getelementptr i32, i32* %638, i64 4
  %641 = bitcast i32* %640 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %641, align 4
  %642 = or i64 %611, 48
  %643 = getelementptr i32, i32* %576, i64 %642
  %644 = bitcast i32* %643 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %644, align 4
  %645 = getelementptr i32, i32* %643, i64 4
  %646 = bitcast i32* %645 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %646, align 4
  %647 = or i64 %611, 56
  %648 = getelementptr i32, i32* %576, i64 %647
  %649 = bitcast i32* %648 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %649, align 4
  %650 = getelementptr i32, i32* %648, i64 4
  %651 = bitcast i32* %650 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %651, align 4
  %652 = add i64 %611, 64
  %653 = add i64 %612, -8
  %654 = icmp eq i64 %653, 0
  br i1 %654, label %655, label %610, !llvm.loop !16

655:                                              ; preds = %610, %596
  %656 = phi i64 [ 0, %596 ], [ %652, %610 ]
  %657 = icmp eq i64 %606, 0
  br i1 %657, label %668, label %658

658:                                              ; preds = %655, %658
  %659 = phi i64 [ %665, %658 ], [ %656, %655 ]
  %660 = phi i64 [ %666, %658 ], [ %606, %655 ]
  %661 = getelementptr i32, i32* %576, i64 %659
  %662 = bitcast i32* %661 to <4 x i32>*
  store <4 x i32> %600, <4 x i32>* %662, align 4
  %663 = getelementptr i32, i32* %661, i64 4
  %664 = bitcast i32* %663 to <4 x i32>*
  store <4 x i32> %602, <4 x i32>* %664, align 4
  %665 = add i64 %659, 8
  %666 = add i64 %660, -1
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %668, label %658, !llvm.loop !17

668:                                              ; preds = %658, %655
  %669 = icmp eq i64 %591, %597
  br i1 %669, label %744, label %594

670:                                              ; preds = %572
  br i1 %592, label %671, label %673

671:                                              ; preds = %730, %670
  %672 = phi i32* [ %576, %670 ], [ %675, %730 ]
  br label %736

673:                                              ; preds = %670
  %674 = and i64 %591, 9223372036854775800
  %675 = getelementptr i32, i32* %576, i64 %674
  %676 = insertelement <4 x i32> undef, i32 %22, i32 0
  %677 = shufflevector <4 x i32> %676, <4 x i32> undef, <4 x i32> zeroinitializer
  %678 = insertelement <4 x i32> undef, i32 %22, i32 0
  %679 = shufflevector <4 x i32> %678, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %680

680:                                              ; preds = %727, %673
  %681 = phi i64 [ 0, %673 ], [ %728, %727 ]
  %682 = getelementptr i32, i32* %576, i64 %681
  %683 = bitcast i32* %682 to <4 x i32>*
  %684 = load <4 x i32>, <4 x i32>* %683, align 4
  %685 = getelementptr i32, i32* %682, i64 4
  %686 = bitcast i32* %685 to <4 x i32>*
  %687 = load <4 x i32>, <4 x i32>* %686, align 4
  %688 = icmp eq <4 x i32> %684, %677
  %689 = icmp eq <4 x i32> %687, %679
  %690 = extractelement <4 x i1> %688, i32 0
  br i1 %690, label %691, label %692

691:                                              ; preds = %680
  store i32 %3, i32* %682, align 4
  br label %692

692:                                              ; preds = %691, %680
  %693 = extractelement <4 x i1> %688, i32 1
  br i1 %693, label %694, label %697

694:                                              ; preds = %692
  %695 = or i64 %681, 1
  %696 = getelementptr i32, i32* %576, i64 %695
  store i32 %3, i32* %696, align 4
  br label %697

697:                                              ; preds = %694, %692
  %698 = extractelement <4 x i1> %688, i32 2
  br i1 %698, label %699, label %702

699:                                              ; preds = %697
  %700 = or i64 %681, 2
  %701 = getelementptr i32, i32* %576, i64 %700
  store i32 %3, i32* %701, align 4
  br label %702

702:                                              ; preds = %699, %697
  %703 = extractelement <4 x i1> %688, i32 3
  br i1 %703, label %704, label %707

704:                                              ; preds = %702
  %705 = or i64 %681, 3
  %706 = getelementptr i32, i32* %576, i64 %705
  store i32 %3, i32* %706, align 4
  br label %707

707:                                              ; preds = %704, %702
  %708 = extractelement <4 x i1> %689, i32 0
  br i1 %708, label %709, label %712

709:                                              ; preds = %707
  %710 = or i64 %681, 4
  %711 = getelementptr i32, i32* %576, i64 %710
  store i32 %3, i32* %711, align 4
  br label %712

712:                                              ; preds = %709, %707
  %713 = extractelement <4 x i1> %689, i32 1
  br i1 %713, label %714, label %717

714:                                              ; preds = %712
  %715 = or i64 %681, 5
  %716 = getelementptr i32, i32* %576, i64 %715
  store i32 %3, i32* %716, align 4
  br label %717

717:                                              ; preds = %714, %712
  %718 = extractelement <4 x i1> %689, i32 2
  br i1 %718, label %719, label %722

719:                                              ; preds = %717
  %720 = or i64 %681, 6
  %721 = getelementptr i32, i32* %576, i64 %720
  store i32 %3, i32* %721, align 4
  br label %722

722:                                              ; preds = %719, %717
  %723 = extractelement <4 x i1> %689, i32 3
  br i1 %723, label %724, label %727

724:                                              ; preds = %722
  %725 = or i64 %681, 7
  %726 = getelementptr i32, i32* %576, i64 %725
  store i32 %3, i32* %726, align 4
  br label %727

727:                                              ; preds = %724, %722
  %728 = add i64 %681, 8
  %729 = icmp eq i64 %728, %674
  br i1 %729, label %730, label %680, !llvm.loop !18

730:                                              ; preds = %727
  %731 = icmp eq i64 %591, %674
  br i1 %731, label %744, label %671

732:                                              ; preds = %594, %732
  %733 = phi i32* [ %734, %732 ], [ %595, %594 ]
  %734 = getelementptr inbounds i32, i32* %733, i64 1
  store i32 %3, i32* %733, align 4
  %735 = icmp ult i32* %734, %578
  br i1 %735, label %732, label %744, !llvm.loop !19

736:                                              ; preds = %671, %741
  %737 = phi i32* [ %742, %741 ], [ %672, %671 ]
  %738 = load i32, i32* %737, align 4
  %739 = icmp eq i32 %738, %22
  br i1 %739, label %740, label %741

740:                                              ; preds = %736
  store i32 %3, i32* %737, align 4
  br label %741

741:                                              ; preds = %740, %736
  %742 = getelementptr inbounds i32, i32* %737, i64 1
  %743 = icmp ult i32* %742, %578
  br i1 %743, label %736, label %744, !llvm.loop !20

744:                                              ; preds = %383, %392, %505, %510, %732, %741, %303, %381, %668, %730, %554, %561, %33, %40, %305, %212, %543, %17, %5, %7
  %745 = phi i8 [ 0, %7 ], [ 0, %5 ], [ 1, %17 ], [ 1, %543 ], [ 1, %305 ], [ 1, %212 ], [ 0, %40 ], [ 0, %33 ], [ 0, %561 ], [ 0, %554 ], [ 1, %730 ], [ 1, %668 ], [ 1, %381 ], [ 1, %303 ], [ 1, %741 ], [ 1, %732 ], [ 0, %510 ], [ 0, %505 ], [ 1, %392 ], [ 1, %383 ]
  ret i8 %745

746:                                              ; preds = %471
  store i32 %3, i32* %472, align 4
  br label %747

747:                                              ; preds = %746, %471
  %748 = extractelement <4 x i1> %475, i32 1
  br i1 %748, label %749, label %751

749:                                              ; preds = %747
  %750 = getelementptr inbounds i32, i32* %452, i64 5
  store i32 %3, i32* %750, align 4
  br label %751

751:                                              ; preds = %749, %747
  %752 = extractelement <4 x i1> %475, i32 2
  br i1 %752, label %753, label %755

753:                                              ; preds = %751
  %754 = getelementptr inbounds i32, i32* %452, i64 6
  store i32 %3, i32* %754, align 4
  br label %755

755:                                              ; preds = %753, %751
  %756 = extractelement <4 x i1> %475, i32 3
  br i1 %756, label %757, label %759

757:                                              ; preds = %755
  %758 = getelementptr inbounds i32, i32* %452, i64 7
  store i32 %3, i32* %758, align 4
  br label %759

759:                                              ; preds = %757, %755
  %760 = getelementptr inbounds i32, i32* %452, i64 8
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4
  %763 = icmp eq <4 x i32> %762, %440
  %764 = extractelement <4 x i1> %763, i32 0
  br i1 %764, label %765, label %766

765:                                              ; preds = %759
  store i32 %3, i32* %760, align 4
  br label %766

766:                                              ; preds = %765, %759
  %767 = extractelement <4 x i1> %763, i32 1
  br i1 %767, label %768, label %770

768:                                              ; preds = %766
  %769 = getelementptr inbounds i32, i32* %452, i64 9
  store i32 %3, i32* %769, align 4
  br label %770

770:                                              ; preds = %768, %766
  %771 = extractelement <4 x i1> %763, i32 2
  br i1 %771, label %772, label %774

772:                                              ; preds = %770
  %773 = getelementptr inbounds i32, i32* %452, i64 10
  store i32 %3, i32* %773, align 4
  br label %774

774:                                              ; preds = %772, %770
  %775 = extractelement <4 x i1> %763, i32 3
  br i1 %775, label %776, label %778

776:                                              ; preds = %774
  %777 = getelementptr inbounds i32, i32* %452, i64 11
  store i32 %3, i32* %777, align 4
  br label %778

778:                                              ; preds = %776, %774
  %779 = getelementptr inbounds i32, i32* %452, i64 12
  %780 = bitcast i32* %779 to <4 x i32>*
  %781 = load <4 x i32>, <4 x i32>* %780, align 4
  %782 = icmp eq <4 x i32> %781, %440
  %783 = extractelement <4 x i1> %782, i32 0
  br i1 %783, label %784, label %785

784:                                              ; preds = %778
  store i32 %3, i32* %779, align 4
  br label %785

785:                                              ; preds = %784, %778
  %786 = extractelement <4 x i1> %782, i32 1
  br i1 %786, label %787, label %789

787:                                              ; preds = %785
  %788 = getelementptr inbounds i32, i32* %452, i64 13
  store i32 %3, i32* %788, align 4
  br label %789

789:                                              ; preds = %787, %785
  %790 = extractelement <4 x i1> %782, i32 2
  br i1 %790, label %791, label %793

791:                                              ; preds = %789
  %792 = getelementptr inbounds i32, i32* %452, i64 14
  store i32 %3, i32* %792, align 4
  br label %793

793:                                              ; preds = %791, %789
  %794 = extractelement <4 x i1> %782, i32 3
  br i1 %794, label %795, label %797

795:                                              ; preds = %793
  %796 = getelementptr inbounds i32, i32* %452, i64 15
  store i32 %3, i32* %796, align 4
  br label %797

797:                                              ; preds = %795, %793
  %798 = getelementptr inbounds i32, i32* %452, i64 16
  %799 = bitcast i32* %798 to <4 x i32>*
  %800 = load <4 x i32>, <4 x i32>* %799, align 4
  %801 = icmp eq <4 x i32> %800, %440
  %802 = extractelement <4 x i1> %801, i32 0
  br i1 %802, label %803, label %804

803:                                              ; preds = %797
  store i32 %3, i32* %798, align 4
  br label %804

804:                                              ; preds = %803, %797
  %805 = extractelement <4 x i1> %801, i32 1
  br i1 %805, label %806, label %808

806:                                              ; preds = %804
  %807 = getelementptr inbounds i32, i32* %452, i64 17
  store i32 %3, i32* %807, align 4
  br label %808

808:                                              ; preds = %806, %804
  %809 = extractelement <4 x i1> %801, i32 2
  br i1 %809, label %810, label %812

810:                                              ; preds = %808
  %811 = getelementptr inbounds i32, i32* %452, i64 18
  store i32 %3, i32* %811, align 4
  br label %812

812:                                              ; preds = %810, %808
  %813 = extractelement <4 x i1> %801, i32 3
  br i1 %813, label %814, label %816

814:                                              ; preds = %812
  %815 = getelementptr inbounds i32, i32* %452, i64 19
  store i32 %3, i32* %815, align 4
  br label %816

816:                                              ; preds = %814, %812
  %817 = getelementptr inbounds i32, i32* %452, i64 20
  %818 = bitcast i32* %817 to <4 x i32>*
  %819 = load <4 x i32>, <4 x i32>* %818, align 4
  %820 = icmp eq <4 x i32> %819, %440
  %821 = extractelement <4 x i1> %820, i32 0
  br i1 %821, label %822, label %823

822:                                              ; preds = %816
  store i32 %3, i32* %817, align 4
  br label %823

823:                                              ; preds = %822, %816
  %824 = extractelement <4 x i1> %820, i32 1
  br i1 %824, label %825, label %827

825:                                              ; preds = %823
  %826 = getelementptr inbounds i32, i32* %452, i64 21
  store i32 %3, i32* %826, align 4
  br label %827

827:                                              ; preds = %825, %823
  %828 = extractelement <4 x i1> %820, i32 2
  br i1 %828, label %829, label %831

829:                                              ; preds = %827
  %830 = getelementptr inbounds i32, i32* %452, i64 22
  store i32 %3, i32* %830, align 4
  br label %831

831:                                              ; preds = %829, %827
  %832 = extractelement <4 x i1> %820, i32 3
  br i1 %832, label %833, label %835

833:                                              ; preds = %831
  %834 = getelementptr inbounds i32, i32* %452, i64 23
  store i32 %3, i32* %834, align 4
  br label %835

835:                                              ; preds = %833, %831
  %836 = getelementptr inbounds i32, i32* %452, i64 24
  %837 = bitcast i32* %836 to <4 x i32>*
  %838 = load <4 x i32>, <4 x i32>* %837, align 4
  %839 = icmp eq <4 x i32> %838, %440
  %840 = extractelement <4 x i1> %839, i32 0
  br i1 %840, label %841, label %842

841:                                              ; preds = %835
  store i32 %3, i32* %836, align 4
  br label %842

842:                                              ; preds = %841, %835
  %843 = extractelement <4 x i1> %839, i32 1
  br i1 %843, label %844, label %846

844:                                              ; preds = %842
  %845 = getelementptr inbounds i32, i32* %452, i64 25
  store i32 %3, i32* %845, align 4
  br label %846

846:                                              ; preds = %844, %842
  %847 = extractelement <4 x i1> %839, i32 2
  br i1 %847, label %848, label %850

848:                                              ; preds = %846
  %849 = getelementptr inbounds i32, i32* %452, i64 26
  store i32 %3, i32* %849, align 4
  br label %850

850:                                              ; preds = %848, %846
  %851 = extractelement <4 x i1> %839, i32 3
  br i1 %851, label %852, label %854

852:                                              ; preds = %850
  %853 = getelementptr inbounds i32, i32* %452, i64 27
  store i32 %3, i32* %853, align 4
  br label %854

854:                                              ; preds = %852, %850
  %855 = getelementptr inbounds i32, i32* %452, i64 28
  %856 = bitcast i32* %855 to <4 x i32>*
  %857 = load <4 x i32>, <4 x i32>* %856, align 4
  %858 = icmp eq <4 x i32> %857, %440
  %859 = extractelement <4 x i1> %858, i32 0
  br i1 %859, label %860, label %861

860:                                              ; preds = %854
  store i32 %3, i32* %855, align 4
  br label %861

861:                                              ; preds = %860, %854
  %862 = extractelement <4 x i1> %858, i32 1
  br i1 %862, label %863, label %865

863:                                              ; preds = %861
  %864 = getelementptr inbounds i32, i32* %452, i64 29
  store i32 %3, i32* %864, align 4
  br label %865

865:                                              ; preds = %863, %861
  %866 = extractelement <4 x i1> %858, i32 2
  br i1 %866, label %867, label %869

867:                                              ; preds = %865
  %868 = getelementptr inbounds i32, i32* %452, i64 30
  store i32 %3, i32* %868, align 4
  br label %869

869:                                              ; preds = %867, %865
  %870 = extractelement <4 x i1> %858, i32 3
  br i1 %870, label %871, label %539

871:                                              ; preds = %869
  %872 = getelementptr inbounds i32, i32* %452, i64 31
  store i32 %3, i32* %872, align 4
  br label %539
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrie_serialize_69(%struct.UNewTrie*, i8*, i32, i32 (%struct.UNewTrie*, i32, i32)*, i8 signext, i32*) local_unnamed_addr #0 {
  %7 = bitcast %struct.UNewTrie* %0 to i8*
  %8 = alloca [32 x i32], align 16
  %9 = icmp eq i32* %5, null
  br i1 %9, label %563, label %10

10:                                               ; preds = %6
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %563

13:                                               ; preds = %10
  %14 = icmp eq %struct.UNewTrie* %0, null
  %15 = icmp slt i32 %2, 0
  %16 = or i1 %14, %15
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = icmp sgt i32 %2, 0
  %19 = icmp eq i8* %1, null
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %13
  store i32 1, i32* %5, align 4
  br label %563

22:                                               ; preds = %17
  %23 = icmp eq i32 (%struct.UNewTrie*, i32, i32)* %3, null
  %24 = select i1 %23, i32 (%struct.UNewTrie*, i32, i32)* @_ZL21defaultGetFoldedValueP8UNewTrieii, i32 (%struct.UNewTrie*, i32, i32)* %3
  %25 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 9
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %221

28:                                               ; preds = %22
  tail call fastcc void @_ZL13utrie_compactP8UNewTrieaP10UErrorCode(%struct.UNewTrie* nonnull %0, i8 signext 0, i32* nonnull %5)
  %29 = bitcast [32 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %29)
  %30 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1728
  %31 = bitcast i32* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %29, i8* align 4 %31, i64 128, i1 false) #8
  %32 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %35 = load i32*, i32** %34, align 8
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %33, %36
  br i1 %37, label %69, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, 32
  %42 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %41, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %38
  store i32 %41, i32* %39, align 4
  %46 = icmp slt i32 %40, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45, %38
  store i32 7, i32* %5, align 4
  br label %218

48:                                               ; preds = %45
  %49 = sext i32 %40 to i64
  %50 = getelementptr inbounds i32, i32* %35, i64 %49
  %51 = insertelement <4 x i32> undef, i32 %33, i32 0
  %52 = shufflevector <4 x i32> %51, <4 x i32> undef, <4 x i32> zeroinitializer
  %53 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %53, align 4
  %54 = getelementptr inbounds i32, i32* %50, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %55, align 4
  %56 = getelementptr inbounds i32, i32* %50, i64 8
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %57, align 4
  %58 = getelementptr inbounds i32, i32* %50, i64 12
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %50, i64 16
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %61, align 4
  %62 = getelementptr inbounds i32, i32* %50, i64 20
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %63, align 4
  %64 = getelementptr inbounds i32, i32* %50, i64 24
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %65, align 4
  %66 = getelementptr inbounds i32, i32* %50, i64 28
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %67, align 4
  %68 = sub nsw i32 0, %40
  br label %69

69:                                               ; preds = %48, %28
  %70 = phi i32 [ %68, %48 ], [ 0, %28 ]
  %71 = insertelement <4 x i32> undef, i32 %70, i32 0
  %72 = shufflevector <4 x i32> %71, <4 x i32> undef, <4 x i32> zeroinitializer
  %73 = bitcast i32* %30 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %73, align 4
  %74 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1732
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %75, align 4
  %76 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1736
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %77, align 4
  %78 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1740
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1744
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %81, align 4
  %82 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1748
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %83, align 4
  %84 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1752
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %85, align 4
  %86 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1756
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %89 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 4
  br label %90

90:                                               ; preds = %201, %69
  %91 = phi i32 [ 2048, %69 ], [ %203, %201 ]
  %92 = phi i32 [ 65536, %69 ], [ %202, %201 ]
  %93 = ashr i32 %92, 5
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %199, label %98

98:                                               ; preds = %90
  %99 = and i32 %92, -1024
  %100 = ashr exact i32 %99, 5
  %101 = icmp sgt i32 %91, 2048
  br i1 %101, label %102, label %130

102:                                              ; preds = %98
  %103 = sext i32 %100 to i64
  %104 = sext i32 %91 to i64
  br label %105

105:                                              ; preds = %127, %102
  %106 = phi i64 [ 2048, %102 ], [ %128, %127 ]
  br label %107

107:                                              ; preds = %565, %105
  %108 = phi i64 [ 0, %105 ], [ %566, %565 ]
  %109 = add nuw nsw i64 %108, %106
  %110 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = add nuw nsw i64 %108, %103
  %113 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %111, %114
  br i1 %115, label %116, label %127

116:                                              ; preds = %107
  %117 = or i64 %108, 1
  %118 = add nuw nsw i64 %117, %106
  %119 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = add nuw nsw i64 %117, %103
  %122 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %120, %123
  br i1 %124, label %565, label %127

125:                                              ; preds = %565
  %126 = trunc i64 %106 to i32
  br label %130

127:                                              ; preds = %116, %107
  %128 = add nuw nsw i64 %106, 32
  %129 = icmp slt i64 %128, %104
  br i1 %129, label %105, label %130

130:                                              ; preds = %127, %98, %125
  %131 = phi i32 [ %91, %98 ], [ %126, %125 ], [ %91, %127 ]
  %132 = add nsw i32 %131, 32
  %133 = tail call i32 %24(%struct.UNewTrie* %0, i32 %99, i32 %132) #8
  %134 = lshr i32 %92, 10
  %135 = add nuw nsw i32 %134, 55232
  %136 = and i32 %135, 65535
  %137 = load i8, i8* %25, align 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %153

139:                                              ; preds = %130
  %140 = lshr i32 %136, 5
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = load i32*, i32** %34, align 8
  %145 = icmp slt i32 %143, 0
  %146 = sub nsw i32 0, %143
  %147 = select i1 %145, i32 %146, i32 %143
  %148 = and i32 %135, 31
  %149 = add nuw nsw i32 %147, %148
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %144, i64 %150
  %152 = load i32, i32* %151, align 4
  br label %153

153:                                              ; preds = %139, %130
  %154 = phi i32 [ %152, %139 ], [ 0, %130 ]
  %155 = icmp eq i32 %133, %154
  br i1 %155, label %196, label %156

156:                                              ; preds = %153
  br i1 %138, label %157, label %179

157:                                              ; preds = %156
  %158 = lshr i32 %136, 5
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %180, label %163

163:                                              ; preds = %157
  %164 = load i32, i32* %88, align 4
  %165 = add nsw i32 %164, 32
  %166 = load i32, i32* %89, align 8
  %167 = icmp sgt i32 %165, %166
  br i1 %167, label %179, label %168

168:                                              ; preds = %163
  store i32 %165, i32* %88, align 4
  %169 = icmp slt i32 %164, 0
  br i1 %169, label %179, label %170

170:                                              ; preds = %168
  store i32 %164, i32* %160, align 4
  %171 = load i32*, i32** %34, align 8
  %172 = sext i32 %164 to i64
  %173 = getelementptr inbounds i32, i32* %171, i64 %172
  %174 = bitcast i32* %173 to i8*
  %175 = sext i32 %161 to i64
  %176 = sub nsw i64 0, %175
  %177 = getelementptr inbounds i32, i32* %171, i64 %176
  %178 = bitcast i32* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %178, i64 128, i1 false) #8
  br label %180

179:                                              ; preds = %168, %163, %156
  store i32 7, i32* %5, align 4
  br label %218

180:                                              ; preds = %170, %157
  %181 = phi i32 [ %164, %170 ], [ %161, %157 ]
  %182 = load i32*, i32** %34, align 8
  %183 = and i32 %135, 31
  %184 = add nuw nsw i32 %181, %183
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i32, i32* %182, i64 %185
  store i32 %133, i32* %186, align 4
  %187 = icmp eq i32 %131, %91
  br i1 %187, label %188, label %196

188:                                              ; preds = %180
  %189 = sext i32 %91 to i64
  %190 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %189
  %191 = bitcast i32* %190 to i8*
  %192 = sext i32 %100 to i64
  %193 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %192
  %194 = bitcast i32* %193 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %194, i64 128, i1 false) #8
  %195 = add nsw i32 %91, 32
  br label %196

196:                                              ; preds = %188, %180, %153
  %197 = phi i32 [ %195, %188 ], [ %91, %180 ], [ %91, %153 ]
  %198 = add nsw i32 %99, 1024
  br label %201

199:                                              ; preds = %90
  %200 = add nsw i32 %92, 32
  br label %201

201:                                              ; preds = %199, %196
  %202 = phi i32 [ %198, %196 ], [ %200, %199 ]
  %203 = phi i32 [ %197, %196 ], [ %91, %199 ]
  %204 = icmp slt i32 %202, 1114112
  br i1 %204, label %90, label %205

205:                                              ; preds = %201
  %206 = icmp sgt i32 %203, 34815
  br i1 %206, label %207, label %208

207:                                              ; preds = %205
  store i32 8, i32* %5, align 4
  br label %218

208:                                              ; preds = %205
  %209 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 2048
  %210 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 2080
  %211 = bitcast i32* %210 to i8*
  %212 = bitcast i32* %209 to i8*
  %213 = shl i32 %203, 2
  %214 = add i32 %213, -8192
  %215 = sext i32 %214 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 %215, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* nonnull align 16 %29, i64 128, i1 false) #8
  %216 = add nsw i32 %203, 32
  %217 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 3
  store i32 %216, i32* %217, align 4
  br label %218

218:                                              ; preds = %47, %179, %207, %208
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %29)
  tail call fastcc void @_ZL13utrie_compactP8UNewTrieaP10UErrorCode(%struct.UNewTrie* %0, i8 signext 1, i32* nonnull %5)
  store i8 1, i8* %25, align 1
  %219 = load i32, i32* %5, align 4
  %220 = icmp slt i32 %219, 1
  br i1 %220, label %221, label %563

221:                                              ; preds = %218, %22
  %222 = icmp ne i8 %4, 0
  %223 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %229

225:                                              ; preds = %221
  %226 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 3
  %227 = load i32, i32* %226, align 4
  %228 = add nsw i32 %227, %224
  br label %229

229:                                              ; preds = %221, %225
  %230 = phi i32 [ %228, %225 ], [ %224, %221 ]
  %231 = icmp sgt i32 %230, 262143
  br i1 %231, label %232, label %234

232:                                              ; preds = %229
  store i32 8, i32* %5, align 4
  %233 = load i32, i32* %223, align 4
  br label %234

234:                                              ; preds = %232, %229
  %235 = phi i32 [ %233, %232 ], [ %224, %229 ]
  %236 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 3
  %237 = load i32, i32* %236, align 4
  %238 = shl i32 %237, 1
  %239 = add i32 %238, 16
  %240 = select i1 %222, i32 1, i32 2
  %241 = shl nsw i32 %235, %240
  %242 = add nsw i32 %239, %241
  %243 = icmp sgt i32 %242, %2
  br i1 %243, label %563, label %244

244:                                              ; preds = %234
  %245 = getelementptr inbounds i8, i8* %1, i64 16
  %246 = bitcast i8* %1 to i32*
  store i32 1416784229, i32* %246, align 4
  %247 = getelementptr inbounds i8, i8* %1, i64 4
  %248 = bitcast i8* %247 to i32*
  %249 = select i1 %222, i32 37, i32 293
  store i32 %249, i32* %248, align 4
  %250 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 8
  %251 = load i8, i8* %250, align 2
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %255, label %253

253:                                              ; preds = %244
  %254 = or i32 %249, 512
  store i32 %254, i32* %248, align 4
  br label %255

255:                                              ; preds = %244, %253
  %256 = load i32, i32* %236, align 4
  %257 = getelementptr inbounds i8, i8* %1, i64 8
  %258 = bitcast i8* %257 to i32*
  store i32 %256, i32* %258, align 4
  %259 = load i32, i32* %223, align 4
  %260 = getelementptr inbounds i8, i8* %1, i64 12
  %261 = bitcast i8* %260 to i32*
  store i32 %259, i32* %261, align 4
  %262 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 0
  %263 = bitcast i8* %245 to i16*
  %264 = load i32, i32* %236, align 4
  %265 = icmp sgt i32 %264, 0
  br i1 %222, label %356, label %266

266:                                              ; preds = %255
  br i1 %265, label %267, label %554

267:                                              ; preds = %266
  %268 = add nsw i32 %264, -1
  %269 = zext i32 %268 to i64
  %270 = add nuw nsw i64 %269, 1
  %271 = icmp ult i64 %270, 8
  br i1 %271, label %272, label %276

272:                                              ; preds = %354, %276, %267
  %273 = phi i32 [ %264, %276 ], [ %264, %267 ], [ %291, %354 ]
  %274 = phi i16* [ %263, %276 ], [ %263, %267 ], [ %292, %354 ]
  %275 = phi i32* [ %262, %276 ], [ %262, %267 ], [ %293, %354 ]
  br label %543

276:                                              ; preds = %267
  %277 = add nsw i32 %264, -1
  %278 = zext i32 %277 to i64
  %279 = shl nuw nsw i64 %278, 1
  %280 = add nuw nsw i64 %279, 18
  %281 = getelementptr i8, i8* %1, i64 %280
  %282 = add nuw nsw i64 %278, 1
  %283 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %282
  %284 = bitcast i32* %283 to i8*
  %285 = icmp ult i8* %245, %284
  %286 = icmp ugt i8* %281, %7
  %287 = and i1 %285, %286
  br i1 %287, label %272, label %288

288:                                              ; preds = %276
  %289 = and i64 %270, 8589934584
  %290 = trunc i64 %289 to i32
  %291 = sub i32 %264, %290
  %292 = getelementptr i16, i16* %263, i64 %289
  %293 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %289
  %294 = add nsw i64 %289, -8
  %295 = lshr exact i64 %294, 3
  %296 = add nuw nsw i64 %295, 1
  %297 = and i64 %296, 1
  %298 = icmp eq i64 %294, 0
  br i1 %298, label %336, label %299

299:                                              ; preds = %288
  %300 = sub nuw nsw i64 %296, %297
  br label %301

301:                                              ; preds = %301, %299
  %302 = phi i64 [ 0, %299 ], [ %333, %301 ]
  %303 = phi i64 [ %300, %299 ], [ %334, %301 ]
  %304 = getelementptr i16, i16* %263, i64 %302
  %305 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %302
  %306 = bitcast i32* %305 to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 4, !alias.scope !21
  %308 = getelementptr i32, i32* %305, i64 4
  %309 = bitcast i32* %308 to <4 x i32>*
  %310 = load <4 x i32>, <4 x i32>* %309, align 4, !alias.scope !21
  %311 = lshr <4 x i32> %307, <i32 2, i32 2, i32 2, i32 2>
  %312 = lshr <4 x i32> %310, <i32 2, i32 2, i32 2, i32 2>
  %313 = trunc <4 x i32> %311 to <4 x i16>
  %314 = trunc <4 x i32> %312 to <4 x i16>
  %315 = bitcast i16* %304 to <4 x i16>*
  store <4 x i16> %313, <4 x i16>* %315, align 2, !alias.scope !24, !noalias !21
  %316 = getelementptr i16, i16* %304, i64 4
  %317 = bitcast i16* %316 to <4 x i16>*
  store <4 x i16> %314, <4 x i16>* %317, align 2, !alias.scope !24, !noalias !21
  %318 = or i64 %302, 8
  %319 = getelementptr i16, i16* %263, i64 %318
  %320 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %318
  %321 = bitcast i32* %320 to <4 x i32>*
  %322 = load <4 x i32>, <4 x i32>* %321, align 4, !alias.scope !21
  %323 = getelementptr i32, i32* %320, i64 4
  %324 = bitcast i32* %323 to <4 x i32>*
  %325 = load <4 x i32>, <4 x i32>* %324, align 4, !alias.scope !21
  %326 = lshr <4 x i32> %322, <i32 2, i32 2, i32 2, i32 2>
  %327 = lshr <4 x i32> %325, <i32 2, i32 2, i32 2, i32 2>
  %328 = trunc <4 x i32> %326 to <4 x i16>
  %329 = trunc <4 x i32> %327 to <4 x i16>
  %330 = bitcast i16* %319 to <4 x i16>*
  store <4 x i16> %328, <4 x i16>* %330, align 2, !alias.scope !24, !noalias !21
  %331 = getelementptr i16, i16* %319, i64 4
  %332 = bitcast i16* %331 to <4 x i16>*
  store <4 x i16> %329, <4 x i16>* %332, align 2, !alias.scope !24, !noalias !21
  %333 = add i64 %302, 16
  %334 = add i64 %303, -2
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %301, !llvm.loop !26

336:                                              ; preds = %301, %288
  %337 = phi i64 [ 0, %288 ], [ %333, %301 ]
  %338 = icmp eq i64 %297, 0
  br i1 %338, label %354, label %339

339:                                              ; preds = %336
  %340 = getelementptr i16, i16* %263, i64 %337
  %341 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %337
  %342 = bitcast i32* %341 to <4 x i32>*
  %343 = load <4 x i32>, <4 x i32>* %342, align 4, !alias.scope !21
  %344 = getelementptr i32, i32* %341, i64 4
  %345 = bitcast i32* %344 to <4 x i32>*
  %346 = load <4 x i32>, <4 x i32>* %345, align 4, !alias.scope !21
  %347 = lshr <4 x i32> %343, <i32 2, i32 2, i32 2, i32 2>
  %348 = lshr <4 x i32> %346, <i32 2, i32 2, i32 2, i32 2>
  %349 = trunc <4 x i32> %347 to <4 x i16>
  %350 = trunc <4 x i32> %348 to <4 x i16>
  %351 = bitcast i16* %340 to <4 x i16>*
  store <4 x i16> %349, <4 x i16>* %351, align 2, !alias.scope !24, !noalias !21
  %352 = getelementptr i16, i16* %340, i64 4
  %353 = bitcast i16* %352 to <4 x i16>*
  store <4 x i16> %350, <4 x i16>* %353, align 2, !alias.scope !24, !noalias !21
  br label %354

354:                                              ; preds = %336, %339
  %355 = icmp eq i64 %270, %289
  br i1 %355, label %554, label %272

356:                                              ; preds = %255
  br i1 %265, label %357, label %445

357:                                              ; preds = %356
  %358 = load i32, i32* %262, align 4
  %359 = add i32 %264, %358
  %360 = lshr i32 %359, 2
  %361 = trunc i32 %360 to i16
  %362 = getelementptr inbounds i8, i8* %1, i64 18
  %363 = bitcast i8* %362 to i16*
  store i16 %361, i16* %263, align 2
  %364 = add nsw i32 %264, -1
  %365 = icmp sgt i32 %364, 0
  br i1 %365, label %366, label %445

366:                                              ; preds = %357
  %367 = add i32 %264, -2
  %368 = zext i32 %367 to i64
  %369 = add nuw nsw i64 %368, 1
  %370 = icmp ult i64 %369, 8
  br i1 %370, label %428, label %371

371:                                              ; preds = %366
  %372 = getelementptr i8, i8* %1, i64 18
  %373 = add i32 %264, -2
  %374 = zext i32 %373 to i64
  %375 = shl nuw nsw i64 %374, 1
  %376 = add nuw nsw i64 %375, 20
  %377 = getelementptr i8, i8* %1, i64 %376
  %378 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 1
  %379 = bitcast i32* %378 to i8*
  %380 = add nuw nsw i64 %374, 2
  %381 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %380
  %382 = bitcast i32* %381 to i8*
  %383 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 3
  %384 = bitcast i32* %383 to i8*
  %385 = getelementptr i8, i8* %384, i64 1
  %386 = icmp ult i8* %372, %382
  %387 = icmp ugt i8* %377, %379
  %388 = and i1 %386, %387
  %389 = bitcast i32* %236 to i8*
  %390 = icmp ult i8* %372, %385
  %391 = icmp ugt i8* %377, %389
  %392 = and i1 %390, %391
  %393 = or i1 %388, %392
  br i1 %393, label %428, label %394

394:                                              ; preds = %371
  %395 = and i64 %369, 8589934584
  %396 = trunc i64 %395 to i32
  %397 = sub i32 %364, %396
  %398 = getelementptr i16, i16* %363, i64 %395
  %399 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %395
  %400 = load i32, i32* %236, align 4, !alias.scope !27
  %401 = insertelement <4 x i32> undef, i32 %400, i32 0
  %402 = shufflevector <4 x i32> %401, <4 x i32> undef, <4 x i32> zeroinitializer
  %403 = insertelement <4 x i32> undef, i32 %400, i32 0
  %404 = shufflevector <4 x i32> %403, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %405

405:                                              ; preds = %405, %394
  %406 = phi i64 [ 0, %394 ], [ %424, %405 ]
  %407 = getelementptr i16, i16* %363, i64 %406
  %408 = getelementptr %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %406
  %409 = getelementptr inbounds i32, i32* %408, i64 1
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4, !alias.scope !30
  %412 = getelementptr inbounds i32, i32* %408, i64 5
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4, !alias.scope !30
  %415 = add <4 x i32> %402, %411
  %416 = add <4 x i32> %404, %414
  %417 = lshr <4 x i32> %415, <i32 2, i32 2, i32 2, i32 2>
  %418 = lshr <4 x i32> %416, <i32 2, i32 2, i32 2, i32 2>
  %419 = trunc <4 x i32> %417 to <4 x i16>
  %420 = trunc <4 x i32> %418 to <4 x i16>
  %421 = bitcast i16* %407 to <4 x i16>*
  store <4 x i16> %419, <4 x i16>* %421, align 2, !alias.scope !32, !noalias !34
  %422 = getelementptr i16, i16* %407, i64 4
  %423 = bitcast i16* %422 to <4 x i16>*
  store <4 x i16> %420, <4 x i16>* %423, align 2, !alias.scope !32, !noalias !34
  %424 = add i64 %406, 8
  %425 = icmp eq i64 %424, %395
  br i1 %425, label %426, label %405, !llvm.loop !35

426:                                              ; preds = %405
  %427 = icmp eq i64 %369, %395
  br i1 %427, label %445, label %428

428:                                              ; preds = %426, %371, %366
  %429 = phi i32 [ %364, %371 ], [ %364, %366 ], [ %397, %426 ]
  %430 = phi i16* [ %363, %371 ], [ %363, %366 ], [ %398, %426 ]
  %431 = phi i32* [ %262, %371 ], [ %262, %366 ], [ %399, %426 ]
  br label %432

432:                                              ; preds = %428, %432
  %433 = phi i32 [ %443, %432 ], [ %429, %428 ]
  %434 = phi i16* [ %442, %432 ], [ %430, %428 ]
  %435 = phi i32* [ %436, %432 ], [ %431, %428 ]
  %436 = getelementptr inbounds i32, i32* %435, i64 1
  %437 = load i32, i32* %236, align 4
  %438 = load i32, i32* %436, align 4
  %439 = add i32 %437, %438
  %440 = lshr i32 %439, 2
  %441 = trunc i32 %440 to i16
  %442 = getelementptr inbounds i16, i16* %434, i64 1
  store i16 %441, i16* %434, align 2
  %443 = add nsw i32 %433, -1
  %444 = icmp sgt i32 %443, 0
  br i1 %444, label %432, label %445, !llvm.loop !36

445:                                              ; preds = %432, %357, %426, %356
  %446 = phi i16* [ %263, %356 ], [ %363, %357 ], [ %398, %426 ], [ %442, %432 ]
  %447 = load i32, i32* %223, align 4
  %448 = icmp sgt i32 %447, 0
  br i1 %448, label %449, label %563

449:                                              ; preds = %445
  %450 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %451 = load i32*, i32** %450, align 8
  %452 = add nsw i32 %447, -1
  %453 = zext i32 %452 to i64
  %454 = add nuw nsw i64 %453, 1
  %455 = icmp ult i64 %454, 8
  br i1 %455, label %529, label %456

456:                                              ; preds = %449
  %457 = add nsw i32 %447, -1
  %458 = zext i32 %457 to i64
  %459 = add nuw nsw i64 %458, 1
  %460 = getelementptr i16, i16* %446, i64 %459
  %461 = getelementptr i32, i32* %451, i64 %459
  %462 = bitcast i32* %461 to i16*
  %463 = icmp ult i16* %446, %462
  %464 = bitcast i16* %460 to i32*
  %465 = icmp ult i32* %451, %464
  %466 = and i1 %463, %465
  br i1 %466, label %529, label %467

467:                                              ; preds = %456
  %468 = and i64 %454, 8589934584
  %469 = trunc i64 %468 to i32
  %470 = sub i32 %447, %469
  %471 = getelementptr i16, i16* %446, i64 %468
  %472 = getelementptr i32, i32* %451, i64 %468
  %473 = add nsw i64 %468, -8
  %474 = lshr exact i64 %473, 3
  %475 = add nuw nsw i64 %474, 1
  %476 = and i64 %475, 1
  %477 = icmp eq i64 %473, 0
  br i1 %477, label %511, label %478

478:                                              ; preds = %467
  %479 = sub nuw nsw i64 %475, %476
  br label %480

480:                                              ; preds = %480, %478
  %481 = phi i64 [ 0, %478 ], [ %508, %480 ]
  %482 = phi i64 [ %479, %478 ], [ %509, %480 ]
  %483 = getelementptr i16, i16* %446, i64 %481
  %484 = getelementptr i32, i32* %451, i64 %481
  %485 = bitcast i32* %484 to <4 x i32>*
  %486 = load <4 x i32>, <4 x i32>* %485, align 4, !alias.scope !37
  %487 = getelementptr i32, i32* %484, i64 4
  %488 = bitcast i32* %487 to <4 x i32>*
  %489 = load <4 x i32>, <4 x i32>* %488, align 4, !alias.scope !37
  %490 = trunc <4 x i32> %486 to <4 x i16>
  %491 = trunc <4 x i32> %489 to <4 x i16>
  %492 = bitcast i16* %483 to <4 x i16>*
  store <4 x i16> %490, <4 x i16>* %492, align 2, !alias.scope !40, !noalias !37
  %493 = getelementptr i16, i16* %483, i64 4
  %494 = bitcast i16* %493 to <4 x i16>*
  store <4 x i16> %491, <4 x i16>* %494, align 2, !alias.scope !40, !noalias !37
  %495 = or i64 %481, 8
  %496 = getelementptr i16, i16* %446, i64 %495
  %497 = getelementptr i32, i32* %451, i64 %495
  %498 = bitcast i32* %497 to <4 x i32>*
  %499 = load <4 x i32>, <4 x i32>* %498, align 4, !alias.scope !37
  %500 = getelementptr i32, i32* %497, i64 4
  %501 = bitcast i32* %500 to <4 x i32>*
  %502 = load <4 x i32>, <4 x i32>* %501, align 4, !alias.scope !37
  %503 = trunc <4 x i32> %499 to <4 x i16>
  %504 = trunc <4 x i32> %502 to <4 x i16>
  %505 = bitcast i16* %496 to <4 x i16>*
  store <4 x i16> %503, <4 x i16>* %505, align 2, !alias.scope !40, !noalias !37
  %506 = getelementptr i16, i16* %496, i64 4
  %507 = bitcast i16* %506 to <4 x i16>*
  store <4 x i16> %504, <4 x i16>* %507, align 2, !alias.scope !40, !noalias !37
  %508 = add i64 %481, 16
  %509 = add i64 %482, -2
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %511, label %480, !llvm.loop !42

511:                                              ; preds = %480, %467
  %512 = phi i64 [ 0, %467 ], [ %508, %480 ]
  %513 = icmp eq i64 %476, 0
  br i1 %513, label %527, label %514

514:                                              ; preds = %511
  %515 = getelementptr i16, i16* %446, i64 %512
  %516 = getelementptr i32, i32* %451, i64 %512
  %517 = bitcast i32* %516 to <4 x i32>*
  %518 = load <4 x i32>, <4 x i32>* %517, align 4, !alias.scope !37
  %519 = getelementptr i32, i32* %516, i64 4
  %520 = bitcast i32* %519 to <4 x i32>*
  %521 = load <4 x i32>, <4 x i32>* %520, align 4, !alias.scope !37
  %522 = trunc <4 x i32> %518 to <4 x i16>
  %523 = trunc <4 x i32> %521 to <4 x i16>
  %524 = bitcast i16* %515 to <4 x i16>*
  store <4 x i16> %522, <4 x i16>* %524, align 2, !alias.scope !40, !noalias !37
  %525 = getelementptr i16, i16* %515, i64 4
  %526 = bitcast i16* %525 to <4 x i16>*
  store <4 x i16> %523, <4 x i16>* %526, align 2, !alias.scope !40, !noalias !37
  br label %527

527:                                              ; preds = %511, %514
  %528 = icmp eq i64 %454, %468
  br i1 %528, label %563, label %529

529:                                              ; preds = %527, %456, %449
  %530 = phi i32 [ %447, %456 ], [ %447, %449 ], [ %470, %527 ]
  %531 = phi i16* [ %446, %456 ], [ %446, %449 ], [ %471, %527 ]
  %532 = phi i32* [ %451, %456 ], [ %451, %449 ], [ %472, %527 ]
  br label %533

533:                                              ; preds = %529, %533
  %534 = phi i32 [ %541, %533 ], [ %530, %529 ]
  %535 = phi i16* [ %540, %533 ], [ %531, %529 ]
  %536 = phi i32* [ %537, %533 ], [ %532, %529 ]
  %537 = getelementptr inbounds i32, i32* %536, i64 1
  %538 = load i32, i32* %536, align 4
  %539 = trunc i32 %538 to i16
  %540 = getelementptr inbounds i16, i16* %535, i64 1
  store i16 %539, i16* %535, align 2
  %541 = add nsw i32 %534, -1
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %533, label %563, !llvm.loop !43

543:                                              ; preds = %272, %543
  %544 = phi i32 [ %552, %543 ], [ %273, %272 ]
  %545 = phi i16* [ %551, %543 ], [ %274, %272 ]
  %546 = phi i32* [ %547, %543 ], [ %275, %272 ]
  %547 = getelementptr inbounds i32, i32* %546, i64 1
  %548 = load i32, i32* %546, align 4
  %549 = lshr i32 %548, 2
  %550 = trunc i32 %549 to i16
  %551 = getelementptr inbounds i16, i16* %545, i64 1
  store i16 %550, i16* %545, align 2
  %552 = add nsw i32 %544, -1
  %553 = icmp sgt i32 %552, 0
  br i1 %553, label %543, label %554, !llvm.loop !44

554:                                              ; preds = %543, %354, %266
  %555 = phi i16* [ %263, %266 ], [ %292, %354 ], [ %551, %543 ]
  %556 = bitcast i16* %555 to i8*
  %557 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %558 = bitcast i32** %557 to i8**
  %559 = load i8*, i8** %558, align 8
  %560 = load i32, i32* %223, align 4
  %561 = sext i32 %560 to i64
  %562 = shl nsw i64 %561, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %556, i8* align 4 %559, i64 %562, i1 false)
  br label %563

563:                                              ; preds = %533, %527, %445, %554, %234, %218, %6, %10, %21
  %564 = phi i32 [ 0, %21 ], [ 0, %10 ], [ 0, %6 ], [ 0, %218 ], [ %242, %234 ], [ %242, %554 ], [ %242, %445 ], [ %242, %527 ], [ %242, %533 ]
  ret i32 %564

565:                                              ; preds = %116
  %566 = add nuw nsw i64 %108, 2
  %567 = icmp eq i64 %566, 32
  br i1 %567, label %125, label %107
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @_ZL21defaultGetFoldedValueP8UNewTrieii(%struct.UNewTrie* readonly, i32, i32) unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %1, 1024
  %8 = icmp eq %struct.UNewTrie* %0, null
  %9 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 9
  br label %10

10:                                               ; preds = %3, %33
  %11 = phi i32 [ %1, %3 ], [ %35, %33 ]
  br i1 %8, label %33, label %12

12:                                               ; preds = %10
  %13 = load i8, i8* %9, align 1
  %14 = icmp ne i8 %13, 0
  %15 = icmp ugt i32 %11, 1114111
  %16 = or i1 %15, %14
  br i1 %16, label %33, label %17

17:                                               ; preds = %12
  %18 = lshr i32 %11, 5
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = icmp slt i32 %21, 0
  %25 = sub nsw i32 0, %21
  %26 = select i1 %24, i32 %25, i32 %21
  %27 = and i32 %11, 31
  %28 = add nuw nsw i32 %26, %27
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %5, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, %6
  br i1 %32, label %33, label %37

33:                                               ; preds = %23, %12, %10, %17
  %34 = phi i32 [ 32, %17 ], [ 32, %10 ], [ 32, %12 ], [ 1, %23 ]
  %35 = add nsw i32 %11, %34
  %36 = icmp slt i32 %35, %7
  br i1 %36, label %10, label %37

37:                                               ; preds = %33, %23
  %38 = phi i32 [ %2, %23 ], [ 0, %33 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL13utrie_compactP8UNewTrieaP10UErrorCode(%struct.UNewTrie*, i8 signext, i32*) unnamed_addr #0 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %235, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %235

8:                                                ; preds = %5
  %9 = icmp eq %struct.UNewTrie* %0, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  store i32 1, i32* %2, align 4
  br label %235

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %235

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 10
  %17 = getelementptr inbounds [34849 x i32], [34849 x i32]* %16, i64 0, i64 0
  %18 = bitcast [34849 x i32]* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 -1, i64 139396, i1 false) #8
  %19 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %63

22:                                               ; preds = %15
  %23 = sext i32 %20 to i64
  %24 = and i64 %23, 1
  %25 = icmp eq i32 %20, 1
  br i1 %25, label %51, label %26

26:                                               ; preds = %22
  %27 = sub nsw i64 %23, %24
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i64 [ 0, %26 ], [ %48, %28 ]
  %30 = phi i64 [ %27, %26 ], [ %49, %28 ]
  %31 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %29
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = lshr i32 %35, 5
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 10, i64 %37
  store i32 0, i32* %38, align 4
  %39 = or i64 %29, 1
  %40 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  %43 = sub nsw i32 0, %41
  %44 = select i1 %42, i32 %43, i32 %41
  %45 = lshr i32 %44, 5
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 10, i64 %46
  store i32 0, i32* %47, align 4
  %48 = add nuw nsw i64 %29, 2
  %49 = add i64 %30, -2
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %28

51:                                               ; preds = %28, %22
  %52 = phi i64 [ 0, %22 ], [ %48, %28 ]
  %53 = icmp eq i64 %24, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %52
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 0
  %58 = sub nsw i32 0, %56
  %59 = select i1 %57, i32 %58, i32 %56
  %60 = lshr i32 %59, 5
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 10, i64 %61
  store i32 0, i32* %62, align 4
  br label %63

63:                                               ; preds = %54, %51, %15
  store i32 0, i32* %17, align 4
  %64 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 32
  br i1 %66, label %67, label %83

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 8
  %69 = load i8, i8* %68, align 2
  %70 = icmp eq i8 %69, 0
  %71 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 1
  %72 = icmp eq i8 %1, 0
  %73 = select i1 %72, i64 32, i64 4
  %74 = select i1 %70, i64 32, i64 288
  br label %75

75:                                               ; preds = %67, %214
  %76 = phi i32 [ %65, %67 ], [ %217, %214 ]
  %77 = phi i32 [ 32, %67 ], [ %216, %214 ]
  %78 = phi i32 [ 32, %67 ], [ %215, %214 ]
  %79 = add nsw i32 %77, -32
  %80 = icmp slt i32 %79, 0
  %81 = sext i32 %79 to i64
  %82 = sext i32 %78 to i64
  br label %87

83:                                               ; preds = %214, %96, %63
  %84 = phi i32 [ 32, %63 ], [ %77, %96 ], [ %216, %214 ]
  %85 = load i32, i32* %19, align 4
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %219, label %234

87:                                               ; preds = %75, %96
  %88 = phi i32 [ %76, %75 ], [ %97, %96 ]
  %89 = phi i64 [ %82, %75 ], [ %98, %96 ]
  %90 = trunc i64 %89 to i32
  %91 = ashr i32 %90, 5
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 10, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, 0
  br i1 %95, label %96, label %101

96:                                               ; preds = %87, %129
  %97 = phi i32 [ %130, %129 ], [ %88, %87 ]
  %98 = add i64 %89, 32
  %99 = sext i32 %97 to i64
  %100 = icmp slt i64 %98, %99
  br i1 %100, label %87, label %83

101:                                              ; preds = %87
  %102 = icmp slt i64 %89, %74
  br i1 %102, label %179, label %103

103:                                              ; preds = %101
  %104 = load i32*, i32** %71, align 8
  br i1 %80, label %131, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds i32, i32* %104, i64 %89
  br label %107

107:                                              ; preds = %123, %105
  %108 = phi i64 [ 0, %105 ], [ %124, %123 ]
  %109 = getelementptr inbounds i32, i32* %104, i64 %108
  br label %110

110:                                              ; preds = %314, %107
  %111 = phi i32 [ 32, %107 ], [ %317, %314 ]
  %112 = phi i32* [ %106, %107 ], [ %316, %314 ]
  %113 = phi i32* [ %109, %107 ], [ %315, %314 ]
  %114 = load i32, i32* %113, align 4
  %115 = load i32, i32* %112, align 4
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %117, label %123

117:                                              ; preds = %110
  %118 = getelementptr inbounds i32, i32* %113, i64 1
  %119 = getelementptr inbounds i32, i32* %112, i64 1
  %120 = load i32, i32* %118, align 4
  %121 = load i32, i32* %119, align 4
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %302, label %123

123:                                              ; preds = %308, %302, %117, %110
  %124 = add i64 %108, %73
  %125 = icmp sgt i64 %124, %81
  br i1 %125, label %131, label %107

126:                                              ; preds = %314
  %127 = trunc i64 %108 to i32
  %128 = icmp sgt i32 %127, -1
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  store i32 %127, i32* %93, align 4
  %130 = load i32, i32* %64, align 4
  br label %96

131:                                              ; preds = %103, %126, %123
  %132 = trunc i64 %89 to i32
  br i1 %72, label %181, label %133

133:                                              ; preds = %131
  %134 = shl i64 %89, 32
  %135 = ashr exact i64 %134, 32
  %136 = getelementptr inbounds i32, i32* %104, i64 %135
  %137 = sext i32 %77 to i64
  %138 = add nsw i64 %137, -28
  %139 = getelementptr inbounds i32, i32* %104, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = load i32, i32* %136, align 4
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %143, label %149

143:                                              ; preds = %133
  %144 = getelementptr inbounds i32, i32* %139, i64 1
  %145 = getelementptr inbounds i32, i32* %136, i64 1
  %146 = load i32, i32* %144, align 4
  %147 = load i32, i32* %145, align 4
  %148 = icmp eq i32 %146, %147
  br i1 %148, label %319, label %149

149:                                              ; preds = %133, %143, %319, %325, %331, %337, %343, %349, %355, %361, %367, %373, %379, %385, %391, %397, %403, %409, %415, %421, %427, %433, %439, %445, %451, %457, %463, %469
  %150 = add nsw i64 %137, -24
  %151 = getelementptr inbounds i32, i32* %104, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = load i32, i32* %136, align 4
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %236, label %242

155:                                              ; preds = %901, %889, %853, %793, %709, %601, %469
  %156 = phi i32 [ 28, %469 ], [ 24, %601 ], [ 20, %709 ], [ 16, %793 ], [ 12, %853 ], [ 8, %889 ], [ 4, %901 ]
  %157 = sub nsw i32 %77, %156
  store i32 %157, i32* %93, align 4
  %158 = add i32 %156, %132
  %159 = sub nuw nsw i32 32, %156
  %160 = sext i32 %158 to i64
  br label %161

161:                                              ; preds = %161, %155
  %162 = phi i64 [ %160, %155 ], [ %172, %161 ]
  %163 = phi i64 [ %137, %155 ], [ %175, %161 ]
  %164 = phi i32 [ %159, %155 ], [ %177, %161 ]
  %165 = load i32*, i32** %71, align 8
  %166 = add nsw i64 %162, 1
  %167 = getelementptr inbounds i32, i32* %165, i64 %162
  %168 = load i32, i32* %167, align 4
  %169 = add nsw i64 %163, 1
  %170 = getelementptr inbounds i32, i32* %165, i64 %163
  store i32 %168, i32* %170, align 4
  %171 = load i32*, i32** %71, align 8
  %172 = add nsw i64 %162, 2
  %173 = getelementptr inbounds i32, i32* %171, i64 %166
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i64 %163, 2
  %176 = getelementptr inbounds i32, i32* %171, i64 %169
  store i32 %174, i32* %176, align 4
  %177 = add nsw i32 %164, -2
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %161, label %211

179:                                              ; preds = %101
  %180 = trunc i64 %89 to i32
  br label %181

181:                                              ; preds = %290, %296, %895, %901, %179, %131
  %182 = phi i32 [ %180, %179 ], [ %132, %131 ], [ %132, %901 ], [ %132, %895 ], [ %132, %296 ], [ %132, %290 ]
  %183 = icmp slt i32 %77, %182
  br i1 %183, label %184, label %206

184:                                              ; preds = %181
  store i32 %77, i32* %93, align 4
  %185 = sext i32 %77 to i64
  %186 = shl i64 %89, 32
  %187 = ashr exact i64 %186, 32
  br label %188

188:                                              ; preds = %188, %184
  %189 = phi i64 [ %187, %184 ], [ %199, %188 ]
  %190 = phi i64 [ %185, %184 ], [ %202, %188 ]
  %191 = phi i32 [ 32, %184 ], [ %204, %188 ]
  %192 = load i32*, i32** %71, align 8
  %193 = add nsw i64 %189, 1
  %194 = getelementptr inbounds i32, i32* %192, i64 %189
  %195 = load i32, i32* %194, align 4
  %196 = add nsw i64 %190, 1
  %197 = getelementptr inbounds i32, i32* %192, i64 %190
  store i32 %195, i32* %197, align 4
  %198 = load i32*, i32** %71, align 8
  %199 = add nsw i64 %189, 2
  %200 = getelementptr inbounds i32, i32* %198, i64 %193
  %201 = load i32, i32* %200, align 4
  %202 = add nsw i64 %190, 2
  %203 = getelementptr inbounds i32, i32* %198, i64 %196
  store i32 %201, i32* %203, align 4
  %204 = add nsw i32 %191, -2
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %208, label %188

206:                                              ; preds = %181
  store i32 %182, i32* %93, align 4
  %207 = add nsw i32 %77, 32
  br label %214

208:                                              ; preds = %188
  %209 = trunc i64 %199 to i32
  %210 = trunc i64 %202 to i32
  br label %214

211:                                              ; preds = %161
  %212 = trunc i64 %172 to i32
  %213 = trunc i64 %175 to i32
  br label %214

214:                                              ; preds = %211, %208, %206
  %215 = phi i32 [ %207, %206 ], [ %209, %208 ], [ %212, %211 ]
  %216 = phi i32 [ %207, %206 ], [ %210, %208 ], [ %213, %211 ]
  %217 = load i32, i32* %64, align 4
  %218 = icmp slt i32 %215, %217
  br i1 %218, label %75, label %83

219:                                              ; preds = %83, %219
  %220 = phi i64 [ %230, %219 ], [ 0, %83 ]
  %221 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 0, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = icmp slt i32 %222, 0
  %224 = sub nsw i32 0, %222
  %225 = select i1 %223, i32 %224, i32 %222
  %226 = lshr i32 %225, 5
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds %struct.UNewTrie, %struct.UNewTrie* %0, i64 0, i32 10, i64 %227
  %229 = load i32, i32* %228, align 4
  store i32 %229, i32* %221, align 4
  %230 = add nuw nsw i64 %220, 1
  %231 = load i32, i32* %19, align 4
  %232 = sext i32 %231 to i64
  %233 = icmp slt i64 %230, %232
  br i1 %233, label %219, label %234

234:                                              ; preds = %219, %83
  store i32 %84, i32* %64, align 4
  br label %235

235:                                              ; preds = %11, %3, %5, %234, %10
  ret void

236:                                              ; preds = %149
  %237 = getelementptr inbounds i32, i32* %151, i64 1
  %238 = getelementptr inbounds i32, i32* %136, i64 1
  %239 = load i32, i32* %237, align 4
  %240 = load i32, i32* %238, align 4
  %241 = icmp eq i32 %239, %240
  br i1 %241, label %475, label %242

242:                                              ; preds = %149, %236, %475, %481, %487, %493, %499, %505, %511, %517, %523, %529, %535, %541, %547, %553, %559, %565, %571, %577, %583, %589, %595, %601
  %243 = add nsw i64 %137, -20
  %244 = getelementptr inbounds i32, i32* %104, i64 %243
  %245 = load i32, i32* %244, align 4
  %246 = load i32, i32* %136, align 4
  %247 = icmp eq i32 %245, %246
  br i1 %247, label %248, label %254

248:                                              ; preds = %242
  %249 = getelementptr inbounds i32, i32* %244, i64 1
  %250 = getelementptr inbounds i32, i32* %136, i64 1
  %251 = load i32, i32* %249, align 4
  %252 = load i32, i32* %250, align 4
  %253 = icmp eq i32 %251, %252
  br i1 %253, label %607, label %254

254:                                              ; preds = %242, %248, %607, %613, %619, %625, %631, %637, %643, %649, %655, %661, %667, %673, %679, %685, %691, %697, %703, %709
  %255 = add nsw i64 %137, -16
  %256 = getelementptr inbounds i32, i32* %104, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = load i32, i32* %136, align 4
  %259 = icmp eq i32 %257, %258
  br i1 %259, label %260, label %266

260:                                              ; preds = %254
  %261 = getelementptr inbounds i32, i32* %256, i64 1
  %262 = getelementptr inbounds i32, i32* %136, i64 1
  %263 = load i32, i32* %261, align 4
  %264 = load i32, i32* %262, align 4
  %265 = icmp eq i32 %263, %264
  br i1 %265, label %715, label %266

266:                                              ; preds = %254, %260, %715, %721, %727, %733, %739, %745, %751, %757, %763, %769, %775, %781, %787, %793
  %267 = add nsw i64 %137, -12
  %268 = getelementptr inbounds i32, i32* %104, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = load i32, i32* %136, align 4
  %271 = icmp eq i32 %269, %270
  br i1 %271, label %272, label %278

272:                                              ; preds = %266
  %273 = getelementptr inbounds i32, i32* %268, i64 1
  %274 = getelementptr inbounds i32, i32* %136, i64 1
  %275 = load i32, i32* %273, align 4
  %276 = load i32, i32* %274, align 4
  %277 = icmp eq i32 %275, %276
  br i1 %277, label %799, label %278

278:                                              ; preds = %266, %272, %799, %805, %811, %817, %823, %829, %835, %841, %847, %853
  %279 = add nsw i64 %137, -8
  %280 = getelementptr inbounds i32, i32* %104, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = load i32, i32* %136, align 4
  %283 = icmp eq i32 %281, %282
  br i1 %283, label %284, label %290

284:                                              ; preds = %278
  %285 = getelementptr inbounds i32, i32* %280, i64 1
  %286 = getelementptr inbounds i32, i32* %136, i64 1
  %287 = load i32, i32* %285, align 4
  %288 = load i32, i32* %286, align 4
  %289 = icmp eq i32 %287, %288
  br i1 %289, label %859, label %290

290:                                              ; preds = %278, %284, %859, %865, %871, %877, %883, %889
  %291 = add nsw i64 %137, -4
  %292 = getelementptr inbounds i32, i32* %104, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = load i32, i32* %136, align 4
  %295 = icmp eq i32 %293, %294
  br i1 %295, label %296, label %181

296:                                              ; preds = %290
  %297 = getelementptr inbounds i32, i32* %292, i64 1
  %298 = getelementptr inbounds i32, i32* %136, i64 1
  %299 = load i32, i32* %297, align 4
  %300 = load i32, i32* %298, align 4
  %301 = icmp eq i32 %299, %300
  br i1 %301, label %895, label %181

302:                                              ; preds = %117
  %303 = getelementptr inbounds i32, i32* %113, i64 2
  %304 = getelementptr inbounds i32, i32* %112, i64 2
  %305 = load i32, i32* %303, align 4
  %306 = load i32, i32* %304, align 4
  %307 = icmp eq i32 %305, %306
  br i1 %307, label %308, label %123

308:                                              ; preds = %302
  %309 = getelementptr inbounds i32, i32* %113, i64 3
  %310 = getelementptr inbounds i32, i32* %112, i64 3
  %311 = load i32, i32* %309, align 4
  %312 = load i32, i32* %310, align 4
  %313 = icmp eq i32 %311, %312
  br i1 %313, label %314, label %123

314:                                              ; preds = %308
  %315 = getelementptr inbounds i32, i32* %113, i64 4
  %316 = getelementptr inbounds i32, i32* %112, i64 4
  %317 = add nsw i32 %111, -4
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %126, label %110

319:                                              ; preds = %143
  %320 = getelementptr inbounds i32, i32* %144, i64 1
  %321 = getelementptr inbounds i32, i32* %145, i64 1
  %322 = load i32, i32* %320, align 4
  %323 = load i32, i32* %321, align 4
  %324 = icmp eq i32 %322, %323
  br i1 %324, label %325, label %149

325:                                              ; preds = %319
  %326 = getelementptr inbounds i32, i32* %320, i64 1
  %327 = getelementptr inbounds i32, i32* %321, i64 1
  %328 = load i32, i32* %326, align 4
  %329 = load i32, i32* %327, align 4
  %330 = icmp eq i32 %328, %329
  br i1 %330, label %331, label %149

331:                                              ; preds = %325
  %332 = getelementptr inbounds i32, i32* %326, i64 1
  %333 = getelementptr inbounds i32, i32* %327, i64 1
  %334 = load i32, i32* %332, align 4
  %335 = load i32, i32* %333, align 4
  %336 = icmp eq i32 %334, %335
  br i1 %336, label %337, label %149

337:                                              ; preds = %331
  %338 = getelementptr inbounds i32, i32* %332, i64 1
  %339 = getelementptr inbounds i32, i32* %333, i64 1
  %340 = load i32, i32* %338, align 4
  %341 = load i32, i32* %339, align 4
  %342 = icmp eq i32 %340, %341
  br i1 %342, label %343, label %149

343:                                              ; preds = %337
  %344 = getelementptr inbounds i32, i32* %338, i64 1
  %345 = getelementptr inbounds i32, i32* %339, i64 1
  %346 = load i32, i32* %344, align 4
  %347 = load i32, i32* %345, align 4
  %348 = icmp eq i32 %346, %347
  br i1 %348, label %349, label %149

349:                                              ; preds = %343
  %350 = getelementptr inbounds i32, i32* %344, i64 1
  %351 = getelementptr inbounds i32, i32* %345, i64 1
  %352 = load i32, i32* %350, align 4
  %353 = load i32, i32* %351, align 4
  %354 = icmp eq i32 %352, %353
  br i1 %354, label %355, label %149

355:                                              ; preds = %349
  %356 = getelementptr inbounds i32, i32* %350, i64 1
  %357 = getelementptr inbounds i32, i32* %351, i64 1
  %358 = load i32, i32* %356, align 4
  %359 = load i32, i32* %357, align 4
  %360 = icmp eq i32 %358, %359
  br i1 %360, label %361, label %149

361:                                              ; preds = %355
  %362 = getelementptr inbounds i32, i32* %356, i64 1
  %363 = getelementptr inbounds i32, i32* %357, i64 1
  %364 = load i32, i32* %362, align 4
  %365 = load i32, i32* %363, align 4
  %366 = icmp eq i32 %364, %365
  br i1 %366, label %367, label %149

367:                                              ; preds = %361
  %368 = getelementptr inbounds i32, i32* %362, i64 1
  %369 = getelementptr inbounds i32, i32* %363, i64 1
  %370 = load i32, i32* %368, align 4
  %371 = load i32, i32* %369, align 4
  %372 = icmp eq i32 %370, %371
  br i1 %372, label %373, label %149

373:                                              ; preds = %367
  %374 = getelementptr inbounds i32, i32* %368, i64 1
  %375 = getelementptr inbounds i32, i32* %369, i64 1
  %376 = load i32, i32* %374, align 4
  %377 = load i32, i32* %375, align 4
  %378 = icmp eq i32 %376, %377
  br i1 %378, label %379, label %149

379:                                              ; preds = %373
  %380 = getelementptr inbounds i32, i32* %374, i64 1
  %381 = getelementptr inbounds i32, i32* %375, i64 1
  %382 = load i32, i32* %380, align 4
  %383 = load i32, i32* %381, align 4
  %384 = icmp eq i32 %382, %383
  br i1 %384, label %385, label %149

385:                                              ; preds = %379
  %386 = getelementptr inbounds i32, i32* %380, i64 1
  %387 = getelementptr inbounds i32, i32* %381, i64 1
  %388 = load i32, i32* %386, align 4
  %389 = load i32, i32* %387, align 4
  %390 = icmp eq i32 %388, %389
  br i1 %390, label %391, label %149

391:                                              ; preds = %385
  %392 = getelementptr inbounds i32, i32* %386, i64 1
  %393 = getelementptr inbounds i32, i32* %387, i64 1
  %394 = load i32, i32* %392, align 4
  %395 = load i32, i32* %393, align 4
  %396 = icmp eq i32 %394, %395
  br i1 %396, label %397, label %149

397:                                              ; preds = %391
  %398 = getelementptr inbounds i32, i32* %392, i64 1
  %399 = getelementptr inbounds i32, i32* %393, i64 1
  %400 = load i32, i32* %398, align 4
  %401 = load i32, i32* %399, align 4
  %402 = icmp eq i32 %400, %401
  br i1 %402, label %403, label %149

403:                                              ; preds = %397
  %404 = getelementptr inbounds i32, i32* %398, i64 1
  %405 = getelementptr inbounds i32, i32* %399, i64 1
  %406 = load i32, i32* %404, align 4
  %407 = load i32, i32* %405, align 4
  %408 = icmp eq i32 %406, %407
  br i1 %408, label %409, label %149

409:                                              ; preds = %403
  %410 = getelementptr inbounds i32, i32* %404, i64 1
  %411 = getelementptr inbounds i32, i32* %405, i64 1
  %412 = load i32, i32* %410, align 4
  %413 = load i32, i32* %411, align 4
  %414 = icmp eq i32 %412, %413
  br i1 %414, label %415, label %149

415:                                              ; preds = %409
  %416 = getelementptr inbounds i32, i32* %410, i64 1
  %417 = getelementptr inbounds i32, i32* %411, i64 1
  %418 = load i32, i32* %416, align 4
  %419 = load i32, i32* %417, align 4
  %420 = icmp eq i32 %418, %419
  br i1 %420, label %421, label %149

421:                                              ; preds = %415
  %422 = getelementptr inbounds i32, i32* %416, i64 1
  %423 = getelementptr inbounds i32, i32* %417, i64 1
  %424 = load i32, i32* %422, align 4
  %425 = load i32, i32* %423, align 4
  %426 = icmp eq i32 %424, %425
  br i1 %426, label %427, label %149

427:                                              ; preds = %421
  %428 = getelementptr inbounds i32, i32* %422, i64 1
  %429 = getelementptr inbounds i32, i32* %423, i64 1
  %430 = load i32, i32* %428, align 4
  %431 = load i32, i32* %429, align 4
  %432 = icmp eq i32 %430, %431
  br i1 %432, label %433, label %149

433:                                              ; preds = %427
  %434 = getelementptr inbounds i32, i32* %428, i64 1
  %435 = getelementptr inbounds i32, i32* %429, i64 1
  %436 = load i32, i32* %434, align 4
  %437 = load i32, i32* %435, align 4
  %438 = icmp eq i32 %436, %437
  br i1 %438, label %439, label %149

439:                                              ; preds = %433
  %440 = getelementptr inbounds i32, i32* %434, i64 1
  %441 = getelementptr inbounds i32, i32* %435, i64 1
  %442 = load i32, i32* %440, align 4
  %443 = load i32, i32* %441, align 4
  %444 = icmp eq i32 %442, %443
  br i1 %444, label %445, label %149

445:                                              ; preds = %439
  %446 = getelementptr inbounds i32, i32* %440, i64 1
  %447 = getelementptr inbounds i32, i32* %441, i64 1
  %448 = load i32, i32* %446, align 4
  %449 = load i32, i32* %447, align 4
  %450 = icmp eq i32 %448, %449
  br i1 %450, label %451, label %149

451:                                              ; preds = %445
  %452 = getelementptr inbounds i32, i32* %446, i64 1
  %453 = getelementptr inbounds i32, i32* %447, i64 1
  %454 = load i32, i32* %452, align 4
  %455 = load i32, i32* %453, align 4
  %456 = icmp eq i32 %454, %455
  br i1 %456, label %457, label %149

457:                                              ; preds = %451
  %458 = getelementptr inbounds i32, i32* %452, i64 1
  %459 = getelementptr inbounds i32, i32* %453, i64 1
  %460 = load i32, i32* %458, align 4
  %461 = load i32, i32* %459, align 4
  %462 = icmp eq i32 %460, %461
  br i1 %462, label %463, label %149

463:                                              ; preds = %457
  %464 = getelementptr inbounds i32, i32* %458, i64 1
  %465 = getelementptr inbounds i32, i32* %459, i64 1
  %466 = load i32, i32* %464, align 4
  %467 = load i32, i32* %465, align 4
  %468 = icmp eq i32 %466, %467
  br i1 %468, label %469, label %149

469:                                              ; preds = %463
  %470 = getelementptr inbounds i32, i32* %464, i64 1
  %471 = getelementptr inbounds i32, i32* %465, i64 1
  %472 = load i32, i32* %470, align 4
  %473 = load i32, i32* %471, align 4
  %474 = icmp eq i32 %472, %473
  br i1 %474, label %155, label %149

475:                                              ; preds = %236
  %476 = getelementptr inbounds i32, i32* %237, i64 1
  %477 = getelementptr inbounds i32, i32* %238, i64 1
  %478 = load i32, i32* %476, align 4
  %479 = load i32, i32* %477, align 4
  %480 = icmp eq i32 %478, %479
  br i1 %480, label %481, label %242

481:                                              ; preds = %475
  %482 = getelementptr inbounds i32, i32* %476, i64 1
  %483 = getelementptr inbounds i32, i32* %477, i64 1
  %484 = load i32, i32* %482, align 4
  %485 = load i32, i32* %483, align 4
  %486 = icmp eq i32 %484, %485
  br i1 %486, label %487, label %242

487:                                              ; preds = %481
  %488 = getelementptr inbounds i32, i32* %482, i64 1
  %489 = getelementptr inbounds i32, i32* %483, i64 1
  %490 = load i32, i32* %488, align 4
  %491 = load i32, i32* %489, align 4
  %492 = icmp eq i32 %490, %491
  br i1 %492, label %493, label %242

493:                                              ; preds = %487
  %494 = getelementptr inbounds i32, i32* %488, i64 1
  %495 = getelementptr inbounds i32, i32* %489, i64 1
  %496 = load i32, i32* %494, align 4
  %497 = load i32, i32* %495, align 4
  %498 = icmp eq i32 %496, %497
  br i1 %498, label %499, label %242

499:                                              ; preds = %493
  %500 = getelementptr inbounds i32, i32* %494, i64 1
  %501 = getelementptr inbounds i32, i32* %495, i64 1
  %502 = load i32, i32* %500, align 4
  %503 = load i32, i32* %501, align 4
  %504 = icmp eq i32 %502, %503
  br i1 %504, label %505, label %242

505:                                              ; preds = %499
  %506 = getelementptr inbounds i32, i32* %500, i64 1
  %507 = getelementptr inbounds i32, i32* %501, i64 1
  %508 = load i32, i32* %506, align 4
  %509 = load i32, i32* %507, align 4
  %510 = icmp eq i32 %508, %509
  br i1 %510, label %511, label %242

511:                                              ; preds = %505
  %512 = getelementptr inbounds i32, i32* %506, i64 1
  %513 = getelementptr inbounds i32, i32* %507, i64 1
  %514 = load i32, i32* %512, align 4
  %515 = load i32, i32* %513, align 4
  %516 = icmp eq i32 %514, %515
  br i1 %516, label %517, label %242

517:                                              ; preds = %511
  %518 = getelementptr inbounds i32, i32* %512, i64 1
  %519 = getelementptr inbounds i32, i32* %513, i64 1
  %520 = load i32, i32* %518, align 4
  %521 = load i32, i32* %519, align 4
  %522 = icmp eq i32 %520, %521
  br i1 %522, label %523, label %242

523:                                              ; preds = %517
  %524 = getelementptr inbounds i32, i32* %518, i64 1
  %525 = getelementptr inbounds i32, i32* %519, i64 1
  %526 = load i32, i32* %524, align 4
  %527 = load i32, i32* %525, align 4
  %528 = icmp eq i32 %526, %527
  br i1 %528, label %529, label %242

529:                                              ; preds = %523
  %530 = getelementptr inbounds i32, i32* %524, i64 1
  %531 = getelementptr inbounds i32, i32* %525, i64 1
  %532 = load i32, i32* %530, align 4
  %533 = load i32, i32* %531, align 4
  %534 = icmp eq i32 %532, %533
  br i1 %534, label %535, label %242

535:                                              ; preds = %529
  %536 = getelementptr inbounds i32, i32* %530, i64 1
  %537 = getelementptr inbounds i32, i32* %531, i64 1
  %538 = load i32, i32* %536, align 4
  %539 = load i32, i32* %537, align 4
  %540 = icmp eq i32 %538, %539
  br i1 %540, label %541, label %242

541:                                              ; preds = %535
  %542 = getelementptr inbounds i32, i32* %536, i64 1
  %543 = getelementptr inbounds i32, i32* %537, i64 1
  %544 = load i32, i32* %542, align 4
  %545 = load i32, i32* %543, align 4
  %546 = icmp eq i32 %544, %545
  br i1 %546, label %547, label %242

547:                                              ; preds = %541
  %548 = getelementptr inbounds i32, i32* %542, i64 1
  %549 = getelementptr inbounds i32, i32* %543, i64 1
  %550 = load i32, i32* %548, align 4
  %551 = load i32, i32* %549, align 4
  %552 = icmp eq i32 %550, %551
  br i1 %552, label %553, label %242

553:                                              ; preds = %547
  %554 = getelementptr inbounds i32, i32* %548, i64 1
  %555 = getelementptr inbounds i32, i32* %549, i64 1
  %556 = load i32, i32* %554, align 4
  %557 = load i32, i32* %555, align 4
  %558 = icmp eq i32 %556, %557
  br i1 %558, label %559, label %242

559:                                              ; preds = %553
  %560 = getelementptr inbounds i32, i32* %554, i64 1
  %561 = getelementptr inbounds i32, i32* %555, i64 1
  %562 = load i32, i32* %560, align 4
  %563 = load i32, i32* %561, align 4
  %564 = icmp eq i32 %562, %563
  br i1 %564, label %565, label %242

565:                                              ; preds = %559
  %566 = getelementptr inbounds i32, i32* %560, i64 1
  %567 = getelementptr inbounds i32, i32* %561, i64 1
  %568 = load i32, i32* %566, align 4
  %569 = load i32, i32* %567, align 4
  %570 = icmp eq i32 %568, %569
  br i1 %570, label %571, label %242

571:                                              ; preds = %565
  %572 = getelementptr inbounds i32, i32* %566, i64 1
  %573 = getelementptr inbounds i32, i32* %567, i64 1
  %574 = load i32, i32* %572, align 4
  %575 = load i32, i32* %573, align 4
  %576 = icmp eq i32 %574, %575
  br i1 %576, label %577, label %242

577:                                              ; preds = %571
  %578 = getelementptr inbounds i32, i32* %572, i64 1
  %579 = getelementptr inbounds i32, i32* %573, i64 1
  %580 = load i32, i32* %578, align 4
  %581 = load i32, i32* %579, align 4
  %582 = icmp eq i32 %580, %581
  br i1 %582, label %583, label %242

583:                                              ; preds = %577
  %584 = getelementptr inbounds i32, i32* %578, i64 1
  %585 = getelementptr inbounds i32, i32* %579, i64 1
  %586 = load i32, i32* %584, align 4
  %587 = load i32, i32* %585, align 4
  %588 = icmp eq i32 %586, %587
  br i1 %588, label %589, label %242

589:                                              ; preds = %583
  %590 = getelementptr inbounds i32, i32* %584, i64 1
  %591 = getelementptr inbounds i32, i32* %585, i64 1
  %592 = load i32, i32* %590, align 4
  %593 = load i32, i32* %591, align 4
  %594 = icmp eq i32 %592, %593
  br i1 %594, label %595, label %242

595:                                              ; preds = %589
  %596 = getelementptr inbounds i32, i32* %590, i64 1
  %597 = getelementptr inbounds i32, i32* %591, i64 1
  %598 = load i32, i32* %596, align 4
  %599 = load i32, i32* %597, align 4
  %600 = icmp eq i32 %598, %599
  br i1 %600, label %601, label %242

601:                                              ; preds = %595
  %602 = getelementptr inbounds i32, i32* %596, i64 1
  %603 = getelementptr inbounds i32, i32* %597, i64 1
  %604 = load i32, i32* %602, align 4
  %605 = load i32, i32* %603, align 4
  %606 = icmp eq i32 %604, %605
  br i1 %606, label %155, label %242

607:                                              ; preds = %248
  %608 = getelementptr inbounds i32, i32* %249, i64 1
  %609 = getelementptr inbounds i32, i32* %250, i64 1
  %610 = load i32, i32* %608, align 4
  %611 = load i32, i32* %609, align 4
  %612 = icmp eq i32 %610, %611
  br i1 %612, label %613, label %254

613:                                              ; preds = %607
  %614 = getelementptr inbounds i32, i32* %608, i64 1
  %615 = getelementptr inbounds i32, i32* %609, i64 1
  %616 = load i32, i32* %614, align 4
  %617 = load i32, i32* %615, align 4
  %618 = icmp eq i32 %616, %617
  br i1 %618, label %619, label %254

619:                                              ; preds = %613
  %620 = getelementptr inbounds i32, i32* %614, i64 1
  %621 = getelementptr inbounds i32, i32* %615, i64 1
  %622 = load i32, i32* %620, align 4
  %623 = load i32, i32* %621, align 4
  %624 = icmp eq i32 %622, %623
  br i1 %624, label %625, label %254

625:                                              ; preds = %619
  %626 = getelementptr inbounds i32, i32* %620, i64 1
  %627 = getelementptr inbounds i32, i32* %621, i64 1
  %628 = load i32, i32* %626, align 4
  %629 = load i32, i32* %627, align 4
  %630 = icmp eq i32 %628, %629
  br i1 %630, label %631, label %254

631:                                              ; preds = %625
  %632 = getelementptr inbounds i32, i32* %626, i64 1
  %633 = getelementptr inbounds i32, i32* %627, i64 1
  %634 = load i32, i32* %632, align 4
  %635 = load i32, i32* %633, align 4
  %636 = icmp eq i32 %634, %635
  br i1 %636, label %637, label %254

637:                                              ; preds = %631
  %638 = getelementptr inbounds i32, i32* %632, i64 1
  %639 = getelementptr inbounds i32, i32* %633, i64 1
  %640 = load i32, i32* %638, align 4
  %641 = load i32, i32* %639, align 4
  %642 = icmp eq i32 %640, %641
  br i1 %642, label %643, label %254

643:                                              ; preds = %637
  %644 = getelementptr inbounds i32, i32* %638, i64 1
  %645 = getelementptr inbounds i32, i32* %639, i64 1
  %646 = load i32, i32* %644, align 4
  %647 = load i32, i32* %645, align 4
  %648 = icmp eq i32 %646, %647
  br i1 %648, label %649, label %254

649:                                              ; preds = %643
  %650 = getelementptr inbounds i32, i32* %644, i64 1
  %651 = getelementptr inbounds i32, i32* %645, i64 1
  %652 = load i32, i32* %650, align 4
  %653 = load i32, i32* %651, align 4
  %654 = icmp eq i32 %652, %653
  br i1 %654, label %655, label %254

655:                                              ; preds = %649
  %656 = getelementptr inbounds i32, i32* %650, i64 1
  %657 = getelementptr inbounds i32, i32* %651, i64 1
  %658 = load i32, i32* %656, align 4
  %659 = load i32, i32* %657, align 4
  %660 = icmp eq i32 %658, %659
  br i1 %660, label %661, label %254

661:                                              ; preds = %655
  %662 = getelementptr inbounds i32, i32* %656, i64 1
  %663 = getelementptr inbounds i32, i32* %657, i64 1
  %664 = load i32, i32* %662, align 4
  %665 = load i32, i32* %663, align 4
  %666 = icmp eq i32 %664, %665
  br i1 %666, label %667, label %254

667:                                              ; preds = %661
  %668 = getelementptr inbounds i32, i32* %662, i64 1
  %669 = getelementptr inbounds i32, i32* %663, i64 1
  %670 = load i32, i32* %668, align 4
  %671 = load i32, i32* %669, align 4
  %672 = icmp eq i32 %670, %671
  br i1 %672, label %673, label %254

673:                                              ; preds = %667
  %674 = getelementptr inbounds i32, i32* %668, i64 1
  %675 = getelementptr inbounds i32, i32* %669, i64 1
  %676 = load i32, i32* %674, align 4
  %677 = load i32, i32* %675, align 4
  %678 = icmp eq i32 %676, %677
  br i1 %678, label %679, label %254

679:                                              ; preds = %673
  %680 = getelementptr inbounds i32, i32* %674, i64 1
  %681 = getelementptr inbounds i32, i32* %675, i64 1
  %682 = load i32, i32* %680, align 4
  %683 = load i32, i32* %681, align 4
  %684 = icmp eq i32 %682, %683
  br i1 %684, label %685, label %254

685:                                              ; preds = %679
  %686 = getelementptr inbounds i32, i32* %680, i64 1
  %687 = getelementptr inbounds i32, i32* %681, i64 1
  %688 = load i32, i32* %686, align 4
  %689 = load i32, i32* %687, align 4
  %690 = icmp eq i32 %688, %689
  br i1 %690, label %691, label %254

691:                                              ; preds = %685
  %692 = getelementptr inbounds i32, i32* %686, i64 1
  %693 = getelementptr inbounds i32, i32* %687, i64 1
  %694 = load i32, i32* %692, align 4
  %695 = load i32, i32* %693, align 4
  %696 = icmp eq i32 %694, %695
  br i1 %696, label %697, label %254

697:                                              ; preds = %691
  %698 = getelementptr inbounds i32, i32* %692, i64 1
  %699 = getelementptr inbounds i32, i32* %693, i64 1
  %700 = load i32, i32* %698, align 4
  %701 = load i32, i32* %699, align 4
  %702 = icmp eq i32 %700, %701
  br i1 %702, label %703, label %254

703:                                              ; preds = %697
  %704 = getelementptr inbounds i32, i32* %698, i64 1
  %705 = getelementptr inbounds i32, i32* %699, i64 1
  %706 = load i32, i32* %704, align 4
  %707 = load i32, i32* %705, align 4
  %708 = icmp eq i32 %706, %707
  br i1 %708, label %709, label %254

709:                                              ; preds = %703
  %710 = getelementptr inbounds i32, i32* %704, i64 1
  %711 = getelementptr inbounds i32, i32* %705, i64 1
  %712 = load i32, i32* %710, align 4
  %713 = load i32, i32* %711, align 4
  %714 = icmp eq i32 %712, %713
  br i1 %714, label %155, label %254

715:                                              ; preds = %260
  %716 = getelementptr inbounds i32, i32* %261, i64 1
  %717 = getelementptr inbounds i32, i32* %262, i64 1
  %718 = load i32, i32* %716, align 4
  %719 = load i32, i32* %717, align 4
  %720 = icmp eq i32 %718, %719
  br i1 %720, label %721, label %266

721:                                              ; preds = %715
  %722 = getelementptr inbounds i32, i32* %716, i64 1
  %723 = getelementptr inbounds i32, i32* %717, i64 1
  %724 = load i32, i32* %722, align 4
  %725 = load i32, i32* %723, align 4
  %726 = icmp eq i32 %724, %725
  br i1 %726, label %727, label %266

727:                                              ; preds = %721
  %728 = getelementptr inbounds i32, i32* %722, i64 1
  %729 = getelementptr inbounds i32, i32* %723, i64 1
  %730 = load i32, i32* %728, align 4
  %731 = load i32, i32* %729, align 4
  %732 = icmp eq i32 %730, %731
  br i1 %732, label %733, label %266

733:                                              ; preds = %727
  %734 = getelementptr inbounds i32, i32* %728, i64 1
  %735 = getelementptr inbounds i32, i32* %729, i64 1
  %736 = load i32, i32* %734, align 4
  %737 = load i32, i32* %735, align 4
  %738 = icmp eq i32 %736, %737
  br i1 %738, label %739, label %266

739:                                              ; preds = %733
  %740 = getelementptr inbounds i32, i32* %734, i64 1
  %741 = getelementptr inbounds i32, i32* %735, i64 1
  %742 = load i32, i32* %740, align 4
  %743 = load i32, i32* %741, align 4
  %744 = icmp eq i32 %742, %743
  br i1 %744, label %745, label %266

745:                                              ; preds = %739
  %746 = getelementptr inbounds i32, i32* %740, i64 1
  %747 = getelementptr inbounds i32, i32* %741, i64 1
  %748 = load i32, i32* %746, align 4
  %749 = load i32, i32* %747, align 4
  %750 = icmp eq i32 %748, %749
  br i1 %750, label %751, label %266

751:                                              ; preds = %745
  %752 = getelementptr inbounds i32, i32* %746, i64 1
  %753 = getelementptr inbounds i32, i32* %747, i64 1
  %754 = load i32, i32* %752, align 4
  %755 = load i32, i32* %753, align 4
  %756 = icmp eq i32 %754, %755
  br i1 %756, label %757, label %266

757:                                              ; preds = %751
  %758 = getelementptr inbounds i32, i32* %752, i64 1
  %759 = getelementptr inbounds i32, i32* %753, i64 1
  %760 = load i32, i32* %758, align 4
  %761 = load i32, i32* %759, align 4
  %762 = icmp eq i32 %760, %761
  br i1 %762, label %763, label %266

763:                                              ; preds = %757
  %764 = getelementptr inbounds i32, i32* %758, i64 1
  %765 = getelementptr inbounds i32, i32* %759, i64 1
  %766 = load i32, i32* %764, align 4
  %767 = load i32, i32* %765, align 4
  %768 = icmp eq i32 %766, %767
  br i1 %768, label %769, label %266

769:                                              ; preds = %763
  %770 = getelementptr inbounds i32, i32* %764, i64 1
  %771 = getelementptr inbounds i32, i32* %765, i64 1
  %772 = load i32, i32* %770, align 4
  %773 = load i32, i32* %771, align 4
  %774 = icmp eq i32 %772, %773
  br i1 %774, label %775, label %266

775:                                              ; preds = %769
  %776 = getelementptr inbounds i32, i32* %770, i64 1
  %777 = getelementptr inbounds i32, i32* %771, i64 1
  %778 = load i32, i32* %776, align 4
  %779 = load i32, i32* %777, align 4
  %780 = icmp eq i32 %778, %779
  br i1 %780, label %781, label %266

781:                                              ; preds = %775
  %782 = getelementptr inbounds i32, i32* %776, i64 1
  %783 = getelementptr inbounds i32, i32* %777, i64 1
  %784 = load i32, i32* %782, align 4
  %785 = load i32, i32* %783, align 4
  %786 = icmp eq i32 %784, %785
  br i1 %786, label %787, label %266

787:                                              ; preds = %781
  %788 = getelementptr inbounds i32, i32* %782, i64 1
  %789 = getelementptr inbounds i32, i32* %783, i64 1
  %790 = load i32, i32* %788, align 4
  %791 = load i32, i32* %789, align 4
  %792 = icmp eq i32 %790, %791
  br i1 %792, label %793, label %266

793:                                              ; preds = %787
  %794 = getelementptr inbounds i32, i32* %788, i64 1
  %795 = getelementptr inbounds i32, i32* %789, i64 1
  %796 = load i32, i32* %794, align 4
  %797 = load i32, i32* %795, align 4
  %798 = icmp eq i32 %796, %797
  br i1 %798, label %155, label %266

799:                                              ; preds = %272
  %800 = getelementptr inbounds i32, i32* %273, i64 1
  %801 = getelementptr inbounds i32, i32* %274, i64 1
  %802 = load i32, i32* %800, align 4
  %803 = load i32, i32* %801, align 4
  %804 = icmp eq i32 %802, %803
  br i1 %804, label %805, label %278

805:                                              ; preds = %799
  %806 = getelementptr inbounds i32, i32* %800, i64 1
  %807 = getelementptr inbounds i32, i32* %801, i64 1
  %808 = load i32, i32* %806, align 4
  %809 = load i32, i32* %807, align 4
  %810 = icmp eq i32 %808, %809
  br i1 %810, label %811, label %278

811:                                              ; preds = %805
  %812 = getelementptr inbounds i32, i32* %806, i64 1
  %813 = getelementptr inbounds i32, i32* %807, i64 1
  %814 = load i32, i32* %812, align 4
  %815 = load i32, i32* %813, align 4
  %816 = icmp eq i32 %814, %815
  br i1 %816, label %817, label %278

817:                                              ; preds = %811
  %818 = getelementptr inbounds i32, i32* %812, i64 1
  %819 = getelementptr inbounds i32, i32* %813, i64 1
  %820 = load i32, i32* %818, align 4
  %821 = load i32, i32* %819, align 4
  %822 = icmp eq i32 %820, %821
  br i1 %822, label %823, label %278

823:                                              ; preds = %817
  %824 = getelementptr inbounds i32, i32* %818, i64 1
  %825 = getelementptr inbounds i32, i32* %819, i64 1
  %826 = load i32, i32* %824, align 4
  %827 = load i32, i32* %825, align 4
  %828 = icmp eq i32 %826, %827
  br i1 %828, label %829, label %278

829:                                              ; preds = %823
  %830 = getelementptr inbounds i32, i32* %824, i64 1
  %831 = getelementptr inbounds i32, i32* %825, i64 1
  %832 = load i32, i32* %830, align 4
  %833 = load i32, i32* %831, align 4
  %834 = icmp eq i32 %832, %833
  br i1 %834, label %835, label %278

835:                                              ; preds = %829
  %836 = getelementptr inbounds i32, i32* %830, i64 1
  %837 = getelementptr inbounds i32, i32* %831, i64 1
  %838 = load i32, i32* %836, align 4
  %839 = load i32, i32* %837, align 4
  %840 = icmp eq i32 %838, %839
  br i1 %840, label %841, label %278

841:                                              ; preds = %835
  %842 = getelementptr inbounds i32, i32* %836, i64 1
  %843 = getelementptr inbounds i32, i32* %837, i64 1
  %844 = load i32, i32* %842, align 4
  %845 = load i32, i32* %843, align 4
  %846 = icmp eq i32 %844, %845
  br i1 %846, label %847, label %278

847:                                              ; preds = %841
  %848 = getelementptr inbounds i32, i32* %842, i64 1
  %849 = getelementptr inbounds i32, i32* %843, i64 1
  %850 = load i32, i32* %848, align 4
  %851 = load i32, i32* %849, align 4
  %852 = icmp eq i32 %850, %851
  br i1 %852, label %853, label %278

853:                                              ; preds = %847
  %854 = getelementptr inbounds i32, i32* %848, i64 1
  %855 = getelementptr inbounds i32, i32* %849, i64 1
  %856 = load i32, i32* %854, align 4
  %857 = load i32, i32* %855, align 4
  %858 = icmp eq i32 %856, %857
  br i1 %858, label %155, label %278

859:                                              ; preds = %284
  %860 = getelementptr inbounds i32, i32* %285, i64 1
  %861 = getelementptr inbounds i32, i32* %286, i64 1
  %862 = load i32, i32* %860, align 4
  %863 = load i32, i32* %861, align 4
  %864 = icmp eq i32 %862, %863
  br i1 %864, label %865, label %290

865:                                              ; preds = %859
  %866 = getelementptr inbounds i32, i32* %860, i64 1
  %867 = getelementptr inbounds i32, i32* %861, i64 1
  %868 = load i32, i32* %866, align 4
  %869 = load i32, i32* %867, align 4
  %870 = icmp eq i32 %868, %869
  br i1 %870, label %871, label %290

871:                                              ; preds = %865
  %872 = getelementptr inbounds i32, i32* %866, i64 1
  %873 = getelementptr inbounds i32, i32* %867, i64 1
  %874 = load i32, i32* %872, align 4
  %875 = load i32, i32* %873, align 4
  %876 = icmp eq i32 %874, %875
  br i1 %876, label %877, label %290

877:                                              ; preds = %871
  %878 = getelementptr inbounds i32, i32* %872, i64 1
  %879 = getelementptr inbounds i32, i32* %873, i64 1
  %880 = load i32, i32* %878, align 4
  %881 = load i32, i32* %879, align 4
  %882 = icmp eq i32 %880, %881
  br i1 %882, label %883, label %290

883:                                              ; preds = %877
  %884 = getelementptr inbounds i32, i32* %878, i64 1
  %885 = getelementptr inbounds i32, i32* %879, i64 1
  %886 = load i32, i32* %884, align 4
  %887 = load i32, i32* %885, align 4
  %888 = icmp eq i32 %886, %887
  br i1 %888, label %889, label %290

889:                                              ; preds = %883
  %890 = getelementptr inbounds i32, i32* %884, i64 1
  %891 = getelementptr inbounds i32, i32* %885, i64 1
  %892 = load i32, i32* %890, align 4
  %893 = load i32, i32* %891, align 4
  %894 = icmp eq i32 %892, %893
  br i1 %894, label %155, label %290

895:                                              ; preds = %296
  %896 = getelementptr inbounds i32, i32* %297, i64 1
  %897 = getelementptr inbounds i32, i32* %298, i64 1
  %898 = load i32, i32* %896, align 4
  %899 = load i32, i32* %897, align 4
  %900 = icmp eq i32 %898, %899
  br i1 %900, label %901, label %181

901:                                              ; preds = %895
  %902 = getelementptr inbounds i32, i32* %896, i64 1
  %903 = getelementptr inbounds i32, i32* %897, i64 1
  %904 = load i32, i32* %902, align 4
  %905 = load i32, i32* %903, align 4
  %906 = icmp eq i32 %904, %905
  br i1 %906, label %155, label %181
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @utrie_defaultGetFoldingOffset_69(i32 returned) #6 {
  ret i32 %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @utrie_unserialize_69(%struct.UTrie* nocapture, i8*, i32, i32*) local_unnamed_addr #4 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %74, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %74

9:                                                ; preds = %6
  %10 = icmp slt i32 %2, 16
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  store i32 3, i32* %3, align 4
  br label %74

12:                                               ; preds = %9
  %13 = bitcast i8* %1 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1416784229
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  store i32 3, i32* %3, align 4
  br label %74

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %1, i64 4
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 255
  %22 = icmp eq i32 %21, 37
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  store i32 3, i32* %3, align 4
  br label %74

24:                                               ; preds = %17
  %25 = lshr i32 %20, 9
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 6
  store i8 %27, i8* %28, align 4
  %29 = getelementptr inbounds i8, i8* %1, i64 8
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 3
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %1, i64 12
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 4
  store i32 %35, i32* %36, align 4
  %37 = add nsw i32 %2, -16
  %38 = shl nsw i32 %31, 1
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %24
  store i32 3, i32* %3, align 4
  br label %74

41:                                               ; preds = %24
  %42 = getelementptr inbounds i8, i8* %1, i64 16
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %struct.UTrie* %0 to i8**
  store i8* %42, i8** %44, align 8
  %45 = sext i32 %31 to i64
  %46 = getelementptr inbounds i16, i16* %43, i64 %45
  %47 = sub nsw i32 %37, %38
  %48 = and i32 %20, 256
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %41
  %51 = shl nsw i32 %35, 2
  %52 = icmp slt i32 %47, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  store i32 3, i32* %3, align 4
  br label %74

54:                                               ; preds = %50
  %55 = bitcast i16* %46 to i32*
  %56 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 1
  %57 = bitcast i32** %56 to i16**
  store i16* %46, i16** %57, align 8
  %58 = load i32, i32* %55, align 4
  br label %67

59:                                               ; preds = %41
  %60 = shl nsw i32 %35, 1
  %61 = icmp slt i32 %47, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  store i32 3, i32* %3, align 4
  br label %74

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 1
  store i32* null, i32** %64, align 8
  %65 = load i16, i16* %46, align 2
  %66 = zext i16 %65 to i32
  br label %67

67:                                               ; preds = %63, %54
  %68 = phi i32 [ %66, %63 ], [ %58, %54 ]
  %69 = phi i32 [ %60, %63 ], [ %51, %54 ]
  %70 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 5
  store i32 %68, i32* %70, align 8
  %71 = add nsw i32 %38, 16
  %72 = add nsw i32 %71, %69
  %73 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 2
  store i32 (i32)* @utrie_defaultGetFoldingOffset_69, i32 (i32)** %73, align 8
  br label %74

74:                                               ; preds = %4, %6, %67, %62, %53, %40, %23, %16, %11
  %75 = phi i32 [ -1, %11 ], [ -1, %16 ], [ -1, %23 ], [ -1, %40 ], [ -1, %53 ], [ %72, %67 ], [ -1, %62 ], [ -1, %6 ], [ -1, %4 ]
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @utrie_unserializeDummy_69(%struct.UTrie* nocapture, i8*, i32, i32, i32, i8 signext, i32*) local_unnamed_addr #0 {
  %8 = icmp eq i32* %6, null
  br i1 %8, label %319, label %9

9:                                                ; preds = %7
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %319

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 3
  store i32 2080, i32* %13, align 8
  %14 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 4
  %15 = icmp ne i32 %4, %3
  %16 = select i1 %15, i32 288, i32 256
  store i32 %16, i32* %14, align 4
  %17 = icmp ne i8 %5, 0
  %18 = select i1 %17, i32 1, i32 2
  %19 = shl nuw nsw i32 %16, %18
  %20 = add nuw nsw i32 %19, 4160
  %21 = icmp sgt i32 %20, %2
  br i1 %21, label %22, label %23

22:                                               ; preds = %12
  store i32 15, i32* %6, align 4
  br label %319

23:                                               ; preds = %12
  %24 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 6
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 5
  store i32 %3, i32* %25, align 8
  %26 = bitcast i8* %1 to i16*
  %27 = bitcast %struct.UTrie* %0 to i8**
  store i8* %1, i8** %27, align 8
  br i1 %17, label %28, label %151

28:                                               ; preds = %23, %28
  %29 = phi i64 [ %54, %28 ], [ 0, %23 ]
  %30 = getelementptr inbounds i16, i16* %26, i64 %29
  %31 = bitcast i16* %30 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %31, align 2
  %32 = getelementptr inbounds i16, i16* %30, i64 8
  %33 = bitcast i16* %32 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %33, align 2
  %34 = add nuw nsw i64 %29, 16
  %35 = getelementptr inbounds i16, i16* %26, i64 %34
  %36 = bitcast i16* %35 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %36, align 2
  %37 = getelementptr inbounds i16, i16* %35, i64 8
  %38 = bitcast i16* %37 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %38, align 2
  %39 = add nuw nsw i64 %29, 32
  %40 = getelementptr inbounds i16, i16* %26, i64 %39
  %41 = bitcast i16* %40 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %41, align 2
  %42 = getelementptr inbounds i16, i16* %40, i64 8
  %43 = bitcast i16* %42 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %43, align 2
  %44 = add nuw nsw i64 %29, 48
  %45 = getelementptr inbounds i16, i16* %26, i64 %44
  %46 = bitcast i16* %45 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %46, align 2
  %47 = getelementptr inbounds i16, i16* %45, i64 8
  %48 = bitcast i16* %47 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %48, align 2
  %49 = add nuw nsw i64 %29, 64
  %50 = getelementptr inbounds i16, i16* %26, i64 %49
  %51 = bitcast i16* %50 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %51, align 2
  %52 = getelementptr inbounds i16, i16* %50, i64 8
  %53 = bitcast i16* %52 to <8 x i16>*
  store <8 x i16> <i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520, i16 520>, <8 x i16>* %53, align 2
  %54 = add nuw nsw i64 %29, 80
  %55 = icmp eq i64 %54, 2080
  br i1 %55, label %56, label %28, !llvm.loop !45

56:                                               ; preds = %28
  br i1 %15, label %57, label %66

57:                                               ; preds = %56
  %58 = getelementptr inbounds i8, i8* %1, i64 3456
  %59 = bitcast i8* %58 to <8 x i16>*
  store <8 x i16> <i16 584, i16 584, i16 584, i16 584, i16 584, i16 584, i16 584, i16 584>, <8 x i16>* %59, align 2
  %60 = getelementptr inbounds i8, i8* %1, i64 3472
  %61 = bitcast i8* %60 to <8 x i16>*
  store <8 x i16> <i16 584, i16 584, i16 584, i16 584, i16 584, i16 584, i16 584, i16 584>, <8 x i16>* %61, align 2
  %62 = getelementptr inbounds i8, i8* %1, i64 3488
  %63 = bitcast i8* %62 to <8 x i16>*
  store <8 x i16> <i16 584, i16 584, i16 584, i16 584, i16 584, i16 584, i16 584, i16 584>, <8 x i16>* %63, align 2
  %64 = getelementptr inbounds i8, i8* %1, i64 3504
  %65 = bitcast i8* %64 to <8 x i16>*
  store <8 x i16> <i16 584, i16 584, i16 584, i16 584, i16 584, i16 584, i16 584, i16 584>, <8 x i16>* %65, align 2
  br label %66

66:                                               ; preds = %57, %56
  %67 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 1
  store i32* null, i32** %67, align 8
  %68 = load i32, i32* %13, align 8
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i16, i16* %26, i64 %69
  %71 = trunc i32 %3 to i16
  %72 = insertelement <8 x i16> undef, i16 %71, i32 0
  %73 = shufflevector <8 x i16> %72, <8 x i16> undef, <8 x i32> zeroinitializer
  %74 = insertelement <8 x i16> undef, i16 %71, i32 0
  %75 = shufflevector <8 x i16> %74, <8 x i16> undef, <8 x i32> zeroinitializer
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2
  %77 = getelementptr inbounds i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2
  %79 = getelementptr inbounds i16, i16* %70, i64 16
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %80, align 2
  %81 = getelementptr inbounds i16, i16* %79, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %82, align 2
  %83 = getelementptr inbounds i16, i16* %70, i64 32
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %84, align 2
  %85 = getelementptr inbounds i16, i16* %83, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %86, align 2
  %87 = getelementptr inbounds i16, i16* %70, i64 48
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %88, align 2
  %89 = getelementptr inbounds i16, i16* %87, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %90, align 2
  %91 = getelementptr inbounds i16, i16* %70, i64 64
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %92, align 2
  %93 = getelementptr inbounds i16, i16* %91, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %94, align 2
  %95 = getelementptr inbounds i16, i16* %70, i64 80
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %96, align 2
  %97 = getelementptr inbounds i16, i16* %95, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %98, align 2
  %99 = getelementptr inbounds i16, i16* %70, i64 96
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %100, align 2
  %101 = getelementptr inbounds i16, i16* %99, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %102, align 2
  %103 = getelementptr inbounds i16, i16* %70, i64 112
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %104, align 2
  %105 = getelementptr inbounds i16, i16* %103, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %106, align 2
  %107 = getelementptr inbounds i16, i16* %70, i64 128
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %108, align 2
  %109 = getelementptr inbounds i16, i16* %107, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %110, align 2
  %111 = getelementptr inbounds i16, i16* %70, i64 144
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %112, align 2
  %113 = getelementptr inbounds i16, i16* %111, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %114, align 2
  %115 = getelementptr inbounds i16, i16* %70, i64 160
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %116, align 2
  %117 = getelementptr inbounds i16, i16* %115, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %118, align 2
  %119 = getelementptr inbounds i16, i16* %70, i64 176
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %120, align 2
  %121 = getelementptr inbounds i16, i16* %119, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %122, align 2
  %123 = getelementptr inbounds i16, i16* %70, i64 192
  %124 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %124, align 2
  %125 = getelementptr inbounds i16, i16* %123, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %126, align 2
  %127 = getelementptr inbounds i16, i16* %70, i64 208
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %128, align 2
  %129 = getelementptr inbounds i16, i16* %127, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %130, align 2
  %131 = getelementptr inbounds i16, i16* %70, i64 224
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %132, align 2
  %133 = getelementptr inbounds i16, i16* %131, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %134, align 2
  %135 = getelementptr inbounds i16, i16* %70, i64 240
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %136, align 2
  %137 = getelementptr inbounds i16, i16* %135, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %138, align 2
  br i1 %15, label %139, label %317

139:                                              ; preds = %66
  %140 = trunc i32 %4 to i16
  %141 = getelementptr inbounds i16, i16* %70, i64 256
  %142 = insertelement <8 x i16> undef, i16 %140, i32 0
  %143 = shufflevector <8 x i16> %142, <8 x i16> undef, <8 x i32> zeroinitializer
  %144 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %144, align 2
  %145 = getelementptr inbounds i16, i16* %70, i64 264
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2
  %147 = getelementptr inbounds i16, i16* %70, i64 272
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %148, align 2
  %149 = getelementptr inbounds i16, i16* %70, i64 280
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %150, align 2
  br label %317

151:                                              ; preds = %23
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %1, i8 0, i64 4160, i1 false)
  br i1 %15, label %152, label %161

152:                                              ; preds = %151
  %153 = getelementptr inbounds i8, i8* %1, i64 3456
  %154 = bitcast i8* %153 to <8 x i16>*
  store <8 x i16> <i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64>, <8 x i16>* %154, align 2
  %155 = getelementptr inbounds i8, i8* %1, i64 3472
  %156 = bitcast i8* %155 to <8 x i16>*
  store <8 x i16> <i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64>, <8 x i16>* %156, align 2
  %157 = getelementptr inbounds i8, i8* %1, i64 3488
  %158 = bitcast i8* %157 to <8 x i16>*
  store <8 x i16> <i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64>, <8 x i16>* %158, align 2
  %159 = getelementptr inbounds i8, i8* %1, i64 3504
  %160 = bitcast i8* %159 to <8 x i16>*
  store <8 x i16> <i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64, i16 64>, <8 x i16>* %160, align 2
  br label %161

161:                                              ; preds = %152, %151
  %162 = load i32, i32* %13, align 8
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i16, i16* %26, i64 %163
  %165 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 1
  %166 = bitcast i32** %165 to i16**
  store i16* %164, i16** %166, align 8
  %167 = insertelement <4 x i32> undef, i32 %3, i32 0
  %168 = shufflevector <4 x i32> %167, <4 x i32> undef, <4 x i32> zeroinitializer
  %169 = insertelement <4 x i32> undef, i32 %3, i32 0
  %170 = shufflevector <4 x i32> %169, <4 x i32> undef, <4 x i32> zeroinitializer
  %171 = bitcast i16* %164 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds i16, i16* %164, i64 8
  %173 = bitcast i16* %172 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds i16, i16* %164, i64 16
  %175 = bitcast i16* %174 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds i16, i16* %174, i64 8
  %177 = bitcast i16* %176 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds i16, i16* %164, i64 32
  %179 = bitcast i16* %178 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds i16, i16* %178, i64 8
  %181 = bitcast i16* %180 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds i16, i16* %164, i64 48
  %183 = bitcast i16* %182 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds i16, i16* %182, i64 8
  %185 = bitcast i16* %184 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds i16, i16* %164, i64 64
  %187 = bitcast i16* %186 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds i16, i16* %186, i64 8
  %189 = bitcast i16* %188 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds i16, i16* %164, i64 80
  %191 = bitcast i16* %190 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds i16, i16* %190, i64 8
  %193 = bitcast i16* %192 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds i16, i16* %164, i64 96
  %195 = bitcast i16* %194 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds i16, i16* %194, i64 8
  %197 = bitcast i16* %196 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds i16, i16* %164, i64 112
  %199 = bitcast i16* %198 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds i16, i16* %198, i64 8
  %201 = bitcast i16* %200 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds i16, i16* %164, i64 128
  %203 = bitcast i16* %202 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds i16, i16* %202, i64 8
  %205 = bitcast i16* %204 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds i16, i16* %164, i64 144
  %207 = bitcast i16* %206 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds i16, i16* %206, i64 8
  %209 = bitcast i16* %208 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds i16, i16* %164, i64 160
  %211 = bitcast i16* %210 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %211, align 4
  %212 = getelementptr inbounds i16, i16* %210, i64 8
  %213 = bitcast i16* %212 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %213, align 4
  %214 = getelementptr inbounds i16, i16* %164, i64 176
  %215 = bitcast i16* %214 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %215, align 4
  %216 = getelementptr inbounds i16, i16* %214, i64 8
  %217 = bitcast i16* %216 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %217, align 4
  %218 = getelementptr inbounds i16, i16* %164, i64 192
  %219 = bitcast i16* %218 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %219, align 4
  %220 = getelementptr inbounds i16, i16* %218, i64 8
  %221 = bitcast i16* %220 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %221, align 4
  %222 = getelementptr inbounds i16, i16* %164, i64 208
  %223 = bitcast i16* %222 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %223, align 4
  %224 = getelementptr inbounds i16, i16* %222, i64 8
  %225 = bitcast i16* %224 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %225, align 4
  %226 = getelementptr inbounds i16, i16* %164, i64 224
  %227 = bitcast i16* %226 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %227, align 4
  %228 = getelementptr inbounds i16, i16* %226, i64 8
  %229 = bitcast i16* %228 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %229, align 4
  %230 = getelementptr inbounds i16, i16* %164, i64 240
  %231 = bitcast i16* %230 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %231, align 4
  %232 = getelementptr inbounds i16, i16* %230, i64 8
  %233 = bitcast i16* %232 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %233, align 4
  %234 = getelementptr inbounds i16, i16* %164, i64 256
  %235 = bitcast i16* %234 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %235, align 4
  %236 = getelementptr inbounds i16, i16* %234, i64 8
  %237 = bitcast i16* %236 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %237, align 4
  %238 = getelementptr inbounds i16, i16* %164, i64 272
  %239 = bitcast i16* %238 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %239, align 4
  %240 = getelementptr inbounds i16, i16* %238, i64 8
  %241 = bitcast i16* %240 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %241, align 4
  %242 = getelementptr inbounds i16, i16* %164, i64 288
  %243 = bitcast i16* %242 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %243, align 4
  %244 = getelementptr inbounds i16, i16* %242, i64 8
  %245 = bitcast i16* %244 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %245, align 4
  %246 = getelementptr inbounds i16, i16* %164, i64 304
  %247 = bitcast i16* %246 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %247, align 4
  %248 = getelementptr inbounds i16, i16* %246, i64 8
  %249 = bitcast i16* %248 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %249, align 4
  %250 = getelementptr inbounds i16, i16* %164, i64 320
  %251 = bitcast i16* %250 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %251, align 4
  %252 = getelementptr inbounds i16, i16* %250, i64 8
  %253 = bitcast i16* %252 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %253, align 4
  %254 = getelementptr inbounds i16, i16* %164, i64 336
  %255 = bitcast i16* %254 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %255, align 4
  %256 = getelementptr inbounds i16, i16* %254, i64 8
  %257 = bitcast i16* %256 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %257, align 4
  %258 = getelementptr inbounds i16, i16* %164, i64 352
  %259 = bitcast i16* %258 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %259, align 4
  %260 = getelementptr inbounds i16, i16* %258, i64 8
  %261 = bitcast i16* %260 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %261, align 4
  %262 = getelementptr inbounds i16, i16* %164, i64 368
  %263 = bitcast i16* %262 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %263, align 4
  %264 = getelementptr inbounds i16, i16* %262, i64 8
  %265 = bitcast i16* %264 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %265, align 4
  %266 = getelementptr inbounds i16, i16* %164, i64 384
  %267 = bitcast i16* %266 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %267, align 4
  %268 = getelementptr inbounds i16, i16* %266, i64 8
  %269 = bitcast i16* %268 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %269, align 4
  %270 = getelementptr inbounds i16, i16* %164, i64 400
  %271 = bitcast i16* %270 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %271, align 4
  %272 = getelementptr inbounds i16, i16* %270, i64 8
  %273 = bitcast i16* %272 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %273, align 4
  %274 = getelementptr inbounds i16, i16* %164, i64 416
  %275 = bitcast i16* %274 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %275, align 4
  %276 = getelementptr inbounds i16, i16* %274, i64 8
  %277 = bitcast i16* %276 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %277, align 4
  %278 = getelementptr inbounds i16, i16* %164, i64 432
  %279 = bitcast i16* %278 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %279, align 4
  %280 = getelementptr inbounds i16, i16* %278, i64 8
  %281 = bitcast i16* %280 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %281, align 4
  %282 = getelementptr inbounds i16, i16* %164, i64 448
  %283 = bitcast i16* %282 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i16, i16* %282, i64 8
  %285 = bitcast i16* %284 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %285, align 4
  %286 = getelementptr inbounds i16, i16* %164, i64 464
  %287 = bitcast i16* %286 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %287, align 4
  %288 = getelementptr inbounds i16, i16* %286, i64 8
  %289 = bitcast i16* %288 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %289, align 4
  %290 = getelementptr inbounds i16, i16* %164, i64 480
  %291 = bitcast i16* %290 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %291, align 4
  %292 = getelementptr inbounds i16, i16* %290, i64 8
  %293 = bitcast i16* %292 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %293, align 4
  %294 = getelementptr inbounds i16, i16* %164, i64 496
  %295 = bitcast i16* %294 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %295, align 4
  %296 = getelementptr inbounds i16, i16* %294, i64 8
  %297 = bitcast i16* %296 to <4 x i32>*
  store <4 x i32> %170, <4 x i32>* %297, align 4
  br i1 %15, label %298, label %317

298:                                              ; preds = %161
  %299 = getelementptr inbounds i16, i16* %164, i64 512
  %300 = insertelement <4 x i32> undef, i32 %4, i32 0
  %301 = shufflevector <4 x i32> %300, <4 x i32> undef, <4 x i32> zeroinitializer
  %302 = bitcast i16* %299 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %302, align 4
  %303 = getelementptr inbounds i16, i16* %164, i64 520
  %304 = bitcast i16* %303 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %304, align 4
  %305 = getelementptr inbounds i16, i16* %164, i64 528
  %306 = bitcast i16* %305 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %306, align 4
  %307 = getelementptr inbounds i16, i16* %164, i64 536
  %308 = bitcast i16* %307 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %308, align 4
  %309 = getelementptr inbounds i16, i16* %164, i64 544
  %310 = bitcast i16* %309 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %310, align 4
  %311 = getelementptr inbounds i16, i16* %164, i64 552
  %312 = bitcast i16* %311 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %312, align 4
  %313 = getelementptr inbounds i16, i16* %164, i64 560
  %314 = bitcast i16* %313 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %314, align 4
  %315 = getelementptr inbounds i16, i16* %164, i64 568
  %316 = bitcast i16* %315 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %316, align 4
  br label %317

317:                                              ; preds = %298, %139, %161, %66
  %318 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 2
  store i32 (i32)* @utrie_defaultGetFoldingOffset_69, i32 (i32)** %318, align 8
  br label %319

319:                                              ; preds = %7, %9, %317, %22
  %320 = phi i32 [ %20, %22 ], [ %20, %317 ], [ -1, %9 ], [ -1, %7 ]
  ret i32 %320
}

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie_enum_69(%struct.UTrie* readonly, i32 (i8*, i32)*, i8 (i8*, i32, i32, i32)*, i8*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.UTrie* %0, null
  br i1 %5, label %241, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = icmp eq i16* %8, null
  %10 = icmp eq i8 (i8*, i32, i32, i32)* %2, null
  %11 = or i1 %10, %9
  br i1 %11, label %241, label %12

12:                                               ; preds = %6
  %13 = icmp eq i32 (i8*, i32)* %1, null
  %14 = select i1 %13, i32 (i8*, i32)* @_ZL13enumSameValuePKvj, i32 (i8*, i32)* %1
  %15 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = tail call i32 %14(i8* %3, i32 %18) #8
  %20 = icmp eq i32* %16, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  br label %24

24:                                               ; preds = %12, %21
  %25 = phi i32 [ %23, %21 ], [ 0, %12 ]
  br label %29

26:                                               ; preds = %95
  %27 = icmp ne i32* %16, null
  %28 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 2
  br label %102

29:                                               ; preds = %24, %95
  %30 = phi i32 [ %25, %24 ], [ %99, %95 ]
  %31 = phi i32 [ 0, %24 ], [ %100, %95 ]
  %32 = phi i32 [ 0, %24 ], [ %98, %95 ]
  %33 = phi i32 [ 0, %24 ], [ %97, %95 ]
  %34 = phi i32 [ %19, %24 ], [ %96, %95 ]
  switch i32 %33, label %36 [
    i32 55296, label %37
    i32 56320, label %35
  ]

35:                                               ; preds = %29
  br label %37

36:                                               ; preds = %29
  br label %37

37:                                               ; preds = %29, %36, %35
  %38 = phi i32 [ 1760, %35 ], [ 2048, %29 ], [ %31, %36 ]
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %8, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = shl nuw nsw i32 %42, 2
  %44 = icmp eq i32 %43, %30
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = add nsw i32 %33, 32
  br label %95

47:                                               ; preds = %37
  %48 = icmp eq i32 %43, %25
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = zext i32 %43 to i64
  br label %62

51:                                               ; preds = %47
  %52 = icmp eq i32 %34, %19
  br i1 %52, label %58, label %53

53:                                               ; preds = %51
  %54 = icmp slt i32 %32, %33
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = tail call signext i8 %2(i8* %3, i32 %32, i32 %33, i32 %34) #8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %241, label %58

58:                                               ; preds = %53, %55, %51
  %59 = phi i32 [ %32, %51 ], [ %33, %55 ], [ %33, %53 ]
  %60 = phi i32 [ %30, %51 ], [ %25, %55 ], [ %25, %53 ]
  %61 = add nsw i32 %33, 32
  br label %95

62:                                               ; preds = %88, %49
  %63 = phi i64 [ 0, %49 ], [ %93, %88 ]
  %64 = phi i32 [ %43, %49 ], [ %91, %88 ]
  %65 = phi i32 [ %32, %49 ], [ %90, %88 ]
  %66 = phi i32 [ %33, %49 ], [ %92, %88 ]
  %67 = phi i32 [ %34, %49 ], [ %89, %88 ]
  %68 = add nuw nsw i64 %63, %50
  br i1 %20, label %72, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds i32, i32* %16, i64 %68
  %71 = load i32, i32* %70, align 4
  br label %76

72:                                               ; preds = %62
  %73 = getelementptr inbounds i16, i16* %8, i64 %68
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  br label %76

76:                                               ; preds = %72, %69
  %77 = phi i32 [ %71, %69 ], [ %75, %72 ]
  %78 = tail call i32 %14(i8* %3, i32 %77) #8
  %79 = icmp eq i32 %78, %67
  br i1 %79, label %88, label %80

80:                                               ; preds = %76
  %81 = icmp slt i32 %65, %66
  br i1 %81, label %82, label %85

82:                                               ; preds = %80
  %83 = tail call signext i8 %2(i8* %3, i32 %65, i32 %66, i32 %67) #8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %241, label %85

85:                                               ; preds = %82, %80
  %86 = icmp eq i64 %63, 0
  %87 = select i1 %86, i32 %64, i32 -1
  br label %88

88:                                               ; preds = %76, %85
  %89 = phi i32 [ %78, %85 ], [ %67, %76 ]
  %90 = phi i32 [ %66, %85 ], [ %65, %76 ]
  %91 = phi i32 [ %87, %85 ], [ %64, %76 ]
  %92 = add nsw i32 %66, 1
  %93 = add nuw nsw i64 %63, 1
  %94 = icmp eq i64 %93, 32
  br i1 %94, label %95, label %62

95:                                               ; preds = %88, %45, %58
  %96 = phi i32 [ %34, %45 ], [ %19, %58 ], [ %89, %88 ]
  %97 = phi i32 [ %46, %45 ], [ %61, %58 ], [ %92, %88 ]
  %98 = phi i32 [ %32, %45 ], [ %59, %58 ], [ %90, %88 ]
  %99 = phi i32 [ %30, %45 ], [ %60, %58 ], [ %91, %88 ]
  %100 = add nsw i32 %38, 1
  %101 = icmp slt i32 %97, 65536
  br i1 %101, label %29, label %26

102:                                              ; preds = %26, %127
  %103 = phi i32 [ %99, %26 ], [ %132, %127 ]
  %104 = phi i32 [ 55296, %26 ], [ %131, %127 ]
  %105 = phi i32 [ %98, %26 ], [ %130, %127 ]
  %106 = phi i32 [ %97, %26 ], [ %129, %127 ]
  %107 = phi i32 [ %96, %26 ], [ %128, %127 ]
  %108 = ashr i32 %104, 5
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i16, i16* %8, i64 %109
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = shl nuw nsw i32 %112, 2
  %114 = icmp eq i32 %113, %25
  br i1 %114, label %115, label %134

115:                                              ; preds = %102
  %116 = icmp eq i32 %107, %19
  br i1 %116, label %122, label %117

117:                                              ; preds = %115
  %118 = icmp slt i32 %105, %106
  br i1 %118, label %119, label %122

119:                                              ; preds = %117
  %120 = tail call signext i8 %2(i8* %3, i32 %105, i32 %106, i32 %107) #8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %241, label %122

122:                                              ; preds = %117, %119, %115
  %123 = phi i32 [ %105, %115 ], [ %106, %119 ], [ %106, %117 ]
  %124 = phi i32 [ %103, %115 ], [ %25, %119 ], [ %25, %117 ]
  %125 = add nsw i32 %104, 32
  %126 = add nsw i32 %106, 32768
  br label %127

127:                                              ; preds = %122, %233
  %128 = phi i32 [ %19, %122 ], [ %234, %233 ]
  %129 = phi i32 [ %126, %122 ], [ %235, %233 ]
  %130 = phi i32 [ %123, %122 ], [ %236, %233 ]
  %131 = phi i32 [ %125, %122 ], [ %238, %233 ]
  %132 = phi i32 [ %124, %122 ], [ %237, %233 ]
  %133 = icmp slt i32 %131, 56320
  br i1 %133, label %102, label %239

134:                                              ; preds = %102
  %135 = and i32 %104, 31
  %136 = add nuw nsw i32 %113, %135
  %137 = zext i32 %136 to i64
  br i1 %27, label %138, label %141

138:                                              ; preds = %134
  %139 = getelementptr inbounds i32, i32* %16, i64 %137
  %140 = load i32, i32* %139, align 4
  br label %145

141:                                              ; preds = %134
  %142 = getelementptr inbounds i16, i16* %8, i64 %137
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  br label %145

145:                                              ; preds = %141, %138
  %146 = phi i32 [ %140, %138 ], [ %144, %141 ]
  %147 = load i32 (i32)*, i32 (i32)** %28, align 8
  %148 = tail call i32 %147(i32 %146) #8
  %149 = icmp slt i32 %148, 1
  br i1 %149, label %154, label %150

150:                                              ; preds = %145
  %151 = add nuw nsw i32 %148, 31
  %152 = sext i32 %148 to i64
  %153 = sext i32 %151 to i64
  br label %165

154:                                              ; preds = %145
  %155 = icmp eq i32 %107, %19
  br i1 %155, label %161, label %156

156:                                              ; preds = %154
  %157 = icmp slt i32 %105, %106
  br i1 %157, label %158, label %161

158:                                              ; preds = %156
  %159 = tail call signext i8 %2(i8* %3, i32 %105, i32 %106, i32 %107) #8
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %241, label %161

161:                                              ; preds = %156, %158, %154
  %162 = phi i32 [ %105, %154 ], [ %106, %158 ], [ %106, %156 ]
  %163 = phi i32 [ %103, %154 ], [ %25, %158 ], [ %25, %156 ]
  %164 = add nsw i32 %106, 1024
  br label %233

165:                                              ; preds = %150, %226
  %166 = phi i64 [ %152, %150 ], [ %231, %226 ]
  %167 = phi i32 [ %107, %150 ], [ %227, %226 ]
  %168 = phi i32 [ %106, %150 ], [ %228, %226 ]
  %169 = phi i32 [ %105, %150 ], [ %229, %226 ]
  %170 = phi i32 [ %103, %150 ], [ %230, %226 ]
  %171 = getelementptr inbounds i16, i16* %8, i64 %166
  %172 = load i16, i16* %171, align 2
  %173 = zext i16 %172 to i32
  %174 = shl nuw nsw i32 %173, 2
  %175 = icmp eq i32 %174, %170
  br i1 %175, label %176, label %178

176:                                              ; preds = %165
  %177 = add nsw i32 %168, 32
  br label %226

178:                                              ; preds = %165
  %179 = icmp eq i32 %174, %25
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = zext i32 %174 to i64
  br label %193

182:                                              ; preds = %178
  %183 = icmp eq i32 %167, %19
  br i1 %183, label %189, label %184

184:                                              ; preds = %182
  %185 = icmp slt i32 %169, %168
  br i1 %185, label %186, label %189

186:                                              ; preds = %184
  %187 = tail call signext i8 %2(i8* %3, i32 %169, i32 %168, i32 %167) #8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %241, label %189

189:                                              ; preds = %184, %186, %182
  %190 = phi i32 [ %169, %182 ], [ %168, %186 ], [ %168, %184 ]
  %191 = phi i32 [ %170, %182 ], [ %25, %186 ], [ %25, %184 ]
  %192 = add nsw i32 %168, 32
  br label %226

193:                                              ; preds = %219, %180
  %194 = phi i64 [ 0, %180 ], [ %224, %219 ]
  %195 = phi i32 [ %174, %180 ], [ %222, %219 ]
  %196 = phi i32 [ %169, %180 ], [ %221, %219 ]
  %197 = phi i32 [ %168, %180 ], [ %223, %219 ]
  %198 = phi i32 [ %167, %180 ], [ %220, %219 ]
  %199 = add nuw nsw i64 %194, %181
  br i1 %27, label %200, label %203

200:                                              ; preds = %193
  %201 = getelementptr inbounds i32, i32* %16, i64 %199
  %202 = load i32, i32* %201, align 4
  br label %207

203:                                              ; preds = %193
  %204 = getelementptr inbounds i16, i16* %8, i64 %199
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  br label %207

207:                                              ; preds = %203, %200
  %208 = phi i32 [ %202, %200 ], [ %206, %203 ]
  %209 = tail call i32 %14(i8* %3, i32 %208) #8
  %210 = icmp eq i32 %209, %198
  br i1 %210, label %219, label %211

211:                                              ; preds = %207
  %212 = icmp slt i32 %196, %197
  br i1 %212, label %213, label %216

213:                                              ; preds = %211
  %214 = tail call signext i8 %2(i8* %3, i32 %196, i32 %197, i32 %198) #8
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %241, label %216

216:                                              ; preds = %213, %211
  %217 = icmp eq i64 %194, 0
  %218 = select i1 %217, i32 %195, i32 -1
  br label %219

219:                                              ; preds = %207, %216
  %220 = phi i32 [ %209, %216 ], [ %198, %207 ]
  %221 = phi i32 [ %197, %216 ], [ %196, %207 ]
  %222 = phi i32 [ %218, %216 ], [ %195, %207 ]
  %223 = add nsw i32 %197, 1
  %224 = add nuw nsw i64 %194, 1
  %225 = icmp eq i64 %224, 32
  br i1 %225, label %226, label %193

226:                                              ; preds = %219, %176, %189
  %227 = phi i32 [ %167, %176 ], [ %19, %189 ], [ %220, %219 ]
  %228 = phi i32 [ %177, %176 ], [ %192, %189 ], [ %223, %219 ]
  %229 = phi i32 [ %169, %176 ], [ %190, %189 ], [ %221, %219 ]
  %230 = phi i32 [ %170, %176 ], [ %191, %189 ], [ %222, %219 ]
  %231 = add nsw i64 %166, 1
  %232 = icmp slt i64 %166, %153
  br i1 %232, label %165, label %233

233:                                              ; preds = %226, %161
  %234 = phi i32 [ %19, %161 ], [ %227, %226 ]
  %235 = phi i32 [ %164, %161 ], [ %228, %226 ]
  %236 = phi i32 [ %162, %161 ], [ %229, %226 ]
  %237 = phi i32 [ %163, %161 ], [ %230, %226 ]
  %238 = add nsw i32 %104, 1
  br label %127

239:                                              ; preds = %127
  %240 = tail call signext i8 %2(i8* %3, i32 %130, i32 %129, i32 %128) #8
  br label %241

241:                                              ; preds = %55, %82, %158, %119, %186, %213, %4, %6, %239
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL13enumSameValuePKvj(i8* nocapture readnone, i32 returned) unnamed_addr #6 {
  ret i32 %1
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind allocsize(0) }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9, !5}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
!10 = distinct !{!10, !9, !5}
!11 = distinct !{!11, !5}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !9, !5}
!15 = distinct !{!15, !9, !5}
!16 = distinct !{!16, !5}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !5}
!19 = distinct !{!19, !9, !5}
!20 = distinct !{!20, !9, !5}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !5}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = !{!33}
!33 = distinct !{!33, !29}
!34 = !{!31, !28}
!35 = distinct !{!35, !5}
!36 = distinct !{!36, !5}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !5}
!43 = distinct !{!43, !5}
!44 = distinct !{!44, !5}
!45 = distinct !{!45, !5}
