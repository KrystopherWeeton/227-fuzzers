; ModuleID = '../../extensions/common/extension_urls.cc'
source_filename = "../../extensions/common/extension_urls.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.1", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.extensions::ExtensionsClient" = type <{ i32 (...)**, %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::unique_ptr.14" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::unique_ptr.14"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

@_ZN10extensions16kExtensionSchemeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [13 x i16] [i16 101, i16 120, i16 116, i16 101, i16 110, i16 115, i16 105, i16 111, i16 110, i16 115, i16 58, i16 58, i16 0], align 2
@_ZN14extension_urls22kChromeWebstoreBaseURLE = hidden constant [35 x i8] c"https://chrome.google.com/webstore\00", align 16
@_ZN14extension_urls24kChromeWebstoreUpdateURLE = hidden constant [48 x i8] c"https://clients2.google.com/service/update2/crx\00", align 16
@.str.1 = private unnamed_addr constant [21 x i8] c"/category/extensions\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"/detail/\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"/inlineinstall/detail/\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"%s/report/%s?utm_source=%s\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"sb-ssl.google.com\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"safebrowsing.googleapis.com\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"safebrowsing.google.com\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"/safebrowsing\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions23IsSourceFromAnExtensionERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %class.GURL, align 8
  %3 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %3) #9
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  call void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL* nonnull %2, i16* %11, i64 %15) #9
  %16 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0)) #9
  %17 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0), i64 %16) #9
  br i1 %17, label %27, label %18

18:                                               ; preds = %1
  %19 = load i8, i8* %5, align 1
  %20 = load i16*, i16** %8, align 8
  %21 = load i64, i64* %12, align 8
  %22 = zext i8 %19 to i64
  %23 = icmp slt i8 %19, 0
  %24 = select i1 %23, i16* %20, i16* %10
  %25 = select i1 %23, i64 %21, i64 %22
  %26 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %24, i64 %25, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @.str, i64 0, i64 0), i64 12, i32 0) #9
  br label %27

27:                                               ; preds = %18, %1
  %28 = phi i1 [ true, %1 ], [ %26, %18 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %3) #9
  ret i1 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL*, i16*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14extension_urls20GetWebstoreLaunchURLEv(%class.GURL* noalias sret) local_unnamed_addr #0 {
  %2 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #9
  %3 = icmp eq %"class.extensions::ExtensionsClient"* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.extensions::ExtensionsClient"* %2 to %class.GURL* (%"class.extensions::ExtensionsClient"*)***
  %6 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)**, %class.GURL* (%"class.extensions::ExtensionsClient"*)*** %5, align 8
  %7 = getelementptr inbounds %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %6, i64 11
  %8 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %7, align 8
  %9 = tail call dereferenceable(120) %class.GURL* %8(%"class.extensions::ExtensionsClient"* nonnull %2) #9
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %9) #9
  br label %11

10:                                               ; preds = %1
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN14extension_urls22kChromeWebstoreBaseURLE, i64 0, i64 0), i64 34) #9
  br label %11

11:                                               ; preds = %10, %4
  ret void
}

declare %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() local_unnamed_addr #2

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14extension_urls32GetWebstoreExtensionsCategoryURLEv(%"class.std::__1::basic_string.1"* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %class.GURL, align 8
  %3 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %3) #9
  %4 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #9, !noalias !2
  %5 = icmp eq %"class.extensions::ExtensionsClient"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.extensions::ExtensionsClient"* %4 to %class.GURL* (%"class.extensions::ExtensionsClient"*)***
  %8 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)**, %class.GURL* (%"class.extensions::ExtensionsClient"*)*** %7, align 8
  %9 = getelementptr inbounds %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %8, i64 11
  %10 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %9, align 8
  %11 = tail call dereferenceable(120) %class.GURL* %10(%"class.extensions::ExtensionsClient"* nonnull %4) #9
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %2, %class.GURL* dereferenceable(120) %11) #9
  br label %13

12:                                               ; preds = %1
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN14extension_urls22kChromeWebstoreBaseURLE, i64 0, i64 0), i64 34) #9
  br label %13

13:                                               ; preds = %6, %12
  %14 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNK4GURL4specEv(%class.GURL* nonnull %2) #9
  %15 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #9, !alias.scope !5
  %19 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1, !noalias !5
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = zext i8 %21 to i64
  %28 = bitcast %"class.std::__1::basic_string.1"* %14 to i8*
  %29 = select i1 %22, i64 %24, i64 %27
  %30 = select i1 %22, i8* %26, i8* %28
  %31 = add i64 %29, 20
  %32 = icmp ugt i64 %31, -17
  br i1 %32, label %33, label %35

33:                                               ; preds = %13
  %34 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #10
  unreachable

35:                                               ; preds = %13
  %36 = icmp ult i64 %31, 23
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = add nuw i64 %29, 36
  %39 = and i64 %38, -16
  %40 = call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %15, align 8, !alias.scope !5
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %17, align 8, !alias.scope !5
  store i64 %29, i64* %16, align 8, !alias.scope !5
  br label %47

42:                                               ; preds = %35
  %43 = trunc i64 %29 to i8
  %44 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1, !alias.scope !5
  %46 = icmp eq i64 %29, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %37, %42
  %48 = phi i8* [ %40, %37 ], [ %18, %42 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %30, i64 %29, i1 false) #9
  br label %49

49:                                               ; preds = %42, %47
  %50 = phi i8* [ %18, %42 ], [ %48, %47 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %29
  store i8 0, i8* %51, align 1
  %52 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.1"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20) #9
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %3) #9
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14extension_urls30GetWebstoreItemDetailURLPrefixEv(%"class.std::__1::basic_string.1"* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %class.GURL, align 8
  %3 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %3) #9
  %4 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #9, !noalias !8
  %5 = icmp eq %"class.extensions::ExtensionsClient"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.extensions::ExtensionsClient"* %4 to %class.GURL* (%"class.extensions::ExtensionsClient"*)***
  %8 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)**, %class.GURL* (%"class.extensions::ExtensionsClient"*)*** %7, align 8
  %9 = getelementptr inbounds %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %8, i64 11
  %10 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %9, align 8
  %11 = tail call dereferenceable(120) %class.GURL* %10(%"class.extensions::ExtensionsClient"* nonnull %4) #9
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %2, %class.GURL* dereferenceable(120) %11) #9
  br label %13

12:                                               ; preds = %1
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN14extension_urls22kChromeWebstoreBaseURLE, i64 0, i64 0), i64 34) #9
  br label %13

13:                                               ; preds = %6, %12
  %14 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNK4GURL4specEv(%class.GURL* nonnull %2) #9
  %15 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #9, !alias.scope !11
  %19 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1, !noalias !11
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = zext i8 %21 to i64
  %28 = bitcast %"class.std::__1::basic_string.1"* %14 to i8*
  %29 = select i1 %22, i64 %24, i64 %27
  %30 = select i1 %22, i8* %26, i8* %28
  %31 = add i64 %29, 8
  %32 = icmp ugt i64 %31, -17
  br i1 %32, label %33, label %35

33:                                               ; preds = %13
  %34 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #10
  unreachable

35:                                               ; preds = %13
  %36 = icmp ult i64 %31, 23
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = add nuw i64 %29, 24
  %39 = and i64 %38, -16
  %40 = call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %15, align 8, !alias.scope !11
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %17, align 8, !alias.scope !11
  store i64 %29, i64* %16, align 8, !alias.scope !11
  br label %47

42:                                               ; preds = %35
  %43 = trunc i64 %29 to i8
  %44 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1, !alias.scope !11
  %46 = icmp eq i64 %29, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %37, %42
  %48 = phi i8* [ %40, %37 ], [ %18, %42 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %30, i64 %29, i1 false) #9
  br label %49

49:                                               ; preds = %42, %47
  %50 = phi i8* [ %18, %42 ], [ %48, %47 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %29
  store i8 0, i8* %51, align 1
  %52 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.1"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #9
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14extension_urls26GetWebstoreItemJsonDataURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.GURL* noalias sret, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.1", align 8
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %class.GURL, align 8
  %6 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %8) #9
  %9 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #9, !noalias !14
  %10 = icmp eq %"class.extensions::ExtensionsClient"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.extensions::ExtensionsClient"* %9 to %class.GURL* (%"class.extensions::ExtensionsClient"*)***
  %13 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)**, %class.GURL* (%"class.extensions::ExtensionsClient"*)*** %12, align 8
  %14 = getelementptr inbounds %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %13, i64 11
  %15 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %14, align 8
  %16 = tail call dereferenceable(120) %class.GURL* %15(%"class.extensions::ExtensionsClient"* nonnull %9) #9
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %5, %class.GURL* dereferenceable(120) %16) #9
  br label %18

17:                                               ; preds = %2
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN14extension_urls22kChromeWebstoreBaseURLE, i64 0, i64 0), i64 34) #9
  br label %18

18:                                               ; preds = %11, %17
  %19 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNK4GURL4specEv(%class.GURL* nonnull %5) #9
  %20 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9, !alias.scope !17
  %23 = bitcast %"class.std::__1::basic_string.1"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !17
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = zext i8 %25 to i64
  %32 = bitcast %"class.std::__1::basic_string.1"* %19 to i8*
  %33 = select i1 %26, i64 %28, i64 %31
  %34 = select i1 %26, i8* %30, i8* %32
  %35 = add i64 %33, 22
  %36 = icmp ugt i64 %35, -17
  br i1 %36, label %37, label %39

37:                                               ; preds = %18
  %38 = bitcast %"class.std::__1::basic_string.1"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %38) #10
  unreachable

39:                                               ; preds = %18
  %40 = icmp ult i64 %35, 23
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  %42 = add nuw i64 %33, 38
  %43 = and i64 %42, -16
  %44 = call i8* @_Znwm(i64 %43) #11
  store i8* %44, i8** %20, align 8, !alias.scope !17
  %45 = or i64 %43, -9223372036854775808
  store i64 %45, i64* %22, align 8, !alias.scope !17
  store i64 %33, i64* %21, align 8, !alias.scope !17
  br label %51

46:                                               ; preds = %39
  %47 = trunc i64 %33 to i8
  %48 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  store i8 %47, i8* %49, align 1, !alias.scope !17
  %50 = icmp eq i64 %33, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %41, %46
  %52 = phi i8* [ %44, %41 ], [ %7, %46 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 %34, i64 %33, i1 false) #9
  br label %53

53:                                               ; preds = %46, %51
  %54 = phi i8* [ %7, %46 ], [ %52, %51 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %33
  store i8 0, i8* %55, align 1
  %56 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.1"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22) #9
  %57 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1, !noalias !20
  %60 = icmp slt i8 %59, 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8, !noalias !20
  %63 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8, !noalias !20
  %65 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  %66 = zext i8 %59 to i64
  %67 = select i1 %60, i8* %62, i8* %65
  %68 = select i1 %60, i64 %64, i64 %66
  %69 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.1"* nonnull %4, i8* %67, i64 %68) #9, !noalias !20
  %70 = bitcast %"class.std::__1::basic_string.1"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %70, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #9, !noalias !20
  %71 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = select i1 %74, i8* %76, i8* %6
  %78 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %73 to i64
  %81 = select i1 %74, i64 %79, i64 %80
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* %77, i64 %81) #9
  %82 = load i8, i8* %72, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %53
  %85 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %53, %84
  %87 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  %92 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %86, %91
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14extension_urls27GetDefaultWebstoreUpdateUrlEv(%class.GURL* noalias sret) local_unnamed_addr #0 {
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZN14extension_urls24kChromeWebstoreUpdateURLE, i64 0, i64 0), i64 47) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14extension_urls20GetWebstoreUpdateUrlEv(%class.GURL* noalias sret) local_unnamed_addr #0 {
  %2 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #9
  %3 = icmp eq %"class.extensions::ExtensionsClient"* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.extensions::ExtensionsClient"* %2 to %class.GURL* (%"class.extensions::ExtensionsClient"*)***
  %6 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)**, %class.GURL* (%"class.extensions::ExtensionsClient"*)*** %5, align 8
  %7 = getelementptr inbounds %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %6, i64 12
  %8 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %7, align 8
  %9 = tail call dereferenceable(120) %class.GURL* %8(%"class.extensions::ExtensionsClient"* nonnull %2) #9
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %9) #9
  br label %11

10:                                               ; preds = %1
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZN14extension_urls24kChromeWebstoreUpdateURLE, i64 0, i64 0), i64 47) #9
  br label %11

11:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14extension_urls25GetWebstoreReportAbuseUrlERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.GURL* noalias sret, %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %class.GURL, align 8
  %6 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %7) #9
  %8 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #9, !noalias !23
  %9 = icmp eq %"class.extensions::ExtensionsClient"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.extensions::ExtensionsClient"* %8 to %class.GURL* (%"class.extensions::ExtensionsClient"*)***
  %12 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)**, %class.GURL* (%"class.extensions::ExtensionsClient"*)*** %11, align 8
  %13 = getelementptr inbounds %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %12, i64 11
  %14 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %13, align 8
  %15 = tail call dereferenceable(120) %class.GURL* %14(%"class.extensions::ExtensionsClient"* nonnull %8) #9
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %5, %class.GURL* dereferenceable(120) %15) #9
  br label %17

16:                                               ; preds = %3
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN14extension_urls22kChromeWebstoreBaseURLE, i64 0, i64 0), i64 34) #9
  br label %17

17:                                               ; preds = %10, %16
  %18 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNK4GURL4specEv(%class.GURL* nonnull %5) #9
  %19 = bitcast %"class.std::__1::basic_string.1"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string.1"* %18 to i8*
  %26 = select i1 %22, i8* %24, i8* %25
  %27 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  %34 = select i1 %30, i8* %32, i8* %33
  %35 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  %42 = select i1 %38, i8* %40, i8* %41
  call void (%"class.std::__1::basic_string.1"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %26, i8* %34, i8* %42) #9
  %43 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = select i1 %46, i8* %48, i8* %6
  %50 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %45 to i64
  %53 = select i1 %46, i64 %51, i64 %52
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* %49, i64 %53) #9
  %54 = load i8, i8* %44, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %17
  %57 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %17, %56
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14extension_urls19IsWebstoreUpdateUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = alloca %class.GURL, align 8
  %3 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %3) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 120, i1 false)
  %4 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #9, !noalias !26
  %5 = icmp eq %"class.extensions::ExtensionsClient"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.extensions::ExtensionsClient"* %4 to %class.GURL* (%"class.extensions::ExtensionsClient"*)***
  %8 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)**, %class.GURL* (%"class.extensions::ExtensionsClient"*)*** %7, align 8
  %9 = getelementptr inbounds %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %8, i64 12
  %10 = load %class.GURL* (%"class.extensions::ExtensionsClient"*)*, %class.GURL* (%"class.extensions::ExtensionsClient"*)** %9, align 8
  %11 = tail call dereferenceable(120) %class.GURL* %10(%"class.extensions::ExtensionsClient"* nonnull %4) #9
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %2, %class.GURL* dereferenceable(120) %11) #9
  br label %13

12:                                               ; preds = %1
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZN14extension_urls24kChromeWebstoreUpdateURLE, i64 0, i64 0), i64 47) #9
  br label %13

13:                                               ; preds = %6, %12
  %14 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %class.GURL* %0 to i8*
  %28 = select i1 %24, i8* %26, i8* %27
  %29 = getelementptr inbounds i8, i8* %28, i64 %20
  %30 = sext i32 %15 to i64
  br label %31

31:                                               ; preds = %13, %17
  %32 = phi i8* [ %29, %17 ], [ null, %13 ]
  %33 = phi i64 [ %30, %17 ], [ 0, %13 ]
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 3, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 3, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = bitcast %class.GURL* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = select i1 %44, i8* %46, i8* %3
  %48 = getelementptr inbounds i8, i8* %47, i64 %40
  %49 = sext i32 %35 to i64
  br label %50

50:                                               ; preds = %31, %37
  %51 = phi i8* [ %48, %37 ], [ null, %31 ]
  %52 = phi i64 [ %49, %37 ], [ 0, %31 ]
  %53 = icmp eq i64 %33, %52
  br i1 %53, label %54, label %101

54:                                               ; preds = %50
  %55 = call i32 @bcmp(i8* %32, i8* %51, i64 %33) #9
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %101

57:                                               ; preds = %54
  %58 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %75, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %class.GURL* %0 to i8*
  %72 = select i1 %68, i8* %70, i8* %71
  %73 = getelementptr inbounds i8, i8* %72, i64 %64
  %74 = sext i32 %59 to i64
  br label %75

75:                                               ; preds = %57, %61
  %76 = phi i8* [ %73, %61 ], [ null, %57 ]
  %77 = phi i64 [ %74, %61 ], [ 0, %57 ]
  %78 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, 1
  br i1 %80, label %94, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = bitcast %class.GURL* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  %89 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = select i1 %88, i8* %90, i8* %3
  %92 = getelementptr inbounds i8, i8* %91, i64 %84
  %93 = sext i32 %79 to i64
  br label %94

94:                                               ; preds = %75, %81
  %95 = phi i8* [ %92, %81 ], [ null, %75 ]
  %96 = phi i64 [ %93, %81 ], [ 0, %75 ]
  %97 = icmp eq i64 %77, %96
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = call i32 @bcmp(i8* %76, i8* %95, i64 %77) #9
  %100 = icmp eq i32 %99, 0
  br label %101

101:                                              ; preds = %50, %98, %94, %54
  %102 = phi i1 [ false, %54 ], [ false, %94 ], [ %100, %98 ], [ false, %50 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %3) #9
  ret i1 %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14extension_urls20IsBlacklistUpdateUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #9
  %3 = icmp eq %"class.extensions::ExtensionsClient"* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.extensions::ExtensionsClient"* %2 to i1 (%"class.extensions::ExtensionsClient"*, %class.GURL*)***
  %6 = load i1 (%"class.extensions::ExtensionsClient"*, %class.GURL*)**, i1 (%"class.extensions::ExtensionsClient"*, %class.GURL*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.extensions::ExtensionsClient"*, %class.GURL*)*, i1 (%"class.extensions::ExtensionsClient"*, %class.GURL*)** %6, i64 13
  %8 = load i1 (%"class.extensions::ExtensionsClient"*, %class.GURL*)*, i1 (%"class.extensions::ExtensionsClient"*, %class.GURL*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.extensions::ExtensionsClient"* nonnull %2, %class.GURL* dereferenceable(120) %0) #9
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i1 [ %9, %4 ], [ false, %1 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14extension_urls17IsSafeBrowsingUrlERKN3url6OriginEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"* dereferenceable(80), i8*, i64) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i64 17) #9
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i64 27) #9
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i64 23) #9
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %1, i64 %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i64 13, i32 0) #9
  br label %11

11:                                               ; preds = %7, %9, %5, %3
  %12 = phi i1 [ true, %5 ], [ true, %3 ], [ false, %7 ], [ %10, %9 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN14extension_urls20GetWebstoreLaunchURLEv: argument 0"}
!4 = distinct !{!4, !"_ZN14extension_urls20GetWebstoreLaunchURLEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN14extension_urls20GetWebstoreLaunchURLEv: argument 0"}
!10 = distinct !{!10, !"_ZN14extension_urls20GetWebstoreLaunchURLEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN14extension_urls20GetWebstoreLaunchURLEv: argument 0"}
!16 = distinct !{!16, !"_ZN14extension_urls20GetWebstoreLaunchURLEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN14extension_urls20GetWebstoreLaunchURLEv: argument 0"}
!25 = distinct !{!25, !"_ZN14extension_urls20GetWebstoreLaunchURLEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN14extension_urls20GetWebstoreUpdateUrlEv: argument 0"}
!28 = distinct !{!28, !"_ZN14extension_urls20GetWebstoreUpdateUrlEv"}
