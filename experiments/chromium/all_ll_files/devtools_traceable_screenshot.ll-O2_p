; ModuleID = '../../content/browser/devtools/devtools_traceable_screenshot.cc'
source_filename = "../../content/browser/devtools/devtools_traceable_screenshot.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::DevToolsTraceableScreenshot" = type { %"class.base::trace_event::ConvertableToTraceFormat", %class.SkBitmap }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }

@_ZN7content27DevToolsTraceableScreenshot20number_of_instances_E = hidden global i32 0, align 4
@_ZTVN7content27DevToolsTraceableScreenshotE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::DevToolsTraceableScreenshot"*)* @_ZN7content27DevToolsTraceableScreenshotD2Ev to i8*), i8* bitcast (void (%"class.content::DevToolsTraceableScreenshot"*)* @_ZN7content27DevToolsTraceableScreenshotD0Ev to i8*), i8* bitcast (void (%"class.content::DevToolsTraceableScreenshot"*, %"class.std::__1::basic_string"*)* @_ZNK7content27DevToolsTraceableScreenshot19AppendAsTraceFormatEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"\22\00", align 1

@_ZN7content27DevToolsTraceableScreenshotC1ERK8SkBitmap = hidden unnamed_addr alias void (%"class.content::DevToolsTraceableScreenshot"*, %class.SkBitmap*), void (%"class.content::DevToolsTraceableScreenshot"*, %class.SkBitmap*)* @_ZN7content27DevToolsTraceableScreenshotC2ERK8SkBitmap
@_ZN7content27DevToolsTraceableScreenshotD1Ev = hidden unnamed_addr alias void (%"class.content::DevToolsTraceableScreenshot"*), void (%"class.content::DevToolsTraceableScreenshot"*)* @_ZN7content27DevToolsTraceableScreenshotD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN7content27DevToolsTraceableScreenshot20GetNumberOfInstancesEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i32, i32* @_ZN7content27DevToolsTraceableScreenshot20number_of_instances_E monotonic, align 4
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content27DevToolsTraceableScreenshotC2ERK8SkBitmap(%"class.content::DevToolsTraceableScreenshot"*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content27DevToolsTraceableScreenshotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %4, %class.SkBitmap* dereferenceable(56) %1) #6
  %5 = atomicrmw volatile add i32* @_ZN7content27DevToolsTraceableScreenshot20number_of_instances_E, i32 1 monotonic
  ret void
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content27DevToolsTraceableScreenshotD2Ev(%"class.content::DevToolsTraceableScreenshot"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content27DevToolsTraceableScreenshotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = atomicrmw volatile add i32* @_ZN7content27DevToolsTraceableScreenshot20number_of_instances_E, i32 -1 monotonic
  %4 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content27DevToolsTraceableScreenshotD0Ev(%"class.content::DevToolsTraceableScreenshot"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content27DevToolsTraceableScreenshotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = atomicrmw volatile add i32* @_ZN7content27DevToolsTraceableScreenshot20number_of_instances_E, i32 -1 monotonic
  %4 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %4) #6
  %5 = bitcast %"class.content::DevToolsTraceableScreenshot"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content27DevToolsTraceableScreenshot19AppendAsTraceFormatEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.content::DevToolsTraceableScreenshot"*, %"class.std::__1::basic_string"*) unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #6
  %7 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 1, i32 1, i32 2, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %58, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.content::DevToolsTraceableScreenshot", %"class.content::DevToolsTraceableScreenshot"* %0, i64 0, i32 1, i32 1, i32 2, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %58, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 0, i32 0
  %17 = load %class.SkPixelRef*, %class.SkPixelRef** %16, align 8
  %18 = icmp eq %class.SkPixelRef* %17, null
  br i1 %18, label %58, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #6
  %23 = call zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkBitmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56) %7, i32 80, %"class.std::__1::vector"* nonnull %3) #6
  br i1 %23, label %24, label %51

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #6
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #6
  %28 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %29 = bitcast %"class.std::__1::vector"* %3 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8** %22 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %30
  %34 = bitcast %"class.base::BasicStringPiece"* %5 to i64*
  store i64 %30, i64* %34, align 8
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %33, i64* %35, align 8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  %36 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i8*, i8** %26, align 8
  %41 = load i64, i64* %27, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i8* %40, i8* %25
  %44 = select i1 %39, i64 %41, i64 %42
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %43, i64 %44) #6
  %46 = load i8, i8* %37, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %24
  %49 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %49) #7
  br label %50

50:                                               ; preds = %24, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #6
  br label %51

51:                                               ; preds = %50, %19
  %52 = load i8*, i8** %21, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = ptrtoint i8* %52 to i64
  %56 = bitcast i8** %22 to i64*
  store i64 %55, i64* %56, align 8
  call void @_ZdlPv(i8* nonnull %52) #7
  br label %57

57:                                               ; preds = %51, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #6
  br label %58

58:                                               ; preds = %2, %11, %57, %15
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #6
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkBitmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), i32, %"class.std::__1::vector"*) local_unnamed_addr #2

declare void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare zeroext i1 @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #2

declare void @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
