; ModuleID = '../../third_party/ffmpeg/libavcodec/bsf.c'
source_filename = "../../third_party/ffmpeg/libavcodec/bsf.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBSFInternal = type { %struct.AVPacket*, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type opaque
%struct.BSFListContext = type { %struct.AVClass*, %struct.AVBSFContext**, i32, i32, i8* }
%struct.AVBSFList = type { %struct.AVBSFContext**, i32 }
%struct.AVDictionary = type opaque
%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }

@bsf_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0), i8* (i8*)* @bsf_to_name, %struct.AVOption* null, i32 3687524, i32 0, i32 0, i8* (i8*, i8*)* @bsf_child_next, %struct.AVClass* (%struct.AVClass*)* @ff_bsf_child_class_next, i32 8, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null, %struct.AVClass* (i8**)* @ff_bsf_child_class_iterate }, align 8
@.str = private unnamed_addr constant [86 x i8] c"Codec '%s' (%d) is not supported by the bitstream filter '%s'. Supported codecs are: \00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"%s (%d) \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"A non-NULL packet sent after an EOF.\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"bsf_list\00", align 1
@bsf_list_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* (i8*)* @bsf_list_item_name, %struct.AVOption* null, i32 3687524, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null, %struct.AVClass* (i8**)* null }, align 8
@ff_list_bsf = hidden constant %struct.AVBitStreamFilter { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32* null, %struct.AVClass* @bsf_list_class, i32 32, i32 (%struct.AVBSFContext*)* @bsf_list_init, i32 (%struct.AVBSFContext*, %struct.AVPacket*)* @bsf_list_filter, void (%struct.AVBSFContext*)* @bsf_list_close, void (%struct.AVBSFContext*)* @bsf_list_flush }, align 8
@.str.6 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"AVBSFContext\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"bsf_list(\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c",%s\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c":\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bsf_free(%struct.AVBSFContext**) local_unnamed_addr #0 {
  %2 = icmp eq %struct.AVBSFContext** %0, null
  br i1 %2, label %37, label %3

3:                                                ; preds = %1
  %4 = load %struct.AVBSFContext*, %struct.AVBSFContext** %0, align 8
  %5 = icmp eq %struct.AVBSFContext* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %4, i64 0, i32 1
  %8 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %7, align 8
  %9 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %8, i64 0, i32 6
  %10 = load void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)** %9, align 8
  %11 = icmp eq void (%struct.AVBSFContext*)* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  tail call void %10(%struct.AVBSFContext* nonnull %4) #5
  %13 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %7, align 8
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi %struct.AVBitStreamFilter* [ %8, %6 ], [ %13, %12 ]
  %16 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %15, i64 0, i32 2
  %17 = load %struct.AVClass*, %struct.AVClass** %16, align 8
  %18 = icmp eq %struct.AVClass* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %4, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @av_opt_free(i8* nonnull %21) #5
  br label %24

24:                                               ; preds = %19, %14, %23
  %25 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %4, i64 0, i32 2
  %26 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %25, align 8
  %27 = icmp eq %struct.AVBSFInternal* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %26, i64 0, i32 0
  tail call void @av_packet_free(%struct.AVPacket** %29) #5
  br label %30

30:                                               ; preds = %24, %28
  %31 = bitcast %struct.AVBSFInternal** %25 to i8*
  tail call void @av_freep(i8* %31) #5
  %32 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %4, i64 0, i32 3
  %33 = bitcast i8** %32 to i8*
  tail call void @av_freep(i8* %33) #5
  %34 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %4, i64 0, i32 4
  tail call void @avcodec_parameters_free(%struct.AVCodecParameters** %34) #5
  %35 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %4, i64 0, i32 5
  tail call void @avcodec_parameters_free(%struct.AVCodecParameters** %35) #5
  %36 = bitcast %struct.AVBSFContext** %0 to i8*
  tail call void @av_freep(i8* nonnull %36) #5
  br label %37

37:                                               ; preds = %1, %3, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @av_opt_free(i8*) local_unnamed_addr #2

declare void @av_packet_free(%struct.AVPacket**) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

declare void @avcodec_parameters_free(%struct.AVCodecParameters**) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.AVClass* @av_bsf_get_class() local_unnamed_addr #3 {
  ret %struct.AVClass* @bsf_class
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_alloc(%struct.AVBitStreamFilter*, %struct.AVBSFContext** nocapture) local_unnamed_addr #0 {
  %3 = alloca %struct.AVBSFContext*, align 8
  %4 = bitcast %struct.AVBSFContext** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %5 = tail call noalias i8* @av_mallocz(i64 64) #5
  %6 = bitcast %struct.AVBSFContext** %3 to i8**
  store i8* %5, i8** %6, align 8
  %7 = icmp eq i8* %5, null
  %8 = ptrtoint i8* %5 to i64
  br i1 %7, label %51, label %9

9:                                                ; preds = %2
  %10 = bitcast i8* %5 to %struct.AVClass**
  store %struct.AVClass* @bsf_class, %struct.AVClass** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 8
  %12 = bitcast i8* %11 to %struct.AVBitStreamFilter**
  store %struct.AVBitStreamFilter* %0, %struct.AVBitStreamFilter** %12, align 8
  %13 = tail call %struct.AVCodecParameters* @avcodec_parameters_alloc() #5
  %14 = getelementptr inbounds i8, i8* %5, i64 32
  %15 = bitcast i8* %14 to %struct.AVCodecParameters**
  store %struct.AVCodecParameters* %13, %struct.AVCodecParameters** %15, align 8
  %16 = tail call %struct.AVCodecParameters* @avcodec_parameters_alloc() #5
  %17 = getelementptr inbounds i8, i8* %5, i64 40
  %18 = bitcast i8* %17 to %struct.AVCodecParameters**
  store %struct.AVCodecParameters* %16, %struct.AVCodecParameters** %18, align 8
  %19 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %15, align 8
  %20 = icmp eq %struct.AVCodecParameters* %19, null
  %21 = icmp eq %struct.AVCodecParameters* %16, null
  %22 = or i1 %21, %20
  br i1 %22, label %50, label %23

23:                                               ; preds = %9
  %24 = tail call noalias i8* @av_mallocz(i64 16) #5
  %25 = icmp eq i8* %24, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %5, i64 16
  %28 = bitcast i8* %27 to i8**
  store i8* %24, i8** %28, align 8
  %29 = tail call %struct.AVPacket* @av_packet_alloc() #5
  %30 = bitcast i8* %24 to %struct.AVPacket**
  store %struct.AVPacket* %29, %struct.AVPacket** %30, align 8
  %31 = icmp eq %struct.AVPacket* %29, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %32
  %37 = sext i32 %34 to i64
  %38 = tail call noalias i8* @av_mallocz(i64 %37) #5
  %39 = getelementptr inbounds i8, i8* %5, i64 24
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = icmp eq i8* %38, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %0, i64 0, i32 2
  %44 = load %struct.AVClass*, %struct.AVClass** %43, align 8
  %45 = icmp eq %struct.AVClass* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = bitcast i8* %38 to %struct.AVClass**
  store %struct.AVClass* %44, %struct.AVClass** %47, align 8
  tail call void @av_opt_set_defaults(i8* nonnull %38) #5
  br label %48

48:                                               ; preds = %42, %32, %46
  %49 = bitcast %struct.AVBSFContext** %1 to i64*
  store i64 %8, i64* %49, align 8
  br label %51

50:                                               ; preds = %36, %26, %23, %9
  call void @av_bsf_free(%struct.AVBSFContext** nonnull %3)
  br label %51

51:                                               ; preds = %2, %50, %48
  %52 = phi i32 [ 0, %48 ], [ -12, %50 ], [ -12, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  ret i32 %52
}

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

declare %struct.AVCodecParameters* @avcodec_parameters_alloc() local_unnamed_addr #2

declare %struct.AVPacket* @av_packet_alloc() local_unnamed_addr #2

declare void @av_opt_set_defaults(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_init(%struct.AVBSFContext*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 1
  %3 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %2, align 8
  %4 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %3, i64 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 4
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %8, align 8
  br label %69

10:                                               ; preds = %1
  %11 = load i32, i32* %5, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 4
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %13, align 8
  %15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  br i1 %12, label %26, label %21

17:                                               ; preds = %21
  %18 = getelementptr inbounds i32, i32* %5, i64 %25
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %10, %17
  %22 = phi i64 [ %25, %17 ], [ 0, %10 ]
  %23 = phi i32 [ %19, %17 ], [ %11, %10 ]
  %24 = icmp eq i32 %16, %23
  %25 = add nuw i64 %22, 1
  br i1 %24, label %69, label %17

26:                                               ; preds = %17, %10
  %27 = tail call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %16) #5
  %28 = bitcast %struct.AVBSFContext* %0 to i8*
  %29 = icmp eq %struct.AVCodecDescriptor* %27, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %27, i64 0, i32 2
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi i8* [ %32, %30 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %26 ]
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %13, align 8
  %36 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %2, align 8
  %39 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %38, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str, i64 0, i64 0), i8* %34, i32 %37, i8* %40) #5
  %41 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %2, align 8
  %42 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %41, i64 0, i32 1
  %43 = load i32*, i32** %42, align 8
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %68, label %46

46:                                               ; preds = %33, %54
  %47 = phi i64 [ %61, %54 ], [ 0, %33 ]
  %48 = phi i32 [ %66, %54 ], [ %44, %33 ]
  %49 = tail call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %48) #5
  %50 = icmp eq %struct.AVCodecDescriptor* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %49, i64 0, i32 2
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %46, %51
  %55 = phi i8* [ %53, %51 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %46 ]
  %56 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %2, align 8
  %57 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %56, i64 0, i32 1
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %47
  %60 = load i32, i32* %59, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* %55, i32 %60) #5
  %61 = add nuw i64 %47, 1
  %62 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %2, align 8
  %63 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %62, i64 0, i32 1
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 %61
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %46

68:                                               ; preds = %54, %33
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #5
  br label %89

69:                                               ; preds = %21, %7
  %70 = phi %struct.AVCodecParameters* [ %9, %7 ], [ %14, %21 ]
  %71 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 5
  %72 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %71, align 8
  %73 = tail call i32 @avcodec_parameters_copy(%struct.AVCodecParameters* %72, %struct.AVCodecParameters* %70) #5
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %89, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 7
  %77 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 6
  %78 = bitcast %struct.AVRational* %77 to i64*
  %79 = bitcast %struct.AVRational* %76 to i64*
  %80 = load i64, i64* %78, align 8
  store i64 %80, i64* %79, align 8
  %81 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %2, align 8
  %82 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %81, i64 0, i32 4
  %83 = load i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*)** %82, align 8
  %84 = icmp eq i32 (%struct.AVBSFContext*)* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %75
  %86 = tail call i32 %83(%struct.AVBSFContext* %0) #5
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %75, %85
  br label %89

89:                                               ; preds = %85, %69, %88, %68
  %90 = phi i32 [ -22, %68 ], [ 0, %88 ], [ %73, %69 ], [ %86, %85 ]
  ret i32 %90
}

declare %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32) local_unnamed_addr #2

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

declare i32 @avcodec_parameters_copy(%struct.AVCodecParameters*, %struct.AVCodecParameters*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bsf_flush(%struct.AVBSFContext*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 2
  %3 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %2, align 8
  %4 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %3, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %3, i64 0, i32 0
  %6 = load %struct.AVPacket*, %struct.AVPacket** %5, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %6) #5
  %7 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 1
  %8 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %7, align 8
  %9 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %8, i64 0, i32 7
  %10 = load void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)** %9, align 8
  %11 = icmp eq void (%struct.AVBSFContext*)* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %1
  tail call void %10(%struct.AVBSFContext* %0) #5
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

declare void @av_packet_unref(%struct.AVPacket*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_send_packet(%struct.AVBSFContext*, %struct.AVPacket*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 2
  %4 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %3, align 8
  %5 = icmp eq %struct.AVPacket* %1, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %4, i64 0, i32 1
  store i32 1, i32* %15, align 8
  br label %37

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %struct.AVBSFContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %37

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %4, i64 0, i32 0
  %24 = load %struct.AVPacket*, %struct.AVPacket** %23, align 8
  %25 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %24, i64 0, i32 3
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %37

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %24, i64 0, i32 8
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = tail call i32 @av_packet_make_refcounted(%struct.AVPacket* nonnull %1) #5
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = load %struct.AVPacket*, %struct.AVPacket** %23, align 8
  tail call void @av_packet_move_ref(%struct.AVPacket* %36, %struct.AVPacket* nonnull %1) #5
  br label %37

37:                                               ; preds = %32, %22, %28, %35, %20, %14
  %38 = phi i32 [ -22, %20 ], [ 0, %35 ], [ 0, %14 ], [ -11, %28 ], [ -11, %22 ], [ %33, %32 ]
  ret i32 %38
}

declare i32 @av_packet_make_refcounted(%struct.AVPacket*) local_unnamed_addr #2

declare void @av_packet_move_ref(%struct.AVPacket*, %struct.AVPacket*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_receive_packet(%struct.AVBSFContext*, %struct.AVPacket*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 1
  %4 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %3, align 8
  %5 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %4, i64 0, i32 5
  %6 = load i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)** %5, align 8
  %7 = tail call i32 %6(%struct.AVBSFContext* %0, %struct.AVPacket* %1) #5
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_bsf_get_packet(%struct.AVBSFContext* nocapture readonly, %struct.AVPacket** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 2
  %4 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %3, align 8
  %5 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %4, i64 0, i32 0
  %10 = load %struct.AVPacket*, %struct.AVPacket** %9, align 8
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %14, %8
  %19 = tail call %struct.AVPacket* @av_packet_alloc() #5
  %20 = icmp eq %struct.AVPacket* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = bitcast %struct.AVBSFInternal* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %struct.AVPacket** %1 to i64*
  store i64 %23, i64* %24, align 8
  store %struct.AVPacket* %19, %struct.AVPacket** %9, align 8
  br label %25

25:                                               ; preds = %18, %14, %2, %21
  %26 = phi i32 [ 0, %21 ], [ -541478725, %2 ], [ -11, %14 ], [ -12, %18 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_bsf_get_packet_ref(%struct.AVBSFContext* nocapture readonly, %struct.AVPacket*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 2
  %4 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %3, align 8
  %5 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %4, i64 0, i32 0
  %10 = load %struct.AVPacket*, %struct.AVPacket** %9, align 8
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14, %8
  tail call void @av_packet_move_ref(%struct.AVPacket* %1, %struct.AVPacket* %10) #5
  br label %19

19:                                               ; preds = %14, %2, %18
  %20 = phi i32 [ 0, %18 ], [ -541478725, %2 ], [ -11, %14 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @bsf_list_init(%struct.AVBSFContext* nocapture) #0 {
  %2 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %struct.BSFListContext**
  %4 = load %struct.BSFListContext*, %struct.BSFListContext** %3, align 8
  %5 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 4
  %6 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 6, i32 0
  %7 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 6, i32 1
  %8 = load i32, i32* %6, align 8
  %9 = load i32, i32* %7, align 4
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %5, align 8
  %11 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %4, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %54

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %4, i64 0, i32 1
  %16 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %15, align 8
  br label %17

17:                                               ; preds = %14, %40
  %18 = phi %struct.AVBSFContext** [ %16, %14 ], [ %41, %40 ]
  %19 = phi i64 [ 0, %14 ], [ %47, %40 ]
  %20 = phi %struct.AVCodecParameters* [ %10, %14 ], [ %50, %40 ]
  %21 = phi i32 [ %9, %14 ], [ %49, %40 ]
  %22 = phi i32 [ %8, %14 ], [ %48, %40 ]
  %23 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %18, i64 %19
  %24 = load %struct.AVBSFContext*, %struct.AVBSFContext** %23, align 8
  %25 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %24, i64 0, i32 4
  %26 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %25, align 8
  %27 = tail call i32 @avcodec_parameters_copy(%struct.AVCodecParameters* %26, %struct.AVCodecParameters* %20) #5
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %17
  %30 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %15, align 8
  %31 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %30, i64 %19
  %32 = load %struct.AVBSFContext*, %struct.AVBSFContext** %31, align 8
  %33 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %32, i64 0, i32 6, i32 0
  store i32 %22, i32* %33, align 8
  %34 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %32, i64 0, i32 6, i32 1
  store i32 %21, i32* %34, align 4
  %35 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %15, align 8
  %36 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %35, i64 %19
  %37 = load %struct.AVBSFContext*, %struct.AVBSFContext** %36, align 8
  %38 = tail call i32 @av_bsf_init(%struct.AVBSFContext* %37)
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %29
  %41 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %15, align 8
  %42 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %41, i64 %19
  %43 = load %struct.AVBSFContext*, %struct.AVBSFContext** %42, align 8
  %44 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %43, i64 0, i32 5
  %45 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %43, i64 0, i32 7, i32 0
  %46 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %43, i64 0, i32 7, i32 1
  %47 = add nuw nsw i64 %19, 1
  %48 = load i32, i32* %45, align 8
  %49 = load i32, i32* %46, align 4
  %50 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %44, align 8
  %51 = load i32, i32* %11, align 8
  %52 = sext i32 %51 to i64
  %53 = icmp slt i64 %47, %52
  br i1 %53, label %17, label %54

54:                                               ; preds = %40, %1
  %55 = phi i32 [ %8, %1 ], [ %48, %40 ]
  %56 = phi i32 [ %9, %1 ], [ %49, %40 ]
  %57 = phi %struct.AVCodecParameters* [ %10, %1 ], [ %50, %40 ]
  %58 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 7, i32 0
  store i32 %55, i32* %58, align 8
  %59 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 7, i32 1
  store i32 %56, i32* %59, align 4
  %60 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 5
  %61 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %60, align 8
  %62 = tail call i32 @avcodec_parameters_copy(%struct.AVCodecParameters* %61, %struct.AVCodecParameters* %57) #5
  br label %63

63:                                               ; preds = %29, %17, %54
  %64 = phi i32 [ %62, %54 ], [ %38, %29 ], [ %27, %17 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @bsf_list_filter(%struct.AVBSFContext* nocapture readonly, %struct.AVPacket*) #0 {
  %3 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to %struct.BSFListContext**
  %5 = load %struct.BSFListContext*, %struct.BSFListContext** %4, align 8
  %6 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %5, i64 0, i32 3
  %11 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 2
  %13 = icmp eq %struct.AVPacket* %1, null
  %14 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 3
  %15 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 8
  %16 = load i32, i32* %10, align 4
  br label %34

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 2
  %19 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %18, align 8
  %20 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %125

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %19, i64 0, i32 0
  %25 = load %struct.AVPacket*, %struct.AVPacket** %24, align 8
  %26 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %25, i64 0, i32 3
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %25, i64 0, i32 8
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %125, label %33

33:                                               ; preds = %29, %23
  tail call void @av_packet_move_ref(%struct.AVPacket* %1, %struct.AVPacket* %25) #5
  br label %125

34:                                               ; preds = %69, %9
  %35 = phi i32 [ %70, %69 ], [ %16, %9 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %34
  %38 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %12, align 8
  %39 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %73

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %38, i64 0, i32 0
  %44 = load %struct.AVPacket*, %struct.AVPacket** %43, align 8
  %45 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %44, i64 0, i32 3
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %44, i64 0, i32 8
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %125, label %52

52:                                               ; preds = %48, %42
  tail call void @av_packet_move_ref(%struct.AVPacket* %1, %struct.AVPacket* %44) #5
  br label %73

53:                                               ; preds = %34
  %54 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %11, align 8
  %55 = add i32 %35, -1
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %54, i64 %56
  %58 = load %struct.AVBSFContext*, %struct.AVBSFContext** %57, align 8
  %59 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %58, i64 0, i32 1
  %60 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %59, align 8
  %61 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %60, i64 0, i32 5
  %62 = load i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)** %61, align 8
  %63 = tail call i32 %62(%struct.AVBSFContext* %58, %struct.AVPacket* %1) #5
  switch i32 %63, label %71 [
    i32 -11, label %64
    i32 -541478725, label %73
  ]

64:                                               ; preds = %53
  %65 = load i32, i32* %10, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %125, label %67

67:                                               ; preds = %64
  %68 = add i32 %65, -1
  br label %69

69:                                               ; preds = %67, %119
  %70 = phi i32 [ %121, %119 ], [ %68, %67 ]
  store i32 %70, i32* %10, align 4
  br label %34

71:                                               ; preds = %53
  %72 = icmp slt i32 %63, 0
  br i1 %72, label %125, label %73

73:                                               ; preds = %37, %52, %53, %71
  %74 = phi i32 [ %63, %71 ], [ %63, %53 ], [ 0, %52 ], [ -541478725, %37 ]
  %75 = phi i32 [ 0, %71 ], [ 1, %53 ], [ 0, %52 ], [ 1, %37 ]
  %76 = load i32, i32* %10, align 4
  %77 = load i32, i32* %6, align 8
  %78 = icmp ult i32 %76, %77
  br i1 %78, label %79, label %122

79:                                               ; preds = %73
  %80 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %11, align 8
  %81 = zext i32 %76 to i64
  %82 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %80, i64 %81
  %83 = load %struct.AVBSFContext*, %struct.AVBSFContext** %82, align 8
  %84 = icmp ne i32 %75, 0
  %85 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %83, i64 0, i32 2
  %86 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %85, align 8
  %87 = or i1 %13, %84
  br i1 %87, label %94, label %88

88:                                               ; preds = %79
  %89 = load i8*, i8** %14, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %96

91:                                               ; preds = %88
  %92 = load i32, i32* %15, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %91, %79
  %95 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %86, i64 0, i32 1
  store i32 1, i32* %95, align 8
  br label %119

96:                                               ; preds = %91, %88
  %97 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %86, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = bitcast %struct.AVBSFContext* %83 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %101, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %117

102:                                              ; preds = %96
  %103 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %86, i64 0, i32 0
  %104 = load %struct.AVPacket*, %struct.AVPacket** %103, align 8
  %105 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %104, i64 0, i32 3
  %106 = load i8*, i8** %105, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %108, label %117

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %104, i64 0, i32 8
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %117

112:                                              ; preds = %108
  %113 = tail call i32 @av_packet_make_refcounted(%struct.AVPacket* nonnull %1) #5
  %114 = icmp slt i32 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = load %struct.AVPacket*, %struct.AVPacket** %103, align 8
  tail call void @av_packet_move_ref(%struct.AVPacket* %116, %struct.AVPacket* nonnull %1) #5
  br label %119

117:                                              ; preds = %108, %102, %112, %100
  %118 = phi i32 [ -22, %100 ], [ -11, %108 ], [ -11, %102 ], [ %113, %112 ]
  tail call void @av_packet_unref(%struct.AVPacket* nonnull %1) #5
  br label %125

119:                                              ; preds = %115, %94
  %120 = load i32, i32* %10, align 4
  %121 = add i32 %120, 1
  br label %69

122:                                              ; preds = %73
  %123 = icmp eq i32 %75, 0
  %124 = select i1 %123, i32 0, i32 %74
  br label %125

125:                                              ; preds = %48, %71, %64, %33, %29, %17, %122, %117
  %126 = phi i32 [ %118, %117 ], [ %124, %122 ], [ 0, %33 ], [ -541478725, %17 ], [ -11, %29 ], [ -11, %48 ], [ %63, %71 ], [ -11, %64 ]
  ret i32 %126
}

; Function Attrs: nounwind ssp uwtable
define internal void @bsf_list_close(%struct.AVBSFContext* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %struct.BSFListContext**
  %4 = load %struct.BSFListContext*, %struct.BSFListContext** %3, align 8
  %5 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  %8 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %4, i64 0, i32 1
  br i1 %7, label %9, label %17

9:                                                ; preds = %1, %9
  %10 = phi i64 [ %13, %9 ], [ 0, %1 ]
  %11 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %8, align 8
  %12 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %11, i64 %10
  tail call void @av_bsf_free(%struct.AVBSFContext** %12)
  %13 = add nuw nsw i64 %10, 1
  %14 = load i32, i32* %5, align 8
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %9, label %17

17:                                               ; preds = %9, %1
  %18 = bitcast %struct.AVBSFContext*** %8 to i8*
  tail call void @av_freep(i8* %18) #5
  %19 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %4, i64 0, i32 4
  %20 = bitcast i8** %19 to i8*
  tail call void @av_freep(i8* %20) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @bsf_list_flush(%struct.AVBSFContext* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %struct.BSFListContext**
  %4 = load %struct.BSFListContext*, %struct.BSFListContext** %3, align 8
  %5 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %4, i64 0, i32 1
  br label %12

10:                                               ; preds = %28, %1
  %11 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %4, i64 0, i32 3
  store i32 0, i32* %11, align 4
  ret void

12:                                               ; preds = %8, %28
  %13 = phi i64 [ 0, %8 ], [ %29, %28 ]
  %14 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %9, align 8
  %15 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %14, i64 %13
  %16 = load %struct.AVBSFContext*, %struct.AVBSFContext** %15, align 8
  %17 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %16, i64 0, i32 2
  %18 = load %struct.AVBSFInternal*, %struct.AVBSFInternal** %17, align 8
  %19 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %18, i64 0, i32 1
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %struct.AVBSFInternal, %struct.AVBSFInternal* %18, i64 0, i32 0
  %21 = load %struct.AVPacket*, %struct.AVPacket** %20, align 8
  tail call void @av_packet_unref(%struct.AVPacket* %21) #5
  %22 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %16, i64 0, i32 1
  %23 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %22, align 8
  %24 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %23, i64 0, i32 7
  %25 = load void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)** %24, align 8
  %26 = icmp eq void (%struct.AVBSFContext*)* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %12
  tail call void %25(%struct.AVBSFContext* %16) #5
  br label %28

28:                                               ; preds = %12, %27
  %29 = add nuw nsw i64 %13, 1
  %30 = load i32, i32* %5, align 8
  %31 = sext i32 %30 to i64
  %32 = icmp slt i64 %29, %31
  br i1 %32, label %12, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.AVBSFList* @av_bsf_list_alloc() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @av_mallocz(i64 16) #5
  %2 = bitcast i8* %1 to %struct.AVBSFList*
  ret %struct.AVBSFList* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_bsf_list_free(%struct.AVBSFList**) local_unnamed_addr #0 {
  %2 = load %struct.AVBSFList*, %struct.AVBSFList** %0, align 8
  %3 = icmp eq %struct.AVBSFList* %2, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  %8 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %2, i64 0, i32 0
  %9 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %8, align 8
  br i1 %7, label %10, label %22

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %14, %10 ], [ 0, %4 ]
  %12 = phi %struct.AVBSFContext** [ %21, %10 ], [ %9, %4 ]
  %13 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %12, i64 %11
  tail call void @av_bsf_free(%struct.AVBSFContext** %13)
  %14 = add nuw nsw i64 %11, 1
  %15 = load %struct.AVBSFList*, %struct.AVBSFList** %0, align 8
  %16 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = icmp slt i64 %14, %18
  %20 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %15, i64 0, i32 0
  %21 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %20, align 8
  br i1 %19, label %10, label %22

22:                                               ; preds = %10, %4
  %23 = phi %struct.AVBSFContext** [ %9, %4 ], [ %21, %10 ]
  %24 = bitcast %struct.AVBSFContext** %23 to i8*
  tail call void @av_free(i8* %24) #5
  %25 = bitcast %struct.AVBSFList** %0 to i8*
  tail call void @av_freep(i8* %25) #5
  br label %26

26:                                               ; preds = %1, %22
  ret void
}

declare void @av_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_list_append(%struct.AVBSFList*, %struct.AVBSFContext*) local_unnamed_addr #0 {
  %3 = bitcast %struct.AVBSFList* %0 to i8*
  %4 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %0, i64 0, i32 1
  %5 = bitcast %struct.AVBSFContext* %1 to i8*
  %6 = tail call i32 @av_dynarray_add_nofree(i8* %3, i32* %4, i8* %5) #5
  ret i32 %6
}

declare i32 @av_dynarray_add_nofree(i8*, i32*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_list_append2(%struct.AVBSFList*, i8*, %struct.AVDictionary**) local_unnamed_addr #0 {
  %4 = tail call fastcc i32 @bsf_list_append_internal(%struct.AVBSFList* %0, i8* %1, i8* null, %struct.AVDictionary** %2)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @bsf_list_append_internal(%struct.AVBSFList*, i8*, i8*, %struct.AVDictionary**) unnamed_addr #0 {
  %5 = alloca %struct.AVBSFContext*, align 8
  %6 = alloca [2 x i8*], align 16
  %7 = bitcast %struct.AVBSFContext** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  store %struct.AVBSFContext* inttoptr (i64 -6148914691236517206 to %struct.AVBSFContext*), %struct.AVBSFContext** %5, align 8
  %8 = tail call %struct.AVBitStreamFilter* @av_bsf_get_by_name(i8* %1) #5
  %9 = icmp eq %struct.AVBitStreamFilter* %8, null
  br i1 %9, label %50, label %10

10:                                               ; preds = %4
  %11 = call i32 @av_bsf_alloc(%struct.AVBitStreamFilter* nonnull %8, %struct.AVBSFContext** nonnull %5)
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %50, label %13

13:                                               ; preds = %10
  %14 = icmp eq i8* %2, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %8, i64 0, i32 2
  %17 = load %struct.AVClass*, %struct.AVClass** %16, align 8
  %18 = icmp eq %struct.AVClass* %17, null
  br i1 %18, label %35, label %19

19:                                               ; preds = %15
  %20 = load %struct.AVBSFContext*, %struct.AVBSFContext** %5, align 8
  %21 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %20, i64 0, i32 3
  %22 = load i8*, i8** %21, align 8
  %23 = tail call %struct.AVOption* @av_opt_next(i8* %22, %struct.AVOption* null) #5
  %24 = bitcast [2 x i8*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 0, i64 16, i1 false)
  %25 = icmp eq %struct.AVOption* %23, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %19
  %27 = bitcast %struct.AVOption* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast [2 x i8*]* %6 to i64*
  store i64 %28, i64* %29, align 16
  br label %30

30:                                               ; preds = %19, %26
  %31 = load i8*, i8** %21, align 8
  %32 = getelementptr inbounds [2 x i8*], [2 x i8*]* %6, i64 0, i64 0
  %33 = call i32 @av_opt_set_from_string(i8* %31, i8* nonnull %2, i8** nonnull %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #5
  %34 = icmp slt i32 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #5
  br i1 %34, label %48, label %35

35:                                               ; preds = %30, %15, %13
  %36 = icmp eq %struct.AVDictionary** %3, null
  %37 = bitcast %struct.AVBSFContext** %5 to i8**
  br i1 %36, label %42, label %38

38:                                               ; preds = %35
  %39 = load i8*, i8** %37, align 8
  %40 = call i32 @av_opt_set_dict2(i8* %39, %struct.AVDictionary** nonnull %3, i32 1) #5
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %35, %38
  %43 = load i8*, i8** %37, align 8
  %44 = bitcast %struct.AVBSFList* %0 to i8*
  %45 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %0, i64 0, i32 1
  %46 = call i32 @av_dynarray_add_nofree(i8* %44, i32* %45, i8* %43) #5
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %38, %30, %42
  %49 = phi i32 [ %46, %42 ], [ %40, %38 ], [ %33, %30 ]
  call void @av_bsf_free(%struct.AVBSFContext** nonnull %5)
  br label %50

50:                                               ; preds = %42, %48, %10, %4
  %51 = phi i32 [ -1179861752, %4 ], [ %11, %10 ], [ %49, %48 ], [ %46, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_list_finalize(%struct.AVBSFList**, %struct.AVBSFContext** nocapture) local_unnamed_addr #0 {
  %3 = load %struct.AVBSFList*, %struct.AVBSFList** %0, align 8
  %4 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = bitcast %struct.AVBSFList* %3 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %struct.AVBSFContext** %1 to i64*
  store i64 %10, i64* %11, align 8
  %12 = bitcast %struct.AVBSFList** %0 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @av_freep(i8* %13) #5
  %14 = load %struct.AVBSFList*, %struct.AVBSFList** %0, align 8
  %15 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %14, i64 0, i32 1
  store i32 0, i32* %15, align 8
  br label %33

16:                                               ; preds = %2
  %17 = tail call i32 @av_bsf_alloc(%struct.AVBitStreamFilter* nonnull @ff_list_bsf, %struct.AVBSFContext** %1)
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %36, label %19

19:                                               ; preds = %16
  %20 = load %struct.AVBSFContext*, %struct.AVBSFContext** %1, align 8
  %21 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %20, i64 0, i32 3
  %22 = bitcast i8** %21 to %struct.BSFListContext**
  %23 = load %struct.BSFListContext*, %struct.BSFListContext** %22, align 8
  %24 = bitcast %struct.AVBSFList** %0 to i64**
  %25 = load i64*, i64** %24, align 8
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %23, i64 0, i32 1
  %28 = bitcast %struct.AVBSFContext*** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = load %struct.AVBSFList*, %struct.AVBSFList** %0, align 8
  %30 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %23, i64 0, i32 2
  store i32 %31, i32* %32, align 8
  br label %33

33:                                               ; preds = %19, %7
  %34 = phi i32 [ 0, %7 ], [ %17, %19 ]
  %35 = bitcast %struct.AVBSFList** %0 to i8*
  tail call void @av_freep(i8* %35) #5
  br label %36

36:                                               ; preds = %16, %33
  %37 = phi i32 [ %34, %33 ], [ %17, %16 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_list_parse_str(i8*, %struct.AVBSFContext** nocapture) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.AVBSFList*, align 8
  %5 = alloca i8*, align 8
  %6 = bitcast %struct.AVBSFList** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  store %struct.AVBSFList* inttoptr (i64 -6148914691236517206 to %struct.AVBSFList*), %struct.AVBSFList** %4, align 8
  %7 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %8 = icmp eq i8* %0, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call i32 @av_bsf_alloc(%struct.AVBitStreamFilter* nonnull @ff_list_bsf, %struct.AVBSFContext** %1) #5
  br label %95

11:                                               ; preds = %2
  %12 = tail call noalias i8* @av_mallocz(i64 16) #5
  %13 = bitcast %struct.AVBSFList** %4 to i8**
  store i8* %12, i8** %13, align 8
  %14 = icmp eq i8* %12, null
  br i1 %14, label %95, label %15

15:                                               ; preds = %11
  %16 = tail call noalias i8* @av_strdup(i8* nonnull %0) #5
  %17 = icmp eq i8* %16, null
  %18 = bitcast i8* %12 to %struct.AVBSFList*
  br i1 %17, label %66, label %19

19:                                               ; preds = %15
  %20 = bitcast i8** %3 to i8*
  br label %21

21:                                               ; preds = %19, %30
  %22 = phi i8* [ null, %30 ], [ %16, %19 ]
  %23 = call i8* @av_strtok(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8** nonnull %5) #5
  %24 = icmp eq i8* %23, null
  %25 = load %struct.AVBSFList*, %struct.AVBSFList** %4, align 8
  br i1 %24, label %34, label %26

26:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %27 = call i8* @av_strtok(i8* nonnull %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8** nonnull %3) #5
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %63

30:                                               ; preds = %26
  %31 = load i8*, i8** %3, align 8
  %32 = call fastcc i32 @bsf_list_append_internal(%struct.AVBSFList* %25, i8* nonnull %27, i8* %31, %struct.AVDictionary** null) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %63, label %21

34:                                               ; preds = %21
  %35 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %25, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %34
  %39 = bitcast %struct.AVBSFList* %25 to i8*
  %40 = bitcast %struct.AVBSFList* %25 to i64**
  %41 = load i64*, i64** %40, align 8
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %struct.AVBSFContext** %1 to i64*
  store i64 %42, i64* %43, align 8
  call void @av_freep(i8* %39) #5
  %44 = load %struct.AVBSFList*, %struct.AVBSFList** %4, align 8
  %45 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %44, i64 0, i32 1
  store i32 0, i32* %45, align 8
  br label %91

46:                                               ; preds = %34
  %47 = call i32 @av_bsf_alloc(%struct.AVBitStreamFilter* nonnull @ff_list_bsf, %struct.AVBSFContext** %1) #5
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %46
  %50 = load %struct.AVBSFContext*, %struct.AVBSFContext** %1, align 8
  %51 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %50, i64 0, i32 3
  %52 = bitcast i8** %51 to %struct.BSFListContext**
  %53 = load %struct.BSFListContext*, %struct.BSFListContext** %52, align 8
  %54 = bitcast %struct.AVBSFList** %4 to i64**
  %55 = load i64*, i64** %54, align 8
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %53, i64 0, i32 1
  %58 = bitcast %struct.AVBSFContext*** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds i64, i64* %55, i64 1
  %60 = bitcast i64* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %53, i64 0, i32 2
  store i32 %61, i32* %62, align 8
  br label %91

63:                                               ; preds = %30, %46, %29
  %64 = phi i32 [ -22, %29 ], [ %47, %46 ], [ %32, %30 ]
  %65 = load %struct.AVBSFList*, %struct.AVBSFList** %4, align 8
  br label %66

66:                                               ; preds = %63, %15
  %67 = phi %struct.AVBSFList* [ %65, %63 ], [ %18, %15 ]
  %68 = phi i32 [ %64, %63 ], [ -12, %15 ]
  %69 = icmp eq %struct.AVBSFList* %67, null
  br i1 %69, label %93, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %67, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp sgt i32 %72, 0
  %74 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %67, i64 0, i32 0
  %75 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %74, align 8
  br i1 %73, label %76, label %88

76:                                               ; preds = %70, %76
  %77 = phi i64 [ %80, %76 ], [ 0, %70 ]
  %78 = phi %struct.AVBSFContext** [ %87, %76 ], [ %75, %70 ]
  %79 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %78, i64 %77
  call void @av_bsf_free(%struct.AVBSFContext** %79) #5
  %80 = add nuw nsw i64 %77, 1
  %81 = load %struct.AVBSFList*, %struct.AVBSFList** %4, align 8
  %82 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %81, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = icmp slt i64 %80, %84
  %86 = getelementptr inbounds %struct.AVBSFList, %struct.AVBSFList* %81, i64 0, i32 0
  %87 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %86, align 8
  br i1 %85, label %76, label %88

88:                                               ; preds = %76, %70
  %89 = phi %struct.AVBSFContext** [ %75, %70 ], [ %87, %76 ]
  %90 = bitcast %struct.AVBSFContext** %89 to i8*
  call void @av_free(i8* %90) #5
  br label %91

91:                                               ; preds = %49, %38, %88
  %92 = phi i32 [ %68, %88 ], [ 0, %38 ], [ %47, %49 ]
  call void @av_freep(i8* nonnull %6) #5
  br label %93

93:                                               ; preds = %91, %66
  %94 = phi i32 [ %68, %66 ], [ %92, %91 ]
  call void @av_free(i8* %16) #5
  br label %95

95:                                               ; preds = %11, %93, %9
  %96 = phi i32 [ %94, %93 ], [ %10, %9 ], [ -12, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_bsf_get_null_filter(%struct.AVBSFContext** nocapture) local_unnamed_addr #0 {
  %2 = tail call i32 @av_bsf_alloc(%struct.AVBitStreamFilter* nonnull @ff_list_bsf, %struct.AVBSFContext** %0)
  ret i32 %2
}

declare noalias i8* @av_strdup(i8*) local_unnamed_addr #2

declare i8* @av_strtok(i8*, i8*, i8**) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @bsf_to_name(i8* nocapture readonly) #4 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %struct.AVBitStreamFilter**
  %4 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %3, align 8
  %5 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %4, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @bsf_child_next(i8* nocapture readonly, i8* readnone) #4 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = bitcast i8* %5 to %struct.AVBitStreamFilter**
  %7 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %6, align 8
  %8 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %7, i64 0, i32 2
  %9 = load %struct.AVClass*, %struct.AVClass** %8, align 8
  %10 = icmp eq %struct.AVClass* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds i8, i8* %0, i64 24
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  br label %15

15:                                               ; preds = %2, %4, %11
  %16 = phi i8* [ %14, %11 ], [ null, %4 ], [ null, %2 ]
  ret i8* %16
}

declare %struct.AVClass* @ff_bsf_child_class_next(%struct.AVClass*) #2

declare %struct.AVClass* @ff_bsf_child_class_iterate(i8**) #2

; Function Attrs: nounwind ssp uwtable
define internal i8* @bsf_list_item_name(i8* nocapture readonly) #0 {
  %2 = alloca %struct.AVBPrint, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 24
  %4 = bitcast i8* %3 to %struct.BSFListContext**
  %5 = load %struct.BSFListContext*, %struct.BSFListContext** %4, align 8
  %6 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %5, i64 0, i32 4
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %37

13:                                               ; preds = %9
  %14 = bitcast %struct.AVBPrint* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 1024, i1 false)
  call void @av_bprint_init(%struct.AVBPrint* nonnull %2, i32 16, i32 128) #5
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #5
  %15 = load i32, i32* %6, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %34

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.BSFListContext, %struct.BSFListContext* %5, i64 0, i32 1
  br label %19

19:                                               ; preds = %17, %19
  %20 = phi i64 [ 0, %17 ], [ %30, %19 ]
  %21 = icmp eq i64 %20, 0
  %22 = select i1 %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)
  %23 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %18, align 8
  %24 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %23, i64 %20
  %25 = load %struct.AVBSFContext*, %struct.AVBSFContext** %24, align 8
  %26 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %25, i64 0, i32 1
  %27 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %26, align 8
  %28 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %27, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* nonnull %2, i8* %22, i8* %29) #5
  %30 = add nuw nsw i64 %20, 1
  %31 = load i32, i32* %6, align 8
  %32 = sext i32 %31 to i64
  %33 = icmp slt i64 %30, %32
  br i1 %33, label %19, label %34

34:                                               ; preds = %19, %13
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #5
  %35 = call i32 @av_bprint_finalize(%struct.AVBPrint* nonnull %2, i8** %10) #5
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %14) #5
  %36 = load i8*, i8** %10, align 8
  br label %37

37:                                               ; preds = %34, %9, %1
  %38 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), %1 ], [ %11, %9 ], [ %36, %34 ]
  ret i8* %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @av_bprint_init(%struct.AVBPrint*, i32, i32) local_unnamed_addr #2

declare void @av_bprintf(%struct.AVBPrint*, i8*, ...) local_unnamed_addr #2

declare i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) local_unnamed_addr #2

declare %struct.AVBitStreamFilter* @av_bsf_get_by_name(i8*) local_unnamed_addr #2

declare %struct.AVOption* @av_opt_next(i8*, %struct.AVOption*) local_unnamed_addr #2

declare i32 @av_opt_set_from_string(i8*, i8*, i8**, i8*, i8*) local_unnamed_addr #2

declare i32 @av_opt_set_dict2(i8*, %struct.AVDictionary**, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
