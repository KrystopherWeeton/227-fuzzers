; ModuleID = '../../third_party/blink/renderer/platform/blob/blob_bytes_provider.cc'
source_filename = "../../third_party/blink/renderer/platform/blob/blob_bytes_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.blink::BlobBytesProvider" = type { %"class.blink::mojom::blink::BytesProvider", %class.scoped_refptr, %"class.WTF::Vector", %"class.WTF::Vector.8" }
%"class.blink::mojom::blink::BytesProvider" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.1*, i32, i32 }
%class.scoped_refptr.1 = type { %"class.blink::RawData"* }
%"class.blink::RawData" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::Vector.3" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.2" }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.3" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5" }
%"class.WTF::VectorBufferBase.5" = type { i8*, i32, i32 }
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10" }
%"class.WTF::VectorBufferBase.10" = type { i64*, i32, i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.17", [4 x i8] }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.16", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Platform" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::OnceCallback.23" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { i8*, i32, i32 }
%"class.mojo::ScopedHandleBase.29" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.base::RepeatingCallback.32" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr, i8, %"class.mojo::ScopedHandleBase.30", %class.scoped_refptr.31, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.32", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.30" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.31 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.33 }
%class.scoped_refptr.33 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.34", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.base::OnceCallback.43" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.base::File::Info" = type { i64, i8, i8, %"class.base::Time", %"class.base::Time", %"class.base::Time" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.46 }
%class.scoped_refptr.46 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.mojo::internal::SelfOwnedReceiver" = type { %"class.std::__1::unique_ptr.47", %"class.base::OnceCallback", %"class.base::OnceCallback.53", %"class.mojo::Receiver", %"class.base::WeakPtrFactory.209" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::mojom::blink::BytesProvider"* }
%"class.base::OnceCallback.53" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::BytesProviderStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.54, %"class.std::__1::unique_ptr.159", %"class.base::WeakPtrFactory.208" }
%class.scoped_refptr.54 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.126", %"class.absl::optional.131", %"class.absl::optional.89", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.150", i8, [7 x i8], %class.scoped_refptr, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.55" }>
%"class.base::RefCountedThreadSafe.55" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.68" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.68" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr, %"class.std::__1::unique_ptr.69", %"class.absl::optional.75", %"struct.std::__1::atomic.85", i8, i8, i8, i8, i32, i32, %"class.absl::optional.89", %"class.std::__1::unique_ptr.94", i8, i64, %class.scoped_refptr.123, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.124", %"class.base::WeakPtrFactory.125" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.mojo::SimpleWatcher"* }
%"class.absl::optional.75" = type { %"class.absl::optional_internal::optional_data.76" }
%"class.absl::optional_internal::optional_data.76" = type { %"class.absl::optional_internal::optional_data_base.77" }
%"class.absl::optional_internal::optional_data_base.77" = type { %"class.absl::optional_internal::optional_data_dtor_base.78" }
%"class.absl::optional_internal::optional_data_dtor_base.78" = type { i8, %union.anon.79 }
%union.anon.79 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.80", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.80" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { i8 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.97", i8, i64, %class.scoped_refptr.98, %class.scoped_refptr.119 }
%"class.base::RepeatingCallback.97" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.98 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.108", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.99 }
%class.scoped_refptr.99 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i64 }
%"class.std::__1::map.108" = type { %"class.std::__1::__tree.109" }
%"class.std::__1::__tree.109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%class.scoped_refptr.119 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.123 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.124" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.125" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, [7 x i8], %union.anon.135 }
%union.anon.135 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.136 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.136 = type { %"class.std::__1::map.138" }
%"class.std::__1::map.138" = type { %"class.std::__1::__tree.139" }
%"class.std::__1::__tree.139" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.149"*, i64 }
%"class.std::__1::unique_ptr.149" = type opaque
%"class.std::__1::map.150" = type { %"class.std::__1::__tree.151" }
%"class.std::__1::__tree.151" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.162", %"class.absl::optional.163", %"class.absl::optional.168", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.176", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.184", %"class.std::__1::map.195", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.53", i8, %class.scoped_refptr, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.204" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.162" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.163" = type { %"class.absl::optional_internal::optional_data.164" }
%"class.absl::optional_internal::optional_data.164" = type { %"class.absl::optional_internal::optional_data_base.165" }
%"class.absl::optional_internal::optional_data_base.165" = type { %"class.absl::optional_internal::optional_data_dtor_base.166" }
%"class.absl::optional_internal::optional_data_dtor_base.166" = type { i8, %union.anon.167 }
%union.anon.167 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.168" = type { %"class.absl::optional_internal::optional_data.169" }
%"class.absl::optional_internal::optional_data.169" = type { %"class.absl::optional_internal::optional_data_base.170" }
%"class.absl::optional_internal::optional_data_base.170" = type { %"class.absl::optional_internal::optional_data_dtor_base.171" }
%"class.absl::optional_internal::optional_data_dtor_base.171" = type { i8, %union.anon.172 }
%union.anon.172 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.174" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.173" }
%"class.base::time_internal::TimeBase.173" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.174" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.175 }
%class.scoped_refptr.175 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.179", %class.scoped_refptr.180 }
%"class.base::RepeatingCallback.179" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.180 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.55", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.184" = type { %"class.std::__1::__tree.185" }
%"class.std::__1::__tree.185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::map.195" = type { %"class.std::__1::__tree.196" }
%"class.std::__1::__tree.196" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.204" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.208" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::BytesProviderStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::BytesProvider"* }
%"class.base::WeakPtrFactory.209" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.210", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.217", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.210" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.211"*, %"class.mojo::ScopedHandleBase.211"*, %"class.std::__1::__compressed_pair.212" }
%"class.mojo::ScopedHandleBase.211" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.mojo::ScopedHandleBase.211"* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::MessageReceiverWithStatus" = type { %"class.mojo::MessageReceiver" }
%"class.blink::(anonymous namespace)::BlobBytesStreamer" = type { i64, i64, %"class.WTF::Vector", %"class.mojo::ScopedHandleBase.29", %"class.mojo::SimpleWatcher" }
%struct.MojoWriteDataOptions = type { i32, i32 }

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEC2ENSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEENS_15PendingReceiverIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8ReceiverIN5blink5mojom5blink13BytesProviderENS_19RawPtrImplRefTraitsIS4_EEEC2EPS4_NS_15PendingReceiverIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEE12OnDisconnectEjRKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE = comdat any

$_ZN4mojo15MessageReceiverD2Ev = comdat any

$_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEED0Ev = comdat any

$_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEE6AcceptEPNS3_7MessageE = comdat any

$_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE = comdat any

$_ZN4mojo8internal12BindingStateIN5blink5mojom5blink13BytesProviderENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEEEJNS0_17UnretainedWrapperISA_EEEEEFvjSJ_EE7RunOnceEPNS0_13BindStateBaseEjSJ_ = comdat any

$_ZN4base8internal9BindStateIMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS9_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEE5CloseEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseImEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink7RawDataEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZTVN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEEE = comdat any

@_ZN5blink17BlobBytesProvider31kMaxConsolidatedItemSizeInBytesE = hidden local_unnamed_addr constant i64 15360, align 8
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [14 x i8] c"CreateAndBind\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/blob/blob_bytes_provider.cc\00", align 1
@_ZTVN5blink17BlobBytesProviderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BlobBytesProvider"*)* @_ZN5blink17BlobBytesProviderD2Ev to i8*), i8* bitcast (void (%"class.blink::BlobBytesProvider"*)* @_ZN5blink17BlobBytesProviderD0Ev to i8*), i8* bitcast (void (%"class.blink::BlobBytesProvider"*, %"class.base::OnceCallback.23"*)* @_ZN5blink17BlobBytesProvider14RequestAsReplyEN4base12OnceCallbackIFvRKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void (%"class.blink::BlobBytesProvider"*, %"class.mojo::ScopedHandleBase.29"*)* @_ZN5blink17BlobBytesProvider15RequestAsStreamEN4mojo16ScopedHandleBaseINS1_22DataPipeProducerHandleEEE to i8*), i8* bitcast (void (%"class.blink::BlobBytesProvider"*, i64, i64, %"class.base::File"*, i64, %"class.base::OnceCallback.43"*)* @_ZN5blink17BlobBytesProvider13RequestAsFileEmmN4base4FileEmNS1_12OnceCallbackIFvN4absl8optionalINS1_4TimeEEEEEE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [36 x i8] c"Storage.Blob.RendererFileSeekFailed\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"Storage.Blob.RendererFileWriteFailed\00", align 1
@_ZTVN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BytesProviderStub"*)* @_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEED0Ev to i8*), i8* bitcast (i1 (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::BytesProviderStub"*, %"class.mojo::Message"*)* @_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEE6AcceptEPNS3_7MessageE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::BytesProviderStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*)* @_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE to i8*)] }, comdat, align 8
@_ZN5blink5mojom5blink13BytesProvider5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink29BytesProviderRequestValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [29 x i8] c"DecreaseChildProcessRefCount\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"BlobBytesStreamer\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"IncreaseChildProcessRefCount\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned long]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink7RawDataEEEEPKcv = private unnamed_addr constant [77 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::RawData>]\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1

@_ZN5blink17BlobBytesProviderD1Ev = hidden unnamed_addr alias void (%"class.blink::BlobBytesProvider"*), void (%"class.blink::BlobBytesProvider"*)* @_ZN5blink17BlobBytesProviderD2Ev
@_ZN5blink17BlobBytesProviderC1E13scoped_refptrIN4base19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"class.blink::BlobBytesProvider"*, %"class.base::SequencedTaskRunner"*), void (%"class.blink::BlobBytesProvider"*, %"class.base::SequencedTaskRunner"*)* @_ZN5blink17BlobBytesProviderC2E13scoped_refptrIN4base19SequencedTaskRunnerEE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::BlobBytesProvider"* @_ZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS_5mojom5blink13BytesProviderEEE(%"class.mojo::PendingReceiver"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #11
  %11 = tail call i8* @_Znwm(i64 48) #12
  %12 = bitcast i8* %11 to %"class.blink::BlobBytesProvider"*
  %13 = icmp eq %"class.base::SequencedTaskRunner"* %10, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %14, %1
  %18 = ptrtoint %"class.base::SequencedTaskRunner"* %10 to i64
  %19 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink17BlobBytesProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %11, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  tail call void @_ZN5blink12_GLOBAL__N_128IncreaseChildProcessRefCountEv() #11
  %23 = ptrtoint i8* %11 to i64
  %24 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 131) #11
  %25 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = bitcast %"class.mojo::PendingReceiver"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  %27 = bitcast %"class.mojo::PendingReceiver"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11, !noalias !2
  %28 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %0, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %28, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %29) #11, !noalias !2
  %30 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %30, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %28) #11, !noalias !2
  %31 = call i8* @_Znwm(i64 72) #12, !noalias !5
  %32 = bitcast i8* %31 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %32, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS3_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS4_NSC_14default_deleteIS4_EEEESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS2_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS3_NSB_14default_deleteIS3_EEEES9_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !5
  %33 = getelementptr inbounds i8, i8* %31, i64 40
  %34 = bitcast i8* %33 to i64*
  store i64 %23, i64* %34, align 8, !noalias !5
  %35 = getelementptr inbounds i8, i8* %31, i64 48
  %36 = bitcast i8* %35 to %"struct.mojo::internal::PendingReceiverState"*
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* %36, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %30) #11, !noalias !5
  %37 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11, !noalias !2
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %39 = ptrtoint i8* %31 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8, !noalias !10
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8, !noalias !10
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11, !noalias !2
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #11, !noalias !2
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %30) #11, !noalias !2
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %28) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  %43 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = bitcast %"class.WTF::CrossThreadOnceFunction"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = bitcast %"class.base::SequencedTaskRunner"* %10 to %"class.base::TaskRunner"*
  %46 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %39, i64* %48, align 8, !alias.scope !13
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8, !noalias !13
  %49 = bitcast %"class.base::SequencedTaskRunner"* %10 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %50 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %49, align 8
  %51 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %50, align 8
  %52 = call zeroext i1 %51(%"class.base::TaskRunner"* %45, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback"* nonnull %6, i64 0) #11
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #11
  %54 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  %55 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  br i1 %13, label %64, label %56

56:                                               ; preds = %17
  %57 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %10, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe"* %62 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %63) #11
  br label %64

64:                                               ; preds = %17, %56, %61
  ret %"class.blink::BlobBytesProvider"* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::BlobBytesProvider"* @_ZN5blink17BlobBytesProvider16CreateForTestingE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.base::SequencedTaskRunner"* %0 to i64
  %3 = tail call i8* @_Znwm(i64 48) #12
  %4 = bitcast i8* %3 to %"class.blink::BlobBytesProvider"*
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink17BlobBytesProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #11
  tail call void @_ZN5blink12_GLOBAL__N_128IncreaseChildProcessRefCountEv() #11
  ret %"class.blink::BlobBytesProvider"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17BlobBytesProviderD2Ev(%"class.blink::BlobBytesProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink17BlobBytesProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN5blink12_GLOBAL__N_128DecreaseChildProcessRefCountEv()
  %3 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  %6 = bitcast i64* %4 to i8*
  br i1 %5, label %13, label %7, !prof !16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !17

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #11
  store i64* null, i64** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %15, align 8
  %17 = icmp eq %class.scoped_refptr.1* %16, null
  br i1 %17, label %57, label %18, !prof !16

18:                                               ; preds = %13
  %19 = bitcast %class.scoped_refptr.1* %16 to i8*
  %20 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %55, label %23, !prof !17

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %16, i64 %24
  br label %26

26:                                               ; preds = %49, %23
  %27 = phi %class.scoped_refptr.1* [ %50, %49 ], [ %16, %23 ]
  %28 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %27, i64 0, i32 0
  %29 = load %"class.blink::RawData"*, %"class.blink::RawData"** %28, align 8
  %30 = icmp eq %"class.blink::RawData"* %29, null
  br i1 %30, label %49, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %29, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %49

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %32, i64 2
  %38 = bitcast %"class.base::RefCountedThreadSafe.2"* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %47, label %41, !prof !16

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %32, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !17

45:                                               ; preds = %41
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %41
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #11
  br label %47

47:                                               ; preds = %46, %36
  %48 = bitcast %"class.blink::RawData"* %29 to i8*
  tail call void @free(i8* %48) #11
  br label %49

49:                                               ; preds = %47, %31, %26
  %50 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %27, i64 1
  %51 = icmp eq %class.scoped_refptr.1* %50, %25
  br i1 %51, label %52, label %26

52:                                               ; preds = %49
  store i32 0, i32* %20, align 4
  %53 = bitcast %"class.WTF::Vector"* %14 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %18
  %56 = phi i8* [ %54, %52 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #11
  store %class.scoped_refptr.1* null, %class.scoped_refptr.1** %15, align 8
  br label %57

57:                                               ; preds = %13, %55
  %58 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 1, i32 0
  %59 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %58, align 8
  %60 = icmp eq %"class.base::SequencedTaskRunner"* %59, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %59, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw sub i32* %63, i32 1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %62, i64 -2
  %68 = bitcast %"class.base::RefCountedThreadSafe"* %67 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %68) #11
  br label %69

69:                                               ; preds = %57, %61, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128DecreaseChildProcessRefCountEv() #0 {
  %1 = alloca %"class.base::OnceCallback", align 8
  %2 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #11
  br i1 %7, label %49, label %8

8:                                                ; preds = %0
  %9 = tail call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #11
  %10 = bitcast %"class.blink::Thread"* %9 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %11 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %11, i64 3
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %12, align 8
  %14 = tail call %"class.base::SingleThreadTaskRunner"* %13(%"class.blink::Thread"* %9) #11
  %15 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 110) #11
  %16 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = call i8* @_Znwm(i64 48) #12, !noalias !18
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !18
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 ptrtoint (void ()* @_ZN5blink12_GLOBAL__N_128DecreaseChildProcessRefCountEv to i64), i64* %20, align 8, !noalias !18
  %21 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11, !noalias !25
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = ptrtoint i8* %17 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8, !noalias !26
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8, !noalias !26
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #11, !noalias !26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11, !noalias !25
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #11, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %27 = bitcast %"class.base::OnceCallback"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast %"class.WTF::CrossThreadOnceFunction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = bitcast %"class.base::SingleThreadTaskRunner"* %14 to %"class.base::TaskRunner"*
  %30 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::OnceCallback"* %1 to i64*
  store i64 %23, i64* %32, align 8, !alias.scope !29
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8, !noalias !29
  %33 = bitcast %"class.base::SingleThreadTaskRunner"* %14 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %34 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %33, align 8
  %35 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %34, align 8
  %36 = call zeroext i1 %35(%"class.base::TaskRunner"* %29, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %1, i64 0) #11
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #11
  %38 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %39 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  %40 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %8
  %42 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %55

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 -2
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %47 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %48) #11
  br label %55

49:                                               ; preds = %0
  %50 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #11
  %51 = bitcast %"class.blink::Platform"* %50 to void (%"class.blink::Platform"*, i1)***
  %52 = load void (%"class.blink::Platform"*, i1)**, void (%"class.blink::Platform"*, i1)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Platform"*, i1)*, void (%"class.blink::Platform"*, i1)** %52, i64 43
  %54 = load void (%"class.blink::Platform"*, i1)*, void (%"class.blink::Platform"*, i1)** %53, align 8
  tail call void %54(%"class.blink::Platform"* %50, i1 zeroext true) #11
  br label %55

55:                                               ; preds = %46, %41, %8, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17BlobBytesProviderD0Ev(%"class.blink::BlobBytesProvider"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17BlobBytesProviderD2Ev(%"class.blink::BlobBytesProvider"* %0) #11
  %2 = bitcast %"class.blink::BlobBytesProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17BlobBytesProvider10AppendDataE13scoped_refptrINS_7RawDataEE(%"class.blink::BlobBytesProvider"*, %"class.blink::RawData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.1, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %3, i64 0, i32 0
  store %"class.blink::RawData"* %1, %"class.blink::RawData"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %46, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = add i32 %13, -1
  %17 = tail call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.8"* %11, i32 %16) #11
  %18 = load i64, i64* %17, align 8
  %19 = load i32, i32* %7, align 4
  br label %20

20:                                               ; preds = %10, %15
  %21 = phi i32 [ %19, %15 ], [ %8, %10 ]
  %22 = phi i64 [ %18, %15 ], [ 0, %10 ]
  %23 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = add i32 %21, -1
  %25 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 %24) #11
  %26 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %25, i64 0, i32 0
  %27 = load %"class.blink::RawData"*, %"class.blink::RawData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %27, i64 0, i32 1, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = add i64 %22, %30
  store i64 %31, i64* %4, align 8
  %32 = load i32, i32* %12, align 4
  %33 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %43, label %36, !prof !17

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %11, i64 0, i32 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = zext i32 %32 to i64
  %40 = getelementptr inbounds i64, i64* %38, i64 %39
  store i64 %31, i64* %40, align 8
  %41 = load i32, i32* %12, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %12, align 4
  br label %44

43:                                               ; preds = %20
  call void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseImEEvOT_(%"class.WTF::Vector.8"* %11, i64* nonnull dereferenceable(8) %4) #11
  br label %44

44:                                               ; preds = %36, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  %45 = load i32, i32* %7, align 4
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i32 [ %45, %44 ], [ 0, %2 ]
  %48 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %61, label %51, !prof !17

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %53 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %52, align 8
  %54 = zext i32 %47 to i64
  %55 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %53, i64 %54
  %56 = bitcast %class.scoped_refptr.1* %3 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %class.scoped_refptr.1* %55 to i64*
  store i64 %57, i64* %58, align 8
  store %"class.blink::RawData"* null, %"class.blink::RawData"** %5, align 8
  %59 = load i32, i32* %7, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %7, align 4
  br label %82

61:                                               ; preds = %46
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector"* %6, %class.scoped_refptr.1* nonnull dereferenceable(8) %3) #11
  %62 = load %"class.blink::RawData"*, %"class.blink::RawData"** %5, align 8
  %63 = icmp eq %"class.blink::RawData"* %62, null
  br i1 %63, label %82, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %62, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %82

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %65, i64 2
  %71 = bitcast %"class.base::RefCountedThreadSafe.2"* %70 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %80, label %74, !prof !16

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %65, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %78, !prof !17

78:                                               ; preds = %74
  store i32 0, i32* %75, align 4
  br label %79

79:                                               ; preds = %78, %74
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #11
  br label %80

80:                                               ; preds = %79, %69
  %81 = bitcast %"class.blink::RawData"* %62 to i8*
  call void @free(i8* %81) #11
  br label %82

82:                                               ; preds = %51, %61, %64, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17BlobBytesProvider10AppendDataEN4base4spanIKcLm18446744073709551615EEE(%"class.blink::BlobBytesProvider"*, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = add i32 %6, -1
  %10 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %9) #11
  %11 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %10, i64 0, i32 0
  %12 = load %"class.blink::RawData"*, %"class.blink::RawData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %12, i64 0, i32 1, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = add i64 %15, %1
  %17 = icmp ugt i64 %16, 15360
  br i1 %17, label %18, label %21

18:                                               ; preds = %8, %3
  %19 = tail call noalias i8* @malloc(i64 24) #11
  %20 = bitcast i8* %19 to %"class.blink::RawData"*
  tail call void @_ZN5blink7RawDataC1Ev(%"class.blink::RawData"* %20) #11
  tail call void @_ZN5blink17BlobBytesProvider10AppendDataE13scoped_refptrINS_7RawDataEE(%"class.blink::BlobBytesProvider"* %0, %"class.blink::RawData"* %20)
  br label %21

21:                                               ; preds = %18, %8
  %22 = load i32, i32* %5, align 4
  %23 = add i32 %22, -1
  %24 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %23) #11
  %25 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %24, i64 0, i32 0
  %26 = load %"class.blink::RawData"*, %"class.blink::RawData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %26, i64 0, i32 1
  %28 = trunc i64 %1 to i32
  tail call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.3"* %27, i8* %2, i32 %28)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.3"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !16

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #11
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #11
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !16

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #11
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  %50 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !16

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #11
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #11
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !16

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #11
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #11
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* %96, i8* %97) #11
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #11
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  %105 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !16

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #11
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17BlobBytesProvider14RequestAsReplyEN4base12OnceCallbackIFvRKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEEEEE(%"class.blink::BlobBytesProvider"* nocapture readonly, %"class.base::OnceCallback.23"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.23", align 8
  %4 = alloca %"class.WTF::Vector.24", align 8
  %5 = bitcast %"class.WTF::Vector.24"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %8, align 8
  %10 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %15, label %34

15:                                               ; preds = %34, %2
  %16 = bitcast %"class.base::OnceCallback.23"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::OnceCallback.23"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback.23"* %3 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %21 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %3, i64 0, i32 0
  %22 = inttoptr i64 %19 to %"class.base::internal::BindStateBase"*
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %22, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.24"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.24"*)*, void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.24"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* %22, %"class.WTF::Vector.24"* nonnull dereferenceable(16) %4) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %26 = load i8*, i8** %6, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %33, label %28, !prof !16

28:                                               ; preds = %15
  %29 = load i32, i32* %7, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !17

31:                                               ; preds = %28
  store i32 0, i32* %7, align 4
  br label %32

32:                                               ; preds = %31, %28
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #11
  store i8* null, i8** %6, align 8
  br label %33

33:                                               ; preds = %15, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void

34:                                               ; preds = %2, %34
  %35 = phi %class.scoped_refptr.1* [ %42, %34 ], [ %9, %2 ]
  %36 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %35, i64 0, i32 0
  %37 = load %"class.blink::RawData"*, %"class.blink::RawData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %37, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %37, i64 0, i32 1, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.24"* nonnull %4, i8* %39, i32 %41)
  %42 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %35, i64 1
  %43 = icmp eq %class.scoped_refptr.1* %42, %13
  br i1 %43, label %15, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.24"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %46

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %46, !prof !16

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %22
  %31 = bitcast %"class.WTF::Vector.24"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %10, align 8
  br label %46

33:                                               ; preds = %22
  %34 = load i8*, i8** %23, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !16

38:                                               ; preds = %33
  %39 = load i32, i32* %7, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #11
  %41 = load i8*, i8** %23, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #11
  %44 = bitcast %"class.WTF::Vector.24"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %10, align 8
  br label %46

46:                                               ; preds = %42, %30, %13, %3
  %47 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %48, align 8
  %49 = load i32, i32* %7, align 4
  %50 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = icmp ult i32 %9, %49
  br i1 %51, label %53, label %52

52:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  store i8* null, i8** %48, align 8
  br label %62

53:                                               ; preds = %46
  %54 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  %55 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %49) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* %54, i8* %55) #11
  %56 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  store i8* %57, i8** %48, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #11
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  br label %62

62:                                               ; preds = %52, %53, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %63 = zext i32 %2 to i64
  %64 = getelementptr inbounds i8, i8* %1, i64 %63
  %65 = icmp eq i32 %2, 0
  br i1 %65, label %170, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %0, i64 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = load i32, i32* %7, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  %72 = icmp ult i32 %2, 32
  br i1 %72, label %160, label %73

73:                                               ; preds = %66
  %74 = add nuw nsw i64 %70, %63
  %75 = getelementptr i8, i8* %68, i64 %74
  %76 = icmp ult i8* %71, %64
  %77 = icmp ugt i8* %75, %1
  %78 = and i1 %76, %77
  br i1 %78, label %160, label %79

79:                                               ; preds = %73
  %80 = and i64 %63, 4294967264
  %81 = getelementptr i8, i8* %71, i64 %80
  %82 = getelementptr i8, i8* %1, i64 %80
  %83 = add nsw i64 %80, -32
  %84 = lshr exact i64 %83, 5
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 3
  %87 = icmp ult i64 %83, 96
  br i1 %87, label %139, label %88

88:                                               ; preds = %79
  %89 = sub nsw i64 %85, %86
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi i64 [ 0, %88 ], [ %136, %90 ]
  %92 = phi i64 [ %89, %88 ], [ %137, %90 ]
  %93 = getelementptr i8, i8* %71, i64 %91
  %94 = getelementptr i8, i8* %1, i64 %91
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !32
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !32
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1, !alias.scope !35, !noalias !32
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1, !alias.scope !35, !noalias !32
  %103 = or i64 %91, 32
  %104 = getelementptr i8, i8* %71, i64 %103
  %105 = getelementptr i8, i8* %1, i64 %103
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !32
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !32
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1, !alias.scope !35, !noalias !32
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1, !alias.scope !35, !noalias !32
  %114 = or i64 %91, 64
  %115 = getelementptr i8, i8* %71, i64 %114
  %116 = getelementptr i8, i8* %1, i64 %114
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !32
  %119 = getelementptr i8, i8* %116, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !32
  %122 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1, !alias.scope !35, !noalias !32
  %123 = getelementptr i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1, !alias.scope !35, !noalias !32
  %125 = or i64 %91, 96
  %126 = getelementptr i8, i8* %71, i64 %125
  %127 = getelementptr i8, i8* %1, i64 %125
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !32
  %130 = getelementptr i8, i8* %127, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  %132 = load <16 x i8>, <16 x i8>* %131, align 1, !alias.scope !32
  %133 = bitcast i8* %126 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %133, align 1, !alias.scope !35, !noalias !32
  %134 = getelementptr i8, i8* %126, i64 16
  %135 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %132, <16 x i8>* %135, align 1, !alias.scope !35, !noalias !32
  %136 = add i64 %91, 128
  %137 = add i64 %92, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %90, !llvm.loop !37

139:                                              ; preds = %90, %79
  %140 = phi i64 [ 0, %79 ], [ %136, %90 ]
  %141 = icmp eq i64 %86, 0
  br i1 %141, label %158, label %142

142:                                              ; preds = %139, %142
  %143 = phi i64 [ %155, %142 ], [ %140, %139 ]
  %144 = phi i64 [ %156, %142 ], [ %86, %139 ]
  %145 = getelementptr i8, i8* %71, i64 %143
  %146 = getelementptr i8, i8* %1, i64 %143
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !32
  %149 = getelementptr i8, i8* %146, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  %151 = load <16 x i8>, <16 x i8>* %150, align 1, !alias.scope !32
  %152 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %152, align 1, !alias.scope !35, !noalias !32
  %153 = getelementptr i8, i8* %145, i64 16
  %154 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> %151, <16 x i8>* %154, align 1, !alias.scope !35, !noalias !32
  %155 = add i64 %143, 32
  %156 = add i64 %144, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %142, !llvm.loop !39

158:                                              ; preds = %142, %139
  %159 = icmp eq i64 %80, %63
  br i1 %159, label %170, label %160

160:                                              ; preds = %158, %73, %66
  %161 = phi i8* [ %71, %73 ], [ %71, %66 ], [ %81, %158 ]
  %162 = phi i8* [ %1, %73 ], [ %1, %66 ], [ %82, %158 ]
  br label %163

163:                                              ; preds = %160, %163
  %164 = phi i8* [ %167, %163 ], [ %161, %160 ]
  %165 = phi i8* [ %168, %163 ], [ %162, %160 ]
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %164, align 1
  %167 = getelementptr inbounds i8, i8* %164, i64 1
  %168 = getelementptr inbounds i8, i8* %165, i64 1
  %169 = icmp eq i8* %168, %64
  br i1 %169, label %170, label %163, !llvm.loop !41

170:                                              ; preds = %163, %158, %62
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17BlobBytesProvider15RequestAsStreamEN4mojo16ScopedHandleBaseINS1_22DataPipeProducerHandleEEE(%"class.blink::BlobBytesProvider"* nocapture, %"class.mojo::ScopedHandleBase.29"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.mojo::Handle", align 4
  %5 = alloca %"class.base::RepeatingCallback.32", align 8
  %6 = tail call noalias i8* @malloc(i64 112) #11
  %7 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2
  %8 = bitcast %"class.WTF::Vector"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  store atomic i64 0, i64* %8 monotonic, align 8
  %10 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  store i32 0, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  store i32 0, i32* %12, align 4
  %14 = getelementptr inbounds %"class.mojo::ScopedHandleBase.29", %"class.mojo::ScopedHandleBase.29"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4, !noalias !42
  store i32 0, i32* %14, align 4, !noalias !42
  %16 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 1, i32 0
  %17 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SequencedTaskRunner"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %17, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %19, %2
  %23 = bitcast %"class.mojo::Handle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  %24 = bitcast %"class.base::RepeatingCallback.32"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = getelementptr inbounds i8, i8* %6, i64 16
  %26 = getelementptr inbounds i8, i8* %6, i64 24
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %6, i64 28
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  %30 = bitcast i8* %25 to i64*
  store atomic i64 %9, i64* %30 monotonic, align 8
  store i32 %11, i32* %27, align 4
  store i32 %13, i32* %29, align 4
  %31 = getelementptr inbounds i8, i8* %6, i64 32
  %32 = bitcast i8* %31 to i32*
  store i32 %15, i32* %32, align 4, !alias.scope !45
  %33 = getelementptr inbounds i8, i8* %6, i64 40
  %34 = bitcast i8* %33 to %"class.mojo::SimpleWatcher"*
  %35 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 38) #11
  call void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"* %34, %"class.base::Location"* nonnull dereferenceable(32) %3, i32 0, %"class.base::SequencedTaskRunner"* %17, i8* null) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %4, i64 0, i32 0
  %37 = load i32, i32* %32, align 4
  store i32 %37, i32* %36, align 4
  %38 = ptrtoint i8* %6 to i64
  %39 = call i8* @_Znwm(i64 56) #12, !noalias !48
  %40 = bitcast i8* %39 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %40, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJN3WTF17UnretainedWrapperIS5_EEEEEFvjS9_EE3RunEPNS0_13BindStateBaseEjS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJN3WTF17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !48
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::BlobBytesStreamer"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN5blink12_GLOBAL__N_117BlobBytesStreamer10OnWritableEjRKN4mojo18HandleSignalsStateE to i64), i64 0>, <2 x i64>* %42, align 8, !noalias !48
  %43 = getelementptr inbounds i8, i8* %39, i64 48
  %44 = bitcast i8* %43 to i64*
  store i64 %38, i64* %44, align 8, !noalias !48
  %45 = bitcast %"class.base::RepeatingCallback.32"* %5 to i8**
  store i8* %39, i8** %45, align 8, !alias.scope !48
  %46 = call i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"* %34, %"class.mojo::Handle"* nonnull %4, i32 2, i32 1, %"class.base::RepeatingCallback.32"* nonnull %5) #11
  %47 = getelementptr inbounds %"class.base::RepeatingCallback.32", %"class.base::RepeatingCallback.32"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17BlobBytesProvider13RequestAsFileEmmN4base4FileEmNS1_12OnceCallbackIFvN4absl8optionalINS1_4TimeEEEEEE(%"class.blink::BlobBytesProvider"*, i64, i64, %"class.base::File"*, i64, %"class.base::OnceCallback.43"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.absl::optional", align 8
  %8 = alloca %"class.base::OnceCallback.43", align 8
  %9 = alloca %"class.absl::optional", align 8
  %10 = alloca %"class.base::OnceCallback.43", align 8
  %11 = alloca %"class.absl::optional", align 8
  %12 = alloca %"class.base::OnceCallback.43", align 8
  %13 = alloca %"class.absl::optional", align 8
  %14 = alloca %"class.base::OnceCallback.43", align 8
  %15 = alloca %"class.absl::optional", align 8
  %16 = alloca %"class.base::OnceCallback.43", align 8
  %17 = alloca %"class.absl::optional", align 8
  %18 = alloca %"class.base::OnceCallback.43", align 8
  %19 = alloca %"struct.base::File::Info", align 8
  %20 = tail call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* %3) #11
  br i1 %20, label %33, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22)
  store i8 0, i8* %22, align 8
  %23 = bitcast %"class.base::OnceCallback.43"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback.43"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback.43"* %16 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %28 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %16, i64 0, i32 0
  %29 = inttoptr i64 %26 to %"class.base::internal::BindStateBase"*
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %29, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %32 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %31, align 8
  call void %32(%"class.base::internal::BindStateBase"* %29, %"class.absl::optional"* nonnull dereferenceable(16) %15) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  br label %208

33:                                               ; preds = %6
  %34 = icmp sgt i64 %4, -1
  br i1 %34, label %36, label %35, !prof !16

35:                                               ; preds = %33
  tail call void @llvm.trap() #11
  unreachable

36:                                               ; preds = %33
  %37 = tail call i64 @_ZN4base4File4SeekENS0_6WhenceEl(%"class.base::File"* %3, i32 0, i64 %4) #11
  %38 = icmp slt i64 %37, 0
  tail call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i1 zeroext %38) #11
  br i1 %38, label %39, label %51

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40)
  store i8 0, i8* %40, align 8
  %41 = bitcast %"class.base::OnceCallback.43"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %5, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.base::OnceCallback.43"* %5 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.base::OnceCallback.43"* %12 to i64*
  store i64 %44, i64* %45, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  %46 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %12, i64 0, i32 0
  %47 = inttoptr i64 %44 to %"class.base::internal::BindStateBase"*
  %48 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %47, i64 0, i32 1
  %49 = bitcast void ()** %48 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %50 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %49, align 8
  call void %50(%"class.base::internal::BindStateBase"* %47, %"class.absl::optional"* nonnull dereferenceable(16) %11) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40)
  br label %208

51:                                               ; preds = %36
  %52 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 3
  %53 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = ptrtoint i64* %54 to i64
  %58 = icmp eq i32 %56, 0
  br i1 %58, label %76, label %59

59:                                               ; preds = %51
  %60 = zext i32 %56 to i64
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ %60, %59 ], [ %72, %61 ]
  %63 = phi i64* [ %54, %59 ], [ %71, %61 ]
  %64 = lshr i64 %62, 1
  %65 = getelementptr inbounds i64, i64* %63, i64 %64
  %66 = load i64, i64* %65, align 8
  %67 = icmp ugt i64 %66, %1
  %68 = getelementptr inbounds i64, i64* %65, i64 1
  %69 = xor i64 %64, -1
  %70 = add i64 %62, %69
  %71 = select i1 %67, i64* %63, i64* %68
  %72 = select i1 %67, i64 %64, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %61

74:                                               ; preds = %61
  %75 = ptrtoint i64* %71 to i64
  br label %76

76:                                               ; preds = %74, %51
  %77 = phi i64 [ %75, %74 ], [ %57, %51 ]
  %78 = sub i64 %77, %57
  %79 = ashr exact i64 %78, 3
  %80 = icmp eq i64 %78, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %76
  %82 = trunc i64 %79 to i32
  %83 = add i32 %82, -1
  %84 = tail call dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.8"* %52, i32 %83) #11
  %85 = load i64, i64* %84, align 8
  br label %86

86:                                               ; preds = %76, %81
  %87 = phi i64 [ %85, %81 ], [ 0, %76 ]
  %88 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = icmp ult i64 %79, %90
  br i1 %91, label %92, label %160

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2
  %94 = add i64 %2, %1
  br label %95

95:                                               ; preds = %92, %153
  %96 = phi i64 [ %79, %92 ], [ %156, %153 ]
  %97 = phi i64 [ %87, %92 ], [ %155, %153 ]
  %98 = trunc i64 %96 to i32
  %99 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %93, i32 %98) #11
  %100 = icmp ugt i64 %94, %97
  br i1 %100, label %101, label %160

101:                                              ; preds = %95
  %102 = tail call i64 @llvm.usub.sat.i64(i64 %1, i64 %97)
  %103 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %99, i64 0, i32 0
  %104 = load %"class.blink::RawData"*, %"class.blink::RawData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %104, i64 0, i32 1, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = sub i64 %107, %102
  %109 = sub i64 %94, %97
  %110 = sub i64 %109, %102
  %111 = icmp ult i64 %110, %108
  %112 = select i1 %111, i64 %110, i64 %108
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %153, label %117

114:                                              ; preds = %117
  %115 = icmp ugt i64 %112, %136
  %116 = load %"class.blink::RawData"*, %"class.blink::RawData"** %103, align 8
  br i1 %115, label %117, label %149

117:                                              ; preds = %101, %114
  %118 = phi %"class.blink::RawData"* [ %116, %114 ], [ %104, %101 ]
  %119 = phi i64 [ %136, %114 ], [ 0, %101 ]
  %120 = sub i64 %112, %119
  %121 = tail call i1 @llvm.is.constant.i64(i64 %120) #11
  %122 = icmp ult i64 %120, 2147483648
  %123 = trunc i64 %120 to i32
  %124 = select i1 %122, i32 %123, i32 2147483647
  %125 = icmp ult i64 %120, 2147483647
  %126 = select i1 %125, i64 %120, i64 2147483647
  %127 = trunc i64 %126 to i32
  %128 = select i1 %121, i32 %127, i32 %124
  %129 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %118, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 %102
  %132 = getelementptr inbounds i8, i8* %131, i64 %119
  %133 = tail call i32 @_ZN4base4File17WriteAtCurrentPosEPKci(%"class.base::File"* %3, i8* %132, i32 %128) #11
  %134 = icmp slt i32 %133, 0
  tail call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i1 zeroext %134) #11
  %135 = sext i32 %133 to i64
  %136 = add i64 %119, %135
  br i1 %134, label %137, label %114

137:                                              ; preds = %117
  %138 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138)
  store i8 0, i8* %138, align 8
  %139 = bitcast %"class.base::OnceCallback.43"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #11
  %140 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %5, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.base::OnceCallback.43"* %5 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.base::OnceCallback.43"* %8 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %140, align 8
  %144 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %8, i64 0, i32 0
  %145 = inttoptr i64 %142 to %"class.base::internal::BindStateBase"*
  %146 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %145, i64 0, i32 1
  %147 = bitcast void ()** %146 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %148 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %147, align 8
  call void %148(%"class.base::internal::BindStateBase"* %145, %"class.absl::optional"* nonnull dereferenceable(16) %7) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %144) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138)
  br label %208

149:                                              ; preds = %114
  %150 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %116, i64 0, i32 1, i32 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i64
  br label %153

153:                                              ; preds = %149, %101
  %154 = phi i64 [ %152, %149 ], [ %107, %101 ]
  %155 = add i64 %97, %154
  %156 = add nuw nsw i64 %96, 1
  %157 = load i32, i32* %88, align 4
  %158 = zext i32 %157 to i64
  %159 = icmp ult i64 %156, %158
  br i1 %159, label %95, label %160

160:                                              ; preds = %153, %95, %86
  %161 = tail call zeroext i1 @_ZN4base4File5FlushEv(%"class.base::File"* %3) #11
  br i1 %161, label %174, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163)
  store i8 0, i8* %163, align 8
  %164 = bitcast %"class.base::OnceCallback.43"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #11
  %165 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %5, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.base::OnceCallback.43"* %5 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.base::OnceCallback.43"* %10 to i64*
  store i64 %167, i64* %168, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %165, align 8
  %169 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %10, i64 0, i32 0
  %170 = inttoptr i64 %167 to %"class.base::internal::BindStateBase"*
  %171 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %170, i64 0, i32 1
  %172 = bitcast void ()** %171 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %173 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %172, align 8
  call void %173(%"class.base::internal::BindStateBase"* %170, %"class.absl::optional"* nonnull dereferenceable(16) %9) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %169) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163)
  br label %208

174:                                              ; preds = %160
  %175 = bitcast %"struct.base::File::Info"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %175) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 40, i1 false)
  call void @_ZN4base4File4InfoC1Ev(%"struct.base::File::Info"* nonnull %19) #11
  %176 = call zeroext i1 @_ZN4base4File7GetInfoEPNS0_4InfoE(%"class.base::File"* %3, %"struct.base::File::Info"* nonnull %19) #11
  br i1 %176, label %189, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178)
  store i8 0, i8* %178, align 8
  %179 = bitcast %"class.base::OnceCallback.43"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #11
  %180 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %5, i64 0, i32 0, i32 0, i32 0
  %181 = bitcast %"class.base::OnceCallback.43"* %5 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.base::OnceCallback.43"* %14 to i64*
  store i64 %182, i64* %183, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %180, align 8
  %184 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %14, i64 0, i32 0
  %185 = inttoptr i64 %182 to %"class.base::internal::BindStateBase"*
  %186 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %185, i64 0, i32 1
  %187 = bitcast void ()** %186 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %188 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %187, align 8
  call void %188(%"class.base::internal::BindStateBase"* %185, %"class.absl::optional"* nonnull dereferenceable(16) %13) #11
  br label %204

189:                                              ; preds = %174
  %190 = getelementptr inbounds %"struct.base::File::Info", %"struct.base::File::Info"* %19, i64 0, i32 3, i32 0, i32 0
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192)
  store i8 1, i8* %192, align 8
  %193 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %191, i64* %193, align 8
  %194 = bitcast %"class.base::OnceCallback.43"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #11
  %195 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %5, i64 0, i32 0, i32 0, i32 0
  %196 = bitcast %"class.base::OnceCallback.43"* %5 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.base::OnceCallback.43"* %18 to i64*
  store i64 %197, i64* %198, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %195, align 8
  %199 = getelementptr inbounds %"class.base::OnceCallback.43", %"class.base::OnceCallback.43"* %18, i64 0, i32 0
  %200 = inttoptr i64 %197 to %"class.base::internal::BindStateBase"*
  %201 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %200, i64 0, i32 1
  %202 = bitcast void ()** %201 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %203 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %202, align 8
  call void %203(%"class.base::internal::BindStateBase"* %200, %"class.absl::optional"* nonnull dereferenceable(16) %17) #11
  br label %204

204:                                              ; preds = %189, %177
  %205 = phi %"class.base::internal::CallbackBase"* [ %199, %189 ], [ %184, %177 ]
  %206 = phi i8* [ %194, %189 ], [ %179, %177 ]
  %207 = phi i8* [ %192, %189 ], [ %178, %177 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %205) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %207)
  call void @_ZN4base4File4InfoD1Ev(%"struct.base::File::Info"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %175) #11
  br label %208

208:                                              ; preds = %137, %39, %204, %162, %21
  ret void
}

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #2

declare i64 @_ZN4base4File4SeekENS0_6WhenceEl(%"class.base::File"*, i32, i64) local_unnamed_addr #2

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN4base4File17WriteAtCurrentPosEPKci(%"class.base::File"*, i8*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base4File5FlushEv(%"class.base::File"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base4File4InfoC1Ev(%"struct.base::File::Info"*) unnamed_addr #2

declare zeroext i1 @_ZN4base4File7GetInfoEPNS0_4InfoE(%"class.base::File"*, %"struct.base::File::Info"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4File4InfoD1Ev(%"struct.base::File::Info"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17BlobBytesProviderC2E13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.blink::BlobBytesProvider"* nocapture, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink17BlobBytesProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 1
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %0, i64 0, i32 2
  %8 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  tail call void @_ZN5blink12_GLOBAL__N_128IncreaseChildProcessRefCountEv()
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128IncreaseChildProcessRefCountEv() #0 {
  %1 = alloca %"class.base::OnceCallback", align 8
  %2 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #11
  br i1 %7, label %49, label %8

8:                                                ; preds = %0
  %9 = tail call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #11
  %10 = bitcast %"class.blink::Thread"* %9 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %11 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %11, i64 3
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %12, align 8
  %14 = tail call %"class.base::SingleThreadTaskRunner"* %13(%"class.blink::Thread"* %9) #11
  %15 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 101) #11
  %16 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = call i8* @_Znwm(i64 48) #12, !noalias !55
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !55
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 ptrtoint (void ()* @_ZN5blink12_GLOBAL__N_128IncreaseChildProcessRefCountEv to i64), i64* %20, align 8, !noalias !55
  %21 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11, !noalias !62
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = ptrtoint i8* %17 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8, !noalias !63
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8, !noalias !63
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #11, !noalias !63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11, !noalias !62
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #11, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %27 = bitcast %"class.base::OnceCallback"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast %"class.WTF::CrossThreadOnceFunction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = bitcast %"class.base::SingleThreadTaskRunner"* %14 to %"class.base::TaskRunner"*
  %30 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::OnceCallback"* %1 to i64*
  store i64 %23, i64* %32, align 8, !alias.scope !66
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8, !noalias !66
  %33 = bitcast %"class.base::SingleThreadTaskRunner"* %14 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %34 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %33, align 8
  %35 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %34, align 8
  %36 = call zeroext i1 %35(%"class.base::TaskRunner"* %29, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %1, i64 0) #11
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #11
  %38 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %39 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  %40 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %8
  %42 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %55

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 -2
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %47 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %48) #11
  br label %55

49:                                               ; preds = %0
  %50 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #11
  %51 = bitcast %"class.blink::Platform"* %50 to void (%"class.blink::Platform"*, i1)***
  %52 = load void (%"class.blink::Platform"*, i1)**, void (%"class.blink::Platform"*, i1)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Platform"*, i1)*, void (%"class.blink::Platform"*, i1)** %52, i64 43
  %54 = load void (%"class.blink::Platform"*, i1)*, void (%"class.blink::Platform"*, i1)** %53, align 8
  tail call void %54(%"class.blink::Platform"* %50, i1 zeroext false) #11
  br label %55

55:                                               ; preds = %46, %41, %8, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS3_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS4_NSC_14default_deleteIS4_EEEESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.mojo::PendingReceiver", align 8
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = alloca %"class.mojo::PendingReceiver", align 8
  %7 = alloca %"class.mojo::PendingReceiver", align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast %"class.mojo::PendingReceiver"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast void ()** %8 to %"class.blink::BlobBytesProvider"**
  %11 = load %"class.blink::BlobBytesProvider"*, %"class.blink::BlobBytesProvider"** %10, align 8
  store %"class.blink::BlobBytesProvider"* null, %"class.blink::BlobBytesProvider"** %10, align 8
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %7, i64 0, i32 0
  %13 = getelementptr inbounds void ()*, void ()** %8, i64 1
  %14 = bitcast void ()** %13 to %"struct.mojo::internal::PendingReceiverState"*
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %12, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %14) #11
  %15 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = bitcast %"class.mojo::PendingReceiver"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %17, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %12) #11
  %18 = bitcast %"class.mojo::PendingReceiver"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %19, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %17) #11, !noalias !69
  %20 = getelementptr inbounds %"class.blink::BlobBytesProvider", %"class.blink::BlobBytesProvider"* %11, i64 0, i32 0
  %21 = bitcast %"class.mojo::PendingReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11, !noalias !69
  %22 = call i8* @_Znwm(i64 88) #12, !noalias !72
  %23 = bitcast i8* %22 to %"class.mojo::internal::SelfOwnedReceiver"*
  %24 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %24, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %19) #11, !noalias !72
  call void @_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEC2ENSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEENS_15PendingReceiverIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::SelfOwnedReceiver"* nonnull %23, %"class.blink::mojom::blink::BytesProvider"* %20, %"class.mojo::PendingReceiver"* nonnull %3, %"class.base::SequencedTaskRunner"* null) #11, !noalias !72
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %24) #11, !noalias !72
  %25 = getelementptr inbounds i8, i8* %22, i64 72
  %26 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11, !noalias !75
  %27 = bitcast i8* %25 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %27) #11, !noalias !75
  %28 = getelementptr inbounds i8, i8* %22, i64 80
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !75
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %31, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %30) #11
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11, !noalias !75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11, !noalias !69
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %31) #11
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEC2ENSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEENS_15PendingReceiverIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::SelfOwnedReceiver"*, %"class.blink::mojom::blink::BytesProvider"*, %"class.mojo::PendingReceiver"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::OnceCallback.53", align 8
  %6 = alloca %"class.base::OnceCallback.53", align 8
  %7 = alloca %"class.mojo::PendingReceiver", align 8
  %8 = alloca %"class.base::OnceCallback.53", align 8
  %9 = ptrtoint %"class.blink::mojom::blink::BytesProvider"* %1 to i64
  %10 = bitcast %"class.mojo::internal::SelfOwnedReceiver"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  %15 = bitcast %"class.base::internal::BindStateBase"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %13, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %14) #11
  call void @_ZN4mojo8ReceiverIN5blink5mojom5blink13BytesProviderENS_19RawPtrImplRefTraitsIS4_EEEC2EPS4_NS_15PendingReceiverIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Receiver"* %12, %"class.blink::mojom::blink::BytesProvider"* %1, %"class.mojo::PendingReceiver"* nonnull %7, %"class.base::SequencedTaskRunner"* %3)
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %13) #11
  %16 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 4, i32 0
  %17 = ptrtoint %"class.mojo::internal::SelfOwnedReceiver"* %0 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %16, i64 %17) #11
  %18 = call i8* @_Znwm(i64 56) #12, !noalias !78
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEEEJNS0_17UnretainedWrapperISA_EEEEEFvjSJ_EE7RunOnceEPNS0_13BindStateBaseEjSJ_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS9_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !78
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.mojo::internal::SelfOwnedReceiver"*, i32, %"class.std::__1::basic_string"*)* @_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEE12OnDisconnectEjRKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !78
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %17, i64* %23, align 8, !noalias !78
  %24 = bitcast %"class.base::OnceCallback.53"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %8, i64 0, i32 0, i32 0, i32 0
  %26 = ptrtoint i8* %18 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = bitcast %"class.base::OnceCallback.53"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %28, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback.53"* %5 to i64*
  store i64 %26, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %32 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %29, i64 0, i32 18, i32 0
  %33 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %5, i64 0, i32 0
  %34 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %32, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %33) #11
  %35 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %29, i64 0, i32 17, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %35) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  %37 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8ReceiverIN5blink5mojom5blink13BytesProviderENS_19RawPtrImplRefTraitsIS4_EEEC2EPS4_NS_15PendingReceiverIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Receiver"*, %"class.blink::mojom::blink::BytesProvider"*, %"class.mojo::PendingReceiver"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"* %6) #11
  %7 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = ptrtoint %"class.blink::mojom::blink::BytesProvider"* %1 to i64
  %9 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = bitcast %"class.blink::mojom::blink::BytesProvider"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %12) #11
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0
  call void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink13BytesProviderENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"* %17, %"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"class.base::SequencedTaskRunner"* %3) #11
  br label %28

18:                                               ; preds = %4
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %6) #11
  %19 = icmp eq %"class.base::SequencedTaskRunner"* %3, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %3, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %26 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #11
  br label %28

28:                                               ; preds = %25, %20, %18, %16
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEE12OnDisconnectEjRKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"class.mojo::internal::SelfOwnedReceiver"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback.53", align 8
  %6 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %6, align 8
  %8 = icmp eq %"class.base::internal::BindStateBase"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = ptrtoint %"class.base::internal::BindStateBase"* %7 to i64
  %11 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %10, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %7, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*)**
  %16 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %15, align 8
  tail call void %16(%"class.base::internal::BindStateBase"* nonnull %7) #11
  br label %29

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %18, align 8
  %20 = icmp eq %"class.base::internal::BindStateBase"* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %17
  %22 = ptrtoint %"class.base::internal::BindStateBase"* %19 to i64
  %23 = bitcast %"class.base::OnceCallback.53"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = bitcast %"class.base::OnceCallback.53"* %5 to i64*
  store i64 %22, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %5, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %19, i64 0, i32 1
  %27 = bitcast void ()** %26 to void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string"*)**
  %28 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string"*)** %27, align 8
  tail call void %28(%"class.base::internal::BindStateBase"* nonnull %19, i32 %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #11
  br label %29

29:                                               ; preds = %9, %21
  %30 = phi %"class.base::internal::CallbackBase"* [ %25, %21 ], [ %13, %9 ]
  %31 = phi i8* [ %23, %21 ], [ %11, %9 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %32

32:                                               ; preds = %29, %17
  call void @_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEE5CloseEv(%"class.mojo::internal::SelfOwnedReceiver"* %0)
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15MessageReceiverD2Ev(%"class.mojo::MessageReceiver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEED0Ev(%"class.blink::mojom::blink::BytesProviderStub"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::mojom::blink::BytesProviderStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

declare zeroext i1 @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv(%"class.mojo::MessageReceiver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEE6AcceptEPNS3_7MessageE(%"class.blink::mojom::blink::BytesProviderStub"*, %"class.mojo::Message"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::BytesProviderStub", %"class.blink::mojom::blink::BytesProviderStub"* %0, i64 0, i32 1
  %4 = load %"class.blink::mojom::blink::BytesProvider"*, %"class.blink::mojom::blink::BytesProvider"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::blink::BytesProvider"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink5mojom5blink25BytesProviderStubDispatch6AcceptEPNS1_13BytesProviderEPN4mojo7MessageE(%"class.blink::mojom::blink::BytesProvider"* nonnull %4, %"class.mojo::Message"* %1) #11
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink17BytesProviderStubIN4mojo19RawPtrImplRefTraitsINS1_13BytesProviderEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE(%"class.blink::mojom::blink::BytesProviderStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::blink::BytesProviderStub", %"class.blink::mojom::blink::BytesProviderStub"* %0, i64 0, i32 1
  %5 = load %"class.blink::mojom::blink::BytesProvider"*, %"class.blink::mojom::blink::BytesProvider"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::blink::BytesProvider"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN5blink5mojom5blink25BytesProviderStubDispatch19AcceptWithResponderEPNS1_13BytesProviderEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::BytesProvider"* nonnull %5, %"class.mojo::Message"* %1, %"class.mojo::MessageReceiverWithStatus"* %2) #11
  br label %16

9:                                                ; preds = %3
  %10 = icmp eq %"class.mojo::MessageReceiverWithStatus"* %2, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.mojo::MessageReceiverWithStatus"* %2 to void (%"class.mojo::MessageReceiverWithStatus"*)***
  %13 = load void (%"class.mojo::MessageReceiverWithStatus"*)**, void (%"class.mojo::MessageReceiverWithStatus"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %13, i64 1
  %15 = load void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %14, align 8
  tail call void %15(%"class.mojo::MessageReceiverWithStatus"* nonnull %2) #11
  br label %16

16:                                               ; preds = %7, %9, %11
  %17 = phi i1 [ %8, %7 ], [ false, %9 ], [ false, %11 ]
  ret i1 %17
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare zeroext i1 @_ZN5blink5mojom5blink25BytesProviderStubDispatch6AcceptEPNS1_13BytesProviderEPN4mojo7MessageE(%"class.blink::mojom::blink::BytesProvider"*, %"class.mojo::Message"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink5mojom5blink25BytesProviderStubDispatch19AcceptWithResponderEPNS1_13BytesProviderEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::BytesProvider"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink13BytesProviderENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 0
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = tail call i8* @_Znwm(i64 8) #12
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink29BytesProviderRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %12 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink13BytesProvider5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %12, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %11, i32 0) #11
  %13 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #11
  br label %25

20:                                               ; preds = %3
  %21 = tail call i8* @_Znwm(i64 8) #12
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink29BytesProviderRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %24 = bitcast i8* %21 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink13BytesProvider5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %24, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %23, i32 0) #11
  br label %25

25:                                               ; preds = %20, %6, %17
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*, i8*, %"class.mojo::MessageReceiver"*, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiverWithResponderStatus"*, i32) local_unnamed_addr #2

declare void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"*) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEEEJNS0_17UnretainedWrapperISA_EEEEEFvjSJ_EE7RunOnceEPNS0_13BindStateBaseEjSJ_(%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = bitcast i8* %13 to %"class.mojo::internal::SelfOwnedReceiver"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.mojo::internal::SelfOwnedReceiver"*, i32, %"class.std::__1::basic_string"*)**
  %23 = load void (%"class.mojo::internal::SelfOwnedReceiver"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.mojo::internal::SelfOwnedReceiver"*, i32, %"class.std::__1::basic_string"*)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %9 to void (%"class.mojo::internal::SelfOwnedReceiver"*, i32, %"class.std::__1::basic_string"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.mojo::internal::SelfOwnedReceiver"*, i32, %"class.std::__1::basic_string"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.mojo::internal::SelfOwnedReceiver"* %14, i32 %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS9_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEE5CloseEv(%"class.mojo::internal::SelfOwnedReceiver"*) local_unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %"class.mojo::internal::SelfOwnedReceiver"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #11
  %5 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %5) #11
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %5) #11
  %6 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #11
  %7 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #11
  %8 = getelementptr inbounds %"class.mojo::internal::SelfOwnedReceiver", %"class.mojo::internal::SelfOwnedReceiver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::mojom::blink::BytesProvider"*, %"class.blink::mojom::blink::BytesProvider"** %8, align 8
  store %"class.blink::mojom::blink::BytesProvider"* null, %"class.blink::mojom::blink::BytesProvider"** %8, align 8
  %10 = icmp eq %"class.blink::mojom::blink::BytesProvider"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::mojom::blink::BytesProvider"* %9 to void (%"class.blink::mojom::blink::BytesProvider"*)***
  %13 = load void (%"class.blink::mojom::blink::BytesProvider"*)**, void (%"class.blink::mojom::blink::BytesProvider"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::mojom::blink::BytesProvider"*)*, void (%"class.blink::mojom::blink::BytesProvider"*)** %13, i64 1
  %15 = load void (%"class.blink::mojom::blink::BytesProvider"*)*, void (%"class.blink::mojom::blink::BytesProvider"*)** %14, align 8
  tail call void %15(%"class.blink::mojom::blink::BytesProvider"* nonnull %9) #11
  br label %16

16:                                               ; preds = %3, %11
  %17 = bitcast %"class.mojo::internal::SelfOwnedReceiver"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %16, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #5

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #5

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS2_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS3_NSB_14default_deleteIS3_EEEES9_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.mojo::internal::PendingReceiverState"*
  tail call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* %5) #11
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.blink::BlobBytesProvider"**
  %8 = load %"class.blink::BlobBytesProvider"*, %"class.blink::BlobBytesProvider"** %7, align 8
  store %"class.blink::BlobBytesProvider"* null, %"class.blink::BlobBytesProvider"** %7, align 8
  %9 = icmp eq %"class.blink::BlobBytesProvider"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::BlobBytesProvider"* %8 to void (%"class.blink::BlobBytesProvider"*)***
  %12 = load void (%"class.blink::BlobBytesProvider"*)**, void (%"class.blink::BlobBytesProvider"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::BlobBytesProvider"*)*, void (%"class.blink::BlobBytesProvider"*)** %12, i64 1
  %14 = load void (%"class.blink::BlobBytesProvider"*)*, void (%"class.blink::BlobBytesProvider"*)** %13, align 8
  tail call void %14(%"class.blink::BlobBytesProvider"* nonnull %8) #11
  br label %15

15:                                               ; preds = %3, %10
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #5

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #2

declare %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() local_unnamed_addr #2

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void ()**
  %4 = load void ()*, void ()** %3, align 8
  tail call void %4() #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink7RawDataC1Ev(%"class.blink::RawData"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"*, %"class.base::Location"* dereferenceable(32), i32, %"class.base::SequencedTaskRunner"*, i8*) unnamed_addr #2

declare i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"*, %"class.mojo::Handle"*, i32, i32, %"class.base::RepeatingCallback.32"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117BlobBytesStreamer10OnWritableEjRKN4mojo18HandleSignalsStateE(%"class.blink::(anonymous namespace)::BlobBytesStreamer"*, i32, %"struct.mojo::HandleSignalsState"* nocapture readnone dereferenceable(8)) #0 align 2 {
  %4 = alloca %struct.MojoWriteDataOptions, align 8
  %5 = alloca i32, align 4
  %6 = or i32 %1, 8
  %7 = icmp eq i32 %6, 9
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 1
  %13 = bitcast %struct.MojoWriteDataOptions* %4 to i8*
  %14 = getelementptr inbounds %struct.MojoWriteDataOptions, %struct.MojoWriteDataOptions* %4, i64 0, i32 0
  %15 = getelementptr inbounds %struct.MojoWriteDataOptions, %struct.MojoWriteDataOptions* %4, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  br label %73

18:                                               ; preds = %3
  %19 = icmp eq %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, null
  br i1 %19, label %257, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 4
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %21) #11
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = tail call i32 @MojoClose(i32 %23) #11
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %29, align 8
  %31 = icmp eq %class.scoped_refptr.1* %30, null
  br i1 %31, label %71, label %32, !prof !16

32:                                               ; preds = %27
  %33 = bitcast %class.scoped_refptr.1* %30 to i8*
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %69, label %37, !prof !17

37:                                               ; preds = %32
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %30, i64 %38
  br label %40

40:                                               ; preds = %63, %37
  %41 = phi %class.scoped_refptr.1* [ %64, %63 ], [ %30, %37 ]
  %42 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %41, i64 0, i32 0
  %43 = load %"class.blink::RawData"*, %"class.blink::RawData"** %42, align 8
  %44 = icmp eq %"class.blink::RawData"* %43, null
  br i1 %44, label %63, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %43, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %63

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %46, i64 2
  %52 = bitcast %"class.base::RefCountedThreadSafe.2"* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %61, label %55, !prof !16

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %46, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !17

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #11
  br label %61

61:                                               ; preds = %60, %50
  %62 = bitcast %"class.blink::RawData"* %43 to i8*
  tail call void @free(i8* %62) #11
  br label %63

63:                                               ; preds = %61, %45, %40
  %64 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %41, i64 1
  %65 = icmp eq %class.scoped_refptr.1* %64, %39
  br i1 %65, label %66, label %40

66:                                               ; preds = %63
  store i32 0, i32* %34, align 4
  %67 = bitcast %"class.WTF::Vector"* %28 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %32
  %70 = phi i8* [ %68, %66 ], [ %33, %32 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %70) #11
  br label %71

71:                                               ; preds = %27, %69
  %72 = bitcast %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0 to i8*
  tail call void @free(i8* %72) #11
  br label %257

73:                                               ; preds = %8, %253
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 -1431655766, i32* %5, align 4
  %74 = load i64, i64* %11, align 8
  %75 = trunc i64 %74 to i32
  %76 = call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %75) #11
  %77 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %76, i64 0, i32 0
  %78 = load %"class.blink::RawData"*, %"class.blink::RawData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %78, i64 0, i32 1, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = load i64, i64* %12, align 8
  %83 = sub i64 %81, %82
  %84 = call i1 @llvm.is.constant.i64(i64 %83) #11
  %85 = icmp ult i64 %83, 4294967296
  %86 = trunc i64 %83 to i32
  %87 = select i1 %85, i32 %86, i32 -1
  %88 = icmp ult i64 %83, 4294967295
  %89 = select i1 %88, i64 %83, i64 4294967295
  %90 = trunc i64 %89 to i32
  %91 = select i1 %84, i32 %90, i32 %87
  store i32 %91, i32* %5, align 4
  %92 = load i64, i64* %11, align 8
  %93 = trunc i64 %92 to i32
  %94 = call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %93) #11
  %95 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %94, i64 0, i32 0
  %96 = load %"class.blink::RawData"*, %"class.blink::RawData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %96, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = load i64, i64* %12, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store i32 8, i32* %14, align 8
  store i32 0, i32* %15, align 4
  %101 = load i32, i32* %16, align 4
  %102 = call i32 @MojoWriteData(i32 %101, i8* %100, i32* nonnull %5, %struct.MojoWriteDataOptions* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  switch i32 %102, label %201 [
    i32 0, label %103
    i32 17, label %255
  ]

103:                                              ; preds = %73
  %104 = load i32, i32* %5, align 4
  %105 = zext i32 %104 to i64
  %106 = load i64, i64* %12, align 8
  %107 = add i64 %106, %105
  store i64 %107, i64* %12, align 8
  %108 = load i64, i64* %11, align 8
  %109 = trunc i64 %108 to i32
  %110 = call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %109) #11
  %111 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %110, i64 0, i32 0
  %112 = load %"class.blink::RawData"*, %"class.blink::RawData"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %112, i64 0, i32 1, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = icmp ult i64 %107, %115
  br i1 %116, label %253, label %117

117:                                              ; preds = %103
  %118 = load i64, i64* %11, align 8
  %119 = trunc i64 %118 to i32
  %120 = call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %119) #11
  %121 = bitcast %class.scoped_refptr.1* %120 to i64*
  %122 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %120, i64 0, i32 0
  %123 = load %"class.blink::RawData"*, %"class.blink::RawData"** %122, align 8
  store i64 0, i64* %121, align 8
  %124 = icmp eq %"class.blink::RawData"* %123, null
  br i1 %124, label %143, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %123, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw sub i32* %127, i32 1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %143

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %126, i64 2
  %132 = bitcast %"class.base::RefCountedThreadSafe.2"* %131 to i8**
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %141, label %135, !prof !16

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %126, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %140, label %139, !prof !17

139:                                              ; preds = %135
  store i32 0, i32* %136, align 4
  br label %140

140:                                              ; preds = %139, %135
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %133) #11
  br label %141

141:                                              ; preds = %140, %130
  %142 = bitcast %"class.blink::RawData"* %123 to i8*
  call void @free(i8* %142) #11
  br label %143

143:                                              ; preds = %117, %125, %141
  %144 = load i64, i64* %11, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %11, align 8
  store i64 0, i64* %12, align 8
  %146 = load i32, i32* %17, align 4
  %147 = zext i32 %146 to i64
  %148 = icmp ult i64 %145, %147
  br i1 %148, label %253, label %149

149:                                              ; preds = %143
  %150 = icmp eq %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, null
  br i1 %150, label %254, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 4
  call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %152) #11
  %153 = load i32, i32* %16, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = call i32 @MojoClose(i32 %153) #11
  br label %157

157:                                              ; preds = %155, %151
  %158 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %159 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %158, align 8
  %160 = icmp eq %class.scoped_refptr.1* %159, null
  br i1 %160, label %199, label %161, !prof !16

161:                                              ; preds = %157
  %162 = bitcast %class.scoped_refptr.1* %159 to i8*
  %163 = load i32, i32* %17, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %197, label %165, !prof !17

165:                                              ; preds = %161
  %166 = zext i32 %163 to i64
  %167 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %159, i64 %166
  br label %168

168:                                              ; preds = %191, %165
  %169 = phi %class.scoped_refptr.1* [ %192, %191 ], [ %159, %165 ]
  %170 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %169, i64 0, i32 0
  %171 = load %"class.blink::RawData"*, %"class.blink::RawData"** %170, align 8
  %172 = icmp eq %"class.blink::RawData"* %171, null
  br i1 %172, label %191, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %171, i64 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw sub i32* %175, i32 1 acq_rel
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %191

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %174, i64 2
  %180 = bitcast %"class.base::RefCountedThreadSafe.2"* %179 to i8**
  %181 = load i8*, i8** %180, align 8
  %182 = icmp eq i8* %181, null
  br i1 %182, label %189, label %183, !prof !16

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %174, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %188, label %187, !prof !17

187:                                              ; preds = %183
  store i32 0, i32* %184, align 4
  br label %188

188:                                              ; preds = %187, %183
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %181) #11
  br label %189

189:                                              ; preds = %188, %178
  %190 = bitcast %"class.blink::RawData"* %171 to i8*
  call void @free(i8* %190) #11
  br label %191

191:                                              ; preds = %189, %173, %168
  %192 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %169, i64 1
  %193 = icmp eq %class.scoped_refptr.1* %192, %167
  br i1 %193, label %194, label %168

194:                                              ; preds = %191
  store i32 0, i32* %17, align 4
  %195 = bitcast %"class.WTF::Vector"* %10 to i8**
  %196 = load i8*, i8** %195, align 8
  br label %197

197:                                              ; preds = %194, %161
  %198 = phi i8* [ %196, %194 ], [ %162, %161 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %198) #11
  br label %199

199:                                              ; preds = %157, %197
  %200 = bitcast %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0 to i8*
  call void @free(i8* %200) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  br label %257

201:                                              ; preds = %73
  %202 = icmp eq %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, null
  br i1 %202, label %256, label %203

203:                                              ; preds = %201
  %204 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlobBytesStreamer", %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0, i64 0, i32 4
  call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %204) #11
  %205 = load i32, i32* %16, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %203
  %208 = call i32 @MojoClose(i32 %205) #11
  br label %209

209:                                              ; preds = %207, %203
  %210 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %211 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %210, align 8
  %212 = icmp eq %class.scoped_refptr.1* %211, null
  br i1 %212, label %251, label %213, !prof !16

213:                                              ; preds = %209
  %214 = bitcast %class.scoped_refptr.1* %211 to i8*
  %215 = load i32, i32* %17, align 4
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %249, label %217, !prof !17

217:                                              ; preds = %213
  %218 = zext i32 %215 to i64
  %219 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %211, i64 %218
  br label %220

220:                                              ; preds = %243, %217
  %221 = phi %class.scoped_refptr.1* [ %244, %243 ], [ %211, %217 ]
  %222 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %221, i64 0, i32 0
  %223 = load %"class.blink::RawData"*, %"class.blink::RawData"** %222, align 8
  %224 = icmp eq %"class.blink::RawData"* %223, null
  br i1 %224, label %243, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %223, i64 0, i32 0, i32 0
  %227 = getelementptr inbounds %"class.blink::RawData", %"class.blink::RawData"* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = atomicrmw sub i32* %227, i32 1 acq_rel
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %230, label %243

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %226, i64 2
  %232 = bitcast %"class.base::RefCountedThreadSafe.2"* %231 to i8**
  %233 = load i8*, i8** %232, align 8
  %234 = icmp eq i8* %233, null
  br i1 %234, label %241, label %235, !prof !16

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %226, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %240, label %239, !prof !17

239:                                              ; preds = %235
  store i32 0, i32* %236, align 4
  br label %240

240:                                              ; preds = %239, %235
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %233) #11
  br label %241

241:                                              ; preds = %240, %230
  %242 = bitcast %"class.blink::RawData"* %223 to i8*
  call void @free(i8* %242) #11
  br label %243

243:                                              ; preds = %241, %225, %220
  %244 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %221, i64 1
  %245 = icmp eq %class.scoped_refptr.1* %244, %219
  br i1 %245, label %246, label %220

246:                                              ; preds = %243
  store i32 0, i32* %17, align 4
  %247 = bitcast %"class.WTF::Vector"* %10 to i8**
  %248 = load i8*, i8** %247, align 8
  br label %249

249:                                              ; preds = %246, %213
  %250 = phi i8* [ %248, %246 ], [ %214, %213 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %250) #11
  br label %251

251:                                              ; preds = %209, %249
  %252 = bitcast %"class.blink::(anonymous namespace)::BlobBytesStreamer"* %0 to i8*
  call void @free(i8* %252) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  br label %257

253:                                              ; preds = %103, %143
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  br label %73

254:                                              ; preds = %149
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  br label %257

255:                                              ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  br label %257

256:                                              ; preds = %201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  br label %257

257:                                              ; preds = %256, %251, %255, %254, %199, %18, %71
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJN3WTF17UnretainedWrapperIS5_EEEEEFvjS9_EE3RunEPNS0_13BindStateBaseEjS9_(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = bitcast i8* %13 to %"class.blink::(anonymous namespace)::BlobBytesStreamer"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::(anonymous namespace)::BlobBytesStreamer"*, i32, %"struct.mojo::HandleSignalsState"*)**
  %23 = load void (%"class.blink::(anonymous namespace)::BlobBytesStreamer"*, i32, %"struct.mojo::HandleSignalsState"*)*, void (%"class.blink::(anonymous namespace)::BlobBytesStreamer"*, i32, %"struct.mojo::HandleSignalsState"*)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %9 to void (%"class.blink::(anonymous namespace)::BlobBytesStreamer"*, i32, %"struct.mojo::HandleSignalsState"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::(anonymous namespace)::BlobBytesStreamer"*, i32, %"struct.mojo::HandleSignalsState"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.blink::(anonymous namespace)::BlobBytesStreamer"* %14, i32 %1, %"struct.mojo::HandleSignalsState"* dereferenceable(8) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJN3WTF17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #8

declare i32 @MojoWriteData(i32, i8*, i32*, %struct.MojoWriteDataOptions*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %24, i64 %25
  ret %class.scoped_refptr.1* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.8"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i64, i64* %24, i64 %25
  ret i64* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorImLj0ENS_18PartitionAllocatorEE14AppendSlowCaseImEEvOT_(%"class.WTF::Vector.8"*, i64* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp ugt i64* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i64, i64* %7, i64 %10
  %12 = icmp ugt i64* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !16

24:                                               ; preds = %13
  %25 = icmp eq i64* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i64*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load i64*, i64** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i64* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i64* %38 to i8*
  br i1 %41, label %43, label %49, !prof !16

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.8"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i64*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i64* %1 to i64
  %56 = ptrtoint i64* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !16

69:                                               ; preds = %54
  %70 = icmp eq i64* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i64*, i64** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i64* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i64* %78 to i8*
  br i1 %81, label %83, label %89, !prof !16

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.8"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i64*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i64* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i64, i64* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i64* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i64* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i64, i64* %100, i64 %103
  %105 = load i64, i64* %101, align 8
  store i64 %105, i64* %104, align 8
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeImEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink7RawDataEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector"*, %class.scoped_refptr.1* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.1* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.1* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !16

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr.1* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink7RawDataEEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink7RawDataEEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %class.scoped_refptr.1*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %class.scoped_refptr.1* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %class.scoped_refptr.1* %38 to i8*
  br i1 %41, label %43, label %49, !prof !16

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %class.scoped_refptr.1*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %class.scoped_refptr.1* %1 to i64
  %56 = ptrtoint %class.scoped_refptr.1* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !16

69:                                               ; preds = %54
  %70 = icmp eq %class.scoped_refptr.1* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink7RawDataEEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink7RawDataEEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %class.scoped_refptr.1* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %class.scoped_refptr.1* %78 to i8*
  br i1 %81, label %83, label %89, !prof !16

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %class.scoped_refptr.1*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %class.scoped_refptr.1* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %class.scoped_refptr.1* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %class.scoped_refptr.1* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %100, i64 %103
  %105 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %101, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr.1* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr.1* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.blink::RawData"* null, %"class.blink::RawData"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink7RawDataEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3WTF19CrossThreadBindOnceIZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS1_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS2_NSA_14default_deleteIS2_EEEES8_EEEDaOT_DpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN3WTF19CrossThreadBindOnceIZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS1_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS2_NSA_14default_deleteIS2_EEEES8_EEEDaOT_DpOT0_"}
!5 = !{!6, !8, !3}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS3_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS4_NSC_14default_deleteIS4_EEEESA_EEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS3_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS4_NSC_14default_deleteIS4_EEEESA_EEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS1_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS2_NSA_14default_deleteIS2_EEEES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIZN5blink17BlobBytesProvider13CreateAndBindEN4mojo15PendingReceiverINS1_5mojom5blink13BytesProviderEEEE3$_0JNSt3__110unique_ptrIS2_NSA_14default_deleteIS2_EEEES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!10 = !{!11, !3}
!11 = distinct !{!11, !12, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!16 = !{!"branch_weights", i32 2000, i32 1}
!17 = !{!"branch_weights", i32 1, i32 2000}
!18 = !{!19, !21, !23}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvvEJEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvvEJEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIPFvvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIPFvvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_"}
!23 = distinct !{!23, !24, !"_ZN3WTF19CrossThreadBindOnceIPFvvEJEEEDaOT_DpOT0_: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF19CrossThreadBindOnceIPFvvEJEEEDaOT_DpOT0_"}
!25 = !{!23}
!26 = !{!27, !23}
!27 = distinct !{!27, !28, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.isvectorized", i32 1}
!39 = distinct !{!39, !40}
!40 = !{!"llvm.loop.unroll.disable"}
!41 = distinct !{!41, !38}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!44 = distinct !{!44, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!47 = distinct !{!47, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!48 = !{!49, !51, !53}
!49 = distinct !{!49, !50, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!51 = distinct !{!51, !52, !"_ZN4base13BindRepeatingIRMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJN3WTF17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!52 = distinct !{!52, !"_ZN4base13BindRepeatingIRMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJN3WTF17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!53 = distinct !{!53, !54, !"_ZN3WTF13BindRepeatingIMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJNS_17UnretainedWrapperIS3_EEEFvjS7_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!54 = distinct !{!54, !"_ZN3WTF13BindRepeatingIMN5blink12_GLOBAL__N_117BlobBytesStreamerEFvjRKN4mojo18HandleSignalsStateEEJNS_17UnretainedWrapperIS3_EEEFvjS7_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!55 = !{!56, !58, !60}
!56 = distinct !{!56, !57, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvvEJEEEDcOT0_DpOT1_: argument 0"}
!57 = distinct !{!57, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvvEJEEEDcOT0_DpOT1_"}
!58 = distinct !{!58, !59, !"_ZN4base8BindOnceIPFvvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_: argument 0"}
!59 = distinct !{!59, !"_ZN4base8BindOnceIPFvvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_"}
!60 = distinct !{!60, !61, !"_ZN3WTF19CrossThreadBindOnceIPFvvEJEEEDaOT_DpOT0_: argument 0"}
!61 = distinct !{!61, !"_ZN3WTF19CrossThreadBindOnceIPFvvEJEEEDaOT_DpOT0_"}
!62 = !{!60}
!63 = !{!64, !60}
!64 = distinct !{!64, !65, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!65 = distinct !{!65, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!68 = distinct !{!68, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN4mojo21MakeSelfOwnedReceiverIN5blink5mojom5blink13BytesProviderENS1_17BlobBytesProviderEEEN4base7WeakPtrINS_8internal17SelfOwnedReceiverIT_EEEENSt3__110unique_ptrIT0_NSD_14default_deleteISF_EEEENS_15PendingReceiverISA_EE13scoped_refptrINS6_19SequencedTaskRunnerEE: argument 0"}
!71 = distinct !{!71, !"_ZN4mojo21MakeSelfOwnedReceiverIN5blink5mojom5blink13BytesProviderENS1_17BlobBytesProviderEEEN4base7WeakPtrINS_8internal17SelfOwnedReceiverIT_EEEENSt3__110unique_ptrIT0_NSD_14default_deleteISF_EEEENS_15PendingReceiverISA_EE13scoped_refptrINS6_19SequencedTaskRunnerEE"}
!72 = !{!73, !70}
!73 = distinct !{!73, !74, !"_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEE6CreateENSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEENS_15PendingReceiverIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE: argument 0"}
!74 = distinct !{!74, !"_ZN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEE6CreateENSt3__110unique_ptrIS5_NS7_14default_deleteIS5_EEEENS_15PendingReceiverIS5_EE13scoped_refptrIN4base19SequencedTaskRunnerEE"}
!75 = !{!76, !73, !70}
!76 = distinct !{!76, !77, !"_ZNK4base14WeakPtrFactoryIN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEE10GetWeakPtrEv: argument 0"}
!77 = distinct !{!77, !"_ZNK4base14WeakPtrFactoryIN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEE10GetWeakPtrEv"}
!78 = !{!79, !81}
!79 = distinct !{!79, !80, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEEEJNS0_17UnretainedWrapperISA_EEEEEDcOT0_DpOT1_: argument 0"}
!80 = distinct !{!80, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEEEJNS0_17UnretainedWrapperISA_EEEEEDcOT0_DpOT1_"}
!81 = distinct !{!81, !82, !"_ZN4base8BindOnceIMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEJNS_8internal17UnretainedWrapperIS8_EEEEENS_12OnceCallbackINSK_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!82 = distinct !{!82, !"_ZN4base8BindOnceIMN4mojo8internal17SelfOwnedReceiverIN5blink5mojom5blink13BytesProviderEEEFvjRKNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEJNS_8internal17UnretainedWrapperIS8_EEEEENS_12OnceCallbackINSK_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
