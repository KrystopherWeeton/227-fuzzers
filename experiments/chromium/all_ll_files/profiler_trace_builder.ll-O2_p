; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/profiler_trace_builder.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/profiler_trace_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.164", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.205", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i64 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.124", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.138", [4 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { i64 }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { float }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.147", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.156" }
%"class.WTF::Vector.156" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.173" }
%"class.WTF::VectorBufferBase.173" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type { i32 (...)** }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.186" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.89"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.103"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.213" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.205" = type { %"struct.std::__1::__atomic_base.206" }
%"struct.std::__1::__atomic_base.206" = type { %"struct.std::__1::__cxx_atomic_impl.207" }
%"struct.std::__1::__cxx_atomic_impl.207" = type { %"struct.std::__1::__cxx_atomic_base_impl.208" }
%"struct.std::__1::__cxx_atomic_base_impl.208" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.360" }
%"struct.std::__1::atomic.360" = type { %"struct.std::__1::__atomic_base.361" }
%"struct.std::__1::__atomic_base.361" = type { %"struct.std::__1::__atomic_base.362" }
%"struct.std::__1::__atomic_base.362" = type { %"struct.std::__1::__cxx_atomic_impl.363" }
%"struct.std::__1::__cxx_atomic_impl.363" = type { %"struct.std::__1::__cxx_atomic_base_impl.364" }
%"struct.std::__1::__cxx_atomic_base_impl.364" = type { i32 }
%"class.blink::ProfilerTraceBuilder" = type { %"class.blink::Member.223", %"class.blink::SecurityOrigin"*, %"class.base::TimeTicks", %"class.WTF::Vector.2", %"class.blink::HeapVector", %"class.blink::HeapVector.15", %"class.blink::HeapVector.7", %"class.WTF::HashMap.225", %"class.WTF::HashMap.230", %"class.WTF::HashMap.236", %"class.WTF::HashMap.240" }
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::ScriptState"* }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::ProfilerFrame"* }
%"class.blink::ProfilerFrame" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i64, i64, %"class.WTF::String", i64 }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector.15" = type { %"class.WTF::Vector.18" }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::ProfilerStack"* }
%"class.blink::ProfilerStack" = type { %"class.blink::IDLDictionaryBase", i8, i8, i64, i64 }
%"class.blink::HeapVector.7" = type { %"class.WTF::Vector.10" }
%"class.WTF::Vector.10" = type { %"class.WTF::VectorBuffer.11" }
%"class.WTF::VectorBuffer.11" = type { %"class.WTF::VectorBufferBase.12" }
%"class.WTF::VectorBufferBase.12" = type { %"class.blink::Member.13"*, i32, i32 }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::ProfilerSample"* }
%"class.blink::ProfilerSample" = type { %"class.blink::IDLDictionaryBase", i8, i8, i64, double }
%"class.WTF::HashMap.225" = type { %"class.WTF::HashTable.226" }
%"class.WTF::HashTable.226" = type <{ %"struct.WTF::KeyValuePair.229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.229" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::HashMap.230" = type { %"class.WTF::HashTable.231" }
%"class.WTF::HashTable.231" = type <{ %"struct.WTF::KeyValuePair.234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.234" = type <{ %"class.v8::CpuProfileNode"*, i32, [4 x i8] }>
%"class.v8::CpuProfileNode" = type { i8 }
%"class.WTF::HashMap.236" = type { %"class.WTF::HashTable.237" }
%"class.WTF::HashTable.237" = type <{ %"struct.WTF::KeyValuePair.234"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.240" = type { %"class.WTF::HashTable.241" }
%"class.WTF::HashTable.241" = type <{ %"struct.WTF::KeyValuePair.244"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.244" = type <{ i32, i8, [3 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.25, %"class.blink::Member.209", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.25 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.211" }
%"class.blink::Persistent.211" = type { %"class.blink::PersistentBase.212" }
%"class.blink::PersistentBase.212" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.218", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.220 }
%"class.WTF::RefCounted.218" = type { %"class.base::RefCounted.219" }
%"class.base::RefCounted.219" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.220 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::ProfilerTrace" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, %"class.blink::HeapVector", %"class.WTF::Vector.2", %"class.blink::HeapVector.7", %"class.blink::HeapVector.15" }
%"class.v8::CpuProfile" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.251" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::KURL"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.297 }
%union.anon.297 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.352" = type { i8 }
%"class.blink::HeapVectorBacking.340" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20ProfilerTraceBuilderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20ProfilerTraceBuilderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20ProfilerTraceBuilderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20ProfilerTraceBuilderEE7GetNameEPKv = comdat any

$_ZN5blink20ProfilerTraceBuilderD2Ev = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13ProfilerFrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13ProfilerStackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14ProfilerSampleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ProfilerSampleEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ProfilerStackEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN5blink21ProfilerNodeFrameHash7GetHashEPKN2v814CpuProfileNodeE = comdat any

$_ZN5blink21ProfilerNodeFrameHash5EqualEPKN2v814CpuProfileNodeES4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ProfilerFrameEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE4findERKS2_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPKcEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RjEENS_18HashTableAddResultISE_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERiRbEENS_18HashTableAddResultISC_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20ProfilerTraceBuilderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20ProfilerTraceBuilderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [34 x i8] c"ProfilerTraceBuilder::FromProfile\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.5 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20ProfilerTraceBuilderEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ProfilerTraceBuilder]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20ProfilerTraceBuilderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20ProfilerTraceBuilderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20ProfilerTraceBuilderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20ProfilerTraceBuilderEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20ProfilerTraceBuilderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14ProfilerSampleEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ProfilerSample>, WTF::VectorTraits<blink::Member<blink::ProfilerSample> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ProfilerStackEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ProfilerStack>, WTF::VectorTraits<blink::Member<blink::ProfilerStack> > >]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN2v814CpuProfileNodeEjEEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const v8::CpuProfileNode *, unsigned int>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ProfilerFrameEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ProfilerFrame>, WTF::VectorTraits<blink::Member<blink::ProfilerFrame> > >]\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKcjEEEES3_v = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const char *, unsigned int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIibEEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, bool>]\00", align 1

@_ZN5blink20ProfilerTraceBuilderC1EPNS_11ScriptStateEPKNS_14SecurityOriginEN4base9TimeTicksE = hidden unnamed_addr alias void (%"class.blink::ProfilerTraceBuilder"*, %"class.blink::ScriptState"*, %"class.blink::SecurityOrigin"*, i64), void (%"class.blink::ProfilerTraceBuilder"*, %"class.blink::ScriptState"*, %"class.blink::SecurityOrigin"*, i64)* @_ZN5blink20ProfilerTraceBuilderC2EPNS_11ScriptStateEPKNS_14SecurityOriginEN4base9TimeTicksE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ProfilerTrace"* @_ZN5blink20ProfilerTraceBuilder11FromProfileEPNS_11ScriptStateEPKN2v810CpuProfileEPKNS_14SecurityOriginEN4base9TimeTicksE(%"class.blink::ScriptState"*, %"class.v8::CpuProfile"*, %"class.blink::SecurityOrigin"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = ptrtoint %"class.blink::ScriptState"* %0 to i64
  %7 = ptrtoint %"class.blink::SecurityOrigin"* %2 to i64
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %4
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %13 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %15, i64* %14, align 8
  %16 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %17

17:                                               ; preds = %4, %11
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), %11 ]
  %19 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %11 ]
  %20 = phi i64 [ -6148914691236517206, %4 ], [ %16, %11 ]
  %21 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20ProfilerTraceBuilderEEEPhm(i64 184) #9
  %22 = bitcast i8* %21 to %"class.blink::ProfilerTraceBuilder"*
  %23 = bitcast i8* %21 to i64*
  store i64 %6, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %7, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 %3, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 24
  %29 = getelementptr inbounds i8, i8* %21, i64 112
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 20, i1 false) #9
  %30 = getelementptr inbounds i8, i8* %21, i64 136
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 20, i1 false) #9
  %31 = getelementptr inbounds i8, i8* %21, i64 160
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 20, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 84, i1 false) #9
  %32 = getelementptr inbounds i8, i8* %21, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  %36 = icmp eq %"class.v8::CpuProfile"* %1, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %17
  %38 = call i32 @_ZNK2v810CpuProfile15GetSamplesCountEv(%"class.v8::CpuProfile"* nonnull %1) #9
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %37, %40
  %41 = phi i32 [ %44, %40 ], [ 0, %37 ]
  %42 = call %"class.v8::CpuProfileNode"* @_ZNK2v810CpuProfile9GetSampleEi(%"class.v8::CpuProfile"* nonnull %1, i32 %41) #9
  %43 = call i64 @_ZNK2v810CpuProfile18GetSampleTimestampEi(%"class.v8::CpuProfile"* nonnull %1, i32 %41) #9
  call void @_ZN5blink20ProfilerTraceBuilder9AddSampleEPKN2v814CpuProfileNodeEN4base9TimeTicksE(%"class.blink::ProfilerTraceBuilder"* %22, %"class.v8::CpuProfileNode"* %42, i64 %43)
  %44 = add nuw nsw i32 %41, 1
  %45 = call i32 @_ZNK2v810CpuProfile15GetSamplesCountEv(%"class.v8::CpuProfile"* nonnull %1) #9
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %40, label %47

47:                                               ; preds = %40, %37, %17
  %48 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 80) #9
  %49 = bitcast i8* %48 to %"class.blink::ProfilerTrace"*
  call void @_ZN5blink13ProfilerTraceC1Ev(%"class.blink::ProfilerTrace"* %49) #9
  %50 = getelementptr inbounds i8, i8* %48, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  %54 = bitcast i8* %28 to %"class.WTF::Vector.2"*
  call void @_ZN5blink13ProfilerTrace12setResourcesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ProfilerTrace"* %49, %"class.WTF::Vector.2"* dereferenceable(16) %54) #9
  %55 = getelementptr inbounds i8, i8* %21, i64 40
  %56 = bitcast i8* %55 to %"class.blink::HeapVector"*
  call void @_ZN5blink13ProfilerTrace9setFramesERKNS_10HeapVectorINS_6MemberINS_13ProfilerFrameEEELj0EEE(%"class.blink::ProfilerTrace"* %49, %"class.blink::HeapVector"* dereferenceable(16) %56) #9
  %57 = getelementptr inbounds i8, i8* %21, i64 56
  %58 = bitcast i8* %57 to %"class.blink::HeapVector.15"*
  call void @_ZN5blink13ProfilerTrace9setStacksERKNS_10HeapVectorINS_6MemberINS_13ProfilerStackEEELj0EEE(%"class.blink::ProfilerTrace"* %49, %"class.blink::HeapVector.15"* dereferenceable(16) %58) #9
  %59 = getelementptr inbounds i8, i8* %21, i64 72
  %60 = bitcast i8* %59 to %"class.blink::HeapVector.7"*
  call void @_ZN5blink13ProfilerTrace10setSamplesERKNS_10HeapVectorINS_6MemberINS_14ProfilerSampleEEELj0EEE(%"class.blink::ProfilerTrace"* %49, %"class.blink::HeapVector.7"* dereferenceable(16) %60) #9
  %61 = icmp eq i8* %19, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %47
  %63 = load i8, i8* %19, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %20) #9
  br label %66

66:                                               ; preds = %47, %62, %65
  ret %"class.blink::ProfilerTrace"* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK2v810CpuProfile15GetSamplesCountEv(%"class.v8::CpuProfile"*) local_unnamed_addr #2

declare %"class.v8::CpuProfileNode"* @_ZNK2v810CpuProfile9GetSampleEi(%"class.v8::CpuProfile"*, i32) local_unnamed_addr #2

declare i64 @_ZNK2v810CpuProfile18GetSampleTimestampEi(%"class.v8::CpuProfile"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ProfilerTraceBuilder9AddSampleEPKN2v814CpuProfileNodeEN4base9TimeTicksE(%"class.blink::ProfilerTraceBuilder"*, %"class.v8::CpuProfileNode"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ProfilerSample"*, align 8
  %5 = bitcast %"class.blink::ProfilerSample"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  store %"class.blink::ProfilerSample"* inttoptr (i64 -6148914691236517206 to %"class.blink::ProfilerSample"*), %"class.blink::ProfilerSample"** %4, align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #9
  %7 = bitcast i8* %6 to %"class.blink::ProfilerSample"*
  tail call void @_ZN5blink14ProfilerSampleC1Ev(%"class.blink::ProfilerSample"* %7) #9
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = bitcast %"class.blink::ProfilerSample"** %4 to i8**
  store i8* %6, i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %14, i64 %2, i1 zeroext true, i1 zeroext true) #9
  %16 = getelementptr inbounds i8, i8* %6, i64 24
  %17 = bitcast i8* %16 to double*
  store double %15, double* %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 1, i8* %18, align 1
  %19 = tail call i64 @_ZN5blink20ProfilerTraceBuilder18GetOrInsertStackIdEPKN2v814CpuProfileNodeE(%"class.blink::ProfilerTraceBuilder"* %0, %"class.v8::CpuProfileNode"* %1)
  %20 = trunc i64 %19 to i8
  %21 = icmp eq i8 %20, 0
  %22 = ptrtoint i8* %6 to i64
  br i1 %21, label %28, label %23

23:                                               ; preds = %3
  %24 = lshr i64 %19, 32
  %25 = getelementptr inbounds i8, i8* %6, i64 16
  %26 = bitcast i8* %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 1, i8* %27, align 8
  br label %28

28:                                               ; preds = %3, %23
  %29 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 6, i32 0
  %30 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %48, label %35, !prof !3

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %29, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::Member.13"*, %"class.blink::Member.13"** %36, align 8
  %38 = zext i32 %31 to i64
  %39 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %37, i64 %38
  %40 = bitcast %"class.blink::Member.13"* %39 to i64*
  store atomic i64 %22, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %35
  %44 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %6) #9
  br label %45

45:                                               ; preds = %43, %35
  %46 = load i32, i32* %30, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %30, align 4
  br label %49

48:                                               ; preds = %28
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.10"* %29, %"class.blink::ProfilerSample"** nonnull dereferenceable(8) %4) #9
  br label %49

49:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ProfilerTrace"* @_ZNK5blink20ProfilerTraceBuilder8GetTraceEv(%"class.blink::ProfilerTraceBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 80) #9
  %3 = bitcast i8* %2 to %"class.blink::ProfilerTrace"*
  tail call void @_ZN5blink13ProfilerTraceC1Ev(%"class.blink::ProfilerTrace"* %3) #9
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 3
  tail call void @_ZN5blink13ProfilerTrace12setResourcesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ProfilerTrace"* %3, %"class.WTF::Vector.2"* dereferenceable(16) %8) #9
  %9 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 4
  tail call void @_ZN5blink13ProfilerTrace9setFramesERKNS_10HeapVectorINS_6MemberINS_13ProfilerFrameEEELj0EEE(%"class.blink::ProfilerTrace"* %3, %"class.blink::HeapVector"* dereferenceable(16) %9) #9
  %10 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 5
  tail call void @_ZN5blink13ProfilerTrace9setStacksERKNS_10HeapVectorINS_6MemberINS_13ProfilerStackEEELj0EEE(%"class.blink::ProfilerTrace"* %3, %"class.blink::HeapVector.15"* dereferenceable(16) %10) #9
  %11 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 6
  tail call void @_ZN5blink13ProfilerTrace10setSamplesERKNS_10HeapVectorINS_6MemberINS_14ProfilerSampleEEELj0EEE(%"class.blink::ProfilerTrace"* %3, %"class.blink::HeapVector.7"* dereferenceable(16) %11) #9
  ret %"class.blink::ProfilerTrace"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ProfilerTraceBuilderC2EPNS_11ScriptStateEPKNS_14SecurityOriginEN4base9TimeTicksE(%"class.blink::ProfilerTraceBuilder"* nocapture, %"class.blink::ScriptState"*, %"class.blink::SecurityOrigin"*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 1
  store %"class.blink::SecurityOrigin"* %2, %"class.blink::SecurityOrigin"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 8
  %10 = bitcast %"class.WTF::HashMap.230"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #9
  %11 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 9
  %12 = bitcast %"class.WTF::HashMap.236"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #9
  %13 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 10
  %14 = bitcast %"class.WTF::HashMap.240"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #9
  %15 = bitcast %"class.WTF::Vector.2"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 84, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20ProfilerTraceBuilder5TraceEPNS_7VisitorE(%"class.blink::ProfilerTraceBuilder"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ProfilerTraceBuilder"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv) #9
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 4
  %14 = bitcast %"class.blink::HeapVector"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  %17 = bitcast %"class.blink::HeapVector"* %13 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #9
  br i1 %16, label %28, label %22

22:                                               ; preds = %12
  %23 = inttoptr i64 %15 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %28

28:                                               ; preds = %12, %22
  %29 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 5
  %30 = bitcast %"class.blink::HeapVector.15"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  %33 = bitcast %"class.blink::HeapVector.15"* %29 to i8**
  %34 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %35 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %34, i64 11
  %36 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %35, align 8
  tail call void %36(%"class.blink::Visitor"* %1, i8** %33) #9
  br i1 %32, label %43, label %37

37:                                               ; preds = %28
  %38 = inttoptr i64 %31 to i8*
  %39 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %1, i8* nonnull %38, i8* nonnull %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %43

43:                                               ; preds = %28, %37
  %44 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 6
  %45 = bitcast %"class.blink::HeapVector.7"* %44 to i64*
  %46 = load atomic i64, i64* %45 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  %48 = bitcast %"class.blink::HeapVector.7"* %44 to i8**
  %49 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %49, i64 11
  %51 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %1, i8** %48) #9
  br i1 %47, label %58, label %52

52:                                               ; preds = %43
  %53 = inttoptr i64 %46 to i8*
  %54 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, i64 5
  %57 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %56, align 8
  tail call void %57(%"class.blink::Visitor"* %1, i8* nonnull %53, i8* nonnull %53, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %58

58:                                               ; preds = %43, %52
  ret void
}

declare double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64, i64, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink20ProfilerTraceBuilder18GetOrInsertStackIdEPKN2v814CpuProfileNodeE(%"class.blink::ProfilerTraceBuilder"*, %"class.v8::CpuProfileNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::CpuProfileNode"*, align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ProfilerStack"*, align 8
  %7 = alloca i32, align 4
  store %"class.v8::CpuProfileNode"* %1, %"class.v8::CpuProfileNode"** %3, align 8
  %8 = icmp eq %"class.v8::CpuProfileNode"* %1, null
  br i1 %8, label %126, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  %11 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = tail call i8* @_ZNK2v814CpuProfileNode24GetScriptResourceNameStrEv(%"class.v8::CpuProfileNode"* nonnull %1) #9
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = tail call i64 @strlen(i8* nonnull %12) #10
  br label %16

16:                                               ; preds = %9, %14
  %17 = phi i64 [ %15, %14 ], [ 0, %9 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %12, i64 %17) #9
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #9
  br label %34

34:                                               ; preds = %16, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  %35 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %36 = call i32 @_ZNK2v814CpuProfileNode11GetScriptIdEv(%"class.v8::CpuProfileNode"* %35) #9
  %37 = call i32 @_ZNK2v814CpuProfileNode13GetSourceTypeEv(%"class.v8::CpuProfileNode"* %35) #9
  %38 = call zeroext i1 @_ZNK2v814CpuProfileNode25IsScriptSharedCrossOriginEv(%"class.v8::CpuProfileNode"* %35) #9
  %39 = call zeroext i1 @_ZN5blink20ProfilerTraceBuilder23ShouldIncludeStackFrameERKNS_4KURLEiN2v814CpuProfileNode10SourceTypeEb(%"class.blink::ProfilerTraceBuilder"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %4, i32 %36, i32 %37, i1 zeroext %38)
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = call %"class.v8::CpuProfileNode"* @_ZNK2v814CpuProfileNode9GetParentEv(%"class.v8::CpuProfileNode"* %35) #9
  %42 = call i64 @_ZN5blink20ProfilerTraceBuilder18GetOrInsertStackIdEPKN2v814CpuProfileNodeE(%"class.blink::ProfilerTraceBuilder"* %0, %"class.v8::CpuProfileNode"* %41)
  %43 = and i64 %42, -256
  %44 = lshr i64 %42, 32
  %45 = trunc i64 %44 to i32
  br label %122

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 8
  %48 = getelementptr inbounds %"class.WTF::HashMap.230", %"class.WTF::HashMap.230"* %47, i64 0, i32 0
  %49 = call { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.231"* %48, %"class.v8::CpuProfileNode"** nonnull dereferenceable(8) %3) #9
  %50 = extractvalue { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } %49, 0
  %51 = getelementptr inbounds %"class.WTF::HashMap.230", %"class.WTF::HashMap.230"* %47, i64 0, i32 0, i32 0
  %52 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 8, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %52, i64 %55
  %57 = icmp eq %"struct.WTF::KeyValuePair.234"* %50, %56
  br i1 %57, label %61, label %58

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %50, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  br label %122

61:                                               ; preds = %46
  %62 = bitcast %"class.blink::ProfilerStack"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  store %"class.blink::ProfilerStack"* inttoptr (i64 -6148914691236517206 to %"class.blink::ProfilerStack"*), %"class.blink::ProfilerStack"** %6, align 8
  %63 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #9
  %64 = bitcast i8* %63 to %"class.blink::ProfilerStack"*
  call void @_ZN5blink13ProfilerStackC1Ev(%"class.blink::ProfilerStack"* %64) #9
  %65 = getelementptr inbounds i8, i8* %63, i64 -4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = or i16 %67, 1
  store atomic i16 %68, i16* %66 release, align 2
  %69 = bitcast %"class.blink::ProfilerStack"** %6 to i8**
  store i8* %63, i8** %69, align 8
  %70 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %71 = call i32 @_ZN5blink20ProfilerTraceBuilder18GetOrInsertFrameIdEPKN2v814CpuProfileNodeE(%"class.blink::ProfilerTraceBuilder"* %0, %"class.v8::CpuProfileNode"* %70)
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %63, i64 16
  %74 = bitcast i8* %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %63, i64 8
  store i8 1, i8* %75, align 8
  %76 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %77 = call %"class.v8::CpuProfileNode"* @_ZNK2v814CpuProfileNode9GetParentEv(%"class.v8::CpuProfileNode"* %76) #9
  %78 = call i64 @_ZN5blink20ProfilerTraceBuilder18GetOrInsertStackIdEPKN2v814CpuProfileNodeE(%"class.blink::ProfilerTraceBuilder"* %0, %"class.v8::CpuProfileNode"* %77)
  %79 = trunc i64 %78 to i8
  %80 = icmp eq i8 %79, 0
  %81 = ptrtoint i8* %63 to i64
  br i1 %80, label %87, label %82

82:                                               ; preds = %61
  %83 = ashr i64 %78, 32
  %84 = getelementptr inbounds i8, i8* %63, i64 24
  %85 = bitcast i8* %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = getelementptr inbounds i8, i8* %63, i64 9
  store i8 1, i8* %86, align 1
  br label %87

87:                                               ; preds = %61, %82
  %88 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #9
  %89 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 5, i32 0
  %90 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %7, align 4
  %92 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %91, %93
  br i1 %94, label %108, label %95, !prof !3

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %89, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::Member.21"*, %"class.blink::Member.21"** %96, align 8
  %98 = zext i32 %91 to i64
  %99 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %97, i64 %98
  %100 = bitcast %"class.blink::Member.21"* %99 to i64*
  store atomic i64 %81, i64* %100 monotonic, align 8
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %95
  %104 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %63) #9
  br label %105

105:                                              ; preds = %103, %95
  %106 = load i32, i32* %90, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %90, align 4
  br label %109

108:                                              ; preds = %87
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.18"* %89, %"class.blink::ProfilerStack"** nonnull dereferenceable(8) %6) #9
  br label %109

109:                                              ; preds = %105, %108
  %110 = call { %"struct.WTF::KeyValuePair.234"*, i8 } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.231"* %48, %"class.v8::CpuProfileNode"** nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %7) #9
  %111 = extractvalue { %"struct.WTF::KeyValuePair.234"*, i8 } %110, 1
  %112 = and i8 %111, 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %109
  %115 = load i32, i32* %7, align 4
  br label %120

116:                                              ; preds = %109
  %117 = extractvalue { %"struct.WTF::KeyValuePair.234"*, i8 } %110, 0
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %117, i64 0, i32 1
  %119 = load i32, i32* %7, align 4
  store i32 %119, i32* %118, align 4
  br label %120

120:                                              ; preds = %114, %116
  %121 = phi i32 [ %115, %114 ], [ %119, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  br label %122

122:                                              ; preds = %58, %120, %40
  %123 = phi i64 [ %42, %40 ], [ 1, %120 ], [ 1, %58 ]
  %124 = phi i32 [ %45, %40 ], [ %121, %120 ], [ %60, %58 ]
  %125 = phi i64 [ %43, %40 ], [ 0, %120 ], [ 0, %58 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #9
  br label %126

126:                                              ; preds = %2, %122
  %127 = phi i64 [ %123, %122 ], [ 0, %2 ]
  %128 = phi i32 [ %124, %122 ], [ undef, %2 ]
  %129 = phi i64 [ %125, %122 ], [ 0, %2 ]
  %130 = zext i32 %128 to i64
  %131 = shl nuw i64 %130, 32
  %132 = and i64 %129, 4294967040
  %133 = and i64 %127, 255
  %134 = or i64 %132, %133
  %135 = or i64 %134, %131
  ret i64 %135
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8* @_ZNK2v814CpuProfileNode24GetScriptResourceNameStrEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20ProfilerTraceBuilder23ShouldIncludeStackFrameERKNS_4KURLEiN2v814CpuProfileNode10SourceTypeEb(%"class.blink::ProfilerTraceBuilder"*, %"class.blink::KURL"* dereferenceable(112), i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store i32 %2, i32* %6, align 4
  %8 = icmp ugt i32 %3, 2
  br i1 %8, label %121, label %9

9:                                                ; preds = %5
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = add nsw i32 %3, -1
  %13 = icmp ult i32 %12, 2
  br label %121

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 10
  %16 = getelementptr inbounds %"class.WTF::HashMap.240", %"class.WTF::HashMap.240"* %15, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.244"*, %"struct.WTF::KeyValuePair.244"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair.244"* %17, null
  %19 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 10, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  br i1 %18, label %76, label %21

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  %23 = zext i32 %22 to i64
  %24 = shl i32 %2, 15
  %25 = xor i32 %24, -1
  %26 = add i32 %25, %2
  %27 = lshr i32 %26, 10
  %28 = xor i32 %27, %26
  %29 = mul i32 %28, 9
  %30 = lshr i32 %29, 6
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 11
  %33 = xor i32 %32, -1
  %34 = add i32 %31, %33
  %35 = lshr i32 %34, 16
  %36 = xor i32 %35, %34
  %37 = and i32 %22, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %17, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %2
  br i1 %42, label %71, label %43

43:                                               ; preds = %21
  %44 = xor i32 %36, -1
  %45 = lshr i32 %34, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %62, %43
  %58 = phi i32 [ %41, %43 ], [ %69, %62 ]
  %59 = phi i64 [ %38, %43 ], [ %66, %62 ]
  %60 = phi i64 [ 0, %43 ], [ %64, %62 ]
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %57
  %63 = icmp eq i64 %60, 0
  %64 = select i1 %63, i64 %56, i64 %60
  %65 = add i64 %64, %59
  %66 = and i64 %65, %23
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %17, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %67, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %2
  br i1 %70, label %71, label %57

71:                                               ; preds = %62, %21
  %72 = phi %"struct.WTF::KeyValuePair.244"* [ %39, %21 ], [ %67, %62 ]
  %73 = icmp eq %"struct.WTF::KeyValuePair.244"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = zext i32 %20 to i64
  br label %79

76:                                               ; preds = %57, %71, %14
  %77 = zext i32 %20 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %17, i64 %77
  br label %79

79:                                               ; preds = %74, %76
  %80 = phi i64 [ %75, %74 ], [ %77, %76 ]
  %81 = phi %"struct.WTF::KeyValuePair.244"* [ %72, %74 ], [ %78, %76 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %17, i64 %80
  %83 = icmp eq %"struct.WTF::KeyValuePair.244"* %81, %82
  br i1 %83, label %88, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %81, i64 0, i32 1
  %86 = load i8, i8* %85, align 4, !range !4
  %87 = icmp ne i8 %86, 0
  br label %121

88:                                               ; preds = %79
  %89 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %1) #9
  br i1 %89, label %90, label %121

90:                                               ; preds = %88
  %91 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112) %1) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #9
  store i8 -86, i8* %7, align 1
  br i1 %4, label %97, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 1
  %94 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %93, align 8
  %95 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* %91, %"class.blink::SecurityOrigin"* %94) #9
  %96 = zext i1 %95 to i8
  br label %97

97:                                               ; preds = %92, %90
  %98 = phi i8 [ 1, %90 ], [ %96, %92 ]
  store i8 %98, i8* %7, align 1
  %99 = getelementptr inbounds %"class.WTF::HashMap.240", %"class.WTF::HashMap.240"* %15, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.244"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERiRbEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.241"* %99, i32* nonnull dereferenceable(4) %6, i8* nonnull dereferenceable(1) %7) #9
  %101 = extractvalue { %"struct.WTF::KeyValuePair.244"*, i8 } %100, 1
  %102 = and i8 %101, 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %97
  %105 = load i8, i8* %7, align 1, !range !4
  br label %110

106:                                              ; preds = %97
  %107 = extractvalue { %"struct.WTF::KeyValuePair.244"*, i8 } %100, 0
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %107, i64 0, i32 1
  %109 = load i8, i8* %7, align 1, !range !4
  store i8 %109, i8* %108, align 1
  br label %110

110:                                              ; preds = %104, %106
  %111 = phi i8 [ %105, %104 ], [ %109, %106 ]
  %112 = icmp ne i8 %111, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #9
  %113 = icmp eq %"class.blink::SecurityOrigin"* %91, null
  br i1 %113, label %121, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %91, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %115) #9
  %116 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %114
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %91) #9
  %120 = bitcast %"class.blink::SecurityOrigin"* %91 to i8*
  call void @free(i8* %120) #9
  br label %121

121:                                              ; preds = %84, %88, %110, %114, %119, %5, %11
  %122 = phi i1 [ %13, %11 ], [ false, %5 ], [ %87, %84 ], [ false, %88 ], [ %112, %110 ], [ %112, %114 ], [ %112, %119 ]
  ret i1 %122
}

declare i32 @_ZNK2v814CpuProfileNode11GetScriptIdEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

declare i32 @_ZNK2v814CpuProfileNode13GetSourceTypeEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v814CpuProfileNode25IsScriptSharedCrossOriginEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

declare %"class.v8::CpuProfileNode"* @_ZNK2v814CpuProfileNode9GetParentEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20ProfilerTraceBuilder18GetOrInsertFrameIdEPKN2v814CpuProfileNodeE(%"class.blink::ProfilerTraceBuilder"*, %"class.v8::CpuProfileNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::CpuProfileNode"*, align 8
  %4 = alloca %"class.blink::ProfilerFrame"*, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i32, align 4
  store %"class.v8::CpuProfileNode"* %1, %"class.v8::CpuProfileNode"** %3, align 8
  %7 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 9
  %8 = getelementptr inbounds %"class.WTF::HashMap.236", %"class.WTF::HashMap.236"* %7, i64 0, i32 0
  %9 = call { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.237"* %8, %"class.v8::CpuProfileNode"** nonnull dereferenceable(8) %3) #9
  %10 = extractvalue { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.236", %"class.WTF::HashMap.236"* %7, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 9, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.234"* %10, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %10, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  br label %167

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::ProfilerFrame"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store %"class.blink::ProfilerFrame"* inttoptr (i64 -6148914691236517206 to %"class.blink::ProfilerFrame"*), %"class.blink::ProfilerFrame"** %4, align 8
  %23 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #9
  %24 = bitcast i8* %23 to %"class.blink::ProfilerFrame"*
  call void @_ZN5blink13ProfilerFrameC1Ev(%"class.blink::ProfilerFrame"* %24) #9
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = bitcast %"class.blink::ProfilerFrame"** %4 to i8**
  store i8* %23, i8** %29, align 8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %32 = call i8* @_ZNK2v814CpuProfileNode18GetFunctionNameStrEv(%"class.v8::CpuProfileNode"* %31) #9
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %21
  %35 = call i64 @strlen(i8* nonnull %32) #10
  br label %36

36:                                               ; preds = %21, %34
  %37 = phi i64 [ %35, %34 ], [ 0, %21 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %32, i64 %37) #9
  %38 = getelementptr inbounds i8, i8* %23, i64 32
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %59, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #9
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %47
  call void @llvm.trap() #9
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %57, %42, %36
  %60 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  %61 = bitcast i8* %38 to i64*
  %62 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  store i64 %60, i64* %61, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #9
  br label %78

78:                                               ; preds = %59, %74, %77
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #9
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  %95 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %96 = call i8* @_ZNK2v814CpuProfileNode24GetScriptResourceNameStrEv(%"class.v8::CpuProfileNode"* %95) #9
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %94
  %100 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %101 = call i8* @_ZNK2v814CpuProfileNode24GetScriptResourceNameStrEv(%"class.v8::CpuProfileNode"* %100) #9
  %102 = call i32 @_ZN5blink20ProfilerTraceBuilder21GetOrInsertResourceIdEPKc(%"class.blink::ProfilerTraceBuilder"* %0, i8* %101)
  %103 = load %"class.blink::ProfilerFrame"*, %"class.blink::ProfilerFrame"** %4, align 8
  %104 = zext i32 %102 to i64
  %105 = getelementptr inbounds %"class.blink::ProfilerFrame", %"class.blink::ProfilerFrame"* %103, i64 0, i32 7
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.blink::ProfilerFrame", %"class.blink::ProfilerFrame"* %103, i64 0, i32 3
  store i8 1, i8* %106, align 2
  br label %107

107:                                              ; preds = %94, %99
  %108 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %109 = call i32 @_ZNK2v814CpuProfileNode13GetLineNumberEv(%"class.v8::CpuProfileNode"* %108) #9
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %118, label %111

111:                                              ; preds = %107
  %112 = load %"class.blink::ProfilerFrame"*, %"class.blink::ProfilerFrame"** %4, align 8
  %113 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %114 = call i32 @_ZNK2v814CpuProfileNode13GetLineNumberEv(%"class.v8::CpuProfileNode"* %113) #9
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %"class.blink::ProfilerFrame", %"class.blink::ProfilerFrame"* %112, i64 0, i32 5
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.blink::ProfilerFrame", %"class.blink::ProfilerFrame"* %112, i64 0, i32 2
  store i8 1, i8* %117, align 1
  br label %118

118:                                              ; preds = %107, %111
  %119 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %120 = call i32 @_ZNK2v814CpuProfileNode15GetColumnNumberEv(%"class.v8::CpuProfileNode"* %119) #9
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = load %"class.blink::ProfilerFrame"*, %"class.blink::ProfilerFrame"** %4, align 8
  %124 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %3, align 8
  %125 = call i32 @_ZNK2v814CpuProfileNode15GetColumnNumberEv(%"class.v8::CpuProfileNode"* %124) #9
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %"class.blink::ProfilerFrame", %"class.blink::ProfilerFrame"* %123, i64 0, i32 4
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.blink::ProfilerFrame", %"class.blink::ProfilerFrame"* %123, i64 0, i32 1
  store i8 1, i8* %128, align 8
  br label %129

129:                                              ; preds = %118, %122
  %130 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #9
  %131 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 4, i32 0
  %132 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  store i32 %133, i32* %6, align 4
  %134 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %133, %135
  br i1 %136, label %153, label %137, !prof !3

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %131, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.blink::Member"*, %"class.blink::Member"** %138, align 8
  %140 = zext i32 %133 to i64
  %141 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %139, i64 %140
  %142 = bitcast %"class.blink::ProfilerFrame"** %4 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.blink::Member"* %141 to i64*
  store atomic i64 %143, i64* %144 monotonic, align 8
  %145 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %137
  %148 = inttoptr i64 %143 to i8*
  %149 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %148) #9
  br label %150

150:                                              ; preds = %147, %137
  %151 = load i32, i32* %132, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %132, align 4
  br label %154

153:                                              ; preds = %129
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %131, %"class.blink::ProfilerFrame"** nonnull dereferenceable(8) %4) #9
  br label %154

154:                                              ; preds = %150, %153
  %155 = call { %"struct.WTF::KeyValuePair.234"*, i8 } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.237"* %8, %"class.v8::CpuProfileNode"** nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %6) #9
  %156 = extractvalue { %"struct.WTF::KeyValuePair.234"*, i8 } %155, 1
  %157 = and i8 %156, 1
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %154
  %160 = load i32, i32* %6, align 4
  br label %165

161:                                              ; preds = %154
  %162 = extractvalue { %"struct.WTF::KeyValuePair.234"*, i8 } %155, 0
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %162, i64 0, i32 1
  %164 = load i32, i32* %6, align 4
  store i32 %164, i32* %163, align 4
  br label %165

165:                                              ; preds = %159, %161
  %166 = phi i32 [ %160, %159 ], [ %164, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %167

167:                                              ; preds = %165, %18
  %168 = phi i32 [ %20, %18 ], [ %166, %165 ]
  ret i32 %168
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare i8* @_ZNK2v814CpuProfileNode18GetFunctionNameStrEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20ProfilerTraceBuilder21GetOrInsertResourceIdEPKc(%"class.blink::ProfilerTraceBuilder"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %1, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.WTF::HashMap.225", %"class.WTF::HashMap.225"* %5, i64 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"* } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable.226"* %6, i8** nonnull dereferenceable(8) %3) #9
  %8 = extractvalue { %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.225", %"class.WTF::HashMap.225"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.229"* %8, %14
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %8, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  br label %54

19:                                               ; preds = %2
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %4, align 4
  %24 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %40, label %27, !prof !3

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 %30
  %32 = load i8*, i8** %3, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = call i64 @strlen(i8* nonnull %32) #10
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i64 [ %35, %34 ], [ 0, %27 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %31, i8* %32, i64 %37) #9
  %38 = load i32, i32* %22, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %22, align 4
  br label %41

40:                                               ; preds = %19
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPKcEEvOT_(%"class.WTF::Vector.2"* %21, i8** nonnull dereferenceable(8) %3) #9
  br label %41

41:                                               ; preds = %36, %40
  %42 = call { %"struct.WTF::KeyValuePair.229"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RjEENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.226"* %6, i8** nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4) #9
  %43 = extractvalue { %"struct.WTF::KeyValuePair.229"*, i8 } %42, 1
  %44 = and i8 %43, 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = load i32, i32* %4, align 4
  br label %52

48:                                               ; preds = %41
  %49 = extractvalue { %"struct.WTF::KeyValuePair.229"*, i8 } %42, 0
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %49, i64 0, i32 1
  %51 = load i32, i32* %4, align 4
  store i32 %51, i32* %50, align 4
  br label %52

52:                                               ; preds = %46, %48
  %53 = phi i32 [ %47, %46 ], [ %51, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  br label %54

54:                                               ; preds = %52, %16
  %55 = phi i32 [ %18, %16 ], [ %53, %52 ]
  ret i32 %55
}

declare i32 @_ZNK2v814CpuProfileNode13GetLineNumberEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

declare i32 @_ZNK2v814CpuProfileNode15GetColumnNumberEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

declare void @_ZN5blink13ProfilerTrace12setResourcesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ProfilerTrace"*, %"class.WTF::Vector.2"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink13ProfilerTrace9setFramesERKNS_10HeapVectorINS_6MemberINS_13ProfilerFrameEEELj0EEE(%"class.blink::ProfilerTrace"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink13ProfilerTrace9setStacksERKNS_10HeapVectorINS_6MemberINS_13ProfilerStackEEELj0EEE(%"class.blink::ProfilerTrace"*, %"class.blink::HeapVector.15"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink13ProfilerTrace10setSamplesERKNS_10HeapVectorINS_6MemberINS_14ProfilerSampleEEELj0EEE(%"class.blink::ProfilerTrace"*, %"class.blink::HeapVector.7"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink14ProfilerSampleC1Ev(%"class.blink::ProfilerSample"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink13ProfilerStackC1Ev(%"class.blink::ProfilerStack"*) unnamed_addr #2

declare void @_ZN5blink13ProfilerFrameC1Ev(%"class.blink::ProfilerFrame"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN5blink13ProfilerTraceC1Ev(%"class.blink::ProfilerTrace"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #9
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #9
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #9
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #9
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20ProfilerTraceBuilderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20ProfilerTraceBuilderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20ProfilerTraceBuilderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20ProfilerTraceBuilderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20ProfilerTraceBuilderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20ProfilerTraceBuilderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ProfilerTraceBuilder"*
  tail call void @_ZNK5blink20ProfilerTraceBuilder5TraceEPNS_7VisitorE(%"class.blink::ProfilerTraceBuilder"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20ProfilerTraceBuilderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ProfilerTraceBuilder"*
  tail call void @_ZN5blink20ProfilerTraceBuilderD2Ev(%"class.blink::ProfilerTraceBuilder"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20ProfilerTraceBuilderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ProfilerTraceBuilderD2Ev(%"class.blink::ProfilerTraceBuilder"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.244"*, %"struct.WTF::KeyValuePair.244"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.244"* %3, null
  br i1 %4, label %7, label %5, !prof !2

5:                                                ; preds = %1
  %6 = bitcast %"struct.WTF::KeyValuePair.244"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #9
  store %"struct.WTF::KeyValuePair.244"* null, %"struct.WTF::KeyValuePair.244"** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 9, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %8, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair.234"* %9, null
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %7
  %12 = bitcast %"struct.WTF::KeyValuePair.234"* %9 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #9
  store %"struct.WTF::KeyValuePair.234"* null, %"struct.WTF::KeyValuePair.234"** %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 8, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair.234"* %15, null
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %13
  %18 = bitcast %"struct.WTF::KeyValuePair.234"* %15 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #9
  store %"struct.WTF::KeyValuePair.234"* null, %"struct.WTF::KeyValuePair.234"** %14, align 8
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair.229"* %21, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %19
  %24 = bitcast %"struct.WTF::KeyValuePair.229"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #9
  store %"struct.WTF::KeyValuePair.229"* null, %"struct.WTF::KeyValuePair.229"** %20, align 8
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::String"*, %"class.WTF::String"** %27, align 8
  %29 = icmp eq %"class.WTF::String"* %28, null
  br i1 %29, label %64, label %30, !prof !2

30:                                               ; preds = %25
  %31 = bitcast %"class.WTF::String"* %28 to i8*
  %32 = getelementptr inbounds %"class.blink::ProfilerTraceBuilder", %"class.blink::ProfilerTraceBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %62, label %35, !prof !3

35:                                               ; preds = %30
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 %36
  br label %38

38:                                               ; preds = %56, %35
  %39 = phi %"class.WTF::String"* [ %57, %56 ], [ %28, %35 ]
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #9
  br label %56

56:                                               ; preds = %55, %52, %38
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 1
  %58 = icmp eq %"class.WTF::String"* %57, %37
  br i1 %58, label %59, label %38

59:                                               ; preds = %56
  store i32 0, i32* %32, align 4
  %60 = bitcast %"class.WTF::Vector.2"* %26 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %30
  %63 = phi i8* [ %61, %59 ], [ %31, %30 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %63) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %27, align 8
  br label %64

64:                                               ; preds = %25, %62
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ProfilerFrameEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ProfilerFrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ProfilerFrame"*
  %4 = bitcast i8* %1 to void (%"class.blink::ProfilerFrame"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ProfilerFrame"*, %"class.blink::Visitor"*)**, void (%"class.blink::ProfilerFrame"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ProfilerFrame"*, %"class.blink::Visitor"*)*, void (%"class.blink::ProfilerFrame"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::ProfilerFrame"*, %"class.blink::Visitor"*)*, void (%"class.blink::ProfilerFrame"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ProfilerFrame"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.21"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.21"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ProfilerStackEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ProfilerStackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ProfilerStack"*
  %4 = bitcast i8* %1 to void (%"class.blink::ProfilerStack"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ProfilerStack"*, %"class.blink::Visitor"*)**, void (%"class.blink::ProfilerStack"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ProfilerStack"*, %"class.blink::Visitor"*)*, void (%"class.blink::ProfilerStack"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::ProfilerStack"*, %"class.blink::Visitor"*)*, void (%"class.blink::ProfilerStack"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ProfilerStack"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.13"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.13"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ProfilerSampleEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ProfilerSampleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ProfilerSample"*
  %4 = bitcast i8* %1 to void (%"class.blink::ProfilerSample"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ProfilerSample"*, %"class.blink::Visitor"*)**, void (%"class.blink::ProfilerSample"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ProfilerSample"*, %"class.blink::Visitor"*)*, void (%"class.blink::ProfilerSample"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::ProfilerSample"*, %"class.blink::Visitor"*)*, void (%"class.blink::ProfilerSample"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ProfilerSample"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.10"*, %"class.blink::ProfilerSample"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.10"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.13"*, %"class.blink::Member.13"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %16, i64 %18
  %20 = bitcast %"class.blink::ProfilerSample"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.13"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.10"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.13"*, %"class.blink::Member.13"** %8, align 8
  %10 = icmp eq %"class.blink::Member.13"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ProfilerSampleEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.352"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.352"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.10"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.352", %"class.blink::HeapVectorBacking.352"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.13"*, %"class.blink::Member.13"** %8, align 8
  %26 = icmp eq %"class.blink::Member.13"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.13"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.10"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ProfilerSampleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.10"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.10"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.10"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ProfilerSampleEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.352"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.352"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.13"*, %"class.blink::Member.13"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.352"* %17, null
  %23 = icmp ne %"class.blink::Member.13"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.13"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.10"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.352", %"class.blink::HeapVectorBacking.352"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.10"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.10"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.352", %"class.blink::HeapVectorBacking.352"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ProfilerSampleEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.352"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.352"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.352"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14ProfilerSampleEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ProfilerSampleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.231"*, %"class.v8::CpuProfileNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.234"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %12 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* %11) #9
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = xor i32 %12, -1
  %16 = lshr i32 %12, 23
  %17 = add i32 %16, %15
  %18 = shl i32 %17, 12
  %19 = xor i32 %18, %17
  %20 = lshr i32 %19, 7
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 2
  %23 = xor i32 %22, %21
  %24 = lshr i32 %23, 20
  %25 = xor i32 %24, %23
  %26 = or i32 %25, 1
  %27 = zext i32 %26 to i64
  br label %28

28:                                               ; preds = %40, %6
  %29 = phi i64 [ 0, %6 ], [ %42, %40 ]
  %30 = phi i64 [ %14, %6 ], [ %44, %40 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %4, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %31, i64 0, i32 0
  %33 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %32, align 8
  %34 = ptrtoint %"class.v8::CpuProfileNode"* %33 to i64
  switch i64 %34, label %35 [
    i64 0, label %47
    i64 -1, label %40
  ]

35:                                               ; preds = %28
  %36 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %37 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* %33) #9
  %38 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* %36) #9
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %45, label %40

40:                                               ; preds = %35, %28
  %41 = icmp eq i64 %29, 0
  %42 = select i1 %41, i64 %27, i64 %29
  %43 = add i64 %42, %30
  %44 = and i64 %43, %10
  br label %28

45:                                               ; preds = %35
  %46 = icmp eq %"struct.WTF::KeyValuePair.234"* %31, null
  br i1 %46, label %47, label %53

47:                                               ; preds = %28, %45, %2
  %48 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %3, align 8
  %49 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %48, i64 %51
  br label %58

53:                                               ; preds = %45
  %54 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %3, align 8
  %55 = load i32, i32* %7, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %54, i64 %56
  br label %58

58:                                               ; preds = %47, %53
  %59 = phi %"struct.WTF::KeyValuePair.234"* [ %31, %53 ], [ %52, %47 ]
  %60 = phi %"struct.WTF::KeyValuePair.234"* [ %57, %53 ], [ %52, %47 ]
  %61 = insertvalue { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } undef, %"struct.WTF::KeyValuePair.234"* %59, 0
  %62 = insertvalue { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } %61, %"struct.WTF::KeyValuePair.234"* %60, 1
  ret { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } %62
}

declare i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.18"*, %"class.blink::ProfilerStack"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.18"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.21"*, %"class.blink::Member.21"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %16, i64 %18
  %20 = bitcast %"class.blink::ProfilerStack"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.21"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.18"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.21"*, %"class.blink::Member.21"** %8, align 8
  %10 = icmp eq %"class.blink::Member.21"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ProfilerStackEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.340"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.340"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.340", %"class.blink::HeapVectorBacking.340"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.21"*, %"class.blink::Member.21"** %8, align 8
  %26 = icmp eq %"class.blink::Member.21"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.21"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.18"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerStackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.18"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.18"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ProfilerStackEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.340"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.340"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.21"*, %"class.blink::Member.21"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.340"* %17, null
  %23 = icmp ne %"class.blink::Member.21"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.21"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.18"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.340", %"class.blink::HeapVectorBacking.340"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.18"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.340", %"class.blink::HeapVectorBacking.340"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ProfilerStackEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.340"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.340"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.340"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ProfilerStackEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerStackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.234"*, i8 } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.231"*, %"class.v8::CpuProfileNode"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.234"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.231"* %0, %"struct.WTF::KeyValuePair.234"* null)
  %9 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.234"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %17 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* %16) #9
  %18 = and i32 %17, %14
  %19 = zext i32 %18 to i64
  %20 = xor i32 %17, -1
  %21 = lshr i32 %17, 23
  %22 = add i32 %21, %20
  %23 = shl i32 %22, 12
  %24 = xor i32 %23, %22
  %25 = lshr i32 %24, 7
  %26 = xor i32 %25, %24
  %27 = shl i32 %26, 2
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 20
  %30 = xor i32 %29, %28
  %31 = or i32 %30, 1
  %32 = zext i32 %31 to i64
  br label %33

33:                                               ; preds = %46, %10
  %34 = phi i64 [ 0, %10 ], [ %49, %46 ]
  %35 = phi i64 [ %19, %10 ], [ %51, %46 ]
  %36 = phi %"struct.WTF::KeyValuePair.234"* [ null, %10 ], [ %47, %46 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %11, i64 %35
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %37, i64 0, i32 0
  %39 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %38, align 8
  %40 = ptrtoint %"class.v8::CpuProfileNode"* %39 to i64
  switch i64 %40, label %41 [
    i64 0, label %52
    i64 -1, label %46
  ]

41:                                               ; preds = %33
  %42 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %43 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* nonnull %39) #9
  %44 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* %42) #9
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %80, label %46

46:                                               ; preds = %33, %41
  %47 = phi %"struct.WTF::KeyValuePair.234"* [ %36, %41 ], [ %37, %33 ]
  %48 = icmp eq i64 %34, 0
  %49 = select i1 %48, i64 %32, i64 %34
  %50 = add i64 %49, %35
  %51 = and i64 %50, %15
  br label %33

52:                                               ; preds = %33
  %53 = icmp eq %"struct.WTF::KeyValuePair.234"* %36, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = bitcast %"struct.WTF::KeyValuePair.234"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #9
  %56 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 2147483647
  %59 = and i32 %58, 2147483647
  %60 = and i32 %57, -2147483648
  %61 = or i32 %59, %60
  store i32 %61, i32* %56, align 8
  br label %62

62:                                               ; preds = %52, %54
  %63 = phi %"struct.WTF::KeyValuePair.234"* [ %36, %54 ], [ %37, %52 ]
  %64 = bitcast %"class.v8::CpuProfileNode"** %1 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"struct.WTF::KeyValuePair.234"* %63 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %63, i64 0, i32 1
  %68 = load i32, i32* %2, align 4
  store i32 %68, i32* %67, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, %71
  %75 = shl i32 %74, 1
  %76 = load i32, i32* %12, align 8
  %77 = icmp ult i32 %75, %76
  br i1 %77, label %80, label %78

78:                                               ; preds = %62
  %79 = tail call %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.231"* %0, %"struct.WTF::KeyValuePair.234"* %63)
  br label %80

80:                                               ; preds = %41, %62, %78
  %81 = phi i8 [ 1, %62 ], [ 1, %78 ], [ 0, %41 ]
  %82 = phi %"struct.WTF::KeyValuePair.234"* [ %63, %62 ], [ %79, %78 ], [ %37, %41 ]
  %83 = insertvalue { %"struct.WTF::KeyValuePair.234"*, i8 } undef, %"struct.WTF::KeyValuePair.234"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair.234"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair.234"*, i8 } %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.231"*, %"struct.WTF::KeyValuePair.234"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN2v814CpuProfileNodeEjEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.234"*
  %37 = call %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.231"* %0, %"struct.WTF::KeyValuePair.234"* %36, i32 %32, %"struct.WTF::KeyValuePair.234"* %1) #9
  ret %"struct.WTF::KeyValuePair.234"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.231"*, %"struct.WTF::KeyValuePair.234"*, i32, %"struct.WTF::KeyValuePair.234"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.231", align 8
  %6 = bitcast %"class.WTF::HashTable.231"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.231"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.234"* %1, %"struct.WTF::KeyValuePair.234"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.234"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.231"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.231"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.234"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.231"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.231"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.234"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.234"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.234"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.234"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.234"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.234"*, i8 } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.231"* nonnull %5, %"class.v8::CpuProfileNode"** dereferenceable(8) %53) #9
  %55 = extractvalue { %"struct.WTF::KeyValuePair.234"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.234"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.234"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #9
  %58 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.234"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.234"* %55, %"struct.WTF::KeyValuePair.234"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.234"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.234"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.234"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.234"*, i8 } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeStackHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.231"*, %"class.v8::CpuProfileNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.231", %"class.WTF::HashTable.231"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %10 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* %9) #9
  %11 = and i32 %10, %7
  %12 = zext i32 %11 to i64
  %13 = xor i32 %10, -1
  %14 = lshr i32 %10, 23
  %15 = add i32 %14, %13
  %16 = shl i32 %15, 12
  %17 = xor i32 %16, %15
  %18 = lshr i32 %17, 7
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 2
  %21 = xor i32 %20, %19
  %22 = lshr i32 %21, 20
  %23 = xor i32 %22, %21
  %24 = or i32 %23, 1
  %25 = zext i32 %24 to i64
  br label %26

26:                                               ; preds = %42, %2
  %27 = phi %"struct.WTF::KeyValuePair.234"* [ null, %2 ], [ %43, %42 ]
  %28 = phi i64 [ 0, %2 ], [ %45, %42 ]
  %29 = phi i64 [ %12, %2 ], [ %47, %42 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %4, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %30, i64 0, i32 0
  %32 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %31, align 8
  %33 = ptrtoint %"class.v8::CpuProfileNode"* %32 to i64
  switch i64 %33, label %37 [
    i64 0, label %34
    i64 -1, label %42
  ]

34:                                               ; preds = %26
  %35 = icmp eq %"struct.WTF::KeyValuePair.234"* %27, null
  %36 = select i1 %35, %"struct.WTF::KeyValuePair.234"* %30, %"struct.WTF::KeyValuePair.234"* %27
  br label %48

37:                                               ; preds = %26
  %38 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %39 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* %32) #9
  %40 = tail call i32 @_ZNK2v814CpuProfileNode9GetNodeIdEv(%"class.v8::CpuProfileNode"* %38) #9
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %48, label %42

42:                                               ; preds = %37, %26
  %43 = phi %"struct.WTF::KeyValuePair.234"* [ %27, %37 ], [ %30, %26 ]
  %44 = icmp eq i64 %28, 0
  %45 = select i1 %44, i64 %25, i64 %28
  %46 = add i64 %45, %29
  %47 = and i64 %46, %8
  br label %26

48:                                               ; preds = %37, %34
  %49 = phi %"struct.WTF::KeyValuePair.234"* [ %36, %34 ], [ %30, %37 ]
  %50 = phi i8 [ 0, %34 ], [ 1, %37 ]
  %51 = insertvalue { %"struct.WTF::KeyValuePair.234"*, i8 } undef, %"struct.WTF::KeyValuePair.234"* %49, 0
  %52 = insertvalue { %"struct.WTF::KeyValuePair.234"*, i8 } %51, i8 %50, 1
  ret { %"struct.WTF::KeyValuePair.234"*, i8 } %52
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.237"*, %"class.v8::CpuProfileNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.234"* %4, null
  br i1 %5, label %45, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %12 = tail call i32 @_ZN5blink21ProfilerNodeFrameHash7GetHashEPKN2v814CpuProfileNodeE(%"class.v8::CpuProfileNode"* %11) #9
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = xor i32 %12, -1
  %16 = lshr i32 %12, 23
  %17 = add i32 %16, %15
  %18 = shl i32 %17, 12
  %19 = xor i32 %18, %17
  %20 = lshr i32 %19, 7
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 2
  %23 = xor i32 %22, %21
  %24 = lshr i32 %23, 20
  %25 = xor i32 %24, %23
  %26 = or i32 %25, 1
  %27 = zext i32 %26 to i64
  br label %28

28:                                               ; preds = %38, %6
  %29 = phi i64 [ 0, %6 ], [ %40, %38 ]
  %30 = phi i64 [ %14, %6 ], [ %42, %38 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %4, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %31, i64 0, i32 0
  %33 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %32, align 8
  %34 = ptrtoint %"class.v8::CpuProfileNode"* %33 to i64
  switch i64 %34, label %35 [
    i64 0, label %45
    i64 -1, label %38
  ]

35:                                               ; preds = %28
  %36 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %37 = tail call zeroext i1 @_ZN5blink21ProfilerNodeFrameHash5EqualEPKN2v814CpuProfileNodeES4_(%"class.v8::CpuProfileNode"* %33, %"class.v8::CpuProfileNode"* %36) #9
  br i1 %37, label %43, label %38

38:                                               ; preds = %35, %28
  %39 = icmp eq i64 %29, 0
  %40 = select i1 %39, i64 %27, i64 %29
  %41 = add i64 %40, %30
  %42 = and i64 %41, %10
  br label %28

43:                                               ; preds = %35
  %44 = icmp eq %"struct.WTF::KeyValuePair.234"* %31, null
  br i1 %44, label %45, label %51

45:                                               ; preds = %28, %43, %2
  %46 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %3, align 8
  %47 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %46, i64 %49
  br label %56

51:                                               ; preds = %43
  %52 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %3, align 8
  %53 = load i32, i32* %7, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %52, i64 %54
  br label %56

56:                                               ; preds = %45, %51
  %57 = phi %"struct.WTF::KeyValuePair.234"* [ %31, %51 ], [ %50, %45 ]
  %58 = phi %"struct.WTF::KeyValuePair.234"* [ %55, %51 ], [ %50, %45 ]
  %59 = insertvalue { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } undef, %"struct.WTF::KeyValuePair.234"* %57, 0
  %60 = insertvalue { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } %59, %"struct.WTF::KeyValuePair.234"* %58, 1
  ret { %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"* } %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink21ProfilerNodeFrameHash7GetHashEPKN2v814CpuProfileNodeE(%"class.v8::CpuProfileNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = tail call i8* @_ZNK2v814CpuProfileNode18GetFunctionNameStrEv(%"class.v8::CpuProfileNode"* %0) #9
  %6 = icmp eq i8* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i64 @strlen(i8* nonnull %5) #10
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi i64 [ %8, %7 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %5, i64 %10) #9
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  %18 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %9, %17
  %20 = phi i32 [ %18, %17 ], [ %15, %9 ]
  %21 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = call i8* @_ZNK2v814CpuProfileNode24GetScriptResourceNameStrEv(%"class.v8::CpuProfileNode"* %0) #9
  %23 = icmp eq i8* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = call i64 @strlen(i8* nonnull %22) #10
  br label %26

26:                                               ; preds = %19, %24
  %27 = phi i64 [ %25, %24 ], [ 0, %19 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %22, i64 %27) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = lshr i32 %31, 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %26
  %35 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %29) #9
  br label %36

36:                                               ; preds = %26, %34
  %37 = phi i32 [ %35, %34 ], [ %32, %26 ]
  %38 = call i32 @_ZNK2v814CpuProfileNode13GetLineNumberEv(%"class.v8::CpuProfileNode"* %0) #9
  %39 = shl i32 %38, 15
  %40 = xor i32 %39, -1
  %41 = add i32 %38, %40
  %42 = lshr i32 %41, 10
  %43 = xor i32 %42, %41
  %44 = mul i32 %43, 9
  %45 = lshr i32 %44, 6
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 11
  %48 = xor i32 %47, -1
  %49 = add i32 %46, %48
  %50 = lshr i32 %49, 16
  %51 = call i32 @_ZNK2v814CpuProfileNode15GetColumnNumberEv(%"class.v8::CpuProfileNode"* %0) #9
  %52 = shl i32 %51, 15
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 10
  %56 = xor i32 %55, %54
  %57 = mul i32 %56, 9
  %58 = lshr i32 %57, 6
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 11
  %61 = xor i32 %60, -1
  %62 = add i32 %59, %61
  %63 = lshr i32 %62, 16
  %64 = xor i32 %37, %20
  %65 = xor i32 %64, %49
  %66 = xor i32 %65, %50
  %67 = xor i32 %66, %62
  %68 = xor i32 %67, %63
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %36
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #9
  br label %84

84:                                               ; preds = %36, %80, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #9
  br label %100

100:                                              ; preds = %84, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret i32 %68
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink21ProfilerNodeFrameHash5EqualEPKN2v814CpuProfileNodeES4_(%"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.v8::String"* @_ZNK2v814CpuProfileNode15GetFunctionNameEv(%"class.v8::CpuProfileNode"* %0) #9
  %4 = tail call %"class.v8::String"* @_ZNK2v814CpuProfileNode15GetFunctionNameEv(%"class.v8::CpuProfileNode"* %1) #9
  %5 = icmp eq %"class.v8::String"* %3, null
  %6 = icmp eq %"class.v8::String"* %4, null
  %7 = or i1 %5, %6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::String"* %4 to i64*
  %10 = bitcast %"class.v8::String"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = icmp eq i64 %11, %12
  br i1 %13, label %16, label %38

14:                                               ; preds = %2
  %15 = and i1 %5, %6
  br i1 %15, label %16, label %38

16:                                               ; preds = %8, %14
  %17 = tail call %"class.v8::String"* @_ZNK2v814CpuProfileNode21GetScriptResourceNameEv(%"class.v8::CpuProfileNode"* %0) #9
  %18 = tail call %"class.v8::String"* @_ZNK2v814CpuProfileNode21GetScriptResourceNameEv(%"class.v8::CpuProfileNode"* %1) #9
  %19 = icmp eq %"class.v8::String"* %17, null
  %20 = icmp eq %"class.v8::String"* %18, null
  %21 = or i1 %19, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.v8::String"* %18 to i64*
  %24 = bitcast %"class.v8::String"* %17 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %23, align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %30, label %38

28:                                               ; preds = %16
  %29 = and i1 %19, %20
  br i1 %29, label %30, label %38

30:                                               ; preds = %22, %28
  %31 = tail call i32 @_ZNK2v814CpuProfileNode13GetLineNumberEv(%"class.v8::CpuProfileNode"* %0) #9
  %32 = tail call i32 @_ZNK2v814CpuProfileNode13GetLineNumberEv(%"class.v8::CpuProfileNode"* %1) #9
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = tail call i32 @_ZNK2v814CpuProfileNode15GetColumnNumberEv(%"class.v8::CpuProfileNode"* %0) #9
  %36 = tail call i32 @_ZNK2v814CpuProfileNode15GetColumnNumberEv(%"class.v8::CpuProfileNode"* %1) #9
  %37 = icmp eq i32 %35, %36
  br label %38

38:                                               ; preds = %22, %8, %34, %30, %28, %14
  %39 = phi i1 [ false, %30 ], [ false, %28 ], [ false, %14 ], [ %37, %34 ], [ false, %8 ], [ false, %22 ]
  ret i1 %39
}

declare %"class.v8::String"* @_ZNK2v814CpuProfileNode15GetFunctionNameEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v814CpuProfileNode21GetScriptResourceNameEv(%"class.v8::CpuProfileNode"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::ProfilerFrame"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::ProfilerFrame"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ProfilerFrameEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ProfilerFrameEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ProfilerFrameEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ProfilerFrameEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ProfilerFrameEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ProfilerFrameEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.234"*, i8 } @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.237"*, %"class.v8::CpuProfileNode"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.234"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.237"* %0, %"struct.WTF::KeyValuePair.234"* null)
  %9 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.234"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %17 = tail call i32 @_ZN5blink21ProfilerNodeFrameHash7GetHashEPKN2v814CpuProfileNodeE(%"class.v8::CpuProfileNode"* %16) #9
  %18 = and i32 %17, %14
  %19 = zext i32 %18 to i64
  %20 = xor i32 %17, -1
  %21 = lshr i32 %17, 23
  %22 = add i32 %21, %20
  %23 = shl i32 %22, 12
  %24 = xor i32 %23, %22
  %25 = lshr i32 %24, 7
  %26 = xor i32 %25, %24
  %27 = shl i32 %26, 2
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 20
  %30 = xor i32 %29, %28
  %31 = or i32 %30, 1
  %32 = zext i32 %31 to i64
  br label %33

33:                                               ; preds = %44, %10
  %34 = phi i64 [ 0, %10 ], [ %47, %44 ]
  %35 = phi i64 [ %19, %10 ], [ %49, %44 ]
  %36 = phi %"struct.WTF::KeyValuePair.234"* [ null, %10 ], [ %45, %44 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %11, i64 %35
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %37, i64 0, i32 0
  %39 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %38, align 8
  %40 = ptrtoint %"class.v8::CpuProfileNode"* %39 to i64
  switch i64 %40, label %41 [
    i64 0, label %50
    i64 -1, label %44
  ]

41:                                               ; preds = %33
  %42 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %1, align 8
  %43 = tail call zeroext i1 @_ZN5blink21ProfilerNodeFrameHash5EqualEPKN2v814CpuProfileNodeES4_(%"class.v8::CpuProfileNode"* nonnull %39, %"class.v8::CpuProfileNode"* %42) #9
  br i1 %43, label %78, label %44

44:                                               ; preds = %33, %41
  %45 = phi %"struct.WTF::KeyValuePair.234"* [ %36, %41 ], [ %37, %33 ]
  %46 = icmp eq i64 %34, 0
  %47 = select i1 %46, i64 %32, i64 %34
  %48 = add i64 %47, %35
  %49 = and i64 %48, %15
  br label %33

50:                                               ; preds = %33
  %51 = icmp eq %"struct.WTF::KeyValuePair.234"* %36, null
  br i1 %51, label %60, label %52

52:                                               ; preds = %50
  %53 = bitcast %"struct.WTF::KeyValuePair.234"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 16, i1 false) #9
  %54 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = add i32 %55, 2147483647
  %57 = and i32 %56, 2147483647
  %58 = and i32 %55, -2147483648
  %59 = or i32 %57, %58
  store i32 %59, i32* %54, align 8
  br label %60

60:                                               ; preds = %50, %52
  %61 = phi %"struct.WTF::KeyValuePair.234"* [ %36, %52 ], [ %37, %50 ]
  %62 = bitcast %"class.v8::CpuProfileNode"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.WTF::KeyValuePair.234"* %61 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %61, i64 0, i32 1
  %66 = load i32, i32* %2, align 4
  store i32 %66, i32* %65, align 4
  %67 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %67, align 4
  %70 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = add i32 %71, %69
  %73 = shl i32 %72, 1
  %74 = load i32, i32* %12, align 8
  %75 = icmp ult i32 %73, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %60
  %77 = tail call %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.237"* %0, %"struct.WTF::KeyValuePair.234"* %61)
  br label %78

78:                                               ; preds = %41, %60, %76
  %79 = phi i8 [ 1, %60 ], [ 1, %76 ], [ 0, %41 ]
  %80 = phi %"struct.WTF::KeyValuePair.234"* [ %61, %60 ], [ %77, %76 ], [ %37, %41 ]
  %81 = insertvalue { %"struct.WTF::KeyValuePair.234"*, i8 } undef, %"struct.WTF::KeyValuePair.234"* %80, 0
  %82 = insertvalue { %"struct.WTF::KeyValuePair.234"*, i8 } %81, i8 %79, 1
  ret { %"struct.WTF::KeyValuePair.234"*, i8 } %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.237"*, %"struct.WTF::KeyValuePair.234"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN2v814CpuProfileNodeEjEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.234"*
  %37 = call %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.237"* %0, %"struct.WTF::KeyValuePair.234"* %36, i32 %32, %"struct.WTF::KeyValuePair.234"* %1) #9
  ret %"struct.WTF::KeyValuePair.234"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.234"* @_ZN3WTF9HashTableIPKN2v814CpuProfileNodeENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorEN5blink21ProfilerNodeFrameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.237"*, %"struct.WTF::KeyValuePair.234"*, i32, %"struct.WTF::KeyValuePair.234"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.234"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.237"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.234"* %16 to i64
  br label %31

18:                                               ; preds = %89
  %19 = bitcast %"class.WTF::HashTable.237"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %90, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.234"* [ null, %10 ], [ %93, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.237", %"class.WTF::HashTable.237"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.234"* %23

31:                                               ; preds = %13, %89
  %32 = phi i64 [ %17, %13 ], [ %90, %89 ]
  %33 = phi i32 [ %7, %13 ], [ %91, %89 ]
  %34 = phi %"struct.WTF::KeyValuePair.234"* [ %16, %13 ], [ %92, %89 ]
  %35 = phi %"struct.WTF::KeyValuePair.234"* [ null, %13 ], [ %93, %89 ]
  %36 = phi i32 [ 0, %13 ], [ %94, %89 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %38, i64 0, i32 0
  %40 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %39, align 8
  %41 = ptrtoint %"class.v8::CpuProfileNode"* %40 to i64
  switch i64 %41, label %42 [
    i64 -1, label %89
    i64 0, label %89
  ]

42:                                               ; preds = %31
  %43 = tail call i32 @_ZN5blink21ProfilerNodeFrameHash7GetHashEPKN2v814CpuProfileNodeE(%"class.v8::CpuProfileNode"* nonnull %40) #9
  %44 = and i32 %43, %14
  %45 = zext i32 %44 to i64
  %46 = xor i32 %43, -1
  %47 = lshr i32 %43, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %73, %42
  %60 = phi %"struct.WTF::KeyValuePair.234"* [ null, %42 ], [ %74, %73 ]
  %61 = phi i64 [ 0, %42 ], [ %76, %73 ]
  %62 = phi i64 [ %45, %42 ], [ %78, %73 ]
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %1, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %63, i64 0, i32 0
  %65 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %64, align 8
  %66 = ptrtoint %"class.v8::CpuProfileNode"* %65 to i64
  switch i64 %66, label %70 [
    i64 0, label %67
    i64 -1, label %73
  ]

67:                                               ; preds = %59
  %68 = icmp eq %"struct.WTF::KeyValuePair.234"* %60, null
  %69 = select i1 %68, %"struct.WTF::KeyValuePair.234"* %63, %"struct.WTF::KeyValuePair.234"* %60
  br label %79

70:                                               ; preds = %59
  %71 = load %"class.v8::CpuProfileNode"*, %"class.v8::CpuProfileNode"** %39, align 8
  %72 = tail call zeroext i1 @_ZN5blink21ProfilerNodeFrameHash5EqualEPKN2v814CpuProfileNodeES4_(%"class.v8::CpuProfileNode"* %65, %"class.v8::CpuProfileNode"* %71) #9
  br i1 %72, label %79, label %73

73:                                               ; preds = %70, %59
  %74 = phi %"struct.WTF::KeyValuePair.234"* [ %60, %70 ], [ %63, %59 ]
  %75 = icmp eq i64 %61, 0
  %76 = select i1 %75, i64 %58, i64 %61
  %77 = add i64 %76, %62
  %78 = and i64 %77, %15
  br label %59

79:                                               ; preds = %70, %67
  %80 = phi %"struct.WTF::KeyValuePair.234"* [ %69, %67 ], [ %63, %70 ]
  %81 = bitcast %"struct.WTF::KeyValuePair.234"* %80 to i8*
  %82 = bitcast %"struct.WTF::KeyValuePair.234"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #9
  %83 = load %"struct.WTF::KeyValuePair.234"*, %"struct.WTF::KeyValuePair.234"** %9, align 8
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.234", %"struct.WTF::KeyValuePair.234"* %83, i64 %37
  %85 = icmp eq %"struct.WTF::KeyValuePair.234"* %84, %3
  %86 = select i1 %85, %"struct.WTF::KeyValuePair.234"* %80, %"struct.WTF::KeyValuePair.234"* %35
  %87 = load i32, i32* %6, align 8
  %88 = ptrtoint %"struct.WTF::KeyValuePair.234"* %83 to i64
  br label %89

89:                                               ; preds = %31, %31, %79
  %90 = phi i64 [ %32, %31 ], [ %88, %79 ], [ %32, %31 ]
  %91 = phi i32 [ %33, %31 ], [ %87, %79 ], [ %33, %31 ]
  %92 = phi %"struct.WTF::KeyValuePair.234"* [ %34, %31 ], [ %83, %79 ], [ %34, %31 ]
  %93 = phi %"struct.WTF::KeyValuePair.234"* [ %35, %31 ], [ %86, %79 ], [ %35, %31 ]
  %94 = add i32 %36, 1
  %95 = icmp eq i32 %94, %91
  br i1 %95, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"* } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable.226"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.229"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast i8** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = inttoptr i64 %12 to i8*
  %38 = icmp eq i8* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi i8* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq i8* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %63, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.229"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.229"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.229"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.229"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"* } undef, %"struct.WTF::KeyValuePair.229"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"* } %79, %"struct.WTF::KeyValuePair.229"* %78, 1
  ret { %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"* } %80
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPKcEEvOT_(%"class.WTF::Vector.2"*, i8** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.2"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48
  %50 = load i8*, i8** %1, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = tail call i64 @strlen(i8* nonnull %50) #10
  br label %54

54:                                               ; preds = %45, %52
  %55 = phi i64 [ %53, %52 ], [ 0, %45 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %49, i8* %50, i64 %55) #9
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.229"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RjEENS_18HashTableAddResultISE_S4_EEOT0_OT1_(%"class.WTF::HashTable.226"*, i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.229"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.229"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.226"* %0, %"struct.WTF::KeyValuePair.229"* null)
  %9 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.229"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast i8** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  %43 = inttoptr i64 %17 to i8*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi i8* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.229"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.229"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq i8* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.229"* %60, %"struct.WTF::KeyValuePair.229"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.229"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.229"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.229"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.229"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %89, i64 0, i32 1
  %92 = load i32, i32* %2, align 4
  store i32 %92, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.229"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.226"* %0, %"struct.WTF::KeyValuePair.229"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.229"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.229"*, i8 } undef, %"struct.WTF::KeyValuePair.229"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.229"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.229"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.229"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.226"*, %"struct.WTF::KeyValuePair.229"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKcjEEEES3_v, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.229"*
  %37 = call %"struct.WTF::KeyValuePair.229"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_(%"class.WTF::HashTable.226"* %0, %"struct.WTF::KeyValuePair.229"* %36, i32 %32, %"struct.WTF::KeyValuePair.229"* %1) #9
  ret %"struct.WTF::KeyValuePair.229"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.229"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSF_(%"class.WTF::HashTable.226"*, %"struct.WTF::KeyValuePair.229"*, i32, %"struct.WTF::KeyValuePair.229"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.226", align 8
  %6 = bitcast %"class.WTF::HashTable.226"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.226"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.229"* %1, %"struct.WTF::KeyValuePair.229"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.229"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.226"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.226"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.229"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.226"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.226"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.229"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.229"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.229"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.229"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.229"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.229"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.226"* nonnull %5, i8** dereferenceable(8) %53) #9
  %55 = extractvalue { %"struct.WTF::KeyValuePair.229"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.229"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.229"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #9
  %58 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.229"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.229"* %55, %"struct.WTF::KeyValuePair.229"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.229"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.229"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.229"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.229"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IjEEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.226"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.229"*, %"struct.WTF::KeyValuePair.229"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.226", %"class.WTF::HashTable.226"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast i8** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.229"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %32, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  %37 = inttoptr i64 %10 to i8*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.229"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.229"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.229"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.229"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.229"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi i8* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq i8* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.229"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.229", %"struct.WTF::KeyValuePair.229"* %75, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.229"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.229"*, i8 } undef, %"struct.WTF::KeyValuePair.229"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.229"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.229"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.244"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERiRbEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.241"*, i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.244"*, %"struct.WTF::KeyValuePair.244"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.244"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.244"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.241"* %0, %"struct.WTF::KeyValuePair.244"* null)
  %9 = load %"struct.WTF::KeyValuePair.244"*, %"struct.WTF::KeyValuePair.244"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.244"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.244"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.244"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.244"* %52, %"struct.WTF::KeyValuePair.244"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.244"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.244"* %59 to i64*
  store i64 0, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.244"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %81, i64 0, i32 1
  %84 = load i8, i8* %2, align 1, !range !4
  store i8 %84, i8* %83, align 1
  %85 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair.244"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.241"* %0, %"struct.WTF::KeyValuePair.244"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair.244"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair.244"*, i8 } undef, %"struct.WTF::KeyValuePair.244"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair.244"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair.244"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.244"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.241"*, %"struct.WTF::KeyValuePair.244"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIibEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.244"*
  %37 = call %"struct.WTF::KeyValuePair.244"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_(%"class.WTF::HashTable.241"* %0, %"struct.WTF::KeyValuePair.244"* %36, i32 %32, %"struct.WTF::KeyValuePair.244"* %1) #9
  ret %"struct.WTF::KeyValuePair.244"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.244"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIibEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_(%"class.WTF::HashTable.241"*, %"struct.WTF::KeyValuePair.244"*, i32, %"struct.WTF::KeyValuePair.244"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.244"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.241"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.244"*, %"struct.WTF::KeyValuePair.244"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.244"* %16 to i64
  br label %31

18:                                               ; preds = %118
  %19 = bitcast %"class.WTF::HashTable.241"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %119, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.244"* [ null, %10 ], [ %122, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.241", %"class.WTF::HashTable.241"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.244"* %23

31:                                               ; preds = %13, %118
  %32 = phi i64 [ %17, %13 ], [ %119, %118 ]
  %33 = phi i32 [ %7, %13 ], [ %120, %118 ]
  %34 = phi %"struct.WTF::KeyValuePair.244"* [ %16, %13 ], [ %121, %118 ]
  %35 = phi %"struct.WTF::KeyValuePair.244"* [ null, %13 ], [ %122, %118 ]
  %36 = phi i32 [ 0, %13 ], [ %123, %118 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %118, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair.244"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair.244"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair.244"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair.244"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.244"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair.244"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -1
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair.244"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair.244"*
  %109 = bitcast %"struct.WTF::KeyValuePair.244"* %38 to i64*
  %110 = inttoptr i64 %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = load %"struct.WTF::KeyValuePair.244"*, %"struct.WTF::KeyValuePair.244"** %9, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.244", %"struct.WTF::KeyValuePair.244"* %112, i64 %37
  %114 = icmp eq %"struct.WTF::KeyValuePair.244"* %113, %3
  %115 = select i1 %114, %"struct.WTF::KeyValuePair.244"* %108, %"struct.WTF::KeyValuePair.244"* %35
  %116 = load i32, i32* %6, align 8
  %117 = ptrtoint %"struct.WTF::KeyValuePair.244"* %112 to i64
  br label %118

118:                                              ; preds = %31, %106
  %119 = phi i64 [ %32, %31 ], [ %117, %106 ]
  %120 = phi i32 [ %33, %31 ], [ %116, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair.244"* [ %34, %31 ], [ %112, %106 ]
  %122 = phi %"struct.WTF::KeyValuePair.244"* [ %35, %31 ], [ %115, %106 ]
  %123 = add i32 %36, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %18, label %31
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
