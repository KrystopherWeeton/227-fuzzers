; ModuleID = '../../third_party/skia/src/core/SkCachedData.cpp'
source_filename = "../../third_party/skia/src/core/SkCachedData.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type { i32 (...)** }

$_ZN12SkCachedData12onDataChangeEPvS0_ = comdat any

@_ZTV12SkCachedData = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkCachedData*)* @_ZN12SkCachedDataD2Ev to i8*), i8* bitcast (void (%class.SkCachedData*)* @_ZN12SkCachedDataD0Ev to i8*), i8* bitcast (void (%class.SkCachedData*, i8*, i8*)* @_ZN12SkCachedData12onDataChangeEPvS0_ to i8*)] }, align 8

@_ZN12SkCachedDataC1EPvm = hidden unnamed_addr alias void (%class.SkCachedData*, i8*, i64), void (%class.SkCachedData*, i8*, i64)* @_ZN12SkCachedDataC2EPvm
@_ZN12SkCachedDataC1EmP19SkDiscardableMemory = hidden unnamed_addr alias void (%class.SkCachedData*, i64, %class.SkDiscardableMemory*), void (%class.SkCachedData*, i64, %class.SkDiscardableMemory*)* @_ZN12SkCachedDataC2EmP19SkDiscardableMemory
@_ZN12SkCachedDataD1Ev = hidden unnamed_addr alias void (%class.SkCachedData*), void (%class.SkCachedData*)* @_ZN12SkCachedDataD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12SkCachedDataC2EPvm(%class.SkCachedData* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12SkCachedData, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1, i32 0, i32 2
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %7, align 8
  %8 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 4
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 5
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 7
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 8
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2
  %15 = bitcast %union.anon* %14 to i8**
  store i8* %1, i8** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkCachedDataC2EmP19SkDiscardableMemory(%class.SkCachedData* nocapture, i64, %class.SkDiscardableMemory*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12SkCachedData, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1, i32 0, i32 2
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %7, align 8
  %8 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %9 = bitcast %class.SkDiscardableMemory* %2 to i8* (%class.SkDiscardableMemory*)***
  %10 = load i8* (%class.SkDiscardableMemory*)**, i8* (%class.SkDiscardableMemory*)*** %9, align 8
  %11 = getelementptr inbounds i8* (%class.SkDiscardableMemory*)*, i8* (%class.SkDiscardableMemory*)** %10, i64 3
  %12 = load i8* (%class.SkDiscardableMemory*)*, i8* (%class.SkDiscardableMemory*)** %11, align 8
  %13 = tail call i8* %12(%class.SkDiscardableMemory* %2) #5
  store i8* %13, i8** %8, align 8
  %14 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 4
  store i64 %1, i64* %14, align 8
  %15 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 5
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 7
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 8
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2, i32 0
  store %class.SkDiscardableMemory* %2, %class.SkDiscardableMemory** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkCachedDataD2Ev(%class.SkCachedData*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12SkCachedData, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %18 [
    i32 1, label %5
    i32 0, label %9
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2
  %7 = bitcast %union.anon* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_Z7sk_freePv(i8* %8) #5
  br label %18

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2, i32 0
  %11 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %10, align 8
  %12 = icmp eq %class.SkDiscardableMemory* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = bitcast %class.SkDiscardableMemory* %11 to void (%class.SkDiscardableMemory*)***
  %15 = load void (%class.SkDiscardableMemory*)**, void (%class.SkDiscardableMemory*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %15, i64 1
  %17 = load void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %16, align 8
  tail call void %17(%class.SkDiscardableMemory* nonnull %11) #5
  br label %18

18:                                               ; preds = %9, %13, %1, %5
  %19 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %19) #5
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkCachedDataD0Ev(%class.SkCachedData*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12SkCachedData, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %18 [
    i32 1, label %5
    i32 0, label %9
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2
  %7 = bitcast %union.anon* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_Z7sk_freePv(i8* %8) #5
  br label %18

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2, i32 0
  %11 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %10, align 8
  %12 = icmp eq %class.SkDiscardableMemory* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = bitcast %class.SkDiscardableMemory* %11 to void (%class.SkDiscardableMemory*)***
  %15 = load void (%class.SkDiscardableMemory*)**, void (%class.SkDiscardableMemory*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %15, i64 1
  %17 = load void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %16, align 8
  tail call void %17(%class.SkDiscardableMemory* nonnull %11) #5
  br label %18

18:                                               ; preds = %1, %5, %9, %13
  %19 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %19) #5
  %20 = bitcast %class.SkCachedData* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw sub i32* %4, i32 1 acquire
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %8) #5
  br label %9

9:                                                ; preds = %2, %7
  tail call void @_ZN12SkCachedData10inMutexRefEb(%class.SkCachedData* %0, i1 zeroext %1)
  %10 = atomicrmw add i32* %4, i32 1 release
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %13, i32 1) #5
  br label %14

14:                                               ; preds = %9, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkCachedData10inMutexRefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %58

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 8
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %58 [
    i32 1, label %14
    i32 0, label %26
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2
  %16 = bitcast %union.anon* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, %17
  br i1 %20, label %58, label %21

21:                                               ; preds = %14
  %22 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %23 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %23, i64 2
  %25 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %24, align 8
  tail call void %25(%class.SkCachedData* %0, i8* %19, i8* %17) #5
  store i8* %17, i8** %18, align 8
  br label %58

26:                                               ; preds = %10
  %27 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2, i32 0
  %28 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %27, align 8
  %29 = bitcast %class.SkDiscardableMemory* %28 to i1 (%class.SkDiscardableMemory*)***
  %30 = load i1 (%class.SkDiscardableMemory*)**, i1 (%class.SkDiscardableMemory*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%class.SkDiscardableMemory*)*, i1 (%class.SkDiscardableMemory*)** %30, i64 2
  %32 = load i1 (%class.SkDiscardableMemory*)*, i1 (%class.SkDiscardableMemory*)** %31, align 8
  %33 = tail call zeroext i1 %32(%class.SkDiscardableMemory* %28) #5
  br i1 %33, label %34, label %49

34:                                               ; preds = %26
  %35 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %27, align 8
  %36 = bitcast %class.SkDiscardableMemory* %35 to i8* (%class.SkDiscardableMemory*)***
  %37 = load i8* (%class.SkDiscardableMemory*)**, i8* (%class.SkDiscardableMemory*)*** %36, align 8
  %38 = getelementptr inbounds i8* (%class.SkDiscardableMemory*)*, i8* (%class.SkDiscardableMemory*)** %37, i64 3
  %39 = load i8* (%class.SkDiscardableMemory*)*, i8* (%class.SkDiscardableMemory*)** %38, align 8
  %40 = tail call i8* %39(%class.SkDiscardableMemory* %35) #5
  %41 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, %40
  br i1 %43, label %58, label %44

44:                                               ; preds = %34
  %45 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %46 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %46, i64 2
  %48 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %47, align 8
  tail call void %48(%class.SkCachedData* %0, i8* %42, i8* %40) #5
  store i8* %40, i8** %41, align 8
  br label %58

49:                                               ; preds = %26
  %50 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %55 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %55, i64 2
  %57 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %56, align 8
  tail call void %57(%class.SkCachedData* %0, i8* nonnull %51, i8* null) #5
  store i8* null, i8** %50, align 8
  br label %58

58:                                               ; preds = %53, %49, %44, %34, %21, %14, %10, %6, %2
  %59 = load i32, i32* %3, align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %3, align 8
  br i1 %1, label %61, label %63

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 7
  store i8 1, i8* %62, align 8
  br label %63

63:                                               ; preds = %61, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw sub i32* %4, i32 1 acquire
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %8) #5
  br label %9

9:                                                ; preds = %2, %7
  %10 = tail call zeroext i1 @_ZN12SkCachedData12inMutexUnrefEb(%class.SkCachedData* %0, i1 zeroext %1)
  %11 = atomicrmw add i32* %4, i32 1 release
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %3, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %14, i32 1) #5
  br label %15

15:                                               ; preds = %9, %13
  %16 = xor i1 %10, true
  %17 = icmp eq %class.SkCachedData* %0, null
  %18 = or i1 %17, %16
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*)***
  %21 = load void (%class.SkCachedData*)**, void (%class.SkCachedData*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkCachedData*)*, void (%class.SkCachedData*)** %21, i64 1
  %23 = load void (%class.SkCachedData*)*, void (%class.SkCachedData*)** %22, align 8
  tail call void %23(%class.SkCachedData* nonnull %0) #5
  br label %24

24:                                               ; preds = %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkCachedData12inMutexUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* %3, align 8
  switch i32 %4, label %64 [
    i32 1, label %6
    i32 2, label %34
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 8
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %64, label %10

10:                                               ; preds = %6
  store i8 0, i8* %7, align 1
  %11 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2, i32 0
  %20 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %19, align 8
  %21 = bitcast %class.SkDiscardableMemory* %20 to void (%class.SkDiscardableMemory*)***
  %22 = load void (%class.SkDiscardableMemory*)**, void (%class.SkDiscardableMemory*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %22, i64 4
  %24 = load void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %23, align 8
  tail call void %24(%class.SkDiscardableMemory* %20) #5
  br label %25

25:                                               ; preds = %18, %14, %10
  %26 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %64, label %29

29:                                               ; preds = %25
  %30 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %31 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %31, i64 2
  %33 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %32, align 8
  tail call void %33(%class.SkCachedData* %0, i8* nonnull %27, i8* null) #5
  store i8* null, i8** %26, align 8
  br label %64

34:                                               ; preds = %2
  %35 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 7
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = or i1 %37, %1
  br i1 %38, label %64, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 8
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %55

44:                                               ; preds = %39
  %45 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2, i32 0
  %50 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %49, align 8
  %51 = bitcast %class.SkDiscardableMemory* %50 to void (%class.SkDiscardableMemory*)***
  %52 = load void (%class.SkDiscardableMemory*)**, void (%class.SkDiscardableMemory*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %52, i64 4
  %54 = load void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %53, align 8
  tail call void %54(%class.SkDiscardableMemory* %50) #5
  br label %55

55:                                               ; preds = %48, %44, %39
  %56 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %61 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %61, i64 2
  %63 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %62, align 8
  tail call void %63(%class.SkCachedData* %0, i8* nonnull %57, i8* null) #5
  store i8* null, i8** %56, align 8
  br label %64

64:                                               ; preds = %59, %55, %29, %25, %34, %6, %2
  br i1 %1, label %65, label %67

65:                                               ; preds = %64
  %66 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 7
  store i8 0, i8* %66, align 8
  br label %67

67:                                               ; preds = %65, %64
  %68 = load i32, i32* %3, align 8
  %69 = icmp eq i32 %68, 0
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkCachedData11inMutexLockEv(%class.SkCachedData*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 8
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %49 [
    i32 1, label %5
    i32 0, label %17
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2
  %7 = bitcast %union.anon* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, %8
  br i1 %11, label %49, label %12

12:                                               ; preds = %5
  %13 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %14 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %14, i64 2
  %16 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %15, align 8
  tail call void %16(%class.SkCachedData* %0, i8* %10, i8* %8) #5
  store i8* %8, i8** %9, align 8
  br label %49

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2, i32 0
  %19 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %18, align 8
  %20 = bitcast %class.SkDiscardableMemory* %19 to i1 (%class.SkDiscardableMemory*)***
  %21 = load i1 (%class.SkDiscardableMemory*)**, i1 (%class.SkDiscardableMemory*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%class.SkDiscardableMemory*)*, i1 (%class.SkDiscardableMemory*)** %21, i64 2
  %23 = load i1 (%class.SkDiscardableMemory*)*, i1 (%class.SkDiscardableMemory*)** %22, align 8
  %24 = tail call zeroext i1 %23(%class.SkDiscardableMemory* %19) #5
  br i1 %24, label %25, label %40

25:                                               ; preds = %17
  %26 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %18, align 8
  %27 = bitcast %class.SkDiscardableMemory* %26 to i8* (%class.SkDiscardableMemory*)***
  %28 = load i8* (%class.SkDiscardableMemory*)**, i8* (%class.SkDiscardableMemory*)*** %27, align 8
  %29 = getelementptr inbounds i8* (%class.SkDiscardableMemory*)*, i8* (%class.SkDiscardableMemory*)** %28, i64 3
  %30 = load i8* (%class.SkDiscardableMemory*)*, i8* (%class.SkDiscardableMemory*)** %29, align 8
  %31 = tail call i8* %30(%class.SkDiscardableMemory* %26) #5
  %32 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, %31
  br i1 %34, label %49, label %35

35:                                               ; preds = %25
  %36 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %37 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %37, i64 2
  %39 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %38, align 8
  tail call void %39(%class.SkCachedData* %0, i8* %33, i8* %31) #5
  store i8* %31, i8** %32, align 8
  br label %49

40:                                               ; preds = %17
  %41 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %46 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %46, i64 2
  %48 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %47, align 8
  tail call void %48(%class.SkCachedData* %0, i8* nonnull %42, i8* null) #5
  store i8* null, i8** %41, align 8
  br label %49

49:                                               ; preds = %44, %40, %35, %25, %12, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkCachedData13inMutexUnlockEv(%class.SkCachedData*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 8
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 2, i32 0
  %12 = load %class.SkDiscardableMemory*, %class.SkDiscardableMemory** %11, align 8
  %13 = bitcast %class.SkDiscardableMemory* %12 to void (%class.SkDiscardableMemory*)***
  %14 = load void (%class.SkDiscardableMemory*)**, void (%class.SkDiscardableMemory*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %14, i64 4
  %16 = load void (%class.SkDiscardableMemory*)*, void (%class.SkDiscardableMemory*)** %15, align 8
  tail call void %16(%class.SkDiscardableMemory* %12) #5
  br label %17

17:                                               ; preds = %6, %10, %1
  %18 = getelementptr inbounds %class.SkCachedData, %class.SkCachedData* %0, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = bitcast %class.SkCachedData* %0 to void (%class.SkCachedData*, i8*, i8*)***
  %23 = load void (%class.SkCachedData*, i8*, i8*)**, void (%class.SkCachedData*, i8*, i8*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %23, i64 2
  %25 = load void (%class.SkCachedData*, i8*, i8*)*, void (%class.SkCachedData*, i8*, i8*)** %24, align 8
  tail call void %25(%class.SkCachedData* %0, i8* nonnull %19, i8* null) #5
  store i8* null, i8** %18, align 8
  br label %26

26:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkCachedData12onDataChangeEPvS0_(%class.SkCachedData*, i8*, i8*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #4

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
