; ModuleID = '../../third_party/vulkan-deps/vulkan-validation-layers/src/layers/vk_format_utils.cpp'
source_filename = "../../third_party/vulkan-deps/vulkan-validation-layers/src/layers/vk_format_utils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::pair" = type { i32, %struct.VULKAN_FORMAT_INFO }
%struct.VULKAN_FORMAT_INFO = type { i32, i32, i32 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::pair.14" = type { i32, %struct.VULKAN_MULTIPLANE_COMPATIBILITY }
%struct.VULKAN_MULTIPLANE_COMPATIBILITY = type { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] }
%struct.VULKAN_PER_PLANE_COMPATIBILITY = type { i32, i32, i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.17" }
%"class.std::__1::__tree.17" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::less" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"class.std::__1::__tree_node.34" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.35", [4 x i8] }
%"struct.std::__1::__value_type.35" = type { %"struct.std::__1::pair.14" }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__tree_node.46" = type { %"class.std::__1::__tree_node_base.base", i32 }

$_ZNSt3__13mapI8VkFormat18VULKAN_FORMAT_INFONS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEEC2ESt16initializer_listIS8_ERKS4_ = comdat any

$_ZNSt3__13mapI8VkFormat18VULKAN_FORMAT_INFONS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEED2Ev = comdat any

$_ZNSt3__13mapI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEEC2ESt16initializer_listIS8_ERKS4_ = comdat any

$_ZNSt3__13mapI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEED2Ev = comdat any

$_ZNSt3__13setI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEED2Ev = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeI8VkFormat18VULKAN_FORMAT_INFOEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__13setI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE6insertIPKS1_EEvT_SA_ = comdat any

$_ZNSt3__16__treeI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE = comdat any

@_ZL14kVkFormatTable = internal global %"class.std::__1::map" zeroinitializer, align 8
@.ref.tmp = private constant [243 x %"struct.std::__1::pair"] [%"struct.std::__1::pair" zeroinitializer, %"struct.std::__1::pair" { i32 1, %struct.VULKAN_FORMAT_INFO { i32 1, i32 2, i32 1 } }, %"struct.std::__1::pair" { i32 2, %struct.VULKAN_FORMAT_INFO { i32 2, i32 4, i32 2 } }, %"struct.std::__1::pair" { i32 3, %struct.VULKAN_FORMAT_INFO { i32 2, i32 4, i32 2 } }, %"struct.std::__1::pair" { i32 1000340000, %struct.VULKAN_FORMAT_INFO { i32 2, i32 4, i32 2 } }, %"struct.std::__1::pair" { i32 1000340001, %struct.VULKAN_FORMAT_INFO { i32 2, i32 4, i32 2 } }, %"struct.std::__1::pair" { i32 4, %struct.VULKAN_FORMAT_INFO { i32 2, i32 3, i32 2 } }, %"struct.std::__1::pair" { i32 5, %struct.VULKAN_FORMAT_INFO { i32 2, i32 3, i32 2 } }, %"struct.std::__1::pair" { i32 6, %struct.VULKAN_FORMAT_INFO { i32 2, i32 4, i32 2 } }, %"struct.std::__1::pair" { i32 7, %struct.VULKAN_FORMAT_INFO { i32 2, i32 4, i32 2 } }, %"struct.std::__1::pair" { i32 8, %struct.VULKAN_FORMAT_INFO { i32 2, i32 4, i32 2 } }, %"struct.std::__1::pair" { i32 9, %struct.VULKAN_FORMAT_INFO { i32 1, i32 1, i32 1 } }, %"struct.std::__1::pair" { i32 10, %struct.VULKAN_FORMAT_INFO { i32 1, i32 1, i32 1 } }, %"struct.std::__1::pair" { i32 11, %struct.VULKAN_FORMAT_INFO { i32 1, i32 1, i32 1 } }, %"struct.std::__1::pair" { i32 12, %struct.VULKAN_FORMAT_INFO { i32 1, i32 1, i32 1 } }, %"struct.std::__1::pair" { i32 13, %struct.VULKAN_FORMAT_INFO { i32 1, i32 1, i32 1 } }, %"struct.std::__1::pair" { i32 14, %struct.VULKAN_FORMAT_INFO { i32 1, i32 1, i32 1 } }, %"struct.std::__1::pair" { i32 15, %struct.VULKAN_FORMAT_INFO { i32 1, i32 1, i32 1 } }, %"struct.std::__1::pair" { i32 16, %struct.VULKAN_FORMAT_INFO { i32 2, i32 2, i32 2 } }, %"struct.std::__1::pair" { i32 17, %struct.VULKAN_FORMAT_INFO { i32 2, i32 2, i32 2 } }, %"struct.std::__1::pair" { i32 18, %struct.VULKAN_FORMAT_INFO { i32 2, i32 2, i32 2 } }, %"struct.std::__1::pair" { i32 19, %struct.VULKAN_FORMAT_INFO { i32 2, i32 2, i32 2 } }, %"struct.std::__1::pair" { i32 20, %struct.VULKAN_FORMAT_INFO { i32 2, i32 2, i32 2 } }, %"struct.std::__1::pair" { i32 21, %struct.VULKAN_FORMAT_INFO { i32 2, i32 2, i32 2 } }, %"struct.std::__1::pair" { i32 22, %struct.VULKAN_FORMAT_INFO { i32 2, i32 2, i32 2 } }, %"struct.std::__1::pair" { i32 23, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 24, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 25, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 26, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 27, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 28, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 29, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 30, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 31, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 32, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 33, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 34, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 35, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 36, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 3 } }, %"struct.std::__1::pair" { i32 37, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 38, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 39, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 40, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 41, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 42, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 43, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 44, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 45, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 46, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 47, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 48, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 49, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 50, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 51, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 52, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 53, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 54, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 55, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 56, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 57, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 58, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 59, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 60, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 61, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 62, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 63, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 64, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 65, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 66, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 67, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 68, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 69, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 4 } }, %"struct.std::__1::pair" { i32 70, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 71, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 72, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 73, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 74, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 75, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 76, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 77, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 4 } }, %"struct.std::__1::pair" { i32 78, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 4 } }, %"struct.std::__1::pair" { i32 79, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 4 } }, %"struct.std::__1::pair" { i32 80, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 4 } }, %"struct.std::__1::pair" { i32 81, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 4 } }, %"struct.std::__1::pair" { i32 82, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 4 } }, %"struct.std::__1::pair" { i32 83, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 4 } }, %"struct.std::__1::pair" { i32 84, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 5 } }, %"struct.std::__1::pair" { i32 85, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 5 } }, %"struct.std::__1::pair" { i32 86, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 5 } }, %"struct.std::__1::pair" { i32 87, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 5 } }, %"struct.std::__1::pair" { i32 88, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 5 } }, %"struct.std::__1::pair" { i32 89, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 5 } }, %"struct.std::__1::pair" { i32 90, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 5 } }, %"struct.std::__1::pair" { i32 91, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 6 } }, %"struct.std::__1::pair" { i32 92, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 6 } }, %"struct.std::__1::pair" { i32 93, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 6 } }, %"struct.std::__1::pair" { i32 94, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 6 } }, %"struct.std::__1::pair" { i32 95, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 6 } }, %"struct.std::__1::pair" { i32 96, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 6 } }, %"struct.std::__1::pair" { i32 97, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 6 } }, %"struct.std::__1::pair" { i32 98, %struct.VULKAN_FORMAT_INFO { i32 4, i32 1, i32 4 } }, %"struct.std::__1::pair" { i32 99, %struct.VULKAN_FORMAT_INFO { i32 4, i32 1, i32 4 } }, %"struct.std::__1::pair" { i32 100, %struct.VULKAN_FORMAT_INFO { i32 4, i32 1, i32 4 } }, %"struct.std::__1::pair" { i32 101, %struct.VULKAN_FORMAT_INFO { i32 8, i32 2, i32 6 } }, %"struct.std::__1::pair" { i32 102, %struct.VULKAN_FORMAT_INFO { i32 8, i32 2, i32 6 } }, %"struct.std::__1::pair" { i32 103, %struct.VULKAN_FORMAT_INFO { i32 8, i32 2, i32 6 } }, %"struct.std::__1::pair" { i32 104, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 7 } }, %"struct.std::__1::pair" { i32 105, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 7 } }, %"struct.std::__1::pair" { i32 106, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 7 } }, %"struct.std::__1::pair" { i32 107, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 8 } }, %"struct.std::__1::pair" { i32 108, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 8 } }, %"struct.std::__1::pair" { i32 109, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 8 } }, %"struct.std::__1::pair" { i32 110, %struct.VULKAN_FORMAT_INFO { i32 8, i32 1, i32 6 } }, %"struct.std::__1::pair" { i32 111, %struct.VULKAN_FORMAT_INFO { i32 8, i32 1, i32 6 } }, %"struct.std::__1::pair" { i32 112, %struct.VULKAN_FORMAT_INFO { i32 8, i32 1, i32 6 } }, %"struct.std::__1::pair" { i32 113, %struct.VULKAN_FORMAT_INFO { i32 16, i32 2, i32 8 } }, %"struct.std::__1::pair" { i32 114, %struct.VULKAN_FORMAT_INFO { i32 16, i32 2, i32 8 } }, %"struct.std::__1::pair" { i32 115, %struct.VULKAN_FORMAT_INFO { i32 16, i32 2, i32 8 } }, %"struct.std::__1::pair" { i32 116, %struct.VULKAN_FORMAT_INFO { i32 24, i32 3, i32 9 } }, %"struct.std::__1::pair" { i32 117, %struct.VULKAN_FORMAT_INFO { i32 24, i32 3, i32 9 } }, %"struct.std::__1::pair" { i32 118, %struct.VULKAN_FORMAT_INFO { i32 24, i32 3, i32 9 } }, %"struct.std::__1::pair" { i32 119, %struct.VULKAN_FORMAT_INFO { i32 32, i32 4, i32 10 } }, %"struct.std::__1::pair" { i32 120, %struct.VULKAN_FORMAT_INFO { i32 32, i32 4, i32 10 } }, %"struct.std::__1::pair" { i32 121, %struct.VULKAN_FORMAT_INFO { i32 32, i32 4, i32 10 } }, %"struct.std::__1::pair" { i32 122, %struct.VULKAN_FORMAT_INFO { i32 4, i32 3, i32 4 } }, %"struct.std::__1::pair" { i32 123, %struct.VULKAN_FORMAT_INFO { i32 4, i32 3, i32 4 } }, %"struct.std::__1::pair" { i32 124, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 0 } }, %"struct.std::__1::pair" { i32 125, %struct.VULKAN_FORMAT_INFO { i32 4, i32 1, i32 0 } }, %"struct.std::__1::pair" { i32 126, %struct.VULKAN_FORMAT_INFO { i32 4, i32 1, i32 0 } }, %"struct.std::__1::pair" { i32 127, %struct.VULKAN_FORMAT_INFO { i32 1, i32 1, i32 0 } }, %"struct.std::__1::pair" { i32 128, %struct.VULKAN_FORMAT_INFO { i32 3, i32 2, i32 0 } }, %"struct.std::__1::pair" { i32 129, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 0 } }, %"struct.std::__1::pair" { i32 130, %struct.VULKAN_FORMAT_INFO { i32 8, i32 2, i32 0 } }, %"struct.std::__1::pair" { i32 131, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 11 } }, %"struct.std::__1::pair" { i32 132, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 11 } }, %"struct.std::__1::pair" { i32 133, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 12 } }, %"struct.std::__1::pair" { i32 134, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 12 } }, %"struct.std::__1::pair" { i32 135, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 13 } }, %"struct.std::__1::pair" { i32 136, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 13 } }, %"struct.std::__1::pair" { i32 137, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 14 } }, %"struct.std::__1::pair" { i32 138, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 14 } }, %"struct.std::__1::pair" { i32 139, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 15 } }, %"struct.std::__1::pair" { i32 140, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 15 } }, %"struct.std::__1::pair" { i32 141, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 16 } }, %"struct.std::__1::pair" { i32 142, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 16 } }, %"struct.std::__1::pair" { i32 143, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 17 } }, %"struct.std::__1::pair" { i32 144, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 17 } }, %"struct.std::__1::pair" { i32 145, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 18 } }, %"struct.std::__1::pair" { i32 146, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 18 } }, %"struct.std::__1::pair" { i32 147, %struct.VULKAN_FORMAT_INFO { i32 8, i32 3, i32 19 } }, %"struct.std::__1::pair" { i32 148, %struct.VULKAN_FORMAT_INFO { i32 8, i32 3, i32 19 } }, %"struct.std::__1::pair" { i32 149, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 20 } }, %"struct.std::__1::pair" { i32 150, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 20 } }, %"struct.std::__1::pair" { i32 151, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 21 } }, %"struct.std::__1::pair" { i32 152, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 21 } }, %"struct.std::__1::pair" { i32 153, %struct.VULKAN_FORMAT_INFO { i32 8, i32 1, i32 22 } }, %"struct.std::__1::pair" { i32 154, %struct.VULKAN_FORMAT_INFO { i32 8, i32 1, i32 22 } }, %"struct.std::__1::pair" { i32 155, %struct.VULKAN_FORMAT_INFO { i32 16, i32 2, i32 23 } }, %"struct.std::__1::pair" { i32 156, %struct.VULKAN_FORMAT_INFO { i32 16, i32 2, i32 23 } }, %"struct.std::__1::pair" { i32 157, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 24 } }, %"struct.std::__1::pair" { i32 158, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 24 } }, %"struct.std::__1::pair" { i32 1000066000, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 24 } }, %"struct.std::__1::pair" { i32 159, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 25 } }, %"struct.std::__1::pair" { i32 160, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 25 } }, %"struct.std::__1::pair" { i32 1000066001, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 25 } }, %"struct.std::__1::pair" { i32 161, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 26 } }, %"struct.std::__1::pair" { i32 162, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 26 } }, %"struct.std::__1::pair" { i32 1000066002, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 26 } }, %"struct.std::__1::pair" { i32 163, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 27 } }, %"struct.std::__1::pair" { i32 164, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 27 } }, %"struct.std::__1::pair" { i32 1000066003, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 27 } }, %"struct.std::__1::pair" { i32 165, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 28 } }, %"struct.std::__1::pair" { i32 166, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 28 } }, %"struct.std::__1::pair" { i32 1000066004, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 28 } }, %"struct.std::__1::pair" { i32 167, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 29 } }, %"struct.std::__1::pair" { i32 168, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 29 } }, %"struct.std::__1::pair" { i32 1000066005, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 29 } }, %"struct.std::__1::pair" { i32 169, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 20 } }, %"struct.std::__1::pair" { i32 170, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 20 } }, %"struct.std::__1::pair" { i32 1000066006, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 20 } }, %"struct.std::__1::pair" { i32 171, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 31 } }, %"struct.std::__1::pair" { i32 172, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 31 } }, %"struct.std::__1::pair" { i32 1000066007, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 31 } }, %"struct.std::__1::pair" { i32 173, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 32 } }, %"struct.std::__1::pair" { i32 174, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 32 } }, %"struct.std::__1::pair" { i32 1000066008, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 32 } }, %"struct.std::__1::pair" { i32 175, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 33 } }, %"struct.std::__1::pair" { i32 176, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 33 } }, %"struct.std::__1::pair" { i32 1000066009, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 33 } }, %"struct.std::__1::pair" { i32 177, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 34 } }, %"struct.std::__1::pair" { i32 178, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 34 } }, %"struct.std::__1::pair" { i32 1000066010, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 34 } }, %"struct.std::__1::pair" { i32 179, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 35 } }, %"struct.std::__1::pair" { i32 180, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 35 } }, %"struct.std::__1::pair" { i32 1000066011, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 35 } }, %"struct.std::__1::pair" { i32 181, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 36 } }, %"struct.std::__1::pair" { i32 182, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 36 } }, %"struct.std::__1::pair" { i32 1000066012, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 36 } }, %"struct.std::__1::pair" { i32 183, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 37 } }, %"struct.std::__1::pair" { i32 184, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 37 } }, %"struct.std::__1::pair" { i32 1000066013, %struct.VULKAN_FORMAT_INFO { i32 16, i32 4, i32 37 } }, %"struct.std::__1::pair" { i32 1000054000, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 45 } }, %"struct.std::__1::pair" { i32 1000054001, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 46 } }, %"struct.std::__1::pair" { i32 1000054002, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 47 } }, %"struct.std::__1::pair" { i32 1000054003, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 48 } }, %"struct.std::__1::pair" { i32 1000054004, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 45 } }, %"struct.std::__1::pair" { i32 1000054005, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 46 } }, %"struct.std::__1::pair" { i32 1000054006, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 47 } }, %"struct.std::__1::pair" { i32 1000054007, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 48 } }, %"struct.std::__1::pair" { i32 1000156007, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 1000156008, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 4 } }, %"struct.std::__1::pair" { i32 1000156009, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 51 } }, %"struct.std::__1::pair" { i32 1000156017, %struct.VULKAN_FORMAT_INFO { i32 2, i32 1, i32 2 } }, %"struct.std::__1::pair" { i32 1000156018, %struct.VULKAN_FORMAT_INFO { i32 4, i32 2, i32 2 } }, %"struct.std::__1::pair" { i32 1000156019, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 54 } }, %"struct.std::__1::pair" { i32 1000156000, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 49 } }, %"struct.std::__1::pair" { i32 1000156001, %struct.VULKAN_FORMAT_INFO { i32 4, i32 4, i32 50 } }, %"struct.std::__1::pair" { i32 1000156010, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 52 } }, %"struct.std::__1::pair" { i32 1000156011, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 53 } }, %"struct.std::__1::pair" { i32 1000156020, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 55 } }, %"struct.std::__1::pair" { i32 1000156021, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 56 } }, %"struct.std::__1::pair" { i32 1000156027, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 57 } }, %"struct.std::__1::pair" { i32 1000156028, %struct.VULKAN_FORMAT_INFO { i32 8, i32 4, i32 58 } }, %"struct.std::__1::pair" { i32 1000156002, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 59 } }, %"struct.std::__1::pair" { i32 1000156003, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 60 } }, %"struct.std::__1::pair" { i32 1000156012, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 64 } }, %"struct.std::__1::pair" { i32 1000156013, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 65 } }, %"struct.std::__1::pair" { i32 1000156022, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 69 } }, %"struct.std::__1::pair" { i32 1000156023, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 70 } }, %"struct.std::__1::pair" { i32 1000156029, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 74 } }, %"struct.std::__1::pair" { i32 1000156030, %struct.VULKAN_FORMAT_INFO { i32 12, i32 3, i32 75 } }, %"struct.std::__1::pair" { i32 1000156004, %struct.VULKAN_FORMAT_INFO { i32 4, i32 3, i32 61 } }, %"struct.std::__1::pair" { i32 1000156005, %struct.VULKAN_FORMAT_INFO { i32 4, i32 3, i32 62 } }, %"struct.std::__1::pair" { i32 1000156014, %struct.VULKAN_FORMAT_INFO { i32 8, i32 3, i32 66 } }, %"struct.std::__1::pair" { i32 1000156015, %struct.VULKAN_FORMAT_INFO { i32 8, i32 3, i32 67 } }, %"struct.std::__1::pair" { i32 1000156024, %struct.VULKAN_FORMAT_INFO { i32 8, i32 3, i32 71 } }, %"struct.std::__1::pair" { i32 1000156025, %struct.VULKAN_FORMAT_INFO { i32 8, i32 3, i32 72 } }, %"struct.std::__1::pair" { i32 1000156031, %struct.VULKAN_FORMAT_INFO { i32 8, i32 3, i32 76 } }, %"struct.std::__1::pair" { i32 1000156032, %struct.VULKAN_FORMAT_INFO { i32 8, i32 3, i32 77 } }, %"struct.std::__1::pair" { i32 1000156006, %struct.VULKAN_FORMAT_INFO { i32 3, i32 3, i32 63 } }, %"struct.std::__1::pair" { i32 1000156016, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 68 } }, %"struct.std::__1::pair" { i32 1000156026, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 73 } }, %"struct.std::__1::pair" { i32 1000156033, %struct.VULKAN_FORMAT_INFO { i32 6, i32 3, i32 78 } }], align 4
@__dso_handle = external hidden global i8
@_ZL29kVkMultiplaneCompatibilityMap = internal global %"class.std::__1::map.4" zeroinitializer, align 8
@.ref.tmp.2 = private constant [20 x %"struct.std::__1::pair.14"] [%"struct.std::__1::pair.14" { i32 1000156002, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 9 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 9 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 9 }] } }, %"struct.std::__1::pair.14" { i32 1000156003, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 9 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 16 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 0 }] } }, %"struct.std::__1::pair.14" { i32 1000156004, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 9 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 9 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 9 }] } }, %"struct.std::__1::pair.14" { i32 1000156005, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 9 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 16 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 0 }] } }, %"struct.std::__1::pair.14" { i32 1000156006, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 9 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 9 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 9 }] } }, %"struct.std::__1::pair.14" { i32 1000156012, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156007 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 1000156007 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 1000156007 }] } }, %"struct.std::__1::pair.14" { i32 1000156013, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156007 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 1000156008 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 0 }] } }, %"struct.std::__1::pair.14" { i32 1000156014, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156007 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 1000156007 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 1000156007 }] } }, %"struct.std::__1::pair.14" { i32 1000156015, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156007 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 1000156008 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 0 }] } }, %"struct.std::__1::pair.14" { i32 1000156016, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156007 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156007 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156007 }] } }, %"struct.std::__1::pair.14" { i32 1000156022, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156017 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 1000156017 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 1000156017 }] } }, %"struct.std::__1::pair.14" { i32 1000156023, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156017 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 1000156018 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 0 }] } }, %"struct.std::__1::pair.14" { i32 1000156024, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156017 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 1000156017 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 1000156017 }] } }, %"struct.std::__1::pair.14" { i32 1000156025, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156017 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 1000156018 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 0 }] } }, %"struct.std::__1::pair.14" { i32 1000156026, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156017 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156017 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 1000156017 }] } }, %"struct.std::__1::pair.14" { i32 1000156029, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 70 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 70 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 70 }] } }, %"struct.std::__1::pair.14" { i32 1000156030, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 70 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 2, i32 77 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 0 }] } }, %"struct.std::__1::pair.14" { i32 1000156031, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 70 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 70 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 70 }] } }, %"struct.std::__1::pair.14" { i32 1000156032, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 70 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 2, i32 1, i32 77 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 0 }] } }, %"struct.std::__1::pair.14" { i32 1000156033, %struct.VULKAN_MULTIPLANE_COMPATIBILITY { [3 x %struct.VULKAN_PER_PLANE_COMPATIBILITY] [%struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 70 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 70 }, %struct.VULKAN_PER_PLANE_COMPATIBILITY { i32 1, i32 1, i32 70 }] } }], align 4
@_ZL34kVkFormatsRequiringYcbcrConversion = internal global %"class.std::__1::set" zeroinitializer, align 8
@.ref.tmp.4 = private constant [30 x i32] [i32 1000156000, i32 1000156001, i32 1000156002, i32 1000156003, i32 1000156004, i32 1000156005, i32 1000156006, i32 1000156009, i32 1000156010, i32 1000156011, i32 1000156012, i32 1000156013, i32 1000156014, i32 1000156015, i32 1000156016, i32 1000156019, i32 1000156020, i32 1000156021, i32 1000156022, i32 1000156023, i32 1000156024, i32 1000156025, i32 1000156026, i32 1000156027, i32 1000156028, i32 1000156029, i32 1000156030, i32 1000156031, i32 1000156032, i32 1000156033], align 4
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_vk_format_utils.cpp, i8* null }]
@switch.table.FormatDepthSize = private unnamed_addr constant [7 x i32] [i32 16, i32 24, i32 32, i32 0, i32 16, i32 24, i32 32], align 4
@switch.table.FormatDepthNumericalType = private unnamed_addr constant [7 x i32] [i32 3, i32 3, i32 8, i32 0, i32 3, i32 3, i32 8], align 4
@switch.table.FormatPlaneCount = private unnamed_addr constant [32 x i32] [i32 3, i32 2, i32 3, i32 2, i32 3, i32 1, i32 1, i32 1, i32 1, i32 1, i32 3, i32 2, i32 3, i32 2, i32 3, i32 1, i32 1, i32 1, i32 1, i32 1, i32 3, i32 2, i32 3, i32 2, i32 3, i32 1, i32 1, i32 3, i32 2, i32 3, i32 2, i32 3], align 4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapI8VkFormat18VULKAN_FORMAT_INFONS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEEC2ESt16initializer_listIS8_ERKS4_(%"class.std::__1::map"*, %"struct.std::__1::pair"*, i64, %"struct.std::__1::less"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %2
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %116, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::map"* %0 to i64*
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = ptrtoint %"class.std::__1::__tree_end_node"* %6 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %16

16:                                               ; preds = %112, %11
  %17 = phi %"class.std::__1::__tree_node"* [ null, %11 ], [ %115, %112 ]
  %18 = phi %"class.std::__1::__tree_node_base"* [ null, %11 ], [ %114, %112 ]
  %19 = phi %"class.std::__1::__tree_end_node"* [ %6, %11 ], [ %113, %112 ]
  %20 = phi %"struct.std::__1::pair"* [ %1, %11 ], [ %110, %112 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %19, %6
  br i1 %22, label %49, label %23

23:                                               ; preds = %16
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23, %25
  %26 = phi %"class.std::__1::__tree_node_base"* [ %28, %25 ], [ %18, %23 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %41, label %25

30:                                               ; preds = %23, %30
  %31 = phi %"class.std::__1::__tree_end_node"* [ %35, %30 ], [ %6, %23 ]
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 2
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_end_node"**
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, %32
  br i1 %38, label %30, label %39

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  br label %41

41:                                               ; preds = %25, %39
  %42 = phi %"class.std::__1::__tree_node_base"* [ %40, %39 ], [ %26, %25 ]
  %43 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 4, i64 3
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %21, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %41, %16
  %50 = phi i64 [ %43, %41 ], [ %14, %16 ]
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %51, label %83, label %52

52:                                               ; preds = %49
  %53 = inttoptr i64 %50 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 1
  br label %83

55:                                               ; preds = %41
  %56 = icmp eq %"class.std::__1::__tree_node"* %17, null
  br i1 %56, label %83, label %57

57:                                               ; preds = %55, %79
  %58 = phi %"class.std::__1::__tree_node"* [ %82, %79 ], [ %17, %55 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %81, %79 ], [ %5, %55 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %47, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %79

67:                                               ; preds = %63
  %68 = ptrtoint %"class.std::__1::__tree_node"* %58 to i64
  br label %83

69:                                               ; preds = %57
  %70 = icmp slt i32 %61, %47
  br i1 %70, label %71, label %77

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = ptrtoint %"class.std::__1::__tree_node"* %58 to i64
  br label %83

77:                                               ; preds = %69
  %78 = ptrtoint %"class.std::__1::__tree_node"* %58 to i64
  br label %83

79:                                               ; preds = %71, %63
  %80 = phi %"class.std::__1::__tree_node_base"* [ %65, %63 ], [ %73, %71 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %64, %63 ], [ %72, %71 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"* %80 to %"class.std::__1::__tree_node"*
  br label %57

83:                                               ; preds = %55, %49, %52, %67, %75, %77
  %84 = phi i64 [ %50, %52 ], [ %68, %67 ], [ %76, %75 ], [ %78, %77 ], [ %14, %49 ], [ %14, %55 ]
  %85 = phi %"class.std::__1::__tree_node_base"** [ %54, %52 ], [ %64, %67 ], [ %72, %75 ], [ %59, %77 ], [ %15, %49 ], [ %15, %55 ]
  %86 = bitcast %"class.std::__1::__tree_node_base"** %85 to %"class.std::__1::__tree_node"**
  %87 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node"* %87, null
  br i1 %88, label %89, label %109

89:                                               ; preds = %83
  %90 = tail call i8* @_Znwm(i64 48) #9, !noalias !2
  %91 = getelementptr inbounds i8, i8* %90, i64 28
  %92 = bitcast %"struct.std::__1::pair"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 16, i1 false) #8, !noalias !2
  %93 = bitcast i8* %90 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds i8, i8* %90, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #8
  %95 = bitcast i8* %94 to i64*
  store i64 %84, i64* %95, align 8
  %96 = bitcast %"class.std::__1::__tree_node_base"** %85 to i8**
  store i8* %90, i8** %96, align 8
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %89
  %102 = ptrtoint %"class.std::__1::__tree_node_base"* %99 to i64
  store i64 %102, i64* %12, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  br label %104

104:                                              ; preds = %101, %89
  %105 = phi %"class.std::__1::__tree_node_base"* [ %93, %89 ], [ %103, %101 ]
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %106, %"class.std::__1::__tree_node_base"* %105) #8
  %107 = load i64, i64* %13, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %13, align 8
  br label %109

109:                                              ; preds = %104, %83
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 1
  %111 = icmp eq %"struct.std::__1::pair"* %110, %9
  br i1 %111, label %116, label %112

112:                                              ; preds = %109
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"* %114 to %"class.std::__1::__tree_node"*
  br label %16

116:                                              ; preds = %109, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapI8VkFormat18VULKAN_FORMAT_INFONS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEED2Ev(%"class.std::__1::map"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI8VkFormat18VULKAN_FORMAT_INFOEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #8
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsCompressed_ETC2_EAC(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -147
  %3 = icmp ult i32 %2, 10
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsCompressed_ASTC(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -157
  %3 = icmp ult i32 %2, 28
  %4 = add i32 %0, -1000066000
  %5 = icmp ult i32 %4, 14
  %6 = or i1 %3, %5
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsCompressed_ASTC_LDR(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -157
  %3 = icmp ult i32 %2, 28
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsCompressed_ASTC_HDR(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1000066000
  %3 = icmp ult i32 %2, 14
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsCompressed_BC(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -131
  %3 = icmp ult i32 %2, 16
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsCompressed_PVRTC(i32) local_unnamed_addr #3 {
  %2 = and i32 %0, -8
  %3 = icmp eq i32 %2, 1000054000
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsSinglePlane_422(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1000156000
  %3 = icmp ult i32 %2, 29
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i29
  %6 = lshr i29 -131068925, %5
  %7 = and i29 %6, 1
  %8 = icmp ne i29 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsCompressed(i32) local_unnamed_addr #3 {
  %2 = insertelement <4 x i32> undef, i32 %0, i32 0
  %3 = shufflevector <4 x i32> %2, <4 x i32> undef, <4 x i32> zeroinitializer
  %4 = add <4 x i32> %3, <i32 -147, i32 -131, i32 -157, i32 -1000066000>
  %5 = icmp ult <4 x i32> %4, <i32 10, i32 16, i32 28, i32 14>
  %6 = shufflevector <4 x i1> %5, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %7 = or <4 x i1> %5, %6
  %8 = shufflevector <4 x i1> %7, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %9 = or <4 x i1> %7, %8
  %10 = extractelement <4 x i1> %9, i32 0
  %11 = and i32 %0, -8
  %12 = icmp eq i32 %11, 1000054000
  %13 = select i1 %10, i1 true, i1 %12
  ret i1 %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsPacked(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 1, label %2
    i32 2, label %2
    i32 3, label %2
    i32 1000340000, label %2
    i32 1000340001, label %2
    i32 4, label %2
    i32 5, label %2
    i32 6, label %2
    i32 7, label %2
    i32 8, label %2
    i32 51, label %2
    i32 52, label %2
    i32 53, label %2
    i32 54, label %2
    i32 55, label %2
    i32 56, label %2
    i32 57, label %2
    i32 58, label %2
    i32 59, label %2
    i32 60, label %2
    i32 61, label %2
    i32 62, label %2
    i32 63, label %2
    i32 64, label %2
    i32 65, label %2
    i32 66, label %2
    i32 67, label %2
    i32 68, label %2
    i32 69, label %2
    i32 122, label %2
    i32 123, label %2
    i32 125, label %2
    i32 1000156007, label %2
    i32 1000156008, label %2
    i32 1000156009, label %2
    i32 1000156010, label %2
    i32 1000156011, label %2
    i32 1000156017, label %2
    i32 1000156018, label %2
    i32 1000156019, label %2
    i32 1000156020, label %2
    i32 1000156021, label %2
    i32 1000156012, label %2
    i32 1000156013, label %2
    i32 1000156014, label %2
    i32 1000156015, label %2
    i32 1000156016, label %2
    i32 1000156022, label %2
    i32 1000156023, label %2
    i32 1000156024, label %2
    i32 1000156025, label %2
    i32 1000156026, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatElementIsTexel(i32) local_unnamed_addr #3 {
  %2 = tail call zeroext i1 @FormatIsPacked(i32 %0)
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = insertelement <4 x i32> undef, i32 %0, i32 0
  %5 = shufflevector <4 x i32> %4, <4 x i32> undef, <4 x i32> zeroinitializer
  %6 = add <4 x i32> %5, <i32 -147, i32 -131, i32 -157, i32 -1000066000>
  %7 = icmp ult <4 x i32> %6, <i32 10, i32 16, i32 28, i32 14>
  %8 = shufflevector <4 x i1> %7, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %9 = or <4 x i1> %7, %8
  %10 = shufflevector <4 x i1> %9, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %11 = or <4 x i1> %9, %10
  %12 = extractelement <4 x i1> %11, i32 0
  %13 = and i32 %0, -8
  %14 = icmp eq i32 %13, 1000054000
  %15 = or i1 %14, %12
  br i1 %15, label %24, label %16

16:                                               ; preds = %3
  %17 = add i32 %0, -1000156000
  %18 = icmp ult i32 %17, 34
  br i1 %18, label %19, label %24

19:                                               ; preds = %16
  %20 = zext i32 %17 to i34
  %21 = lshr i34 918400, %20
  %22 = and i34 %21, 1
  %23 = icmp ne i34 %22, 0
  ret i1 %23

24:                                               ; preds = %1, %3, %16
  %25 = phi i1 [ true, %16 ], [ false, %3 ], [ false, %1 ]
  ret i1 %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsDepthOrStencil(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -124
  %3 = icmp ult i32 %2, 7
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsDepthAndStencil(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -128
  %3 = icmp ult i32 %2, 3
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsDepthOnly(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -124
  %3 = icmp ult i32 %2, 3
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsStencilOnly(i32) local_unnamed_addr #3 {
  %2 = icmp eq i32 %0, 127
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsNorm(i32) local_unnamed_addr #3 {
  %2 = tail call zeroext i1 @FormatIsUNorm(i32 %0)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @FormatIsSNorm(i32 %0)
  br label %5

5:                                                ; preds = %3, %1
  %6 = phi i1 [ true, %1 ], [ %4, %3 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsUNorm(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 1, label %2
    i32 2, label %2
    i32 3, label %2
    i32 1000340000, label %2
    i32 1000340001, label %2
    i32 4, label %2
    i32 6, label %2
    i32 8, label %2
    i32 9, label %2
    i32 16, label %2
    i32 23, label %2
    i32 37, label %2
    i32 51, label %2
    i32 64, label %2
    i32 70, label %2
    i32 77, label %2
    i32 84, label %2
    i32 91, label %2
    i32 131, label %2
    i32 135, label %2
    i32 137, label %2
    i32 139, label %2
    i32 141, label %2
    i32 145, label %2
    i32 147, label %2
    i32 149, label %2
    i32 151, label %2
    i32 153, label %2
    i32 155, label %2
    i32 157, label %2
    i32 159, label %2
    i32 161, label %2
    i32 163, label %2
    i32 165, label %2
    i32 167, label %2
    i32 169, label %2
    i32 171, label %2
    i32 173, label %2
    i32 175, label %2
    i32 177, label %2
    i32 179, label %2
    i32 181, label %2
    i32 183, label %2
    i32 5, label %2
    i32 30, label %2
    i32 44, label %2
    i32 58, label %2
    i32 1000156000, label %2
    i32 1000156001, label %2
    i32 1000156002, label %2
    i32 1000156003, label %2
    i32 1000156004, label %2
    i32 1000156005, label %2
    i32 1000156006, label %2
    i32 1000156009, label %2
    i32 1000156010, label %2
    i32 1000156011, label %2
    i32 1000156012, label %2
    i32 1000156013, label %2
    i32 1000156014, label %2
    i32 1000156015, label %2
    i32 1000156016, label %2
    i32 1000156019, label %2
    i32 1000156020, label %2
    i32 1000156021, label %2
    i32 1000156022, label %2
    i32 1000156023, label %2
    i32 1000156024, label %2
    i32 1000156025, label %2
    i32 1000156026, label %2
    i32 1000156027, label %2
    i32 1000156028, label %2
    i32 1000156029, label %2
    i32 1000156030, label %2
    i32 1000156031, label %2
    i32 1000156032, label %2
    i32 1000156033, label %2
    i32 7, label %2
    i32 133, label %2
    i32 1000054000, label %2
    i32 1000054001, label %2
    i32 1000054002, label %2
    i32 1000054003, label %2
    i32 1000156007, label %2
    i32 1000156008, label %2
    i32 1000156017, label %2
    i32 1000156018, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsSNorm(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 10, label %2
    i32 17, label %2
    i32 24, label %2
    i32 38, label %2
    i32 52, label %2
    i32 65, label %2
    i32 71, label %2
    i32 78, label %2
    i32 85, label %2
    i32 92, label %2
    i32 140, label %2
    i32 142, label %2
    i32 154, label %2
    i32 156, label %2
    i32 31, label %2
    i32 45, label %2
    i32 59, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsInt(i32) local_unnamed_addr #3 {
  %2 = tail call zeroext i1 @FormatIsSInt(i32 %0)
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @FormatIsUInt(i32 %0)
  br label %5

5:                                                ; preds = %3, %1
  %6 = phi i1 [ true, %1 ], [ %4, %3 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsSInt(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 14, label %2
    i32 21, label %2
    i32 28, label %2
    i32 42, label %2
    i32 56, label %2
    i32 69, label %2
    i32 75, label %2
    i32 82, label %2
    i32 89, label %2
    i32 96, label %2
    i32 99, label %2
    i32 102, label %2
    i32 105, label %2
    i32 108, label %2
    i32 111, label %2
    i32 114, label %2
    i32 117, label %2
    i32 120, label %2
    i32 35, label %2
    i32 49, label %2
    i32 63, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsUInt(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 13, label %2
    i32 127, label %2
    i32 20, label %2
    i32 27, label %2
    i32 41, label %2
    i32 55, label %2
    i32 68, label %2
    i32 74, label %2
    i32 81, label %2
    i32 88, label %2
    i32 95, label %2
    i32 98, label %2
    i32 101, label %2
    i32 104, label %2
    i32 107, label %2
    i32 110, label %2
    i32 113, label %2
    i32 116, label %2
    i32 119, label %2
    i32 34, label %2
    i32 48, label %2
    i32 62, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsFloat(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 76, label %2
    i32 83, label %2
    i32 90, label %2
    i32 97, label %2
    i32 100, label %2
    i32 103, label %2
    i32 106, label %2
    i32 109, label %2
    i32 112, label %2
    i32 115, label %2
    i32 118, label %2
    i32 121, label %2
    i32 122, label %2
    i32 123, label %2
    i32 143, label %2
    i32 144, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsSRGB(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 15, label %2
    i32 22, label %2
    i32 29, label %2
    i32 43, label %2
    i32 57, label %2
    i32 132, label %2
    i32 136, label %2
    i32 138, label %2
    i32 146, label %2
    i32 148, label %2
    i32 150, label %2
    i32 152, label %2
    i32 158, label %2
    i32 160, label %2
    i32 162, label %2
    i32 164, label %2
    i32 166, label %2
    i32 168, label %2
    i32 170, label %2
    i32 172, label %2
    i32 174, label %2
    i32 176, label %2
    i32 178, label %2
    i32 180, label %2
    i32 182, label %2
    i32 184, label %2
    i32 36, label %2
    i32 50, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsUScaled(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 11, label %2
    i32 18, label %2
    i32 25, label %2
    i32 32, label %2
    i32 39, label %2
    i32 46, label %2
    i32 53, label %2
    i32 60, label %2
    i32 66, label %2
    i32 72, label %2
    i32 79, label %2
    i32 86, label %2
    i32 93, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsSScaled(i32) local_unnamed_addr #3 {
  switch i32 %0, label %3 [
    i32 12, label %2
    i32 19, label %2
    i32 26, label %2
    i32 33, label %2
    i32 40, label %2
    i32 47, label %2
    i32 54, label %2
    i32 61, label %2
    i32 67, label %2
    i32 73, label %2
    i32 80, label %2
    i32 87, label %2
    i32 94, label %2
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %3

3:                                                ; preds = %1, %2
  %4 = phi i1 [ false, %1 ], [ true, %2 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsSampledInt(i32) local_unnamed_addr #3 {
  %2 = tail call zeroext i1 @FormatIsSInt(i32 %0) #8
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @FormatIsUInt(i32 %0) #8
  br label %5

5:                                                ; preds = %1, %3
  %6 = phi i1 [ true, %1 ], [ %4, %3 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsSampledFloat(i32) local_unnamed_addr #3 {
  %2 = tail call zeroext i1 @FormatIsUNorm(i32 %0)
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @FormatIsSNorm(i32 %0)
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @FormatIsUScaled(i32 %0)
  br i1 %6, label %13, label %7

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @FormatIsSScaled(i32 %0)
  br i1 %8, label %13, label %9

9:                                                ; preds = %7
  %10 = tail call zeroext i1 @FormatIsFloat(i32 %0)
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @FormatIsSRGB(i32 %0)
  br label %13

13:                                               ; preds = %11, %9, %7, %5, %3, %1
  %14 = phi i1 [ true, %9 ], [ true, %7 ], [ true, %5 ], [ true, %3 ], [ true, %1 ], [ %12, %11 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define { i64, i32 } @FormatTexelBlockExtent(i32) local_unnamed_addr #3 {
  switch i32 %0, label %21 [
    i32 131, label %2
    i32 132, label %2
    i32 133, label %2
    i32 134, label %2
    i32 135, label %2
    i32 136, label %2
    i32 137, label %2
    i32 138, label %2
    i32 139, label %2
    i32 140, label %2
    i32 141, label %2
    i32 142, label %2
    i32 143, label %2
    i32 144, label %2
    i32 145, label %2
    i32 146, label %2
    i32 147, label %2
    i32 148, label %2
    i32 149, label %2
    i32 150, label %2
    i32 151, label %2
    i32 152, label %2
    i32 153, label %2
    i32 154, label %2
    i32 155, label %2
    i32 156, label %2
    i32 157, label %2
    i32 158, label %2
    i32 1000066000, label %2
    i32 159, label %3
    i32 160, label %3
    i32 1000066001, label %3
    i32 161, label %4
    i32 162, label %4
    i32 1000066002, label %4
    i32 163, label %5
    i32 164, label %5
    i32 1000066003, label %5
    i32 165, label %6
    i32 166, label %6
    i32 1000066004, label %6
    i32 167, label %7
    i32 168, label %7
    i32 1000066005, label %7
    i32 169, label %8
    i32 170, label %8
    i32 1000066006, label %8
    i32 171, label %9
    i32 172, label %9
    i32 1000066007, label %9
    i32 173, label %10
    i32 174, label %10
    i32 1000066008, label %10
    i32 175, label %11
    i32 176, label %11
    i32 1000066009, label %11
    i32 177, label %12
    i32 178, label %12
    i32 1000066010, label %12
    i32 179, label %13
    i32 180, label %13
    i32 1000066011, label %13
    i32 181, label %14
    i32 182, label %14
    i32 1000066012, label %14
    i32 183, label %15
    i32 184, label %15
    i32 1000066013, label %15
    i32 1000054000, label %16
    i32 1000054002, label %16
    i32 1000054004, label %16
    i32 1000054006, label %16
    i32 1000054001, label %17
    i32 1000054003, label %17
    i32 1000054005, label %17
    i32 1000054007, label %17
    i32 1000156000, label %18
    i32 1000156001, label %18
    i32 1000156010, label %18
    i32 1000156011, label %18
    i32 1000156020, label %18
    i32 1000156021, label %18
    i32 1000156027, label %18
    i32 1000156028, label %18
    i32 1000156004, label %19
    i32 1000156005, label %19
    i32 1000156014, label %19
    i32 1000156015, label %19
    i32 1000156024, label %19
    i32 1000156025, label %19
    i32 1000156031, label %19
    i32 1000156032, label %19
    i32 1000156002, label %20
    i32 1000156003, label %20
    i32 1000156012, label %20
    i32 1000156013, label %20
    i32 1000156022, label %20
    i32 1000156023, label %20
    i32 1000156029, label %20
    i32 1000156030, label %20
  ]

2:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %21

3:                                                ; preds = %1, %1, %1
  br label %21

4:                                                ; preds = %1, %1, %1
  br label %21

5:                                                ; preds = %1, %1, %1
  br label %21

6:                                                ; preds = %1, %1, %1
  br label %21

7:                                                ; preds = %1, %1, %1
  br label %21

8:                                                ; preds = %1, %1, %1
  br label %21

9:                                                ; preds = %1, %1, %1
  br label %21

10:                                               ; preds = %1, %1, %1
  br label %21

11:                                               ; preds = %1, %1, %1
  br label %21

12:                                               ; preds = %1, %1, %1
  br label %21

13:                                               ; preds = %1, %1, %1
  br label %21

14:                                               ; preds = %1, %1, %1
  br label %21

15:                                               ; preds = %1, %1, %1
  br label %21

16:                                               ; preds = %1, %1, %1, %1
  br label %21

17:                                               ; preds = %1, %1, %1, %1
  br label %21

18:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1
  br label %21

19:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1
  br label %21

20:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1
  br label %21

21:                                               ; preds = %1, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %22 = phi i64 [ 1, %1 ], [ 2, %20 ], [ 2, %19 ], [ 2, %18 ], [ 4, %17 ], [ 8, %16 ], [ 12, %15 ], [ 12, %14 ], [ 10, %13 ], [ 10, %12 ], [ 10, %11 ], [ 10, %10 ], [ 8, %9 ], [ 8, %8 ], [ 8, %7 ], [ 6, %6 ], [ 6, %5 ], [ 5, %4 ], [ 5, %3 ], [ 4, %2 ]
  %23 = phi i64 [ 4294967296, %1 ], [ 8589934592, %20 ], [ 4294967296, %19 ], [ 4294967296, %18 ], [ 17179869184, %17 ], [ 17179869184, %16 ], [ 51539607552, %15 ], [ 42949672960, %14 ], [ 42949672960, %13 ], [ 34359738368, %12 ], [ 25769803776, %11 ], [ 21474836480, %10 ], [ 34359738368, %9 ], [ 25769803776, %8 ], [ 21474836480, %7 ], [ 25769803776, %6 ], [ 21474836480, %5 ], [ 21474836480, %4 ], [ 17179869184, %3 ], [ 17179869184, %2 ]
  %24 = or i64 %23, %22
  %25 = insertvalue { i64, i32 } undef, i64 %24, 0
  %26 = insertvalue { i64, i32 } %25, i32 1, 1
  ret { i64, i32 } %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #0

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i32 @FormatDepthSize(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -124
  %3 = icmp ult i32 %2, 7
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table.FormatDepthSize, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i32 @FormatDepthNumericalType(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -124
  %3 = icmp ult i32 %2, 7
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table.FormatDepthNumericalType, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i32 @FormatStencilSize(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -127
  %3 = icmp ult i32 %2, 4
  %4 = select i1 %3, i32 8, i32 0
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i32 @FormatStencilNumericalType(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -127
  %3 = icmp ult i32 %2, 4
  %4 = zext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i32 @FormatPlaneCount(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1000156002
  %3 = icmp ult i32 %2, 32
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [32 x i32], [32 x i32]* @switch.table.FormatPlaneCount, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 1
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @FormatCompatibilityClass(i32) local_unnamed_addr #4 {
  %2 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node"**), align 8
  %3 = icmp eq %"class.std::__1::__tree_node"* %2, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %1, %4
  %5 = phi %"class.std::__1::__tree_end_node"* [ %15, %4 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %1 ]
  %6 = phi %"class.std::__1::__tree_node"* [ %16, %4 ], [ %2, %1 ]
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %0
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %6, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::__tree_node_base"** %10 to %"class.std::__1::__tree_node"**
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node"* %6 to %"class.std::__1::__tree_node"**
  %14 = select i1 %9, %"class.std::__1::__tree_node"** %11, %"class.std::__1::__tree_node"** %13
  %15 = select i1 %9, %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"* %12
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %17 = icmp eq %"class.std::__1::__tree_node"* %16, null
  br i1 %17, label %18, label %4

18:                                               ; preds = %4
  %19 = icmp eq %"class.std::__1::__tree_end_node"* %15, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %0
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 5
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to i32*
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %20, %18, %1, %25
  %30 = phi i32 [ %28, %25 ], [ 0, %1 ], [ 0, %18 ], [ 0, %20 ]
  ret i32 %30
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @FormatElementSize(i32, i32) local_unnamed_addr #4 {
  %3 = and i32 %1, 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %47

5:                                                ; preds = %2
  %6 = and i32 %1, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  switch i32 %0, label %47 [
    i32 128, label %9
    i32 129, label %76
    i32 130, label %10
  ]

9:                                                ; preds = %8
  br label %47

10:                                               ; preds = %8
  br label %47

11:                                               ; preds = %5
  switch i32 %0, label %47 [
    i32 1000156002, label %12
    i32 1000156004, label %12
    i32 1000156006, label %12
    i32 1000156012, label %12
    i32 1000156014, label %12
    i32 1000156016, label %12
    i32 1000156022, label %12
    i32 1000156024, label %12
    i32 1000156026, label %12
    i32 1000156029, label %12
    i32 1000156031, label %12
    i32 1000156033, label %12
    i32 1000156003, label %12
    i32 1000156005, label %12
    i32 1000156013, label %12
    i32 1000156015, label %12
    i32 1000156023, label %12
    i32 1000156025, label %12
    i32 1000156030, label %12
    i32 1000156032, label %12
  ]

12:                                               ; preds = %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11
  switch i32 %1, label %15 [
    i32 16, label %16
    i32 32, label %13
    i32 64, label %14
  ]

13:                                               ; preds = %12
  br label %16

14:                                               ; preds = %12
  br label %16

15:                                               ; preds = %12
  br label %16

16:                                               ; preds = %15, %14, %13, %12
  %17 = phi i32 [ 3, %15 ], [ 2, %14 ], [ 1, %13 ], [ 0, %12 ]
  %18 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node.34"**), align 8
  %19 = icmp eq %"class.std::__1::__tree_node.34"* %18, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %16, %20
  %21 = phi %"class.std::__1::__tree_end_node"* [ %31, %20 ], [ getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0), %16 ]
  %22 = phi %"class.std::__1::__tree_node.34"* [ %32, %20 ], [ %18, %16 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %0
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %22, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::__tree_node_base"** %26 to %"class.std::__1::__tree_node.34"**
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %22, i64 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node.34"* %22 to %"class.std::__1::__tree_node.34"**
  %30 = select i1 %25, %"class.std::__1::__tree_node.34"** %27, %"class.std::__1::__tree_node.34"** %29
  %31 = select i1 %25, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %28
  %32 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %30, align 8
  %33 = icmp eq %"class.std::__1::__tree_node.34"* %32, null
  br i1 %33, label %34, label %20

34:                                               ; preds = %20
  %35 = icmp eq %"class.std::__1::__tree_end_node"* %31, getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %35, label %47, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node.34"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %37, i64 0, i32 1, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, %0
  %41 = icmp eq i32 %17, 3
  %42 = or i1 %41, %40
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = zext i32 %17 to i64
  %45 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %37, i64 0, i32 1, i32 0, i32 1, i32 0, i64 %44, i32 2
  %46 = load i32, i32* %45, align 4
  br label %47

47:                                               ; preds = %43, %36, %34, %16, %11, %2, %8, %10, %9
  %48 = phi i32 [ %0, %8 ], [ 126, %10 ], [ 124, %9 ], [ 127, %2 ], [ %0, %11 ], [ %46, %43 ], [ 0, %16 ], [ 0, %34 ], [ 0, %36 ]
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node"**), align 8
  %50 = icmp eq %"class.std::__1::__tree_node"* %49, null
  br i1 %50, label %76, label %51

51:                                               ; preds = %47, %51
  %52 = phi %"class.std::__1::__tree_end_node"* [ %62, %51 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %47 ]
  %53 = phi %"class.std::__1::__tree_node"* [ %63, %51 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 1, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, %48
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::__tree_node_base"** %57 to %"class.std::__1::__tree_node"**
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::__tree_node"* %53 to %"class.std::__1::__tree_node"**
  %61 = select i1 %56, %"class.std::__1::__tree_node"** %58, %"class.std::__1::__tree_node"** %60
  %62 = select i1 %56, %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"* %59
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %51

65:                                               ; preds = %51
  %66 = icmp eq %"class.std::__1::__tree_end_node"* %62, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %66, label %76, label %67

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_node"*
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 1, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %48, %70
  br i1 %71, label %76, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 4
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to i32*
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %72, %47, %65, %67, %8
  %77 = phi i32 [ 3, %8 ], [ %75, %72 ], [ 0, %47 ], [ 0, %65 ], [ 0, %67 ]
  ret i32 %77
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @FindMultiplaneCompatibleFormat(i32, i32) local_unnamed_addr #4 {
  switch i32 %1, label %5 [
    i32 16, label %6
    i32 32, label %3
    i32 64, label %4
  ]

3:                                                ; preds = %2
  br label %6

4:                                                ; preds = %2
  br label %6

5:                                                ; preds = %2
  br label %6

6:                                                ; preds = %2, %3, %4, %5
  %7 = phi i32 [ 3, %5 ], [ 2, %4 ], [ 1, %3 ], [ 0, %2 ]
  %8 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node.34"**), align 8
  %9 = icmp eq %"class.std::__1::__tree_node.34"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_end_node"* [ %21, %10 ], [ getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0), %6 ]
  %12 = phi %"class.std::__1::__tree_node.34"* [ %22, %10 ], [ %8, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %0
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node.34"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node.34"* %12 to %"class.std::__1::__tree_node.34"**
  %20 = select i1 %15, %"class.std::__1::__tree_node.34"** %17, %"class.std::__1::__tree_node.34"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node.34"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %25, label %37, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node.34"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, %0
  %31 = icmp eq i32 %7, 3
  %32 = or i1 %31, %30
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = zext i32 %7 to i64
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %27, i64 0, i32 1, i32 0, i32 1, i32 0, i64 %34, i32 2
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %26, %24, %6, %33
  %38 = phi i32 [ %36, %33 ], [ 0, %6 ], [ 0, %24 ], [ 0, %26 ]
  ret i32 %38
}

; Function Attrs: nounwind readonly ssp uwtable
define double @FormatTexelSize(i32, i32) local_unnamed_addr #4 {
  %3 = tail call i32 @FormatElementSize(i32 %0, i32 %1)
  %4 = uitofp i32 %3 to double
  %5 = tail call { i64, i32 } @FormatTexelBlockExtent(i32 %0)
  %6 = extractvalue { i64, i32 } %5, 0
  %7 = trunc i64 %6 to i32
  %8 = lshr i64 %6, 32
  %9 = trunc i64 %8 to i32
  %10 = mul i32 %9, %7
  %11 = icmp ugt i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = uitofp i32 %10 to double
  %14 = fdiv double %4, %13
  br label %15

15:                                               ; preds = %12, %2
  %16 = phi double [ %14, %12 ], [ %4, %2 ]
  ret double %16
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @FormatChannelCount(i32) local_unnamed_addr #4 {
  %2 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node"**), align 8
  %3 = icmp eq %"class.std::__1::__tree_node"* %2, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %1, %4
  %5 = phi %"class.std::__1::__tree_end_node"* [ %15, %4 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %1 ]
  %6 = phi %"class.std::__1::__tree_node"* [ %16, %4 ], [ %2, %1 ]
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %0
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %6, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::__tree_node_base"** %10 to %"class.std::__1::__tree_node"**
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node"* %6 to %"class.std::__1::__tree_node"**
  %14 = select i1 %9, %"class.std::__1::__tree_node"** %11, %"class.std::__1::__tree_node"** %13
  %15 = select i1 %9, %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"* %12
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %17 = icmp eq %"class.std::__1::__tree_node"* %16, null
  br i1 %17, label %18, label %4

18:                                               ; preds = %4
  %19 = icmp eq %"class.std::__1::__tree_end_node"* %15, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 1, i32 0, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %20, %18, %1, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %1 ], [ 0, %18 ], [ 0, %20 ]
  ret i32 %29
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i64 @SafeModulo(i64, i64) local_unnamed_addr #3 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = urem i64 %0, %1
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  ret i64 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i64 @SafeDivision(i64, i64) local_unnamed_addr #3 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = udiv i64 %0, %1
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEEC2ESt16initializer_listIS8_ERKS4_(%"class.std::__1::map.4"*, %"struct.std::__1::pair.14"*, i64, %"struct.std::__1::less"* dereferenceable(1)) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.14", %"struct.std::__1::pair.14"* %1, i64 %2
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %116, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::map.4"* %0 to i64*
  %13 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = ptrtoint %"class.std::__1::__tree_end_node"* %6 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %16

16:                                               ; preds = %112, %11
  %17 = phi %"class.std::__1::__tree_node.34"* [ null, %11 ], [ %115, %112 ]
  %18 = phi %"class.std::__1::__tree_node_base"* [ null, %11 ], [ %114, %112 ]
  %19 = phi %"class.std::__1::__tree_end_node"* [ %6, %11 ], [ %113, %112 ]
  %20 = phi %"struct.std::__1::pair.14"* [ %1, %11 ], [ %110, %112 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair.14", %"struct.std::__1::pair.14"* %20, i64 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %19, %6
  br i1 %22, label %49, label %23

23:                                               ; preds = %16
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23, %25
  %26 = phi %"class.std::__1::__tree_node_base"* [ %28, %25 ], [ %18, %23 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %41, label %25

30:                                               ; preds = %23, %30
  %31 = phi %"class.std::__1::__tree_end_node"* [ %35, %30 ], [ %6, %23 ]
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 2
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_end_node"**
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, %32
  br i1 %38, label %30, label %39

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  br label %41

41:                                               ; preds = %25, %39
  %42 = phi %"class.std::__1::__tree_node_base"* [ %40, %39 ], [ %26, %25 ]
  %43 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 4, i64 3
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %21, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %41, %16
  %50 = phi i64 [ %43, %41 ], [ %14, %16 ]
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %51, label %83, label %52

52:                                               ; preds = %49
  %53 = inttoptr i64 %50 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 1
  br label %83

55:                                               ; preds = %41
  %56 = icmp eq %"class.std::__1::__tree_node.34"* %17, null
  br i1 %56, label %83, label %57

57:                                               ; preds = %55, %79
  %58 = phi %"class.std::__1::__tree_node.34"* [ %82, %79 ], [ %17, %55 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %81, %79 ], [ %5, %55 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %58, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %47, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %58, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %79

67:                                               ; preds = %63
  %68 = ptrtoint %"class.std::__1::__tree_node.34"* %58 to i64
  br label %83

69:                                               ; preds = %57
  %70 = icmp slt i32 %61, %47
  br i1 %70, label %71, label %77

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %58, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = ptrtoint %"class.std::__1::__tree_node.34"* %58 to i64
  br label %83

77:                                               ; preds = %69
  %78 = ptrtoint %"class.std::__1::__tree_node.34"* %58 to i64
  br label %83

79:                                               ; preds = %71, %63
  %80 = phi %"class.std::__1::__tree_node_base"* [ %65, %63 ], [ %73, %71 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %64, %63 ], [ %72, %71 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"* %80 to %"class.std::__1::__tree_node.34"*
  br label %57

83:                                               ; preds = %55, %49, %52, %67, %75, %77
  %84 = phi i64 [ %50, %52 ], [ %68, %67 ], [ %76, %75 ], [ %78, %77 ], [ %14, %49 ], [ %14, %55 ]
  %85 = phi %"class.std::__1::__tree_node_base"** [ %54, %52 ], [ %64, %67 ], [ %72, %75 ], [ %59, %77 ], [ %15, %49 ], [ %15, %55 ]
  %86 = bitcast %"class.std::__1::__tree_node_base"** %85 to %"class.std::__1::__tree_node.34"**
  %87 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node.34"* %87, null
  br i1 %88, label %89, label %109

89:                                               ; preds = %83
  %90 = tail call i8* @_Znwm(i64 72) #9, !noalias !5
  %91 = getelementptr inbounds i8, i8* %90, i64 28
  %92 = bitcast %"struct.std::__1::pair.14"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 40, i1 false) #8, !noalias !5
  %93 = bitcast i8* %90 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds i8, i8* %90, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #8
  %95 = bitcast i8* %94 to i64*
  store i64 %84, i64* %95, align 8
  %96 = bitcast %"class.std::__1::__tree_node_base"** %85 to i8**
  store i8* %90, i8** %96, align 8
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %89
  %102 = ptrtoint %"class.std::__1::__tree_node_base"* %99 to i64
  store i64 %102, i64* %12, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  br label %104

104:                                              ; preds = %101, %89
  %105 = phi %"class.std::__1::__tree_node_base"* [ %93, %89 ], [ %103, %101 ]
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %106, %"class.std::__1::__tree_node_base"* %105) #8
  %107 = load i64, i64* %13, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %13, align 8
  br label %109

109:                                              ; preds = %104, %83
  %110 = getelementptr inbounds %"struct.std::__1::pair.14", %"struct.std::__1::pair.14"* %20, i64 1
  %111 = icmp eq %"struct.std::__1::pair.14"* %110, %9
  br i1 %111, label %116, label %112

112:                                              ; preds = %109
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"* %114 to %"class.std::__1::__tree_node.34"*
  br label %16

116:                                              ; preds = %109, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEED2Ev(%"class.std::__1::map.4"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.34"**
  %5 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.5"* %2, %"class.std::__1::__tree_node.34"* %5) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i32 @GetPlaneIndex(i32) local_unnamed_addr #3 {
  switch i32 %0, label %4 [
    i32 16, label %5
    i32 32, label %2
    i32 64, label %3
  ]

2:                                                ; preds = %1
  br label %5

3:                                                ; preds = %1
  br label %5

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %4, %3, %2
  %6 = phi i32 [ 3, %4 ], [ 2, %3 ], [ 1, %2 ], [ 0, %1 ]
  ret i32 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define i64 @FindMultiplaneExtentDivisors(i32, i32) local_unnamed_addr #4 {
  switch i32 %1, label %5 [
    i32 16, label %6
    i32 32, label %3
    i32 64, label %4
  ]

3:                                                ; preds = %2
  br label %6

4:                                                ; preds = %2
  br label %6

5:                                                ; preds = %2
  br label %6

6:                                                ; preds = %2, %3, %4, %5
  %7 = phi i32 [ 3, %5 ], [ 2, %4 ], [ 1, %3 ], [ 0, %2 ]
  %8 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node.34"**), align 8
  %9 = icmp eq %"class.std::__1::__tree_node.34"* %8, null
  br i1 %9, label %42, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_end_node"* [ %21, %10 ], [ getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0), %6 ]
  %12 = phi %"class.std::__1::__tree_node.34"* [ %22, %10 ], [ %8, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %0
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node.34"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node.34"* %12 to %"class.std::__1::__tree_node.34"**
  %20 = select i1 %15, %"class.std::__1::__tree_node.34"** %17, %"class.std::__1::__tree_node.34"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node.34"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %25, label %42, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node.34"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, %0
  %31 = icmp eq i32 %7, 3
  %32 = or i1 %31, %30
  br i1 %32, label %42, label %33

33:                                               ; preds = %26
  %34 = zext i32 %7 to i64
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %27, i64 0, i32 1, i32 0, i32 1, i32 0, i64 %34, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %27, i64 0, i32 1, i32 0, i32 1, i32 0, i64 %34, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %36 to i64
  br label %42

42:                                               ; preds = %26, %24, %6, %33
  %43 = phi i64 [ %41, %33 ], [ 1, %6 ], [ 1, %24 ], [ 1, %26 ]
  %44 = phi i64 [ %40, %33 ], [ 4294967296, %6 ], [ 4294967296, %24 ], [ 4294967296, %26 ]
  %45 = or i64 %44, %43
  ret i64 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define zeroext i1 @FormatSizesAreEqual(i32, i32, i32, %struct.VkImageCopy* nocapture readonly) local_unnamed_addr #5 {
  switch i32 %0, label %5 [
    i32 1000156002, label %6
    i32 1000156004, label %6
    i32 1000156006, label %6
    i32 1000156012, label %6
    i32 1000156014, label %6
    i32 1000156016, label %6
    i32 1000156022, label %6
    i32 1000156024, label %6
    i32 1000156026, label %6
    i32 1000156029, label %6
    i32 1000156031, label %6
    i32 1000156033, label %6
    i32 1000156003, label %6
    i32 1000156005, label %6
    i32 1000156013, label %6
    i32 1000156015, label %6
    i32 1000156023, label %6
    i32 1000156025, label %6
    i32 1000156030, label %6
    i32 1000156032, label %6
  ]

5:                                                ; preds = %4
  switch i32 %1, label %240 [
    i32 1000156002, label %6
    i32 1000156004, label %6
    i32 1000156006, label %6
    i32 1000156012, label %6
    i32 1000156014, label %6
    i32 1000156016, label %6
    i32 1000156022, label %6
    i32 1000156024, label %6
    i32 1000156026, label %6
    i32 1000156029, label %6
    i32 1000156031, label %6
    i32 1000156033, label %6
    i32 1000156003, label %6
    i32 1000156005, label %6
    i32 1000156013, label %6
    i32 1000156015, label %6
    i32 1000156023, label %6
    i32 1000156025, label %6
    i32 1000156030, label %6
    i32 1000156032, label %6
  ]

6:                                                ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %238, label %8

8:                                                ; preds = %6
  %9 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node.34"**), align 8
  %10 = icmp eq %"class.std::__1::__tree_node.34"* %9, null
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node"**), align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  %13 = zext i32 %2 to i64
  br label %16

14:                                               ; preds = %234
  %15 = icmp eq i64 %237, %13
  br i1 %15, label %238, label %16

16:                                               ; preds = %14, %8
  %17 = phi i64 [ 0, %8 ], [ %237, %14 ]
  switch i32 %0, label %92 [
    i32 1000156002, label %18
    i32 1000156004, label %18
    i32 1000156006, label %18
    i32 1000156012, label %18
    i32 1000156014, label %18
    i32 1000156016, label %18
    i32 1000156022, label %18
    i32 1000156024, label %18
    i32 1000156026, label %18
    i32 1000156029, label %18
    i32 1000156031, label %18
    i32 1000156033, label %18
    i32 1000156003, label %18
    i32 1000156005, label %18
    i32 1000156013, label %18
    i32 1000156015, label %18
    i32 1000156023, label %18
    i32 1000156025, label %18
    i32 1000156030, label %18
    i32 1000156032, label %18
  ]

18:                                               ; preds = %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16
  %19 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %3, i64 %17, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %23 [
    i32 16, label %24
    i32 32, label %21
    i32 64, label %22
  ]

21:                                               ; preds = %18
  br label %24

22:                                               ; preds = %18
  br label %24

23:                                               ; preds = %18
  br label %24

24:                                               ; preds = %23, %22, %21, %18
  %25 = phi i32 [ 3, %23 ], [ 2, %22 ], [ 1, %21 ], [ 0, %18 ]
  br i1 %10, label %65, label %26

26:                                               ; preds = %24, %26
  %27 = phi %"class.std::__1::__tree_end_node"* [ %37, %26 ], [ getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0), %24 ]
  %28 = phi %"class.std::__1::__tree_node.34"* [ %38, %26 ], [ %9, %24 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, %0
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %28, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::__tree_node_base"** %32 to %"class.std::__1::__tree_node.34"**
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %28, i64 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_node.34"* %28 to %"class.std::__1::__tree_node.34"**
  %36 = select i1 %31, %"class.std::__1::__tree_node.34"** %33, %"class.std::__1::__tree_node.34"** %35
  %37 = select i1 %31, %"class.std::__1::__tree_end_node"* %27, %"class.std::__1::__tree_end_node"* %34
  %38 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %36, align 8
  %39 = icmp eq %"class.std::__1::__tree_node.34"* %38, null
  br i1 %39, label %40, label %26

40:                                               ; preds = %26
  %41 = icmp eq %"class.std::__1::__tree_end_node"* %37, getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %41, label %65, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node.34"*
  %44 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %43, i64 0, i32 1, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, %0
  %47 = icmp eq i32 %25, 3
  %48 = or i1 %47, %46
  br i1 %48, label %65, label %49

49:                                               ; preds = %42
  %50 = zext i32 %25 to i64
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %43, i64 0, i32 1, i32 0, i32 1, i32 0, i64 %50, i32 2
  %52 = load i32, i32* %51, align 4
  switch i32 %52, label %65 [
    i32 1000156002, label %53
    i32 1000156004, label %53
    i32 1000156006, label %53
    i32 1000156012, label %53
    i32 1000156014, label %53
    i32 1000156016, label %53
    i32 1000156022, label %53
    i32 1000156024, label %53
    i32 1000156026, label %53
    i32 1000156029, label %53
    i32 1000156031, label %53
    i32 1000156033, label %53
    i32 1000156003, label %53
    i32 1000156005, label %53
    i32 1000156013, label %53
    i32 1000156015, label %53
    i32 1000156023, label %53
    i32 1000156025, label %53
    i32 1000156030, label %53
    i32 1000156032, label %53
  ]

53:                                               ; preds = %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49, %49
  br label %54

54:                                               ; preds = %53, %54
  %55 = phi %"class.std::__1::__tree_node.34"* [ %63, %54 ], [ %9, %53 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %55, i64 0, i32 1, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, %52
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %55, i64 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__tree_node_base"** %59 to %"class.std::__1::__tree_node.34"**
  %61 = bitcast %"class.std::__1::__tree_node.34"* %55 to %"class.std::__1::__tree_node.34"**
  %62 = select i1 %58, %"class.std::__1::__tree_node.34"** %60, %"class.std::__1::__tree_node.34"** %61
  %63 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node.34"* %63, null
  br i1 %64, label %65, label %54

65:                                               ; preds = %54, %42, %40, %24, %49
  %66 = phi i32 [ %52, %49 ], [ 0, %24 ], [ 0, %40 ], [ 0, %42 ], [ 0, %54 ]
  br i1 %12, label %118, label %67

67:                                               ; preds = %65, %67
  %68 = phi %"class.std::__1::__tree_end_node"* [ %78, %67 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %65 ]
  %69 = phi %"class.std::__1::__tree_node"* [ %79, %67 ], [ %11, %65 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 1, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, %66
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::__tree_node_base"** %73 to %"class.std::__1::__tree_node"**
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::__tree_node"* %69 to %"class.std::__1::__tree_node"**
  %77 = select i1 %72, %"class.std::__1::__tree_node"** %74, %"class.std::__1::__tree_node"** %76
  %78 = select i1 %72, %"class.std::__1::__tree_end_node"* %68, %"class.std::__1::__tree_end_node"* %75
  %79 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %77, align 8
  %80 = icmp eq %"class.std::__1::__tree_node"* %79, null
  br i1 %80, label %81, label %67

81:                                               ; preds = %67
  %82 = icmp eq %"class.std::__1::__tree_end_node"* %78, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %82, label %118, label %83

83:                                               ; preds = %81
  %84 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"class.std::__1::__tree_node"*
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %66, %86
  br i1 %87, label %118, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 4
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to i32*
  %91 = load i32, i32* %90, align 4
  br label %118

92:                                               ; preds = %16
  br i1 %12, label %118, label %93

93:                                               ; preds = %92, %93
  %94 = phi %"class.std::__1::__tree_end_node"* [ %104, %93 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %92 ]
  %95 = phi %"class.std::__1::__tree_node"* [ %105, %93 ], [ %11, %92 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, %0
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 0, i32 1
  %100 = bitcast %"class.std::__1::__tree_node_base"** %99 to %"class.std::__1::__tree_node"**
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 0, i32 0
  %102 = bitcast %"class.std::__1::__tree_node"* %95 to %"class.std::__1::__tree_node"**
  %103 = select i1 %98, %"class.std::__1::__tree_node"** %100, %"class.std::__1::__tree_node"** %102
  %104 = select i1 %98, %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"* %101
  %105 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %103, align 8
  %106 = icmp eq %"class.std::__1::__tree_node"* %105, null
  br i1 %106, label %107, label %93

107:                                              ; preds = %93
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %104, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %108, label %118, label %109

109:                                              ; preds = %107
  %110 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_node"*
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 1, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %112, %0
  br i1 %113, label %118, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 4
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to i32*
  %117 = load i32, i32* %116, align 4
  br label %118

118:                                              ; preds = %114, %109, %107, %92, %88, %83, %81, %65
  %119 = phi i32 [ %91, %88 ], [ 0, %65 ], [ 0, %81 ], [ 0, %83 ], [ %117, %114 ], [ 0, %92 ], [ 0, %107 ], [ 0, %109 ]
  switch i32 %1, label %194 [
    i32 1000156002, label %120
    i32 1000156004, label %120
    i32 1000156006, label %120
    i32 1000156012, label %120
    i32 1000156014, label %120
    i32 1000156016, label %120
    i32 1000156022, label %120
    i32 1000156024, label %120
    i32 1000156026, label %120
    i32 1000156029, label %120
    i32 1000156031, label %120
    i32 1000156033, label %120
    i32 1000156003, label %120
    i32 1000156005, label %120
    i32 1000156013, label %120
    i32 1000156015, label %120
    i32 1000156023, label %120
    i32 1000156025, label %120
    i32 1000156030, label %120
    i32 1000156032, label %120
  ]

120:                                              ; preds = %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118, %118
  %121 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %3, i64 %17, i32 2, i32 0
  %122 = load i32, i32* %121, align 4
  switch i32 %122, label %125 [
    i32 16, label %126
    i32 32, label %123
    i32 64, label %124
  ]

123:                                              ; preds = %120
  br label %126

124:                                              ; preds = %120
  br label %126

125:                                              ; preds = %120
  br label %126

126:                                              ; preds = %125, %124, %123, %120
  %127 = phi i32 [ 3, %125 ], [ 2, %124 ], [ 1, %123 ], [ 0, %120 ]
  br i1 %10, label %167, label %128

128:                                              ; preds = %126, %128
  %129 = phi %"class.std::__1::__tree_end_node"* [ %139, %128 ], [ getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0), %126 ]
  %130 = phi %"class.std::__1::__tree_node.34"* [ %140, %128 ], [ %9, %126 ]
  %131 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %130, i64 0, i32 1, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %132, %1
  %134 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %130, i64 0, i32 0, i32 1
  %135 = bitcast %"class.std::__1::__tree_node_base"** %134 to %"class.std::__1::__tree_node.34"**
  %136 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %130, i64 0, i32 0, i32 0
  %137 = bitcast %"class.std::__1::__tree_node.34"* %130 to %"class.std::__1::__tree_node.34"**
  %138 = select i1 %133, %"class.std::__1::__tree_node.34"** %135, %"class.std::__1::__tree_node.34"** %137
  %139 = select i1 %133, %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"* %136
  %140 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %138, align 8
  %141 = icmp eq %"class.std::__1::__tree_node.34"* %140, null
  br i1 %141, label %142, label %128

142:                                              ; preds = %128
  %143 = icmp eq %"class.std::__1::__tree_end_node"* %139, getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %143, label %167, label %144

144:                                              ; preds = %142
  %145 = bitcast %"class.std::__1::__tree_end_node"* %139 to %"class.std::__1::__tree_node.34"*
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %145, i64 0, i32 1, i32 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp sgt i32 %147, %1
  %149 = icmp eq i32 %127, 3
  %150 = or i1 %149, %148
  br i1 %150, label %167, label %151

151:                                              ; preds = %144
  %152 = zext i32 %127 to i64
  %153 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %145, i64 0, i32 1, i32 0, i32 1, i32 0, i64 %152, i32 2
  %154 = load i32, i32* %153, align 4
  switch i32 %154, label %167 [
    i32 1000156002, label %155
    i32 1000156004, label %155
    i32 1000156006, label %155
    i32 1000156012, label %155
    i32 1000156014, label %155
    i32 1000156016, label %155
    i32 1000156022, label %155
    i32 1000156024, label %155
    i32 1000156026, label %155
    i32 1000156029, label %155
    i32 1000156031, label %155
    i32 1000156033, label %155
    i32 1000156003, label %155
    i32 1000156005, label %155
    i32 1000156013, label %155
    i32 1000156015, label %155
    i32 1000156023, label %155
    i32 1000156025, label %155
    i32 1000156030, label %155
    i32 1000156032, label %155
  ]

155:                                              ; preds = %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151, %151
  br label %156

156:                                              ; preds = %155, %156
  %157 = phi %"class.std::__1::__tree_node.34"* [ %165, %156 ], [ %9, %155 ]
  %158 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %157, i64 0, i32 1, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp slt i32 %159, %154
  %161 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %157, i64 0, i32 0, i32 1
  %162 = bitcast %"class.std::__1::__tree_node_base"** %161 to %"class.std::__1::__tree_node.34"**
  %163 = bitcast %"class.std::__1::__tree_node.34"* %157 to %"class.std::__1::__tree_node.34"**
  %164 = select i1 %160, %"class.std::__1::__tree_node.34"** %162, %"class.std::__1::__tree_node.34"** %163
  %165 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node.34"* %165, null
  br i1 %166, label %167, label %156

167:                                              ; preds = %156, %144, %142, %126, %151
  %168 = phi i32 [ %154, %151 ], [ 0, %126 ], [ 0, %142 ], [ 0, %144 ], [ 0, %156 ]
  br i1 %12, label %234, label %169

169:                                              ; preds = %167, %169
  %170 = phi %"class.std::__1::__tree_end_node"* [ %180, %169 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %167 ]
  %171 = phi %"class.std::__1::__tree_node"* [ %181, %169 ], [ %11, %167 ]
  %172 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %171, i64 0, i32 1, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = icmp slt i32 %173, %168
  %175 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %171, i64 0, i32 0, i32 1
  %176 = bitcast %"class.std::__1::__tree_node_base"** %175 to %"class.std::__1::__tree_node"**
  %177 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %171, i64 0, i32 0, i32 0
  %178 = bitcast %"class.std::__1::__tree_node"* %171 to %"class.std::__1::__tree_node"**
  %179 = select i1 %174, %"class.std::__1::__tree_node"** %176, %"class.std::__1::__tree_node"** %178
  %180 = select i1 %174, %"class.std::__1::__tree_end_node"* %170, %"class.std::__1::__tree_end_node"* %177
  %181 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %179, align 8
  %182 = icmp eq %"class.std::__1::__tree_node"* %181, null
  br i1 %182, label %183, label %169

183:                                              ; preds = %169
  %184 = icmp eq %"class.std::__1::__tree_end_node"* %180, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %184, label %234, label %185

185:                                              ; preds = %183
  %186 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_node"*
  %187 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %186, i64 0, i32 1, i32 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = icmp slt i32 %168, %188
  br i1 %189, label %234, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 4
  %192 = bitcast %"class.std::__1::__tree_end_node"* %191 to i32*
  %193 = load i32, i32* %192, align 4
  br label %234

194:                                              ; preds = %118
  switch i32 %1, label %207 [
    i32 1000156002, label %195
    i32 1000156004, label %195
    i32 1000156006, label %195
    i32 1000156012, label %195
    i32 1000156014, label %195
    i32 1000156016, label %195
    i32 1000156022, label %195
    i32 1000156024, label %195
    i32 1000156026, label %195
    i32 1000156029, label %195
    i32 1000156031, label %195
    i32 1000156033, label %195
    i32 1000156003, label %195
    i32 1000156005, label %195
    i32 1000156013, label %195
    i32 1000156015, label %195
    i32 1000156023, label %195
    i32 1000156025, label %195
    i32 1000156030, label %195
  ]

195:                                              ; preds = %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194, %194
  br i1 %10, label %207, label %196

196:                                              ; preds = %195, %196
  %197 = phi %"class.std::__1::__tree_node.34"* [ %205, %196 ], [ %9, %195 ]
  %198 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %197, i64 0, i32 1, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp slt i32 %199, %1
  %201 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %197, i64 0, i32 0, i32 1
  %202 = bitcast %"class.std::__1::__tree_node_base"** %201 to %"class.std::__1::__tree_node.34"**
  %203 = bitcast %"class.std::__1::__tree_node.34"* %197 to %"class.std::__1::__tree_node.34"**
  %204 = select i1 %200, %"class.std::__1::__tree_node.34"** %202, %"class.std::__1::__tree_node.34"** %203
  %205 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %204, align 8
  %206 = icmp eq %"class.std::__1::__tree_node.34"* %205, null
  br i1 %206, label %207, label %196

207:                                              ; preds = %196, %195, %194
  %208 = phi i32 [ %1, %194 ], [ 0, %195 ], [ 0, %196 ]
  br i1 %12, label %234, label %209

209:                                              ; preds = %207, %209
  %210 = phi %"class.std::__1::__tree_end_node"* [ %220, %209 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %207 ]
  %211 = phi %"class.std::__1::__tree_node"* [ %221, %209 ], [ %11, %207 ]
  %212 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %211, i64 0, i32 1, i32 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp slt i32 %213, %208
  %215 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %211, i64 0, i32 0, i32 1
  %216 = bitcast %"class.std::__1::__tree_node_base"** %215 to %"class.std::__1::__tree_node"**
  %217 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %211, i64 0, i32 0, i32 0
  %218 = bitcast %"class.std::__1::__tree_node"* %211 to %"class.std::__1::__tree_node"**
  %219 = select i1 %214, %"class.std::__1::__tree_node"** %216, %"class.std::__1::__tree_node"** %218
  %220 = select i1 %214, %"class.std::__1::__tree_end_node"* %210, %"class.std::__1::__tree_end_node"* %217
  %221 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %219, align 8
  %222 = icmp eq %"class.std::__1::__tree_node"* %221, null
  br i1 %222, label %223, label %209

223:                                              ; preds = %209
  %224 = icmp eq %"class.std::__1::__tree_end_node"* %220, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %224, label %234, label %225

225:                                              ; preds = %223
  %226 = bitcast %"class.std::__1::__tree_end_node"* %220 to %"class.std::__1::__tree_node"*
  %227 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %226, i64 0, i32 1, i32 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = icmp slt i32 %208, %228
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 4
  %232 = bitcast %"class.std::__1::__tree_end_node"* %231 to i32*
  %233 = load i32, i32* %232, align 4
  br label %234

234:                                              ; preds = %230, %225, %223, %207, %190, %185, %183, %167
  %235 = phi i32 [ %193, %190 ], [ 0, %167 ], [ 0, %183 ], [ 0, %185 ], [ %233, %230 ], [ 0, %207 ], [ 0, %223 ], [ 0, %225 ]
  %236 = icmp eq i32 %235, %119
  %237 = add nuw nsw i64 %17, 1
  br i1 %236, label %14, label %238

238:                                              ; preds = %234, %14, %6
  %239 = phi i1 [ true, %6 ], [ true, %14 ], [ false, %234 ]
  ret i1 %239

240:                                              ; preds = %5
  switch i32 %0, label %255 [
    i32 1000156002, label %241
    i32 1000156004, label %241
    i32 1000156006, label %241
    i32 1000156012, label %241
    i32 1000156014, label %241
    i32 1000156016, label %241
    i32 1000156022, label %241
    i32 1000156024, label %241
    i32 1000156026, label %241
    i32 1000156029, label %241
    i32 1000156031, label %241
    i32 1000156033, label %241
    i32 1000156003, label %241
    i32 1000156005, label %241
    i32 1000156013, label %241
    i32 1000156015, label %241
    i32 1000156023, label %241
    i32 1000156025, label %241
    i32 1000156030, label %241
  ]

241:                                              ; preds = %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240, %240
  %242 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node.34"**), align 8
  %243 = icmp eq %"class.std::__1::__tree_node.34"* %242, null
  br i1 %243, label %255, label %244

244:                                              ; preds = %241, %244
  %245 = phi %"class.std::__1::__tree_node.34"* [ %253, %244 ], [ %242, %241 ]
  %246 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %245, i64 0, i32 1, i32 0, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = icmp slt i32 %247, %0
  %249 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %245, i64 0, i32 0, i32 1
  %250 = bitcast %"class.std::__1::__tree_node_base"** %249 to %"class.std::__1::__tree_node.34"**
  %251 = bitcast %"class.std::__1::__tree_node.34"* %245 to %"class.std::__1::__tree_node.34"**
  %252 = select i1 %248, %"class.std::__1::__tree_node.34"** %250, %"class.std::__1::__tree_node.34"** %251
  %253 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %252, align 8
  %254 = icmp eq %"class.std::__1::__tree_node.34"* %253, null
  br i1 %254, label %255, label %244

255:                                              ; preds = %244, %241, %240
  %256 = phi i32 [ %0, %240 ], [ 0, %241 ], [ 0, %244 ]
  %257 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node"**), align 8
  %258 = icmp eq %"class.std::__1::__tree_node"* %257, null
  br i1 %258, label %284, label %259

259:                                              ; preds = %255, %259
  %260 = phi %"class.std::__1::__tree_end_node"* [ %270, %259 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %255 ]
  %261 = phi %"class.std::__1::__tree_node"* [ %271, %259 ], [ %257, %255 ]
  %262 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 1, i32 0, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = icmp slt i32 %263, %256
  %265 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 0, i32 1
  %266 = bitcast %"class.std::__1::__tree_node_base"** %265 to %"class.std::__1::__tree_node"**
  %267 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 0, i32 0
  %268 = bitcast %"class.std::__1::__tree_node"* %261 to %"class.std::__1::__tree_node"**
  %269 = select i1 %264, %"class.std::__1::__tree_node"** %266, %"class.std::__1::__tree_node"** %268
  %270 = select i1 %264, %"class.std::__1::__tree_end_node"* %260, %"class.std::__1::__tree_end_node"* %267
  %271 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %269, align 8
  %272 = icmp eq %"class.std::__1::__tree_node"* %271, null
  br i1 %272, label %273, label %259

273:                                              ; preds = %259
  %274 = icmp eq %"class.std::__1::__tree_end_node"* %270, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %274, label %284, label %275

275:                                              ; preds = %273
  %276 = bitcast %"class.std::__1::__tree_end_node"* %270 to %"class.std::__1::__tree_node"*
  %277 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %276, i64 0, i32 1, i32 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = icmp slt i32 %256, %278
  br i1 %279, label %284, label %280

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %270, i64 4
  %282 = bitcast %"class.std::__1::__tree_end_node"* %281 to i32*
  %283 = load i32, i32* %282, align 4
  br label %284

284:                                              ; preds = %255, %273, %275, %280
  %285 = phi i32 [ %283, %280 ], [ 0, %255 ], [ 0, %273 ], [ 0, %275 ]
  switch i32 %1, label %300 [
    i32 1000156002, label %286
    i32 1000156004, label %286
    i32 1000156006, label %286
    i32 1000156012, label %286
    i32 1000156014, label %286
    i32 1000156016, label %286
    i32 1000156022, label %286
    i32 1000156024, label %286
    i32 1000156026, label %286
    i32 1000156029, label %286
    i32 1000156031, label %286
    i32 1000156033, label %286
    i32 1000156003, label %286
    i32 1000156005, label %286
    i32 1000156013, label %286
    i32 1000156015, label %286
    i32 1000156023, label %286
    i32 1000156025, label %286
    i32 1000156030, label %286
    i32 1000156032, label %286
  ]

286:                                              ; preds = %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284, %284
  %287 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::map.4", %"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node.34"**), align 8
  %288 = icmp eq %"class.std::__1::__tree_node.34"* %287, null
  br i1 %288, label %300, label %289

289:                                              ; preds = %286, %289
  %290 = phi %"class.std::__1::__tree_node.34"* [ %298, %289 ], [ %287, %286 ]
  %291 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %290, i64 0, i32 1, i32 0, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = icmp slt i32 %292, %1
  %294 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %290, i64 0, i32 0, i32 1
  %295 = bitcast %"class.std::__1::__tree_node_base"** %294 to %"class.std::__1::__tree_node.34"**
  %296 = bitcast %"class.std::__1::__tree_node.34"* %290 to %"class.std::__1::__tree_node.34"**
  %297 = select i1 %293, %"class.std::__1::__tree_node.34"** %295, %"class.std::__1::__tree_node.34"** %296
  %298 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %297, align 8
  %299 = icmp eq %"class.std::__1::__tree_node.34"* %298, null
  br i1 %299, label %300, label %289

300:                                              ; preds = %289, %286, %284
  %301 = phi i32 [ %1, %284 ], [ 0, %286 ], [ 0, %289 ]
  br i1 %258, label %327, label %302

302:                                              ; preds = %300, %302
  %303 = phi %"class.std::__1::__tree_end_node"* [ %313, %302 ], [ getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0), %300 ]
  %304 = phi %"class.std::__1::__tree_node"* [ %314, %302 ], [ %257, %300 ]
  %305 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %304, i64 0, i32 1, i32 0, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = icmp slt i32 %306, %301
  %308 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %304, i64 0, i32 0, i32 1
  %309 = bitcast %"class.std::__1::__tree_node_base"** %308 to %"class.std::__1::__tree_node"**
  %310 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %304, i64 0, i32 0, i32 0
  %311 = bitcast %"class.std::__1::__tree_node"* %304 to %"class.std::__1::__tree_node"**
  %312 = select i1 %307, %"class.std::__1::__tree_node"** %309, %"class.std::__1::__tree_node"** %311
  %313 = select i1 %307, %"class.std::__1::__tree_end_node"* %303, %"class.std::__1::__tree_end_node"* %310
  %314 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %312, align 8
  %315 = icmp eq %"class.std::__1::__tree_node"* %314, null
  br i1 %315, label %316, label %302

316:                                              ; preds = %302
  %317 = icmp eq %"class.std::__1::__tree_end_node"* %313, getelementptr inbounds (%"class.std::__1::map", %"class.std::__1::map"* @_ZL14kVkFormatTable, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %317, label %327, label %318

318:                                              ; preds = %316
  %319 = bitcast %"class.std::__1::__tree_end_node"* %313 to %"class.std::__1::__tree_node"*
  %320 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %319, i64 0, i32 1, i32 0, i32 0
  %321 = load i32, i32* %320, align 4
  %322 = icmp slt i32 %301, %321
  br i1 %322, label %327, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %313, i64 4
  %325 = bitcast %"class.std::__1::__tree_end_node"* %324 to i32*
  %326 = load i32, i32* %325, align 4
  br label %327

327:                                              ; preds = %300, %316, %318, %323
  %328 = phi i32 [ %326, %323 ], [ 0, %300 ], [ 0, %316 ], [ 0, %318 ]
  %329 = icmp eq i32 %328, %285
  ret i1 %329
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEED2Ev(%"class.std::__1::set"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.46"**
  %5 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %4, align 8
  tail call void @_ZNSt3__16__treeI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.17"* %2, %"class.std::__1::__tree_node.46"* %5) #8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define zeroext i1 @FormatRequiresYcbcrConversion(i32) local_unnamed_addr #4 {
  %2 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** bitcast (%"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::set", %"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion, i64 0, i32 0, i32 1, i32 0, i32 0) to %"class.std::__1::__tree_node.46"**), align 8
  %3 = icmp eq %"class.std::__1::__tree_node.46"* %2, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %1, %4
  %5 = phi %"class.std::__1::__tree_end_node"* [ %15, %4 ], [ getelementptr inbounds (%"class.std::__1::set", %"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion, i64 0, i32 0, i32 1, i32 0, i32 0), %1 ]
  %6 = phi %"class.std::__1::__tree_node.46"* [ %16, %4 ], [ %2, %1 ]
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %0
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %6, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::__tree_node_base"** %10 to %"class.std::__1::__tree_node.46"**
  %12 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node.46"* %6 to %"class.std::__1::__tree_node.46"**
  %14 = select i1 %9, %"class.std::__1::__tree_node.46"** %11, %"class.std::__1::__tree_node.46"** %13
  %15 = select i1 %9, %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"* %12
  %16 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %14, align 8
  %17 = icmp eq %"class.std::__1::__tree_node.46"* %16, null
  br i1 %17, label %18, label %4

18:                                               ; preds = %4
  %19 = icmp eq %"class.std::__1::__tree_end_node"* %15, getelementptr inbounds (%"class.std::__1::set", %"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion, i64 0, i32 0, i32 1, i32 0, i32 0)
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.46"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %0
  br i1 %24, label %25, label %26

25:                                               ; preds = %20, %18, %1
  br label %26

26:                                               ; preds = %20, %25
  %27 = phi %"class.std::__1::__tree_end_node"* [ getelementptr inbounds (%"class.std::__1::set", %"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion, i64 0, i32 0, i32 1, i32 0, i32 0), %25 ], [ %15, %20 ]
  %28 = icmp ne %"class.std::__1::__tree_end_node"* %27, getelementptr inbounds (%"class.std::__1::set", %"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion, i64 0, i32 0, i32 1, i32 0, i32 0)
  ret i1 %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsXChromaSubsampled(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1000156000
  %3 = icmp ult i32 %2, 33
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = zext i32 %2 to i33
  %6 = lshr i33 -68092865, %5
  %7 = and i33 %6, 1
  %8 = icmp ne i33 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define zeroext i1 @FormatIsYChromaSubsampled(i32) local_unnamed_addr #3 {
  %2 = add i32 %0, -1000156002
  %3 = icmp ult i32 %2, 29
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i29
  %6 = lshr i29 -131068925, %5
  %7 = and i29 %6, 1
  %8 = icmp ne i29 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define i64 @GetIndexAlignment(i32) local_unnamed_addr #3 {
  switch i32 %0, label %4 [
    i32 0, label %5
    i32 1, label %2
    i32 1000265000, label %3
  ]

2:                                                ; preds = %1
  br label %5

3:                                                ; preds = %1
  br label %5

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %4, %3, %2
  %6 = phi i64 [ 1, %4 ], [ 1, %3 ], [ 4, %2 ], [ 2, %1 ]
  ret i64 %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeI8VkFormat18VULKAN_FORMAT_INFOEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI8VkFormat18VULKAN_FORMAT_INFOEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI8VkFormat18VULKAN_FORMAT_INFOEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.5"*, %"class.std::__1::__tree_node.34"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.34"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.34"* %1 to %"class.std::__1::__tree_node.34"**
  %6 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.5"* %0, %"class.std::__1::__tree_node.34"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.34", %"class.std::__1::__tree_node.34"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.34"**
  %9 = load %"class.std::__1::__tree_node.34"*, %"class.std::__1::__tree_node.34"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.5"* %0, %"class.std::__1::__tree_node.34"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node.34"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE6insertIPKS1_EEvT_SA_(%"class.std::__1::set"*, i32*, i32*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq i32* %1, %2
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = ptrtoint %"class.std::__1::__tree_end_node"* %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::set"* %0 to i64*
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %14

13:                                               ; preds = %106, %3
  ret void

14:                                               ; preds = %6, %106
  %15 = phi i32* [ %1, %6 ], [ %107, %106 ]
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %16, %4
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br i1 %17, label %45, label %19

19:                                               ; preds = %14
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %19, %21
  %22 = phi %"class.std::__1::__tree_node_base"* [ %24, %21 ], [ %18, %19 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 1
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %37, label %21

26:                                               ; preds = %19, %26
  %27 = phi %"class.std::__1::__tree_end_node"* [ %31, %26 ], [ %4, %19 ]
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 2
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_end_node"**
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %28
  br i1 %34, label %26, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  br label %37

37:                                               ; preds = %21, %35
  %38 = phi %"class.std::__1::__tree_node_base"* [ %36, %35 ], [ %22, %21 ]
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 4, i64 3
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %15, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %37, %14
  %46 = phi i64 [ %39, %37 ], [ %7, %14 ]
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 1
  br label %79

51:                                               ; preds = %37
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %52, label %79, label %53

53:                                               ; preds = %51, %72
  %54 = phi %"class.std::__1::__tree_node_base"* [ %73, %72 ], [ %18, %51 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %74, %72 ], [ %10, %51 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 4, i64 3
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %43, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = ptrtoint %"class.std::__1::__tree_node_base"* %54 to i64
  br label %79

66:                                               ; preds = %53
  %67 = icmp slt i32 %58, %43
  br i1 %67, label %68, label %77

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %68, %60
  %73 = phi %"class.std::__1::__tree_node_base"* [ %62, %60 ], [ %70, %68 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %69, %68 ]
  br label %53

75:                                               ; preds = %68
  %76 = ptrtoint %"class.std::__1::__tree_node_base"* %54 to i64
  br label %79

77:                                               ; preds = %66
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %54 to i64
  br label %79

79:                                               ; preds = %51, %45, %48, %64, %75, %77
  %80 = phi i64 [ %46, %48 ], [ %65, %64 ], [ %76, %75 ], [ %78, %77 ], [ %7, %45 ], [ %7, %51 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %50, %48 ], [ %61, %64 ], [ %69, %75 ], [ %55, %77 ], [ %9, %45 ], [ %9, %51 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"** %81 to %"class.std::__1::__tree_node.46"**
  %83 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node.46"* %83, null
  br i1 %84, label %85, label %106

85:                                               ; preds = %79
  %86 = tail call i8* @_Znwm(i64 32) #9, !noalias !9
  %87 = getelementptr inbounds i8, i8* %86, i64 28
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %15, align 4, !noalias !9
  store i32 %89, i32* %88, align 4, !noalias !9
  %90 = bitcast i8* %86 to %"class.std::__1::__tree_node_base"*
  %91 = getelementptr inbounds i8, i8* %86, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #8
  %92 = bitcast i8* %91 to i64*
  store i64 %80, i64* %92, align 8
  %93 = bitcast %"class.std::__1::__tree_node_base"** %81 to i8**
  store i8* %86, i8** %93, align 8
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %85
  %99 = ptrtoint %"class.std::__1::__tree_node_base"* %96 to i64
  store i64 %99, i64* %11, align 8
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  br label %101

101:                                              ; preds = %98, %85
  %102 = phi %"class.std::__1::__tree_node_base"* [ %90, %85 ], [ %100, %98 ]
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"* %102) #8
  %104 = load i64, i64* %12, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %12, align 8
  br label %106

106:                                              ; preds = %79, %101
  %107 = getelementptr inbounds i32, i32* %15, i64 1
  %108 = icmp eq i32* %107, %2
  br i1 %108, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.17"*, %"class.std::__1::__tree_node.46"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.46"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.46"* %1 to %"class.std::__1::__tree_node.46"**
  %6 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %5, align 8
  tail call void @_ZNSt3__16__treeI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.17"* %0, %"class.std::__1::__tree_node.46"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.46"**
  %9 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %8, align 8
  tail call void @_ZNSt3__16__treeI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree.17"* %0, %"class.std::__1::__tree_node.46"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node.46"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_GLOBAL__sub_I_vk_format_utils.cpp() #1 section ".text.startup" {
  %1 = alloca %"struct.std::__1::less", align 1
  %2 = alloca %"struct.std::__1::less", align 1
  %3 = getelementptr inbounds %"struct.std::__1::less", %"struct.std::__1::less"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  call void @_ZNSt3__13mapI8VkFormat18VULKAN_FORMAT_INFONS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEEC2ESt16initializer_listIS8_ERKS4_(%"class.std::__1::map"* nonnull @_ZL14kVkFormatTable, %"struct.std::__1::pair"* getelementptr inbounds ([243 x %"struct.std::__1::pair"], [243 x %"struct.std::__1::pair"]* @.ref.tmp, i64 0, i64 0), i64 243, %"struct.std::__1::less"* nonnull dereferenceable(1) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  %4 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__1::map"*)* @_ZNSt3__13mapI8VkFormat18VULKAN_FORMAT_INFONS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__1::map"* @_ZL14kVkFormatTable to i8*), i8* nonnull @__dso_handle) #8
  %5 = getelementptr inbounds %"struct.std::__1::less", %"struct.std::__1::less"* %1, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  call void @_ZNSt3__13mapI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEEC2ESt16initializer_listIS8_ERKS4_(%"class.std::__1::map.4"* nonnull @_ZL29kVkMultiplaneCompatibilityMap, %"struct.std::__1::pair.14"* getelementptr inbounds ([20 x %"struct.std::__1::pair.14"], [20 x %"struct.std::__1::pair.14"]* @.ref.tmp.2, i64 0, i64 0), i64 20, %"struct.std::__1::less"* nonnull dereferenceable(1) %1) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %6 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__1::map.4"*)* @_ZNSt3__13mapI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_S2_EEEEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__1::map.4"* @_ZL29kVkMultiplaneCompatibilityMap to i8*), i8* nonnull @__dso_handle) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%"class.std::__1::__tree_node_base"** getelementptr inbounds (%"class.std::__1::set", %"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0) to i8*), i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* getelementptr inbounds (%"class.std::__1::set", %"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion, i64 0, i32 0, i32 1, i32 0, i32 0), %"class.std::__1::__tree_end_node"** getelementptr inbounds (%"class.std::__1::set", %"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion, i64 0, i32 0, i32 0), align 8
  call void @_ZNSt3__13setI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE6insertIPKS1_EEvT_SA_(%"class.std::__1::set"* nonnull @_ZL34kVkFormatsRequiringYcbcrConversion, i32* getelementptr inbounds ([30 x i32], [30 x i32]* @.ref.tmp.4, i64 0, i64 0), i32* getelementptr inbounds ([30 x i32], [30 x i32]* @.ref.tmp.4, i64 1, i64 0)) #8
  %7 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__1::set"*)* @_ZNSt3__13setI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__1::set"* @_ZL34kVkFormatsRequiringYcbcrConversion to i8*), i8* nonnull @__dso_handle) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeI8VkFormat18VULKAN_FORMAT_INFOEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_4pairIKS2_S3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISL_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeI8VkFormat18VULKAN_FORMAT_INFOEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_4pairIKS2_S3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISL_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_4pairIKS2_S3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISL_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeI8VkFormat31VULKAN_MULTIPLANE_COMPATIBILITYEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_4pairIKS2_S3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISL_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeI8VkFormatNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_"}
