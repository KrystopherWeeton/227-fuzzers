; ModuleID = '../../components/autofill/core/browser/form_parsing/autofill_scanner.cc'
source_filename = "../../components/autofill/core/browser/form_parsing/autofill_scanner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AutofillScanner" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::vector.52" }
%"class.std::__1::__wrap_iter" = type { %"class.autofill::AutofillField"** }
%"class.autofill::AutofillField" = type <{ i32 (...)**, %"struct.autofill::FormFieldData", %"class.absl::optional.19", %"class.std::__1::basic_string", i32, i8, [3 x i8], %"class.std::__1::vector.26", i8, [7 x i8], %"class.absl::optional.34", i32, %"class.autofill::AutofillType", i32, i32, %"class.autofill::DenseSet", %"class.std::__1::map", i32, %"class.absl::optional.47", [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string.1", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias.10" }
%"class.base::StrongAlias.10" = type { i32 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.11" }
%"class.util::IdType.11" = type { %"class.base::StrongAlias.12" }
%"class.base::StrongAlias.12" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.13 }
%union.anon.13 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.autofill::FieldSignature" }
%"class.autofill::FieldSignature" = type { %"class.util::IdType.24" }
%"class.util::IdType.24" = type { %"class.base::StrongAlias.25" }
%"class.base::StrongAlias.25" = type { i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.std::__1::__compressed_pair.29" }
%"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i8, [3 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %"class.autofill::PasswordRequirementsSpec" }
%"class.autofill::PasswordRequirementsSpec" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, i32, i32, i32, i32 }
%"class.autofill::PasswordRequirementsSpec_CharacterClass" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i32, i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string.1"* }
%"class.autofill::AutofillType" = type { i32, i32, i32 }
%"class.autofill::DenseSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"**, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.autofill::AutofillField"** }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.autofill::AutofillField"* }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN8autofill15AutofillScannerC1ERKNSt3__16vectorIPNS_13AutofillFieldENS1_9allocatorIS4_EEEE = hidden unnamed_addr alias void (%"class.autofill::AutofillScanner"*, %"class.std::__1::vector.52"*), void (%"class.autofill::AutofillScanner"*, %"class.std::__1::vector.52"*)* @_ZN8autofill15AutofillScannerC2ERKNSt3__16vectorIPNS_13AutofillFieldENS1_9allocatorIS4_EEEE
@_ZN8autofill15AutofillScannerC1ERKNSt3__16vectorINS1_10unique_ptrINS_13AutofillFieldENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE = hidden unnamed_addr alias void (%"class.autofill::AutofillScanner"*, %"class.std::__1::vector.59"*), void (%"class.autofill::AutofillScanner"*, %"class.std::__1::vector.59"*)* @_ZN8autofill15AutofillScannerC2ERKNSt3__16vectorINS1_10unique_ptrINS_13AutofillFieldENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE
@_ZN8autofill15AutofillScannerD1Ev = hidden unnamed_addr alias void (%"class.autofill::AutofillScanner"*), void (%"class.autofill::AutofillScanner"*)* @_ZN8autofill15AutofillScannerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15AutofillScannerC2ERKNSt3__16vectorIPNS_13AutofillFieldENS1_9allocatorIS4_EEEE(%"class.autofill::AutofillScanner"* nocapture, %"class.std::__1::vector.52"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 3, i32 0
  %6 = bitcast %"class.std::__1::vector.52"* %1 to i64*
  %7 = bitcast %"class.autofill::AutofillScanner"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 56, i1 false)
  %8 = load i64, i64* %6, align 8
  %9 = bitcast %"class.autofill::AutofillScanner"* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = load i64, i64* %6, align 8
  %11 = bitcast %"class.autofill::AutofillField"*** %3 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %6, align 8
  %13 = bitcast %"class.autofill::AutofillField"*** %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %1, i64 0, i32 0, i32 1
  %15 = bitcast %"class.autofill::AutofillField"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.autofill::AutofillField"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8autofill15AutofillScanner4InitERKNSt3__16vectorIPNS_13AutofillFieldENS1_9allocatorIS4_EEEE(%"class.autofill::AutofillScanner"* nocapture, %"class.std::__1::vector.52"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.std::__1::vector.52"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.autofill::AutofillScanner"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = load i64, i64* %3, align 8
  %7 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 1, i32 0
  %8 = bitcast %"class.autofill::AutofillField"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = load i64, i64* %3, align 8
  %10 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 2, i32 0
  %11 = bitcast %"class.autofill::AutofillField"*** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %1, i64 0, i32 0, i32 1
  %13 = bitcast %"class.autofill::AutofillField"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 3, i32 0
  %16 = bitcast %"class.autofill::AutofillField"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15AutofillScannerC2ERKNSt3__16vectorINS1_10unique_ptrINS_13AutofillFieldENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.autofill::AutofillScanner"*, %"class.std::__1::vector.59"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 0
  %7 = bitcast %"class.autofill::AutofillScanner"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 56, i1 false)
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %8, %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.autofill::AutofillField"*** %13 to i64*
  %16 = bitcast %"class.std::__1::vector.52"* %5 to i64*
  %17 = bitcast %"class.autofill::AutofillField"*** %14 to i64*
  %18 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %5, i64 0, i32 0, i32 0
  br label %28

19:                                               ; preds = %93
  %20 = bitcast %"class.std::__1::vector.52"* %5 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  br label %22

22:                                               ; preds = %2, %19
  %23 = phi <2 x i64> [ %21, %19 ], [ zeroinitializer, %2 ]
  %24 = bitcast %"class.autofill::AutofillScanner"* %0 to i64*
  %25 = extractelement <2 x i64> %23, i32 0
  store i64 %25, i64* %24, align 8
  %26 = bitcast %"class.autofill::AutofillField"*** %3 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast %"class.autofill::AutofillField"*** %4 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %27, align 8
  ret void

28:                                               ; preds = %96, %12
  %29 = phi %"class.autofill::AutofillField"** [ null, %12 ], [ %98, %96 ]
  %30 = phi %"class.autofill::AutofillField"** [ null, %12 ], [ %97, %96 ]
  %31 = phi %"class.std::__1::unique_ptr"* [ %8, %12 ], [ %94, %96 ]
  %32 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult %"class.autofill::AutofillField"** %30, %29
  %35 = ptrtoint %"class.autofill::AutofillField"** %29 to i64
  br i1 %34, label %36, label %40

36:                                               ; preds = %28
  %37 = bitcast %"class.autofill::AutofillField"** %30 to i64*
  store i64 %33, i64* %37, align 8
  %38 = getelementptr inbounds %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %30, i64 1
  %39 = ptrtoint %"class.autofill::AutofillField"** %38 to i64
  store i64 %39, i64* %15, align 8
  br label %93

40:                                               ; preds = %28
  %41 = ptrtoint %"class.autofill::AutofillField"** %30 to i64
  %42 = load i64, i64* %16, align 8
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 2305843009213693951
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = bitcast %"class.std::__1::vector.52"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #8
  unreachable

49:                                               ; preds = %40
  %50 = sub i64 %35, %42
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, 1152921504606846975
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = ashr exact i64 %50, 2
  %55 = icmp ult i64 %54, %45
  %56 = select i1 %55, i64 %45, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 2305843009213693951
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @abort() #8
  unreachable

61:                                               ; preds = %58, %49
  %62 = phi i64 [ %56, %58 ], [ 2305843009213693951, %49 ]
  %63 = shl i64 %62, 3
  %64 = tail call i8* @_Znwm(i64 %63) #9
  %65 = bitcast i8* %64 to %"class.autofill::AutofillField"**
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi %"class.autofill::AutofillField"** [ %65, %61 ], [ null, %53 ]
  %69 = getelementptr inbounds %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %68, i64 %44
  %70 = getelementptr inbounds %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %68, i64 %67
  %71 = ptrtoint %"class.autofill::AutofillField"** %70 to i64
  %72 = bitcast %"class.autofill::AutofillField"** %69 to i64*
  store i64 %33, i64* %72, align 8
  %73 = getelementptr inbounds %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %69, i64 1
  %74 = ptrtoint %"class.autofill::AutofillField"** %73 to i64
  %75 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %18, align 8
  %76 = load i64, i64* %15, align 8
  %77 = ptrtoint %"class.autofill::AutofillField"** %75 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = sub nsw i64 0, %79
  %81 = getelementptr inbounds %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %69, i64 %80
  %82 = ptrtoint %"class.autofill::AutofillField"** %81 to i64
  %83 = icmp sgt i64 %78, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %66
  %85 = bitcast %"class.autofill::AutofillField"** %81 to i8*
  %86 = bitcast %"class.autofill::AutofillField"** %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 %78, i1 false) #10
  %87 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %18, align 8
  br label %88

88:                                               ; preds = %84, %66
  %89 = phi %"class.autofill::AutofillField"** [ %75, %66 ], [ %87, %84 ]
  store i64 %82, i64* %16, align 8
  store i64 %74, i64* %15, align 8
  store i64 %71, i64* %17, align 8
  %90 = icmp eq %"class.autofill::AutofillField"** %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = bitcast %"class.autofill::AutofillField"** %89 to i8*
  tail call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %36, %88, %91
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 1
  %95 = icmp eq %"class.std::__1::unique_ptr"* %94, %10
  br i1 %95, label %19, label %96

96:                                               ; preds = %93
  %97 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %13, align 8
  %98 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %14, align 8
  br label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill15AutofillScannerD2Ev(%"class.autofill::AutofillScanner"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %2, align 8
  %4 = icmp eq %"class.autofill::AutofillField"** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.autofill::AutofillField"** %3 to i64
  %7 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.autofill::AutofillField"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.autofill::AutofillField"** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8autofill15AutofillScanner7AdvanceEv(%"class.autofill::AutofillScanner"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %2, align 8
  %4 = getelementptr inbounds %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %3, i64 1
  store %"class.autofill::AutofillField"** %4, %"class.autofill::AutofillField"*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.autofill::AutofillField"* @_ZNK8autofill15AutofillScanner6CursorEv(%"class.autofill::AutofillScanner"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %2, align 8
  %4 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 3, i32 0
  %5 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %4, align 8
  %6 = icmp eq %"class.autofill::AutofillField"** %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %3, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.autofill::AutofillField"* [ %8, %7 ], [ null, %1 ]
  ret %"class.autofill::AutofillField"* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8autofill15AutofillScanner5IsEndEv(%"class.autofill::AutofillScanner"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %2, align 8
  %4 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 3, i32 0
  %5 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %4, align 8
  %6 = icmp eq %"class.autofill::AutofillField"** %3, %5
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8autofill15AutofillScanner6RewindEv(%"class.autofill::AutofillScanner"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::__wrap_iter"* %2 to i64*
  %4 = bitcast %"class.autofill::AutofillScanner"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::__wrap_iter"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8autofill15AutofillScanner8RewindToEm(%"class.autofill::AutofillScanner"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"*** %3, align 8
  %5 = getelementptr inbounds %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %4, i64 %1
  %6 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 0, i32 0
  store %"class.autofill::AutofillField"** %5, %"class.autofill::AutofillField"*** %6, align 8
  %7 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::__wrap_iter"* %7 to i64*
  %10 = bitcast %"class.std::__1::__wrap_iter"* %8 to i64*
  %11 = load i64, i64* %9, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN8autofill15AutofillScanner10SaveCursorEv(%"class.autofill::AutofillScanner"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 1
  %3 = bitcast %"class.autofill::AutofillScanner"* %0 to i64*
  %4 = bitcast %"class.std::__1::__wrap_iter"* %2 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::__wrap_iter"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  ret i64 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN8autofill15AutofillScanner14CursorPositionEv(%"class.autofill::AutofillScanner"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillScanner", %"class.autofill::AutofillScanner"* %0, i64 0, i32 2
  %3 = bitcast %"class.autofill::AutofillScanner"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::__wrap_iter"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = ashr exact i64 %7, 3
  ret i64 %8
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
