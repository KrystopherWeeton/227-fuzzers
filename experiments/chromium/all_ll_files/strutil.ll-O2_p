; ModuleID = '../../third_party/protobuf/src/google/protobuf/stubs/strutil.cc'
source_filename = "../../third_party/protobuf/src/google/protobuf/stubs/strutil.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.google::protobuf::strings::AlphaNum" = type { i8*, i64, [32 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.google::protobuf::StringPiece" = type { i8*, i64 }
%"class.google::protobuf::internal::LogMessage" = type { i32, i8*, i32, %"class.std::__1::basic_string" }
%"class.google::protobuf::internal::LogFinisher" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6google8protobuf17safe_int_internalIiEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_ = comdat any

$_ZN6google8protobuf18safe_uint_internalIjEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_ = comdat any

$_ZN6google8protobuf17safe_int_internalIlEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_ = comdat any

$_ZN6google8protobuf18safe_uint_internalImEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeINS_11__wrap_iterIPKcEEEERS5_T_SC_ = comdat any

@.str = private unnamed_addr constant [64 x i8] c"../../third_party/protobuf/src/google/protobuf/stubs/strutil.cc\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"CHECK failed: dest: \00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"\5Cx%02x\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"\5C%03o\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"CHECK failed: i >= 0: \00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"FastHexToBuffer() wants non-negative integers, not \00", align 1
@_ZN6google8protobufL16two_ASCII_digitsE = internal unnamed_addr constant [100 x [2 x i8]] [[2 x i8] c"00", [2 x i8] c"01", [2 x i8] c"02", [2 x i8] c"03", [2 x i8] c"04", [2 x i8] c"05", [2 x i8] c"06", [2 x i8] c"07", [2 x i8] c"08", [2 x i8] c"09", [2 x i8] c"10", [2 x i8] c"11", [2 x i8] c"12", [2 x i8] c"13", [2 x i8] c"14", [2 x i8] c"15", [2 x i8] c"16", [2 x i8] c"17", [2 x i8] c"18", [2 x i8] c"19", [2 x i8] c"20", [2 x i8] c"21", [2 x i8] c"22", [2 x i8] c"23", [2 x i8] c"24", [2 x i8] c"25", [2 x i8] c"26", [2 x i8] c"27", [2 x i8] c"28", [2 x i8] c"29", [2 x i8] c"30", [2 x i8] c"31", [2 x i8] c"32", [2 x i8] c"33", [2 x i8] c"34", [2 x i8] c"35", [2 x i8] c"36", [2 x i8] c"37", [2 x i8] c"38", [2 x i8] c"39", [2 x i8] c"40", [2 x i8] c"41", [2 x i8] c"42", [2 x i8] c"43", [2 x i8] c"44", [2 x i8] c"45", [2 x i8] c"46", [2 x i8] c"47", [2 x i8] c"48", [2 x i8] c"49", [2 x i8] c"50", [2 x i8] c"51", [2 x i8] c"52", [2 x i8] c"53", [2 x i8] c"54", [2 x i8] c"55", [2 x i8] c"56", [2 x i8] c"57", [2 x i8] c"58", [2 x i8] c"59", [2 x i8] c"60", [2 x i8] c"61", [2 x i8] c"62", [2 x i8] c"63", [2 x i8] c"64", [2 x i8] c"65", [2 x i8] c"66", [2 x i8] c"67", [2 x i8] c"68", [2 x i8] c"69", [2 x i8] c"70", [2 x i8] c"71", [2 x i8] c"72", [2 x i8] c"73", [2 x i8] c"74", [2 x i8] c"75", [2 x i8] c"76", [2 x i8] c"77", [2 x i8] c"78", [2 x i8] c"79", [2 x i8] c"80", [2 x i8] c"81", [2 x i8] c"82", [2 x i8] c"83", [2 x i8] c"84", [2 x i8] c"85", [2 x i8] c"86", [2 x i8] c"87", [2 x i8] c"88", [2 x i8] c"89", [2 x i8] c"90", [2 x i8] c"91", [2 x i8] c"92", [2 x i8] c"93", [2 x i8] c"94", [2 x i8] c"95", [2 x i8] c"96", [2 x i8] c"97", [2 x i8] c"98", [2 x i8] c"99"], align 16
@.str.12 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"%.*g\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"CHECK failed: value != nullptr: \00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"nullptr output boolean given.\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits = internal unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 16
@.str.35 = private unnamed_addr constant [29 x i8] c"CHECK failed: s != nullptr: \00", align 1
@.str.36 = private unnamed_addr constant [43 x i8] c"This can't happen; base64 decoder state = \00", align 1
@_ZN6google8protobufL16kUnWebSafeBase64E = internal constant [256 x i8] calign 16
@_ZN6google8protobufL9kUnBase64E = internal constant [256 x i8] calign 16
@.str.37 = private unnamed_addr constant [24 x i8] c"Logic problem? szsrc = \00", align 1
@_ZN6google8protobufL12kBase64CharsE = internal constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\00", align 16
@_ZN6google8protobufL19kWebSafeBase64CharsE = internal constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\00", align 16
@_ZN6google8protobufL11kUTF8LenTblE = internal unnamed_addr constant [256 x i8] calign 16
@_ZZN6google8protobufL14CEscapedLengthENS0_11StringPieceEE13c_escaped_len = internal unnamed_addr constant [256 x i8] calign 16
@.str.40 = private unnamed_addr constant [5 x i8] c"%.1f\00", align 1
@.str.41 = private unnamed_addr constant [35 x i8] c"CHECK failed: (temp[0]) == ('1'): \00", align 1
@.str.42 = private unnamed_addr constant [42 x i8] c"CHECK failed: (temp[size - 1]) == ('5'): \00", align 1
@.str.43 = private unnamed_addr constant [30 x i8] c"CHECK failed: (size) <= (6): \00", align 1
@_ZN6google8protobuf11StringPiece4nposE = external local_unnamed_addr constant i64, align 8
@.str.46 = private unnamed_addr constant [34 x i8] c"CHECK failed: result != nullptr: \00", align 1

@_ZN6google8protobuf7strings8AlphaNumC1ENS1_3HexE = hidden unnamed_addr alias void (%"struct.google::protobuf::strings::AlphaNum"*, i64, i32), void (%"struct.google::protobuf::strings::AlphaNum"*, i64, i32)* @_ZN6google8protobuf7strings8AlphaNumC2ENS1_3HexE

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6google8protobuf17ReplaceCharactersEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcc(%"class.std::__1::basic_string"*, i8* nocapture readonly, i8 signext) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  br label %13

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i8* [ %10, %8 ], [ %12, %11 ]
  %15 = tail call i8* @strpbrk(i8* %14, i8* %1) #21
  %16 = icmp eq i8* %15, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %13
  %18 = ptrtoint i8* %14 to i64
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %35, %17
  %22 = phi i8 [ %6, %17 ], [ %36, %35 ]
  %23 = phi i8* [ %15, %17 ], [ %33, %35 ]
  %24 = ptrtoint i8* %23 to i64
  %25 = sub i64 %24, %18
  %26 = icmp slt i8 %22, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = load i8*, i8** %20, align 8
  br label %29

29:                                               ; preds = %21, %27
  %30 = phi i8* [ %28, %27 ], [ %19, %21 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %25
  store i8 %2, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %23, i64 1
  %33 = tail call i8* @strpbrk(i8* %32, i8* %1) #21
  %34 = icmp eq i8* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = load i8, i8* %5, align 1
  br label %21

37:                                               ; preds = %29, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i8* @strpbrk(i8*, i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf15StripWhitespaceEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  %13 = trunc i64 %12 to i32
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %11
  %16 = and i64 %12, 4294967295
  br label %17

17:                                               ; preds = %22, %15
  %18 = phi i64 [ 0, %15 ], [ %23, %22 ]
  %19 = phi i32 [ 0, %15 ], [ %24, %22 ]
  %20 = tail call dereferenceable(1) i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE2atEm(%"class.std::__1::basic_string"* %0, i64 %18) #22
  %21 = load i8, i8* %20, align 1
  switch i8 %21, label %26 [
    i8 32, label %22
    i8 9, label %22
    i8 10, label %22
    i8 11, label %22
    i8 12, label %22
    i8 13, label %22
  ]

22:                                               ; preds = %17, %17, %17, %17, %17, %17
  %23 = add nuw nsw i64 %18, 1
  %24 = add nuw nsw i32 %19, 1
  %25 = icmp eq i64 %23, %16
  br i1 %25, label %28, label %17

26:                                               ; preds = %17
  %27 = trunc i64 %18 to i32
  br label %28

28:                                               ; preds = %22, %26, %11
  %29 = phi i32 [ 0, %11 ], [ %27, %26 ], [ %24, %22 ]
  %30 = icmp eq i32 %29, %13
  br i1 %30, label %31, label %40

31:                                               ; preds = %28
  %32 = load i8, i8* %3, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %37, align 8
  br label %86

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %39, align 1
  store i8 0, i8* %3, align 1
  br label %86

40:                                               ; preds = %28
  %41 = icmp eq i32 %29, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %40
  %43 = zext i32 %29 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 0, i64 %43) #22
  %44 = sub nsw i32 %13, %29
  br label %45

45:                                               ; preds = %40, %42
  %46 = phi i32 [ %44, %42 ], [ %13, %40 ]
  %47 = add nsw i32 %46, -1
  %48 = icmp sgt i32 %46, 0
  br i1 %48, label %49, label %86

49:                                               ; preds = %45
  %50 = sext i32 %46 to i64
  br label %51

51:                                               ; preds = %49, %56
  %52 = phi i64 [ %50, %49 ], [ %53, %56 ]
  %53 = add nsw i64 %52, -1
  %54 = tail call dereferenceable(1) i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE2atEm(%"class.std::__1::basic_string"* %0, i64 %53) #22
  %55 = load i8, i8* %54, align 1
  switch i8 %55, label %58 [
    i8 32, label %56
    i8 9, label %56
    i8 10, label %56
    i8 11, label %56
    i8 12, label %56
    i8 13, label %56
  ]

56:                                               ; preds = %51, %51, %51, %51, %51, %51
  %57 = icmp sgt i64 %53, 0
  br i1 %57, label %51, label %86

58:                                               ; preds = %51
  %59 = trunc i64 %53 to i32
  %60 = icmp eq i32 %47, %59
  br i1 %60, label %86, label %61

61:                                               ; preds = %58
  %62 = add nuw nsw i32 %59, 1
  %63 = sext i32 %62 to i64
  %64 = load i8, i8* %3, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  br label %71

69:                                               ; preds = %61
  %70 = zext i8 %64 to i64
  br label %71

71:                                               ; preds = %69, %66
  %72 = phi i64 [ %68, %66 ], [ %70, %69 ]
  %73 = icmp ult i64 %72, %63
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %75) #23
  unreachable

76:                                               ; preds = %71
  br i1 %65, label %77, label %82

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %63
  store i8 0, i8* %80, align 1
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %63, i64* %81, align 8
  br label %86

82:                                               ; preds = %76
  %83 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 %63
  store i8 0, i8* %84, align 1
  %85 = trunc i32 %62 to i8
  store i8 %85, i8* %3, align 1
  br label %86

86:                                               ; preds = %56, %58, %45, %82, %77, %38, %34
  ret void
}

declare dereferenceable(1) i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE2atEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf13StringReplaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_bPS7_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp eq i64 %13, 0
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  br i1 %14, label %28, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %40

28:                                               ; preds = %5
  %29 = load i8, i8* %16, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i8* %32, i8* %35
  %38 = select i1 %30, i64 %34, i64 %36
  %39 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %37, i64 %38) #22
  br label %123

40:                                               ; preds = %17, %94
  %41 = phi i64 [ %107, %94 ], [ %11, %17 ]
  %42 = phi i8 [ %105, %94 ], [ %8, %17 ]
  %43 = phi i64 [ %110, %94 ], [ 0, %17 ]
  %44 = load i8, i8* %16, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i8*, i8** %18, align 8
  %47 = load i64, i64* %19, align 8
  %48 = zext i8 %44 to i64
  %49 = select i1 %45, i8* %46, i8* %20
  %50 = select i1 %45, i64 %47, i64 %48
  %51 = icmp slt i8 %42, 0
  %52 = load i8*, i8** %21, align 8
  %53 = zext i8 %42 to i64
  %54 = select i1 %51, i8* %52, i8* %22
  %55 = select i1 %51, i64 %41, i64 %53
  %56 = icmp ult i64 %50, %43
  br i1 %56, label %114, label %57

57:                                               ; preds = %40
  %58 = icmp eq i64 %55, 0
  br i1 %58, label %91, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds i8, i8* %49, i64 %43
  %61 = getelementptr inbounds i8, i8* %49, i64 %50
  %62 = ptrtoint i8* %61 to i64
  %63 = ptrtoint i8* %60 to i64
  %64 = sub i64 %62, %63
  %65 = icmp slt i64 %64, %55
  br i1 %65, label %114, label %66

66:                                               ; preds = %59
  %67 = load i8, i8* %54, align 1
  %68 = zext i8 %67 to i32
  br label %69

69:                                               ; preds = %81, %66
  %70 = phi i64 [ %84, %81 ], [ %64, %66 ]
  %71 = phi i8* [ %82, %81 ], [ %60, %66 ]
  %72 = sub nsw i64 %70, %55
  %73 = add nsw i64 %72, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %114, label %75

75:                                               ; preds = %69
  %76 = tail call i8* @memchr(i8* %71, i32 %68, i64 %73) #22
  %77 = icmp eq i8* %76, null
  br i1 %77, label %114, label %78

78:                                               ; preds = %75
  %79 = tail call i32 @bcmp(i8* nonnull %76, i8* %54, i64 %55) #22
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds i8, i8* %76, i64 1
  %83 = ptrtoint i8* %82 to i64
  %84 = sub i64 %62, %83
  %85 = icmp slt i64 %84, %55
  br i1 %85, label %114, label %69

86:                                               ; preds = %78
  %87 = ptrtoint i8* %76 to i64
  %88 = icmp eq i8* %76, %61
  %89 = ptrtoint i8* %49 to i64
  %90 = sub i64 %87, %89
  br i1 %88, label %114, label %91

91:                                               ; preds = %86, %57
  %92 = phi i64 [ %43, %57 ], [ %90, %86 ]
  %93 = icmp eq i64 %92, -1
  br i1 %93, label %114, label %94

94:                                               ; preds = %91
  %95 = sub i64 %92, %43
  %96 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %43, i64 %95) #22
  %97 = load i8, i8* %24, align 1
  %98 = icmp slt i8 %97, 0
  %99 = load i8*, i8** %25, align 8
  %100 = load i64, i64* %26, align 8
  %101 = zext i8 %97 to i64
  %102 = select i1 %98, i8* %99, i8* %27
  %103 = select i1 %98, i64 %100, i64 %101
  %104 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %102, i64 %103) #22
  %105 = load i8, i8* %7, align 1
  %106 = icmp slt i8 %105, 0
  %107 = load i64, i64* %10, align 8
  %108 = zext i8 %105 to i64
  %109 = select i1 %106, i64 %107, i64 %108
  %110 = add i64 %109, %92
  br i1 %3, label %40, label %111

111:                                              ; preds = %94
  %112 = load i8, i8* %16, align 1
  %113 = load i64, i64* %19, align 8
  br label %114

114:                                              ; preds = %59, %86, %40, %91, %81, %75, %69, %111
  %115 = phi i8 [ %112, %111 ], [ %44, %69 ], [ %44, %75 ], [ %44, %81 ], [ %44, %91 ], [ %44, %40 ], [ %44, %86 ], [ %44, %59 ]
  %116 = phi i64 [ %113, %111 ], [ %47, %69 ], [ %47, %75 ], [ %47, %81 ], [ %47, %91 ], [ %47, %40 ], [ %47, %86 ], [ %47, %59 ]
  %117 = phi i64 [ %110, %111 ], [ %43, %69 ], [ %43, %75 ], [ %43, %81 ], [ %43, %91 ], [ %43, %40 ], [ %43, %86 ], [ %43, %59 ]
  %118 = zext i8 %115 to i64
  %119 = icmp slt i8 %115, 0
  %120 = select i1 %119, i64 %116, i64 %118
  %121 = sub i64 %120, %117
  %122 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %117, i64 %121) #22
  br label %123

123:                                              ; preds = %114, %28
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf13StringReplaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_b(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #3 {
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #22
  tail call void @_ZN6google8protobuf13StringReplaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_bPS7_(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3, i1 zeroext %4, %"class.std::__1::basic_string"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf16SplitStringUsingENS0_11StringPieceEPKcPNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(i8*, i64, i8*, %"class.std::__1::vector"*) local_unnamed_addr #3 {
  %5 = alloca %"class.google::protobuf::StringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.google::protobuf::StringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %5, i64 0, i32 0
  store i8* %0, i8** %10, align 8
  %11 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %5, i64 0, i32 1
  store i64 %1, i64* %11, align 8
  %12 = load i8, i8* %2, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %83, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds i8, i8* %2, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %83

18:                                               ; preds = %14
  %19 = getelementptr inbounds i8, i8* %0, i64 %1
  %20 = icmp eq i64 %1, 0
  br i1 %20, label %206, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.std::__1::basic_string"** %28 to i64*
  br label %31

31:                                               ; preds = %80, %21
  %32 = phi i8* [ %0, %21 ], [ %81, %80 ]
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, %12
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %32, i64 1
  br label %80

37:                                               ; preds = %31, %41
  %38 = phi i8* [ %39, %41 ], [ %32, %31 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 1
  %40 = icmp eq i8* %39, %19
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = load i8, i8* %39, align 1
  %43 = icmp eq i8 %42, %12
  br i1 %43, label %44, label %37

44:                                               ; preds = %41, %37
  %45 = phi i8* [ %39, %41 ], [ %19, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #22
  %46 = ptrtoint i8* %45 to i64
  %47 = ptrtoint i8* %32 to i64
  %48 = sub i64 %46, %47
  %49 = icmp ugt i64 %48, -17
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %51) #23
  unreachable

52:                                               ; preds = %44
  %53 = icmp ult i64 %48, 23
  br i1 %53, label %59, label %54

54:                                               ; preds = %52
  %55 = add nuw i64 %48, 16
  %56 = and i64 %55, -16
  %57 = call i8* @_Znwm(i64 %56) #24
  store i8* %57, i8** %23, align 8
  %58 = or i64 %56, -9223372036854775808
  store i64 %58, i64* %24, align 8
  store i64 %48, i64* %25, align 8
  br label %62

59:                                               ; preds = %52
  %60 = trunc i64 %48 to i8
  store i8 %60, i8* %27, align 1
  %61 = icmp eq i64 %48, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %59, %54
  %63 = phi i8* [ %57, %54 ], [ %22, %59 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* align 1 %32, i64 %48, i1 false) #22
  br label %64

64:                                               ; preds = %62, %59
  %65 = phi i8* [ %22, %59 ], [ %63, %62 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 %48
  store i8 0, i8* %66, align 1
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %69 = icmp ult %"class.std::__1::basic_string"* %67, %68
  br i1 %69, label %70, label %74

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %22, i64 24, i1 false) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #22
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 1
  %73 = ptrtoint %"class.std::__1::basic_string"* %72 to i64
  store i64 %73, i64* %30, align 8
  br label %79

74:                                               ; preds = %64
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #22
  %75 = load i8, i8* %27, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %78) #24
  br label %79

79:                                               ; preds = %70, %77, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #22
  br label %80

80:                                               ; preds = %79, %35
  %81 = phi i8* [ %36, %35 ], [ %45, %79 ]
  %82 = icmp eq i8* %81, %19
  br i1 %82, label %206, label %31

83:                                               ; preds = %14, %4
  %84 = icmp eq i8* %2, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = tail call i64 @strlen(i8* nonnull %2) #21
  br label %87

87:                                               ; preds = %85, %83
  %88 = phi i64 [ 0, %83 ], [ %86, %85 ]
  %89 = call i64 @_ZNK6google8protobuf11StringPiece17find_first_not_ofES1_m(%"class.google::protobuf::StringPiece"* nonnull %5, i8* %2, i64 %88, i64 0) #22
  %90 = icmp eq i64 %89, -1
  br i1 %90, label %206, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast %"class.std::__1::basic_string"** %98 to i64*
  br label %101

101:                                              ; preds = %202, %91
  %102 = phi i64 [ %89, %91 ], [ %204, %202 ]
  br i1 %84, label %105, label %103

103:                                              ; preds = %101
  %104 = call i64 @strlen(i8* nonnull %2) #21
  br label %105

105:                                              ; preds = %103, %101
  %106 = phi i64 [ 0, %101 ], [ %104, %103 ]
  %107 = call i64 @_ZNK6google8protobuf11StringPiece13find_first_ofES1_m(%"class.google::protobuf::StringPiece"* nonnull %5, i8* %2, i64 %106, i64 %102) #22
  %108 = icmp eq i64 %107, -1
  br i1 %108, label %109, label %160

109:                                              ; preds = %105
  %110 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #22
  %111 = load i64, i64* @_ZN6google8protobuf11StringPiece4nposE, align 8
  %112 = call { i8*, i64 } @_ZNK6google8protobuf11StringPiece6substrEmm(%"class.google::protobuf::StringPiece"* nonnull %5, i64 %102, i64 %111) #22
  %113 = extractvalue { i8*, i64 } %112, 0
  %114 = extractvalue { i8*, i64 } %112, 1
  %115 = icmp eq i8* %113, null
  br i1 %115, label %116, label %119

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  store i8 0, i8* %118, align 1, !alias.scope !2
  store i8 0, i8* %110, align 8, !alias.scope !2
  br label %143

119:                                              ; preds = %109
  %120 = icmp ugt i64 %114, -17
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %122) #23
  unreachable

123:                                              ; preds = %119
  %124 = icmp ult i64 %114, 23
  br i1 %124, label %133, label %125

125:                                              ; preds = %123
  %126 = add nuw i64 %114, 16
  %127 = and i64 %126, -16
  %128 = call i8* @_Znwm(i64 %127) #24
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %128, i8** %129, align 8, !alias.scope !2
  %130 = or i64 %127, -9223372036854775808
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %130, i64* %131, align 8, !alias.scope !2
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %114, i64* %132, align 8, !alias.scope !2
  br label %138

133:                                              ; preds = %123
  %134 = trunc i64 %114 to i8
  %135 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  store i8 %134, i8* %136, align 1, !alias.scope !2
  %137 = icmp eq i64 %114, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %133, %125
  %139 = phi i8* [ %128, %125 ], [ %110, %133 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %139, i8* nonnull align 1 %113, i64 %114, i1 false) #22
  br label %140

140:                                              ; preds = %138, %133
  %141 = phi i8* [ %110, %133 ], [ %139, %138 ]
  %142 = getelementptr inbounds i8, i8* %141, i64 %114
  store i8 0, i8* %142, align 1
  br label %143

143:                                              ; preds = %140, %116
  %144 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %98, align 8
  %145 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %99, align 8
  %146 = icmp ult %"class.std::__1::basic_string"* %144, %145
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = bitcast %"class.std::__1::basic_string"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* nonnull align 8 %110, i64 24, i1 false) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 24, i1 false) #22
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %144, i64 1
  %150 = ptrtoint %"class.std::__1::basic_string"* %149 to i64
  store i64 %150, i64* %100, align 8
  br label %159

151:                                              ; preds = %143
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #22
  %152 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #24
  br label %159

159:                                              ; preds = %147, %156, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #22
  br label %206

160:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #22
  %161 = sub i64 %107, %102
  %162 = call { i8*, i64 } @_ZNK6google8protobuf11StringPiece6substrEmm(%"class.google::protobuf::StringPiece"* nonnull %5, i64 %102, i64 %161) #22
  %163 = extractvalue { i8*, i64 } %162, 0
  %164 = extractvalue { i8*, i64 } %162, 1
  %165 = icmp eq i8* %163, null
  br i1 %165, label %166, label %167

166:                                              ; preds = %160
  store i8 0, i8* %97, align 1, !alias.scope !7
  store i8 0, i8* %92, align 8, !alias.scope !7
  br label %186

167:                                              ; preds = %160
  %168 = icmp ugt i64 %164, -17
  br i1 %168, label %169, label %171

169:                                              ; preds = %167
  %170 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %170) #23
  unreachable

171:                                              ; preds = %167
  %172 = icmp ult i64 %164, 23
  br i1 %172, label %178, label %173

173:                                              ; preds = %171
  %174 = add nuw i64 %164, 16
  %175 = and i64 %174, -16
  %176 = call i8* @_Znwm(i64 %175) #24
  store i8* %176, i8** %93, align 8, !alias.scope !7
  %177 = or i64 %175, -9223372036854775808
  store i64 %177, i64* %94, align 8, !alias.scope !7
  store i64 %164, i64* %95, align 8, !alias.scope !7
  br label %181

178:                                              ; preds = %171
  %179 = trunc i64 %164 to i8
  store i8 %179, i8* %97, align 1, !alias.scope !7
  %180 = icmp eq i64 %164, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %178, %173
  %182 = phi i8* [ %176, %173 ], [ %92, %178 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %182, i8* nonnull align 1 %163, i64 %164, i1 false) #22
  br label %183

183:                                              ; preds = %181, %178
  %184 = phi i8* [ %92, %178 ], [ %182, %181 ]
  %185 = getelementptr inbounds i8, i8* %184, i64 %164
  store i8 0, i8* %185, align 1
  br label %186

186:                                              ; preds = %183, %166
  %187 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %98, align 8
  %188 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %99, align 8
  %189 = icmp ult %"class.std::__1::basic_string"* %187, %188
  br i1 %189, label %190, label %194

190:                                              ; preds = %186
  %191 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* nonnull align 8 %92, i64 24, i1 false) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 24, i1 false) #22
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 1
  %193 = ptrtoint %"class.std::__1::basic_string"* %192 to i64
  store i64 %193, i64* %100, align 8
  br label %199

194:                                              ; preds = %186
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #22
  %195 = load i8, i8* %97, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %194
  %198 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %198) #24
  br label %199

199:                                              ; preds = %190, %197, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #22
  br i1 %84, label %202, label %200

200:                                              ; preds = %199
  %201 = call i64 @strlen(i8* nonnull %2) #21
  br label %202

202:                                              ; preds = %200, %199
  %203 = phi i64 [ 0, %199 ], [ %201, %200 ]
  %204 = call i64 @_ZNK6google8protobuf11StringPiece17find_first_not_ofES1_m(%"class.google::protobuf::StringPiece"* nonnull %5, i8* %2, i64 %203, i64 %107) #22
  %205 = icmp eq i64 %204, -1
  br i1 %205, label %206, label %101

206:                                              ; preds = %80, %202, %18, %87, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf21SplitStringAllowEmptyENS0_11StringPieceEPKcPNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(i8*, i64, i8*, %"class.std::__1::vector"*) local_unnamed_addr #3 {
  %5 = alloca %"class.google::protobuf::StringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.google::protobuf::StringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %5, i64 0, i32 0
  store i8* %0, i8** %9, align 8
  %10 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %5, i64 0, i32 1
  store i64 %1, i64* %10, align 8
  %11 = icmp eq i8* %2, null
  %12 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  br label %21

21:                                               ; preds = %118, %4
  %22 = phi i64 [ 0, %4 ], [ %119, %118 ]
  br i1 %11, label %25, label %23

23:                                               ; preds = %21
  %24 = call i64 @strlen(i8* nonnull %2) #21
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi i64 [ 0, %21 ], [ %24, %23 ]
  %27 = call i64 @_ZNK6google8protobuf11StringPiece13find_first_ofES1_m(%"class.google::protobuf::StringPiece"* nonnull %5, i8* %2, i64 %26, i64 %22) #22
  %28 = icmp eq i64 %27, -1
  br i1 %28, label %29, label %79

29:                                               ; preds = %25
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #22
  %31 = load i64, i64* @_ZN6google8protobuf11StringPiece4nposE, align 8
  %32 = call { i8*, i64 } @_ZNK6google8protobuf11StringPiece6substrEmm(%"class.google::protobuf::StringPiece"* nonnull %5, i64 %22, i64 %31) #22
  %33 = extractvalue { i8*, i64 } %32, 0
  %34 = extractvalue { i8*, i64 } %32, 1
  %35 = icmp eq i8* %33, null
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 0, i8* %38, align 1, !alias.scope !12
  store i8 0, i8* %30, align 8, !alias.scope !12
  br label %63

39:                                               ; preds = %29
  %40 = icmp ugt i64 %34, -17
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %42) #23
  unreachable

43:                                               ; preds = %39
  %44 = icmp ult i64 %34, 23
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = add nuw i64 %34, 16
  %47 = and i64 %46, -16
  %48 = call i8* @_Znwm(i64 %47) #24
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8, !alias.scope !12
  %50 = or i64 %47, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8, !alias.scope !12
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %52, align 8, !alias.scope !12
  br label %58

53:                                               ; preds = %43
  %54 = trunc i64 %34 to i8
  %55 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 %54, i8* %56, align 1, !alias.scope !12
  %57 = icmp eq i64 %34, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %53, %45
  %59 = phi i8* [ %48, %45 ], [ %30, %53 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* nonnull align 1 %33, i64 %34, i1 false) #22
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i8* [ %30, %53 ], [ %59, %58 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %34
  store i8 0, i8* %62, align 1
  br label %63

63:                                               ; preds = %60, %36
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %65 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %66 = icmp ult %"class.std::__1::basic_string"* %64, %65
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %30, i64 24, i1 false) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #22
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 1
  %70 = ptrtoint %"class.std::__1::basic_string"* %69 to i64
  store i64 %70, i64* %20, align 8
  br label %120

71:                                               ; preds = %63
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #22
  %72 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %120

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #24
  br label %120

79:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #22
  %80 = sub i64 %27, %22
  %81 = call { i8*, i64 } @_ZNK6google8protobuf11StringPiece6substrEmm(%"class.google::protobuf::StringPiece"* nonnull %5, i64 %22, i64 %80) #22
  %82 = extractvalue { i8*, i64 } %81, 0
  %83 = extractvalue { i8*, i64 } %81, 1
  %84 = icmp eq i8* %82, null
  br i1 %84, label %85, label %86

85:                                               ; preds = %79
  store i8 0, i8* %17, align 1, !alias.scope !17
  store i8 0, i8* %12, align 8, !alias.scope !17
  br label %105

86:                                               ; preds = %79
  %87 = icmp ugt i64 %83, -17
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %89) #23
  unreachable

90:                                               ; preds = %86
  %91 = icmp ult i64 %83, 23
  br i1 %91, label %97, label %92

92:                                               ; preds = %90
  %93 = add nuw i64 %83, 16
  %94 = and i64 %93, -16
  %95 = call i8* @_Znwm(i64 %94) #24
  store i8* %95, i8** %13, align 8, !alias.scope !17
  %96 = or i64 %94, -9223372036854775808
  store i64 %96, i64* %14, align 8, !alias.scope !17
  store i64 %83, i64* %15, align 8, !alias.scope !17
  br label %100

97:                                               ; preds = %90
  %98 = trunc i64 %83 to i8
  store i8 %98, i8* %17, align 1, !alias.scope !17
  %99 = icmp eq i64 %83, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %97, %92
  %101 = phi i8* [ %95, %92 ], [ %12, %97 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* nonnull align 1 %82, i64 %83, i1 false) #22
  br label %102

102:                                              ; preds = %100, %97
  %103 = phi i8* [ %12, %97 ], [ %101, %100 ]
  %104 = getelementptr inbounds i8, i8* %103, i64 %83
  store i8 0, i8* %104, align 1
  br label %105

105:                                              ; preds = %102, %85
  %106 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %107 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %108 = icmp ult %"class.std::__1::basic_string"* %106, %107
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  %110 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* nonnull align 8 %12, i64 24, i1 false) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #22
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 1
  %112 = ptrtoint %"class.std::__1::basic_string"* %111 to i64
  store i64 %112, i64* %20, align 8
  br label %118

113:                                              ; preds = %105
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #22
  %114 = load i8, i8* %17, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %117) #24
  br label %118

118:                                              ; preds = %109, %116, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #22
  %119 = add nuw i64 %27, 1
  br label %21

120:                                              ; preds = %67, %71, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf11JoinStringsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPKcPS8_(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), i8*, %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %4 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %5 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %2, null
  %11 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #22
  br i1 %10, label %12, label %15

12:                                               ; preds = %3
  %13 = bitcast %"class.google::protobuf::internal::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #22
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 266) #22
  %14 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.46, i64 0, i64 0)) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %5, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %14) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #22
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #22
  br label %16

15:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #22
  br label %16

16:                                               ; preds = %15, %12
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %24, align 8
  br label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %26, align 1
  store i8 0, i8* %18, align 1
  br label %27

27:                                               ; preds = %25, %21
  %28 = call i64 @strlen(i8* %1) #21
  %29 = trunc i64 %28 to i32
  %30 = icmp eq %"class.std::__1::basic_string"* %7, %9
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %2, i64 0) #22
  br label %81

32:                                               ; preds = %51
  %33 = sext i32 %54 to i64
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %2, i64 %33) #22
  %34 = shl i64 %28, 32
  %35 = ashr exact i64 %34, 32
  br label %57

36:                                               ; preds = %27, %51
  %37 = phi i32 [ %54, %51 ], [ 0, %27 ]
  %38 = phi %"class.std::__1::basic_string"* [ %55, %51 ], [ %7, %27 ]
  %39 = icmp eq %"class.std::__1::basic_string"* %38, %7
  %40 = select i1 %39, i32 0, i32 %29
  %41 = add nsw i32 %40, %37
  %42 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  br label %51

49:                                               ; preds = %36
  %50 = zext i8 %44 to i64
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi i64 [ %48, %46 ], [ %50, %49 ]
  %53 = trunc i64 %52 to i32
  %54 = add i32 %41, %53
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %56 = icmp eq %"class.std::__1::basic_string"* %55, %9
  br i1 %56, label %32, label %36

57:                                               ; preds = %75, %32
  %58 = phi %"class.std::__1::basic_string"* [ %7, %32 ], [ %79, %75 ]
  %59 = icmp eq %"class.std::__1::basic_string"* %58, %7
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* %1, i64 %35) #22
  br label %62

62:                                               ; preds = %60, %57
  %63 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  br label %75

72:                                               ; preds = %62
  %73 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %74 = zext i8 %65 to i64
  br label %75

75:                                               ; preds = %72, %67
  %76 = phi i8* [ %69, %67 ], [ %73, %72 ]
  %77 = phi i64 [ %71, %67 ], [ %74, %72 ]
  %78 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* %76, i64 %77) #22
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 1
  %80 = icmp eq %"class.std::__1::basic_string"* %79, %9
  br i1 %80, label %81, label %57

81:                                               ; preds = %75, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf24UnescapeCEscapeSequencesEPKcPc(i8* readonly, i8*) local_unnamed_addr #5 {
  %3 = tail call i32 @_ZN6google8protobuf24UnescapeCEscapeSequencesEPKcPcPNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(i8* %0, i8* %1, %"class.std::__1::vector"* undef)
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf24UnescapeCEscapeSequencesEPKcPcPNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(i8* readonly, i8*, %"class.std::__1::vector"* nocapture readnone) local_unnamed_addr #5 {
  %4 = icmp eq i8* %0, %1
  br i1 %4, label %5, label %13

5:                                                ; preds = %3, %9
  %6 = phi i8* [ %10, %9 ], [ %0, %3 ]
  %7 = phi i8* [ %11, %9 ], [ %0, %3 ]
  %8 = load i8, i8* %6, align 1
  switch i8 %8, label %9 [
    i8 0, label %17
    i8 92, label %17
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %6, i64 1
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = icmp eq i8* %6, %7
  br i1 %12, label %5, label %13

13:                                               ; preds = %9, %3
  %14 = phi i8* [ %1, %3 ], [ %11, %9 ]
  %15 = phi i8* [ %0, %3 ], [ %10, %9 ]
  %16 = load i8, i8* %15, align 1
  br label %17

17:                                               ; preds = %5, %5, %13
  %18 = phi i8 [ %16, %13 ], [ %8, %5 ], [ %8, %5 ]
  %19 = phi i8* [ %14, %13 ], [ %7, %5 ], [ %7, %5 ]
  %20 = phi i8* [ %15, %13 ], [ %6, %5 ], [ %6, %5 ]
  %21 = icmp eq i8 %18, 0
  br i1 %21, label %115, label %22

22:                                               ; preds = %17, %110
  %23 = phi i8 [ %113, %110 ], [ %18, %17 ]
  %24 = phi i8* [ %112, %110 ], [ %20, %17 ]
  %25 = phi i8* [ %111, %110 ], [ %19, %17 ]
  %26 = icmp eq i8 %23, 92
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  br i1 %26, label %30, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %23, i8* %25, align 1
  br label %110

30:                                               ; preds = %22
  %31 = load i8, i8* %27, align 1
  %32 = sext i8 %31 to i32
  switch i32 %32, label %106 [
    i32 0, label %115
    i32 97, label %33
    i32 98, label %35
    i32 102, label %37
    i32 110, label %39
    i32 114, label %41
    i32 116, label %43
    i32 118, label %45
    i32 92, label %47
    i32 63, label %49
    i32 39, label %51
    i32 34, label %53
    i32 48, label %55
    i32 49, label %55
    i32 50, label %55
    i32 51, label %55
    i32 52, label %55
    i32 53, label %55
    i32 54, label %55
    i32 55, label %55
    i32 120, label %80
    i32 88, label %80
  ]

33:                                               ; preds = %30
  %34 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 7, i8* %25, align 1
  br label %106

35:                                               ; preds = %30
  %36 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 8, i8* %25, align 1
  br label %106

37:                                               ; preds = %30
  %38 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 12, i8* %25, align 1
  br label %106

39:                                               ; preds = %30
  %40 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 10, i8* %25, align 1
  br label %106

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 13, i8* %25, align 1
  br label %106

43:                                               ; preds = %30
  %44 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 9, i8* %25, align 1
  br label %106

45:                                               ; preds = %30
  %46 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 11, i8* %25, align 1
  br label %106

47:                                               ; preds = %30
  %48 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 92, i8* %25, align 1
  br label %106

49:                                               ; preds = %30
  %50 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 63, i8* %25, align 1
  br label %106

51:                                               ; preds = %30
  %52 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 39, i8* %25, align 1
  br label %106

53:                                               ; preds = %30
  %54 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 34, i8* %25, align 1
  br label %106

55:                                               ; preds = %30, %30, %30, %30, %30, %30, %30, %30
  %56 = add i8 %31, -48
  %57 = getelementptr inbounds i8, i8* %24, i64 2
  %58 = load i8, i8* %57, align 1
  %59 = and i8 %58, -8
  %60 = icmp eq i8 %59, 48
  br i1 %60, label %61, label %65

61:                                               ; preds = %55
  %62 = shl i8 %56, 3
  %63 = add i8 %62, -48
  %64 = add i8 %63, %58
  br label %65

65:                                               ; preds = %61, %55
  %66 = phi i8* [ %57, %61 ], [ %27, %55 ]
  %67 = phi i8 [ %64, %61 ], [ %56, %55 ]
  %68 = getelementptr inbounds i8, i8* %66, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = and i8 %69, -8
  %71 = icmp eq i8 %70, 48
  br i1 %71, label %72, label %76

72:                                               ; preds = %65
  %73 = shl i8 %67, 3
  %74 = add i8 %69, -48
  %75 = add i8 %74, %73
  br label %76

76:                                               ; preds = %72, %65
  %77 = phi i8* [ %68, %72 ], [ %66, %65 ]
  %78 = phi i8 [ %75, %72 ], [ %67, %65 ]
  %79 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %78, i8* %25, align 1
  br label %106

80:                                               ; preds = %30, %30
  %81 = getelementptr inbounds i8, i8* %24, i64 2
  %82 = load i8, i8* %81, align 1
  %83 = add i8 %82, -48
  %84 = icmp ult i8 %83, 10
  br i1 %84, label %86, label %85

85:                                               ; preds = %80
  switch i8 %82, label %106 [
    i8 102, label %86
    i8 101, label %86
    i8 100, label %86
    i8 99, label %86
    i8 98, label %86
    i8 97, label %86
    i8 70, label %86
    i8 69, label %86
    i8 68, label %86
    i8 67, label %86
    i8 66, label %86
    i8 65, label %86
  ]

86:                                               ; preds = %80, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85
  br label %87

87:                                               ; preds = %86, %95
  %88 = phi i8* [ %90, %95 ], [ %27, %86 ]
  %89 = phi i32 [ %102, %95 ], [ 0, %86 ]
  %90 = getelementptr inbounds i8, i8* %88, i64 1
  %91 = load i8, i8* %90, align 1
  %92 = add i8 %91, -48
  %93 = icmp ult i8 %92, 10
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  switch i8 %91, label %103 [
    i8 102, label %95
    i8 101, label %95
    i8 100, label %95
    i8 99, label %95
    i8 98, label %95
    i8 97, label %95
    i8 70, label %95
    i8 69, label %95
    i8 68, label %95
    i8 67, label %95
    i8 66, label %95
    i8 65, label %95
  ]

95:                                               ; preds = %94, %94, %94, %94, %94, %94, %94, %94, %94, %94, %94, %94, %87
  %96 = shl i32 %89, 4
  %97 = zext i8 %91 to i32
  %98 = icmp ugt i8 %91, 57
  %99 = add nuw nsw i32 %97, 9
  %100 = select i1 %98, i32 %99, i32 %97
  %101 = and i32 %100, 15
  %102 = or i32 %101, %96
  br label %87

103:                                              ; preds = %94
  %104 = trunc i32 %89 to i8
  %105 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %104, i8* %25, align 1
  br label %106

106:                                              ; preds = %85, %30, %103, %76, %53, %51, %49, %47, %45, %43, %41, %39, %37, %35, %33
  %107 = phi i8* [ %25, %30 ], [ %105, %103 ], [ %79, %76 ], [ %54, %53 ], [ %52, %51 ], [ %50, %49 ], [ %48, %47 ], [ %46, %45 ], [ %44, %43 ], [ %42, %41 ], [ %40, %39 ], [ %38, %37 ], [ %36, %35 ], [ %34, %33 ], [ %25, %85 ]
  %108 = phi i8* [ %27, %30 ], [ %88, %103 ], [ %77, %76 ], [ %27, %53 ], [ %27, %51 ], [ %27, %49 ], [ %27, %47 ], [ %27, %45 ], [ %27, %43 ], [ %27, %41 ], [ %27, %39 ], [ %27, %37 ], [ %27, %35 ], [ %27, %33 ], [ %27, %85 ]
  %109 = getelementptr inbounds i8, i8* %108, i64 1
  br label %110

110:                                              ; preds = %106, %28
  %111 = phi i8* [ %29, %28 ], [ %107, %106 ]
  %112 = phi i8* [ %27, %28 ], [ %109, %106 ]
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %22

115:                                              ; preds = %110, %30, %17
  %116 = phi i8* [ %19, %17 ], [ %111, %110 ], [ %25, %30 ]
  store i8 0, i8* %116, align 1
  %117 = ptrtoint i8* %116 to i64
  %118 = ptrtoint i8* %1 to i64
  %119 = sub i64 %117, %118
  %120 = trunc i64 %119 to i32
  ret i32 %120
}

declare void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"*, i32, i8*, i32) unnamed_addr #4

declare dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"*, i8*) local_unnamed_addr #4

declare void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"*, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf21UnescapeCEscapeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %3 = tail call i32 @_ZN6google8protobuf21UnescapeCEscapeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_PNS1_6vectorIS7_NS5_IS7_EEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string"* %1, %"class.std::__1::vector"* undef)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf21UnescapeCEscapeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_PNS1_6vectorIS7_NS5_IS7_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.std::__1::vector"* nocapture readnone) local_unnamed_addr #3 {
  %4 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %5 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 1
  %14 = tail call i8* @_Znam(i64 %13) #24
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  br label %22

17:                                               ; preds = %3
  %18 = zext i8 %8 to i64
  %19 = add nuw nsw i64 %18, 1
  %20 = tail call i8* @_Znam(i64 %19) #24
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %22

22:                                               ; preds = %10, %17
  %23 = phi i8* [ %14, %10 ], [ %20, %17 ]
  %24 = phi i8* [ %16, %10 ], [ %21, %17 ]
  %25 = tail call i32 @_ZN6google8protobuf24UnescapeCEscapeSequencesEPKcPcPNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(i8* %24, i8* nonnull %23, %"class.std::__1::vector"* undef)
  %26 = icmp eq %"class.std::__1::basic_string"* %1, null
  %27 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #22
  br i1 %26, label %28, label %31

28:                                               ; preds = %22
  %29 = bitcast %"class.google::protobuf::internal::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #22
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 457) #22
  %30 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %5, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %30) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #22
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #22
  br label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #22
  br label %32

32:                                               ; preds = %31, %28
  %33 = sext i32 %25 to i64
  %34 = call i1 @llvm.is.constant.i64(i64 %33) #22
  %35 = icmp ult i32 %25, 23
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %55

37:                                               ; preds = %32
  %38 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  br label %49

46:                                               ; preds = %37
  %47 = trunc i32 %25 to i8
  store i8 %47, i8* %39, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %49

49:                                               ; preds = %46, %42
  %50 = phi i8* [ %45, %42 ], [ %48, %46 ]
  %51 = icmp eq i32 %25, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %50, i8* nonnull align 1 %23, i64 %33, i1 false) #22
  br label %53

53:                                               ; preds = %52, %49
  %54 = getelementptr inbounds i8, i8* %50, i64 %33
  store i8 0, i8* %54, align 1
  br label %57

55:                                               ; preds = %32
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %1, i8* nonnull %23, i64 %33) #22
  br label %57

57:                                               ; preds = %53, %55
  call void @_ZdaPv(i8* nonnull %23) #24
  ret i32 %25
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf21UnescapeCEscapeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 1
  %11 = tail call i8* @_Znam(i64 %10) #24
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = zext i8 %5 to i64
  %16 = add nuw nsw i64 %15, 1
  %17 = tail call i8* @_Znam(i64 %16) #24
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %19

19:                                               ; preds = %7, %14
  %20 = phi i8* [ %11, %7 ], [ %17, %14 ]
  %21 = phi i8* [ %13, %7 ], [ %18, %14 ]
  %22 = tail call i32 @_ZN6google8protobuf24UnescapeCEscapeSequencesEPKcPcPNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(i8* %21, i8* nonnull %20, %"class.std::__1::vector"* undef)
  %23 = sext i32 %22 to i64
  %24 = icmp ugt i32 %22, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %26) #23
  unreachable

27:                                               ; preds = %19
  %28 = icmp ult i32 %22, 23
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = add nuw nsw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #24
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = or i64 %31, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %36, align 8
  br label %43

37:                                               ; preds = %27
  %38 = trunc i32 %22 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %42 = icmp eq i32 %22, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %37, %29
  %44 = phi i8* [ %32, %29 ], [ %41, %37 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* nonnull align 1 %20, i64 %23, i1 false) #22
  br label %45

45:                                               ; preds = %37, %43
  %46 = phi i8* [ %41, %37 ], [ %44, %43 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %23
  store i8 0, i8* %47, align 1
  tail call void @_ZdaPv(i8* nonnull %20) #24
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf15CEscapeInternalEPKciPcibb(i8* readonly, i32, i8* nocapture, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = icmp sgt i32 %1, 0
  br i1 %9, label %10, label %96

10:                                               ; preds = %6
  %11 = xor i1 %5, true
  %12 = select i1 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)
  br label %13

13:                                               ; preds = %10, %89
  %14 = phi i32 [ %3, %10 ], [ %95, %89 ]
  %15 = phi i8 [ 0, %10 ], [ %92, %89 ]
  %16 = phi i32 [ 0, %10 ], [ %90, %89 ]
  %17 = phi i8* [ %0, %10 ], [ %93, %89 ]
  %18 = icmp slt i32 %14, 2
  br i1 %18, label %103, label %19

19:                                               ; preds = %13
  %20 = load i8, i8* %17, align 1
  %21 = sext i8 %20 to i32
  switch i32 %21, label %64 [
    i32 10, label %22
    i32 13, label %29
    i32 9, label %36
    i32 34, label %43
    i32 39, label %50
    i32 92, label %57
  ]

22:                                               ; preds = %19
  %23 = add nsw i32 %16, 1
  %24 = sext i32 %16 to i64
  %25 = getelementptr inbounds i8, i8* %2, i64 %24
  store i8 92, i8* %25, align 1
  %26 = add nsw i32 %16, 2
  %27 = sext i32 %23 to i64
  %28 = getelementptr inbounds i8, i8* %2, i64 %27
  store i8 110, i8* %28, align 1
  br label %89

29:                                               ; preds = %19
  %30 = add nsw i32 %16, 1
  %31 = sext i32 %16 to i64
  %32 = getelementptr inbounds i8, i8* %2, i64 %31
  store i8 92, i8* %32, align 1
  %33 = add nsw i32 %16, 2
  %34 = sext i32 %30 to i64
  %35 = getelementptr inbounds i8, i8* %2, i64 %34
  store i8 114, i8* %35, align 1
  br label %89

36:                                               ; preds = %19
  %37 = add nsw i32 %16, 1
  %38 = sext i32 %16 to i64
  %39 = getelementptr inbounds i8, i8* %2, i64 %38
  store i8 92, i8* %39, align 1
  %40 = add nsw i32 %16, 2
  %41 = sext i32 %37 to i64
  %42 = getelementptr inbounds i8, i8* %2, i64 %41
  store i8 116, i8* %42, align 1
  br label %89

43:                                               ; preds = %19
  %44 = add nsw i32 %16, 1
  %45 = sext i32 %16 to i64
  %46 = getelementptr inbounds i8, i8* %2, i64 %45
  store i8 92, i8* %46, align 1
  %47 = add nsw i32 %16, 2
  %48 = sext i32 %44 to i64
  %49 = getelementptr inbounds i8, i8* %2, i64 %48
  store i8 34, i8* %49, align 1
  br label %89

50:                                               ; preds = %19
  %51 = add nsw i32 %16, 1
  %52 = sext i32 %16 to i64
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  store i8 92, i8* %53, align 1
  %54 = add nsw i32 %16, 2
  %55 = sext i32 %51 to i64
  %56 = getelementptr inbounds i8, i8* %2, i64 %55
  store i8 39, i8* %56, align 1
  br label %89

57:                                               ; preds = %19
  %58 = add nsw i32 %16, 1
  %59 = sext i32 %16 to i64
  %60 = getelementptr inbounds i8, i8* %2, i64 %59
  store i8 92, i8* %60, align 1
  %61 = add nsw i32 %16, 2
  %62 = sext i32 %58 to i64
  %63 = getelementptr inbounds i8, i8* %2, i64 %62
  store i8 92, i8* %63, align 1
  br label %89

64:                                               ; preds = %19
  %65 = icmp sgt i8 %20, -1
  %66 = or i1 %65, %11
  br i1 %66, label %67, label %85

67:                                               ; preds = %64
  %68 = icmp sgt i8 %20, 31
  %69 = icmp ne i8 %20, 127
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = icmp eq i8 %15, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %71
  %74 = add nsw i8 %20, -48
  %75 = icmp ult i8 %74, 10
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  switch i8 %20, label %85 [
    i8 102, label %77
    i8 101, label %77
    i8 100, label %77
    i8 99, label %77
    i8 98, label %77
    i8 97, label %77
    i8 70, label %77
    i8 69, label %77
    i8 68, label %77
    i8 67, label %77
    i8 66, label %77
    i8 65, label %77
  ]

77:                                               ; preds = %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %73, %67
  %78 = icmp slt i32 %14, 4
  br i1 %78, label %103, label %79

79:                                               ; preds = %77
  %80 = sext i32 %16 to i64
  %81 = getelementptr inbounds i8, i8* %2, i64 %80
  %82 = zext i8 %20 to i32
  %83 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %81, i8* %12, i32 %82) #22
  %84 = add nsw i32 %16, 4
  br label %89

85:                                               ; preds = %76, %64, %71
  %86 = add nsw i32 %16, 1
  %87 = sext i32 %16 to i64
  %88 = getelementptr inbounds i8, i8* %2, i64 %87
  store i8 %20, i8* %88, align 1
  br label %89

89:                                               ; preds = %22, %29, %36, %43, %50, %57, %85, %79
  %90 = phi i32 [ %84, %79 ], [ %86, %85 ], [ %61, %57 ], [ %54, %50 ], [ %47, %43 ], [ %40, %36 ], [ %33, %29 ], [ %26, %22 ]
  %91 = phi i1 [ %4, %79 ], [ false, %85 ], [ false, %57 ], [ false, %50 ], [ false, %43 ], [ false, %36 ], [ false, %29 ], [ false, %22 ]
  %92 = zext i1 %91 to i8
  %93 = getelementptr inbounds i8, i8* %17, i64 1
  %94 = icmp ult i8* %93, %8
  %95 = sub nsw i32 %3, %90
  br i1 %94, label %13, label %96

96:                                               ; preds = %89, %6
  %97 = phi i32 [ 0, %6 ], [ %90, %89 ]
  %98 = phi i32 [ %3, %6 ], [ %95, %89 ]
  %99 = icmp slt i32 %98, 1
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = sext i32 %97 to i64
  %102 = getelementptr inbounds i8, i8* %2, i64 %101
  store i8 0, i8* %102, align 1
  br label %103

103:                                              ; preds = %77, %13, %96, %100
  %104 = phi i32 [ %97, %100 ], [ -1, %96 ], [ -1, %13 ], [ -1, %77 ]
  ret i32 %104
}

; Function Attrs: nofree nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf16CEscapeAndAppendENS0_11StringPieceEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %4 = icmp sgt i64 %1, 0
  br i1 %4, label %5, label %68

5:                                                ; preds = %3
  %6 = add i64 %1, -1
  %7 = and i64 %1, 3
  %8 = icmp ult i64 %6, 3
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = sub i64 %1, %7
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %46, %11 ]
  %13 = phi i64 [ 0, %9 ], [ %45, %11 ]
  %14 = phi i64 [ %10, %9 ], [ %47, %11 ]
  %15 = getelementptr inbounds i8, i8* %0, i64 %12
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN6google8protobufL14CEscapedLengthENS0_11StringPieceEE13c_escaped_len, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i64
  %21 = add i64 %13, %20
  %22 = or i64 %12, 1
  %23 = getelementptr inbounds i8, i8* %0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN6google8protobufL14CEscapedLengthENS0_11StringPieceEE13c_escaped_len, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i64
  %29 = add i64 %21, %28
  %30 = or i64 %12, 2
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN6google8protobufL14CEscapedLengthENS0_11StringPieceEE13c_escaped_len, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i64
  %37 = add i64 %29, %36
  %38 = or i64 %12, 3
  %39 = getelementptr inbounds i8, i8* %0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN6google8protobufL14CEscapedLengthENS0_11StringPieceEE13c_escaped_len, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i64
  %45 = add i64 %37, %44
  %46 = add nuw nsw i64 %12, 4
  %47 = add i64 %14, -4
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %11

49:                                               ; preds = %11, %5
  %50 = phi i64 [ undef, %5 ], [ %45, %11 ]
  %51 = phi i64 [ 0, %5 ], [ %46, %11 ]
  %52 = phi i64 [ 0, %5 ], [ %45, %11 ]
  %53 = icmp eq i64 %7, 0
  br i1 %53, label %68, label %54

54:                                               ; preds = %49, %54
  %55 = phi i64 [ %65, %54 ], [ %51, %49 ]
  %56 = phi i64 [ %64, %54 ], [ %52, %49 ]
  %57 = phi i64 [ %66, %54 ], [ %7, %49 ]
  %58 = getelementptr inbounds i8, i8* %0, i64 %55
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN6google8protobufL14CEscapedLengthENS0_11StringPieceEE13c_escaped_len, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i64
  %64 = add i64 %56, %63
  %65 = add nuw nsw i64 %55, 1
  %66 = add i64 %57, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %54, !llvm.loop !22

68:                                               ; preds = %49, %54, %3
  %69 = phi i64 [ 0, %3 ], [ %50, %49 ], [ %64, %54 ]
  %70 = icmp eq i64 %69, %1
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* %0, i64 %1) #22
  br label %141

73:                                               ; preds = %68
  %74 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  br label %83

81:                                               ; preds = %73
  %82 = zext i8 %76 to i64
  br label %83

83:                                               ; preds = %78, %81
  %84 = phi i64 [ %80, %78 ], [ %82, %81 ]
  %85 = add i64 %84, %69
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %85, i8 signext 0) #22
  %86 = load i8, i8* %75, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  br label %93

91:                                               ; preds = %83
  %92 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %93

93:                                               ; preds = %88, %91
  %94 = phi i8* [ %90, %88 ], [ %92, %91 ]
  br i1 %4, label %95, label %141

95:                                               ; preds = %93
  %96 = getelementptr inbounds i8, i8* %94, i64 %84
  br label %97

97:                                               ; preds = %137, %95
  %98 = phi i64 [ 0, %95 ], [ %139, %137 ]
  %99 = phi i8* [ %96, %95 ], [ %138, %137 ]
  %100 = getelementptr inbounds i8, i8* %0, i64 %98
  %101 = load i8, i8* %100, align 1
  switch i8 %101, label %120 [
    i8 10, label %102
    i8 13, label %105
    i8 9, label %108
    i8 34, label %111
    i8 39, label %114
    i8 92, label %117
  ]

102:                                              ; preds = %97
  %103 = getelementptr inbounds i8, i8* %99, i64 1
  store i8 92, i8* %99, align 1
  %104 = getelementptr inbounds i8, i8* %99, i64 2
  store i8 110, i8* %103, align 1
  br label %137

105:                                              ; preds = %97
  %106 = getelementptr inbounds i8, i8* %99, i64 1
  store i8 92, i8* %99, align 1
  %107 = getelementptr inbounds i8, i8* %99, i64 2
  store i8 114, i8* %106, align 1
  br label %137

108:                                              ; preds = %97
  %109 = getelementptr inbounds i8, i8* %99, i64 1
  store i8 92, i8* %99, align 1
  %110 = getelementptr inbounds i8, i8* %99, i64 2
  store i8 116, i8* %109, align 1
  br label %137

111:                                              ; preds = %97
  %112 = getelementptr inbounds i8, i8* %99, i64 1
  store i8 92, i8* %99, align 1
  %113 = getelementptr inbounds i8, i8* %99, i64 2
  store i8 34, i8* %112, align 1
  br label %137

114:                                              ; preds = %97
  %115 = getelementptr inbounds i8, i8* %99, i64 1
  store i8 92, i8* %99, align 1
  %116 = getelementptr inbounds i8, i8* %99, i64 2
  store i8 39, i8* %115, align 1
  br label %137

117:                                              ; preds = %97
  %118 = getelementptr inbounds i8, i8* %99, i64 1
  store i8 92, i8* %99, align 1
  %119 = getelementptr inbounds i8, i8* %99, i64 2
  store i8 92, i8* %118, align 1
  br label %137

120:                                              ; preds = %97
  %121 = icmp sgt i8 %101, 31
  %122 = icmp ne i8 %101, 127
  %123 = and i1 %121, %122
  %124 = getelementptr inbounds i8, i8* %99, i64 1
  br i1 %123, label %136, label %125

125:                                              ; preds = %120
  store i8 92, i8* %99, align 1
  %126 = lshr i8 %101, 6
  %127 = or i8 %126, 48
  %128 = getelementptr inbounds i8, i8* %99, i64 2
  store i8 %127, i8* %124, align 1
  %129 = lshr i8 %101, 3
  %130 = and i8 %129, 7
  %131 = or i8 %130, 48
  %132 = getelementptr inbounds i8, i8* %99, i64 3
  store i8 %131, i8* %128, align 1
  %133 = and i8 %101, 7
  %134 = or i8 %133, 48
  %135 = getelementptr inbounds i8, i8* %99, i64 4
  store i8 %134, i8* %132, align 1
  br label %137

136:                                              ; preds = %120
  store i8 %101, i8* %99, align 1
  br label %137

137:                                              ; preds = %125, %136, %117, %114, %111, %108, %105, %102
  %138 = phi i8* [ %124, %136 ], [ %135, %125 ], [ %119, %117 ], [ %116, %114 ], [ %113, %111 ], [ %110, %108 ], [ %107, %105 ], [ %104, %102 ]
  %139 = add nuw nsw i64 %98, 1
  %140 = icmp eq i64 %139, %1
  br i1 %140, label %141, label %97

141:                                              ; preds = %137, %93, %71
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf7CEscapeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #22
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  tail call void @_ZN6google8protobuf16CEscapeAndAppendENS0_11StringPieceEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8* %11, i64 %15, %"class.std::__1::basic_string"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf7strings15Utf8SafeCEscapeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = trunc i64 %10 to i32
  %12 = shl i32 %11, 2
  %13 = or i32 %12, 1
  %14 = sext i32 %13 to i64
  %15 = tail call i8* @_Znam(i64 %14) #24
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %6, i8* %17, i8* %18
  %20 = tail call i32 @_ZN6google8protobuf15CEscapeInternalEPKciPcibb(i8* %19, i32 %11, i8* nonnull %15, i32 %13, i1 zeroext false, i1 zeroext true)
  %21 = sext i32 %20 to i64
  %22 = icmp ugt i32 %20, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #23
  unreachable

25:                                               ; preds = %2
  %26 = icmp ult i32 %20, 23
  br i1 %26, label %35, label %27

27:                                               ; preds = %25
  %28 = add nuw nsw i64 %21, 16
  %29 = and i64 %28, -16
  %30 = tail call i8* @_Znwm(i64 %29) #24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = or i64 %29, -9223372036854775808
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %34, align 8
  br label %41

35:                                               ; preds = %25
  %36 = trunc i32 %20 to i8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %40 = icmp eq i32 %20, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %35, %27
  %42 = phi i8* [ %30, %27 ], [ %39, %35 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* nonnull align 1 %15, i64 %21, i1 false) #22
  br label %43

43:                                               ; preds = %35, %41
  %44 = phi i8* [ %39, %35 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %21
  store i8 0, i8* %45, align 1
  tail call void @_ZdaPv(i8* nonnull %15) #24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf7strings10CHexEscapeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = trunc i64 %10 to i32
  %12 = shl i32 %11, 2
  %13 = or i32 %12, 1
  %14 = sext i32 %13 to i64
  %15 = tail call i8* @_Znam(i64 %14) #24
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %6, i8* %17, i8* %18
  %20 = tail call i32 @_ZN6google8protobuf15CEscapeInternalEPKciPcibb(i8* %19, i32 %11, i8* nonnull %15, i32 %13, i1 zeroext true, i1 zeroext false)
  %21 = sext i32 %20 to i64
  %22 = icmp ugt i32 %20, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #23
  unreachable

25:                                               ; preds = %2
  %26 = icmp ult i32 %20, 23
  br i1 %26, label %35, label %27

27:                                               ; preds = %25
  %28 = add nuw nsw i64 %21, 16
  %29 = and i64 %28, -16
  %30 = tail call i8* @_Znwm(i64 %29) #24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = or i64 %29, -9223372036854775808
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %21, i64* %34, align 8
  br label %41

35:                                               ; preds = %25
  %36 = trunc i32 %20 to i8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %40 = icmp eq i32 %20, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %35, %27
  %42 = phi i8* [ %30, %27 ], [ %39, %35 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* nonnull align 1 %15, i64 %21, i1 false) #22
  br label %43

43:                                               ; preds = %35, %41
  %44 = phi i8* [ %39, %35 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %21
  store i8 0, i8* %45, align 1
  tail call void @_ZdaPv(i8* nonnull %15) #24
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf15strto32_adaptorEPKcPPci(i8*, i8** nocapture, i32) local_unnamed_addr #0 {
  %4 = tail call i32* @__errno_location() #18
  %5 = load i32, i32* %4, align 4
  store i32 0, i32* %4, align 4
  %6 = tail call i64 @strtol(i8* %0, i8** %1, i32 %2) #22
  %7 = load i32, i32* %4, align 4
  %8 = icmp eq i32 %7, 34
  %9 = icmp eq i64 %6, -9223372036854775808
  %10 = and i1 %9, %8
  br i1 %10, label %27, label %11

11:                                               ; preds = %3
  %12 = icmp eq i64 %6, 9223372036854775807
  %13 = and i1 %12, %8
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = icmp eq i32 %7, 0
  %16 = icmp slt i64 %6, -2147483648
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i32 34, i32* %4, align 4
  br label %27

19:                                               ; preds = %14
  %20 = icmp sgt i64 %6, 2147483647
  %21 = and i1 %20, %15
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  store i32 34, i32* %4, align 4
  br label %27

23:                                               ; preds = %19
  br i1 %15, label %24, label %25

24:                                               ; preds = %23
  store i32 %5, i32* %4, align 4
  br label %25

25:                                               ; preds = %24, %23
  %26 = trunc i64 %6 to i32
  br label %27

27:                                               ; preds = %11, %3, %25, %22, %18
  %28 = phi i32 [ -2147483648, %18 ], [ 2147483647, %22 ], [ %26, %25 ], [ -2147483648, %3 ], [ 2147483647, %11 ]
  ret i32 %28
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf16strtou32_adaptorEPKcPPci(i8*, i8** nocapture, i32) local_unnamed_addr #0 {
  %4 = tail call i32* @__errno_location() #18
  %5 = load i32, i32* %4, align 4
  store i32 0, i32* %4, align 4
  %6 = tail call i64 @strtoul(i8* %0, i8** %1, i32 %2) #22
  %7 = load i32, i32* %4, align 4
  %8 = icmp eq i32 %7, 34
  %9 = icmp eq i64 %6, -1
  %10 = and i1 %9, %8
  br i1 %10, label %20, label %11

11:                                               ; preds = %3
  %12 = icmp eq i32 %7, 0
  %13 = icmp ugt i64 %6, 4294967295
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i32 34, i32* %4, align 4
  br label %20

16:                                               ; preds = %11
  br i1 %12, label %17, label %18

17:                                               ; preds = %16
  store i32 %5, i32* %4, align 4
  br label %18

18:                                               ; preds = %17, %16
  %19 = trunc i64 %6 to i32
  br label %20

20:                                               ; preds = %3, %18, %15
  %21 = phi i32 [ -1, %15 ], [ %19, %18 ], [ -1, %3 ]
  ret i32 %21
}

; Function Attrs: nofree nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf17FastInt64ToBufferElPc(i64, i8*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds i8, i8* %1, i64 21
  %4 = getelementptr inbounds i8, i8* %1, i64 20
  store i8 0, i8* %3, align 1
  %5 = icmp sgt i64 %0, -1
  br i1 %5, label %6, label %15

6:                                                ; preds = %2, %6
  %7 = phi i64 [ %13, %6 ], [ %0, %2 ]
  %8 = phi i8* [ %12, %6 ], [ %4, %2 ]
  %9 = srem i64 %7, 10
  %10 = trunc i64 %9 to i8
  %11 = add nsw i8 %10, 48
  %12 = getelementptr inbounds i8, i8* %8, i64 -1
  store i8 %11, i8* %8, align 1
  %13 = sdiv i64 %7, 10
  %14 = icmp sgt i64 %7, 9
  br i1 %14, label %6, label %40

15:                                               ; preds = %2
  %16 = icmp sgt i64 %0, -10
  br i1 %16, label %17, label %21

17:                                               ; preds = %15
  %18 = trunc i64 %0 to i8
  %19 = sub nsw i8 48, %18
  %20 = getelementptr inbounds i8, i8* %1, i64 19
  store i8 %19, i8* %4, align 1
  br label %38

21:                                               ; preds = %15
  %22 = sub nuw nsw i64 -10, %0
  %23 = srem i64 %22, 10
  %24 = trunc i64 %23 to i8
  %25 = add nuw nsw i8 %24, 48
  %26 = getelementptr inbounds i8, i8* %1, i64 19
  store i8 %25, i8* %4, align 1
  %27 = sdiv i64 %22, 10
  %28 = add nuw nsw i64 %27, 1
  br label %29

29:                                               ; preds = %29, %21
  %30 = phi i64 [ %28, %21 ], [ %36, %29 ]
  %31 = phi i8* [ %26, %21 ], [ %35, %29 ]
  %32 = srem i64 %30, 10
  %33 = trunc i64 %32 to i8
  %34 = add nsw i8 %33, 48
  %35 = getelementptr inbounds i8, i8* %31, i64 -1
  store i8 %34, i8* %31, align 1
  %36 = sdiv i64 %30, 10
  %37 = icmp sgt i64 %30, 9
  br i1 %37, label %29, label %38

38:                                               ; preds = %29, %17
  %39 = phi i8* [ %20, %17 ], [ %35, %29 ]
  store i8 45, i8* %39, align 1
  br label %40

40:                                               ; preds = %6, %38
  %41 = phi i8* [ %39, %38 ], [ %8, %6 ]
  ret i8* %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf17FastInt32ToBufferEiPc(i32, i8*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds i8, i8* %1, i64 11
  %4 = getelementptr inbounds i8, i8* %1, i64 10
  store i8 0, i8* %3, align 1
  %5 = icmp sgt i32 %0, -1
  br i1 %5, label %6, label %15

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ %0, %2 ]
  %8 = phi i8* [ %12, %6 ], [ %4, %2 ]
  %9 = srem i32 %7, 10
  %10 = trunc i32 %9 to i8
  %11 = add nsw i8 %10, 48
  %12 = getelementptr inbounds i8, i8* %8, i64 -1
  store i8 %11, i8* %8, align 1
  %13 = sdiv i32 %7, 10
  %14 = icmp sgt i32 %7, 9
  br i1 %14, label %6, label %40

15:                                               ; preds = %2
  %16 = icmp sgt i32 %0, -10
  br i1 %16, label %17, label %21

17:                                               ; preds = %15
  %18 = trunc i32 %0 to i8
  %19 = sub nsw i8 48, %18
  %20 = getelementptr inbounds i8, i8* %1, i64 9
  store i8 %19, i8* %4, align 1
  br label %38

21:                                               ; preds = %15
  %22 = sub nuw nsw i32 -10, %0
  %23 = srem i32 %22, 10
  %24 = trunc i32 %23 to i8
  %25 = add nuw nsw i8 %24, 48
  %26 = getelementptr inbounds i8, i8* %1, i64 9
  store i8 %25, i8* %4, align 1
  %27 = sdiv i32 %22, 10
  %28 = add nuw nsw i32 %27, 1
  br label %29

29:                                               ; preds = %29, %21
  %30 = phi i32 [ %28, %21 ], [ %36, %29 ]
  %31 = phi i8* [ %26, %21 ], [ %35, %29 ]
  %32 = srem i32 %30, 10
  %33 = trunc i32 %32 to i8
  %34 = add nsw i8 %33, 48
  %35 = getelementptr inbounds i8, i8* %31, i64 -1
  store i8 %34, i8* %31, align 1
  %36 = sdiv i32 %30, 10
  %37 = icmp sgt i32 %30, 9
  br i1 %37, label %29, label %38

38:                                               ; preds = %29, %17
  %39 = phi i8* [ %20, %17 ], [ %35, %29 ]
  store i8 45, i8* %39, align 1
  br label %40

40:                                               ; preds = %6, %38
  %41 = phi i8* [ %39, %38 ], [ %8, %6 ]
  ret i8* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6google8protobuf15FastHexToBufferEiPc(i32, i8*) local_unnamed_addr #3 {
  %3 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %4 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %5 = icmp sgt i32 %0, -1
  %6 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #22
  br i1 %5, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.google::protobuf::internal::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #22
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %3, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 890) #22
  %9 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0)) #22
  %10 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* %9, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0)) #22
  %11 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEi(%"class.google::protobuf::internal::LogMessage"* %10, i32 %0) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %4, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %11) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #22
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %3) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #22
  br label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #22
  br label %13

13:                                               ; preds = %12, %7
  %14 = getelementptr inbounds i8, i8* %1, i64 21
  %15 = getelementptr inbounds i8, i8* %1, i64 20
  store i8 0, i8* %14, align 1
  br label %16

16:                                               ; preds = %16, %13
  %17 = phi i32 [ %0, %13 ], [ %24, %16 ]
  %18 = phi i8* [ %15, %13 ], [ %23, %16 ]
  %19 = and i32 %17, 15
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds i8, i8* %18, i64 -1
  store i8 %22, i8* %18, align 1
  %24 = ashr i32 %17, 4
  %25 = icmp sgt i32 %17, 15
  br i1 %25, label %16, label %26

26:                                               ; preds = %16
  ret i8* %18
}

declare dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEi(%"class.google::protobuf::internal::LogMessage"*, i32) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf23InternalFastHexToBufferEmPci(i64, i8* returned, i32) local_unnamed_addr #10 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds i8, i8* %1, i64 %4
  store i8 0, i8* %5, align 1
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %27

7:                                                ; preds = %3
  %8 = add nsw i64 %4, -1
  %9 = and i64 %4, 3
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %7, %11
  %12 = phi i64 [ %15, %11 ], [ %4, %7 ]
  %13 = phi i64 [ %20, %11 ], [ %0, %7 ]
  %14 = phi i64 [ %21, %11 ], [ %9, %7 ]
  %15 = add nsw i64 %12, -1
  %16 = and i64 %13, 15
  %17 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds i8, i8* %1, i64 %15
  store i8 %18, i8* %19, align 1
  %20 = lshr i64 %13, 4
  %21 = add i64 %14, -1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %11, !llvm.loop !24

23:                                               ; preds = %11, %7
  %24 = phi i64 [ %4, %7 ], [ %15, %11 ]
  %25 = phi i64 [ %0, %7 ], [ %20, %11 ]
  %26 = icmp ult i64 %8, 3
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %28, %3
  ret i8* %1

28:                                               ; preds = %23, %28
  %29 = phi i64 [ %49, %28 ], [ %24, %23 ]
  %30 = phi i64 [ %54, %28 ], [ %25, %23 ]
  %31 = add nsw i64 %29, -1
  %32 = and i64 %30, 15
  %33 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %1, i64 %31
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %30, 4
  %37 = add nsw i64 %29, -2
  %38 = and i64 %36, 15
  %39 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %1, i64 %37
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %30, 8
  %43 = add nsw i64 %29, -3
  %44 = and i64 %42, 15
  %45 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds i8, i8* %1, i64 %43
  store i8 %46, i8* %47, align 1
  %48 = lshr i64 %30, 12
  %49 = add nsw i64 %29, -4
  %50 = and i64 %48, 15
  %51 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds i8, i8* %1, i64 %49
  store i8 %52, i8* %53, align 1
  %54 = lshr i64 %30, 16
  %55 = icmp sgt i64 %49, 0
  br i1 %55, label %28, label %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf17FastHex64ToBufferEmPc(i64, i8* returned) local_unnamed_addr #10 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  store i8 0, i8* %3, align 1
  %4 = and i64 %0, 15
  %5 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %4
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds i8, i8* %1, i64 15
  store i8 %6, i8* %7, align 1
  %8 = lshr i64 %0, 4
  %9 = and i64 %8, 15
  %10 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr inbounds i8, i8* %1, i64 14
  store i8 %11, i8* %12, align 1
  %13 = lshr i64 %0, 8
  %14 = and i64 %13, 15
  %15 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds i8, i8* %1, i64 13
  store i8 %16, i8* %17, align 1
  %18 = lshr i64 %0, 12
  %19 = and i64 %18, 15
  %20 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %1, i64 12
  store i8 %21, i8* %22, align 1
  %23 = lshr i64 %0, 16
  %24 = and i64 %23, 15
  %25 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %1, i64 11
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %0, 20
  %29 = and i64 %28, 15
  %30 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds i8, i8* %1, i64 10
  store i8 %31, i8* %32, align 1
  %33 = lshr i64 %0, 24
  %34 = and i64 %33, 15
  %35 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds i8, i8* %1, i64 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %0, 28
  %39 = and i64 %38, 15
  %40 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds i8, i8* %1, i64 8
  store i8 %41, i8* %42, align 1
  %43 = lshr i64 %0, 32
  %44 = and i64 %43, 15
  %45 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds i8, i8* %1, i64 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i64 %0, 36
  %49 = and i64 %48, 15
  %50 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds i8, i8* %1, i64 6
  store i8 %51, i8* %52, align 1
  %53 = lshr i64 %0, 40
  %54 = and i64 %53, 15
  %55 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %1, i64 5
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %0, 44
  %59 = and i64 %58, 15
  %60 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %1, i64 4
  store i8 %61, i8* %62, align 1
  %63 = lshr i64 %0, 48
  %64 = and i64 %63, 15
  %65 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %66, i8* %67, align 1
  %68 = lshr i64 %0, 52
  %69 = and i64 %68, 15
  %70 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %71, i8* %72, align 1
  %73 = lshr i64 %0, 56
  %74 = and i64 %73, 15
  %75 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %76, i8* %77, align 1
  %78 = lshr i64 %0, 60
  %79 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %78
  %80 = load i8, i8* %79, align 1
  store i8 %80, i8* %1, align 1
  ret i8* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf17FastHex32ToBufferEjPc(i32, i8* returned) local_unnamed_addr #10 {
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  store i8 0, i8* %4, align 1
  %5 = and i64 %3, 15
  %6 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds i8, i8* %1, i64 7
  store i8 %7, i8* %8, align 1
  %9 = lshr i64 %3, 4
  %10 = and i64 %9, 15
  %11 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds i8, i8* %1, i64 6
  store i8 %12, i8* %13, align 1
  %14 = lshr i64 %3, 8
  %15 = and i64 %14, 15
  %16 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds i8, i8* %1, i64 5
  store i8 %17, i8* %18, align 1
  %19 = lshr i64 %3, 12
  %20 = and i64 %19, 15
  %21 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds i8, i8* %1, i64 4
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %3, 16
  %25 = and i64 %24, 15
  %26 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 20
  %30 = and i64 %29, 15
  %31 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %3, 24
  %35 = and i64 %34, 15
  %36 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %3, 28
  %40 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  store i8 %41, i8* %1, align 1
  ret i8* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf22FastUInt32ToBufferLeftEjPc(i32, i8*) local_unnamed_addr #10 {
  %3 = icmp ugt i32 %0, 999999999
  br i1 %3, label %4, label %81

4:                                                ; preds = %2
  %5 = udiv i32 %0, 100000000
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %6, i64 0
  %8 = load i8, i8* %7, align 2
  store i8 %8, i8* %1, align 1
  %9 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %6, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %10, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  br label %13

13:                                               ; preds = %118, %4
  %14 = phi i8* [ %12, %4 ], [ %122, %118 ]
  %15 = phi i32 [ %5, %4 ], [ %119, %118 ]
  %16 = mul i32 %15, -100000000
  %17 = add i32 %16, %0
  br label %18

18:                                               ; preds = %111, %13
  %19 = phi i32 [ %17, %13 ], [ %0, %111 ]
  %20 = phi i8* [ %14, %13 ], [ %1, %111 ]
  %21 = udiv i32 %19, 1000000
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %22, i64 0
  %24 = load i8, i8* %23, align 2
  store i8 %24, i8* %20, align 1
  %25 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %22, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %20, i64 1
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds i8, i8* %20, i64 2
  br label %29

29:                                               ; preds = %113, %18
  %30 = phi i32 [ %19, %18 ], [ %0, %113 ]
  %31 = phi i8* [ %28, %18 ], [ %117, %113 ]
  %32 = phi i32 [ %21, %18 ], [ %114, %113 ]
  %33 = mul i32 %32, -1000000
  %34 = add i32 %33, %30
  br label %35

35:                                               ; preds = %102, %29
  %36 = phi i32 [ %34, %29 ], [ %0, %102 ]
  %37 = phi i8* [ %31, %29 ], [ %1, %102 ]
  %38 = udiv i32 %36, 10000
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %39, i64 0
  %41 = load i8, i8* %40, align 2
  store i8 %41, i8* %37, align 1
  %42 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %39, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 %43, i8* %44, align 1
  %45 = getelementptr inbounds i8, i8* %37, i64 2
  br label %46

46:                                               ; preds = %104, %35
  %47 = phi i32 [ %36, %35 ], [ %0, %104 ]
  %48 = phi i8* [ %45, %35 ], [ %108, %104 ]
  %49 = phi i32 [ %38, %35 ], [ %105, %104 ]
  %50 = mul i32 %49, -10000
  %51 = add i32 %50, %47
  br label %52

52:                                               ; preds = %91, %46
  %53 = phi i32 [ %51, %46 ], [ %0, %91 ]
  %54 = phi i8* [ %48, %46 ], [ %1, %91 ]
  %55 = udiv i32 %53, 100
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %56, i64 0
  %58 = load i8, i8* %57, align 2
  store i8 %58, i8* %54, align 1
  %59 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %56, i64 1
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds i8, i8* %54, i64 1
  store i8 %60, i8* %61, align 1
  %62 = getelementptr inbounds i8, i8* %54, i64 2
  br label %63

63:                                               ; preds = %93, %52
  %64 = phi i32 [ %53, %52 ], [ %0, %93 ]
  %65 = phi i8* [ %62, %52 ], [ %99, %93 ]
  %66 = phi i32 [ %55, %52 ], [ %96, %93 ]
  %67 = mul i32 %66, -100
  %68 = add i32 %67, %64
  br label %69

69:                                               ; preds = %83, %63
  %70 = phi i32 [ %68, %63 ], [ %0, %83 ]
  %71 = phi i8* [ %65, %63 ], [ %1, %83 ]
  %72 = zext i32 %70 to i64
  %73 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %72, i64 0
  %74 = load i8, i8* %73, align 2
  store i8 %74, i8* %71, align 1
  %75 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %72, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %71, i64 1
  store i8 %76, i8* %77, align 1
  %78 = getelementptr inbounds i8, i8* %71, i64 2
  br label %79

79:                                               ; preds = %85, %69
  %80 = phi i8* [ %78, %69 ], [ %88, %85 ]
  store i8 0, i8* %80, align 1
  ret i8* %80

81:                                               ; preds = %2
  %82 = icmp ult i32 %0, 100
  br i1 %82, label %83, label %89

83:                                               ; preds = %81
  %84 = icmp ugt i32 %0, 9
  br i1 %84, label %69, label %85

85:                                               ; preds = %83
  %86 = trunc i32 %0 to i8
  %87 = add nuw nsw i8 %86, 48
  %88 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %87, i8* %1, align 1
  br label %79

89:                                               ; preds = %81
  %90 = icmp ult i32 %0, 10000
  br i1 %90, label %91, label %100

91:                                               ; preds = %89
  %92 = icmp ugt i32 %0, 999
  br i1 %92, label %52, label %93

93:                                               ; preds = %91
  %94 = trunc i32 %0 to i16
  %95 = udiv i16 %94, 100
  %96 = zext i16 %95 to i32
  %97 = trunc i16 %95 to i8
  %98 = add nuw nsw i8 %97, 48
  %99 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %98, i8* %1, align 1
  br label %63

100:                                              ; preds = %89
  %101 = icmp ult i32 %0, 1000000
  br i1 %101, label %102, label %109

102:                                              ; preds = %100
  %103 = icmp ugt i32 %0, 99999
  br i1 %103, label %35, label %104

104:                                              ; preds = %102
  %105 = udiv i32 %0, 10000
  %106 = trunc i32 %105 to i8
  %107 = add nuw nsw i8 %106, 48
  %108 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %107, i8* %1, align 1
  br label %46

109:                                              ; preds = %100
  %110 = icmp ult i32 %0, 100000000
  br i1 %110, label %111, label %118

111:                                              ; preds = %109
  %112 = icmp ugt i32 %0, 9999999
  br i1 %112, label %18, label %113

113:                                              ; preds = %111
  %114 = udiv i32 %0, 1000000
  %115 = trunc i32 %114 to i8
  %116 = add nuw nsw i8 %115, 48
  %117 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %116, i8* %1, align 1
  br label %29

118:                                              ; preds = %109
  %119 = udiv i32 %0, 100000000
  %120 = trunc i32 %119 to i8
  %121 = add nuw nsw i8 %120, 48
  %122 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %121, i8* %1, align 1
  br label %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf21FastInt32ToBufferLeftEiPc(i32, i8*) local_unnamed_addr #10 {
  %3 = icmp slt i32 %0, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 45, i8* %1, align 1
  %6 = sub i32 0, %0
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i8* [ %5, %4 ], [ %1, %2 ]
  %9 = phi i32 [ %6, %4 ], [ %0, %2 ]
  %10 = tail call i8* @_ZN6google8protobuf22FastUInt32ToBufferLeftEjPc(i32 %9, i8* %8)
  ret i8* %10
}

; Function Attrs: nofree nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf22FastUInt64ToBufferLeftEmPc(i64, i8*) local_unnamed_addr #11 {
  %3 = icmp ult i64 %0, 4294967296
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = trunc i64 %0 to i32
  %6 = tail call i8* @_ZN6google8protobuf22FastUInt32ToBufferLeftEjPc(i32 %5, i8* %1)
  ret i8* %6

7:                                                ; preds = %2
  %8 = udiv i64 %0, 1000000000
  %9 = tail call i8* @_ZN6google8protobuf22FastUInt64ToBufferLeftEmPc(i64 %8, i8* %1)
  %10 = mul i64 %8, -1000000000
  %11 = add i64 %10, %0
  %12 = trunc i64 %11 to i32
  %13 = udiv i32 %12, 10000000
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %14, i64 0
  %16 = load i8, i8* %15, align 2
  store i8 %16, i8* %9, align 1
  %17 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %14, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %9, i64 2
  %21 = mul i32 %13, -10000000
  %22 = add i32 %21, %12
  %23 = udiv i32 %22, 100000
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %24, i64 0
  %26 = load i8, i8* %25, align 2
  store i8 %26, i8* %20, align 1
  %27 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %24, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds i8, i8* %9, i64 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %9, i64 4
  %31 = mul i32 %23, -100000
  %32 = add i32 %31, %22
  %33 = udiv i32 %32, 1000
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %34, i64 0
  %36 = load i8, i8* %35, align 2
  store i8 %36, i8* %30, align 1
  %37 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %34, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = getelementptr inbounds i8, i8* %9, i64 5
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %9, i64 6
  %41 = mul i32 %33, -1000
  %42 = add i32 %41, %32
  %43 = udiv i32 %42, 10
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %44, i64 0
  %46 = load i8, i8* %45, align 2
  store i8 %46, i8* %40, align 1
  %47 = getelementptr inbounds [100 x [2 x i8]], [100 x [2 x i8]]* @_ZN6google8protobufL16two_ASCII_digitsE, i64 0, i64 %44, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr inbounds i8, i8* %9, i64 7
  store i8 %48, i8* %49, align 1
  %50 = getelementptr inbounds i8, i8* %9, i64 8
  %51 = mul i32 %43, -10
  %52 = add i32 %51, %42
  %53 = trunc i32 %52 to i8
  %54 = add i8 %53, 48
  %55 = getelementptr inbounds i8, i8* %9, i64 9
  store i8 %54, i8* %50, align 1
  store i8 0, i8* %55, align 1
  ret i8* %55
}

; Function Attrs: nofree nounwind ssp uwtable writeonly
define hidden i8* @_ZN6google8protobuf21FastInt64ToBufferLeftElPc(i64, i8*) local_unnamed_addr #11 {
  %3 = icmp slt i64 %0, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 45, i8* %1, align 1
  %6 = sub i64 0, %0
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i8* [ %5, %4 ], [ %1, %2 ]
  %9 = phi i64 [ %6, %4 ], [ %0, %2 ]
  %10 = tail call i8* @_ZN6google8protobuf22FastUInt64ToBufferLeftEmPc(i64 %9, i8* %8)
  ret i8* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf10SimpleItoaEi(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #3 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #22
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 9
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 10
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 32, i1 false)
  store i8 0, i8* %7, align 1
  %8 = icmp sgt i32 %1, -1
  br i1 %8, label %9, label %18

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %16, %9 ], [ %1, %2 ]
  %11 = phi i8* [ %15, %9 ], [ %6, %2 ]
  %12 = srem i32 %10, 10
  %13 = trunc i32 %12 to i8
  %14 = add nsw i8 %13, 48
  %15 = getelementptr inbounds i8, i8* %11, i64 -1
  store i8 %14, i8* %11, align 1
  %16 = sdiv i32 %10, 10
  %17 = icmp sgt i32 %10, 9
  br i1 %17, label %9, label %41

18:                                               ; preds = %2
  %19 = icmp sgt i32 %1, -10
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = trunc i32 %1 to i8
  %22 = sub nsw i8 48, %21
  store i8 %22, i8* %6, align 2
  br label %39

23:                                               ; preds = %18
  %24 = sub nuw nsw i32 -10, %1
  %25 = srem i32 %24, 10
  %26 = trunc i32 %25 to i8
  %27 = add nuw nsw i8 %26, 48
  store i8 %27, i8* %6, align 2
  %28 = sdiv i32 %24, 10
  %29 = add nuw nsw i32 %28, 1
  br label %30

30:                                               ; preds = %30, %23
  %31 = phi i32 [ %29, %23 ], [ %37, %30 ]
  %32 = phi i8* [ %5, %23 ], [ %36, %30 ]
  %33 = srem i32 %31, 10
  %34 = trunc i32 %33 to i8
  %35 = add nsw i8 %34, 48
  %36 = getelementptr inbounds i8, i8* %32, i64 -1
  store i8 %35, i8* %32, align 1
  %37 = sdiv i32 %31, 10
  %38 = icmp sgt i32 %31, 9
  br i1 %38, label %30, label %39

39:                                               ; preds = %30, %20
  %40 = phi i8* [ %5, %20 ], [ %36, %30 ]
  store i8 45, i8* %40, align 1
  br label %41

41:                                               ; preds = %9, %39
  %42 = phi i8* [ %40, %39 ], [ %11, %9 ]
  %43 = call i64 @strlen(i8* %42) #22
  %44 = icmp ugt i64 %43, -17
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %46) #23
  unreachable

47:                                               ; preds = %41
  %48 = icmp ult i64 %43, 23
  br i1 %48, label %57, label %49

49:                                               ; preds = %47
  %50 = add nuw i64 %43, 16
  %51 = and i64 %50, -16
  %52 = tail call i8* @_Znwm(i64 %51) #24
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8
  %54 = or i64 %51, -9223372036854775808
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %56, align 8
  br label %63

57:                                               ; preds = %47
  %58 = trunc i64 %43 to i8
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 %58, i8* %60, align 1
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %62 = icmp eq i64 %43, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %57, %49
  %64 = phi i8* [ %52, %49 ], [ %61, %57 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %42, i64 %43, i1 false) #22
  br label %65

65:                                               ; preds = %57, %63
  %66 = phi i8* [ %61, %57 ], [ %64, %63 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 %43
  store i8 0, i8* %67, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf10SimpleItoaEj(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #3 {
  %3 = alloca [32 x i8], align 16
  %4 = ptrtoint [32 x i8]* %3 to i64
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 32, i1 false)
  %6 = call i8* @_ZN6google8protobuf22FastUInt32ToBufferLeftEjPc(i32 %1, i8* nonnull %5)
  %7 = ptrtoint i8* %6 to i64
  %8 = sub i64 %7, %4
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #23
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = trunc i64 %8 to i8
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 %15, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %27

19:                                               ; preds = %12
  %20 = add nuw i64 %8, 16
  %21 = and i64 %20, -16
  %22 = call i8* @_Znwm(i64 %21) #24
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %26, align 8
  br label %27

27:                                               ; preds = %19, %14
  %28 = phi i8* [ %18, %14 ], [ %22, %19 ]
  %29 = icmp eq i8* %5, %6
  br i1 %29, label %125, label %30

30:                                               ; preds = %27
  %31 = ptrtoint i8* %6 to i64
  %32 = sub i64 %31, %4
  %33 = icmp ult i64 %32, 32
  br i1 %33, label %115, label %34

34:                                               ; preds = %30
  %35 = and i64 %32, -32
  %36 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %35
  %37 = getelementptr i8, i8* %28, i64 %35
  %38 = add i64 %35, -32
  %39 = lshr exact i64 %38, 5
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp ult i64 %38, 96
  br i1 %42, label %94, label %43

43:                                               ; preds = %34
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %91, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %92, %45 ]
  %48 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %46
  %49 = getelementptr i8, i8* %28, i64 %46
  %50 = bitcast i8* %48 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 16
  %52 = getelementptr i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 16
  %55 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1
  %56 = getelementptr i8, i8* %49, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %57, align 1
  %58 = or i64 %46, 32
  %59 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %58
  %60 = getelementptr i8, i8* %28, i64 %58
  %61 = bitcast i8* %59 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 16
  %63 = getelementptr i8, i8* %59, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 16
  %66 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1
  %67 = getelementptr i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %68, align 1
  %69 = or i64 %46, 64
  %70 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %69
  %71 = getelementptr i8, i8* %28, i64 %69
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 16
  %74 = getelementptr i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 16
  %77 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1
  %78 = getelementptr i8, i8* %71, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1
  %80 = or i64 %46, 96
  %81 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %80
  %82 = getelementptr i8, i8* %28, i64 %80
  %83 = bitcast i8* %81 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 16
  %85 = getelementptr i8, i8* %81, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 16
  %88 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1
  %89 = getelementptr i8, i8* %82, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1
  %91 = add i64 %46, 128
  %92 = add i64 %47, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %45, !llvm.loop !25

94:                                               ; preds = %45, %34
  %95 = phi i64 [ 0, %34 ], [ %91, %45 ]
  %96 = icmp eq i64 %41, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %110, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %111, %97 ], [ %41, %94 ]
  %100 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %98
  %101 = getelementptr i8, i8* %28, i64 %98
  %102 = bitcast i8* %100 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 16
  %104 = getelementptr i8, i8* %100, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 16
  %107 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1
  %108 = getelementptr i8, i8* %101, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1
  %110 = add i64 %98, 32
  %111 = add i64 %99, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %97, !llvm.loop !27

113:                                              ; preds = %97, %94
  %114 = icmp eq i64 %32, %35
  br i1 %114, label %125, label %115

115:                                              ; preds = %113, %30
  %116 = phi i8* [ %5, %30 ], [ %36, %113 ]
  %117 = phi i8* [ %28, %30 ], [ %37, %113 ]
  br label %118

118:                                              ; preds = %115, %118
  %119 = phi i8* [ %122, %118 ], [ %116, %115 ]
  %120 = phi i8* [ %123, %118 ], [ %117, %115 ]
  %121 = load i8, i8* %119, align 1
  store i8 %121, i8* %120, align 1
  %122 = getelementptr inbounds i8, i8* %119, i64 1
  %123 = getelementptr inbounds i8, i8* %120, i64 1
  %124 = icmp eq i8* %122, %6
  br i1 %124, label %125, label %118, !llvm.loop !28

125:                                              ; preds = %118, %113, %27
  %126 = phi i8* [ %28, %27 ], [ %37, %113 ], [ %123, %118 ]
  store i8 0, i8* %126, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf10SimpleItoaEl(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #3 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #22
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 19
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 20
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 32, i1 false)
  store i8 0, i8* %7, align 1
  %8 = icmp sgt i64 %1, -1
  br i1 %8, label %9, label %18

9:                                                ; preds = %2, %9
  %10 = phi i64 [ %16, %9 ], [ %1, %2 ]
  %11 = phi i8* [ %15, %9 ], [ %6, %2 ]
  %12 = srem i64 %10, 10
  %13 = trunc i64 %12 to i8
  %14 = add nsw i8 %13, 48
  %15 = getelementptr inbounds i8, i8* %11, i64 -1
  store i8 %14, i8* %11, align 1
  %16 = sdiv i64 %10, 10
  %17 = icmp sgt i64 %10, 9
  br i1 %17, label %9, label %41

18:                                               ; preds = %2
  %19 = icmp sgt i64 %1, -10
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = trunc i64 %1 to i8
  %22 = sub nsw i8 48, %21
  store i8 %22, i8* %6, align 4
  br label %39

23:                                               ; preds = %18
  %24 = sub nuw nsw i64 -10, %1
  %25 = srem i64 %24, 10
  %26 = trunc i64 %25 to i8
  %27 = add nuw nsw i8 %26, 48
  store i8 %27, i8* %6, align 4
  %28 = sdiv i64 %24, 10
  %29 = add nuw nsw i64 %28, 1
  br label %30

30:                                               ; preds = %30, %23
  %31 = phi i64 [ %29, %23 ], [ %37, %30 ]
  %32 = phi i8* [ %5, %23 ], [ %36, %30 ]
  %33 = srem i64 %31, 10
  %34 = trunc i64 %33 to i8
  %35 = add nsw i8 %34, 48
  %36 = getelementptr inbounds i8, i8* %32, i64 -1
  store i8 %35, i8* %32, align 1
  %37 = sdiv i64 %31, 10
  %38 = icmp sgt i64 %31, 9
  br i1 %38, label %30, label %39

39:                                               ; preds = %30, %20
  %40 = phi i8* [ %5, %20 ], [ %36, %30 ]
  store i8 45, i8* %40, align 1
  br label %41

41:                                               ; preds = %9, %39
  %42 = phi i8* [ %40, %39 ], [ %11, %9 ]
  %43 = call i64 @strlen(i8* %42) #22
  %44 = icmp ugt i64 %43, -17
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %46) #23
  unreachable

47:                                               ; preds = %41
  %48 = icmp ult i64 %43, 23
  br i1 %48, label %57, label %49

49:                                               ; preds = %47
  %50 = add nuw i64 %43, 16
  %51 = and i64 %50, -16
  %52 = tail call i8* @_Znwm(i64 %51) #24
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8
  %54 = or i64 %51, -9223372036854775808
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %56, align 8
  br label %63

57:                                               ; preds = %47
  %58 = trunc i64 %43 to i8
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 %58, i8* %60, align 1
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %62 = icmp eq i64 %43, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %57, %49
  %64 = phi i8* [ %52, %49 ], [ %61, %57 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %42, i64 %43, i1 false) #22
  br label %65

65:                                               ; preds = %57, %63
  %66 = phi i8* [ %61, %57 ], [ %64, %63 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 %43
  store i8 0, i8* %67, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf10SimpleItoaEm(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #3 {
  %3 = alloca [32 x i8], align 16
  %4 = ptrtoint [32 x i8]* %3 to i64
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 32, i1 false)
  %6 = call i8* @_ZN6google8protobuf22FastUInt64ToBufferLeftEmPc(i64 %1, i8* nonnull %5)
  %7 = ptrtoint i8* %6 to i64
  %8 = sub i64 %7, %4
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #23
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = trunc i64 %8 to i8
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 %15, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %27

19:                                               ; preds = %12
  %20 = add nuw i64 %8, 16
  %21 = and i64 %20, -16
  %22 = call i8* @_Znwm(i64 %21) #24
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %26, align 8
  br label %27

27:                                               ; preds = %19, %14
  %28 = phi i8* [ %18, %14 ], [ %22, %19 ]
  %29 = icmp eq i8* %5, %6
  br i1 %29, label %125, label %30

30:                                               ; preds = %27
  %31 = ptrtoint i8* %6 to i64
  %32 = sub i64 %31, %4
  %33 = icmp ult i64 %32, 32
  br i1 %33, label %115, label %34

34:                                               ; preds = %30
  %35 = and i64 %32, -32
  %36 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %35
  %37 = getelementptr i8, i8* %28, i64 %35
  %38 = add i64 %35, -32
  %39 = lshr exact i64 %38, 5
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp ult i64 %38, 96
  br i1 %42, label %94, label %43

43:                                               ; preds = %34
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %91, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %92, %45 ]
  %48 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %46
  %49 = getelementptr i8, i8* %28, i64 %46
  %50 = bitcast i8* %48 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 16
  %52 = getelementptr i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 16
  %55 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1
  %56 = getelementptr i8, i8* %49, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %57, align 1
  %58 = or i64 %46, 32
  %59 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %58
  %60 = getelementptr i8, i8* %28, i64 %58
  %61 = bitcast i8* %59 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 16
  %63 = getelementptr i8, i8* %59, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 16
  %66 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1
  %67 = getelementptr i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %68, align 1
  %69 = or i64 %46, 64
  %70 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %69
  %71 = getelementptr i8, i8* %28, i64 %69
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 16
  %74 = getelementptr i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 16
  %77 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1
  %78 = getelementptr i8, i8* %71, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1
  %80 = or i64 %46, 96
  %81 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %80
  %82 = getelementptr i8, i8* %28, i64 %80
  %83 = bitcast i8* %81 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 16
  %85 = getelementptr i8, i8* %81, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 16
  %88 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1
  %89 = getelementptr i8, i8* %82, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1
  %91 = add i64 %46, 128
  %92 = add i64 %47, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %45, !llvm.loop !30

94:                                               ; preds = %45, %34
  %95 = phi i64 [ 0, %34 ], [ %91, %45 ]
  %96 = icmp eq i64 %41, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %110, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %111, %97 ], [ %41, %94 ]
  %100 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %98
  %101 = getelementptr i8, i8* %28, i64 %98
  %102 = bitcast i8* %100 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 16
  %104 = getelementptr i8, i8* %100, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 16
  %107 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1
  %108 = getelementptr i8, i8* %101, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1
  %110 = add i64 %98, 32
  %111 = add i64 %99, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %97, !llvm.loop !31

113:                                              ; preds = %97, %94
  %114 = icmp eq i64 %32, %35
  br i1 %114, label %125, label %115

115:                                              ; preds = %113, %30
  %116 = phi i8* [ %5, %30 ], [ %36, %113 ]
  %117 = phi i8* [ %28, %30 ], [ %37, %113 ]
  br label %118

118:                                              ; preds = %115, %118
  %119 = phi i8* [ %122, %118 ], [ %116, %115 ]
  %120 = phi i8* [ %123, %118 ], [ %117, %115 ]
  %121 = load i8, i8* %119, align 1
  store i8 %121, i8* %120, align 1
  %122 = getelementptr inbounds i8, i8* %119, i64 1
  %123 = getelementptr inbounds i8, i8* %120, i64 1
  %124 = icmp eq i8* %122, %6
  br i1 %124, label %125, label %118, !llvm.loop !32

125:                                              ; preds = %118, %113, %27
  %126 = phi i8* [ %28, %27 ], [ %37, %113 ], [ %123, %118 ]
  store i8 0, i8* %126, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf10SimpleItoaEx(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #3 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #22
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 19
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 20
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 32, i1 false)
  store i8 0, i8* %7, align 1
  %8 = icmp sgt i64 %1, -1
  br i1 %8, label %9, label %18

9:                                                ; preds = %2, %9
  %10 = phi i64 [ %16, %9 ], [ %1, %2 ]
  %11 = phi i8* [ %15, %9 ], [ %6, %2 ]
  %12 = srem i64 %10, 10
  %13 = trunc i64 %12 to i8
  %14 = add nsw i8 %13, 48
  %15 = getelementptr inbounds i8, i8* %11, i64 -1
  store i8 %14, i8* %11, align 1
  %16 = sdiv i64 %10, 10
  %17 = icmp sgt i64 %10, 9
  br i1 %17, label %9, label %41

18:                                               ; preds = %2
  %19 = icmp sgt i64 %1, -10
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = trunc i64 %1 to i8
  %22 = sub nsw i8 48, %21
  store i8 %22, i8* %6, align 4
  br label %39

23:                                               ; preds = %18
  %24 = sub nuw nsw i64 -10, %1
  %25 = srem i64 %24, 10
  %26 = trunc i64 %25 to i8
  %27 = add nuw nsw i8 %26, 48
  store i8 %27, i8* %6, align 4
  %28 = sdiv i64 %24, 10
  %29 = add nuw nsw i64 %28, 1
  br label %30

30:                                               ; preds = %30, %23
  %31 = phi i64 [ %29, %23 ], [ %37, %30 ]
  %32 = phi i8* [ %5, %23 ], [ %36, %30 ]
  %33 = srem i64 %31, 10
  %34 = trunc i64 %33 to i8
  %35 = add nsw i8 %34, 48
  %36 = getelementptr inbounds i8, i8* %32, i64 -1
  store i8 %35, i8* %32, align 1
  %37 = sdiv i64 %31, 10
  %38 = icmp sgt i64 %31, 9
  br i1 %38, label %30, label %39

39:                                               ; preds = %30, %20
  %40 = phi i8* [ %5, %20 ], [ %36, %30 ]
  store i8 45, i8* %40, align 1
  br label %41

41:                                               ; preds = %9, %39
  %42 = phi i8* [ %40, %39 ], [ %11, %9 ]
  %43 = call i64 @strlen(i8* %42) #22
  %44 = icmp ugt i64 %43, -17
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %46) #23
  unreachable

47:                                               ; preds = %41
  %48 = icmp ult i64 %43, 23
  br i1 %48, label %57, label %49

49:                                               ; preds = %47
  %50 = add nuw i64 %43, 16
  %51 = and i64 %50, -16
  %52 = tail call i8* @_Znwm(i64 %51) #24
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8
  %54 = or i64 %51, -9223372036854775808
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %56, align 8
  br label %63

57:                                               ; preds = %47
  %58 = trunc i64 %43 to i8
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 %58, i8* %60, align 1
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %62 = icmp eq i64 %43, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %57, %49
  %64 = phi i8* [ %52, %49 ], [ %61, %57 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %42, i64 %43, i1 false) #22
  br label %65

65:                                               ; preds = %57, %63
  %66 = phi i8* [ %61, %57 ], [ %64, %63 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 %43
  store i8 0, i8* %67, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf10SimpleItoaEy(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #3 {
  %3 = alloca [32 x i8], align 16
  %4 = ptrtoint [32 x i8]* %3 to i64
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 32, i1 false)
  %6 = call i8* @_ZN6google8protobuf22FastUInt64ToBufferLeftEmPc(i64 %1, i8* nonnull %5)
  %7 = ptrtoint i8* %6 to i64
  %8 = sub i64 %7, %4
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #23
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = trunc i64 %8 to i8
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 %15, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %27

19:                                               ; preds = %12
  %20 = add nuw i64 %8, 16
  %21 = and i64 %20, -16
  %22 = call i8* @_Znwm(i64 %21) #24
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %26, align 8
  br label %27

27:                                               ; preds = %19, %14
  %28 = phi i8* [ %18, %14 ], [ %22, %19 ]
  %29 = icmp eq i8* %5, %6
  br i1 %29, label %125, label %30

30:                                               ; preds = %27
  %31 = ptrtoint i8* %6 to i64
  %32 = sub i64 %31, %4
  %33 = icmp ult i64 %32, 32
  br i1 %33, label %115, label %34

34:                                               ; preds = %30
  %35 = and i64 %32, -32
  %36 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %35
  %37 = getelementptr i8, i8* %28, i64 %35
  %38 = add i64 %35, -32
  %39 = lshr exact i64 %38, 5
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp ult i64 %38, 96
  br i1 %42, label %94, label %43

43:                                               ; preds = %34
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %91, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %92, %45 ]
  %48 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %46
  %49 = getelementptr i8, i8* %28, i64 %46
  %50 = bitcast i8* %48 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 16
  %52 = getelementptr i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 16
  %55 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1
  %56 = getelementptr i8, i8* %49, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %57, align 1
  %58 = or i64 %46, 32
  %59 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %58
  %60 = getelementptr i8, i8* %28, i64 %58
  %61 = bitcast i8* %59 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 16
  %63 = getelementptr i8, i8* %59, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 16
  %66 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1
  %67 = getelementptr i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %68, align 1
  %69 = or i64 %46, 64
  %70 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %69
  %71 = getelementptr i8, i8* %28, i64 %69
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 16
  %74 = getelementptr i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 16
  %77 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1
  %78 = getelementptr i8, i8* %71, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1
  %80 = or i64 %46, 96
  %81 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %80
  %82 = getelementptr i8, i8* %28, i64 %80
  %83 = bitcast i8* %81 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 16
  %85 = getelementptr i8, i8* %81, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 16
  %88 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1
  %89 = getelementptr i8, i8* %82, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1
  %91 = add i64 %46, 128
  %92 = add i64 %47, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %45, !llvm.loop !33

94:                                               ; preds = %45, %34
  %95 = phi i64 [ 0, %34 ], [ %91, %45 ]
  %96 = icmp eq i64 %41, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %110, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %111, %97 ], [ %41, %94 ]
  %100 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %98
  %101 = getelementptr i8, i8* %28, i64 %98
  %102 = bitcast i8* %100 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 16
  %104 = getelementptr i8, i8* %100, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 16
  %107 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1
  %108 = getelementptr i8, i8* %101, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1
  %110 = add i64 %98, 32
  %111 = add i64 %99, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %97, !llvm.loop !34

113:                                              ; preds = %97, %94
  %114 = icmp eq i64 %32, %35
  br i1 %114, label %125, label %115

115:                                              ; preds = %113, %30
  %116 = phi i8* [ %5, %30 ], [ %36, %113 ]
  %117 = phi i8* [ %28, %30 ], [ %37, %113 ]
  br label %118

118:                                              ; preds = %115, %118
  %119 = phi i8* [ %122, %118 ], [ %116, %115 ]
  %120 = phi i8* [ %123, %118 ], [ %117, %115 ]
  %121 = load i8, i8* %119, align 1
  store i8 %121, i8* %120, align 1
  %122 = getelementptr inbounds i8, i8* %119, i64 1
  %123 = getelementptr inbounds i8, i8* %120, i64 1
  %124 = icmp eq i8* %122, %6
  br i1 %124, label %125, label %118, !llvm.loop !35

125:                                              ; preds = %118, %113, %27
  %126 = phi i8* [ %28, %27 ], [ %37, %113 ], [ %123, %118 ]
  store i8 0, i8* %126, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf10SimpleDtoaEd(%"class.std::__1::basic_string"* noalias sret, double) local_unnamed_addr #3 {
  %3 = alloca double, align 8
  %4 = alloca [32 x i8], align 16
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #22
  %6 = fcmp oeq double %1, 0x7FF0000000000000
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 32, i1 false)
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast [32 x i8]* %4 to i32*
  store i32 6712937, i32* %8, align 16
  br label %25

9:                                                ; preds = %2
  %10 = fcmp oeq double %1, 0xFFF0000000000000
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %5, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 5, i1 false) #22
  br label %25

12:                                               ; preds = %9
  %13 = fcmp uno double %1, 0.000000e+00
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast [32 x i8]* %4 to i32*
  store i32 7233902, i32* %15, align 16
  br label %25

16:                                               ; preds = %12
  %17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %5, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 15, double %1) #22
  %18 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  store volatile double 0xFFFFFFFFFFFFFFFF, double* %3, align 8
  %19 = call double @_ZN6google8protobuf8internal14NoLocaleStrtodEPKcPPc(i8* nonnull %5, i8** null) #22
  store volatile double %19, double* %3, align 8
  %20 = load volatile double, double* %3, align 8
  %21 = fcmp une double %20, %1
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %5, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 17, double %1) #22
  br label %24

24:                                               ; preds = %22, %16
  call void @_ZN6google8protobuf15DelocalizeRadixEPc(i8* nonnull %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %25

25:                                               ; preds = %7, %11, %14, %24
  %26 = call i64 @strlen(i8* nonnull %5) #22
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #23
  unreachable

30:                                               ; preds = %25
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #24
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %46

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %45 = icmp eq i64 %26, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %40, %32
  %47 = phi i8* [ %35, %32 ], [ %44, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* nonnull align 16 %5, i64 %26, i1 false) #22
  br label %48

48:                                               ; preds = %40, %46
  %49 = phi i8* [ %44, %40 ], [ %47, %46 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 %26
  store i8 0, i8* %50, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6google8protobuf14DoubleToBufferEdPc(double, i8* returned) local_unnamed_addr #3 {
  %3 = alloca double, align 8
  %4 = fcmp oeq double %0, 0x7FF0000000000000
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast i8* %1 to i32*
  store i32 6712937, i32* %6, align 1
  br label %23

7:                                                ; preds = %2
  %8 = fcmp oeq double %0, 0xFFF0000000000000
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 5, i1 false)
  br label %23

10:                                               ; preds = %7
  %11 = fcmp uno double %0, 0.000000e+00
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = bitcast i8* %1 to i32*
  store i32 7233902, i32* %13, align 1
  br label %23

14:                                               ; preds = %10
  %15 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 15, double %0) #22
  %16 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  store volatile double 0xFFFFFFFFFFFFFFFF, double* %3, align 8
  %17 = tail call double @_ZN6google8protobuf8internal14NoLocaleStrtodEPKcPPc(i8* %1, i8** null)
  store volatile double %17, double* %3, align 8
  %18 = load volatile double, double* %3, align 8
  %19 = fcmp une double %18, %0
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 17, double %0) #22
  br label %22

22:                                               ; preds = %20, %14
  tail call void @_ZN6google8protobuf15DelocalizeRadixEPc(i8* %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  br label %23

23:                                               ; preds = %22, %12, %9, %5
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf10SimpleFtoaEf(%"class.std::__1::basic_string"* noalias sret, float) local_unnamed_addr #3 {
  %3 = alloca [24 x i8], align 16
  %4 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 24, i1 false)
  %5 = call i8* @_ZN6google8protobuf13FloatToBufferEfPc(float %1, i8* nonnull %4)
  %6 = call i64 @strlen(i8* nonnull %5) #22
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %9) #23
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = call i8* @_Znwm(i64 %14) #24
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %26

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %12
  %27 = phi i8* [ %15, %12 ], [ %24, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* nonnull align 16 %5, i64 %6, i1 false) #22
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8* [ %24, %20 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %6
  store i8 0, i8* %30, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6google8protobuf13FloatToBufferEfPc(float, i8* returned) local_unnamed_addr #3 {
  %3 = alloca i8*, align 8
  %4 = fpext float %0 to double
  %5 = fcmp oeq float %0, 0x7FF0000000000000
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to i32*
  store i32 6712937, i32* %7, align 1
  br label %35

8:                                                ; preds = %2
  %9 = fcmp oeq float %0, 0xFFF0000000000000
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 5, i1 false)
  br label %35

11:                                               ; preds = %8
  %12 = fcmp uno float %0, 0.000000e+00
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i32*
  store i32 7233902, i32* %14, align 1
  br label %35

15:                                               ; preds = %11
  %16 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 6, double %4) #22
  %17 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %18 = tail call i32* @__errno_location() #18
  store i32 0, i32* %18, align 4
  %19 = call float @strtof(i8* %1, i8** nonnull %3) #22
  %20 = load i8, i8* %1, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = load i8*, i8** %3, align 8
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %22, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  br label %32

27:                                               ; preds = %22
  %28 = load i32, i32* %18, align 4
  %29 = icmp ne i32 %28, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #22
  %30 = fcmp une float %19, %0
  %31 = or i1 %30, %29
  br i1 %31, label %32, label %34

32:                                               ; preds = %26, %27
  %33 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 9, double %4) #22
  br label %34

34:                                               ; preds = %27, %32
  tail call void @_ZN6google8protobuf15DelocalizeRadixEPc(i8* %1)
  br label %35

35:                                               ; preds = %34, %13, %10, %6
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf15DelocalizeRadixEPc(i8*) local_unnamed_addr #3 {
  %2 = tail call i8* @strchr(i8* %0, i32 46) #21
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %28

4:                                                ; preds = %1, %10
  %5 = phi i8* [ %11, %10 ], [ %0, %1 ]
  %6 = load i8, i8* %5, align 1
  %7 = add i8 %6, -48
  %8 = icmp ult i8 %7, 10
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  switch i8 %6, label %12 [
    i8 101, label %10
    i8 69, label %10
    i8 43, label %10
    i8 45, label %10
    i8 0, label %28
  ]

10:                                               ; preds = %9, %9, %9, %9, %4
  %11 = getelementptr inbounds i8, i8* %5, i64 1
  br label %4

12:                                               ; preds = %9
  store i8 46, i8* %5, align 1
  %13 = getelementptr inbounds i8, i8* %5, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = add i8 %14, -48
  %16 = icmp ult i8 %15, 10
  br i1 %16, label %28, label %17

17:                                               ; preds = %12
  switch i8 %14, label %18 [
    i8 101, label %28
    i8 69, label %28
    i8 43, label %28
    i8 45, label %28
    i8 0, label %28
  ]

18:                                               ; preds = %17, %24
  %19 = phi i8* [ %20, %24 ], [ %13, %17 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = add i8 %21, -48
  %23 = icmp ult i8 %22, 10
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  switch i8 %21, label %18 [
    i8 101, label %25
    i8 69, label %25
    i8 43, label %25
    i8 45, label %25
    i8 0, label %25
  ]

25:                                               ; preds = %24, %24, %24, %24, %24, %18
  %26 = tail call i64 @strlen(i8* %20) #21
  %27 = add i64 %26, 1
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %20, i64 %27, i1 false)
  br label %28

28:                                               ; preds = %9, %17, %17, %17, %17, %17, %12, %1, %25
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN6google8protobuf8internal14NoLocaleStrtodEPKcPPc(i8*, i8**) local_unnamed_addr #3 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %5 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %6 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %7 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %8 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %9 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %10 = alloca i8*, align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca i8*, align 8
  %13 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %14 = call double @strtod(i8* %0, i8** nonnull %10) #22
  %15 = icmp ne i8** %1, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = load i8*, i8** %10, align 8
  %18 = ptrtoint i8* %17 to i64
  br label %24

19:                                               ; preds = %2
  %20 = bitcast i8** %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i8** %1 to i64*
  store i64 %21, i64* %22, align 8
  %23 = inttoptr i64 %21 to i8*
  br label %24

24:                                               ; preds = %16, %19
  %25 = phi i64 [ %18, %16 ], [ %21, %19 ]
  %26 = phi i8* [ %17, %16 ], [ %23, %19 ]
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 46
  br i1 %28, label %29, label %106

29:                                               ; preds = %24
  %30 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #22
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %34 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #22, !noalias !36
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 16, i1 false) #22, !noalias !36
  %36 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %33, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0), double 1.500000e+00) #22, !noalias !36
  %37 = load i8, i8* %33, align 16, !noalias !36
  %38 = icmp eq i8 %37, 49
  %39 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #22, !noalias !36
  br i1 %38, label %43, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.google::protobuf::internal::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %41) #22, !noalias !36
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 2431) #22
  %42 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41, i64 0, i64 0)) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %5, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %42) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #22, !noalias !36
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %41) #22, !noalias !36
  br label %44

43:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #22, !noalias !36
  br label %44

44:                                               ; preds = %43, %40
  %45 = add nsw i32 %36, -1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1, !noalias !36
  %49 = icmp eq i8 %48, 53
  %50 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #22, !noalias !36
  br i1 %49, label %54, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.google::protobuf::internal::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %52) #22, !noalias !36
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %6, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 2432) #22
  %53 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i64 0, i64 0)) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %7, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %53) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #22, !noalias !36
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %6) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %52) #22, !noalias !36
  br label %55

54:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #22, !noalias !36
  br label %55

55:                                               ; preds = %54, %51
  %56 = icmp slt i32 %36, 7
  %57 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #22, !noalias !36
  br i1 %56, label %61, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.google::protobuf::internal::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #22, !noalias !36
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %8, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 2433) #22
  %60 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i64 0, i64 0)) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %9, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %60) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #22, !noalias !36
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %8) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #22, !noalias !36
  br label %62

61:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #22, !noalias !36
  br label %62

62:                                               ; preds = %58, %61
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #22, !alias.scope !36
  %63 = call i64 @strlen(i8* %0) #21, !noalias !36
  %64 = sext i32 %36 to i64
  %65 = add nsw i64 %64, -3
  %66 = add i64 %65, %63
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %11, i64 %66) #22
  %67 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"* nonnull %11, i8* %0, i8* %26) #22
  %68 = add nsw i32 %36, -2
  %69 = sext i32 %68 to i64
  %70 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %11, i8* %35, i64 %69) #22
  %71 = getelementptr inbounds i8, i8* %26, i64 1
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %11, i8* %71) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #22, !noalias !36
  %73 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i8*, i8** %31, align 8
  %78 = select i1 %76, i8* %77, i8* %30
  %79 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %80 = call double @strtod(i8* %78, i8** nonnull %12) #22
  %81 = bitcast i8** %12 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = ptrtoint i8* %78 to i64
  %84 = sub i64 %82, %83
  %85 = ptrtoint i8* %0 to i64
  %86 = sub i64 %25, %85
  %87 = icmp sgt i64 %84, %86
  %88 = and i1 %15, %87
  %89 = load i8, i8* %74, align 1
  br i1 %88, label %90, label %101

90:                                               ; preds = %62
  %91 = icmp slt i8 %89, 0
  %92 = load i64, i64* %32, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %91, i64 %92, i64 %93
  %95 = call i64 @strlen(i8* %0) #21
  %96 = sub i64 %94, %95
  %97 = shl i64 %96, 32
  %98 = ashr exact i64 %97, 32
  %99 = sub nsw i64 %84, %98
  %100 = getelementptr inbounds i8, i8* %0, i64 %99
  store i8* %100, i8** %1, align 8
  br label %101

101:                                              ; preds = %62, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #22
  %102 = icmp slt i8 %89, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %104) #24
  br label %105

105:                                              ; preds = %101, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #22
  br label %106

106:                                              ; preds = %24, %105
  %107 = phi double [ %80, %105 ], [ %14, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #22
  ret double %107
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf11safe_strtobENS0_11StringPieceEPb(i8* nocapture readonly, i64, i8*) local_unnamed_addr #3 {
  %4 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %5 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %6 = icmp eq i8* %2, null
  %7 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #22
  br i1 %6, label %8, label %12

8:                                                ; preds = %3
  %9 = bitcast %"class.google::protobuf::internal::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #22
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 1308) #22
  %10 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0)) #22
  %11 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0)) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %5, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %11) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #22
  br label %13

12:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22
  br label %13

13:                                               ; preds = %12, %8
  switch i64 %1, label %186 [
    i64 4, label %22
    i64 1, label %31
    i64 3, label %48
    i64 5, label %88
    i64 2, label %136
  ]

14:                                               ; preds = %22
  %15 = getelementptr inbounds i8, i8* %0, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = add i8 %16, -65
  %18 = icmp ult i8 %17, 26
  %19 = add i8 %16, 32
  %20 = select i1 %18, i8 %19, i8 %16
  %21 = icmp eq i8 %20, 114
  br i1 %21, label %188, label %186

22:                                               ; preds = %13
  %23 = load i8, i8* %0, align 1
  %24 = add i8 %23, -65
  %25 = icmp ult i8 %24, 26
  %26 = add i8 %23, 32
  %27 = select i1 %25, i8 %26, i8 %23
  %28 = icmp eq i8 %27, 116
  br i1 %28, label %14, label %186

29:                                               ; preds = %31
  %30 = icmp eq i64 %46, %1
  br i1 %30, label %96, label %31

31:                                               ; preds = %13, %29
  %32 = phi i64 [ %46, %29 ], [ 0, %13 ]
  %33 = getelementptr inbounds i8, i8* %0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = add i8 %34, -65
  %36 = icmp ult i8 %35, 26
  %37 = add i8 %34, 32
  %38 = select i1 %36, i8 %37, i8 %34
  %39 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.19, i64 0, i64 %32
  %40 = load i8, i8* %39, align 1
  %41 = add i8 %40, -65
  %42 = icmp ult i8 %41, 26
  %43 = add i8 %40, 32
  %44 = select i1 %42, i8 %43, i8 %40
  %45 = icmp eq i8 %38, %44
  %46 = add nuw i64 %32, 1
  br i1 %45, label %29, label %47

47:                                               ; preds = %31
  switch i64 %1, label %186 [
    i64 3, label %48
    i64 1, label %68
    i64 5, label %88
    i64 2, label %136
  ]

48:                                               ; preds = %13, %47
  br label %51

49:                                               ; preds = %51
  %50 = icmp eq i64 %66, %1
  br i1 %50, label %96, label %51

51:                                               ; preds = %48, %49
  %52 = phi i64 [ %66, %49 ], [ 0, %48 ]
  %53 = getelementptr inbounds i8, i8* %0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = add i8 %54, -65
  %56 = icmp ult i8 %55, 26
  %57 = add i8 %54, 32
  %58 = select i1 %56, i8 %57, i8 %54
  %59 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.20, i64 0, i64 %52
  %60 = load i8, i8* %59, align 1
  %61 = add i8 %60, -65
  %62 = icmp ult i8 %61, 26
  %63 = add i8 %60, 32
  %64 = select i1 %62, i8 %63, i8 %60
  %65 = icmp eq i8 %58, %64
  %66 = add nuw i64 %52, 1
  br i1 %65, label %49, label %67

67:                                               ; preds = %51
  switch i64 %1, label %186 [
    i64 1, label %68
    i64 5, label %88
    i64 2, label %136
  ]

68:                                               ; preds = %47, %67
  br label %71

69:                                               ; preds = %71
  %70 = icmp eq i64 %86, %1
  br i1 %70, label %96, label %71

71:                                               ; preds = %68, %69
  %72 = phi i64 [ %86, %69 ], [ 0, %68 ]
  %73 = getelementptr inbounds i8, i8* %0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = add i8 %74, -65
  %76 = icmp ult i8 %75, 26
  %77 = add i8 %74, 32
  %78 = select i1 %76, i8 %77, i8 %74
  %79 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.21, i64 0, i64 %72
  %80 = load i8, i8* %79, align 1
  %81 = add i8 %80, -65
  %82 = icmp ult i8 %81, 26
  %83 = add i8 %80, 32
  %84 = select i1 %82, i8 %83, i8 %80
  %85 = icmp eq i8 %78, %84
  %86 = add nuw i64 %72, 1
  br i1 %85, label %69, label %87

87:                                               ; preds = %71
  switch i64 %1, label %186 [
    i64 1, label %89
    i64 5, label %88
    i64 2, label %136
  ]

88:                                               ; preds = %13, %47, %67, %87
  br label %99

89:                                               ; preds = %87
  %90 = load i8, i8* %0, align 1
  %91 = add i8 %90, -65
  %92 = icmp ult i8 %91, 26
  %93 = add i8 %90, 32
  %94 = select i1 %92, i8 %93, i8 %90
  %95 = icmp eq i8 %94, 49
  br i1 %95, label %96, label %116

96:                                               ; preds = %196, %29, %49, %69, %89
  store i8 1, i8* %2, align 1
  br label %186

97:                                               ; preds = %99
  %98 = icmp eq i64 %114, %1
  br i1 %98, label %185, label %99

99:                                               ; preds = %88, %97
  %100 = phi i64 [ %114, %97 ], [ 0, %88 ]
  %101 = getelementptr inbounds i8, i8* %0, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = add i8 %102, -65
  %104 = icmp ult i8 %103, 26
  %105 = add i8 %102, 32
  %106 = select i1 %104, i8 %105, i8 %102
  %107 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.23, i64 0, i64 %100
  %108 = load i8, i8* %107, align 1
  %109 = add i8 %108, -65
  %110 = icmp ult i8 %109, 26
  %111 = add i8 %108, 32
  %112 = select i1 %110, i8 %111, i8 %108
  %113 = icmp eq i8 %106, %112
  %114 = add nuw i64 %100, 1
  br i1 %113, label %97, label %115

115:                                              ; preds = %99
  switch i64 %1, label %186 [
    i64 1, label %116
    i64 2, label %136
  ]

116:                                              ; preds = %89, %115
  br label %119

117:                                              ; preds = %119
  %118 = icmp eq i64 %134, %1
  br i1 %118, label %185, label %119

119:                                              ; preds = %116, %117
  %120 = phi i64 [ %134, %117 ], [ 0, %116 ]
  %121 = getelementptr inbounds i8, i8* %0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = add i8 %122, -65
  %124 = icmp ult i8 %123, 26
  %125 = add i8 %122, 32
  %126 = select i1 %124, i8 %125, i8 %122
  %127 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.24, i64 0, i64 %120
  %128 = load i8, i8* %127, align 1
  %129 = add i8 %128, -65
  %130 = icmp ult i8 %129, 26
  %131 = add i8 %128, 32
  %132 = select i1 %130, i8 %131, i8 %128
  %133 = icmp eq i8 %126, %132
  %134 = add nuw i64 %120, 1
  br i1 %133, label %117, label %135

135:                                              ; preds = %119
  switch i64 %1, label %186 [
    i64 2, label %136
    i64 1, label %157
  ]

136:                                              ; preds = %13, %47, %67, %87, %115, %135
  br label %139

137:                                              ; preds = %139
  %138 = icmp eq i64 %154, %1
  br i1 %138, label %185, label %139

139:                                              ; preds = %136, %137
  %140 = phi i64 [ %154, %137 ], [ 0, %136 ]
  %141 = getelementptr inbounds i8, i8* %0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = add i8 %142, -65
  %144 = icmp ult i8 %143, 26
  %145 = add i8 %142, 32
  %146 = select i1 %144, i8 %145, i8 %142
  %147 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.25, i64 0, i64 %140
  %148 = load i8, i8* %147, align 1
  %149 = add i8 %148, -65
  %150 = icmp ult i8 %149, 26
  %151 = add i8 %148, 32
  %152 = select i1 %150, i8 %151, i8 %148
  %153 = icmp eq i8 %146, %152
  %154 = add nuw i64 %140, 1
  br i1 %153, label %137, label %155

155:                                              ; preds = %139
  %156 = icmp eq i64 %1, 1
  br i1 %156, label %157, label %186

157:                                              ; preds = %155, %135
  br label %160

158:                                              ; preds = %160
  %159 = icmp eq i64 %175, %1
  br i1 %159, label %185, label %160

160:                                              ; preds = %157, %158
  %161 = phi i64 [ %175, %158 ], [ 0, %157 ]
  %162 = getelementptr inbounds i8, i8* %0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = add i8 %163, -65
  %165 = icmp ult i8 %164, 26
  %166 = add i8 %163, 32
  %167 = select i1 %165, i8 %166, i8 %163
  %168 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.26, i64 0, i64 %161
  %169 = load i8, i8* %168, align 1
  %170 = add i8 %169, -65
  %171 = icmp ult i8 %170, 26
  %172 = add i8 %169, 32
  %173 = select i1 %171, i8 %172, i8 %169
  %174 = icmp eq i8 %167, %173
  %175 = add nuw i64 %161, 1
  br i1 %174, label %158, label %176

176:                                              ; preds = %160
  %177 = icmp eq i64 %1, 1
  br i1 %177, label %178, label %186

178:                                              ; preds = %176
  %179 = load i8, i8* %0, align 1
  %180 = add i8 %179, -65
  %181 = icmp ult i8 %180, 26
  %182 = add i8 %179, 32
  %183 = select i1 %181, i8 %182, i8 %179
  %184 = icmp eq i8 %183, 48
  br i1 %184, label %185, label %186

185:                                              ; preds = %97, %117, %137, %158, %178
  store i8 0, i8* %2, align 1
  br label %186

186:                                              ; preds = %22, %14, %188, %196, %178, %155, %13, %47, %67, %87, %115, %135, %176, %185, %96
  %187 = phi i1 [ true, %96 ], [ true, %185 ], [ false, %176 ], [ false, %155 ], [ false, %135 ], [ false, %115 ], [ false, %87 ], [ false, %67 ], [ false, %47 ], [ false, %13 ], [ false, %178 ], [ false, %196 ], [ false, %188 ], [ false, %14 ], [ false, %22 ]
  ret i1 %187

188:                                              ; preds = %14
  %189 = getelementptr inbounds i8, i8* %0, i64 2
  %190 = load i8, i8* %189, align 1
  %191 = add i8 %190, -65
  %192 = icmp ult i8 %191, 26
  %193 = add i8 %190, 32
  %194 = select i1 %192, i8 %193, i8 %190
  %195 = icmp eq i8 %194, 117
  br i1 %195, label %196, label %186

196:                                              ; preds = %188
  %197 = getelementptr inbounds i8, i8* %0, i64 3
  %198 = load i8, i8* %197, align 1
  %199 = add i8 %198, -65
  %200 = icmp ult i8 %199, 26
  %201 = add i8 %198, 32
  %202 = select i1 %200, i8 %201, i8 %198
  %203 = icmp eq i8 %202, 101
  br i1 %203, label %96, label %186
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf11safe_strtofEPKcPf(i8*, float* nocapture) local_unnamed_addr #3 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = tail call i32* @__errno_location() #18
  store i32 0, i32* %5, align 4
  %6 = call float @strtof(i8* %0, i8** nonnull %3) #22
  store float %6, float* %1, align 4
  %7 = load i8, i8* %0, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 8
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %14, 0
  br label %16

16:                                               ; preds = %2, %13, %9
  %17 = phi i1 [ false, %9 ], [ false, %2 ], [ %15, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22
  ret i1 %17
}

; Function Attrs: nofree nounwind
declare float @strtof(i8* readonly, i8** nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf11safe_strtodEPKcPd(i8*, double* nocapture) local_unnamed_addr #3 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = call double @_ZN6google8protobuf8internal14NoLocaleStrtodEPKcPPc(i8* %0, i8** nonnull %3)
  store double %5, double* %1, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp eq i8* %6, %0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2, %11
  %9 = phi i8* [ %12, %11 ], [ %6, %2 ]
  %10 = load i8, i8* %9, align 1
  switch i8 %10, label %13 [
    i8 32, label %11
    i8 9, label %11
    i8 10, label %11
    i8 11, label %11
    i8 12, label %11
    i8 13, label %11
  ]

11:                                               ; preds = %8, %8, %8, %8, %8, %8
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  store i8* %12, i8** %3, align 8
  br label %8

13:                                               ; preds = %8, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %8 ]
  %15 = load i8, i8* %0, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = load i8, i8* %14, align 1
  %19 = icmp eq i8 %18, 0
  br label %20

20:                                               ; preds = %13, %17
  %21 = phi i1 [ false, %13 ], [ %19, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf12safe_strto32ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPi(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32*) local_unnamed_addr #3 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #22
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %13, i64 %15) #22
  br label %16

16:                                               ; preds = %8, %11
  %17 = call zeroext i1 @_ZN6google8protobuf17safe_int_internalIiEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_(%"class.std::__1::basic_string"* nonnull %3, i32* %1)
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #24
  br label %25

25:                                               ; preds = %16, %22
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6google8protobuf17safe_int_internalIiEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_(%"class.std::__1::basic_string"*, i32*) local_unnamed_addr #3 comdat {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  store i32 0, i32* %1, align 4
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %17

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = zext i8 %7 to i64
  br label %17

17:                                               ; preds = %14, %9
  %18 = phi i8* [ %11, %9 ], [ %15, %14 ]
  %19 = phi i64 [ %13, %9 ], [ %16, %14 ]
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = icmp sgt i64 %19, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %17, %26
  %23 = phi i8* [ %27, %26 ], [ %18, %17 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 32
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  %28 = icmp ult i8* %27, %20
  br i1 %28, label %22, label %29

29:                                               ; preds = %26, %22, %17
  %30 = phi i8* [ %18, %17 ], [ %23, %22 ], [ %27, %26 ]
  br label %31

31:                                               ; preds = %34, %29
  %32 = phi i8* [ %20, %29 ], [ %35, %34 ]
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %34, label %146

34:                                               ; preds = %31
  %35 = getelementptr inbounds i8, i8* %32, i64 -1
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %31, label %38

38:                                               ; preds = %34
  %39 = load i8, i8* %30, align 1
  %40 = icmp eq i8 %39, 45
  switch i8 %39, label %44 [
    i8 45, label %41
    i8 43, label %41
  ]

41:                                               ; preds = %38, %38
  %42 = getelementptr inbounds i8, i8* %30, i64 1
  %43 = icmp ult i8* %42, %32
  br i1 %43, label %44, label %146

44:                                               ; preds = %38, %41
  %45 = phi i8* [ %42, %41 ], [ %30, %38 ]
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #22
  br i1 %8, label %47, label %50

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  br label %52

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i8* [ %49, %47 ], [ %51, %50 ]
  %54 = ptrtoint i8* %45 to i64
  %55 = ptrtoint i8* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ptrtoint i8* %32 to i64
  %58 = sub i64 %57, %54
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %56, i64 %58, %"class.std::__1::allocator"* dereferenceable(1) %59) #22
  %60 = load i8, i8* %6, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #24
  br label %65

65:                                               ; preds = %62, %52
  %66 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %46, i64 24, i1 false) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #22
  %67 = load i8, i8* %6, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %40, label %114, label %69

69:                                               ; preds = %65
  br i1 %68, label %72, label %70

70:                                               ; preds = %69
  %71 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %66, i64 24, i1 false) #22
  br label %78

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %74, i64 %76) #22
  %77 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %78

78:                                               ; preds = %70, %72
  %79 = phi i8* [ %71, %70 ], [ %77, %72 ]
  %80 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = zext i8 %82 to i64
  %89 = select i1 %83, i8* %85, i8* %79
  %90 = select i1 %83, i64 %87, i64 %88
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = icmp sgt i64 %90, 0
  br i1 %92, label %93, label %110

93:                                               ; preds = %78, %106
  %94 = phi i8* [ %108, %106 ], [ %89, %78 ]
  %95 = phi i32 [ %107, %106 ], [ 0, %78 ]
  %96 = load i8, i8* %94, align 1
  %97 = zext i8 %96 to i32
  %98 = add nsw i32 %97, -48
  %99 = icmp ugt i32 %98, 9
  br i1 %99, label %110, label %100

100:                                              ; preds = %93
  %101 = icmp sgt i32 %95, 214748364
  br i1 %101, label %110, label %102

102:                                              ; preds = %100
  %103 = mul nsw i32 %95, 10
  %104 = sub nuw i32 -2147483601, %97
  %105 = icmp sgt i32 %103, %104
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = add nsw i32 %98, %103
  %108 = getelementptr inbounds i8, i8* %94, i64 1
  %109 = icmp ult i8* %108, %91
  br i1 %109, label %93, label %110

110:                                              ; preds = %106, %102, %100, %93, %78
  %111 = phi i32 [ 0, %78 ], [ %107, %106 ], [ 2147483647, %102 ], [ 2147483647, %100 ], [ %95, %93 ]
  %112 = phi i1 [ true, %78 ], [ true, %106 ], [ false, %102 ], [ false, %100 ], [ false, %93 ]
  store i32 %111, i32* %1, align 4
  br i1 %83, label %113, label %146

113:                                              ; preds = %110
  call void @_ZdlPv(i8* %85) #24
  br label %146

114:                                              ; preds = %65
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %67 to i64
  %120 = select i1 %68, i8* %116, i8* %66
  %121 = select i1 %68, i64 %118, i64 %119
  %122 = getelementptr inbounds i8, i8* %120, i64 %121
  %123 = icmp sgt i64 %121, 0
  br i1 %123, label %124, label %144

124:                                              ; preds = %114, %140
  %125 = phi i8* [ %142, %140 ], [ %120, %114 ]
  %126 = phi i32 [ %141, %140 ], [ 0, %114 ]
  %127 = load i8, i8* %125, align 1
  %128 = zext i8 %127 to i32
  %129 = add nsw i32 %128, -48
  %130 = icmp ugt i32 %129, 9
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  store i32 %126, i32* %1, align 4
  br label %146

132:                                              ; preds = %124
  %133 = icmp slt i32 %126, -214748364
  br i1 %133, label %134, label %135

134:                                              ; preds = %132
  store i32 -2147483648, i32* %1, align 4
  br label %146

135:                                              ; preds = %132
  %136 = mul nsw i32 %126, 10
  %137 = add nuw i32 %128, 2147483600
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %135
  store i32 -2147483648, i32* %1, align 4
  br label %146

140:                                              ; preds = %135
  %141 = sub nsw i32 %136, %129
  %142 = getelementptr inbounds i8, i8* %125, i64 1
  %143 = icmp ult i8* %142, %122
  br i1 %143, label %124, label %144

144:                                              ; preds = %140, %114
  %145 = phi i32 [ 0, %114 ], [ %141, %140 ]
  store i32 %145, i32* %1, align 4
  br label %146

146:                                              ; preds = %31, %41, %144, %139, %134, %131, %113, %110
  %147 = phi i1 [ %112, %110 ], [ %112, %113 ], [ true, %144 ], [ false, %131 ], [ false, %134 ], [ false, %139 ], [ false, %41 ], [ false, %31 ]
  ret i1 %147
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf13safe_strtou32ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPj(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32*) local_unnamed_addr #3 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #22
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %13, i64 %15) #22
  br label %16

16:                                               ; preds = %8, %11
  %17 = call zeroext i1 @_ZN6google8protobuf18safe_uint_internalIjEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_(%"class.std::__1::basic_string"* nonnull %3, i32* %1)
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #24
  br label %25

25:                                               ; preds = %16, %22
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6google8protobuf18safe_uint_internalIjEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_(%"class.std::__1::basic_string"*, i32*) local_unnamed_addr #3 comdat {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  store i32 0, i32* %1, align 4
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %17

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = zext i8 %7 to i64
  br label %17

17:                                               ; preds = %14, %9
  %18 = phi i8* [ %11, %9 ], [ %15, %14 ]
  %19 = phi i64 [ %13, %9 ], [ %16, %14 ]
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = icmp sgt i64 %19, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %17, %26
  %23 = phi i8* [ %27, %26 ], [ %18, %17 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 32
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  %28 = icmp ult i8* %27, %20
  br i1 %28, label %22, label %29

29:                                               ; preds = %26, %22, %17
  %30 = phi i8* [ %18, %17 ], [ %23, %22 ], [ %27, %26 ]
  br label %31

31:                                               ; preds = %34, %29
  %32 = phi i8* [ %20, %29 ], [ %35, %34 ]
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %34, label %114

34:                                               ; preds = %31
  %35 = getelementptr inbounds i8, i8* %32, i64 -1
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %31, label %38

38:                                               ; preds = %34
  %39 = load i8, i8* %30, align 1
  %40 = icmp eq i8 %39, 45
  switch i8 %39, label %44 [
    i8 45, label %41
    i8 43, label %41
  ]

41:                                               ; preds = %38, %38
  %42 = getelementptr inbounds i8, i8* %30, i64 1
  %43 = icmp ult i8* %42, %32
  br i1 %43, label %44, label %114

44:                                               ; preds = %38, %41
  %45 = phi i8* [ %42, %41 ], [ %30, %38 ]
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #22
  br i1 %8, label %47, label %50

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  br label %52

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i8* [ %49, %47 ], [ %51, %50 ]
  %54 = ptrtoint i8* %45 to i64
  %55 = ptrtoint i8* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ptrtoint i8* %32 to i64
  %58 = sub i64 %57, %54
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %56, i64 %58, %"class.std::__1::allocator"* dereferenceable(1) %59) #22
  %60 = load i8, i8* %6, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #24
  br label %65

65:                                               ; preds = %52, %62
  %66 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %46, i64 24, i1 false) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #22
  br i1 %40, label %114, label %67

67:                                               ; preds = %65
  %68 = load i8, i8* %6, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %66, i64 24, i1 false) #22
  br label %78

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %74, i64 %76) #22
  %77 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %78

78:                                               ; preds = %70, %72
  %79 = phi i8* [ %71, %70 ], [ %77, %72 ]
  %80 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = zext i8 %82 to i64
  %89 = select i1 %83, i8* %85, i8* %79
  %90 = select i1 %83, i64 %87, i64 %88
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = icmp sgt i64 %90, 0
  br i1 %92, label %93, label %110

93:                                               ; preds = %78, %106
  %94 = phi i8* [ %108, %106 ], [ %89, %78 ]
  %95 = phi i32 [ %107, %106 ], [ 0, %78 ]
  %96 = load i8, i8* %94, align 1
  %97 = zext i8 %96 to i32
  %98 = add nsw i32 %97, -48
  %99 = icmp ugt i32 %98, 9
  br i1 %99, label %110, label %100

100:                                              ; preds = %93
  %101 = icmp ugt i32 %95, 429496729
  br i1 %101, label %110, label %102

102:                                              ; preds = %100
  %103 = mul i32 %95, 10
  %104 = sub nsw i32 47, %97
  %105 = icmp ugt i32 %103, %104
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = add i32 %98, %103
  %108 = getelementptr inbounds i8, i8* %94, i64 1
  %109 = icmp ult i8* %108, %91
  br i1 %109, label %93, label %110

110:                                              ; preds = %106, %102, %100, %93, %78
  %111 = phi i32 [ 0, %78 ], [ %107, %106 ], [ -1, %102 ], [ -1, %100 ], [ %95, %93 ]
  %112 = phi i1 [ true, %78 ], [ true, %106 ], [ false, %102 ], [ false, %100 ], [ false, %93 ]
  store i32 %111, i32* %1, align 4
  br i1 %83, label %113, label %114

113:                                              ; preds = %110
  call void @_ZdlPv(i8* %85) #24
  br label %114

114:                                              ; preds = %31, %65, %41, %113, %110
  %115 = phi i1 [ false, %65 ], [ %112, %110 ], [ %112, %113 ], [ false, %41 ], [ false, %31 ]
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf12safe_strto64ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPl(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64*) local_unnamed_addr #3 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #22
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %13, i64 %15) #22
  br label %16

16:                                               ; preds = %8, %11
  %17 = call zeroext i1 @_ZN6google8protobuf17safe_int_internalIlEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_(%"class.std::__1::basic_string"* nonnull %3, i64* %1)
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #24
  br label %25

25:                                               ; preds = %16, %22
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6google8protobuf17safe_int_internalIlEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_(%"class.std::__1::basic_string"*, i64*) local_unnamed_addr #3 comdat {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  store i64 0, i64* %1, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %17

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = zext i8 %7 to i64
  br label %17

17:                                               ; preds = %14, %9
  %18 = phi i8* [ %11, %9 ], [ %15, %14 ]
  %19 = phi i64 [ %13, %9 ], [ %16, %14 ]
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = icmp sgt i64 %19, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %17, %26
  %23 = phi i8* [ %27, %26 ], [ %18, %17 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 32
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  %28 = icmp ult i8* %27, %20
  br i1 %28, label %22, label %29

29:                                               ; preds = %26, %22, %17
  %30 = phi i8* [ %18, %17 ], [ %23, %22 ], [ %27, %26 ]
  br label %31

31:                                               ; preds = %34, %29
  %32 = phi i8* [ %20, %29 ], [ %35, %34 ]
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %34, label %148

34:                                               ; preds = %31
  %35 = getelementptr inbounds i8, i8* %32, i64 -1
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %31, label %38

38:                                               ; preds = %34
  %39 = load i8, i8* %30, align 1
  %40 = icmp eq i8 %39, 45
  switch i8 %39, label %44 [
    i8 45, label %41
    i8 43, label %41
  ]

41:                                               ; preds = %38, %38
  %42 = getelementptr inbounds i8, i8* %30, i64 1
  %43 = icmp ult i8* %42, %32
  br i1 %43, label %44, label %148

44:                                               ; preds = %38, %41
  %45 = phi i8* [ %42, %41 ], [ %30, %38 ]
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #22
  br i1 %8, label %47, label %50

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  br label %52

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i8* [ %49, %47 ], [ %51, %50 ]
  %54 = ptrtoint i8* %45 to i64
  %55 = ptrtoint i8* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ptrtoint i8* %32 to i64
  %58 = sub i64 %57, %54
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %56, i64 %58, %"class.std::__1::allocator"* dereferenceable(1) %59) #22
  %60 = load i8, i8* %6, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #24
  br label %65

65:                                               ; preds = %62, %52
  %66 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %46, i64 24, i1 false) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #22
  %67 = load i8, i8* %6, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %40, label %115, label %69

69:                                               ; preds = %65
  br i1 %68, label %72, label %70

70:                                               ; preds = %69
  %71 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %66, i64 24, i1 false) #22
  br label %78

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %74, i64 %76) #22
  %77 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %78

78:                                               ; preds = %70, %72
  %79 = phi i8* [ %71, %70 ], [ %77, %72 ]
  %80 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = zext i8 %82 to i64
  %89 = select i1 %83, i8* %85, i8* %79
  %90 = select i1 %83, i64 %87, i64 %88
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = icmp sgt i64 %90, 0
  br i1 %92, label %93, label %111

93:                                               ; preds = %78, %107
  %94 = phi i8* [ %109, %107 ], [ %89, %78 ]
  %95 = phi i64 [ %108, %107 ], [ 0, %78 ]
  %96 = load i8, i8* %94, align 1
  %97 = zext i8 %96 to i32
  %98 = add nsw i32 %97, -48
  %99 = icmp ugt i32 %98, 9
  br i1 %99, label %111, label %100

100:                                              ; preds = %93
  %101 = icmp sgt i64 %95, 922337203685477580
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = mul nsw i64 %95, 10
  %104 = sext i32 %98 to i64
  %105 = sub nuw nsw i64 9223372036854775807, %104
  %106 = icmp sgt i64 %103, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = add nsw i64 %103, %104
  %109 = getelementptr inbounds i8, i8* %94, i64 1
  %110 = icmp ult i8* %109, %91
  br i1 %110, label %93, label %111

111:                                              ; preds = %107, %102, %100, %93, %78
  %112 = phi i64 [ 0, %78 ], [ %108, %107 ], [ 9223372036854775807, %102 ], [ 9223372036854775807, %100 ], [ %95, %93 ]
  %113 = phi i1 [ true, %78 ], [ true, %107 ], [ false, %102 ], [ false, %100 ], [ false, %93 ]
  store i64 %112, i64* %1, align 8
  br i1 %83, label %114, label %148

114:                                              ; preds = %111
  call void @_ZdlPv(i8* %85) #24
  br label %148

115:                                              ; preds = %65
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = zext i8 %67 to i64
  %121 = select i1 %68, i8* %117, i8* %66
  %122 = select i1 %68, i64 %119, i64 %120
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  %124 = icmp sgt i64 %122, 0
  br i1 %124, label %125, label %146

125:                                              ; preds = %115, %142
  %126 = phi i8* [ %144, %142 ], [ %121, %115 ]
  %127 = phi i64 [ %143, %142 ], [ 0, %115 ]
  %128 = load i8, i8* %126, align 1
  %129 = zext i8 %128 to i32
  %130 = add nsw i32 %129, -48
  %131 = icmp ugt i32 %130, 9
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  store i64 %127, i64* %1, align 8
  br label %148

133:                                              ; preds = %125
  %134 = icmp slt i64 %127, -922337203685477580
  br i1 %134, label %135, label %136

135:                                              ; preds = %133
  store i64 -9223372036854775808, i64* %1, align 8
  br label %148

136:                                              ; preds = %133
  %137 = mul nsw i64 %127, 10
  %138 = sext i32 %130 to i64
  %139 = or i64 %138, -9223372036854775808
  %140 = icmp slt i64 %137, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %136
  store i64 -9223372036854775808, i64* %1, align 8
  br label %148

142:                                              ; preds = %136
  %143 = sub nsw i64 %137, %138
  %144 = getelementptr inbounds i8, i8* %126, i64 1
  %145 = icmp ult i8* %144, %123
  br i1 %145, label %125, label %146

146:                                              ; preds = %142, %115
  %147 = phi i64 [ 0, %115 ], [ %143, %142 ]
  store i64 %147, i64* %1, align 8
  br label %148

148:                                              ; preds = %31, %41, %146, %141, %135, %132, %114, %111
  %149 = phi i1 [ %113, %111 ], [ %113, %114 ], [ true, %146 ], [ false, %132 ], [ false, %135 ], [ false, %141 ], [ false, %41 ], [ false, %31 ]
  ret i1 %149
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf13safe_strtou64ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPm(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64*) local_unnamed_addr #3 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #22
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %13, i64 %15) #22
  br label %16

16:                                               ; preds = %8, %11
  %17 = call zeroext i1 @_ZN6google8protobuf18safe_uint_internalImEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_(%"class.std::__1::basic_string"* nonnull %3, i64* %1)
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #24
  br label %25

25:                                               ; preds = %16, %22
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6google8protobuf18safe_uint_internalImEEbNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPT_(%"class.std::__1::basic_string"*, i64*) local_unnamed_addr #3 comdat {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  store i64 0, i64* %1, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %17

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = zext i8 %7 to i64
  br label %17

17:                                               ; preds = %14, %9
  %18 = phi i8* [ %11, %9 ], [ %15, %14 ]
  %19 = phi i64 [ %13, %9 ], [ %16, %14 ]
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = icmp sgt i64 %19, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %17, %26
  %23 = phi i8* [ %27, %26 ], [ %18, %17 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 32
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  %28 = icmp ult i8* %27, %20
  br i1 %28, label %22, label %29

29:                                               ; preds = %26, %22, %17
  %30 = phi i8* [ %18, %17 ], [ %23, %22 ], [ %27, %26 ]
  br label %31

31:                                               ; preds = %34, %29
  %32 = phi i8* [ %20, %29 ], [ %35, %34 ]
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %34, label %115

34:                                               ; preds = %31
  %35 = getelementptr inbounds i8, i8* %32, i64 -1
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %31, label %38

38:                                               ; preds = %34
  %39 = load i8, i8* %30, align 1
  %40 = icmp eq i8 %39, 45
  switch i8 %39, label %44 [
    i8 45, label %41
    i8 43, label %41
  ]

41:                                               ; preds = %38, %38
  %42 = getelementptr inbounds i8, i8* %30, i64 1
  %43 = icmp ult i8* %42, %32
  br i1 %43, label %44, label %115

44:                                               ; preds = %38, %41
  %45 = phi i8* [ %42, %41 ], [ %30, %38 ]
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #22
  br i1 %8, label %47, label %50

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  br label %52

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i8* [ %49, %47 ], [ %51, %50 ]
  %54 = ptrtoint i8* %45 to i64
  %55 = ptrtoint i8* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ptrtoint i8* %32 to i64
  %58 = sub i64 %57, %54
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %56, i64 %58, %"class.std::__1::allocator"* dereferenceable(1) %59) #22
  %60 = load i8, i8* %6, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #24
  br label %65

65:                                               ; preds = %52, %62
  %66 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %46, i64 24, i1 false) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #22
  br i1 %40, label %115, label %67

67:                                               ; preds = %65
  %68 = load i8, i8* %6, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %66, i64 24, i1 false) #22
  br label %78

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %74, i64 %76) #22
  %77 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %78

78:                                               ; preds = %70, %72
  %79 = phi i8* [ %71, %70 ], [ %77, %72 ]
  %80 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = zext i8 %82 to i64
  %89 = select i1 %83, i8* %85, i8* %79
  %90 = select i1 %83, i64 %87, i64 %88
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = icmp sgt i64 %90, 0
  br i1 %92, label %93, label %111

93:                                               ; preds = %78, %107
  %94 = phi i8* [ %109, %107 ], [ %89, %78 ]
  %95 = phi i64 [ %108, %107 ], [ 0, %78 ]
  %96 = load i8, i8* %94, align 1
  %97 = zext i8 %96 to i32
  %98 = add nsw i32 %97, -48
  %99 = icmp ugt i32 %98, 9
  br i1 %99, label %111, label %100

100:                                              ; preds = %93
  %101 = icmp ugt i64 %95, 1844674407370955161
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = mul i64 %95, 10
  %104 = sext i32 %98 to i64
  %105 = xor i64 %104, -1
  %106 = icmp ugt i64 %103, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = add i64 %103, %104
  %109 = getelementptr inbounds i8, i8* %94, i64 1
  %110 = icmp ult i8* %109, %91
  br i1 %110, label %93, label %111

111:                                              ; preds = %107, %102, %100, %93, %78
  %112 = phi i64 [ 0, %78 ], [ %108, %107 ], [ -1, %102 ], [ -1, %100 ], [ %95, %93 ]
  %113 = phi i1 [ true, %78 ], [ true, %107 ], [ false, %102 ], [ false, %100 ], [ false, %93 ]
  store i64 %112, i64* %1, align 8
  br i1 %83, label %114, label %115

114:                                              ; preds = %111
  call void @_ZdlPv(i8* %85) #24
  br label %115

115:                                              ; preds = %31, %65, %41, %114, %111
  %116 = phi i1 [ false, %65 ], [ %113, %111 ], [ %113, %114 ], [ false, %41 ], [ false, %31 ]
  ret i1 %116
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6google8protobuf7strings8AlphaNumC2ENS1_3HexE(%"struct.google::protobuf::strings::AlphaNum"*, i64, i32) unnamed_addr #10 align 2 {
  %4 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %0, i64 0, i32 2, i64 32
  %5 = zext i32 %2 to i64
  %6 = shl nuw nsw i64 %5, 2
  %7 = add nsw i64 %6, -4
  %8 = shl i64 1, %7
  %9 = or i64 %8, %1
  br label %10

10:                                               ; preds = %10, %3
  %11 = phi i8* [ %4, %3 ], [ %17, %10 ]
  %12 = phi i64 [ %1, %3 ], [ %18, %10 ]
  %13 = phi i64 [ %9, %3 ], [ %19, %10 ]
  %14 = and i64 %12, 15
  %15 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN6google8protobuf7strings8AlphaNumC1ENS1_3HexEE9hexdigits, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 -1
  store i8 %16, i8* %17, align 1
  %18 = lshr i64 %12, 4
  %19 = lshr i64 %13, 4
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %10

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %0, i64 0, i32 0
  store i8* %17, i8** %22, align 8
  %23 = ptrtoint i8* %4 to i64
  %24 = ptrtoint i8* %17 to i64
  %25 = sub i64 %23, %24
  %26 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %0, i64 0, i32 1
  store i64 %25, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf6StrCatERKNS0_7strings8AlphaNumES4_(%"class.std::__1::basic_string"* noalias sret, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #22
  %6 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %7
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %10, i8 signext 0) #22
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = load i8*, i8** %4, align 8
  %16 = select i1 %14, i8* %15, i8* %5
  %17 = load i64, i64* %6, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %21, i64 %17, i1 false) #22
  %22 = load i64, i64* %6, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 %22
  br label %24

24:                                               ; preds = %19, %3
  %25 = phi i8* [ %23, %19 ], [ %16, %3 ]
  %26 = load i64, i64* %8, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %30, i64 %26, i1 false) #22
  br label %31

31:                                               ; preds = %24, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf6StrCatERKNS0_7strings8AlphaNumES4_S4_(%"class.std::__1::basic_string"* noalias sret, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #22
  %7 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %8
  %12 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %11, %13
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %14, i8 signext 0) #22
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = load i8*, i8** %5, align 8
  %20 = select i1 %18, i8* %19, i8* %6
  %21 = load i64, i64* %7, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %25, i64 %21, i1 false) #22
  %26 = load i64, i64* %7, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 %26
  br label %28

28:                                               ; preds = %23, %4
  %29 = phi i8* [ %27, %23 ], [ %20, %4 ]
  %30 = load i64, i64* %9, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %34, i64 %30, i1 false) #22
  %35 = load i64, i64* %9, align 8
  %36 = getelementptr inbounds i8, i8* %29, i64 %35
  br label %37

37:                                               ; preds = %28, %32
  %38 = phi i8* [ %36, %32 ], [ %29, %28 ]
  %39 = load i64, i64* %12, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %43, i64 %39, i1 false) #22
  br label %44

44:                                               ; preds = %37, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf6StrCatERKNS0_7strings8AlphaNumES4_S4_S4_(%"class.std::__1::basic_string"* noalias sret, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #22
  %8 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  %13 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, %14
  %16 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %15, %17
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %18, i8 signext 0) #22
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i8*, i8** %6, align 8
  %24 = select i1 %22, i8* %23, i8* %7
  %25 = load i64, i64* %8, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %29, i64 %25, i1 false) #22
  %30 = load i64, i64* %8, align 8
  %31 = getelementptr inbounds i8, i8* %24, i64 %30
  br label %32

32:                                               ; preds = %27, %5
  %33 = phi i8* [ %31, %27 ], [ %24, %5 ]
  %34 = load i64, i64* %10, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %38, i64 %34, i1 false) #22
  %39 = load i64, i64* %10, align 8
  %40 = getelementptr inbounds i8, i8* %33, i64 %39
  br label %41

41:                                               ; preds = %36, %32
  %42 = phi i8* [ %40, %36 ], [ %33, %32 ]
  %43 = load i64, i64* %13, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %47, i64 %43, i1 false) #22
  %48 = load i64, i64* %13, align 8
  %49 = getelementptr inbounds i8, i8* %42, i64 %48
  br label %50

50:                                               ; preds = %45, %41
  %51 = phi i8* [ %49, %45 ], [ %42, %41 ]
  %52 = load i64, i64* %16, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %56, i64 %52, i1 false) #22
  br label %57

57:                                               ; preds = %50, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf6StrCatERKNS0_7strings8AlphaNumES4_S4_S4_S4_(%"class.std::__1::basic_string"* noalias sret, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #22
  %9 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  %14 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %13, %15
  %17 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %16, %18
  %20 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %19, %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %22, i8 signext 0) #22
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = load i8*, i8** %7, align 8
  %28 = select i1 %26, i8* %27, i8* %8
  %29 = load i64, i64* %9, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %6
  %32 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %33, i64 %29, i1 false) #22
  %34 = load i64, i64* %9, align 8
  %35 = getelementptr inbounds i8, i8* %28, i64 %34
  br label %36

36:                                               ; preds = %31, %6
  %37 = phi i8* [ %35, %31 ], [ %28, %6 ]
  %38 = load i64, i64* %11, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %42, i64 %38, i1 false) #22
  %43 = load i64, i64* %11, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 %43
  br label %45

45:                                               ; preds = %40, %36
  %46 = phi i8* [ %44, %40 ], [ %37, %36 ]
  %47 = load i64, i64* %14, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %51, i64 %47, i1 false) #22
  %52 = load i64, i64* %14, align 8
  %53 = getelementptr inbounds i8, i8* %46, i64 %52
  br label %54

54:                                               ; preds = %49, %45
  %55 = phi i8* [ %53, %49 ], [ %46, %45 ]
  %56 = load i64, i64* %17, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %60, i64 %56, i1 false) #22
  %61 = load i64, i64* %17, align 8
  %62 = getelementptr inbounds i8, i8* %55, i64 %61
  br label %63

63:                                               ; preds = %54, %58
  %64 = phi i8* [ %62, %58 ], [ %55, %54 ]
  %65 = load i64, i64* %20, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %69, i64 %65, i1 false) #22
  br label %70

70:                                               ; preds = %63, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf6StrCatERKNS0_7strings8AlphaNumES4_S4_S4_S4_S4_(%"class.std::__1::basic_string"* noalias sret, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #22
  %10 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  %15 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, %16
  %18 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, %19
  %21 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, %22
  %24 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %6, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %23, %25
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %26, i8 signext 0) #22
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %8, align 8
  %32 = select i1 %30, i8* %31, i8* %9
  %33 = load i64, i64* %10, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %7
  %36 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %37, i64 %33, i1 false) #22
  %38 = load i64, i64* %10, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 %38
  br label %40

40:                                               ; preds = %35, %7
  %41 = phi i8* [ %39, %35 ], [ %32, %7 ]
  %42 = load i64, i64* %12, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %46, i64 %42, i1 false) #22
  %47 = load i64, i64* %12, align 8
  %48 = getelementptr inbounds i8, i8* %41, i64 %47
  br label %49

49:                                               ; preds = %44, %40
  %50 = phi i8* [ %48, %44 ], [ %41, %40 ]
  %51 = load i64, i64* %15, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %55, i64 %51, i1 false) #22
  %56 = load i64, i64* %15, align 8
  %57 = getelementptr inbounds i8, i8* %50, i64 %56
  br label %58

58:                                               ; preds = %53, %49
  %59 = phi i8* [ %57, %53 ], [ %50, %49 ]
  %60 = load i64, i64* %18, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %64, i64 %60, i1 false) #22
  %65 = load i64, i64* %18, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 %65
  br label %67

67:                                               ; preds = %58, %62
  %68 = phi i8* [ %66, %62 ], [ %59, %58 ]
  %69 = load i64, i64* %21, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 %73, i64 %69, i1 false) #22
  %74 = load i64, i64* %21, align 8
  %75 = getelementptr inbounds i8, i8* %68, i64 %74
  br label %76

76:                                               ; preds = %71, %67
  %77 = phi i8* [ %75, %71 ], [ %68, %67 ]
  %78 = load i64, i64* %24, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %6, i64 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %77, i8* align 1 %82, i64 %78, i1 false) #22
  br label %83

83:                                               ; preds = %76, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf6StrCatERKNS0_7strings8AlphaNumES4_S4_S4_S4_S4_S4_(%"class.std::__1::basic_string"* noalias sret, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #22
  %11 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, %12
  %16 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %15, %17
  %19 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %21, %23
  %25 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %6, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %24, %26
  %28 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %7, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %27, %29
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %30, i8 signext 0) #22
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i8*, i8** %9, align 8
  %36 = select i1 %34, i8* %35, i8* %10
  %37 = load i64, i64* %11, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %8
  %40 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %41, i64 %37, i1 false) #22
  %42 = load i64, i64* %11, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 %42
  br label %44

44:                                               ; preds = %39, %8
  %45 = phi i8* [ %43, %39 ], [ %36, %8 ]
  %46 = load i64, i64* %13, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %50, i64 %46, i1 false) #22
  %51 = load i64, i64* %13, align 8
  %52 = getelementptr inbounds i8, i8* %45, i64 %51
  br label %53

53:                                               ; preds = %48, %44
  %54 = phi i8* [ %52, %48 ], [ %45, %44 ]
  %55 = load i64, i64* %16, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %59, i64 %55, i1 false) #22
  %60 = load i64, i64* %16, align 8
  %61 = getelementptr inbounds i8, i8* %54, i64 %60
  br label %62

62:                                               ; preds = %57, %53
  %63 = phi i8* [ %61, %57 ], [ %54, %53 ]
  %64 = load i64, i64* %19, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %68, i64 %64, i1 false) #22
  %69 = load i64, i64* %19, align 8
  %70 = getelementptr inbounds i8, i8* %63, i64 %69
  br label %71

71:                                               ; preds = %62, %66
  %72 = phi i8* [ %70, %66 ], [ %63, %62 ]
  %73 = load i64, i64* %22, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 0
  %77 = load i8*, i8** %76, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %77, i64 %73, i1 false) #22
  %78 = load i64, i64* %22, align 8
  %79 = getelementptr inbounds i8, i8* %72, i64 %78
  br label %80

80:                                               ; preds = %75, %71
  %81 = phi i8* [ %79, %75 ], [ %72, %71 ]
  %82 = load i64, i64* %25, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %6, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %86, i64 %82, i1 false) #22
  %87 = load i64, i64* %25, align 8
  %88 = getelementptr inbounds i8, i8* %81, i64 %87
  br label %89

89:                                               ; preds = %80, %84
  %90 = phi i8* [ %88, %84 ], [ %81, %80 ]
  %91 = load i64, i64* %28, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %7, i64 0, i32 0
  %95 = load i8*, i8** %94, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 1 %95, i64 %91, i1 false) #22
  br label %96

96:                                               ; preds = %89, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf6StrCatERKNS0_7strings8AlphaNumES4_S4_S4_S4_S4_S4_S4_(%"class.std::__1::basic_string"* noalias sret, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #22
  %12 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %13
  %17 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %16, %18
  %20 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %19, %21
  %23 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, %24
  %26 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %6, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %25, %27
  %29 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %7, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %28, %30
  %32 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %8, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %31, %33
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %34, i8 signext 0) #22
  %35 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i8*, i8** %10, align 8
  %40 = select i1 %38, i8* %39, i8* %11
  %41 = load i64, i64* %12, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %9
  %44 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %45, i64 %41, i1 false) #22
  %46 = load i64, i64* %12, align 8
  %47 = getelementptr inbounds i8, i8* %40, i64 %46
  br label %48

48:                                               ; preds = %43, %9
  %49 = phi i8* [ %47, %43 ], [ %40, %9 ]
  %50 = load i64, i64* %14, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %54, i64 %50, i1 false) #22
  %55 = load i64, i64* %14, align 8
  %56 = getelementptr inbounds i8, i8* %49, i64 %55
  br label %57

57:                                               ; preds = %52, %48
  %58 = phi i8* [ %56, %52 ], [ %49, %48 ]
  %59 = load i64, i64* %17, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %63, i64 %59, i1 false) #22
  %64 = load i64, i64* %17, align 8
  %65 = getelementptr inbounds i8, i8* %58, i64 %64
  br label %66

66:                                               ; preds = %61, %57
  %67 = phi i8* [ %65, %61 ], [ %58, %57 ]
  %68 = load i64, i64* %20, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %72, i64 %68, i1 false) #22
  %73 = load i64, i64* %20, align 8
  %74 = getelementptr inbounds i8, i8* %67, i64 %73
  br label %75

75:                                               ; preds = %66, %70
  %76 = phi i8* [ %74, %70 ], [ %67, %66 ]
  %77 = load i64, i64* %23, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %81, i64 %77, i1 false) #22
  %82 = load i64, i64* %23, align 8
  %83 = getelementptr inbounds i8, i8* %76, i64 %82
  br label %84

84:                                               ; preds = %79, %75
  %85 = phi i8* [ %83, %79 ], [ %76, %75 ]
  %86 = load i64, i64* %26, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %6, i64 0, i32 0
  %90 = load i8*, i8** %89, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %90, i64 %86, i1 false) #22
  %91 = load i64, i64* %26, align 8
  %92 = getelementptr inbounds i8, i8* %85, i64 %91
  br label %93

93:                                               ; preds = %88, %84
  %94 = phi i8* [ %92, %88 ], [ %85, %84 ]
  %95 = load i64, i64* %29, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %7, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* align 1 %99, i64 %95, i1 false) #22
  %100 = load i64, i64* %29, align 8
  %101 = getelementptr inbounds i8, i8* %94, i64 %100
  br label %102

102:                                              ; preds = %97, %93
  %103 = phi i8* [ %101, %97 ], [ %94, %93 ]
  %104 = load i64, i64* %32, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %8, i64 0, i32 0
  %108 = load i8*, i8** %107, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %108, i64 %104, i1 false) #22
  br label %109

109:                                              ; preds = %102, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf6StrCatERKNS0_7strings8AlphaNumES4_S4_S4_S4_S4_S4_S4_S4_(%"class.std::__1::basic_string"* noalias sret, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #22
  %13 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %14
  %18 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, %19
  %21 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, %22
  %24 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %23, %25
  %27 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %6, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %26, %28
  %30 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %7, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %29, %31
  %33 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %8, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %32, %34
  %36 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %9, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %35, %37
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %38, i8 signext 0) #22
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i8*, i8** %11, align 8
  %44 = select i1 %42, i8* %43, i8* %12
  %45 = load i64, i64* %13, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %10
  %48 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %49, i64 %45, i1 false) #22
  %50 = load i64, i64* %13, align 8
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  br label %52

52:                                               ; preds = %47, %10
  %53 = phi i8* [ %51, %47 ], [ %44, %10 ]
  %54 = load i64, i64* %15, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %58, i64 %54, i1 false) #22
  %59 = load i64, i64* %15, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 %59
  br label %61

61:                                               ; preds = %56, %52
  %62 = phi i8* [ %60, %56 ], [ %53, %52 ]
  %63 = load i64, i64* %18, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %67, i64 %63, i1 false) #22
  %68 = load i64, i64* %18, align 8
  %69 = getelementptr inbounds i8, i8* %62, i64 %68
  br label %70

70:                                               ; preds = %65, %61
  %71 = phi i8* [ %69, %65 ], [ %62, %61 ]
  %72 = load i64, i64* %21, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %76, i64 %72, i1 false) #22
  %77 = load i64, i64* %21, align 8
  %78 = getelementptr inbounds i8, i8* %71, i64 %77
  br label %79

79:                                               ; preds = %70, %74
  %80 = phi i8* [ %78, %74 ], [ %71, %70 ]
  %81 = load i64, i64* %24, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %5, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %85, i64 %81, i1 false) #22
  %86 = load i64, i64* %24, align 8
  %87 = getelementptr inbounds i8, i8* %80, i64 %86
  br label %88

88:                                               ; preds = %83, %79
  %89 = phi i8* [ %87, %83 ], [ %80, %79 ]
  %90 = load i64, i64* %27, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %6, i64 0, i32 0
  %94 = load i8*, i8** %93, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 %94, i64 %90, i1 false) #22
  %95 = load i64, i64* %27, align 8
  %96 = getelementptr inbounds i8, i8* %89, i64 %95
  br label %97

97:                                               ; preds = %92, %88
  %98 = phi i8* [ %96, %92 ], [ %89, %88 ]
  %99 = load i64, i64* %30, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %7, i64 0, i32 0
  %103 = load i8*, i8** %102, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %98, i8* align 1 %103, i64 %99, i1 false) #22
  %104 = load i64, i64* %30, align 8
  %105 = getelementptr inbounds i8, i8* %98, i64 %104
  br label %106

106:                                              ; preds = %101, %97
  %107 = phi i8* [ %105, %101 ], [ %98, %97 ]
  %108 = load i64, i64* %33, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %8, i64 0, i32 0
  %112 = load i8*, i8** %111, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %112, i64 %108, i1 false) #22
  %113 = load i64, i64* %33, align 8
  %114 = getelementptr inbounds i8, i8* %107, i64 %113
  br label %115

115:                                              ; preds = %106, %110
  %116 = phi i8* [ %114, %110 ], [ %107, %106 ]
  %117 = load i64, i64* %36, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %9, i64 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %121, i64 %117, i1 false) #22
  br label %122

122:                                              ; preds = %115, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf9StrAppendEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS0_7strings8AlphaNumE(%"class.std::__1::basic_string"*, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %4, i64 %6) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf9StrAppendEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS0_7strings8AlphaNumESC_(%"class.std::__1::basic_string"*, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %3
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %14
  %18 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, %19
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %20, i8 signext 0) #22
  %21 = load i8, i8* %5, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  br label %28

26:                                               ; preds = %13
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i8* [ %25, %23 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %14
  %31 = load i64, i64* %15, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %35, i64 %31, i1 false) #22
  %36 = load i64, i64* %15, align 8
  %37 = getelementptr inbounds i8, i8* %30, i64 %36
  br label %38

38:                                               ; preds = %33, %28
  %39 = phi i8* [ %37, %33 ], [ %30, %28 ]
  %40 = load i64, i64* %18, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %44, i64 %40, i1 false) #22
  br label %45

45:                                               ; preds = %38, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf9StrAppendEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS0_7strings8AlphaNumESC_SC_(%"class.std::__1::basic_string"*, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %15
  %19 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %21, %23
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %24, i8 signext 0) #22
  %25 = load i8, i8* %6, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  br label %32

30:                                               ; preds = %14
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %32

32:                                               ; preds = %27, %30
  %33 = phi i8* [ %29, %27 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %15
  %35 = load i64, i64* %16, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %39, i64 %35, i1 false) #22
  %40 = load i64, i64* %16, align 8
  %41 = getelementptr inbounds i8, i8* %34, i64 %40
  br label %42

42:                                               ; preds = %37, %32
  %43 = phi i8* [ %41, %37 ], [ %34, %32 ]
  %44 = load i64, i64* %19, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %48, i64 %44, i1 false) #22
  %49 = load i64, i64* %19, align 8
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  br label %51

51:                                               ; preds = %42, %46
  %52 = phi i8* [ %50, %46 ], [ %43, %42 ]
  %53 = load i64, i64* %22, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %57, i64 %53, i1 false) #22
  br label %58

58:                                               ; preds = %51, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf9StrAppendEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS0_7strings8AlphaNumESC_SC_SC_(%"class.std::__1::basic_string"*, %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48), %"struct.google::protobuf::strings::AlphaNum"* nocapture readonly dereferenceable(48)) local_unnamed_addr #3 {
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %5
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %19, %21
  %23 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, %24
  %26 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %25, %27
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %28, i8 signext 0) #22
  %29 = load i8, i8* %7, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  br label %36

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i8* [ %33, %31 ], [ %35, %34 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %16
  %39 = load i64, i64* %17, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %1, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %43, i64 %39, i1 false) #22
  %44 = load i64, i64* %17, align 8
  %45 = getelementptr inbounds i8, i8* %38, i64 %44
  br label %46

46:                                               ; preds = %41, %36
  %47 = phi i8* [ %45, %41 ], [ %38, %36 ]
  %48 = load i64, i64* %20, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %2, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %52, i64 %48, i1 false) #22
  %53 = load i64, i64* %20, align 8
  %54 = getelementptr inbounds i8, i8* %47, i64 %53
  br label %55

55:                                               ; preds = %50, %46
  %56 = phi i8* [ %54, %50 ], [ %47, %46 ]
  %57 = load i64, i64* %23, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %3, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %61, i64 %57, i1 false) #22
  %62 = load i64, i64* %23, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 %62
  br label %64

64:                                               ; preds = %59, %55
  %65 = phi i8* [ %63, %59 ], [ %56, %55 ]
  %66 = load i64, i64* %26, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.google::protobuf::strings::AlphaNum", %"struct.google::protobuf::strings::AlphaNum"* %4, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %70, i64 %66, i1 false) #22
  br label %71

71:                                               ; preds = %64, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf22GlobalReplaceSubstringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PS7_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %4 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %5 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %6 = alloca %"class.std::__1::basic_string", align 16
  %7 = icmp eq %"class.std::__1::basic_string"* %2, null
  %8 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #22
  br i1 %7, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.google::protobuf::internal::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #22
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 1621) #22
  %11 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35, i64 0, i64 0)) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %5, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %11) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #22
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #22
  br label %13

12:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #22
  br label %13

13:                                               ; preds = %12, %9
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = zext i8 %16 to i64
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %123, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %123, label %36

36:                                               ; preds = %26
  %37 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 24, i1 false) #22
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %43 = select i1 %30, i8* %41, i8* %42
  %44 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEPKcmm(%"class.std::__1::basic_string"* %2, i8* %43, i64 0, i64 %34) #22
  %45 = and i64 %44, 4294967295
  %46 = icmp eq i64 %45, 4294967295
  br i1 %46, label %53, label %47

47:                                               ; preds = %36
  %48 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %57

53:                                               ; preds = %36
  %54 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  br label %116

57:                                               ; preds = %47, %86
  %58 = phi i64 [ %45, %47 ], [ %94, %86 ]
  %59 = phi i64 [ %44, %47 ], [ %93, %86 ]
  %60 = phi i32 [ 0, %47 ], [ %91, %86 ]
  %61 = phi i32 [ 0, %47 ], [ %63, %86 ]
  %62 = trunc i64 %59 to i32
  %63 = add nuw nsw i32 %61, 1
  %64 = sext i32 %60 to i64
  %65 = sub nsw i32 %62, %60
  %66 = sext i32 %65 to i64
  %67 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %64, i64 %66) #22
  %68 = load i8, i8* %49, align 1
  %69 = icmp slt i8 %68, 0
  %70 = load i8*, i8** %50, align 8
  %71 = load i64, i64* %51, align 8
  %72 = zext i8 %68 to i64
  %73 = select i1 %69, i8* %70, i8* %52
  %74 = select i1 %69, i64 %71, i64 %72
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  %76 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeINS_11__wrap_iterIPKcEEEERS5_T_SC_(%"class.std::__1::basic_string"* nonnull %6, i8* %73, i8* %75) #22
  %77 = load i8, i8* %28, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %57
  %80 = load i64, i64* %31, align 8
  %81 = add i64 %80, %58
  %82 = load i8*, i8** %40, align 8
  br label %86

83:                                               ; preds = %57
  %84 = zext i8 %77 to i64
  %85 = add nuw nsw i64 %58, %84
  br label %86

86:                                               ; preds = %79, %83
  %87 = phi i64 [ %81, %79 ], [ %85, %83 ]
  %88 = phi i8* [ %82, %79 ], [ %42, %83 ]
  %89 = phi i64 [ %80, %79 ], [ %84, %83 ]
  %90 = shl i64 %87, 32
  %91 = trunc i64 %87 to i32
  %92 = ashr exact i64 %90, 32
  %93 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEPKcmm(%"class.std::__1::basic_string"* %2, i8* %88, i64 %92, i64 %89) #22
  %94 = and i64 %93, 4294967295
  %95 = icmp eq i64 %94, 4294967295
  br i1 %95, label %96, label %57

96:                                               ; preds = %86
  %97 = load i8, i8* %15, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  br label %104

102:                                              ; preds = %96
  %103 = zext i8 %97 to i64
  br label %104

104:                                              ; preds = %99, %102
  %105 = phi i64 [ %101, %99 ], [ %103, %102 ]
  %106 = sub i64 %105, %92
  %107 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %92, i64 %106) #22
  %108 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* nonnull align 16 %37, i64 24, i1 false) #22
  %113 = bitcast %"class.std::__1::basic_string"* %6 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %113, align 16
  store i64 %111, i64* %39, align 16
  %114 = lshr i64 %111, 56
  %115 = trunc i64 %114 to i8
  br label %116

116:                                              ; preds = %53, %104
  %117 = phi i32 [ 0, %53 ], [ %63, %104 ]
  %118 = phi i8 [ %56, %53 ], [ %115, %104 ]
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = load i8*, i8** %38, align 16
  call void @_ZdlPv(i8* %121) #24
  br label %122

122:                                              ; preds = %116, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #22
  br label %123

123:                                              ; preds = %23, %26, %122
  %124 = phi i32 [ %117, %122 ], [ 0, %26 ], [ 0, %23 ]
  ret i32 %124
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEPKcmm(%"class.std::__1::basic_string"*, i8*, i64, i64) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6google8protobuf25CalculateBase64EscapedLenEib(i32, i1 zeroext) local_unnamed_addr #13 {
  %3 = sdiv i32 %0, 3
  %4 = shl nsw i32 %3, 2
  %5 = srem i32 %0, 3
  switch i32 %5, label %10 [
    i32 0, label %14
    i32 1, label %6
  ]

6:                                                ; preds = %2
  %7 = or i32 %4, 2
  %8 = add nsw i32 %7, 2
  %9 = select i1 %1, i32 %8, i32 %7
  br label %14

10:                                               ; preds = %2
  %11 = or i32 %4, 3
  %12 = zext i1 %1 to i32
  %13 = add nsw i32 %11, %12
  ret i32 %13

14:                                               ; preds = %6, %2
  %15 = phi i32 [ %4, %2 ], [ %9, %6 ]
  ret i32 %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6google8protobuf25CalculateBase64EscapedLenEi(i32) local_unnamed_addr #13 {
  %2 = sdiv i32 %0, 3
  %3 = shl nsw i32 %2, 2
  %4 = srem i32 %0, 3
  switch i32 %4, label %8 [
    i32 0, label %11
    i32 1, label %5
  ]

5:                                                ; preds = %1
  %6 = or i32 %3, 2
  %7 = add nsw i32 %6, 2
  br label %11

8:                                                ; preds = %1
  %9 = or i32 %3, 3
  %10 = add nsw i32 %9, 1
  br label %11

11:                                               ; preds = %1, %5, %8
  %12 = phi i32 [ %10, %8 ], [ %3, %1 ], [ %7, %5 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf22Base64UnescapeInternalEPKciPciPKa(i8* nocapture readonly, i32, i8*, i32, i8* nocapture readonly) local_unnamed_addr #3 {
  %6 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %7 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %8 = icmp ne i8* %2, null
  %9 = icmp sgt i32 %1, 3
  br i1 %8, label %11, label %10

10:                                               ; preds = %5
  br i1 %9, label %156, label %312

11:                                               ; preds = %5
  br i1 %9, label %12, label %312

12:                                               ; preds = %11, %144
  %13 = phi i64 [ %141, %144 ], [ 0, %11 ]
  %14 = phi i8* [ %140, %144 ], [ %0, %11 ]
  %15 = phi i32 [ %152, %144 ], [ 0, %11 ]
  %16 = phi i32 [ %136, %144 ], [ %1, %11 ]
  %17 = load i8, i8* %14, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %53, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %14, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %53, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %14, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %53, label %27

27:                                               ; preds = %23
  %28 = zext i8 %17 to i64
  %29 = getelementptr inbounds i8, i8* %4, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = shl nsw i32 %31, 18
  %33 = zext i8 %21 to i64
  %34 = getelementptr inbounds i8, i8* %4, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = shl nsw i32 %36, 12
  %38 = or i32 %37, %32
  %39 = zext i8 %25 to i64
  %40 = getelementptr inbounds i8, i8* %4, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = shl nsw i32 %42, 6
  %44 = or i32 %38, %43
  %45 = getelementptr inbounds i8, i8* %14, i64 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds i8, i8* %4, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = or i32 %44, %50
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %132

53:                                               ; preds = %23, %19, %12, %27
  %54 = phi i32 [ %51, %27 ], [ %15, %23 ], [ %15, %19 ], [ %15, %12 ]
  %55 = add nsw i32 %16, -1
  %56 = getelementptr inbounds i8, i8* %14, i64 1
  %57 = zext i8 %17 to i64
  %58 = getelementptr inbounds i8, i8* %4, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %72, %53
  %62 = phi i32 [ %55, %53 ], [ %74, %72 ]
  %63 = phi i8* [ %56, %53 ], [ %75, %72 ]
  %64 = phi i8 [ %59, %53 ], [ %78, %72 ]
  %65 = sext i8 %64 to i32
  br label %80

66:                                               ; preds = %53, %72
  %67 = phi i8* [ %75, %72 ], [ %56, %53 ]
  %68 = phi i32 [ %74, %72 ], [ %55, %53 ]
  %69 = phi i8 [ %73, %72 ], [ %17, %53 ]
  switch i8 %69, label %284 [
    i8 32, label %70
    i8 9, label %70
    i8 10, label %70
    i8 11, label %70
    i8 12, label %70
    i8 13, label %70
  ]

70:                                               ; preds = %66, %66, %66, %66, %66, %66
  %71 = icmp sgt i32 %68, 3
  br i1 %71, label %72, label %284

72:                                               ; preds = %70
  %73 = load i8, i8* %67, align 1
  %74 = add nsw i32 %68, -1
  %75 = getelementptr inbounds i8, i8* %67, i64 1
  %76 = zext i8 %73 to i64
  %77 = getelementptr inbounds i8, i8* %4, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %66, label %61

80:                                               ; preds = %61, %91
  %81 = phi i32 [ %83, %91 ], [ %62, %61 ]
  %82 = phi i8* [ %84, %91 ], [ %63, %61 ]
  %83 = add nsw i32 %81, -1
  %84 = getelementptr inbounds i8, i8* %82, i64 1
  %85 = load i8, i8* %82, align 1
  %86 = zext i8 %85 to i64
  %87 = getelementptr inbounds i8, i8* %4, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %80
  switch i8 %85, label %281 [
    i8 32, label %91
    i8 9, label %91
    i8 10, label %91
    i8 11, label %91
    i8 12, label %91
    i8 13, label %91
  ]

91:                                               ; preds = %90, %90, %90, %90, %90, %90
  %92 = icmp sgt i32 %83, 2
  br i1 %92, label %80, label %281

93:                                               ; preds = %80
  %94 = sext i8 %88 to i32
  %95 = shl nsw i32 %65, 6
  %96 = or i32 %95, %94
  br label %97

97:                                               ; preds = %108, %93
  %98 = phi i32 [ %83, %93 ], [ %100, %108 ]
  %99 = phi i8* [ %84, %93 ], [ %101, %108 ]
  %100 = add nsw i32 %98, -1
  %101 = getelementptr inbounds i8, i8* %99, i64 1
  %102 = load i8, i8* %99, align 1
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds i8, i8* %4, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %97
  switch i8 %102, label %278 [
    i8 32, label %108
    i8 9, label %108
    i8 10, label %108
    i8 11, label %108
    i8 12, label %108
    i8 13, label %108
  ]

108:                                              ; preds = %107, %107, %107, %107, %107, %107
  %109 = icmp sgt i32 %100, 1
  br i1 %109, label %97, label %278

110:                                              ; preds = %97
  %111 = sext i8 %105 to i32
  %112 = shl nsw i32 %96, 6
  %113 = or i32 %112, %111
  br label %114

114:                                              ; preds = %125, %110
  %115 = phi i32 [ %100, %110 ], [ %117, %125 ]
  %116 = phi i8* [ %101, %110 ], [ %118, %125 ]
  %117 = add nsw i32 %115, -1
  %118 = getelementptr inbounds i8, i8* %116, i64 1
  %119 = load i8, i8* %116, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds i8, i8* %4, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %114
  switch i8 %119, label %275 [
    i8 32, label %125
    i8 9, label %125
    i8 10, label %125
    i8 11, label %125
    i8 12, label %125
    i8 13, label %125
  ]

125:                                              ; preds = %124, %124, %124, %124, %124, %124
  %126 = icmp sgt i32 %117, 0
  br i1 %126, label %114, label %275

127:                                              ; preds = %114
  %128 = zext i8 %119 to i32
  %129 = sext i8 %122 to i32
  %130 = shl nsw i32 %113, 6
  %131 = or i32 %130, %129
  br label %135

132:                                              ; preds = %27
  %133 = add nsw i32 %16, -4
  %134 = getelementptr inbounds i8, i8* %14, i64 4
  br label %135

135:                                              ; preds = %132, %127
  %136 = phi i32 [ %117, %127 ], [ %133, %132 ]
  %137 = phi i32 [ %129, %127 ], [ -1, %132 ]
  %138 = phi i32 [ %128, %127 ], [ 0, %132 ]
  %139 = phi i32 [ %131, %127 ], [ %51, %132 ]
  %140 = phi i8* [ %118, %127 ], [ %134, %132 ]
  %141 = add nuw i64 %13, 3
  %142 = trunc i64 %141 to i32
  %143 = icmp sgt i32 %142, %3
  br i1 %143, label %442, label %144

144:                                              ; preds = %135
  %145 = trunc i32 %139 to i8
  %146 = add nuw nsw i64 %13, 2
  %147 = getelementptr inbounds i8, i8* %2, i64 %146
  store i8 %145, i8* %147, align 1
  %148 = lshr i32 %139, 8
  %149 = trunc i32 %148 to i8
  %150 = add nuw nsw i64 %13, 1
  %151 = getelementptr inbounds i8, i8* %2, i64 %150
  store i8 %149, i8* %151, align 1
  %152 = lshr i32 %139, 16
  %153 = trunc i32 %152 to i8
  %154 = getelementptr inbounds i8, i8* %2, i64 %13
  store i8 %153, i8* %154, align 1
  %155 = icmp sgt i32 %136, 3
  br i1 %155, label %12, label %295

156:                                              ; preds = %10, %267
  %157 = phi i8* [ %272, %267 ], [ %0, %10 ]
  %158 = phi i32 [ %271, %267 ], [ 0, %10 ]
  %159 = phi i32 [ %273, %267 ], [ 0, %10 ]
  %160 = phi i32 [ %268, %267 ], [ %1, %10 ]
  %161 = load i8, i8* %157, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %197, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds i8, i8* %157, i64 1
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %197, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds i8, i8* %157, i64 2
  %169 = load i8, i8* %168, align 1
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %197, label %171

171:                                              ; preds = %167
  %172 = zext i8 %161 to i64
  %173 = getelementptr inbounds i8, i8* %4, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = sext i8 %174 to i32
  %176 = shl nsw i32 %175, 18
  %177 = zext i8 %165 to i64
  %178 = getelementptr inbounds i8, i8* %4, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = sext i8 %179 to i32
  %181 = shl nsw i32 %180, 12
  %182 = or i32 %181, %176
  %183 = zext i8 %169 to i64
  %184 = getelementptr inbounds i8, i8* %4, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = sext i8 %185 to i32
  %187 = shl nsw i32 %186, 6
  %188 = or i32 %182, %187
  %189 = getelementptr inbounds i8, i8* %157, i64 3
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i64
  %192 = getelementptr inbounds i8, i8* %4, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = sext i8 %193 to i32
  %195 = or i32 %188, %194
  %196 = icmp slt i32 %195, 0
  br i1 %196, label %197, label %261

197:                                              ; preds = %167, %163, %156, %171
  %198 = phi i32 [ %195, %171 ], [ %158, %167 ], [ %158, %163 ], [ %158, %156 ]
  %199 = add nsw i32 %160, -1
  %200 = getelementptr inbounds i8, i8* %157, i64 1
  %201 = zext i8 %161 to i64
  %202 = getelementptr inbounds i8, i8* %4, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %219

205:                                              ; preds = %197, %211
  %206 = phi i8* [ %214, %211 ], [ %200, %197 ]
  %207 = phi i32 [ %213, %211 ], [ %199, %197 ]
  %208 = phi i8 [ %212, %211 ], [ %161, %197 ]
  switch i8 %208, label %293 [
    i8 32, label %209
    i8 9, label %209
    i8 10, label %209
    i8 11, label %209
    i8 12, label %209
    i8 13, label %209
  ]

209:                                              ; preds = %205, %205, %205, %205, %205, %205
  %210 = icmp sgt i32 %207, 3
  br i1 %210, label %211, label %293

211:                                              ; preds = %209
  %212 = load i8, i8* %206, align 1
  %213 = add nsw i32 %207, -1
  %214 = getelementptr inbounds i8, i8* %206, i64 1
  %215 = zext i8 %212 to i64
  %216 = getelementptr inbounds i8, i8* %4, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %205, label %219

219:                                              ; preds = %211, %197
  %220 = phi i32 [ %199, %197 ], [ %213, %211 ]
  %221 = phi i8* [ %200, %197 ], [ %214, %211 ]
  br label %222

222:                                              ; preds = %219, %233
  %223 = phi i32 [ %225, %233 ], [ %220, %219 ]
  %224 = phi i8* [ %226, %233 ], [ %221, %219 ]
  %225 = add nsw i32 %223, -1
  %226 = getelementptr inbounds i8, i8* %224, i64 1
  %227 = load i8, i8* %224, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds i8, i8* %4, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %222
  switch i8 %227, label %291 [
    i8 32, label %233
    i8 9, label %233
    i8 10, label %233
    i8 11, label %233
    i8 12, label %233
    i8 13, label %233
  ]

233:                                              ; preds = %232, %232, %232, %232, %232, %232
  %234 = icmp sgt i32 %225, 2
  br i1 %234, label %222, label %291

235:                                              ; preds = %222, %246
  %236 = phi i32 [ %238, %246 ], [ %225, %222 ]
  %237 = phi i8* [ %239, %246 ], [ %226, %222 ]
  %238 = add nsw i32 %236, -1
  %239 = getelementptr inbounds i8, i8* %237, i64 1
  %240 = load i8, i8* %237, align 1
  %241 = zext i8 %240 to i64
  %242 = getelementptr inbounds i8, i8* %4, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %235
  switch i8 %240, label %289 [
    i8 32, label %246
    i8 9, label %246
    i8 10, label %246
    i8 11, label %246
    i8 12, label %246
    i8 13, label %246
  ]

246:                                              ; preds = %245, %245, %245, %245, %245, %245
  %247 = icmp sgt i32 %238, 1
  br i1 %247, label %235, label %289

248:                                              ; preds = %235, %259
  %249 = phi i32 [ %251, %259 ], [ %238, %235 ]
  %250 = phi i8* [ %252, %259 ], [ %239, %235 ]
  %251 = add nsw i32 %249, -1
  %252 = getelementptr inbounds i8, i8* %250, i64 1
  %253 = load i8, i8* %250, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds i8, i8* %4, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %264

258:                                              ; preds = %248
  switch i8 %253, label %287 [
    i8 32, label %259
    i8 9, label %259
    i8 10, label %259
    i8 11, label %259
    i8 12, label %259
    i8 13, label %259
  ]

259:                                              ; preds = %258, %258, %258, %258, %258, %258
  %260 = icmp sgt i32 %251, 0
  br i1 %260, label %248, label %287

261:                                              ; preds = %171
  %262 = add nsw i32 %160, -4
  %263 = getelementptr inbounds i8, i8* %157, i64 4
  br label %267

264:                                              ; preds = %248
  %265 = zext i8 %253 to i32
  %266 = sext i8 %256 to i32
  br label %267

267:                                              ; preds = %264, %261
  %268 = phi i32 [ %262, %261 ], [ %251, %264 ]
  %269 = phi i32 [ -1, %261 ], [ %266, %264 ]
  %270 = phi i32 [ 0, %261 ], [ %265, %264 ]
  %271 = phi i32 [ %195, %261 ], [ %198, %264 ]
  %272 = phi i8* [ %263, %261 ], [ %252, %264 ]
  %273 = add nuw nsw i32 %159, 3
  %274 = icmp sgt i32 %268, 3
  br i1 %274, label %156, label %297

275:                                              ; preds = %125, %124
  %276 = trunc i64 %13 to i32
  %277 = zext i8 %119 to i32
  br label %305

278:                                              ; preds = %108, %107
  %279 = trunc i64 %13 to i32
  %280 = zext i8 %102 to i32
  br label %305

281:                                              ; preds = %91, %90
  %282 = trunc i64 %13 to i32
  %283 = zext i8 %85 to i32
  br label %305

284:                                              ; preds = %70, %66
  %285 = trunc i64 %13 to i32
  %286 = zext i8 %69 to i32
  br label %305

287:                                              ; preds = %259, %258
  %288 = zext i8 %253 to i32
  br label %305

289:                                              ; preds = %246, %245
  %290 = zext i8 %240 to i32
  br label %305

291:                                              ; preds = %233, %232
  %292 = zext i8 %227 to i32
  br label %305

293:                                              ; preds = %209, %205
  %294 = zext i8 %208 to i32
  br label %305

295:                                              ; preds = %144
  %296 = trunc i64 %141 to i32
  br label %297

297:                                              ; preds = %267, %295
  %298 = phi i32 [ %136, %295 ], [ %268, %267 ]
  %299 = phi i32 [ %137, %295 ], [ %269, %267 ]
  %300 = phi i32 [ %296, %295 ], [ %273, %267 ]
  %301 = phi i32 [ %138, %295 ], [ %270, %267 ]
  %302 = phi i32 [ %152, %295 ], [ %271, %267 ]
  %303 = phi i8* [ %140, %295 ], [ %272, %267 ]
  %304 = icmp slt i32 %299, 0
  br i1 %304, label %305, label %321

305:                                              ; preds = %293, %291, %289, %287, %284, %281, %278, %275, %297
  %306 = phi i8* [ %303, %297 ], [ %206, %293 ], [ %226, %291 ], [ %239, %289 ], [ %252, %287 ], [ %67, %284 ], [ %84, %281 ], [ %101, %278 ], [ %118, %275 ]
  %307 = phi i32 [ %302, %297 ], [ %198, %293 ], [ %198, %291 ], [ %198, %289 ], [ %198, %287 ], [ %54, %284 ], [ %65, %281 ], [ %96, %278 ], [ %113, %275 ]
  %308 = phi i32 [ %301, %297 ], [ %294, %293 ], [ %292, %291 ], [ %290, %289 ], [ %288, %287 ], [ %286, %284 ], [ %283, %281 ], [ %280, %278 ], [ %277, %275 ]
  %309 = phi i32 [ 0, %297 ], [ 0, %293 ], [ 1, %291 ], [ 2, %289 ], [ 3, %287 ], [ 0, %284 ], [ 1, %281 ], [ 2, %278 ], [ 3, %275 ]
  %310 = phi i32 [ %300, %297 ], [ %159, %293 ], [ %159, %291 ], [ %159, %289 ], [ %159, %287 ], [ %285, %284 ], [ %282, %281 ], [ %279, %278 ], [ %276, %275 ]
  %311 = phi i32 [ %298, %297 ], [ %207, %293 ], [ %225, %291 ], [ %238, %289 ], [ %251, %287 ], [ %68, %284 ], [ %83, %281 ], [ %100, %278 ], [ %117, %275 ]
  switch i32 %308, label %319 [
    i32 61, label %328
    i32 46, label %328
    i32 0, label %312
  ]

312:                                              ; preds = %11, %10, %321, %305
  %313 = phi i8* [ %322, %321 ], [ %306, %305 ], [ %0, %10 ], [ %0, %11 ]
  %314 = phi i32 [ %323, %321 ], [ %307, %305 ], [ 0, %10 ], [ 0, %11 ]
  %315 = phi i32 [ %325, %321 ], [ %309, %305 ], [ 0, %10 ], [ 0, %11 ]
  %316 = phi i32 [ %326, %321 ], [ %310, %305 ], [ 0, %10 ], [ 0, %11 ]
  %317 = phi i32 [ %327, %321 ], [ %311, %305 ], [ %1, %10 ], [ %1, %11 ]
  %318 = icmp sgt i32 %317, 0
  br i1 %318, label %378, label %385

319:                                              ; preds = %305
  %320 = trunc i32 %308 to i8
  switch i8 %320, label %442 [
    i8 32, label %321
    i8 9, label %321
    i8 10, label %321
    i8 11, label %321
    i8 12, label %321
    i8 13, label %321
  ]

321:                                              ; preds = %319, %319, %319, %319, %319, %319, %297
  %322 = phi i8* [ %306, %319 ], [ %306, %319 ], [ %306, %319 ], [ %306, %319 ], [ %306, %319 ], [ %306, %319 ], [ %303, %297 ]
  %323 = phi i32 [ %307, %319 ], [ %307, %319 ], [ %307, %319 ], [ %307, %319 ], [ %307, %319 ], [ %307, %319 ], [ %302, %297 ]
  %324 = phi i32 [ %308, %319 ], [ %308, %319 ], [ %308, %319 ], [ %308, %319 ], [ %308, %319 ], [ %308, %319 ], [ %301, %297 ]
  %325 = phi i32 [ %309, %319 ], [ %309, %319 ], [ %309, %319 ], [ %309, %319 ], [ %309, %319 ], [ %309, %319 ], [ 0, %297 ]
  %326 = phi i32 [ %310, %319 ], [ %310, %319 ], [ %310, %319 ], [ %310, %319 ], [ %310, %319 ], [ %310, %319 ], [ %300, %297 ]
  %327 = phi i32 [ %311, %319 ], [ %311, %319 ], [ %311, %319 ], [ %311, %319 ], [ %311, %319 ], [ %311, %319 ], [ %298, %297 ]
  switch i32 %324, label %312 [
    i32 61, label %328
    i32 46, label %328
  ]

328:                                              ; preds = %305, %305, %321, %321
  %329 = phi i8* [ %306, %305 ], [ %306, %305 ], [ %322, %321 ], [ %322, %321 ]
  %330 = phi i32 [ %307, %305 ], [ %307, %305 ], [ %323, %321 ], [ %323, %321 ]
  %331 = phi i32 [ %309, %305 ], [ %309, %305 ], [ %325, %321 ], [ %325, %321 ]
  %332 = phi i32 [ %310, %305 ], [ %310, %305 ], [ %326, %321 ], [ %326, %321 ]
  %333 = phi i32 [ %311, %305 ], [ %311, %305 ], [ %327, %321 ], [ %327, %321 ]
  %334 = add nsw i32 %333, 1
  %335 = getelementptr inbounds i8, i8* %329, i64 -1
  br label %385

336:                                              ; preds = %378, %347
  %337 = phi i8* [ %379, %378 ], [ %340, %347 ]
  %338 = phi i32 [ %383, %378 ], [ %339, %347 ]
  %339 = add nsw i32 %338, -1
  %340 = getelementptr inbounds i8, i8* %337, i64 1
  %341 = load i8, i8* %337, align 1
  %342 = zext i8 %341 to i64
  %343 = getelementptr inbounds i8, i8* %4, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = icmp slt i8 %344, 0
  br i1 %345, label %346, label %349

346:                                              ; preds = %336
  switch i8 %341, label %442 [
    i8 32, label %347
    i8 9, label %347
    i8 10, label %347
    i8 11, label %347
    i8 12, label %347
    i8 13, label %347
    i8 0, label %384
    i8 61, label %385
    i8 46, label %385
  ]

347:                                              ; preds = %346, %346, %346, %346, %346, %346
  %348 = icmp sgt i32 %339, 0
  br i1 %348, label %336, label %384

349:                                              ; preds = %336
  %350 = sext i8 %344 to i32
  %351 = shl i32 %380, 6
  %352 = or i32 %351, %350
  %353 = add nsw i32 %381, 1
  %354 = icmp eq i32 %353, 4
  br i1 %354, label %355, label %373

355:                                              ; preds = %349
  %356 = add nsw i32 %382, 3
  br i1 %8, label %357, label %373

357:                                              ; preds = %355
  %358 = icmp sgt i32 %356, %3
  br i1 %358, label %442, label %359

359:                                              ; preds = %357
  %360 = trunc i32 %352 to i8
  %361 = add nsw i32 %382, 2
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds i8, i8* %2, i64 %362
  store i8 %360, i8* %363, align 1
  %364 = lshr i32 %352, 8
  %365 = trunc i32 %364 to i8
  %366 = add nsw i32 %382, 1
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds i8, i8* %2, i64 %367
  store i8 %365, i8* %368, align 1
  %369 = lshr i32 %352, 16
  %370 = trunc i32 %369 to i8
  %371 = sext i32 %382 to i64
  %372 = getelementptr inbounds i8, i8* %2, i64 %371
  store i8 %370, i8* %372, align 1
  br label %373

373:                                              ; preds = %355, %359, %349
  %374 = phi i32 [ %382, %349 ], [ %356, %359 ], [ %356, %355 ]
  %375 = phi i32 [ %353, %349 ], [ 0, %359 ], [ 0, %355 ]
  %376 = phi i32 [ %352, %349 ], [ 0, %359 ], [ 0, %355 ]
  %377 = icmp sgt i32 %339, 0
  br i1 %377, label %378, label %385

378:                                              ; preds = %312, %373
  %379 = phi i8* [ %340, %373 ], [ %313, %312 ]
  %380 = phi i32 [ %376, %373 ], [ %314, %312 ]
  %381 = phi i32 [ %375, %373 ], [ %315, %312 ]
  %382 = phi i32 [ %374, %373 ], [ %316, %312 ]
  %383 = phi i32 [ %339, %373 ], [ %317, %312 ]
  br label %336

384:                                              ; preds = %346, %347
  br label %385

385:                                              ; preds = %373, %346, %346, %384, %312, %328
  %386 = phi i32 [ %334, %328 ], [ %317, %312 ], [ %339, %384 ], [ %338, %346 ], [ %338, %346 ], [ %339, %373 ]
  %387 = phi i32 [ %332, %328 ], [ %316, %312 ], [ %382, %384 ], [ %382, %346 ], [ %382, %346 ], [ %374, %373 ]
  %388 = phi i32 [ %331, %328 ], [ %315, %312 ], [ %381, %384 ], [ %381, %346 ], [ %381, %346 ], [ %375, %373 ]
  %389 = phi i32 [ %330, %328 ], [ %314, %312 ], [ %380, %384 ], [ %380, %346 ], [ %380, %346 ], [ %376, %373 ]
  %390 = phi i8* [ %335, %328 ], [ %313, %312 ], [ %340, %384 ], [ %337, %346 ], [ %337, %346 ], [ %340, %373 ]
  switch i32 %388, label %415 [
    i32 0, label %420
    i32 1, label %442
    i32 2, label %391
    i32 3, label %401
  ]

391:                                              ; preds = %385
  br i1 %8, label %392, label %399

392:                                              ; preds = %391
  %393 = icmp slt i32 %387, %3
  br i1 %393, label %394, label %442

394:                                              ; preds = %392
  %395 = lshr i32 %389, 4
  %396 = trunc i32 %395 to i8
  %397 = sext i32 %387 to i64
  %398 = getelementptr inbounds i8, i8* %2, i64 %397
  store i8 %396, i8* %398, align 1
  br label %399

399:                                              ; preds = %394, %391
  %400 = add nsw i32 %387, 1
  br label %420

401:                                              ; preds = %385
  %402 = add nsw i32 %387, 2
  br i1 %8, label %403, label %420

403:                                              ; preds = %401
  %404 = icmp sgt i32 %402, %3
  br i1 %404, label %442, label %405

405:                                              ; preds = %403
  %406 = lshr i32 %389, 2
  %407 = trunc i32 %406 to i8
  %408 = add nsw i32 %387, 1
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8, i8* %2, i64 %409
  store i8 %407, i8* %410, align 1
  %411 = lshr i32 %389, 10
  %412 = trunc i32 %411 to i8
  %413 = sext i32 %387 to i64
  %414 = getelementptr inbounds i8, i8* %2, i64 %413
  store i8 %412, i8* %414, align 1
  br label %420

415:                                              ; preds = %385
  %416 = bitcast %"class.google::protobuf::internal::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %416) #22
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %6, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 1936) #22
  %417 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.36, i64 0, i64 0)) #22
  %418 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEi(%"class.google::protobuf::internal::LogMessage"* %417, i32 %388) #22
  %419 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %419) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %7, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %418) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %419) #22
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %6) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %416) #22
  br label %420

420:                                              ; preds = %401, %405, %415, %399, %385
  %421 = phi i32 [ %387, %415 ], [ %400, %399 ], [ %387, %385 ], [ %402, %405 ], [ %402, %401 ]
  %422 = phi i32 [ 0, %415 ], [ 2, %399 ], [ %388, %385 ], [ 1, %405 ], [ 1, %401 ]
  %423 = icmp sgt i32 %386, 0
  br i1 %423, label %424, label %436

424:                                              ; preds = %420, %431
  %425 = phi i32 [ %432, %431 ], [ 0, %420 ]
  %426 = phi i8* [ %434, %431 ], [ %390, %420 ]
  %427 = phi i32 [ %433, %431 ], [ %386, %420 ]
  %428 = load i8, i8* %426, align 1
  switch i8 %428, label %442 [
    i8 0, label %436
    i8 61, label %429
    i8 46, label %429
    i8 32, label %431
    i8 9, label %431
    i8 10, label %431
    i8 11, label %431
    i8 12, label %431
    i8 13, label %431
  ]

429:                                              ; preds = %424, %424
  %430 = add nsw i32 %425, 1
  br label %431

431:                                              ; preds = %424, %424, %424, %424, %424, %424, %429
  %432 = phi i32 [ %430, %429 ], [ %425, %424 ], [ %425, %424 ], [ %425, %424 ], [ %425, %424 ], [ %425, %424 ], [ %425, %424 ]
  %433 = add nsw i32 %427, -1
  %434 = getelementptr inbounds i8, i8* %426, i64 1
  %435 = icmp sgt i32 %433, 0
  br i1 %435, label %424, label %436

436:                                              ; preds = %431, %424, %420
  %437 = phi i32 [ 0, %420 ], [ %425, %424 ], [ %432, %431 ]
  %438 = icmp eq i32 %437, 0
  %439 = icmp eq i32 %437, %422
  %440 = or i1 %438, %439
  %441 = select i1 %440, i32 %421, i32 -1
  br label %442

442:                                              ; preds = %135, %357, %346, %424, %319, %385, %392, %403, %436
  %443 = phi i32 [ -1, %385 ], [ -1, %392 ], [ -1, %403 ], [ %441, %436 ], [ -1, %319 ], [ -1, %424 ], [ -1, %346 ], [ -1, %357 ], [ -1, %135 ]
  ret i32 %443
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf21WebSafeBase64UnescapeEPKciPci(i8* nocapture readonly, i32, i8*, i32) local_unnamed_addr #3 {
  %5 = tail call i32 @_ZN6google8protobuf22Base64UnescapeInternalEPKciPciPKa(i8* %0, i32 %1, i8* %2, i32 %3, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN6google8protobufL16kUnWebSafeBase64E, i64 0, i64 0))
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf14Base64UnescapeENS0_11StringPieceEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %4 = trunc i64 %1 to i32
  %5 = sdiv i32 %4, 4
  %6 = mul nsw i32 %5, 3
  %7 = srem i32 %4, 4
  %8 = add nsw i32 %6, %7
  %9 = sext i32 %8 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %9, i8 signext 0) #22
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %3
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  br i1 %13, label %23, label %26

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  br label %28

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %28

28:                                               ; preds = %26, %23, %19
  %29 = phi i8* [ null, %19 ], [ %25, %23 ], [ %27, %26 ]
  %30 = tail call i32 @_ZN6google8protobuf22Base64UnescapeInternalEPKciPciPKa(i8* %0, i32 %4, i8* %29, i32 %8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN6google8protobufL9kUnBase64E, i64 0, i64 0)) #22
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %41

32:                                               ; preds = %28
  %33 = load i8, i8* %11, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %38, align 8
  br label %65

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %40, align 1
  store i8 0, i8* %11, align 1
  br label %65

41:                                               ; preds = %28
  %42 = sext i32 %30 to i64
  %43 = load i8, i8* %11, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  br label %50

48:                                               ; preds = %41
  %49 = zext i8 %43 to i64
  br label %50

50:                                               ; preds = %48, %45
  %51 = phi i64 [ %47, %45 ], [ %49, %48 ]
  %52 = icmp ult i64 %51, %42
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %54) #23
  unreachable

55:                                               ; preds = %50
  br i1 %44, label %56, label %61

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %42
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %60, align 8
  br label %65

61:                                               ; preds = %55
  %62 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %42
  store i8 0, i8* %63, align 1
  %64 = trunc i32 %30 to i8
  store i8 %64, i8* %11, align 1
  br label %65

65:                                               ; preds = %61, %56, %35, %39
  %66 = phi i1 [ false, %35 ], [ false, %39 ], [ true, %56 ], [ true, %61 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf21WebSafeBase64UnescapeENS0_11StringPieceEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %4 = trunc i64 %1 to i32
  %5 = sdiv i32 %4, 4
  %6 = mul nsw i32 %5, 3
  %7 = srem i32 %4, 4
  %8 = add nsw i32 %6, %7
  %9 = sext i32 %8 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %9, i8 signext 0) #22
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %3
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %17, %14
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  br i1 %13, label %23, label %26

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  br label %28

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %28

28:                                               ; preds = %26, %23, %19
  %29 = phi i8* [ null, %19 ], [ %25, %23 ], [ %27, %26 ]
  %30 = tail call i32 @_ZN6google8protobuf22Base64UnescapeInternalEPKciPciPKa(i8* %0, i32 %4, i8* %29, i32 %8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN6google8protobufL16kUnWebSafeBase64E, i64 0, i64 0)) #22
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %41

32:                                               ; preds = %28
  %33 = load i8, i8* %11, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %38, align 8
  br label %65

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %40, align 1
  store i8 0, i8* %11, align 1
  br label %65

41:                                               ; preds = %28
  %42 = sext i32 %30 to i64
  %43 = load i8, i8* %11, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  br label %50

48:                                               ; preds = %41
  %49 = zext i8 %43 to i64
  br label %50

50:                                               ; preds = %48, %45
  %51 = phi i64 [ %47, %45 ], [ %49, %48 ]
  %52 = icmp ult i64 %51, %42
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %54) #23
  unreachable

55:                                               ; preds = %50
  br i1 %44, label %56, label %61

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %42
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %60, align 8
  br label %65

61:                                               ; preds = %55
  %62 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %42
  store i8 0, i8* %63, align 1
  %64 = trunc i32 %30 to i8
  store i8 %64, i8* %11, align 1
  br label %65

65:                                               ; preds = %61, %56, %35, %39
  %66 = phi i1 [ false, %35 ], [ false, %39 ], [ true, %56 ], [ true, %61 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf20Base64EscapeInternalEPKhiPciPKcb(i8*, i32, i8*, i32, i8* nocapture readonly, i1 zeroext) local_unnamed_addr #3 {
  %7 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %8 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %9 = icmp slt i32 %1, 1
  br i1 %9, label %157, label %10

10:                                               ; preds = %6
  %11 = shl nsw i32 %1, 2
  %12 = mul nsw i32 %3, 3
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %157, label %14

14:                                               ; preds = %10
  %15 = sext i32 %3 to i64
  %16 = getelementptr inbounds i8, i8* %2, i64 %15
  %17 = sext i32 %1 to i64
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = getelementptr inbounds i8, i8* %18, i64 -3
  %20 = icmp ugt i8* %19, %0
  br i1 %20, label %21, label %52

21:                                               ; preds = %14, %21
  %22 = phi i8* [ %49, %21 ], [ %2, %14 ]
  %23 = phi i8* [ %50, %21 ], [ %0, %14 ]
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = tail call i32 @llvm.bswap.i32(i32 %25) #22
  %27 = lshr i32 %26, 8
  %28 = lshr i32 %26, 26
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %22, align 1
  %32 = lshr i32 %26, 20
  %33 = and i32 %32, 63
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %4, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds i8, i8* %22, i64 1
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %26, 14
  %39 = and i32 %38, 63
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %4, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds i8, i8* %22, i64 2
  store i8 %42, i8* %43, align 1
  %44 = and i32 %27, 63
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %4, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds i8, i8* %22, i64 3
  store i8 %47, i8* %48, align 1
  %49 = getelementptr inbounds i8, i8* %22, i64 4
  %50 = getelementptr inbounds i8, i8* %23, i64 3
  %51 = icmp ult i8* %50, %19
  br i1 %51, label %21, label %52

52:                                               ; preds = %21, %14
  %53 = phi i8* [ %0, %14 ], [ %50, %21 ]
  %54 = phi i8* [ %2, %14 ], [ %49, %21 ]
  %55 = ptrtoint i8* %16 to i64
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = trunc i64 %57 to i32
  %59 = ptrtoint i8* %18 to i64
  %60 = ptrtoint i8* %53 to i64
  %61 = sub i64 %59, %60
  %62 = trunc i64 %61 to i32
  switch i32 %62, label %146 [
    i32 0, label %151
    i32 1, label %63
    i32 2, label %84
    i32 3, label %112
  ]

63:                                               ; preds = %52
  %64 = icmp slt i32 %58, 2
  br i1 %64, label %157, label %65

65:                                               ; preds = %63
  %66 = load i8, i8* %53, align 1
  %67 = zext i8 %66 to i32
  %68 = lshr i32 %67, 2
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %4, i64 %69
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %54, align 1
  %72 = shl nuw nsw i32 %67, 4
  %73 = and i32 %72, 48
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %4, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %54, i64 1
  store i8 %76, i8* %77, align 1
  %78 = getelementptr inbounds i8, i8* %54, i64 2
  br i1 %5, label %79, label %151

79:                                               ; preds = %65
  %80 = icmp slt i32 %58, 4
  br i1 %80, label %157, label %81

81:                                               ; preds = %79
  store i8 61, i8* %78, align 1
  %82 = getelementptr inbounds i8, i8* %54, i64 3
  store i8 61, i8* %82, align 1
  %83 = getelementptr inbounds i8, i8* %54, i64 4
  br label %151

84:                                               ; preds = %52
  %85 = icmp slt i32 %58, 3
  br i1 %85, label %157, label %86

86:                                               ; preds = %84
  %87 = bitcast i8* %53 to i16*
  %88 = load i16, i16* %87, align 1
  %89 = tail call i16 @llvm.bswap.i16(i16 %88) #22
  %90 = zext i16 %89 to i32
  %91 = lshr i32 %90, 10
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %4, i64 %92
  %94 = load i8, i8* %93, align 1
  store i8 %94, i8* %54, align 1
  %95 = lshr i32 %90, 4
  %96 = and i32 %95, 63
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %4, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = getelementptr inbounds i8, i8* %54, i64 1
  store i8 %99, i8* %100, align 1
  %101 = shl nuw nsw i32 %90, 2
  %102 = and i32 %101, 60
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %4, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = getelementptr inbounds i8, i8* %54, i64 2
  store i8 %105, i8* %106, align 1
  %107 = getelementptr inbounds i8, i8* %54, i64 3
  br i1 %5, label %108, label %151

108:                                              ; preds = %86
  %109 = icmp slt i32 %58, 4
  br i1 %109, label %157, label %110

110:                                              ; preds = %108
  store i8 61, i8* %107, align 1
  %111 = getelementptr inbounds i8, i8* %54, i64 4
  br label %151

112:                                              ; preds = %52
  %113 = icmp slt i32 %58, 4
  br i1 %113, label %157, label %114

114:                                              ; preds = %112
  %115 = load i8, i8* %53, align 1
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 16
  %118 = getelementptr inbounds i8, i8* %53, i64 1
  %119 = bitcast i8* %118 to i16*
  %120 = load i16, i16* %119, align 1
  %121 = tail call i16 @llvm.bswap.i16(i16 %120) #22
  %122 = zext i16 %121 to i32
  %123 = lshr i32 %116, 2
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %4, i64 %124
  %126 = load i8, i8* %125, align 1
  store i8 %126, i8* %54, align 1
  %127 = and i32 %117, 196608
  %128 = or i32 %127, %122
  %129 = lshr i32 %128, 12
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %4, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds i8, i8* %54, i64 1
  store i8 %132, i8* %133, align 1
  %134 = lshr i32 %122, 6
  %135 = and i32 %134, 63
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %4, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = getelementptr inbounds i8, i8* %54, i64 2
  store i8 %138, i8* %139, align 1
  %140 = and i32 %122, 63
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %4, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = getelementptr inbounds i8, i8* %54, i64 3
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds i8, i8* %54, i64 4
  br label %151

146:                                              ; preds = %52
  %147 = bitcast %"class.google::protobuf::internal::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %147) #22
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %7, i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 2187) #22
  %148 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i64 0, i64 0)) #22
  %149 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEi(%"class.google::protobuf::internal::LogMessage"* %148, i32 %62) #22
  %150 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %150) #22
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %8, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %149) #22
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %150) #22
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %7) #22
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %147) #22
  br label %151

151:                                              ; preds = %86, %110, %65, %81, %146, %114, %52
  %152 = phi i8* [ %54, %146 ], [ %145, %114 ], [ %54, %52 ], [ %78, %65 ], [ %83, %81 ], [ %107, %86 ], [ %111, %110 ]
  %153 = ptrtoint i8* %152 to i64
  %154 = ptrtoint i8* %2 to i64
  %155 = sub i64 %153, %154
  %156 = trunc i64 %155 to i32
  br label %157

157:                                              ; preds = %108, %79, %151, %63, %84, %112, %10, %6
  %158 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %156, %151 ], [ 0, %63 ], [ 0, %84 ], [ 0, %112 ], [ 0, %79 ], [ 0, %108 ]
  ret i32 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf12Base64EscapeEPKhiPci(i8*, i32, i8*, i32) local_unnamed_addr #3 {
  %5 = tail call i32 @_ZN6google8protobuf20Base64EscapeInternalEPKhiPciPKcb(i8* %0, i32 %1, i8* %2, i32 %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN6google8protobufL12kBase64CharsE, i64 0, i64 0), i1 zeroext true)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf19WebSafeBase64EscapeEPKhiPcib(i8*, i32, i8*, i32, i1 zeroext) local_unnamed_addr #3 {
  %6 = tail call i32 @_ZN6google8protobuf20Base64EscapeInternalEPKhiPciPKcb(i8* %0, i32 %1, i8* %2, i32 %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN6google8protobufL19kWebSafeBase64CharsE, i64 0, i64 0), i1 zeroext %4)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf20Base64EscapeInternalEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbPKc(i8*, i32, %"class.std::__1::basic_string"*, i1 zeroext, i8* nocapture readonly) local_unnamed_addr #3 {
  %6 = sdiv i32 %1, 3
  %7 = shl nsw i32 %6, 2
  %8 = srem i32 %1, 3
  switch i32 %8, label %13 [
    i32 0, label %17
    i32 1, label %9
  ]

9:                                                ; preds = %5
  %10 = or i32 %7, 2
  %11 = add nsw i32 %10, 2
  %12 = select i1 %3, i32 %11, i32 %10
  br label %17

13:                                               ; preds = %5
  %14 = or i32 %7, 3
  %15 = zext i1 %3 to i32
  %16 = add nsw i32 %14, %15
  br label %17

17:                                               ; preds = %5, %9, %13
  %18 = phi i32 [ %16, %13 ], [ %7, %5 ], [ %12, %9 ]
  %19 = sext i32 %18 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %2, i64 %19, i8 signext 0) #22
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %29

27:                                               ; preds = %17
  %28 = zext i8 %22 to i64
  br label %29

29:                                               ; preds = %27, %24
  %30 = phi i64 [ %26, %24 ], [ %28, %27 ]
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  br i1 %23, label %33, label %36

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %39

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %43

38:                                               ; preds = %29
  br i1 %23, label %39, label %43

39:                                               ; preds = %33, %38
  %40 = phi i8* [ %35, %33 ], [ null, %38 ]
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  br label %46

43:                                               ; preds = %36, %38
  %44 = phi i8* [ %37, %36 ], [ null, %38 ]
  %45 = zext i8 %22 to i64
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi i8* [ %40, %39 ], [ %44, %43 ]
  %48 = phi i64 [ %42, %39 ], [ %45, %43 ]
  %49 = trunc i64 %48 to i32
  %50 = tail call i32 @_ZN6google8protobuf20Base64EscapeInternalEPKhiPciPKcb(i8* %0, i32 %1, i8* %47, i32 %49, i8* %4, i1 zeroext %3)
  %51 = sext i32 %50 to i64
  %52 = load i8, i8* %21, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  br label %59

57:                                               ; preds = %46
  %58 = zext i8 %52 to i64
  br label %59

59:                                               ; preds = %57, %54
  %60 = phi i64 [ %56, %54 ], [ %58, %57 ]
  %61 = icmp ult i64 %60, %51
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %63) #23
  unreachable

64:                                               ; preds = %59
  br i1 %53, label %65, label %70

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 %51
  store i8 0, i8* %68, align 1
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %51, i64* %69, align 8
  br label %74

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 %51
  store i8 0, i8* %72, align 1
  %73 = trunc i32 %50 to i8
  store i8 %73, i8* %21, align 1
  br label %74

74:                                               ; preds = %65, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf12Base64EscapeEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEb(i8*, i32, %"class.std::__1::basic_string"*, i1 zeroext) local_unnamed_addr #3 {
  tail call void @_ZN6google8protobuf20Base64EscapeInternalEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbPKc(i8* %0, i32 %1, %"class.std::__1::basic_string"* %2, i1 zeroext %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN6google8protobufL12kBase64CharsE, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf19WebSafeBase64EscapeEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEb(i8*, i32, %"class.std::__1::basic_string"*, i1 zeroext) local_unnamed_addr #3 {
  tail call void @_ZN6google8protobuf20Base64EscapeInternalEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbPKc(i8* %0, i32 %1, %"class.std::__1::basic_string"* %2, i1 zeroext %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN6google8protobufL19kWebSafeBase64CharsE, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf12Base64EscapeENS0_11StringPieceEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %4 = trunc i64 %1 to i32
  tail call void @_ZN6google8protobuf20Base64EscapeInternalEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbPKc(i8* %0, i32 %4, %"class.std::__1::basic_string"* %2, i1 zeroext true, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN6google8protobufL12kBase64CharsE, i64 0, i64 0)) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf19WebSafeBase64EscapeENS0_11StringPieceEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %4 = trunc i64 %1 to i32
  tail call void @_ZN6google8protobuf20Base64EscapeInternalEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbPKc(i8* %0, i32 %4, %"class.std::__1::basic_string"* %2, i1 zeroext false, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN6google8protobufL19kWebSafeBase64CharsE, i64 0, i64 0)) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf30WebSafeBase64EscapeWithPaddingENS0_11StringPieceEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3 {
  %4 = trunc i64 %1 to i32
  tail call void @_ZN6google8protobuf20Base64EscapeInternalEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbPKc(i8* %0, i32 %4, %"class.std::__1::basic_string"* %2, i1 zeroext true, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZN6google8protobufL19kWebSafeBase64CharsE, i64 0, i64 0)) #22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf16EncodeAsUTF8CharEjPc(i32, i8* nocapture) local_unnamed_addr #3 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22
  store i32 0, i32* %3, align 4
  %5 = icmp ult i32 %0, 128
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i32 %0, i32* %3, align 4
  br label %38

7:                                                ; preds = %2
  %8 = icmp ult i32 %0, 2048
  br i1 %8, label %9, label %15

9:                                                ; preds = %7
  %10 = shl i32 %0, 2
  %11 = and i32 %10, 7936
  %12 = and i32 %0, 63
  %13 = or i32 %12, %11
  %14 = or i32 %13, 49280
  store i32 %14, i32* %3, align 4
  br label %38

15:                                               ; preds = %7
  %16 = icmp ult i32 %0, 65536
  br i1 %16, label %17, label %26

17:                                               ; preds = %15
  %18 = shl i32 %0, 4
  %19 = and i32 %18, 983040
  %20 = shl i32 %0, 2
  %21 = and i32 %20, 16128
  %22 = and i32 %0, 63
  %23 = or i32 %22, %21
  %24 = or i32 %23, %19
  %25 = or i32 %24, 14712960
  store i32 %25, i32* %3, align 4
  br label %38

26:                                               ; preds = %15
  %27 = shl i32 %0, 6
  %28 = and i32 %27, 117440512
  %29 = shl i32 %0, 4
  %30 = and i32 %29, 4128768
  %31 = shl i32 %0, 2
  %32 = and i32 %31, 16128
  %33 = and i32 %0, 63
  %34 = or i32 %33, %30
  %35 = or i32 %34, %28
  %36 = or i32 %35, %32
  %37 = or i32 %36, -260013952
  store i32 %37, i32* %3, align 4
  br label %38

38:                                               ; preds = %9, %26, %17, %6
  %39 = phi i32 [ %0, %6 ], [ %14, %9 ], [ %25, %17 ], [ %37, %26 ]
  %40 = phi i32 [ 1, %6 ], [ 2, %9 ], [ 3, %17 ], [ 4, %26 ]
  %41 = tail call i32 @_ZN6google8protobuf6ghtonlEj(i32 %39) #22
  store i32 %41, i32* %3, align 4
  %42 = getelementptr inbounds i32, i32* %3, i64 1
  %43 = bitcast i32* %42 to i8*
  %44 = zext i32 %40 to i64
  %45 = sub nsw i64 0, %44
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %46, i64 %44, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22
  ret i32 %40
}

declare i32 @_ZN6google8protobuf6ghtonlEj(i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6google8protobuf23UTF8FirstLetterNumBytesEPKci(i8* nocapture readonly, i32) local_unnamed_addr #14 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN6google8protobufL11kUTF8LenTblE, i64 0, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i32 [ %9, %4 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf22CleanStringLineEndingsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_b(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, i1 zeroext) local_unnamed_addr #3 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %3
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i8* %23, i8* %26
  %29 = select i1 %21, i64 %25, i64 %27
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %28, i64 %29) #22
  tail call void @_ZN6google8protobuf22CleanStringLineEndingsEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.std::__1::basic_string"* %1, i1 zeroext %2)
  br label %63

31:                                               ; preds = %14
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #22
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  %38 = load i8, i8* %36, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %41, i64 24, i1 false) #22
  br label %47

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %44, i64 %46) #22
  br label %47

47:                                               ; preds = %40, %42
  call void @_ZN6google8protobuf22CleanStringLineEndingsEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.std::__1::basic_string"* nonnull %4, i1 zeroext %2)
  %48 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %33, align 8
  %53 = load i64, i64* %34, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i8* %52, i8* %32
  %56 = select i1 %51, i64 %53, i64 %54
  %57 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %55, i64 %56) #22
  %58 = load i8, i8* %49, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %47
  %61 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %61) #24
  br label %62

62:                                               ; preds = %47, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #22
  br label %63

63:                                               ; preds = %62, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf22CleanStringLineEndingsEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.std::__1::basic_string"*, i1 zeroext) local_unnamed_addr #3 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  br label %15

12:                                               ; preds = %2
  %13 = zext i8 %5 to i64
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i64 [ %9, %7 ], [ %13, %12 ]
  %17 = phi i8* [ %11, %7 ], [ %14, %12 ]
  %18 = icmp sgt i64 %16, 0
  br i1 %18, label %19, label %101

19:                                               ; preds = %15, %76
  %20 = phi i8 [ %78, %76 ], [ 0, %15 ]
  %21 = phi i64 [ %79, %76 ], [ 0, %15 ]
  %22 = phi i64 [ %77, %76 ], [ 0, %15 ]
  %23 = icmp ne i8 %20, 0
  br i1 %23, label %47, label %26

24:                                               ; preds = %76
  %25 = icmp eq i8 %78, 0
  br i1 %25, label %81, label %89

26:                                               ; preds = %19, %45
  %27 = phi i64 [ %46, %45 ], [ %22, %19 ]
  %28 = phi i64 [ %29, %45 ], [ %21, %19 ]
  %29 = add nsw i64 %28, 8
  %30 = icmp slt i64 %29, %16
  br i1 %30, label %31, label %47

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %17, i64 %28
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 1
  %35 = add i64 %34, -1012762419733073422
  %36 = and i64 %34, -9187201950435737472
  %37 = xor i64 %36, -9187201950435737472
  %38 = and i64 %37, %35
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %31
  %41 = icmp eq i64 %27, %28
  br i1 %41, label %45, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds i8, i8* %17, i64 %27
  %44 = bitcast i8* %43 to i64*
  store i64 %34, i64* %44, align 1
  br label %45

45:                                               ; preds = %42, %40
  %46 = add nsw i64 %27, 8
  br i1 %23, label %47, label %26

47:                                               ; preds = %45, %26, %31, %19
  %48 = phi i64 [ %21, %19 ], [ %21, %45 ], [ %28, %26 ], [ %28, %31 ]
  %49 = phi i64 [ %22, %19 ], [ %22, %45 ], [ %27, %26 ], [ %27, %31 ]
  %50 = getelementptr inbounds i8, i8* %17, i64 %48
  %51 = load i8, i8* %50, align 1
  switch i8 %51, label %63 [
    i8 13, label %52
    i8 10, label %56
  ]

52:                                               ; preds = %47
  br i1 %23, label %53, label %76

53:                                               ; preds = %52
  %54 = add nsw i64 %49, 1
  %55 = getelementptr inbounds i8, i8* %17, i64 %49
  store i8 10, i8* %55, align 1
  br label %76

56:                                               ; preds = %47
  %57 = icmp eq i64 %48, %49
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds i8, i8* %17, i64 %49
  store i8 10, i8* %59, align 1
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi i64 [ %48, %56 ], [ %49, %58 ]
  %62 = add nsw i64 %61, 1
  br label %76

63:                                               ; preds = %47
  br i1 %23, label %64, label %67

64:                                               ; preds = %63
  %65 = add nsw i64 %49, 1
  %66 = getelementptr inbounds i8, i8* %17, i64 %49
  store i8 10, i8* %66, align 1
  br label %67

67:                                               ; preds = %64, %63
  %68 = phi i64 [ %65, %64 ], [ %49, %63 ]
  %69 = icmp eq i64 %48, %68
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = load i8, i8* %50, align 1
  %72 = add nsw i64 %68, 1
  %73 = getelementptr inbounds i8, i8* %17, i64 %68
  store i8 %71, i8* %73, align 1
  br label %76

74:                                               ; preds = %67
  %75 = add nsw i64 %48, 1
  br label %76

76:                                               ; preds = %52, %53, %60, %74, %70
  %77 = phi i64 [ %62, %60 ], [ %72, %70 ], [ %75, %74 ], [ %54, %53 ], [ %49, %52 ]
  %78 = phi i8 [ 0, %60 ], [ 0, %70 ], [ 0, %74 ], [ 1, %53 ], [ 1, %52 ]
  %79 = add nsw i64 %48, 1
  %80 = icmp slt i64 %79, %16
  br i1 %80, label %19, label %24

81:                                               ; preds = %24
  %82 = icmp sgt i64 %77, 0
  %83 = and i1 %82, %1
  br i1 %83, label %84, label %101

84:                                               ; preds = %81
  %85 = add nsw i64 %77, -1
  %86 = getelementptr inbounds i8, i8* %17, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 10
  br i1 %88, label %101, label %89

89:                                               ; preds = %84, %24
  %90 = add nsw i64 %77, 1
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %90, i8 signext 0) #22
  %91 = load i8, i8* %4, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  br label %98

96:                                               ; preds = %89
  %97 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %98

98:                                               ; preds = %93, %96
  %99 = phi i8* [ %95, %93 ], [ %97, %96 ]
  %100 = getelementptr inbounds i8, i8* %99, i64 %77
  store i8 10, i8* %100, align 1
  br label %105

101:                                              ; preds = %15, %84, %81
  %102 = phi i64 [ %77, %84 ], [ %77, %81 ], [ 0, %15 ]
  %103 = icmp slt i64 %102, %16
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %102, i8 signext 0) #22
  br label %105

105:                                              ; preds = %101, %104, %98
  ret void
}

; Function Attrs: nofree nounwind
declare double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"*, i8*, i8*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  br label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  br label %19

19:                                               ; preds = %10, %12
  %20 = phi i64 [ %14, %12 ], [ %11, %10 ]
  %21 = phi i64 [ %18, %12 ], [ 22, %10 ]
  %22 = ptrtoint i8* %2 to i64
  %23 = sub i64 %22, %4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %307, label %25

25:                                               ; preds = %19
  br i1 %9, label %26, label %31

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = zext i8 %8 to i64
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi i8* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i64 [ %30, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = icmp ule i8* %35, %1
  %39 = icmp ugt i8* %37, %1
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %176

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #22
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = icmp ugt i64 %23, -17
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  br i1 %46, label %48, label %50

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %49) #23
  unreachable

50:                                               ; preds = %41
  %51 = icmp ult i64 %23, 23
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = trunc i64 %23 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1
  br label %61

56:                                               ; preds = %50
  %57 = add nuw i64 %23, 16
  %58 = and i64 %57, -16
  %59 = tail call i8* @_Znwm(i64 %58) #24
  store i8* %59, i8** %43, align 8
  %60 = or i64 %58, -9223372036854775808
  store i64 %60, i64* %45, align 8
  store i64 %23, i64* %44, align 8
  br label %61

61:                                               ; preds = %56, %52
  %62 = phi i8* [ %42, %52 ], [ %59, %56 ]
  %63 = icmp eq i8* %1, %2
  br i1 %63, label %159, label %64

64:                                               ; preds = %61
  %65 = ptrtoint i8* %2 to i64
  %66 = sub i64 %65, %4
  %67 = icmp ult i64 %66, 32
  br i1 %67, label %149, label %68

68:                                               ; preds = %64
  %69 = and i64 %66, -32
  %70 = getelementptr i8, i8* %1, i64 %69
  %71 = getelementptr i8, i8* %62, i64 %69
  %72 = add i64 %69, -32
  %73 = lshr exact i64 %72, 5
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp ult i64 %72, 96
  br i1 %76, label %128, label %77

77:                                               ; preds = %68
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %125, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %126, %79 ]
  %82 = getelementptr i8, i8* %1, i64 %80
  %83 = getelementptr i8, i8* %62, i64 %80
  %84 = bitcast i8* %82 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1
  %86 = getelementptr i8, i8* %82, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1
  %89 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1
  %90 = getelementptr i8, i8* %83, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1
  %92 = or i64 %80, 32
  %93 = getelementptr i8, i8* %1, i64 %92
  %94 = getelementptr i8, i8* %62, i64 %92
  %95 = bitcast i8* %93 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1
  %97 = getelementptr i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1
  %100 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1
  %101 = getelementptr i8, i8* %94, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1
  %103 = or i64 %80, 64
  %104 = getelementptr i8, i8* %1, i64 %103
  %105 = getelementptr i8, i8* %62, i64 %103
  %106 = bitcast i8* %104 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1
  %108 = getelementptr i8, i8* %104, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1
  %112 = getelementptr i8, i8* %105, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1
  %114 = or i64 %80, 96
  %115 = getelementptr i8, i8* %1, i64 %114
  %116 = getelementptr i8, i8* %62, i64 %114
  %117 = bitcast i8* %115 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1
  %119 = getelementptr i8, i8* %115, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1
  %122 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1
  %123 = getelementptr i8, i8* %116, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1
  %125 = add i64 %80, 128
  %126 = add i64 %81, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %79, !llvm.loop !39

128:                                              ; preds = %79, %68
  %129 = phi i64 [ 0, %68 ], [ %125, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %144, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %145, %131 ], [ %75, %128 ]
  %134 = getelementptr i8, i8* %1, i64 %132
  %135 = getelementptr i8, i8* %62, i64 %132
  %136 = bitcast i8* %134 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1
  %138 = getelementptr i8, i8* %134, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1
  %141 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1
  %142 = getelementptr i8, i8* %135, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1
  %144 = add i64 %132, 32
  %145 = add i64 %133, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %131, !llvm.loop !40

147:                                              ; preds = %131, %128
  %148 = icmp eq i64 %66, %69
  br i1 %148, label %159, label %149

149:                                              ; preds = %147, %64
  %150 = phi i8* [ %1, %64 ], [ %70, %147 ]
  %151 = phi i8* [ %62, %64 ], [ %71, %147 ]
  br label %152

152:                                              ; preds = %149, %152
  %153 = phi i8* [ %156, %152 ], [ %150, %149 ]
  %154 = phi i8* [ %157, %152 ], [ %151, %149 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %2
  br i1 %158, label %159, label %152, !llvm.loop !41

159:                                              ; preds = %152, %147, %61
  %160 = phi i8* [ %62, %61 ], [ %71, %147 ], [ %157, %152 ]
  store i8 0, i8* %160, align 1
  %161 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %43, align 8
  %166 = load i64, i64* %44, align 8
  %167 = zext i8 %163 to i64
  %168 = select i1 %164, i8* %165, i8* %42
  %169 = select i1 %164, i64 %166, i64 %167
  %170 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %168, i64 %169) #22
  %171 = load i8, i8* %162, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %159
  %174 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %174) #24
  br label %175

175:                                              ; preds = %159, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #22
  br label %307

176:                                              ; preds = %34
  %177 = sub i64 %21, %20
  %178 = icmp ult i64 %177, %23
  br i1 %178, label %179, label %183

179:                                              ; preds = %176
  %180 = add i64 %20, %23
  %181 = sub i64 %180, %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %21, i64 %181, i64 %20, i64 %20, i64 0, i64 0) #22
  %182 = load i8, i8* %7, align 1
  br label %183

183:                                              ; preds = %179, %176
  %184 = phi i8 [ %182, %179 ], [ %8, %176 ]
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  br label %191

189:                                              ; preds = %183
  %190 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i8* [ %188, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i8, i8* %192, i64 %20
  %194 = icmp eq i8* %1, %2
  br i1 %194, label %298, label %195

195:                                              ; preds = %191
  %196 = ptrtoint i8* %2 to i64
  %197 = sub i64 %196, %4
  %198 = icmp ult i64 %197, 32
  br i1 %198, label %288, label %199

199:                                              ; preds = %195
  %200 = sub i64 %20, %4
  %201 = getelementptr i8, i8* %2, i64 %200
  %202 = ptrtoint i8* %201 to i64
  %203 = getelementptr i8, i8* %192, i64 %202
  %204 = icmp ult i8* %193, %2
  %205 = icmp ugt i8* %203, %1
  %206 = and i1 %204, %205
  br i1 %206, label %288, label %207

207:                                              ; preds = %199
  %208 = and i64 %197, -32
  %209 = getelementptr i8, i8* %193, i64 %208
  %210 = getelementptr i8, i8* %1, i64 %208
  %211 = add i64 %208, -32
  %212 = lshr exact i64 %211, 5
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 3
  %215 = icmp ult i64 %211, 96
  br i1 %215, label %267, label %216

216:                                              ; preds = %207
  %217 = sub nsw i64 %213, %214
  br label %218

218:                                              ; preds = %218, %216
  %219 = phi i64 [ 0, %216 ], [ %264, %218 ]
  %220 = phi i64 [ %217, %216 ], [ %265, %218 ]
  %221 = getelementptr i8, i8* %193, i64 %219
  %222 = getelementptr i8, i8* %1, i64 %219
  %223 = bitcast i8* %222 to <16 x i8>*
  %224 = load <16 x i8>, <16 x i8>* %223, align 1, !alias.scope !42
  %225 = getelementptr i8, i8* %222, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !42
  %228 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %224, <16 x i8>* %228, align 1, !alias.scope !45, !noalias !42
  %229 = getelementptr i8, i8* %221, i64 16
  %230 = bitcast i8* %229 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %230, align 1, !alias.scope !45, !noalias !42
  %231 = or i64 %219, 32
  %232 = getelementptr i8, i8* %193, i64 %231
  %233 = getelementptr i8, i8* %1, i64 %231
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !42
  %236 = getelementptr i8, i8* %233, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !42
  %239 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !45, !noalias !42
  %240 = getelementptr i8, i8* %232, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !45, !noalias !42
  %242 = or i64 %219, 64
  %243 = getelementptr i8, i8* %193, i64 %242
  %244 = getelementptr i8, i8* %1, i64 %242
  %245 = bitcast i8* %244 to <16 x i8>*
  %246 = load <16 x i8>, <16 x i8>* %245, align 1, !alias.scope !42
  %247 = getelementptr i8, i8* %244, i64 16
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !42
  %250 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %246, <16 x i8>* %250, align 1, !alias.scope !45, !noalias !42
  %251 = getelementptr i8, i8* %243, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %252, align 1, !alias.scope !45, !noalias !42
  %253 = or i64 %219, 96
  %254 = getelementptr i8, i8* %193, i64 %253
  %255 = getelementptr i8, i8* %1, i64 %253
  %256 = bitcast i8* %255 to <16 x i8>*
  %257 = load <16 x i8>, <16 x i8>* %256, align 1, !alias.scope !42
  %258 = getelementptr i8, i8* %255, i64 16
  %259 = bitcast i8* %258 to <16 x i8>*
  %260 = load <16 x i8>, <16 x i8>* %259, align 1, !alias.scope !42
  %261 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %257, <16 x i8>* %261, align 1, !alias.scope !45, !noalias !42
  %262 = getelementptr i8, i8* %254, i64 16
  %263 = bitcast i8* %262 to <16 x i8>*
  store <16 x i8> %260, <16 x i8>* %263, align 1, !alias.scope !45, !noalias !42
  %264 = add i64 %219, 128
  %265 = add i64 %220, -4
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %218, !llvm.loop !47

267:                                              ; preds = %218, %207
  %268 = phi i64 [ 0, %207 ], [ %264, %218 ]
  %269 = icmp eq i64 %214, 0
  br i1 %269, label %286, label %270

270:                                              ; preds = %267, %270
  %271 = phi i64 [ %283, %270 ], [ %268, %267 ]
  %272 = phi i64 [ %284, %270 ], [ %214, %267 ]
  %273 = getelementptr i8, i8* %193, i64 %271
  %274 = getelementptr i8, i8* %1, i64 %271
  %275 = bitcast i8* %274 to <16 x i8>*
  %276 = load <16 x i8>, <16 x i8>* %275, align 1, !alias.scope !42
  %277 = getelementptr i8, i8* %274, i64 16
  %278 = bitcast i8* %277 to <16 x i8>*
  %279 = load <16 x i8>, <16 x i8>* %278, align 1, !alias.scope !42
  %280 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %276, <16 x i8>* %280, align 1, !alias.scope !45, !noalias !42
  %281 = getelementptr i8, i8* %273, i64 16
  %282 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %279, <16 x i8>* %282, align 1, !alias.scope !45, !noalias !42
  %283 = add i64 %271, 32
  %284 = add i64 %272, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %270, !llvm.loop !48

286:                                              ; preds = %270, %267
  %287 = icmp eq i64 %197, %208
  br i1 %287, label %298, label %288

288:                                              ; preds = %286, %199, %195
  %289 = phi i8* [ %193, %199 ], [ %193, %195 ], [ %209, %286 ]
  %290 = phi i8* [ %1, %199 ], [ %1, %195 ], [ %210, %286 ]
  br label %291

291:                                              ; preds = %288, %291
  %292 = phi i8* [ %295, %291 ], [ %289, %288 ]
  %293 = phi i8* [ %296, %291 ], [ %290, %288 ]
  %294 = load i8, i8* %293, align 1
  store i8 %294, i8* %292, align 1
  %295 = getelementptr inbounds i8, i8* %292, i64 1
  %296 = getelementptr inbounds i8, i8* %293, i64 1
  %297 = icmp eq i8* %296, %2
  br i1 %297, label %298, label %291, !llvm.loop !49

298:                                              ; preds = %291, %286, %191
  %299 = phi i8* [ %193, %191 ], [ %209, %286 ], [ %295, %291 ]
  store i8 0, i8* %299, align 1
  %300 = add i64 %20, %23
  %301 = load i8, i8* %7, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %300, i64* %304, align 8
  br label %307

305:                                              ; preds = %298
  %306 = trunc i64 %300 to i8
  store i8 %306, i8* %7, align 1
  br label %307

307:                                              ; preds = %305, %303, %175, %19
  ret %"class.std::__1::basic_string"* %0
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #15

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #16

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #15

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #2

declare i64 @_ZNK6google8protobuf11StringPiece17find_first_not_ofES1_m(%"class.google::protobuf::StringPiece"*, i8*, i64, i64) local_unnamed_addr #4

declare i64 @_ZNK6google8protobuf11StringPiece13find_first_ofES1_m(%"class.google::protobuf::StringPiece"*, i8*, i64, i64) local_unnamed_addr #4

declare { i8*, i64 } @_ZNK6google8protobuf11StringPiece6substrEmm(%"class.google::protobuf::StringPiece"*, i64, i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #23
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #24
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #22
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #22
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #24
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #24
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #15

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #16

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #18

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeINS_11__wrap_iterIPKcEEEERS5_T_SC_(%"class.std::__1::basic_string"*, i8*, i8*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  br label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  br label %19

19:                                               ; preds = %10, %12
  %20 = phi i64 [ %14, %12 ], [ %11, %10 ]
  %21 = phi i64 [ %18, %12 ], [ 22, %10 ]
  %22 = ptrtoint i8* %2 to i64
  %23 = sub i64 %22, %4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %307, label %25

25:                                               ; preds = %19
  br i1 %9, label %26, label %31

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = zext i8 %8 to i64
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi i8* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i64 [ %30, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = icmp ule i8* %35, %1
  %39 = icmp ugt i8* %37, %1
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %176

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #22
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = icmp ugt i64 %23, -17
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  br i1 %46, label %48, label %50

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %49) #23
  unreachable

50:                                               ; preds = %41
  %51 = icmp ult i64 %23, 23
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = trunc i64 %23 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1
  br label %61

56:                                               ; preds = %50
  %57 = add nuw i64 %23, 16
  %58 = and i64 %57, -16
  %59 = tail call i8* @_Znwm(i64 %58) #24
  store i8* %59, i8** %43, align 8
  %60 = or i64 %58, -9223372036854775808
  store i64 %60, i64* %45, align 8
  store i64 %23, i64* %44, align 8
  br label %61

61:                                               ; preds = %56, %52
  %62 = phi i8* [ %42, %52 ], [ %59, %56 ]
  %63 = icmp eq i8* %1, %2
  br i1 %63, label %159, label %64

64:                                               ; preds = %61
  %65 = ptrtoint i8* %2 to i64
  %66 = sub i64 %65, %4
  %67 = icmp ult i64 %66, 32
  br i1 %67, label %149, label %68

68:                                               ; preds = %64
  %69 = and i64 %66, -32
  %70 = getelementptr i8, i8* %62, i64 %69
  %71 = getelementptr i8, i8* %1, i64 %69
  %72 = add i64 %69, -32
  %73 = lshr exact i64 %72, 5
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp ult i64 %72, 96
  br i1 %76, label %128, label %77

77:                                               ; preds = %68
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %125, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %126, %79 ]
  %82 = getelementptr i8, i8* %62, i64 %80
  %83 = getelementptr i8, i8* %1, i64 %80
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1
  %86 = getelementptr i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1
  %89 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1
  %90 = getelementptr i8, i8* %82, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1
  %92 = or i64 %80, 32
  %93 = getelementptr i8, i8* %62, i64 %92
  %94 = getelementptr i8, i8* %1, i64 %92
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1
  %103 = or i64 %80, 64
  %104 = getelementptr i8, i8* %62, i64 %103
  %105 = getelementptr i8, i8* %1, i64 %103
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1
  %114 = or i64 %80, 96
  %115 = getelementptr i8, i8* %62, i64 %114
  %116 = getelementptr i8, i8* %1, i64 %114
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1
  %119 = getelementptr i8, i8* %116, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1
  %122 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1
  %123 = getelementptr i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1
  %125 = add i64 %80, 128
  %126 = add i64 %81, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %79, !llvm.loop !50

128:                                              ; preds = %79, %68
  %129 = phi i64 [ 0, %68 ], [ %125, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %144, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %145, %131 ], [ %75, %128 ]
  %134 = getelementptr i8, i8* %62, i64 %132
  %135 = getelementptr i8, i8* %1, i64 %132
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1
  %138 = getelementptr i8, i8* %135, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1
  %141 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1
  %142 = getelementptr i8, i8* %134, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1
  %144 = add i64 %132, 32
  %145 = add i64 %133, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %131, !llvm.loop !51

147:                                              ; preds = %131, %128
  %148 = icmp eq i64 %66, %69
  br i1 %148, label %159, label %149

149:                                              ; preds = %147, %64
  %150 = phi i8* [ %62, %64 ], [ %70, %147 ]
  %151 = phi i8* [ %1, %64 ], [ %71, %147 ]
  br label %152

152:                                              ; preds = %149, %152
  %153 = phi i8* [ %157, %152 ], [ %150, %149 ]
  %154 = phi i8* [ %156, %152 ], [ %151, %149 ]
  %155 = load i8, i8* %154, align 1
  store i8 %155, i8* %153, align 1
  %156 = getelementptr inbounds i8, i8* %154, i64 1
  %157 = getelementptr inbounds i8, i8* %153, i64 1
  %158 = icmp eq i8* %156, %2
  br i1 %158, label %159, label %152, !llvm.loop !52

159:                                              ; preds = %152, %147, %61
  %160 = phi i8* [ %62, %61 ], [ %70, %147 ], [ %157, %152 ]
  store i8 0, i8* %160, align 1
  %161 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %43, align 8
  %166 = load i64, i64* %44, align 8
  %167 = zext i8 %163 to i64
  %168 = select i1 %164, i8* %165, i8* %42
  %169 = select i1 %164, i64 %166, i64 %167
  %170 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %168, i64 %169) #22
  %171 = load i8, i8* %162, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %159
  %174 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %174) #24
  br label %175

175:                                              ; preds = %159, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #22
  br label %307

176:                                              ; preds = %34
  %177 = sub i64 %21, %20
  %178 = icmp ult i64 %177, %23
  br i1 %178, label %179, label %183

179:                                              ; preds = %176
  %180 = add i64 %20, %23
  %181 = sub i64 %180, %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %21, i64 %181, i64 %20, i64 %20, i64 0, i64 0) #22
  %182 = load i8, i8* %7, align 1
  br label %183

183:                                              ; preds = %179, %176
  %184 = phi i8 [ %182, %179 ], [ %8, %176 ]
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  br label %191

189:                                              ; preds = %183
  %190 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i8* [ %188, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i8, i8* %192, i64 %20
  %194 = icmp eq i8* %1, %2
  br i1 %194, label %298, label %195

195:                                              ; preds = %191
  %196 = ptrtoint i8* %2 to i64
  %197 = sub i64 %196, %4
  %198 = icmp ult i64 %197, 32
  br i1 %198, label %288, label %199

199:                                              ; preds = %195
  %200 = sub i64 %20, %4
  %201 = getelementptr i8, i8* %2, i64 %200
  %202 = ptrtoint i8* %201 to i64
  %203 = getelementptr i8, i8* %192, i64 %202
  %204 = icmp ult i8* %193, %2
  %205 = icmp ugt i8* %203, %1
  %206 = and i1 %204, %205
  br i1 %206, label %288, label %207

207:                                              ; preds = %199
  %208 = and i64 %197, -32
  %209 = getelementptr i8, i8* %193, i64 %208
  %210 = getelementptr i8, i8* %1, i64 %208
  %211 = add i64 %208, -32
  %212 = lshr exact i64 %211, 5
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 3
  %215 = icmp ult i64 %211, 96
  br i1 %215, label %267, label %216

216:                                              ; preds = %207
  %217 = sub nsw i64 %213, %214
  br label %218

218:                                              ; preds = %218, %216
  %219 = phi i64 [ 0, %216 ], [ %264, %218 ]
  %220 = phi i64 [ %217, %216 ], [ %265, %218 ]
  %221 = getelementptr i8, i8* %193, i64 %219
  %222 = getelementptr i8, i8* %1, i64 %219
  %223 = bitcast i8* %222 to <16 x i8>*
  %224 = load <16 x i8>, <16 x i8>* %223, align 1, !alias.scope !53
  %225 = getelementptr i8, i8* %222, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !53
  %228 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %224, <16 x i8>* %228, align 1, !alias.scope !56, !noalias !53
  %229 = getelementptr i8, i8* %221, i64 16
  %230 = bitcast i8* %229 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %230, align 1, !alias.scope !56, !noalias !53
  %231 = or i64 %219, 32
  %232 = getelementptr i8, i8* %193, i64 %231
  %233 = getelementptr i8, i8* %1, i64 %231
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !53
  %236 = getelementptr i8, i8* %233, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !53
  %239 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !56, !noalias !53
  %240 = getelementptr i8, i8* %232, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !56, !noalias !53
  %242 = or i64 %219, 64
  %243 = getelementptr i8, i8* %193, i64 %242
  %244 = getelementptr i8, i8* %1, i64 %242
  %245 = bitcast i8* %244 to <16 x i8>*
  %246 = load <16 x i8>, <16 x i8>* %245, align 1, !alias.scope !53
  %247 = getelementptr i8, i8* %244, i64 16
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !53
  %250 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %246, <16 x i8>* %250, align 1, !alias.scope !56, !noalias !53
  %251 = getelementptr i8, i8* %243, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %252, align 1, !alias.scope !56, !noalias !53
  %253 = or i64 %219, 96
  %254 = getelementptr i8, i8* %193, i64 %253
  %255 = getelementptr i8, i8* %1, i64 %253
  %256 = bitcast i8* %255 to <16 x i8>*
  %257 = load <16 x i8>, <16 x i8>* %256, align 1, !alias.scope !53
  %258 = getelementptr i8, i8* %255, i64 16
  %259 = bitcast i8* %258 to <16 x i8>*
  %260 = load <16 x i8>, <16 x i8>* %259, align 1, !alias.scope !53
  %261 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %257, <16 x i8>* %261, align 1, !alias.scope !56, !noalias !53
  %262 = getelementptr i8, i8* %254, i64 16
  %263 = bitcast i8* %262 to <16 x i8>*
  store <16 x i8> %260, <16 x i8>* %263, align 1, !alias.scope !56, !noalias !53
  %264 = add i64 %219, 128
  %265 = add i64 %220, -4
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %218, !llvm.loop !58

267:                                              ; preds = %218, %207
  %268 = phi i64 [ 0, %207 ], [ %264, %218 ]
  %269 = icmp eq i64 %214, 0
  br i1 %269, label %286, label %270

270:                                              ; preds = %267, %270
  %271 = phi i64 [ %283, %270 ], [ %268, %267 ]
  %272 = phi i64 [ %284, %270 ], [ %214, %267 ]
  %273 = getelementptr i8, i8* %193, i64 %271
  %274 = getelementptr i8, i8* %1, i64 %271
  %275 = bitcast i8* %274 to <16 x i8>*
  %276 = load <16 x i8>, <16 x i8>* %275, align 1, !alias.scope !53
  %277 = getelementptr i8, i8* %274, i64 16
  %278 = bitcast i8* %277 to <16 x i8>*
  %279 = load <16 x i8>, <16 x i8>* %278, align 1, !alias.scope !53
  %280 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %276, <16 x i8>* %280, align 1, !alias.scope !56, !noalias !53
  %281 = getelementptr i8, i8* %273, i64 16
  %282 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %279, <16 x i8>* %282, align 1, !alias.scope !56, !noalias !53
  %283 = add i64 %271, 32
  %284 = add i64 %272, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %270, !llvm.loop !59

286:                                              ; preds = %270, %267
  %287 = icmp eq i64 %197, %208
  br i1 %287, label %298, label %288

288:                                              ; preds = %286, %199, %195
  %289 = phi i8* [ %193, %199 ], [ %193, %195 ], [ %209, %286 ]
  %290 = phi i8* [ %1, %199 ], [ %1, %195 ], [ %210, %286 ]
  br label %291

291:                                              ; preds = %288, %291
  %292 = phi i8* [ %295, %291 ], [ %289, %288 ]
  %293 = phi i8* [ %296, %291 ], [ %290, %288 ]
  %294 = load i8, i8* %293, align 1
  store i8 %294, i8* %292, align 1
  %295 = getelementptr inbounds i8, i8* %292, i64 1
  %296 = getelementptr inbounds i8, i8* %293, i64 1
  %297 = icmp eq i8* %296, %2
  br i1 %297, label %298, label %291, !llvm.loop !60

298:                                              ; preds = %291, %286, %191
  %299 = phi i8* [ %193, %191 ], [ %209, %286 ], [ %295, %291 ]
  store i8 0, i8* %299, align 1
  %300 = add i64 %20, %23
  %301 = load i8, i8* %7, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %300, i64* %304, align 8
  br label %307

305:                                              ; preds = %298
  %306 = trunc i64 %300 to i8
  store i8 %306, i8* %7, align 1
  br label %307

307:                                              ; preds = %305, %303, %175, %19
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #19

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #19

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #20

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind readnone }
attributes #19 = { nounwind readnone speculatable }
attributes #20 = { nofree nounwind readonly }
attributes #21 = { nounwind readonly }
attributes #22 = { nounwind }
attributes #23 = { noreturn nounwind }
attributes #24 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK6google8protobuf11StringPiece8ToStringEv: argument 0"}
!4 = distinct !{!4, !"_ZNK6google8protobuf11StringPiece8ToStringEv"}
!5 = distinct !{!5, !6, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv: argument 0"}
!6 = distinct !{!6, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNK6google8protobuf11StringPiece8ToStringEv: argument 0"}
!9 = distinct !{!9, !"_ZNK6google8protobuf11StringPiece8ToStringEv"}
!10 = distinct !{!10, !11, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv: argument 0"}
!11 = distinct !{!11, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZNK6google8protobuf11StringPiece8ToStringEv: argument 0"}
!14 = distinct !{!14, !"_ZNK6google8protobuf11StringPiece8ToStringEv"}
!15 = distinct !{!15, !16, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv: argument 0"}
!16 = distinct !{!16, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZNK6google8protobuf11StringPiece8ToStringEv: argument 0"}
!19 = distinct !{!19, !"_ZNK6google8protobuf11StringPiece8ToStringEv"}
!20 = distinct !{!20, !21, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv: argument 0"}
!21 = distinct !{!21, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv"}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = distinct !{!24, !23}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.isvectorized", i32 1}
!27 = distinct !{!27, !23}
!28 = distinct !{!28, !29, !26}
!29 = !{!"llvm.loop.unroll.runtime.disable"}
!30 = distinct !{!30, !26}
!31 = distinct !{!31, !23}
!32 = distinct !{!32, !29, !26}
!33 = distinct !{!33, !26}
!34 = distinct !{!34, !23}
!35 = distinct !{!35, !29, !26}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN6google8protobuf8internal12_GLOBAL__N_113LocalizeRadixEPKcS4_: argument 0"}
!38 = distinct !{!38, !"_ZN6google8protobuf8internal12_GLOBAL__N_113LocalizeRadixEPKcS4_"}
!39 = distinct !{!39, !26}
!40 = distinct !{!40, !23}
!41 = distinct !{!41, !29, !26}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !26}
!48 = distinct !{!48, !23}
!49 = distinct !{!49, !26}
!50 = distinct !{!50, !26}
!51 = distinct !{!51, !23}
!52 = distinct !{!52, !29, !26}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !26}
!59 = distinct !{!59, !23}
!60 = distinct !{!60, !26}
