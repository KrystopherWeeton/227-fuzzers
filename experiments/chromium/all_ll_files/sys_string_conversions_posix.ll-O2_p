; ModuleID = '../../base/strings/sys_string_conversions_posix.cc'
source_filename = "../../base/strings/sys_string_conversions_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" = type { i32*, i64, i64 }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short" = type { [5 x i32], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [3 x i8] }
%struct.__mbstate_t = type { i32, %union.anon.11 }
%union.anon.11 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13SysWideToUTF8ERKNSt3__112basic_stringIwNS0_11char_traitsIwEENS0_9allocatorIwEEEE(%"class.std::__1::basic_string.1"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i32*
  %10 = select i1 %6, i32* %8, i32* %9
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  tail call void @_ZN4base10WideToUTF8ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string.1"* sret %0, i32* %10, i64 %14) #5
  ret void
}

declare void @_ZN4base10WideToUTF8ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string.1"* sret, i32*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13SysUTF8ToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #5
  %5 = tail call zeroext i1 @_ZN4base10UTF8ToWideEPKcmPNSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEE(i8* %1, i64 %2, %"class.std::__1::basic_string"* %0) #5
  ret void
}

declare zeroext i1 @_ZN4base10UTF8ToWideEPKcmPNSt3__112basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17SysWideToNativeMBERKNSt3__112basic_stringIwNS0_11char_traitsIwEENS0_9allocatorIwEEEE(%"class.std::__1::basic_string.1"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %struct.__mbstate_t*
  %5 = alloca [16 x i8], align 16
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  store i64 0, i64* %3, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i32*
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i32* %13, i32* %16
  %19 = select i1 %11, i64 %15, i64 %17
  %20 = getelementptr inbounds i32, i32* %18, i64 %19
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %41, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  br label %24

24:                                               ; preds = %22, %32
  %25 = phi i64 [ 0, %22 ], [ %34, %32 ]
  %26 = phi i32* [ %18, %22 ], [ %35, %32 ]
  %27 = load i32, i32* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #5
  %28 = icmp eq i32 %27, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 16, i1 false)
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = call i64 @wcrtomb(i8* nonnull %23, i32 signext %27, %struct.__mbstate_t* nonnull %4) #5
  switch i64 %30, label %31 [
    i64 -1, label %37
    i64 0, label %32
  ]

31:                                               ; preds = %29
  br label %32

32:                                               ; preds = %24, %31, %29
  %33 = phi i64 [ %30, %31 ], [ 1, %29 ], [ 1, %24 ]
  %34 = add i64 %33, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #5
  %35 = getelementptr inbounds i32, i32* %26, i64 1
  %36 = icmp eq i32* %35, %20
  br i1 %36, label %39, label %24

37:                                               ; preds = %29
  %38 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #5
  br label %91

39:                                               ; preds = %32
  %40 = icmp eq i64 %34, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %2, %39
  %42 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #5
  br label %91

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #5
  %45 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string.1"* nonnull %6, i64 %34, i8 signext 0) #5
  store i64 0, i64* %3, align 8
  %46 = load i8, i8* %9, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %14, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %82, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  br label %55

55:                                               ; preds = %52, %72
  %56 = phi i1 [ %47, %52 ], [ %77, %72 ]
  %57 = phi i64 [ 0, %52 ], [ %74, %72 ]
  %58 = phi i64 [ 0, %52 ], [ %75, %72 ]
  %59 = load i32*, i32** %12, align 8
  %60 = select i1 %56, i32* %59, i32* %16
  %61 = getelementptr inbounds i32, i32* %60, i64 %58
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %72, label %64

64:                                               ; preds = %55
  %65 = load i8, i8* %54, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %45, align 8
  %68 = select i1 %66, i8* %67, i8* %44
  %69 = getelementptr inbounds i8, i8* %68, i64 %57
  %70 = call i64 @wcrtomb(i8* %69, i32 signext %62, %struct.__mbstate_t* nonnull %4) #5
  switch i64 %70, label %71 [
    i64 -1, label %84
    i64 0, label %72
  ]

71:                                               ; preds = %64
  br label %72

72:                                               ; preds = %55, %71, %64
  %73 = phi i64 [ %70, %71 ], [ 1, %64 ], [ 1, %55 ]
  %74 = add i64 %73, %57
  %75 = add nuw i64 %58, 1
  %76 = load i8, i8* %9, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i64, i64* %14, align 8
  %79 = zext i8 %76 to i64
  %80 = select i1 %77, i64 %78, i64 %79
  %81 = icmp ult i64 %75, %80
  br i1 %81, label %55, label %82

82:                                               ; preds = %72, %43
  %83 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 8 %44, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #5
  br label %90

84:                                               ; preds = %64
  %85 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #5
  %86 = load i8, i8* %54, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %89) #6
  br label %90

90:                                               ; preds = %82, %84, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #5
  br label %91

91:                                               ; preds = %37, %90, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare i64 @wcrtomb(i8*, i32 signext, %struct.__mbstate_t*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17SysNativeMBToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.__mbstate_t*
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  store i64 0, i64* %4, align 8
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %3, %17
  %10 = phi i64 [ %20, %17 ], [ 0, %3 ]
  %11 = phi i64 [ %19, %17 ], [ 0, %3 ]
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = sub i64 %2, %11
  %14 = call i64 @mbrtowc(i32* null, i8* %12, i64 %13, %struct.__mbstate_t* nonnull %5) #5
  switch i64 %14, label %17 [
    i64 -2, label %22
    i64 -1, label %22
    i64 0, label %15
  ]

15:                                               ; preds = %9
  %16 = add nuw i64 %11, 1
  br label %17

17:                                               ; preds = %15, %9
  %18 = phi i64 [ %11, %9 ], [ %16, %15 ]
  %19 = add i64 %18, %14
  %20 = add i64 %10, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %9, label %24

22:                                               ; preds = %9, %9
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #5
  br label %61

24:                                               ; preds = %17
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %3, %24
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #5
  br label %61

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #5
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #5
  call void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6resizeEmw(%"class.std::__1::basic_string"* nonnull %6, i64 %20, i32 signext 0) #5
  store i64 0, i64* %4, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %6 to i32*
  br label %34

34:                                               ; preds = %28, %46
  %35 = phi i64 [ 0, %28 ], [ %49, %46 ]
  %36 = phi i64 [ 0, %28 ], [ %48, %46 ]
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %32, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i32*, i32** %30, align 8
  %41 = select i1 %39, i32* %40, i32* %33
  %42 = getelementptr inbounds i32, i32* %41, i64 %35
  %43 = sub i64 %2, %36
  %44 = call i64 @mbrtowc(i32* %42, i8* %37, i64 %43, %struct.__mbstate_t* nonnull %5) #5
  switch i64 %44, label %45 [
    i64 -2, label %53
    i64 -1, label %53
    i64 0, label %46
  ]

45:                                               ; preds = %34
  br label %46

46:                                               ; preds = %45, %34
  %47 = phi i64 [ %44, %45 ], [ 1, %34 ]
  %48 = add i64 %47, %36
  %49 = add i64 %35, 1
  %50 = icmp ult i64 %48, %2
  br i1 %50, label %34, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 8 %29, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #5
  br label %60

53:                                               ; preds = %34, %34
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #5
  %55 = load i8, i8* %32, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %53
  %58 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #6
  br label %60

60:                                               ; preds = %51, %53, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #5
  br label %61

61:                                               ; preds = %22, %60, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret void
}

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string.1"*, i64, i8 signext) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6resizeEmw(%"class.std::__1::basic_string"*, i64, i32 signext) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
