; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/spirv_validator_options.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/spirv_validator_options.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.spv_validator_options_t = type { %struct.validator_universal_limits_t, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.validator_universal_limits_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [21 x i8] c"--max-struct-members\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"--max-struct_depth\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"--max-local-variables\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"--max-global-variables\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"--max-switch-branches\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"--max-function-args\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"--max-control-flow-nesting-depth\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"--max-access-chain-indexes\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"--max-id-bound\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z30spvParseUniversalLimitsOptionsPKcP19spv_validator_limit(i8*, i32* nocapture) local_unnamed_addr #0 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 20) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  store i32 0, i32* %1, align 4
  br label %40

8:                                                ; preds = %4
  %9 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  store i32 1, i32* %1, align 4
  br label %40

12:                                               ; preds = %8
  %13 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i64 21) #6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  store i32 2, i32* %1, align 4
  br label %40

16:                                               ; preds = %12
  %17 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22) #6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  store i32 3, i32* %1, align 4
  br label %40

20:                                               ; preds = %16
  %21 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i64 21) #6
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  store i32 3, i32* %1, align 4
  br label %40

24:                                               ; preds = %20
  %25 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i64 19) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  store i32 5, i32* %1, align 4
  br label %40

28:                                               ; preds = %24
  %29 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i64 32) #6
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  store i32 6, i32* %1, align 4
  br label %40

32:                                               ; preds = %28
  %33 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i64 26) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  store i32 7, i32* %1, align 4
  br label %40

36:                                               ; preds = %32
  %37 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i64 14) #6
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  store i32 8, i32* %1, align 4
  br label %40

40:                                               ; preds = %2, %7, %15, %23, %31, %39, %35, %27, %19, %11, %36
  %41 = phi i1 [ false, %36 ], [ true, %11 ], [ true, %19 ], [ true, %27 ], [ true, %35 ], [ true, %39 ], [ true, %31 ], [ true, %23 ], [ true, %15 ], [ true, %7 ], [ false, %2 ]
  ret i1 %41
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %struct.spv_validator_options_t* @spvValidatorOptionsCreate() local_unnamed_addr #1 {
  %1 = tail call i8* @_Znwm(i64 44) #7
  %2 = bitcast i8* %1 to %struct.spv_validator_options_t*
  %3 = bitcast i8* %1 to <4 x i32>*
  store <4 x i32> <i32 16383, i32 255, i32 524287, i32 65535>, <4 x i32>* %3, align 4
  %4 = getelementptr inbounds i8, i8* %1, i64 16
  %5 = bitcast i8* %4 to <4 x i32>*
  store <4 x i32> <i32 16383, i32 255, i32 1023, i32 255>, <4 x i32>* %5, align 4
  %6 = getelementptr inbounds i8, i8* %1, i64 32
  %7 = bitcast i8* %6 to i32*
  store i32 4194303, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %1, i64 36
  %9 = bitcast i8* %8 to i64*
  store i64 0, i64* %9, align 4
  ret %struct.spv_validator_options_t* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @spvValidatorOptionsDestroy(%struct.spv_validator_options_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.spv_validator_options_t* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.spv_validator_options_t* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetUniversalLimit(%struct.spv_validator_options_t* nocapture, i32, i32) local_unnamed_addr #4 {
  switch i32 %1, label %24 [
    i32 0, label %4
    i32 1, label %6
    i32 2, label %8
    i32 3, label %10
    i32 4, label %12
    i32 5, label %14
    i32 6, label %16
    i32 7, label %18
    i32 8, label %20
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 0
  br label %22

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 1
  br label %22

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 2
  br label %22

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 3
  br label %22

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 4
  br label %22

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 5
  br label %22

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 6
  br label %22

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 7
  br label %22

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 0, i32 8
  br label %22

22:                                               ; preds = %4, %6, %8, %10, %12, %14, %16, %18, %20
  %23 = phi i32* [ %21, %20 ], [ %19, %18 ], [ %17, %16 ], [ %15, %14 ], [ %13, %12 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ], [ %5, %4 ]
  store i32 %2, i32* %23, align 4
  br label %24

24:                                               ; preds = %22, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetRelaxStoreStruct(%struct.spv_validator_options_t* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetRelaxLogicalPointer(%struct.spv_validator_options_t* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 2
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetBeforeHlslLegalization(%struct.spv_validator_options_t* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 8
  store i8 %3, i8* %4, align 1
  %5 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 2
  store i8 %3, i8* %5, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetRelaxBlockLayout(%struct.spv_validator_options_t* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 3
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetUniformBufferStandardLayout(%struct.spv_validator_options_t* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 4
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetScalarBlockLayout(%struct.spv_validator_options_t* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 5
  store i8 %3, i8* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetWorkgroupScalarBlockLayout(%struct.spv_validator_options_t* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 6
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @spvValidatorOptionsSetSkipBlockLayout(%struct.spv_validator_options_t* nocapture, i1 zeroext) local_unnamed_addr #4 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %struct.spv_validator_options_t, %struct.spv_validator_options_t* %0, i64 0, i32 7
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
