; ModuleID = '../../third_party/blink/common/input/web_keyboard_event.cc'
source_filename = "../../third_party/blink/common/input/web_keyboard_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>

$_ZN5blink13WebInputEventD2Ev = comdat any

$_ZN5blink16WebKeyboardEventD0Ev = comdat any

@_ZN5blink16WebKeyboardEvent14kTextLengthCapE = hidden local_unnamed_addr constant i64 4, align 8
@_ZTVN5blink16WebKeyboardEventE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebInputEvent"*)* @_ZN5blink13WebInputEventD2Ev to i8*), i8* bitcast (void (%"class.blink::WebKeyboardEvent"*)* @_ZN5blink16WebKeyboardEventD0Ev to i8*), i8* bitcast (%"class.blink::WebInputEvent"* (%"class.blink::WebKeyboardEvent"*)* @_ZNK5blink16WebKeyboardEvent5CloneEv to i8*), i8* bitcast (i1 (%"class.blink::WebKeyboardEvent"*, %"class.blink::WebInputEvent"*)* @_ZNK5blink16WebKeyboardEvent11CanCoalesceERKNS_13WebInputEventE to i8*), i8* bitcast (void (%"class.blink::WebKeyboardEvent"*, %"class.blink::WebInputEvent"*)* @_ZN5blink16WebKeyboardEvent8CoalesceERKNS_13WebInputEventE to i8*), i8* bitcast (void ()* @_ZNK5blink13WebInputEvent18GetScrollInputTypeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebInputEvent"* @_ZNK5blink16WebKeyboardEvent5CloneEv(%"class.blink::WebKeyboardEvent"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #6
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %0, i64 0, i32 0, i32 1
  %6 = bitcast float* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 32, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink16WebKeyboardEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 40
  %8 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %0, i64 0, i32 1
  %9 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %9, i64 34, i1 false) #7
  %10 = bitcast i8* %2 to %"class.blink::WebInputEvent"*
  ret %"class.blink::WebInputEvent"* %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16WebKeyboardEvent11CanCoalesceERKNS_13WebInputEventE(%"class.blink::WebKeyboardEvent"* nocapture readnone, %"class.blink::WebInputEvent"* nocapture readnone dereferenceable(40)) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink16WebKeyboardEvent8CoalesceERKNS_13WebInputEventE(%"class.blink::WebKeyboardEvent"* nocapture, %"class.blink::WebInputEvent"* nocapture dereferenceable(40)) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebInputEventD2Ev(%"class.blink::WebInputEvent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16WebKeyboardEventD0Ev(%"class.blink::WebKeyboardEvent"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::WebKeyboardEvent"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

declare void @_ZNK5blink13WebInputEvent18GetScrollInputTypeEv() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
