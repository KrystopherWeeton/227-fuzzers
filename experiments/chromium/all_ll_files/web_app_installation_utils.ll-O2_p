; ModuleID = '../../chrome/browser/web_applications/web_app_installation_utils.cc'
source_filename = "../../chrome/browser/web_applications/web_app_installation_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.std::nothrow_t" = type { i8 }
%struct.WebApplicationInfo = type { %"class.absl::optional", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %class.GURL, %class.GURL, %"class.absl::optional", %class.GURL, %"class.std::__1::vector", %struct.IconBitmaps, i8, i32, i32, %"class.absl::optional.32", %"class.absl::optional.32", i32, %"class.std::__1::vector.37", i8, i8, %"class.std::__1::vector.44", %"class.absl::optional.62", %"class.std::__1::vector.69", %"class.std::__1::vector.81", %"class.std::__1::vector.95", %"class.std::__1::vector.102", %class.GURL, %"class.std::__1::vector.109", i8, i32 }
%"class.std::__1::basic_string.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo*, %"class.std::__1::__compressed_pair.19" }
%struct.WebApplicationIconInfo = type <{ %class.GURL, %"class.absl::optional.14", i32, [4 x i8] }>
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { i32 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.WebApplicationIconInfo* }
%struct.IconBitmaps = type { %"class.std::__1::map", %"class.std::__1::map", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.absl::optional.32" = type { %"class.absl::optional_internal::optional_data.33" }
%"class.absl::optional_internal::optional_data.33" = type { %"class.absl::optional_internal::optional_data_base.34" }
%"class.absl::optional_internal::optional_data_base.34" = type { %"class.absl::optional_internal::optional_data_dtor_base.35" }
%"class.absl::optional_internal::optional_data_dtor_base.35" = type { i8, %union.anon.36 }
%union.anon.36 = type { i32 }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i32*, i32*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i32* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.blink::Manifest::FileHandler"*, %"struct.blink::Manifest::FileHandler"*, %"class.std::__1::__compressed_pair.57" }
%"struct.blink::Manifest::FileHandler" = type { %class.GURL, %"class.std::__1::basic_string.2", %"class.std::__1::map.46" }
%"class.std::__1::map.46" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.blink::Manifest::FileHandler"* }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"struct.apps::ShareTarget" }
%"struct.apps::ShareTarget" = type { %class.GURL, i32, i32, %"struct.apps::ShareTarget::Params" }
%"struct.apps::ShareTarget::Params" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.67" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.apps::ShareTarget::Files"*, %"struct.apps::ShareTarget::Files"*, %"class.std::__1::__compressed_pair.76" }
%"struct.apps::ShareTarget::Files" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.69" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.apps::ShareTarget::Files"* }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %struct.WebApplicationShortcutsMenuItemInfo*, %struct.WebApplicationShortcutsMenuItemInfo*, %"class.std::__1::__compressed_pair.90" }
%struct.WebApplicationShortcutsMenuItemInfo = type { %"class.std::__1::basic_string.2", %class.GURL, %"class.std::__1::vector.83", %"class.std::__1::vector.83", %"class.std::__1::vector.83" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"struct.WebApplicationShortcutsMenuItemInfo::Icon"*, %"struct.WebApplicationShortcutsMenuItemInfo::Icon"*, %"class.std::__1::__compressed_pair.85" }
%"struct.WebApplicationShortcutsMenuItemInfo::Icon" = type <{ %class.GURL, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.WebApplicationShortcutsMenuItemInfo::Icon"* }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %struct.WebApplicationShortcutsMenuItemInfo* }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %struct.IconBitmaps*, %struct.IconBitmaps*, %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %struct.IconBitmaps* }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.blink::Manifest::ProtocolHandler"*, %"struct.blink::Manifest::ProtocolHandler"*, %"class.std::__1::__compressed_pair.104" }
%"struct.blink::Manifest::ProtocolHandler" = type { %"class.std::__1::basic_string.2", %class.GURL }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.blink::Manifest::ProtocolHandler"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.GURL* }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.apps::UrlHandlerInfo"*, %"struct.apps::UrlHandlerInfo"*, %"class.std::__1::__compressed_pair.116" }
%"struct.apps::UrlHandlerInfo" = type { %"class.url::Origin", i8, %"class.std::__1::vector.69", %"class.std::__1::vector.69" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.111" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.apps::UrlHandlerInfo"* }
%"class.web_app::WebApp" = type <{ %"class.std::__1::basic_string", %"class.std::__1::bitset", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %"class.absl::optional", %class.GURL, %"class.absl::optional.32", %"class.absl::optional.32", i32, i32, %"class.std::__1::vector.37", %"class.syncer::Ordinal", %"class.syncer::Ordinal", %"class.absl::optional.121", i8, i8, i8, [7 x i8], %"class.std::__1::vector", %"class.base::internal::flat_tree", %"class.base::internal::flat_tree", %"class.base::internal::flat_tree", i8, [7 x i8], %"class.std::__1::vector.81", %"class.std::__1::vector.133", %"class.std::__1::vector.140", %"class.absl::optional.62", %"class.std::__1::vector.69", %"class.std::__1::vector.155", %class.GURL, %"class.base::Time", %"class.base::Time", %"class.base::Time", i32, [4 x i8], %"struct.web_app::WebApp::SyncFallbackData", %"class.std::__1::vector.109", i32, %"struct.web_app::WebApp::ClientData", [4 x i8], %class.GURL, %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.syncer::Ordinal" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { %"struct.web_app::WebAppChromeOsData" }
%"struct.web_app::WebAppChromeOsData" = type { i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.126" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { i32*, i32*, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { i32* }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %struct.IconSizes*, %struct.IconSizes*, %"class.std::__1::__compressed_pair.135" }
%struct.IconSizes = type { %"class.std::__1::vector.126", %"class.std::__1::vector.126", %"class.std::__1::vector.126" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %struct.IconSizes* }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"*, %"class.std::__1::__compressed_pair.150" }
%"struct.apps::FileHandler" = type { %class.GURL, %"class.std::__1::vector.142" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.apps::FileHandler::AcceptEntry"*, %"struct.apps::FileHandler::AcceptEntry"*, %"class.std::__1::__compressed_pair.145" }
%"struct.apps::FileHandler::AcceptEntry" = type { %"class.std::__1::basic_string", %"class.base::internal::flat_tree.144" }
%"class.base::internal::flat_tree.144" = type { %"class.std::__1::vector.69" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.apps::FileHandler::AcceptEntry"* }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.apps::FileHandler"* }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"*, %"class.std::__1::__compressed_pair.157" }
%"struct.apps::ProtocolHandlerInfo" = type { %"class.std::__1::basic_string", %class.GURL }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.apps::ProtocolHandlerInfo"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.web_app::WebApp::SyncFallbackData" = type { %"class.std::__1::basic_string", %"class.absl::optional.32", %class.GURL, %"class.std::__1::vector" }
%"struct.web_app::WebApp::ClientData" = type { %"class.absl::optional.162" }
%"class.absl::optional.162" = type { %"class.absl::optional_internal::optional_data.163" }
%"class.absl::optional_internal::optional_data.163" = type { %"class.absl::optional_internal::optional_data_base.164" }
%"class.absl::optional_internal::optional_data_base.164" = type { %"class.absl::optional_internal::optional_data_dtor_base.165" }
%"class.absl::optional_internal::optional_data_dtor_base.165" = type { i8, %union.anon.166 }
%union.anon.166 = type { %"struct.web_app::WebAppSystemWebAppData" }
%"struct.web_app::WebAppSystemWebAppData" = type { i32 }
%"struct.std::__1::less.167" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.6 }
%struct.anon.6 = type { %"struct.std::__1::__padding.7", i8 }
%"struct.std::__1::__padding.7" = type { [1 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare" = type { i8 }
%"class.web_app::AppRegistrar" = type { i32 (...)**, %class.Profile*, %"class.base::ObserverList", %"class.web_app::OsIntegrationManager"* }
%class.Profile = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.168", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.176" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.171" }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i8 }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.web_app::OsIntegrationManager" = type { i32 (...)**, %class.Profile*, %"class.web_app::AppRegistrar"*, %"class.web_app::WebAppUiManager"*, %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.base::WeakPtrFactory.410" }
%"class.web_app::WebAppUiManager" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.web_app::AppShortcutManager"* }
%"class.web_app::AppShortcutManager" = type { i32 (...)**, i8, %"class.web_app::AppRegistrar"*, %"class.web_app::AppIconManager"*, %class.Profile*, %"class.base::WeakPtrFactory" }
%"class.web_app::AppIconManager" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.web_app::FileHandlerManager"* }
%"class.web_app::FileHandlerManager" = type { i32 (...)**, i8, %"class.base::RepeatingCallback", %class.Profile*, %"class.web_app::AppRegistrar"*, %"class.base::WeakPtrFactory.193" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.192", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.192" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.193" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.web_app::ProtocolHandlerManager"* }
%"class.web_app::ProtocolHandlerManager" = type { i32 (...)**, %"class.web_app::AppRegistrar"*, %class.Profile* }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.web_app::UrlHandlerManager"* }
%"class.web_app::UrlHandlerManager" = type { i32 (...)**, %class.Profile*, %"class.web_app::AppRegistrar"*, %"class.std::__1::unique_ptr.206" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.web_app::WebAppOriginAssociationManager"* }
%"class.web_app::WebAppOriginAssociationManager" = type { i32 (...)**, %"class.std::__1::deque", i8, %"class.mojo::Remote", %"class.std::__1::unique_ptr.390", %"class.base::WeakPtrFactory.403" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.215" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.209"**, %"class.std::__1::unique_ptr.209"**, %"class.std::__1::unique_ptr.209"**, %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::unique_ptr.209" = type opaque
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.std::__1::unique_ptr.209"** }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.384" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.219, %"class.std::__1::unique_ptr.334", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.221, i32 }>
%class.scoped_refptr.219 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.221, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.301", %"class.absl::optional.306", %"class.absl::optional.260", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.325", i8, [7 x i8], %class.scoped_refptr.221, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.220" }>
%"class.base::RefCountedThreadSafe.220" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.235" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.235" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.221, %"class.std::__1::unique_ptr.236", %"class.absl::optional.246", %"struct.std::__1::atomic.256", i8, i8, i8, i8, i32, i32, %"class.absl::optional.260", %"class.std::__1::unique_ptr.265", i8, i64, %class.scoped_refptr.297, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.299", %"class.base::WeakPtrFactory.300" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.221, i8, %"class.mojo::ScopedHandleBase.239", %class.scoped_refptr.240, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.241", i8*, %"class.base::WeakPtrFactory.242" }
%"class.mojo::ScopedHandleBase.239" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.240 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.241" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.242" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.246" = type { %"class.absl::optional_internal::optional_data.247" }
%"class.absl::optional_internal::optional_data.247" = type { %"class.absl::optional_internal::optional_data_base.248" }
%"class.absl::optional_internal::optional_data_base.248" = type { %"class.absl::optional_internal::optional_data_dtor_base.249" }
%"class.absl::optional_internal::optional_data_dtor_base.249" = type { i8, %union.anon.250 }
%union.anon.250 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.251", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.251" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__cxx_atomic_impl.258" }
%"struct.std::__1::__cxx_atomic_impl.258" = type { %"struct.std::__1::__cxx_atomic_base_impl.259" }
%"struct.std::__1::__cxx_atomic_base_impl.259" = type { i8 }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.268", i8, i64, %class.scoped_refptr.269, %class.scoped_refptr.293 }
%"class.base::RepeatingCallback.268" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.269 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.271", %"class.std::__1::map.282", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.270 }
%class.scoped_refptr.270 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.271" = type { %"class.std::__1::__tree.272" }
%"class.std::__1::__tree.272" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.282" = type { %"class.std::__1::__tree.283" }
%"class.std::__1::__tree.283" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%class.scoped_refptr.293 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.297 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.298 }
%class.scoped_refptr.298 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.411", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.221, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.412", [4 x i8] }>
%"class.base::RefCountedThreadSafe.411" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.412" = type { %"struct.std::__1::__atomic_base.413" }
%"struct.std::__1::__atomic_base.413" = type { %"struct.std::__1::__atomic_base.414" }
%"struct.std::__1::__atomic_base.414" = type { %"struct.std::__1::__cxx_atomic_impl.415" }
%"struct.std::__1::__cxx_atomic_impl.415" = type { %"struct.std::__1::__cxx_atomic_base_impl.416" }
%"struct.std::__1::__cxx_atomic_base_impl.416" = type { i32 }
%"class.base::WeakPtr.299" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.300" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.301" = type { %"class.absl::optional_internal::optional_data.302" }
%"class.absl::optional_internal::optional_data.302" = type { %"class.absl::optional_internal::optional_data_base.303" }
%"class.absl::optional_internal::optional_data_base.303" = type { %"class.absl::optional_internal::optional_data_dtor_base.304" }
%"class.absl::optional_internal::optional_data_dtor_base.304" = type { i8, %union.anon.305 }
%union.anon.305 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.306" = type { %"class.absl::optional_internal::optional_data.307" }
%"class.absl::optional_internal::optional_data.307" = type { %"class.absl::optional_internal::optional_data_base.308" }
%"class.absl::optional_internal::optional_data_base.308" = type { %"class.absl::optional_internal::optional_data_dtor_base.309" }
%"class.absl::optional_internal::optional_data_dtor_base.309" = type { i8, [7 x i8], %union.anon.310 }
%union.anon.310 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.260" = type { %"class.absl::optional_internal::optional_data.261" }
%"class.absl::optional_internal::optional_data.261" = type { %"class.absl::optional_internal::optional_data_base.262" }
%"class.absl::optional_internal::optional_data_base.262" = type { %"class.absl::optional_internal::optional_data_dtor_base.263" }
%"class.absl::optional_internal::optional_data_dtor_base.263" = type { i8, %union.anon.264 }
%union.anon.264 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.311 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.311 = type { %"class.std::__1::map.313" }
%"class.std::__1::map.313" = type { %"class.std::__1::__tree.314" }
%"class.std::__1::__tree.314" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.315", %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.324"*, i64 }
%"class.std::__1::unique_ptr.324" = type opaque
%"class.std::__1::map.325" = type { %"class.std::__1::__tree.326" }
%"class.std::__1::__tree.326" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.327", %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.337", %"class.absl::optional.338", %"class.absl::optional.343", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.351", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.359", %"class.std::__1::map.370", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.379", i8, %class.scoped_refptr.221, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.380" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.337" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.338" = type { %"class.absl::optional_internal::optional_data.339" }
%"class.absl::optional_internal::optional_data.339" = type { %"class.absl::optional_internal::optional_data_base.340" }
%"class.absl::optional_internal::optional_data_base.340" = type { %"class.absl::optional_internal::optional_data_dtor_base.341" }
%"class.absl::optional_internal::optional_data_dtor_base.341" = type { i8, %union.anon.342 }
%union.anon.342 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.343" = type { %"class.absl::optional_internal::optional_data.344" }
%"class.absl::optional_internal::optional_data.344" = type { %"class.absl::optional_internal::optional_data_base.345" }
%"class.absl::optional_internal::optional_data_base.345" = type { %"class.absl::optional_internal::optional_data_dtor_base.346" }
%"class.absl::optional_internal::optional_data_dtor_base.346" = type { i8, %union.anon.347 }
%union.anon.347 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.221, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.349" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.348" }
%"class.base::time_internal::TimeBase.348" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.349" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.350 }
%class.scoped_refptr.350 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.354", %class.scoped_refptr.355 }
%"class.base::RepeatingCallback.354" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.355 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.220", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.359" = type { %"class.std::__1::__tree.360" }
%"class.std::__1::__tree.360" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.370" = type { %"class.std::__1::__tree.371" }
%"class.std::__1::__tree.371" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::OnceCallback.379" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.380" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.221 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.222" }>
%"class.base::RefCountedThreadSafe.222" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.webapps::mojom::WebAppOriginAssociationParserProxy"* }
%"class.webapps::mojom::WebAppOriginAssociationParserProxy" = type { %"class.webapps::mojom::WebAppOriginAssociationParser", %"class.mojo::MessageReceiverWithResponder"* }
%"class.webapps::mojom::WebAppOriginAssociationParser" = type { i32 (...)** }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.webapps::WebAppOriginAssociationFetcher"* }
%"class.webapps::WebAppOriginAssociationFetcher" = type { i32 (...)**, %"class.std::__1::unique_ptr.393", %"class.base::WeakPtrFactory.399" }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.network::SimpleURLLoader"* }
%"class.network::SimpleURLLoader" = type { i32 (...)** }
%"class.base::WeakPtrFactory.399" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.403" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.410" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.web_app::InstallOsHooksOptions" = type <{ %"class.std::__1::bitset.417", i8, i8, [6 x i8] }>
%"class.std::__1::bitset.417" = type { %"class.std::__1::__bitset.418" }
%"class.std::__1::__bitset.418" = type { i64 }
%"class.web_app::WebAppRegistrar" = type <{ %"class.web_app::AppRegistrar", %class.ProfileManagerObserver, %"class.std::__1::map.420", i8, [7 x i8] }>
%class.ProfileManagerObserver = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.419" }
%"class.base::WeakPtrFactory.419" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.420" = type { %"class.std::__1::__tree.421" }
%"class.std::__1::__tree.421" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.422", %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__split_buffer.462" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.72", %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.std::__1::allocator.74"* }
%"class.std::__1::allocator.74" = type { i8 }

$_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEEC2EOS9_RKS5_ = comdat any

$_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE7reserveEm = comdat any

$_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSA_IPKS6_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE12emplace_backIJS6_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN4apps11FileHandler11AcceptEntryENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4apps11FileHandlerENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4apps19ProtocolHandlerInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorI22WebApplicationIconInfoNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

@_ZN8features24kDesktopPWAsRunOnOsLoginE = external global %"struct.base::Feature", align 8
@_ZN7web_app12_GLOBAL__N_113kChromeSchemeE = internal constant [7 x i8] c"chrome\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7web_app23SetWebAppManifestFieldsERK18WebApplicationInfoRNS_6WebAppE(%struct.WebApplicationInfo* dereferenceable(1136), %"class.web_app::WebApp"* dereferenceable(1464)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.155", align 8
  %4 = alloca %"struct.apps::ProtocolHandlerInfo", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.155", align 8
  %7 = alloca %"class.std::__1::vector.140", align 8
  %8 = alloca %"struct.apps::FileHandler", align 8
  %9 = alloca %"struct.apps::FileHandler::AcceptEntry", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::vector.140", align 8
  %13 = alloca %struct.IconSizes, align 8
  %14 = alloca %"class.std::__1::vector.126", align 8
  %15 = alloca %"class.std::__1::vector.126", align 8
  %16 = alloca %"class.std::__1::vector.126", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::vector.37", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.absl::optional", align 8
  %21 = alloca %"struct.web_app::WebApp::SyncFallbackData", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"struct.web_app::WebApp::SyncFallbackData", align 8
  %24 = alloca %"class.std::__1::vector", align 8
  %25 = alloca %"class.base::internal::flat_tree", align 8
  %26 = alloca %"class.std::__1::vector.126", align 8
  %27 = alloca %"struct.std::__1::less.167", align 1
  %28 = alloca %"class.base::internal::flat_tree", align 8
  %29 = alloca %"class.std::__1::vector.126", align 8
  %30 = alloca %"struct.std::__1::less.167", align 1
  %31 = alloca %"class.base::internal::flat_tree", align 8
  %32 = alloca %"class.std::__1::vector.126", align 8
  %33 = alloca %"struct.std::__1::less.167", align 1
  %34 = alloca %"class.std::__1::vector.81", align 8
  %35 = alloca %"class.std::__1::vector.133", align 8
  %36 = alloca %"class.absl::optional.62", align 8
  %37 = alloca %"class.std::__1::vector.109", align 8
  %38 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string.2"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string.2"* %39 to i16*
  %47 = select i1 %43, i16* %45, i16* %46
  %48 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %42 to i64
  %51 = select i1 %43, i64 %49, i64 %50
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %17, i16* %47, i64 %51) #11
  call void @_ZN7web_app6WebApp7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17) #11
  %52 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  %60 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 14
  %61 = load i32, i32* %60, align 4
  call void @_ZN7web_app6WebApp14SetDisplayModeEN5blink5mojom11DisplayModeE(%"class.web_app::WebApp"* %1, i32 %61) #11
  %62 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 15
  %63 = bitcast %"class.std::__1::vector.37"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #11
  %64 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 15, i32 0, i32 1
  %65 = bitcast i32** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.37"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 2
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %94, label %72

72:                                               ; preds = %59
  %73 = icmp ugt i64 %70, 4611686018427387903
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector.37"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %75) #13
  unreachable

76:                                               ; preds = %72
  %77 = call i8* @_Znwm(i64 %69) #12
  %78 = bitcast i8* %77 to i32*
  %79 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %18, i64 0, i32 0, i32 1
  %80 = bitcast i32** %79 to i8**
  store i8* %77, i8** %80, align 8
  %81 = bitcast %"class.std::__1::vector.37"* %18 to i8**
  store i8* %77, i8** %81, align 8
  %82 = getelementptr inbounds i32, i32* %78, i64 %70
  %83 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %82, i32** %83, align 8
  %84 = bitcast i32** %79 to i64*
  %85 = ptrtoint i8* %77 to i64
  %86 = icmp sgt i64 %69, 0
  br i1 %86, label %87, label %92

87:                                               ; preds = %76
  %88 = lshr exact i64 %69, 2
  %89 = inttoptr i64 %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %77, i8* align 4 %89, i64 %69, i1 false) #11
  %90 = getelementptr inbounds i32, i32* %78, i64 %88
  %91 = ptrtoint i32* %90 to i64
  br label %92

92:                                               ; preds = %87, %76
  %93 = phi i64 [ %91, %87 ], [ %85, %76 ]
  store i64 %93, i64* %84, align 8
  br label %94

94:                                               ; preds = %59, %92
  call void @_ZN7web_app6WebApp22SetDisplayModeOverrideENSt3__16vectorIN5blink5mojom11DisplayModeENS1_9allocatorIS5_EEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::vector.37"* nonnull %18) #11
  %95 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %18, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %18, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %94, %98
  %104 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #11
  %105 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 2
  %106 = bitcast %"class.std::__1::basic_string.2"* %105 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i16*, i16** %110, align 8
  %112 = bitcast %"class.std::__1::basic_string.2"* %105 to i16*
  %113 = select i1 %109, i16* %111, i16* %112
  %114 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = zext i8 %108 to i64
  %117 = select i1 %109, i64 %115, i64 %116
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %19, i16* %113, i64 %117) #11
  call void @_ZN7web_app6WebApp14SetDescriptionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #11
  %118 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %103
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %103, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #11
  %126 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 32, i1 false) #11
  %128 = load i8, i8* %127, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %146, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %132 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %133 = bitcast %"class.std::__1::basic_string"* %131 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  %139 = bitcast %"class.std::__1::basic_string"* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 24, i1 false) #11
  br label %145

140:                                              ; preds = %130
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %132, i8* %142, i64 %144) #11
  br label %145

145:                                              ; preds = %140, %137
  store i8 1, i8* %126, align 8
  br label %146

146:                                              ; preds = %125, %145
  call void @_ZN7web_app6WebApp20SetLaunchQueryParamsEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEE(%"class.web_app::WebApp"* %1, %"class.absl::optional"* nonnull %20) #11
  %147 = load i8, i8* %126, align 8, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %151 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %157) #12
  br label %158

158:                                              ; preds = %155, %149
  store i8 0, i8* %126, align 8
  br label %159

159:                                              ; preds = %146, %158
  %160 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 6
  call void @_ZN7web_app6WebApp8SetScopeERK4GURL(%"class.web_app::WebApp"* %1, %class.GURL* dereferenceable(120) %160) #11
  %161 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 12
  %162 = bitcast %"class.absl::optional.32"* %161 to i64*
  %163 = load i64, i64* %162, align 4
  call void @_ZN7web_app6WebApp13SetThemeColorEN4absl8optionalIjEE(%"class.web_app::WebApp"* %1, i64 %163) #11
  %164 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 13
  %165 = bitcast %"class.absl::optional.32"* %164 to i64*
  %166 = load i64, i64* %165, align 4
  call void @_ZN7web_app6WebApp18SetBackgroundColorEN4absl8optionalIjEE(%"class.web_app::WebApp"* %1, i64 %166) #11
  %167 = bitcast %"struct.web_app::WebApp::SyncFallbackData"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %167) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -86, i64 176, i1 false)
  call void @_ZN7web_app6WebApp16SyncFallbackDataC1Ev(%"struct.web_app::WebApp::SyncFallbackData"* nonnull %21) #11
  %168 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #11
  %169 = load i8, i8* %41, align 1
  %170 = icmp slt i8 %169, 0
  %171 = load i16*, i16** %44, align 8
  %172 = select i1 %170, i16* %171, i16* %46
  %173 = load i64, i64* %48, align 8
  %174 = zext i8 %169 to i64
  %175 = select i1 %170, i64 %173, i64 %174
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %22, i16* %172, i64 %175) #11
  %176 = bitcast %"struct.web_app::WebApp::SyncFallbackData"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %159
  %181 = getelementptr inbounds %"struct.web_app::WebApp::SyncFallbackData", %"struct.web_app::WebApp::SyncFallbackData"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %182) #12
  br label %183

183:                                              ; preds = %180, %159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* nonnull align 8 %168, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #11
  %184 = getelementptr inbounds %"struct.web_app::WebApp::SyncFallbackData", %"struct.web_app::WebApp::SyncFallbackData"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %186 = bitcast i8* %185 to i64*
  %187 = bitcast i8* %184 to i64*
  %188 = load i64, i64* %186, align 4
  store i64 %188, i64* %187, align 8
  %189 = getelementptr inbounds %"struct.web_app::WebApp::SyncFallbackData", %"struct.web_app::WebApp::SyncFallbackData"* %21, i64 0, i32 2
  %190 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %189, %class.GURL* dereferenceable(120) %160) #11
  %191 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 7
  %192 = getelementptr inbounds %"struct.web_app::WebApp::SyncFallbackData", %"struct.web_app::WebApp::SyncFallbackData"* %21, i64 0, i32 3
  %193 = icmp eq %"class.std::__1::vector"* %192, %191
  br i1 %193, label %199, label %194

194:                                              ; preds = %183
  %195 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %191, i64 0, i32 0, i32 0
  %196 = load %struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo** %195, align 8
  %197 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 7, i32 0, i32 1
  %198 = load %struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo** %197, align 8
  call void @_ZNSt3__16vectorI22WebApplicationIconInfoNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %192, %struct.WebApplicationIconInfo* %196, %struct.WebApplicationIconInfo* %198) #11
  br label %199

199:                                              ; preds = %183, %194
  call void @_ZN7web_app6WebApp16SyncFallbackDataC1ERKS1_(%"struct.web_app::WebApp::SyncFallbackData"* nonnull %23, %"struct.web_app::WebApp::SyncFallbackData"* nonnull dereferenceable(176) %21) #11
  call void @_ZN7web_app6WebApp19SetSyncFallbackDataENS0_16SyncFallbackDataE(%"class.web_app::WebApp"* %1, %"struct.web_app::WebApp::SyncFallbackData"* nonnull %23) #11
  call void @_ZN7web_app6WebApp16SyncFallbackDataD1Ev(%"struct.web_app::WebApp::SyncFallbackData"* nonnull %23) #11
  %200 = bitcast %"class.std::__1::vector"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 24, i1 false) #11
  %201 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 7, i32 0, i32 1
  %202 = bitcast %struct.WebApplicationIconInfo** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.std::__1::vector"* %191 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = sub i64 %203, %205
  %207 = sdiv exact i64 %206, 136
  %208 = icmp eq i64 %206, 0
  %209 = inttoptr i64 %205 to %struct.WebApplicationIconInfo*
  %210 = inttoptr i64 %203 to %struct.WebApplicationIconInfo*
  br i1 %208, label %236, label %211

211:                                              ; preds = %199
  %212 = icmp ugt i64 %207, 135637824071393761
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = bitcast %"class.std::__1::vector"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %214) #13
  unreachable

215:                                              ; preds = %211
  %216 = call i8* @_Znwm(i64 %206) #12
  %217 = bitcast i8* %216 to %struct.WebApplicationIconInfo*
  %218 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 1
  %219 = bitcast %struct.WebApplicationIconInfo** %218 to i8**
  store i8* %216, i8** %219, align 8
  %220 = bitcast %"class.std::__1::vector"* %24 to i8**
  store i8* %216, i8** %220, align 8
  %221 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %217, i64 %207
  %222 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 2, i32 0, i32 0
  store %struct.WebApplicationIconInfo* %221, %struct.WebApplicationIconInfo** %222, align 8
  %223 = bitcast %struct.WebApplicationIconInfo** %218 to i64*
  %224 = ptrtoint i8* %216 to i64
  %225 = icmp eq %struct.WebApplicationIconInfo* %209, %210
  br i1 %225, label %234, label %226

226:                                              ; preds = %215, %226
  %227 = phi %struct.WebApplicationIconInfo* [ %230, %226 ], [ %217, %215 ]
  %228 = phi %struct.WebApplicationIconInfo* [ %229, %226 ], [ %209, %215 ]
  call void @_ZN22WebApplicationIconInfoC1ERKS_(%struct.WebApplicationIconInfo* %227, %struct.WebApplicationIconInfo* dereferenceable(136) %228) #11
  %229 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %228, i64 1
  %230 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %227, i64 1
  %231 = icmp eq %struct.WebApplicationIconInfo* %229, %210
  br i1 %231, label %232, label %226

232:                                              ; preds = %226
  %233 = ptrtoint %struct.WebApplicationIconInfo* %230 to i64
  br label %234

234:                                              ; preds = %232, %215
  %235 = phi i64 [ %224, %215 ], [ %233, %232 ]
  store i64 %235, i64* %223, align 8
  br label %236

236:                                              ; preds = %199, %234
  call void @_ZN7web_app6WebApp12SetIconInfosENSt3__16vectorI22WebApplicationIconInfoNS1_9allocatorIS3_EEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::vector"* nonnull %24) #11
  %237 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %238 = load %struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo** %237, align 8
  %239 = icmp eq %struct.WebApplicationIconInfo* %238, null
  br i1 %239, label %254, label %240

240:                                              ; preds = %236
  %241 = bitcast %struct.WebApplicationIconInfo* %238 to i8*
  %242 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 1
  %243 = load %struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo** %242, align 8
  %244 = icmp eq %struct.WebApplicationIconInfo* %243, %238
  br i1 %244, label %252, label %245

245:                                              ; preds = %240, %245
  %246 = phi %struct.WebApplicationIconInfo* [ %247, %245 ], [ %243, %240 ]
  %247 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %246, i64 -1
  call void @_ZN22WebApplicationIconInfoD1Ev(%struct.WebApplicationIconInfo* %247) #11
  %248 = icmp eq %struct.WebApplicationIconInfo* %247, %238
  br i1 %248, label %249, label %245

249:                                              ; preds = %245
  %250 = bitcast %"class.std::__1::vector"* %24 to i8**
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %249, %240
  %253 = phi i8* [ %251, %249 ], [ %241, %240 ]
  store %struct.WebApplicationIconInfo* %238, %struct.WebApplicationIconInfo** %242, align 8
  call void @_ZdlPv(i8* %253) #12
  br label %254

254:                                              ; preds = %236, %252
  %255 = bitcast %"class.std::__1::vector.126"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %255) #11
  %256 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 8, i32 0
  call fastcc void @_ZN7web_app12_GLOBAL__N_116GetSquareSizePxsERKNSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE(%"class.std::__1::vector.126"* nonnull sret %26, %"class.std::__1::map"* dereferenceable(24) %256)
  %257 = getelementptr inbounds %"struct.std::__1::less.167", %"struct.std::__1::less.167"* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %257) #11
  call void @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEEC2EOS9_RKS5_(%"class.base::internal::flat_tree"* nonnull %25, %"class.std::__1::vector.126"* nonnull dereferenceable(24) %26, %"struct.std::__1::less.167"* nonnull dereferenceable(1) %27)
  call void @_ZN7web_app6WebApp22SetDownloadedIconSizesEN5blink5mojom29ManifestImageResource_PurposeEN4base8internal9flat_treeIiNS4_8identityENSt3__14lessIvEENS8_6vectorIiNS8_9allocatorIiEEEEEE(%"class.web_app::WebApp"* %1, i32 0, %"class.base::internal::flat_tree"* nonnull %25) #11
  %258 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %25, i64 0, i32 0, i32 0, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %266, label %261

261:                                              ; preds = %254
  %262 = ptrtoint i32* %259 to i64
  %263 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %25, i64 0, i32 0, i32 0, i32 1
  %264 = bitcast i32** %263 to i64*
  store i64 %262, i64* %264, align 8
  %265 = bitcast i32* %259 to i8*
  call void @_ZdlPv(i8* %265) #12
  br label %266

266:                                              ; preds = %254, %261
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %257) #11
  %267 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %26, i64 0, i32 0, i32 0
  %268 = load i32*, i32** %267, align 8
  %269 = icmp eq i32* %268, null
  br i1 %269, label %275, label %270

270:                                              ; preds = %266
  %271 = ptrtoint i32* %268 to i64
  %272 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %26, i64 0, i32 0, i32 1
  %273 = bitcast i32** %272 to i64*
  store i64 %271, i64* %273, align 8
  %274 = bitcast i32* %268 to i8*
  call void @_ZdlPv(i8* %274) #12
  br label %275

275:                                              ; preds = %266, %270
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %255) #11
  %276 = bitcast %"class.std::__1::vector.126"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %276) #11
  %277 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 8, i32 1
  call fastcc void @_ZN7web_app12_GLOBAL__N_116GetSquareSizePxsERKNSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE(%"class.std::__1::vector.126"* nonnull sret %29, %"class.std::__1::map"* dereferenceable(24) %277)
  %278 = getelementptr inbounds %"struct.std::__1::less.167", %"struct.std::__1::less.167"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %278) #11
  call void @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEEC2EOS9_RKS5_(%"class.base::internal::flat_tree"* nonnull %28, %"class.std::__1::vector.126"* nonnull dereferenceable(24) %29, %"struct.std::__1::less.167"* nonnull dereferenceable(1) %30)
  call void @_ZN7web_app6WebApp22SetDownloadedIconSizesEN5blink5mojom29ManifestImageResource_PurposeEN4base8internal9flat_treeIiNS4_8identityENSt3__14lessIvEENS8_6vectorIiNS8_9allocatorIiEEEEEE(%"class.web_app::WebApp"* %1, i32 2, %"class.base::internal::flat_tree"* nonnull %28) #11
  %279 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %28, i64 0, i32 0, i32 0, i32 0
  %280 = load i32*, i32** %279, align 8
  %281 = icmp eq i32* %280, null
  br i1 %281, label %287, label %282

282:                                              ; preds = %275
  %283 = ptrtoint i32* %280 to i64
  %284 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %28, i64 0, i32 0, i32 0, i32 1
  %285 = bitcast i32** %284 to i64*
  store i64 %283, i64* %285, align 8
  %286 = bitcast i32* %280 to i8*
  call void @_ZdlPv(i8* %286) #12
  br label %287

287:                                              ; preds = %275, %282
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %278) #11
  %288 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %29, i64 0, i32 0, i32 0
  %289 = load i32*, i32** %288, align 8
  %290 = icmp eq i32* %289, null
  br i1 %290, label %296, label %291

291:                                              ; preds = %287
  %292 = ptrtoint i32* %289 to i64
  %293 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %29, i64 0, i32 0, i32 1
  %294 = bitcast i32** %293 to i64*
  store i64 %292, i64* %294, align 8
  %295 = bitcast i32* %289 to i8*
  call void @_ZdlPv(i8* %295) #12
  br label %296

296:                                              ; preds = %287, %291
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %276) #11
  %297 = bitcast %"class.std::__1::vector.126"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %297) #11
  %298 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 8, i32 2
  call fastcc void @_ZN7web_app12_GLOBAL__N_116GetSquareSizePxsERKNSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE(%"class.std::__1::vector.126"* nonnull sret %32, %"class.std::__1::map"* dereferenceable(24) %298)
  %299 = getelementptr inbounds %"struct.std::__1::less.167", %"struct.std::__1::less.167"* %33, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %299) #11
  call void @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEEC2EOS9_RKS5_(%"class.base::internal::flat_tree"* nonnull %31, %"class.std::__1::vector.126"* nonnull dereferenceable(24) %32, %"struct.std::__1::less.167"* nonnull dereferenceable(1) %33)
  call void @_ZN7web_app6WebApp22SetDownloadedIconSizesEN5blink5mojom29ManifestImageResource_PurposeEN4base8internal9flat_treeIiNS4_8identityENSt3__14lessIvEENS8_6vectorIiNS8_9allocatorIiEEEEEE(%"class.web_app::WebApp"* %1, i32 1, %"class.base::internal::flat_tree"* nonnull %31) #11
  %300 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %31, i64 0, i32 0, i32 0, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = icmp eq i32* %301, null
  br i1 %302, label %308, label %303

303:                                              ; preds = %296
  %304 = ptrtoint i32* %301 to i64
  %305 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %31, i64 0, i32 0, i32 0, i32 1
  %306 = bitcast i32** %305 to i64*
  store i64 %304, i64* %306, align 8
  %307 = bitcast i32* %301 to i8*
  call void @_ZdlPv(i8* %307) #12
  br label %308

308:                                              ; preds = %296, %303
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %299) #11
  %309 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %32, i64 0, i32 0, i32 0
  %310 = load i32*, i32** %309, align 8
  %311 = icmp eq i32* %310, null
  br i1 %311, label %317, label %312

312:                                              ; preds = %308
  %313 = ptrtoint i32* %310 to i64
  %314 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %32, i64 0, i32 0, i32 1
  %315 = bitcast i32** %314 to i64*
  store i64 %313, i64* %315, align 8
  %316 = bitcast i32* %310 to i8*
  call void @_ZdlPv(i8* %316) #12
  br label %317

317:                                              ; preds = %308, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %297) #11
  %318 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 9
  %319 = load i8, i8* %318, align 8, !range !2
  %320 = icmp ne i8 %319, 0
  call void @_ZN7web_app6WebApp18SetIsGeneratedIconEb(%"class.web_app::WebApp"* %1, i1 zeroext %320) #11
  %321 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 21
  %322 = bitcast %"class.std::__1::vector.81"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %322, i8 0, i64 24, i1 false) #11
  %323 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 21, i32 0, i32 1
  %324 = bitcast %struct.WebApplicationShortcutsMenuItemInfo** %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = bitcast %"class.std::__1::vector.81"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = sub i64 %325, %327
  %329 = sdiv exact i64 %328, 216
  %330 = icmp eq i64 %328, 0
  %331 = inttoptr i64 %327 to %struct.WebApplicationShortcutsMenuItemInfo*
  %332 = inttoptr i64 %325 to %struct.WebApplicationShortcutsMenuItemInfo*
  br i1 %330, label %358, label %333

333:                                              ; preds = %317
  %334 = icmp ugt i64 %329, 85401592933840516
  br i1 %334, label %335, label %337

335:                                              ; preds = %333
  %336 = bitcast %"class.std::__1::vector.81"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %336) #13
  unreachable

337:                                              ; preds = %333
  %338 = call i8* @_Znwm(i64 %328) #12
  %339 = bitcast i8* %338 to %struct.WebApplicationShortcutsMenuItemInfo*
  %340 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %34, i64 0, i32 0, i32 1
  %341 = bitcast %struct.WebApplicationShortcutsMenuItemInfo** %340 to i8**
  store i8* %338, i8** %341, align 8
  %342 = bitcast %"class.std::__1::vector.81"* %34 to i8**
  store i8* %338, i8** %342, align 8
  %343 = getelementptr inbounds %struct.WebApplicationShortcutsMenuItemInfo, %struct.WebApplicationShortcutsMenuItemInfo* %339, i64 %329
  %344 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %34, i64 0, i32 0, i32 2, i32 0, i32 0
  store %struct.WebApplicationShortcutsMenuItemInfo* %343, %struct.WebApplicationShortcutsMenuItemInfo** %344, align 8
  %345 = bitcast %struct.WebApplicationShortcutsMenuItemInfo** %340 to i64*
  %346 = ptrtoint i8* %338 to i64
  %347 = icmp eq %struct.WebApplicationShortcutsMenuItemInfo* %331, %332
  br i1 %347, label %356, label %348

348:                                              ; preds = %337, %348
  %349 = phi %struct.WebApplicationShortcutsMenuItemInfo* [ %352, %348 ], [ %339, %337 ]
  %350 = phi %struct.WebApplicationShortcutsMenuItemInfo* [ %351, %348 ], [ %331, %337 ]
  call void @_ZN35WebApplicationShortcutsMenuItemInfoC1ERKS_(%struct.WebApplicationShortcutsMenuItemInfo* %349, %struct.WebApplicationShortcutsMenuItemInfo* dereferenceable(216) %350) #11
  %351 = getelementptr inbounds %struct.WebApplicationShortcutsMenuItemInfo, %struct.WebApplicationShortcutsMenuItemInfo* %350, i64 1
  %352 = getelementptr inbounds %struct.WebApplicationShortcutsMenuItemInfo, %struct.WebApplicationShortcutsMenuItemInfo* %349, i64 1
  %353 = icmp eq %struct.WebApplicationShortcutsMenuItemInfo* %351, %332
  br i1 %353, label %354, label %348

354:                                              ; preds = %348
  %355 = ptrtoint %struct.WebApplicationShortcutsMenuItemInfo* %352 to i64
  br label %356

356:                                              ; preds = %354, %337
  %357 = phi i64 [ %346, %337 ], [ %355, %354 ]
  store i64 %357, i64* %345, align 8
  br label %358

358:                                              ; preds = %317, %356
  call void @_ZN7web_app6WebApp25SetShortcutsMenuItemInfosENSt3__16vectorI35WebApplicationShortcutsMenuItemInfoNS1_9allocatorIS3_EEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::vector.81"* nonnull %34) #11
  %359 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %34, i64 0, i32 0, i32 0
  %360 = load %struct.WebApplicationShortcutsMenuItemInfo*, %struct.WebApplicationShortcutsMenuItemInfo** %359, align 8
  %361 = icmp eq %struct.WebApplicationShortcutsMenuItemInfo* %360, null
  br i1 %361, label %376, label %362

362:                                              ; preds = %358
  %363 = bitcast %struct.WebApplicationShortcutsMenuItemInfo* %360 to i8*
  %364 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %34, i64 0, i32 0, i32 1
  %365 = load %struct.WebApplicationShortcutsMenuItemInfo*, %struct.WebApplicationShortcutsMenuItemInfo** %364, align 8
  %366 = icmp eq %struct.WebApplicationShortcutsMenuItemInfo* %365, %360
  br i1 %366, label %374, label %367

367:                                              ; preds = %362, %367
  %368 = phi %struct.WebApplicationShortcutsMenuItemInfo* [ %369, %367 ], [ %365, %362 ]
  %369 = getelementptr inbounds %struct.WebApplicationShortcutsMenuItemInfo, %struct.WebApplicationShortcutsMenuItemInfo* %368, i64 -1
  call void @_ZN35WebApplicationShortcutsMenuItemInfoD1Ev(%struct.WebApplicationShortcutsMenuItemInfo* %369) #11
  %370 = icmp eq %struct.WebApplicationShortcutsMenuItemInfo* %369, %360
  br i1 %370, label %371, label %367

371:                                              ; preds = %367
  %372 = bitcast %"class.std::__1::vector.81"* %34 to i8**
  %373 = load i8*, i8** %372, align 8
  br label %374

374:                                              ; preds = %371, %362
  %375 = phi i8* [ %373, %371 ], [ %363, %362 ]
  store %struct.WebApplicationShortcutsMenuItemInfo* %360, %struct.WebApplicationShortcutsMenuItemInfo** %364, align 8
  call void @_ZdlPv(i8* %375) #12
  br label %376

376:                                              ; preds = %358, %374
  %377 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 22
  %378 = bitcast %"class.std::__1::vector.126"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378)
  %379 = bitcast %"class.std::__1::vector.126"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %379)
  %380 = bitcast %"class.std::__1::vector.126"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %380)
  %381 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %35, i64 0, i32 0, i32 1
  %382 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %35, i64 0, i32 0, i32 2, i32 0, i32 0
  %383 = bitcast %"class.std::__1::vector.133"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %383, i8 0, i64 24, i1 false) #11, !alias.scope !3
  %384 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 22, i32 0, i32 1
  %385 = bitcast %struct.IconBitmaps** %384 to i64*
  %386 = load i64, i64* %385, align 8, !noalias !3
  %387 = bitcast %"class.std::__1::vector.95"* %377 to i64*
  %388 = load i64, i64* %387, align 8, !noalias !3
  %389 = sub i64 %386, %388
  %390 = sdiv exact i64 %389, 72
  call void @_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector.133"* nonnull %35, i64 %390) #11
  %391 = getelementptr inbounds %"class.std::__1::vector.95", %"class.std::__1::vector.95"* %377, i64 0, i32 0, i32 0
  %392 = load %struct.IconBitmaps*, %struct.IconBitmaps** %391, align 8, !noalias !3
  %393 = load %struct.IconBitmaps*, %struct.IconBitmaps** %384, align 8, !noalias !3
  %394 = icmp eq %struct.IconBitmaps* %392, %393
  br i1 %394, label %440, label %395

395:                                              ; preds = %376
  %396 = bitcast %struct.IconSizes* %13 to i8*
  %397 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %14, i64 0, i32 0, i32 0
  %398 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %14, i64 0, i32 0, i32 1
  %399 = bitcast i32** %398 to i64*
  %400 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %15, i64 0, i32 0, i32 0
  %401 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %15, i64 0, i32 0, i32 1
  %402 = bitcast i32** %401 to i64*
  %403 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %16, i64 0, i32 0, i32 0
  %404 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %16, i64 0, i32 0, i32 1
  %405 = bitcast i32** %404 to i64*
  %406 = bitcast %struct.IconSizes** %381 to i64*
  br label %407

407:                                              ; preds = %437, %395
  %408 = phi %struct.IconBitmaps* [ %392, %395 ], [ %438, %437 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %396) #11, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %396, i8 -86, i64 72, i1 false) #11, !noalias !3
  call void @_ZN9IconSizesC1Ev(%struct.IconSizes* nonnull %13) #11
  %409 = getelementptr inbounds %struct.IconBitmaps, %struct.IconBitmaps* %408, i64 0, i32 0
  call fastcc void @_ZN7web_app12_GLOBAL__N_116GetSquareSizePxsERKNSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE(%"class.std::__1::vector.126"* nonnull sret %14, %"class.std::__1::map"* dereferenceable(24) %409) #11
  call void @_ZN9IconSizes18SetSizesForPurposeEN5blink5mojom29ManifestImageResource_PurposeENSt3__16vectorIiNS3_9allocatorIiEEEE(%struct.IconSizes* nonnull %13, i32 0, %"class.std::__1::vector.126"* nonnull %14) #11
  %410 = load i32*, i32** %397, align 8, !noalias !3
  %411 = icmp eq i32* %410, null
  br i1 %411, label %415, label %412

412:                                              ; preds = %407
  %413 = ptrtoint i32* %410 to i64
  store i64 %413, i64* %399, align 8, !noalias !3
  %414 = bitcast i32* %410 to i8*
  call void @_ZdlPv(i8* %414) #12
  br label %415

415:                                              ; preds = %412, %407
  %416 = getelementptr inbounds %struct.IconBitmaps, %struct.IconBitmaps* %408, i64 0, i32 1
  call fastcc void @_ZN7web_app12_GLOBAL__N_116GetSquareSizePxsERKNSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE(%"class.std::__1::vector.126"* nonnull sret %15, %"class.std::__1::map"* dereferenceable(24) %416) #11
  call void @_ZN9IconSizes18SetSizesForPurposeEN5blink5mojom29ManifestImageResource_PurposeENSt3__16vectorIiNS3_9allocatorIiEEEE(%struct.IconSizes* nonnull %13, i32 2, %"class.std::__1::vector.126"* nonnull %15) #11
  %417 = load i32*, i32** %400, align 8, !noalias !3
  %418 = icmp eq i32* %417, null
  br i1 %418, label %422, label %419

419:                                              ; preds = %415
  %420 = ptrtoint i32* %417 to i64
  store i64 %420, i64* %402, align 8, !noalias !3
  %421 = bitcast i32* %417 to i8*
  call void @_ZdlPv(i8* %421) #12
  br label %422

422:                                              ; preds = %419, %415
  %423 = getelementptr inbounds %struct.IconBitmaps, %struct.IconBitmaps* %408, i64 0, i32 2
  call fastcc void @_ZN7web_app12_GLOBAL__N_116GetSquareSizePxsERKNSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE(%"class.std::__1::vector.126"* nonnull sret %16, %"class.std::__1::map"* dereferenceable(24) %423) #11
  call void @_ZN9IconSizes18SetSizesForPurposeEN5blink5mojom29ManifestImageResource_PurposeENSt3__16vectorIiNS3_9allocatorIiEEEE(%struct.IconSizes* nonnull %13, i32 1, %"class.std::__1::vector.126"* nonnull %16) #11
  %424 = load i32*, i32** %403, align 8, !noalias !3
  %425 = icmp eq i32* %424, null
  br i1 %425, label %429, label %426

426:                                              ; preds = %422
  %427 = ptrtoint i32* %424 to i64
  store i64 %427, i64* %405, align 8, !noalias !3
  %428 = bitcast i32* %424 to i8*
  call void @_ZdlPv(i8* %428) #12
  br label %429

429:                                              ; preds = %426, %422
  %430 = load %struct.IconSizes*, %struct.IconSizes** %381, align 8, !alias.scope !3
  %431 = load %struct.IconSizes*, %struct.IconSizes** %382, align 8, !alias.scope !3
  %432 = icmp ult %struct.IconSizes* %430, %431
  br i1 %432, label %433, label %436

433:                                              ; preds = %429
  call void @_ZN9IconSizesC1EOS_(%struct.IconSizes* %430, %struct.IconSizes* nonnull dereferenceable(72) %13) #11
  %434 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %430, i64 1
  %435 = ptrtoint %struct.IconSizes* %434 to i64
  store i64 %435, i64* %406, align 8, !alias.scope !3
  br label %437

436:                                              ; preds = %429
  call void @_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.133"* nonnull %35, %struct.IconSizes* nonnull dereferenceable(72) %13) #11
  br label %437

437:                                              ; preds = %436, %433
  call void @_ZN9IconSizesD1Ev(%struct.IconSizes* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %396) #11, !noalias !3
  %438 = getelementptr inbounds %struct.IconBitmaps, %struct.IconBitmaps* %408, i64 1
  %439 = icmp eq %struct.IconBitmaps* %438, %393
  br i1 %439, label %440, label %407

440:                                              ; preds = %437, %376
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %379)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %380)
  call void @_ZN7web_app6WebApp36SetDownloadedShortcutsMenuIconsSizesENSt3__16vectorI9IconSizesNS1_9allocatorIS3_EEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::vector.133"* nonnull %35) #11
  %441 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %35, i64 0, i32 0, i32 0
  %442 = load %struct.IconSizes*, %struct.IconSizes** %441, align 8
  %443 = icmp eq %struct.IconSizes* %442, null
  br i1 %443, label %457, label %444

444:                                              ; preds = %440
  %445 = bitcast %struct.IconSizes* %442 to i8*
  %446 = load %struct.IconSizes*, %struct.IconSizes** %381, align 8
  %447 = icmp eq %struct.IconSizes* %446, %442
  br i1 %447, label %455, label %448

448:                                              ; preds = %444, %448
  %449 = phi %struct.IconSizes* [ %450, %448 ], [ %446, %444 ]
  %450 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %449, i64 -1
  call void @_ZN9IconSizesD1Ev(%struct.IconSizes* %450) #11
  %451 = icmp eq %struct.IconSizes* %450, %442
  br i1 %451, label %452, label %448

452:                                              ; preds = %448
  %453 = bitcast %"class.std::__1::vector.133"* %35 to i8**
  %454 = load i8*, i8** %453, align 8
  br label %455

455:                                              ; preds = %452, %444
  %456 = phi i8* [ %454, %452 ], [ %445, %444 ]
  store %struct.IconSizes* %442, %struct.IconSizes** %381, align 8
  call void @_ZdlPv(i8* %456) #12
  br label %457

457:                                              ; preds = %440, %455
  %458 = bitcast %"class.std::__1::vector.140"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %458)
  %459 = bitcast %"class.std::__1::vector.140"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %459) #11
  %460 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %7, i64 0, i32 0, i32 0
  %461 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %7, i64 0, i32 0, i32 1
  %462 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %459, i8 0, i64 24, i1 false) #11
  %463 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 18, i32 0, i32 0
  %464 = load %"struct.blink::Manifest::FileHandler"*, %"struct.blink::Manifest::FileHandler"** %463, align 8
  %465 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 18, i32 0, i32 1
  %466 = load %"struct.blink::Manifest::FileHandler"*, %"struct.blink::Manifest::FileHandler"** %465, align 8
  %467 = icmp eq %"struct.blink::Manifest::FileHandler"* %464, %466
  br i1 %467, label %468, label %471

468:                                              ; preds = %457
  %469 = bitcast %"class.std::__1::vector.140"* %7 to i64*
  %470 = bitcast %"struct.apps::FileHandler"** %461 to i64*
  br label %608

471:                                              ; preds = %457
  %472 = bitcast %"struct.apps::FileHandler"* %8 to i8*
  %473 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %8, i64 0, i32 0
  %474 = bitcast %"struct.apps::FileHandler::AcceptEntry"* %9 to i8*
  %475 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %9, i64 0, i32 1
  %477 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %478 = bitcast %"struct.apps::FileHandler::AcceptEntry"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %479 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %478, i64 0, i32 1, i32 0
  %480 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %481 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %482 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %481, i64 0, i32 1, i32 0
  %483 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %8, i64 0, i32 1, i32 0, i32 1
  %485 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %8, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %486 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %8, i64 0, i32 1
  %487 = bitcast %"struct.apps::FileHandler::AcceptEntry"** %484 to i64*
  %488 = bitcast %"struct.apps::FileHandler"** %461 to i64*
  %489 = bitcast %"class.std::__1::vector.140"* %7 to i64*
  %490 = getelementptr inbounds %"class.web_app::WebApp", %"class.web_app::WebApp"* %1, i64 0, i32 6
  br label %491

491:                                              ; preds = %605, %471
  %492 = phi %"struct.blink::Manifest::FileHandler"* [ %464, %471 ], [ %606, %605 ]
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %472) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %472, i8 -86, i64 144, i1 false) #11
  call void @_ZN4apps11FileHandlerC1Ev(%"struct.apps::FileHandler"* nonnull %8) #11
  %493 = getelementptr inbounds %"struct.blink::Manifest::FileHandler", %"struct.blink::Manifest::FileHandler"* %492, i64 0, i32 0
  %494 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* nonnull %473, %class.GURL* dereferenceable(120) %493) #11
  %495 = getelementptr inbounds %"struct.blink::Manifest::FileHandler", %"struct.blink::Manifest::FileHandler"* %492, i64 0, i32 2, i32 0, i32 0
  %496 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %495, align 8
  %497 = getelementptr inbounds %"struct.blink::Manifest::FileHandler", %"struct.blink::Manifest::FileHandler"* %492, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %498 = icmp eq %"class.std::__1::__tree_end_node"* %496, %497
  br i1 %498, label %499, label %513

499:                                              ; preds = %577, %491
  %500 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %461, align 8
  %501 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %462, align 8
  %502 = icmp ult %"struct.apps::FileHandler"* %500, %501
  br i1 %502, label %503, label %506

503:                                              ; preds = %499
  call void @_ZN4apps11FileHandlerC1ERKS0_(%"struct.apps::FileHandler"* %500, %"struct.apps::FileHandler"* nonnull dereferenceable(144) %8) #11
  %504 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %500, i64 1
  %505 = ptrtoint %"struct.apps::FileHandler"* %504 to i64
  store i64 %505, i64* %488, align 8
  br label %508

506:                                              ; preds = %499
  call void @_ZNSt3__16vectorIN4apps11FileHandlerENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.140"* nonnull %7, %"struct.apps::FileHandler"* nonnull dereferenceable(144) %8) #11
  %507 = load i64, i64* %488, align 8
  br label %508

508:                                              ; preds = %506, %503
  %509 = phi i64 [ %505, %503 ], [ %507, %506 ]
  %510 = load i64, i64* %489, align 8
  %511 = sub i64 %509, %510
  %512 = icmp eq i64 %511, 1440
  br i1 %512, label %602, label %605

513:                                              ; preds = %491, %577
  %514 = phi %"class.std::__1::__tree_end_node"* [ %578, %577 ], [ %496, %491 ]
  %515 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %514, i64 4
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %474) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %474, i8 -86, i64 48, i1 false) #11
  call void @_ZN4apps11FileHandler11AcceptEntryC1Ev(%"struct.apps::FileHandler::AcceptEntry"* nonnull %9) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %477) #11
  %516 = bitcast %"class.std::__1::__tree_end_node"* %515 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %517 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %516, i64 0, i32 1, i32 1
  %518 = load i8, i8* %517, align 1
  %519 = icmp slt i8 %518, 0
  %520 = bitcast %"class.std::__1::__tree_end_node"* %515 to i16**
  %521 = load i16*, i16** %520, align 8
  %522 = bitcast %"class.std::__1::__tree_end_node"* %515 to i16*
  %523 = select i1 %519, i16* %521, i16* %522
  %524 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %514, i64 5
  %525 = bitcast %"class.std::__1::__tree_end_node"* %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = zext i8 %518 to i64
  %528 = select i1 %519, i64 %526, i64 %527
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i16* %523, i64 %528) #11
  %529 = load i8, i8* %479, align 1
  %530 = icmp slt i8 %529, 0
  br i1 %530, label %531, label %533

531:                                              ; preds = %513
  %532 = load i8*, i8** %475, align 8
  call void @_ZdlPv(i8* %532) #12
  br label %533

533:                                              ; preds = %531, %513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %474, i8* nonnull align 8 %477, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %477) #11
  %534 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %514, i64 7
  %535 = bitcast %"class.std::__1::__tree_end_node"* %534 to %"class.std::__1::basic_string.2"**
  %536 = load %"class.std::__1::basic_string.2"*, %"class.std::__1::basic_string.2"** %535, align 8
  %537 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %514, i64 8
  %538 = bitcast %"class.std::__1::__tree_end_node"* %537 to %"class.std::__1::basic_string.2"**
  %539 = load %"class.std::__1::basic_string.2"*, %"class.std::__1::basic_string.2"** %538, align 8
  %540 = icmp eq %"class.std::__1::basic_string.2"* %536, %539
  br i1 %540, label %541, label %580

541:                                              ; preds = %599, %533
  %542 = load %"struct.apps::FileHandler::AcceptEntry"*, %"struct.apps::FileHandler::AcceptEntry"** %484, align 8
  %543 = load %"struct.apps::FileHandler::AcceptEntry"*, %"struct.apps::FileHandler::AcceptEntry"** %485, align 8
  %544 = icmp ult %"struct.apps::FileHandler::AcceptEntry"* %542, %543
  br i1 %544, label %545, label %548

545:                                              ; preds = %541
  call void @_ZN4apps11FileHandler11AcceptEntryC1ERKS1_(%"struct.apps::FileHandler::AcceptEntry"* %542, %"struct.apps::FileHandler::AcceptEntry"* nonnull dereferenceable(48) %9) #11
  %546 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %542, i64 1
  %547 = ptrtoint %"struct.apps::FileHandler::AcceptEntry"* %546 to i64
  store i64 %547, i64* %487, align 8
  br label %549

548:                                              ; preds = %541
  call void @_ZNSt3__16vectorIN4apps11FileHandler11AcceptEntryENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.142"* %486, %"struct.apps::FileHandler::AcceptEntry"* nonnull dereferenceable(48) %9) #11
  br label %549

549:                                              ; preds = %548, %545
  call void @_ZN4apps11FileHandler11AcceptEntryD1Ev(%"struct.apps::FileHandler::AcceptEntry"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %474) #11
  %550 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %514, i64 1, i32 0
  %551 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %550, align 8
  %552 = icmp eq %"class.std::__1::__tree_node_base"* %551, null
  br i1 %552, label %553, label %561

553:                                              ; preds = %549
  %554 = bitcast %"class.std::__1::__tree_end_node"* %514 to %"class.std::__1::__tree_node_base"*
  %555 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %514, i64 2
  %556 = bitcast %"class.std::__1::__tree_end_node"* %555 to %"class.std::__1::__tree_end_node"**
  %557 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %556, align 8
  %558 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %557, i64 0, i32 0
  %559 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %558, align 8
  %560 = icmp eq %"class.std::__1::__tree_node_base"* %559, %554
  br i1 %560, label %577, label %568

561:                                              ; preds = %549, %561
  %562 = phi %"class.std::__1::__tree_node_base"* [ %564, %561 ], [ %551, %549 ]
  %563 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %562, i64 0, i32 0, i32 0
  %564 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %563, align 8
  %565 = icmp eq %"class.std::__1::__tree_node_base"* %564, null
  br i1 %565, label %566, label %561

566:                                              ; preds = %561
  %567 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %562, i64 0, i32 0
  br label %577

568:                                              ; preds = %553, %568
  %569 = phi %"class.std::__1::__tree_end_node"** [ %572, %568 ], [ %556, %553 ]
  %570 = bitcast %"class.std::__1::__tree_end_node"** %569 to %"class.std::__1::__tree_node_base"**
  %571 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %570, align 8
  %572 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %571, i64 0, i32 2
  %573 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %572, align 8
  %574 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %573, i64 0, i32 0
  %575 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %574, align 8
  %576 = icmp eq %"class.std::__1::__tree_node_base"* %575, %571
  br i1 %576, label %577, label %568

577:                                              ; preds = %568, %566, %553
  %578 = phi %"class.std::__1::__tree_end_node"* [ %567, %566 ], [ %557, %553 ], [ %573, %568 ]
  %579 = icmp eq %"class.std::__1::__tree_end_node"* %578, %497
  br i1 %579, label %499, label %513

580:                                              ; preds = %533, %599
  %581 = phi %"class.std::__1::basic_string.2"* [ %600, %599 ], [ %536, %533 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %480) #11
  %582 = bitcast %"class.std::__1::basic_string.2"* %581 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %583 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %582, i64 0, i32 1, i32 1
  %584 = load i8, i8* %583, align 1
  %585 = icmp slt i8 %584, 0
  %586 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %581, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load i16*, i16** %586, align 8
  %588 = bitcast %"class.std::__1::basic_string.2"* %581 to i16*
  %589 = select i1 %585, i16* %587, i16* %588
  %590 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %581, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %591 = load i64, i64* %590, align 8
  %592 = zext i8 %584 to i64
  %593 = select i1 %585, i64 %591, i64 %592
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %11, i16* %589, i64 %593) #11
  %594 = call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.144"* %476, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #11
  %595 = load i8, i8* %482, align 1
  %596 = icmp slt i8 %595, 0
  br i1 %596, label %597, label %599

597:                                              ; preds = %580
  %598 = load i8*, i8** %483, align 8
  call void @_ZdlPv(i8* %598) #12
  br label %599

599:                                              ; preds = %597, %580
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %480) #11
  %600 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %581, i64 1
  %601 = icmp eq %"class.std::__1::basic_string.2"* %600, %539
  br i1 %601, label %541, label %580

602:                                              ; preds = %508
  %603 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %490, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN7web_app12_GLOBAL__N_113kChromeSchemeE, i64 0, i64 0), i64 6) #11
  br i1 %603, label %605, label %604

604:                                              ; preds = %602
  call void @_ZN4apps11FileHandlerD1Ev(%"struct.apps::FileHandler"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %472) #11
  br label %608

605:                                              ; preds = %602, %508
  call void @_ZN4apps11FileHandlerD1Ev(%"struct.apps::FileHandler"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %472) #11
  %606 = getelementptr inbounds %"struct.blink::Manifest::FileHandler", %"struct.blink::Manifest::FileHandler"* %492, i64 1
  %607 = icmp eq %"struct.blink::Manifest::FileHandler"* %606, %466
  br i1 %607, label %608, label %491

608:                                              ; preds = %605, %604, %468
  %609 = phi i64* [ %470, %468 ], [ %488, %604 ], [ %488, %605 ]
  %610 = phi i64* [ %469, %468 ], [ %489, %604 ], [ %489, %605 ]
  %611 = load i64, i64* %610, align 8
  %612 = bitcast %"class.std::__1::vector.140"* %12 to i64*
  store i64 %611, i64* %612, align 8
  %613 = load i64, i64* %609, align 8
  %614 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %12, i64 0, i32 0, i32 1
  %615 = bitcast %"struct.apps::FileHandler"** %614 to i64*
  store i64 %613, i64* %615, align 8
  %616 = bitcast %"struct.apps::FileHandler"** %462 to i64*
  %617 = load i64, i64* %616, align 8
  %618 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %619 = bitcast %"struct.apps::FileHandler"** %618 to i64*
  store i64 %617, i64* %619, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %459, i8 0, i64 24, i1 false) #11
  call void @_ZN7web_app6WebApp15SetFileHandlersENSt3__16vectorIN4apps11FileHandlerENS1_9allocatorIS4_EEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::vector.140"* nonnull %12) #11
  %620 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %12, i64 0, i32 0, i32 0
  %621 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %620, align 8
  %622 = icmp eq %"struct.apps::FileHandler"* %621, null
  br i1 %622, label %636, label %623

623:                                              ; preds = %608
  %624 = bitcast %"struct.apps::FileHandler"* %621 to i8*
  %625 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %614, align 8
  %626 = icmp eq %"struct.apps::FileHandler"* %625, %621
  br i1 %626, label %634, label %627

627:                                              ; preds = %623, %627
  %628 = phi %"struct.apps::FileHandler"* [ %629, %627 ], [ %625, %623 ]
  %629 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %628, i64 -1
  call void @_ZN4apps11FileHandlerD1Ev(%"struct.apps::FileHandler"* %629) #11
  %630 = icmp eq %"struct.apps::FileHandler"* %629, %621
  br i1 %630, label %631, label %627

631:                                              ; preds = %627
  %632 = bitcast %"class.std::__1::vector.140"* %12 to i8**
  %633 = load i8*, i8** %632, align 8
  br label %634

634:                                              ; preds = %631, %623
  %635 = phi i8* [ %633, %631 ], [ %624, %623 ]
  store %"struct.apps::FileHandler"* %621, %"struct.apps::FileHandler"** %614, align 8
  call void @_ZdlPv(i8* %635) #12
  br label %636

636:                                              ; preds = %634, %608
  %637 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %460, align 8
  %638 = icmp eq %"struct.apps::FileHandler"* %637, null
  br i1 %638, label %652, label %639

639:                                              ; preds = %636
  %640 = bitcast %"struct.apps::FileHandler"* %637 to i8*
  %641 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %461, align 8
  %642 = icmp eq %"struct.apps::FileHandler"* %641, %637
  br i1 %642, label %650, label %643

643:                                              ; preds = %639, %643
  %644 = phi %"struct.apps::FileHandler"* [ %645, %643 ], [ %641, %639 ]
  %645 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %644, i64 -1
  call void @_ZN4apps11FileHandlerD1Ev(%"struct.apps::FileHandler"* %645) #11
  %646 = icmp eq %"struct.apps::FileHandler"* %645, %637
  br i1 %646, label %647, label %643

647:                                              ; preds = %643
  %648 = bitcast %"class.std::__1::vector.140"* %7 to i8**
  %649 = load i8*, i8** %648, align 8
  br label %650

650:                                              ; preds = %647, %639
  %651 = phi i8* [ %649, %647 ], [ %640, %639 ]
  store %"struct.apps::FileHandler"* %637, %"struct.apps::FileHandler"** %461, align 8
  call void @_ZdlPv(i8* %651) #12
  br label %652

652:                                              ; preds = %636, %650
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %459) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %458)
  %653 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %654 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %653, i8 0, i64 232, i1 false) #11
  %655 = load i8, i8* %654, align 8, !range !2
  %656 = icmp eq i8 %655, 0
  br i1 %656, label %660, label %657

657:                                              ; preds = %652
  %658 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  %659 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4apps11ShareTargetC1ERKS0_(%"struct.apps::ShareTarget"* %659, %"struct.apps::ShareTarget"* dereferenceable(224) %658) #11
  store i8 1, i8* %653, align 8
  br label %660

660:                                              ; preds = %652, %657
  call void @_ZN7web_app6WebApp14SetShareTargetEN4absl8optionalIN4apps11ShareTargetEEE(%"class.web_app::WebApp"* %1, %"class.absl::optional.62"* nonnull %36) #11
  %661 = load i8, i8* %653, align 8, !range !2
  %662 = icmp eq i8 %661, 0
  br i1 %662, label %665, label %663

663:                                              ; preds = %660
  %664 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4apps11ShareTargetD1Ev(%"struct.apps::ShareTarget"* %664) #11
  store i8 0, i8* %653, align 8
  br label %665

665:                                              ; preds = %660, %663
  %666 = bitcast %"class.std::__1::vector.155"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %666)
  %667 = bitcast %"class.std::__1::vector.155"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %667) #11
  %668 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %3, i64 0, i32 0, i32 0
  %669 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %3, i64 0, i32 0, i32 1
  %670 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %667, i8 0, i64 24, i1 false) #11
  %671 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 23, i32 0, i32 0
  %672 = load %"struct.blink::Manifest::ProtocolHandler"*, %"struct.blink::Manifest::ProtocolHandler"** %671, align 8
  %673 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 23, i32 0, i32 1
  %674 = load %"struct.blink::Manifest::ProtocolHandler"*, %"struct.blink::Manifest::ProtocolHandler"** %673, align 8
  %675 = icmp eq %"struct.blink::Manifest::ProtocolHandler"* %672, %674
  br i1 %675, label %690, label %676

676:                                              ; preds = %665
  %677 = bitcast %"struct.apps::ProtocolHandlerInfo"* %4 to i8*
  %678 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %679 = bitcast %"struct.apps::ProtocolHandlerInfo"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %680 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %679, i64 0, i32 1, i32 0
  %681 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %682 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %4, i64 0, i32 1
  %683 = bitcast %"struct.apps::ProtocolHandlerInfo"** %669 to i64*
  br label %757

684:                                              ; preds = %785
  %685 = load i64, i64* %683, align 8
  %686 = bitcast %"class.std::__1::vector.155"* %3 to i64*
  %687 = load i64, i64* %686, align 8
  %688 = inttoptr i64 %687 to %"struct.apps::ProtocolHandlerInfo"*
  %689 = inttoptr i64 %685 to %"struct.apps::ProtocolHandlerInfo"*
  br label %690

690:                                              ; preds = %684, %665
  %691 = phi %"struct.apps::ProtocolHandlerInfo"* [ %689, %684 ], [ null, %665 ]
  %692 = phi %"struct.apps::ProtocolHandlerInfo"* [ %688, %684 ], [ null, %665 ]
  %693 = phi i64 [ %687, %684 ], [ 0, %665 ]
  %694 = phi i64 [ %685, %684 ], [ 0, %665 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %666, i8 0, i64 24, i1 false) #11
  %695 = sub i64 %694, %693
  %696 = sdiv exact i64 %695, 144
  %697 = icmp eq i64 %695, 0
  br i1 %697, label %723, label %698

698:                                              ; preds = %690
  %699 = icmp ugt i64 %696, 128102389400760775
  br i1 %699, label %700, label %702

700:                                              ; preds = %698
  %701 = bitcast %"class.std::__1::vector.155"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %701) #13
  unreachable

702:                                              ; preds = %698
  %703 = call i8* @_Znwm(i64 %695) #12
  %704 = bitcast i8* %703 to %"struct.apps::ProtocolHandlerInfo"*
  %705 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %6, i64 0, i32 0, i32 1
  %706 = bitcast %"struct.apps::ProtocolHandlerInfo"** %705 to i8**
  store i8* %703, i8** %706, align 8
  %707 = bitcast %"class.std::__1::vector.155"* %6 to i8**
  store i8* %703, i8** %707, align 8
  %708 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %704, i64 %696
  %709 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.apps::ProtocolHandlerInfo"* %708, %"struct.apps::ProtocolHandlerInfo"** %709, align 8
  %710 = bitcast %"struct.apps::ProtocolHandlerInfo"** %705 to i64*
  %711 = ptrtoint i8* %703 to i64
  %712 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %692, %691
  br i1 %712, label %721, label %713

713:                                              ; preds = %702, %713
  %714 = phi %"struct.apps::ProtocolHandlerInfo"* [ %717, %713 ], [ %704, %702 ]
  %715 = phi %"struct.apps::ProtocolHandlerInfo"* [ %716, %713 ], [ %692, %702 ]
  call void @_ZN4apps19ProtocolHandlerInfoC1ERKS0_(%"struct.apps::ProtocolHandlerInfo"* %714, %"struct.apps::ProtocolHandlerInfo"* dereferenceable(144) %715) #11
  %716 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %715, i64 1
  %717 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %714, i64 1
  %718 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %716, %691
  br i1 %718, label %719, label %713

719:                                              ; preds = %713
  %720 = ptrtoint %"struct.apps::ProtocolHandlerInfo"* %717 to i64
  br label %721

721:                                              ; preds = %719, %702
  %722 = phi i64 [ %711, %702 ], [ %720, %719 ]
  store i64 %722, i64* %710, align 8
  br label %723

723:                                              ; preds = %721, %690
  call void @_ZN7web_app6WebApp19SetProtocolHandlersENSt3__16vectorIN4apps19ProtocolHandlerInfoENS1_9allocatorIS4_EEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::vector.155"* nonnull %6) #11
  %724 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %6, i64 0, i32 0, i32 0
  %725 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %724, align 8
  %726 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %725, null
  br i1 %726, label %741, label %727

727:                                              ; preds = %723
  %728 = bitcast %"struct.apps::ProtocolHandlerInfo"* %725 to i8*
  %729 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %6, i64 0, i32 0, i32 1
  %730 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %729, align 8
  %731 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %730, %725
  br i1 %731, label %739, label %732

732:                                              ; preds = %727, %732
  %733 = phi %"struct.apps::ProtocolHandlerInfo"* [ %734, %732 ], [ %730, %727 ]
  %734 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %733, i64 -1
  call void @_ZN4apps19ProtocolHandlerInfoD1Ev(%"struct.apps::ProtocolHandlerInfo"* %734) #11
  %735 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %734, %725
  br i1 %735, label %736, label %732

736:                                              ; preds = %732
  %737 = bitcast %"class.std::__1::vector.155"* %6 to i8**
  %738 = load i8*, i8** %737, align 8
  br label %739

739:                                              ; preds = %736, %727
  %740 = phi i8* [ %738, %736 ], [ %728, %727 ]
  store %"struct.apps::ProtocolHandlerInfo"* %725, %"struct.apps::ProtocolHandlerInfo"** %729, align 8
  call void @_ZdlPv(i8* %740) #12
  br label %741

741:                                              ; preds = %739, %723
  %742 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %668, align 8
  %743 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %742, null
  br i1 %743, label %788, label %744

744:                                              ; preds = %741
  %745 = bitcast %"struct.apps::ProtocolHandlerInfo"* %742 to i8*
  %746 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %669, align 8
  %747 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %746, %742
  br i1 %747, label %755, label %748

748:                                              ; preds = %744, %748
  %749 = phi %"struct.apps::ProtocolHandlerInfo"* [ %750, %748 ], [ %746, %744 ]
  %750 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %749, i64 -1
  call void @_ZN4apps19ProtocolHandlerInfoD1Ev(%"struct.apps::ProtocolHandlerInfo"* %750) #11
  %751 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %750, %742
  br i1 %751, label %752, label %748

752:                                              ; preds = %748
  %753 = bitcast %"class.std::__1::vector.155"* %3 to i8**
  %754 = load i8*, i8** %753, align 8
  br label %755

755:                                              ; preds = %752, %744
  %756 = phi i8* [ %754, %752 ], [ %745, %744 ]
  store %"struct.apps::ProtocolHandlerInfo"* %742, %"struct.apps::ProtocolHandlerInfo"** %669, align 8
  call void @_ZdlPv(i8* %756) #12
  br label %788

757:                                              ; preds = %785, %676
  %758 = phi %"struct.blink::Manifest::ProtocolHandler"* [ %672, %676 ], [ %786, %785 ]
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %677) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %677, i8 -86, i64 144, i1 false) #11
  call void @_ZN4apps19ProtocolHandlerInfoC1Ev(%"struct.apps::ProtocolHandlerInfo"* nonnull %4) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %678) #11
  %759 = bitcast %"struct.blink::Manifest::ProtocolHandler"* %758 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %760 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %759, i64 0, i32 1, i32 1
  %761 = load i8, i8* %760, align 1
  %762 = icmp slt i8 %761, 0
  %763 = getelementptr inbounds %"struct.blink::Manifest::ProtocolHandler", %"struct.blink::Manifest::ProtocolHandler"* %758, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %764 = load i16*, i16** %763, align 8
  %765 = bitcast %"struct.blink::Manifest::ProtocolHandler"* %758 to i16*
  %766 = select i1 %762, i16* %764, i16* %765
  %767 = getelementptr inbounds %"struct.blink::Manifest::ProtocolHandler", %"struct.blink::Manifest::ProtocolHandler"* %758, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %768 = load i64, i64* %767, align 8
  %769 = zext i8 %761 to i64
  %770 = select i1 %762, i64 %768, i64 %769
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i16* %766, i64 %770) #11
  %771 = load i8, i8* %680, align 1
  %772 = icmp slt i8 %771, 0
  br i1 %772, label %773, label %775

773:                                              ; preds = %757
  %774 = load i8*, i8** %681, align 8
  call void @_ZdlPv(i8* %774) #12
  br label %775

775:                                              ; preds = %773, %757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %677, i8* nonnull align 8 %678, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %678) #11
  %776 = getelementptr inbounds %"struct.blink::Manifest::ProtocolHandler", %"struct.blink::Manifest::ProtocolHandler"* %758, i64 0, i32 1
  %777 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %682, %class.GURL* dereferenceable(120) %776) #11
  %778 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %669, align 8
  %779 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %670, align 8
  %780 = icmp ult %"struct.apps::ProtocolHandlerInfo"* %778, %779
  br i1 %780, label %781, label %784

781:                                              ; preds = %775
  call void @_ZN4apps19ProtocolHandlerInfoC1ERKS0_(%"struct.apps::ProtocolHandlerInfo"* %778, %"struct.apps::ProtocolHandlerInfo"* nonnull dereferenceable(144) %4) #11
  %782 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %778, i64 1
  %783 = ptrtoint %"struct.apps::ProtocolHandlerInfo"* %782 to i64
  store i64 %783, i64* %683, align 8
  br label %785

784:                                              ; preds = %775
  call void @_ZNSt3__16vectorIN4apps19ProtocolHandlerInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.155"* nonnull %3, %"struct.apps::ProtocolHandlerInfo"* nonnull dereferenceable(144) %4) #11
  br label %785

785:                                              ; preds = %784, %781
  call void @_ZN4apps19ProtocolHandlerInfoD1Ev(%"struct.apps::ProtocolHandlerInfo"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %677) #11
  %786 = getelementptr inbounds %"struct.blink::Manifest::ProtocolHandler", %"struct.blink::Manifest::ProtocolHandler"* %758, i64 1
  %787 = icmp eq %"struct.blink::Manifest::ProtocolHandler"* %786, %674
  br i1 %787, label %684, label %757

788:                                              ; preds = %741, %755
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %667) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %666)
  %789 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 24
  call void @_ZN7web_app6WebApp23SetNoteTakingNewNoteUrlERK4GURL(%"class.web_app::WebApp"* %1, %class.GURL* dereferenceable(120) %789) #11
  %790 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 25
  %791 = bitcast %"class.std::__1::vector.109"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %791, i8 0, i64 24, i1 false) #11
  %792 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 25, i32 0, i32 1
  %793 = bitcast %"struct.apps::UrlHandlerInfo"** %792 to i64*
  %794 = load i64, i64* %793, align 8
  %795 = bitcast %"class.std::__1::vector.109"* %790 to i64*
  %796 = load i64, i64* %795, align 8
  %797 = sub i64 %794, %796
  %798 = sdiv exact i64 %797, 136
  %799 = icmp eq i64 %797, 0
  %800 = inttoptr i64 %796 to %"struct.apps::UrlHandlerInfo"*
  %801 = inttoptr i64 %794 to %"struct.apps::UrlHandlerInfo"*
  br i1 %799, label %827, label %802

802:                                              ; preds = %788
  %803 = icmp ugt i64 %798, 135637824071393761
  br i1 %803, label %804, label %806

804:                                              ; preds = %802
  %805 = bitcast %"class.std::__1::vector.109"* %37 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %805) #13
  unreachable

806:                                              ; preds = %802
  %807 = call i8* @_Znwm(i64 %797) #12
  %808 = bitcast i8* %807 to %"struct.apps::UrlHandlerInfo"*
  %809 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %37, i64 0, i32 0, i32 1
  %810 = bitcast %"struct.apps::UrlHandlerInfo"** %809 to i8**
  store i8* %807, i8** %810, align 8
  %811 = bitcast %"class.std::__1::vector.109"* %37 to i8**
  store i8* %807, i8** %811, align 8
  %812 = getelementptr inbounds %"struct.apps::UrlHandlerInfo", %"struct.apps::UrlHandlerInfo"* %808, i64 %798
  %813 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %37, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.apps::UrlHandlerInfo"* %812, %"struct.apps::UrlHandlerInfo"** %813, align 8
  %814 = bitcast %"struct.apps::UrlHandlerInfo"** %809 to i64*
  %815 = ptrtoint i8* %807 to i64
  %816 = icmp eq %"struct.apps::UrlHandlerInfo"* %800, %801
  br i1 %816, label %825, label %817

817:                                              ; preds = %806, %817
  %818 = phi %"struct.apps::UrlHandlerInfo"* [ %821, %817 ], [ %808, %806 ]
  %819 = phi %"struct.apps::UrlHandlerInfo"* [ %820, %817 ], [ %800, %806 ]
  call void @_ZN4apps14UrlHandlerInfoC1ERKS0_(%"struct.apps::UrlHandlerInfo"* %818, %"struct.apps::UrlHandlerInfo"* dereferenceable(136) %819) #11
  %820 = getelementptr inbounds %"struct.apps::UrlHandlerInfo", %"struct.apps::UrlHandlerInfo"* %819, i64 1
  %821 = getelementptr inbounds %"struct.apps::UrlHandlerInfo", %"struct.apps::UrlHandlerInfo"* %818, i64 1
  %822 = icmp eq %"struct.apps::UrlHandlerInfo"* %820, %801
  br i1 %822, label %823, label %817

823:                                              ; preds = %817
  %824 = ptrtoint %"struct.apps::UrlHandlerInfo"* %821 to i64
  br label %825

825:                                              ; preds = %823, %806
  %826 = phi i64 [ %815, %806 ], [ %824, %823 ]
  store i64 %826, i64* %814, align 8
  br label %827

827:                                              ; preds = %788, %825
  call void @_ZN7web_app6WebApp14SetUrlHandlersENSt3__16vectorIN4apps14UrlHandlerInfoENS1_9allocatorIS4_EEEE(%"class.web_app::WebApp"* %1, %"class.std::__1::vector.109"* nonnull %37) #11
  %828 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %37, i64 0, i32 0, i32 0
  %829 = load %"struct.apps::UrlHandlerInfo"*, %"struct.apps::UrlHandlerInfo"** %828, align 8
  %830 = icmp eq %"struct.apps::UrlHandlerInfo"* %829, null
  br i1 %830, label %845, label %831

831:                                              ; preds = %827
  %832 = bitcast %"struct.apps::UrlHandlerInfo"* %829 to i8*
  %833 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %37, i64 0, i32 0, i32 1
  %834 = load %"struct.apps::UrlHandlerInfo"*, %"struct.apps::UrlHandlerInfo"** %833, align 8
  %835 = icmp eq %"struct.apps::UrlHandlerInfo"* %834, %829
  br i1 %835, label %843, label %836

836:                                              ; preds = %831, %836
  %837 = phi %"struct.apps::UrlHandlerInfo"* [ %838, %836 ], [ %834, %831 ]
  %838 = getelementptr inbounds %"struct.apps::UrlHandlerInfo", %"struct.apps::UrlHandlerInfo"* %837, i64 -1
  call void @_ZN4apps14UrlHandlerInfoD1Ev(%"struct.apps::UrlHandlerInfo"* %838) #11
  %839 = icmp eq %"struct.apps::UrlHandlerInfo"* %838, %829
  br i1 %839, label %840, label %836

840:                                              ; preds = %836
  %841 = bitcast %"class.std::__1::vector.109"* %37 to i8**
  %842 = load i8*, i8** %841, align 8
  br label %843

843:                                              ; preds = %840, %831
  %844 = phi i8* [ %842, %840 ], [ %832, %831 ]
  store %"struct.apps::UrlHandlerInfo"* %829, %"struct.apps::UrlHandlerInfo"** %833, align 8
  call void @_ZdlPv(i8* %844) #12
  br label %845

845:                                              ; preds = %827, %843
  %846 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features24kDesktopPWAsRunOnOsLoginE) #11
  br i1 %846, label %847, label %852

847:                                              ; preds = %845
  %848 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 26
  %849 = load i8, i8* %848, align 8, !range !2
  %850 = icmp eq i8 %849, 0
  br i1 %850, label %852, label %851

851:                                              ; preds = %847
  call void @_ZN7web_app6WebApp19SetRunOnOsLoginModeENS_16RunOnOsLoginModeE(%"class.web_app::WebApp"* %1, i32 1) #11
  br label %852

852:                                              ; preds = %847, %851, %845
  %853 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 27
  %854 = load i32, i32* %853, align 4
  call void @_ZN7web_app6WebApp15SetCaptureLinksEN5blink5mojom12CaptureLinksE(%"class.web_app::WebApp"* %1, i32 %854) #11
  %855 = getelementptr inbounds %struct.WebApplicationInfo, %struct.WebApplicationInfo* %0, i64 0, i32 4
  call void @_ZN7web_app6WebApp14SetManifestUrlERK4GURL(%"class.web_app::WebApp"* %1, %class.GURL* dereferenceable(120) %855) #11
  call void @_ZN7web_app6WebApp16SyncFallbackDataD1Ev(%"struct.web_app::WebApp::SyncFallbackData"* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %167) #11
  ret void
}

declare void @_ZN7web_app6WebApp7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.web_app::WebApp"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7web_app6WebApp14SetDisplayModeEN5blink5mojom11DisplayModeE(%"class.web_app::WebApp"*, i32) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp22SetDisplayModeOverrideENSt3__16vectorIN5blink5mojom11DisplayModeENS1_9allocatorIS5_EEEE(%"class.web_app::WebApp"*, %"class.std::__1::vector.37"*) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp14SetDescriptionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.web_app::WebApp"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp20SetLaunchQueryParamsEN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEE(%"class.web_app::WebApp"*, %"class.absl::optional"*) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp8SetScopeERK4GURL(%"class.web_app::WebApp"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp13SetThemeColorEN4absl8optionalIjEE(%"class.web_app::WebApp"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN7web_app6WebApp18SetBackgroundColorEN4absl8optionalIjEE(%"class.web_app::WebApp"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN7web_app6WebApp16SyncFallbackDataC1Ev(%"struct.web_app::WebApp::SyncFallbackData"*) unnamed_addr #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp19SetSyncFallbackDataENS0_16SyncFallbackDataE(%"class.web_app::WebApp"*, %"struct.web_app::WebApp::SyncFallbackData"*) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp16SyncFallbackDataC1ERKS1_(%"struct.web_app::WebApp::SyncFallbackData"*, %"struct.web_app::WebApp::SyncFallbackData"* dereferenceable(176)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7web_app6WebApp16SyncFallbackDataD1Ev(%"struct.web_app::WebApp::SyncFallbackData"*) unnamed_addr #3

declare void @_ZN7web_app6WebApp12SetIconInfosENSt3__16vectorI22WebApplicationIconInfoNS1_9allocatorIS3_EEEE(%"class.web_app::WebApp"*, %"class.std::__1::vector"*) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp22SetDownloadedIconSizesEN5blink5mojom29ManifestImageResource_PurposeEN4base8internal9flat_treeIiNS4_8identityENSt3__14lessIvEENS8_6vectorIiNS8_9allocatorIiEEEEEE(%"class.web_app::WebApp"*, i32, %"class.base::internal::flat_tree"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7web_app12_GLOBAL__N_116GetSquareSizePxsERKNSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE(%"class.std::__1::vector.126"* noalias sret, %"class.std::__1::map"* dereferenceable(24)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.126"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = bitcast i32** %4 to i64*
  %9 = bitcast %"class.std::__1::vector.126"* %0 to i64*
  %10 = icmp eq i64 %7, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %2
  %12 = icmp ugt i64 %7, 4611686018427387903
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @abort() #13
  unreachable

14:                                               ; preds = %11
  %15 = bitcast i32** %3 to i64*
  %16 = shl i64 %7, 2
  %17 = tail call i8* @_Znwm(i64 %16) #12
  %18 = bitcast i8* %17 to i32*
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds i32, i32* %18, i64 %7
  %21 = ptrtoint i32* %20 to i64
  %22 = ptrtoint i8* %17 to i64
  store i64 %22, i64* %9, align 8
  store i64 %19, i64* %15, align 8
  store i64 %21, i64* %8, align 8
  br label %23

23:                                               ; preds = %14, %2
  %24 = phi i64 [ 0, %2 ], [ %19, %14 ]
  %25 = phi i32* [ null, %2 ], [ %20, %14 ]
  %26 = phi i32* [ null, %2 ], [ %18, %14 ]
  %27 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %28, %29
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  %32 = bitcast i32** %3 to i64*
  br label %34

33:                                               ; preds = %120, %23
  ret void

34:                                               ; preds = %123, %31
  %35 = phi i64 [ %24, %31 ], [ %126, %123 ]
  %36 = phi i32* [ %25, %31 ], [ %125, %123 ]
  %37 = phi i32* [ %26, %31 ], [ %124, %123 ]
  %38 = phi %"class.std::__1::__tree_end_node"* [ %28, %31 ], [ %121, %123 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 4
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to i32*
  %41 = icmp eq i32* %37, %36
  br i1 %41, label %46, label %42

42:                                               ; preds = %34
  %43 = load i32, i32* %40, align 4
  store i32 %43, i32* %37, align 4
  %44 = getelementptr inbounds i32, i32* %37, i64 1
  %45 = ptrtoint i32* %44 to i64
  store i64 %45, i64* %32, align 8
  br label %92

46:                                               ; preds = %34
  %47 = ptrtoint i32* %36 to i64
  %48 = load i64, i64* %9, align 8
  %49 = sub i64 %47, %48
  %50 = ashr exact i64 %49, 2
  %51 = add nsw i64 %50, 1
  %52 = icmp ugt i64 %51, 4611686018427387903
  br i1 %52, label %53, label %55

53:                                               ; preds = %46
  %54 = bitcast %"class.std::__1::vector.126"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #13
  unreachable

55:                                               ; preds = %46
  %56 = icmp ult i64 %50, 2305843009213693951
  br i1 %56, label %57, label %65

57:                                               ; preds = %55
  %58 = ashr exact i64 %49, 1
  %59 = icmp ult i64 %58, %51
  %60 = select i1 %59, i64 %51, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = icmp ugt i64 %60, 4611686018427387903
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void @abort() #13
  unreachable

65:                                               ; preds = %62, %55
  %66 = phi i64 [ %60, %62 ], [ 4611686018427387903, %55 ]
  %67 = shl i64 %66, 2
  %68 = tail call i8* @_Znwm(i64 %67) #12
  %69 = bitcast i8* %68 to i32*
  br label %70

70:                                               ; preds = %65, %57
  %71 = phi i64 [ %66, %65 ], [ 0, %57 ]
  %72 = phi i32* [ %69, %65 ], [ null, %57 ]
  %73 = getelementptr inbounds i32, i32* %72, i64 %50
  %74 = getelementptr inbounds i32, i32* %72, i64 %71
  %75 = ptrtoint i32* %74 to i64
  %76 = load i32, i32* %40, align 4
  store i32 %76, i32* %73, align 4
  %77 = getelementptr inbounds i32, i32* %73, i64 1
  %78 = ptrtoint i32* %77 to i64
  %79 = sub i64 %35, %48
  %80 = ashr exact i64 %79, 2
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds i32, i32* %73, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = icmp sgt i64 %79, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %70
  %86 = bitcast i32* %82 to i8*
  %87 = inttoptr i64 %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 %79, i1 false) #11
  br label %88

88:                                               ; preds = %85, %70
  store i64 %83, i64* %9, align 8
  store i64 %78, i64* %32, align 8
  store i64 %75, i64* %8, align 8
  %89 = icmp eq i64 %48, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %48 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %42, %88, %90
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %96, %109
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %29
  br i1 %122, label %33, label %123

123:                                              ; preds = %120
  %124 = load i32*, i32** %3, align 8
  %125 = load i32*, i32** %4, align 8
  %126 = ptrtoint i32* %124 to i64
  br label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIiNS_8identityENSt3__14lessIvEENS3_6vectorIiNS3_9allocatorIiEEEEEC2EOS9_RKS5_(%"class.base::internal::flat_tree"*, %"class.std::__1::vector.126"* dereferenceable(24), %"struct.std::__1::less.167"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", align 1
  %5 = bitcast %"class.base::internal::flat_tree"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = bitcast %"class.std::__1::vector.126"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.std::__1::vector.126"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = load i32*, i32** %12, align 8
  %23 = ptrtoint i32* %22 to i64
  %24 = getelementptr inbounds %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24)
  %25 = ptrtoint i32* %21 to i64
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 2
  %28 = icmp sgt i64 %26, 512
  br i1 %28, label %29, label %40

29:                                               ; preds = %3
  %30 = icmp slt i64 %27, 2305843009213693951
  %31 = select i1 %30, i64 %27, i64 2305843009213693951
  br label %32

32:                                               ; preds = %37, %29
  %33 = phi i64 [ %38, %37 ], [ %31, %29 ]
  %34 = shl i64 %33, 2
  %35 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %34, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = lshr i64 %33, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %32

40:                                               ; preds = %37, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %21, i32* %22, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %27, i32* null, i64 0) #11
  br label %43

41:                                               ; preds = %32
  %42 = bitcast i8* %35 to i32*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %21, i32* %22, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %27, i32* nonnull %42, i64 %33) #11
  call void @_ZdlPv(i8* nonnull %35) #12
  br label %43

43:                                               ; preds = %40, %41
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24)
  %44 = icmp eq i32* %21, %22
  br i1 %44, label %93, label %45

45:                                               ; preds = %43, %49
  %46 = phi i32* [ %47, %49 ], [ %21, %43 ]
  %47 = getelementptr inbounds i32, i32* %46, i64 1
  %48 = icmp eq i32* %47, %22
  br i1 %48, label %93, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %46, align 4
  %51 = load i32, i32* %47, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %45, label %53

53:                                               ; preds = %49
  %54 = icmp eq i32* %46, %22
  br i1 %54, label %93, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds i32, i32* %46, i64 2
  %57 = icmp eq i32* %56, %22
  br i1 %57, label %79, label %58

58:                                               ; preds = %55
  %59 = ptrtoint i32* %46 to i64
  br label %60

60:                                               ; preds = %75, %58
  %61 = phi i32 [ %76, %75 ], [ %50, %58 ]
  %62 = phi i32* [ %74, %75 ], [ %46, %58 ]
  %63 = phi i32* [ %72, %75 ], [ %56, %58 ]
  %64 = phi i64 [ %71, %75 ], [ %59, %58 ]
  %65 = load i32, i32* %63, align 4
  %66 = icmp slt i32 %61, %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds i32, i32* %62, i64 1
  %69 = ptrtoint i32* %68 to i64
  store i32 %65, i32* %68, align 4
  br label %70

70:                                               ; preds = %67, %60
  %71 = phi i64 [ %64, %60 ], [ %69, %67 ]
  %72 = getelementptr inbounds i32, i32* %63, i64 1
  %73 = icmp eq i32* %72, %22
  %74 = inttoptr i64 %71 to i32*
  br i1 %73, label %77, label %75

75:                                               ; preds = %70
  %76 = load i32, i32* %74, align 4
  br label %60

77:                                               ; preds = %70
  %78 = inttoptr i64 %71 to i32*
  br label %79

79:                                               ; preds = %77, %55
  %80 = phi i32* [ %46, %55 ], [ %78, %77 ]
  %81 = getelementptr inbounds i32, i32* %80, i64 1
  %82 = icmp eq i32* %81, %22
  br i1 %82, label %93, label %83

83:                                               ; preds = %79
  %84 = load i64, i64* %13, align 8
  %85 = sub i64 %84, %23
  %86 = ashr exact i64 %85, 2
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %83
  %89 = bitcast i32* %81 to i8*
  %90 = bitcast i32* %22 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 %85, i1 false) #11
  br label %91

91:                                               ; preds = %88, %83
  %92 = getelementptr inbounds i32, i32* %81, i64 %86
  store i32* %92, i32** %12, align 8
  br label %93

93:                                               ; preds = %45, %43, %53, %79, %91
  ret void
}

declare void @_ZN7web_app6WebApp18SetIsGeneratedIconEb(%"class.web_app::WebApp"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp25SetShortcutsMenuItemInfosENSt3__16vectorI35WebApplicationShortcutsMenuItemInfoNS1_9allocatorIS3_EEEE(%"class.web_app::WebApp"*, %"class.std::__1::vector.81"*) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp36SetDownloadedShortcutsMenuIconsSizesENSt3__16vectorI9IconSizesNS1_9allocatorIS3_EEEE(%"class.web_app::WebApp"*, %"class.std::__1::vector.133"*) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp14SetShareTargetEN4absl8optionalIN4apps11ShareTargetEEE(%"class.web_app::WebApp"*, %"class.absl::optional.62"*) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp23SetNoteTakingNewNoteUrlERK4GURL(%"class.web_app::WebApp"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp14SetUrlHandlersENSt3__16vectorIN4apps14UrlHandlerInfoENS1_9allocatorIS4_EEEE(%"class.web_app::WebApp"*, %"class.std::__1::vector.109"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp19SetRunOnOsLoginModeENS_16RunOnOsLoginModeE(%"class.web_app::WebApp"*, i32) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp15SetCaptureLinksEN5blink5mojom12CaptureLinksE(%"class.web_app::WebApp"*, i32) local_unnamed_addr #1

declare void @_ZN7web_app6WebApp14SetManifestUrlERK4GURL(%"class.web_app::WebApp"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7web_app25MaybeDisableOsIntegrationEPKNS_12AppRegistrarERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS_21InstallOsHooksOptionsE(%"class.web_app::AppRegistrar"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.web_app::InstallOsHooksOptions"*) local_unnamed_addr #0 {
  %4 = bitcast %"class.web_app::AppRegistrar"* %0 to %"class.web_app::WebAppRegistrar"* (%"class.web_app::AppRegistrar"*)***
  %5 = load %"class.web_app::WebAppRegistrar"* (%"class.web_app::AppRegistrar"*)**, %"class.web_app::WebAppRegistrar"* (%"class.web_app::AppRegistrar"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.web_app::WebAppRegistrar"* (%"class.web_app::AppRegistrar"*)*, %"class.web_app::WebAppRegistrar"* (%"class.web_app::AppRegistrar"*)** %5, i64 40
  %7 = load %"class.web_app::WebAppRegistrar"* (%"class.web_app::AppRegistrar"*)*, %"class.web_app::WebAppRegistrar"* (%"class.web_app::AppRegistrar"*)** %6, align 8
  %8 = tail call %"class.web_app::WebAppRegistrar"* %7(%"class.web_app::AppRegistrar"* %0) #11
  %9 = icmp eq %"class.web_app::WebAppRegistrar"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZNK7web_app15WebAppRegistrar25WasInstalledByDefaultOnlyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.web_app::WebAppRegistrar"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %1) #11
  br i1 %11, label %12, label %18

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.web_app::InstallOsHooksOptions", %"struct.web_app::InstallOsHooksOptions"* %2, i64 0, i32 1
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.web_app::InstallOsHooksOptions", %"struct.web_app::InstallOsHooksOptions"* %2, i64 0, i32 2
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"struct.web_app::InstallOsHooksOptions", %"struct.web_app::InstallOsHooksOptions"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -128
  store i64 %17, i64* %15, align 8
  br label %18

18:                                               ; preds = %3, %12, %10
  ret void
}

declare zeroext i1 @_ZNK7web_app15WebAppRegistrar25WasInstalledByDefaultOnlyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.web_app::WebAppRegistrar"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector.133"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.IconSizes** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.133"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %struct.IconSizes*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %struct.IconSizes** %13 to i64*
  %15 = icmp ugt i64 %1, 256204778801521550
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 72
  %21 = mul i64 %1, 72
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %struct.IconSizes*
  %24 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %23, i64 %20
  %25 = ptrtoint %struct.IconSizes* %24 to i64
  %26 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %23, i64 %1
  %27 = ptrtoint %struct.IconSizes* %26 to i64
  %28 = inttoptr i64 %18 to %struct.IconSizes*
  %29 = icmp eq %struct.IconSizes* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %struct.IconSizes* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %struct.IconSizes* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %31, i64 -1
  %34 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %32, i64 -1
  tail call void @_ZN9IconSizesC1EOS_(%struct.IconSizes* %33, %struct.IconSizes* dereferenceable(72) %34) #11
  %35 = icmp eq %struct.IconSizes* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %struct.IconSizes* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %struct.IconSizes*, %struct.IconSizes** %13, align 8
  %40 = inttoptr i64 %38 to %struct.IconSizes*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %struct.IconSizes* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %struct.IconSizes* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %struct.IconSizes* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %struct.IconSizes* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %48, i64 -1
  tail call void @_ZN9IconSizesD1Ev(%struct.IconSizes* %49) #11
  %50 = icmp eq %struct.IconSizes* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

declare void @_ZN9IconSizesC1Ev(%struct.IconSizes*) unnamed_addr #1

declare void @_ZN9IconSizes18SetSizesForPurposeEN5blink5mojom29ManifestImageResource_PurposeENSt3__16vectorIiNS3_9allocatorIiEEEE(%struct.IconSizes*, i32, %"class.std::__1::vector.126"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9IconSizesD1Ev(%struct.IconSizes*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9IconSizesC1EOS_(%struct.IconSizes*, %struct.IconSizes* dereferenceable(72)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.133"*, %struct.IconSizes* dereferenceable(72)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.IconSizes** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.133"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.133"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.IconSizes** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %struct.IconSizes*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.IconSizes* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %33, i64 %9
  %35 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %33, i64 %32
  %36 = ptrtoint %struct.IconSizes* %35 to i64
  tail call void @_ZN9IconSizesC1EOS_(%struct.IconSizes* %34, %struct.IconSizes* dereferenceable(72) %1) #11
  %37 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %34, i64 1
  %38 = ptrtoint %struct.IconSizes* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.IconSizes*, %struct.IconSizes** %39, align 8
  %41 = load %struct.IconSizes*, %struct.IconSizes** %3, align 8
  %42 = icmp eq %struct.IconSizes* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.IconSizes* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %struct.IconSizes* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.IconSizes* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %46, i64 -1
  %49 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %47, i64 -1
  tail call void @_ZN9IconSizesC1EOS_(%struct.IconSizes* %48, %struct.IconSizes* dereferenceable(72) %49) #11
  %50 = icmp eq %struct.IconSizes* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %struct.IconSizes*, %struct.IconSizes** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %struct.IconSizes* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %struct.IconSizes* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %struct.IconSizes* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %struct.IconSizes*
  %60 = icmp eq %struct.IconSizes* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %struct.IconSizes* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %62, i64 -1
  tail call void @_ZN9IconSizesD1Ev(%struct.IconSizes* %63) #11
  %64 = icmp eq %struct.IconSizes* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN4apps11FileHandlerC1Ev(%"struct.apps::FileHandler"*) unnamed_addr #1

declare void @_ZN4apps11FileHandler11AcceptEntryC1Ev(%"struct.apps::FileHandler::AcceptEntry"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4apps11FileHandler11AcceptEntryD1Ev(%"struct.apps::FileHandler::AcceptEntry"*) unnamed_addr #3

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4apps11FileHandlerD1Ev(%"struct.apps::FileHandler"*) unnamed_addr #3

declare void @_ZN7web_app6WebApp15SetFileHandlersENSt3__16vectorIN4apps11FileHandlerENS1_9allocatorIS4_EEEE(%"class.web_app::WebApp"*, %"class.std::__1::vector.140"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree.144"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.144", %"class.base::internal::flat_tree.144"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree.144", %"class.base::internal::flat_tree.144"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"class.std::__1::basic_string"*
  br i1 %11, label %64, label %13

13:                                               ; preds = %3
  %14 = sdiv exact i64 %10, 24
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %26 = select i1 %18, i8* %24, i8* %25
  br label %27

27:                                               ; preds = %58, %13
  %28 = phi %"class.std::__1::basic_string"* [ %5, %13 ], [ %60, %58 ]
  %29 = phi i64 [ %14, %13 ], [ %59, %58 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 %30
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 %30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = icmp ult i64 %22, %39
  %41 = select i1 %40, i64 %22, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %47 = select i1 %35, i8* %45, i8* %46
  %48 = tail call i32 @memcmp(i8* %47, i8* %26, i64 %41) #11
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %43, %27
  %51 = icmp ult i64 %39, %22
  br i1 %51, label %54, label %58

52:                                               ; preds = %43
  %53 = icmp slt i32 %48, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %52, %50
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %56 = xor i64 %30, -1
  %57 = add i64 %29, %56
  br label %58

58:                                               ; preds = %54, %52, %50
  %59 = phi i64 [ %57, %54 ], [ %30, %52 ], [ %30, %50 ]
  %60 = phi %"class.std::__1::basic_string"* [ %55, %54 ], [ %28, %52 ], [ %28, %50 ]
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %62, label %27

62:                                               ; preds = %58
  %63 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  br label %64

64:                                               ; preds = %62, %3
  %65 = phi i64 [ %63, %62 ], [ %9, %3 ]
  %66 = phi %"class.std::__1::basic_string"* [ %60, %62 ], [ %5, %3 ]
  %67 = icmp eq %"class.std::__1::basic_string"* %66, %12
  br i1 %67, label %103, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %71 to i64
  %76 = select i1 %72, i64 %74, i64 %75
  %77 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = zext i8 %79 to i64
  %84 = select i1 %80, i64 %82, i64 %83
  %85 = icmp ult i64 %76, %84
  %86 = select i1 %85, i64 %76, i64 %84
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %99, label %88

88:                                               ; preds = %68
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %92 = select i1 %80, i8* %90, i8* %91
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %96 = select i1 %72, i8* %94, i8* %95
  %97 = tail call i32 @memcmp(i8* %92, i8* %96, i64 %86) #11
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %88, %68
  %100 = icmp ult i64 %84, %76
  br i1 %100, label %103, label %107

101:                                              ; preds = %88
  %102 = icmp slt i32 %97, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %99, %64, %101
  %104 = getelementptr inbounds %"class.base::internal::flat_tree.144", %"class.base::internal::flat_tree.144"* %0, i64 0, i32 0
  %105 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSA_IPKS6_EEDpOT_(%"class.std::__1::vector.69"* %104, %"class.std::__1::basic_string"* %66, %"class.std::__1::basic_string"* dereferenceable(24) %2) #11
  %106 = ptrtoint %"class.std::__1::basic_string"* %105 to i64
  br label %107

107:                                              ; preds = %99, %101, %103
  %108 = phi i64 [ %106, %103 ], [ %65, %101 ], [ %65, %99 ]
  %109 = phi i8 [ 1, %103 ], [ 0, %101 ], [ 0, %99 ]
  %110 = inttoptr i64 %108 to %"class.std::__1::basic_string"*
  %111 = insertvalue { %"class.std::__1::basic_string"*, i8 } undef, %"class.std::__1::basic_string"* %110, 0
  %112 = insertvalue { %"class.std::__1::basic_string"*, i8 } %111, i8 %109, 1
  ret { %"class.std::__1::basic_string"*, i8 } %112
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSA_IPKS6_EEDpOT_(%"class.std::__1::vector.69"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %5 = alloca %"struct.std::__1::__split_buffer.462", align 8
  %6 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = icmp ult %"class.std::__1::basic_string"* %9, %11
  %13 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  br i1 %12, label %14, label %126

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::basic_string"* %9, %1
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %16, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %19 = ptrtoint %"class.std::__1::basic_string"* %18 to i64
  %20 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  store i64 %19, i64* %20, align 8
  br label %251

21:                                               ; preds = %14
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to i8*
  %26 = load i8, i8* %25, align 8
  %27 = getelementptr inbounds i8, i8* %16, i64 9
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds i8, i8* %16, i64 10
  %30 = load i8, i8* %29, align 2
  %31 = getelementptr inbounds i8, i8* %16, i64 11
  %32 = load i8, i8* %31, align 1
  %33 = getelementptr inbounds i8, i8* %16, i64 12
  %34 = load i8, i8* %33, align 4
  %35 = getelementptr inbounds i8, i8* %16, i64 13
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds i8, i8* %16, i64 14
  %38 = load i8, i8* %37, align 2
  %39 = getelementptr inbounds i8, i8* %16, i64 15
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %42 = bitcast i64* %41 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = getelementptr inbounds i8, i8* %16, i64 17
  %45 = load i8, i8* %44, align 1
  %46 = getelementptr inbounds i8, i8* %16, i64 18
  %47 = load i8, i8* %46, align 2
  %48 = getelementptr inbounds i8, i8* %16, i64 19
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds i8, i8* %16, i64 20
  %51 = load i8, i8* %50, align 4
  %52 = getelementptr inbounds i8, i8* %16, i64 21
  %53 = load i8, i8* %52, align 1
  %54 = getelementptr inbounds i8, i8* %16, i64 22
  %55 = load i8, i8* %54, align 2
  %56 = getelementptr inbounds i8, i8* %16, i64 23
  %57 = load i8, i8* %56, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %60 = ptrtoint %"class.std::__1::basic_string"* %58 to i64
  %61 = ptrtoint %"class.std::__1::basic_string"* %59 to i64
  %62 = sub i64 %60, %61
  %63 = sdiv exact i64 %62, 24
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %63
  %65 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %66 = icmp ult %"class.std::__1::basic_string"* %64, %58
  br i1 %66, label %90, label %69

67:                                               ; preds = %90
  %68 = ptrtoint %"class.std::__1::basic_string"* %96 to i64
  br label %69

69:                                               ; preds = %67, %21
  %70 = phi i64 [ %68, %67 ], [ %60, %21 ]
  store i64 %70, i64* %65, align 8
  %71 = icmp eq i64 %62, 0
  br i1 %71, label %98, label %72

72:                                               ; preds = %69, %84
  %73 = phi %"class.std::__1::basic_string"* [ %76, %84 ], [ %58, %69 ]
  %74 = phi %"class.std::__1::basic_string"* [ %75, %84 ], [ %64, %69 ]
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %81, %72
  %85 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #11
  %87 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  store i8 0, i8* %88, align 1
  store i8 0, i8* %86, align 1
  %89 = icmp eq %"class.std::__1::basic_string"* %75, %1
  br i1 %89, label %98, label %72

90:                                               ; preds = %21, %90
  %91 = phi %"class.std::__1::basic_string"* [ %96, %90 ], [ %58, %21 ]
  %92 = phi %"class.std::__1::basic_string"* [ %95, %90 ], [ %64, %21 ]
  %93 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #11
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 1
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 1
  %97 = icmp ult %"class.std::__1::basic_string"* %95, %58
  br i1 %97, label %90, label %67

98:                                               ; preds = %84, %69
  %99 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %103, %98
  %107 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  store i64 %23, i64* %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = bitcast i64* %108 to i8*
  store i8 %26, i8* %109, align 8
  %110 = getelementptr inbounds i8, i8* %4, i64 9
  store i8 %28, i8* %110, align 1
  %111 = getelementptr inbounds i8, i8* %4, i64 10
  store i8 %30, i8* %111, align 2
  %112 = getelementptr inbounds i8, i8* %4, i64 11
  store i8 %32, i8* %112, align 1
  %113 = getelementptr inbounds i8, i8* %4, i64 12
  store i8 %34, i8* %113, align 4
  %114 = getelementptr inbounds i8, i8* %4, i64 13
  store i8 %36, i8* %114, align 1
  %115 = getelementptr inbounds i8, i8* %4, i64 14
  store i8 %38, i8* %115, align 2
  %116 = getelementptr inbounds i8, i8* %4, i64 15
  store i8 %40, i8* %116, align 1
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %118 = bitcast i64* %117 to i8*
  store i8 %43, i8* %118, align 8
  %119 = getelementptr inbounds i8, i8* %4, i64 17
  store i8 %45, i8* %119, align 1
  %120 = getelementptr inbounds i8, i8* %4, i64 18
  store i8 %47, i8* %120, align 2
  %121 = getelementptr inbounds i8, i8* %4, i64 19
  store i8 %49, i8* %121, align 1
  %122 = getelementptr inbounds i8, i8* %4, i64 20
  store i8 %51, i8* %122, align 4
  %123 = getelementptr inbounds i8, i8* %4, i64 21
  store i8 %53, i8* %123, align 1
  %124 = getelementptr inbounds i8, i8* %4, i64 22
  store i8 %55, i8* %124, align 2
  %125 = getelementptr inbounds i8, i8* %4, i64 23
  store i8 %57, i8* %125, align 1
  br label %251

126:                                              ; preds = %3
  %127 = ptrtoint %"class.std::__1::basic_string"* %9 to i64
  %128 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %0, i64 0, i32 0, i32 2
  %129 = bitcast %"struct.std::__1::__split_buffer.462"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %129) #11
  %130 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %5, i64 0, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %5, i64 0, i32 1
  %132 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %5, i64 0, i32 2
  %133 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %5, i64 0, i32 3, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %5, i64 0, i32 3, i32 1, i32 0
  %135 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %136 = bitcast %"class.std::__1::vector.69"* %0 to i64*
  %137 = bitcast %"struct.std::__1::__split_buffer.462"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 40, i1 false)
  %138 = load i64, i64* %136, align 8
  %139 = sub i64 %127, %138
  %140 = sdiv exact i64 %139, 24
  %141 = add nsw i64 %140, 1
  %142 = icmp ugt i64 %141, 768614336404564650
  br i1 %142, label %143, label %145

143:                                              ; preds = %126
  %144 = bitcast %"class.std::__1::vector.69"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #13
  unreachable

145:                                              ; preds = %126
  %146 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %147 = sub i64 %13, %138
  %148 = sdiv exact i64 %147, 24
  %149 = icmp ult i64 %148, 384307168202282325
  br i1 %149, label %154, label %150

150:                                              ; preds = %145
  %151 = sub i64 %6, %138
  %152 = sdiv exact i64 %151, 24
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %133, align 8
  %153 = bitcast %"class.std::__1::allocator.74"** %134 to %"class.std::__1::__compressed_pair.71"**
  store %"class.std::__1::__compressed_pair.71"* %128, %"class.std::__1::__compressed_pair.71"** %153, align 8
  br label %162

154:                                              ; preds = %145
  %155 = shl nsw i64 %148, 1
  %156 = icmp ult i64 %155, %141
  %157 = select i1 %156, i64 %141, i64 %155
  %158 = sub i64 %6, %138
  %159 = sdiv exact i64 %158, 24
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %133, align 8
  %160 = bitcast %"class.std::__1::allocator.74"** %134 to %"class.std::__1::__compressed_pair.71"**
  store %"class.std::__1::__compressed_pair.71"* %128, %"class.std::__1::__compressed_pair.71"** %160, align 8
  %161 = icmp eq i64 %157, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %154, %150
  %163 = phi i64 [ %152, %150 ], [ %159, %154 ]
  %164 = phi i64 [ 768614336404564650, %150 ], [ %157, %154 ]
  %165 = mul i64 %164, 24
  %166 = tail call i8* @_Znwm(i64 %165) #12
  %167 = bitcast i8* %166 to %"class.std::__1::basic_string"*
  br label %168

168:                                              ; preds = %154, %162
  %169 = phi i64 [ %163, %162 ], [ %159, %154 ]
  %170 = phi i64 [ %164, %162 ], [ 0, %154 ]
  %171 = phi %"class.std::__1::basic_string"* [ %167, %162 ], [ null, %154 ]
  store %"class.std::__1::basic_string"* %171, %"class.std::__1::basic_string"** %130, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 %169
  store %"class.std::__1::basic_string"* %172, %"class.std::__1::basic_string"** %132, align 8
  store %"class.std::__1::basic_string"* %172, %"class.std::__1::basic_string"** %131, align 8
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 %170
  store %"class.std::__1::basic_string"* %173, %"class.std::__1::basic_string"** %133, align 8
  call void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE12emplace_backIJS6_EEEvDpOT_(%"struct.std::__1::__split_buffer.462"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %174 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %131, align 8
  %175 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %176 = icmp eq %"class.std::__1::basic_string"* %175, %1
  br i1 %176, label %187, label %177

177:                                              ; preds = %168, %177
  %178 = phi %"class.std::__1::basic_string"* [ %185, %177 ], [ %174, %168 ]
  %179 = phi %"class.std::__1::basic_string"* [ %181, %177 ], [ %1, %168 ]
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 -1
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 -1
  %182 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  %183 = bitcast %"class.std::__1::basic_string"* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 24, i1 false) #11
  %184 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %131, align 8
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %184, i64 -1
  store %"class.std::__1::basic_string"* %185, %"class.std::__1::basic_string"** %131, align 8
  %186 = icmp eq %"class.std::__1::basic_string"* %181, %175
  br i1 %186, label %187, label %177

187:                                              ; preds = %177, %168
  %188 = phi %"class.std::__1::basic_string"* [ %174, %168 ], [ %185, %177 ]
  %189 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %190 = icmp eq %"class.std::__1::basic_string"* %189, %1
  br i1 %190, label %191, label %197

191:                                              ; preds = %187
  %192 = ptrtoint %"class.std::__1::basic_string"* %189 to i64
  %193 = ptrtoint %"class.std::__1::basic_string"* %188 to i64
  %194 = bitcast %"class.std::__1::basic_string"** %131 to i64*
  %195 = bitcast %"class.std::__1::basic_string"** %132 to i64*
  %196 = load i64, i64* %195, align 8
  br label %215

197:                                              ; preds = %187
  %198 = bitcast %"class.std::__1::basic_string"** %132 to i8**
  %199 = load i8*, i8** %198, align 8
  br label %200

200:                                              ; preds = %200, %197
  %201 = phi i8* [ %199, %197 ], [ %208, %200 ]
  %202 = phi %"class.std::__1::basic_string"* [ %1, %197 ], [ %204, %200 ]
  %203 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %203, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 24, i1 false) #11
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %202, i64 1
  %205 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %205, i64 1
  store %"class.std::__1::basic_string"* %206, %"class.std::__1::basic_string"** %132, align 8
  %207 = icmp eq %"class.std::__1::basic_string"* %204, %189
  %208 = bitcast %"class.std::__1::basic_string"* %206 to i8*
  br i1 %207, label %209, label %200

209:                                              ; preds = %200
  %210 = ptrtoint %"class.std::__1::basic_string"* %206 to i64
  %211 = bitcast %"class.std::__1::basic_string"** %131 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = load i64, i64* %135, align 8
  %214 = bitcast %"class.std::__1::basic_string"** %132 to i64*
  br label %215

215:                                              ; preds = %191, %209
  %216 = phi i64* [ %195, %191 ], [ %214, %209 ]
  %217 = phi i64 [ %196, %191 ], [ %210, %209 ]
  %218 = phi i64 [ %192, %191 ], [ %213, %209 ]
  %219 = phi i64* [ %194, %191 ], [ %211, %209 ]
  %220 = phi i64 [ %193, %191 ], [ %212, %209 ]
  %221 = load i64, i64* %136, align 8
  store i64 %220, i64* %136, align 8
  store i64 %221, i64* %219, align 8
  store i64 %217, i64* %135, align 8
  store i64 %218, i64* %216, align 8
  %222 = load i64, i64* %146, align 8
  %223 = bitcast %"class.std::__1::basic_string"** %133 to i64*
  %224 = load i64, i64* %223, align 8
  store i64 %224, i64* %146, align 8
  store i64 %222, i64* %223, align 8
  %225 = bitcast %"struct.std::__1::__split_buffer.462"* %5 to i64*
  store i64 %221, i64* %225, align 8
  %226 = inttoptr i64 %221 to %"class.std::__1::basic_string"*
  %227 = inttoptr i64 %218 to %"class.std::__1::basic_string"*
  %228 = icmp eq %"class.std::__1::basic_string"* %227, %226
  br i1 %228, label %245, label %229

229:                                              ; preds = %215, %240
  %230 = phi %"class.std::__1::basic_string"* [ %241, %240 ], [ %227, %215 ]
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 -1
  store %"class.std::__1::basic_string"* %231, %"class.std::__1::basic_string"** %132, align 8
  %232 = bitcast %"class.std::__1::basic_string"* %231 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %240

236:                                              ; preds = %229
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  call void @_ZdlPv(i8* %238) #12
  %239 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  br label %240

240:                                              ; preds = %236, %229
  %241 = phi %"class.std::__1::basic_string"* [ %231, %229 ], [ %239, %236 ]
  %242 = icmp eq %"class.std::__1::basic_string"* %241, %226
  br i1 %242, label %243, label %229

243:                                              ; preds = %240
  %244 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %130, align 8
  br label %245

245:                                              ; preds = %243, %215
  %246 = phi %"class.std::__1::basic_string"* [ %244, %243 ], [ %226, %215 ]
  %247 = icmp eq %"class.std::__1::basic_string"* %246, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %245
  %249 = bitcast %"class.std::__1::basic_string"* %246 to i8*
  call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %245, %248
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %129) #11
  br label %251

251:                                              ; preds = %17, %106, %250
  %252 = phi %"class.std::__1::basic_string"* [ %1, %17 ], [ %1, %106 ], [ %174, %250 ]
  ret %"class.std::__1::basic_string"* %252
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE12emplace_backIJS6_EEEvDpOT_(%"struct.std::__1::__split_buffer.462"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %4, %6
  %8 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  br i1 %7, label %9, label %113

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.462", %"struct.std::__1::__split_buffer.462"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp ugt %"class.std::__1::basic_string"* %11, %13
  %15 = ptrtoint %"class.std::__1::basic_string"* %13 to i64
  br i1 %14, label %16, label %48

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = sdiv exact i64 %18, 24
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::basic_string"* %11, %4
  br i1 %23, label %44, label %24

24:                                               ; preds = %16, %34
  %25 = phi %"class.std::__1::basic_string"* [ %40, %34 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::basic_string"* [ %39, %34 ], [ %11, %16 ]
  %27 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %31, %24
  %35 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #11
  %37 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 0, i8* %38, align 1
  store i8 0, i8* %36, align 1
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  %41 = icmp eq %"class.std::__1::basic_string"* %39, %4
  br i1 %41, label %42, label %24

42:                                               ; preds = %34
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  br label %44

44:                                               ; preds = %42, %16
  %45 = phi %"class.std::__1::basic_string"* [ %4, %16 ], [ %43, %42 ]
  %46 = phi %"class.std::__1::basic_string"* [ %22, %16 ], [ %40, %42 ]
  store %"class.std::__1::basic_string"* %46, %"class.std::__1::basic_string"** %3, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 %21
  store %"class.std::__1::basic_string"* %47, %"class.std::__1::basic_string"** %10, align 8
  br label %113

48:                                               ; preds = %9
  %49 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %50 = bitcast %"struct.std::__1::__split_buffer.462"* %0 to i64*
  %51 = sub i64 %8, %15
  %52 = sdiv exact i64 %51, 24
  %53 = shl nsw i64 %52, 1
  %54 = icmp eq i64 %51, 0
  %55 = select i1 %54, i64 1, i64 %53
  %56 = icmp ugt i64 %55, 768614336404564650
  br i1 %56, label %57, label %58

57:                                               ; preds = %48
  tail call void @abort() #13
  unreachable

58:                                               ; preds = %48
  %59 = lshr i64 %55, 2
  %60 = mul i64 %55, 24
  %61 = tail call i8* @_Znwm(i64 %60) #12
  %62 = bitcast i8* %61 to %"class.std::__1::basic_string"*
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 %59
  %65 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 %55
  %67 = ptrtoint %"class.std::__1::basic_string"* %66 to i64
  %68 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  %69 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %70 = sub i64 %69, %68
  %71 = sdiv exact i64 %70, 24
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 %71
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %58, %74
  %75 = phi %"class.std::__1::basic_string"* [ %80, %74 ], [ %64, %58 ]
  %76 = phi i64 [ %81, %74 ], [ %65, %58 ]
  %77 = phi %"class.std::__1::basic_string"* [ %82, %74 ], [ %11, %58 ]
  %78 = inttoptr i64 %76 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #11
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 1
  %81 = ptrtoint %"class.std::__1::basic_string"* %80 to i64
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1
  %83 = icmp eq %"class.std::__1::basic_string"* %72, %80
  br i1 %83, label %84, label %74

84:                                               ; preds = %74
  %85 = ptrtoint %"class.std::__1::basic_string"* %72 to i64
  %86 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %89

89:                                               ; preds = %58, %84
  %90 = phi %"class.std::__1::basic_string"* [ %88, %84 ], [ %4, %58 ]
  %91 = phi %"class.std::__1::basic_string"* [ %87, %84 ], [ %11, %58 ]
  %92 = phi %"class.std::__1::basic_string"* [ %86, %84 ], [ %13, %58 ]
  %93 = phi i64 [ %85, %84 ], [ %65, %58 ]
  store i64 %63, i64* %50, align 8
  %94 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  store i64 %65, i64* %94, align 8
  %95 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  store i64 %93, i64* %95, align 8
  store i64 %67, i64* %49, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %90, %91
  br i1 %96, label %109, label %97

97:                                               ; preds = %89, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %90, %89 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %91
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %89
  %110 = icmp eq %"class.std::__1::basic_string"* %92, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  tail call void @_ZdlPv(i8* %112) #12
  br label %113

113:                                              ; preds = %111, %109, %44, %2
  %114 = bitcast %"class.std::__1::basic_string"** %3 to i8**
  %115 = load i8*, i8** %114, align 8
  %116 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #11
  %117 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %117, i64 1
  store %"class.std::__1::basic_string"* %118, %"class.std::__1::basic_string"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4apps11FileHandler11AcceptEntryENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.142"*, %"struct.apps::FileHandler::AcceptEntry"* dereferenceable(48)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.apps::FileHandler::AcceptEntry"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.142"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.142"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.apps::FileHandler::AcceptEntry"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.apps::FileHandler::AcceptEntry"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.apps::FileHandler::AcceptEntry"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %33, i64 %32
  %36 = ptrtoint %"struct.apps::FileHandler::AcceptEntry"* %35 to i64
  tail call void @_ZN4apps11FileHandler11AcceptEntryC1ERKS1_(%"struct.apps::FileHandler::AcceptEntry"* %34, %"struct.apps::FileHandler::AcceptEntry"* dereferenceable(48) %1) #11
  %37 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %34, i64 1
  %38 = ptrtoint %"struct.apps::FileHandler::AcceptEntry"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.apps::FileHandler::AcceptEntry"*, %"struct.apps::FileHandler::AcceptEntry"** %39, align 8
  %41 = load %"struct.apps::FileHandler::AcceptEntry"*, %"struct.apps::FileHandler::AcceptEntry"** %3, align 8
  %42 = icmp eq %"struct.apps::FileHandler::AcceptEntry"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.apps::FileHandler::AcceptEntry"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.apps::FileHandler::AcceptEntry"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.apps::FileHandler::AcceptEntry"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %47, i64 -1
  tail call void @_ZN4apps11FileHandler11AcceptEntryC1ERKS1_(%"struct.apps::FileHandler::AcceptEntry"* %48, %"struct.apps::FileHandler::AcceptEntry"* dereferenceable(48) %49) #11
  %50 = icmp eq %"struct.apps::FileHandler::AcceptEntry"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.apps::FileHandler::AcceptEntry"*, %"struct.apps::FileHandler::AcceptEntry"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.apps::FileHandler::AcceptEntry"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.apps::FileHandler::AcceptEntry"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.apps::FileHandler::AcceptEntry"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.apps::FileHandler::AcceptEntry"*
  %60 = icmp eq %"struct.apps::FileHandler::AcceptEntry"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.apps::FileHandler::AcceptEntry"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.apps::FileHandler::AcceptEntry", %"struct.apps::FileHandler::AcceptEntry"* %62, i64 -1
  tail call void @_ZN4apps11FileHandler11AcceptEntryD1Ev(%"struct.apps::FileHandler::AcceptEntry"* %63) #11
  %64 = icmp eq %"struct.apps::FileHandler::AcceptEntry"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN4apps11FileHandler11AcceptEntryC1ERKS1_(%"struct.apps::FileHandler::AcceptEntry"*, %"struct.apps::FileHandler::AcceptEntry"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4apps11FileHandlerENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.140"*, %"struct.apps::FileHandler"* dereferenceable(144)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.apps::FileHandler"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.140"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 144
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 128102389400760775
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.140"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.apps::FileHandler"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 144
  %20 = icmp ult i64 %19, 64051194700380387
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 128102389400760775, %14 ]
  %28 = mul i64 %27, 144
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.apps::FileHandler"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.apps::FileHandler"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %33, i64 %32
  %36 = ptrtoint %"struct.apps::FileHandler"* %35 to i64
  tail call void @_ZN4apps11FileHandlerC1ERKS0_(%"struct.apps::FileHandler"* %34, %"struct.apps::FileHandler"* dereferenceable(144) %1) #11
  %37 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %34, i64 1
  %38 = ptrtoint %"struct.apps::FileHandler"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %39, align 8
  %41 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %3, align 8
  %42 = icmp eq %"struct.apps::FileHandler"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.apps::FileHandler"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.apps::FileHandler"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.apps::FileHandler"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %47, i64 -1
  tail call void @_ZN4apps11FileHandlerC1ERKS0_(%"struct.apps::FileHandler"* %48, %"struct.apps::FileHandler"* dereferenceable(144) %49) #11
  %50 = icmp eq %"struct.apps::FileHandler"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.apps::FileHandler"*, %"struct.apps::FileHandler"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.apps::FileHandler"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.apps::FileHandler"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.apps::FileHandler"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.apps::FileHandler"*
  %60 = icmp eq %"struct.apps::FileHandler"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.apps::FileHandler"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.apps::FileHandler", %"struct.apps::FileHandler"* %62, i64 -1
  tail call void @_ZN4apps11FileHandlerD1Ev(%"struct.apps::FileHandler"* %63) #11
  %64 = icmp eq %"struct.apps::FileHandler"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN4apps11FileHandlerC1ERKS0_(%"struct.apps::FileHandler"*, %"struct.apps::FileHandler"* dereferenceable(144)) unnamed_addr #1

declare void @_ZN4apps11ShareTargetC1ERKS0_(%"struct.apps::ShareTarget"*, %"struct.apps::ShareTarget"* dereferenceable(224)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4apps11ShareTargetD1Ev(%"struct.apps::ShareTarget"*) unnamed_addr #3

declare void @_ZN4apps19ProtocolHandlerInfoC1Ev(%"struct.apps::ProtocolHandlerInfo"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4apps19ProtocolHandlerInfoD1Ev(%"struct.apps::ProtocolHandlerInfo"*) unnamed_addr #3

declare void @_ZN7web_app6WebApp19SetProtocolHandlersENSt3__16vectorIN4apps19ProtocolHandlerInfoENS1_9allocatorIS4_EEEE(%"class.web_app::WebApp"*, %"class.std::__1::vector.155"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4apps19ProtocolHandlerInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.155"*, %"struct.apps::ProtocolHandlerInfo"* dereferenceable(144)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.apps::ProtocolHandlerInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.155"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 144
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 128102389400760775
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.155"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.apps::ProtocolHandlerInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 144
  %20 = icmp ult i64 %19, 64051194700380387
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 128102389400760775, %14 ]
  %28 = mul i64 %27, 144
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.apps::ProtocolHandlerInfo"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.apps::ProtocolHandlerInfo"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %33, i64 %32
  %36 = ptrtoint %"struct.apps::ProtocolHandlerInfo"* %35 to i64
  tail call void @_ZN4apps19ProtocolHandlerInfoC1ERKS0_(%"struct.apps::ProtocolHandlerInfo"* %34, %"struct.apps::ProtocolHandlerInfo"* dereferenceable(144) %1) #11
  %37 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %34, i64 1
  %38 = ptrtoint %"struct.apps::ProtocolHandlerInfo"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %39, align 8
  %41 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %3, align 8
  %42 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.apps::ProtocolHandlerInfo"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.apps::ProtocolHandlerInfo"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.apps::ProtocolHandlerInfo"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %47, i64 -1
  tail call void @_ZN4apps19ProtocolHandlerInfoC1ERKS0_(%"struct.apps::ProtocolHandlerInfo"* %48, %"struct.apps::ProtocolHandlerInfo"* dereferenceable(144) %49) #11
  %50 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.apps::ProtocolHandlerInfo"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.apps::ProtocolHandlerInfo"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.apps::ProtocolHandlerInfo"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.apps::ProtocolHandlerInfo"*
  %60 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.apps::ProtocolHandlerInfo"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.apps::ProtocolHandlerInfo", %"struct.apps::ProtocolHandlerInfo"* %62, i64 -1
  tail call void @_ZN4apps19ProtocolHandlerInfoD1Ev(%"struct.apps::ProtocolHandlerInfo"* %63) #11
  %64 = icmp eq %"struct.apps::ProtocolHandlerInfo"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN4apps19ProtocolHandlerInfoC1ERKS0_(%"struct.apps::ProtocolHandlerInfo"*, %"struct.apps::ProtocolHandlerInfo"* dereferenceable(144)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI22WebApplicationIconInfoNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, %struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.WebApplicationIconInfo* %2 to i64
  %5 = ptrtoint %struct.WebApplicationIconInfo* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 136
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.WebApplicationIconInfo** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 136
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.WebApplicationIconInfo*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.WebApplicationIconInfo** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 136
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %1, i64 %22
  %25 = select i1 %23, %struct.WebApplicationIconInfo* %24, %struct.WebApplicationIconInfo* %2
  %26 = icmp eq %struct.WebApplicationIconInfo* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %struct.WebApplicationIconInfo* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %struct.WebApplicationIconInfo* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(136) %struct.WebApplicationIconInfo* @_ZN22WebApplicationIconInfoaSERKS_(%struct.WebApplicationIconInfo* %28, %struct.WebApplicationIconInfo* dereferenceable(136) %29) #11
  %31 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %29, i64 1
  %32 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %28, i64 1
  %33 = icmp eq %struct.WebApplicationIconInfo* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %struct.WebApplicationIconInfo* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %struct.WebApplicationIconInfo* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %struct.WebApplicationIconInfo*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %struct.WebApplicationIconInfo* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %struct.WebApplicationIconInfo* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN22WebApplicationIconInfoC1ERKS_(%struct.WebApplicationIconInfo* %42, %struct.WebApplicationIconInfo* dereferenceable(136) %43) #11
  %44 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %43, i64 1
  %45 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %42, i64 1
  %46 = icmp eq %struct.WebApplicationIconInfo* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %struct.WebApplicationIconInfo* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo** %18, align 8
  %53 = icmp eq %struct.WebApplicationIconInfo* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %struct.WebApplicationIconInfo* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %55, i64 -1
  tail call void @_ZN22WebApplicationIconInfoD1Ev(%struct.WebApplicationIconInfo* %56) #11
  %57 = icmp eq %struct.WebApplicationIconInfo* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %struct.WebApplicationIconInfo* %35, %struct.WebApplicationIconInfo** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %64 = load %struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo** %63, align 8
  %65 = icmp eq %struct.WebApplicationIconInfo* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %struct.WebApplicationIconInfo* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %67, i64 -1
  tail call void @_ZN22WebApplicationIconInfoD1Ev(%struct.WebApplicationIconInfo* %68) #11
  %69 = icmp eq %struct.WebApplicationIconInfo* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %struct.WebApplicationIconInfo* %16, %struct.WebApplicationIconInfo** %63, align 8
  tail call void @_ZdlPv(i8* %74) #12
  %75 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #11
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 135637824071393761
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #13
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 136
  %83 = icmp ult i64 %82, 67818912035696880
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 135637824071393761, %81 ]
  %90 = mul i64 %89, 136
  %91 = tail call i8* @_Znwm(i64 %90) #12
  %92 = bitcast i8* %91 to %struct.WebApplicationIconInfo*
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %struct.WebApplicationIconInfo** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %92, i64 %89
  store %struct.WebApplicationIconInfo* %96, %struct.WebApplicationIconInfo** %8, align 8
  %97 = bitcast %struct.WebApplicationIconInfo** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %struct.WebApplicationIconInfo* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %struct.WebApplicationIconInfo* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %struct.WebApplicationIconInfo* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN22WebApplicationIconInfoC1ERKS_(%struct.WebApplicationIconInfo* %101, %struct.WebApplicationIconInfo* dereferenceable(136) %102) #11
  %103 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %102, i64 1
  %104 = getelementptr inbounds %struct.WebApplicationIconInfo, %struct.WebApplicationIconInfo* %101, i64 1
  %105 = icmp eq %struct.WebApplicationIconInfo* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %struct.WebApplicationIconInfo* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare dereferenceable(136) %struct.WebApplicationIconInfo* @_ZN22WebApplicationIconInfoaSERKS_(%struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo* dereferenceable(136)) local_unnamed_addr #1

declare void @_ZN22WebApplicationIconInfoC1ERKS_(%struct.WebApplicationIconInfo*, %struct.WebApplicationIconInfo* dereferenceable(136)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN22WebApplicationIconInfoD1Ev(%struct.WebApplicationIconInfo*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i32* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, i32* %0, i64 1
  %20 = icmp eq i32* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i32, i32* %1, i64 -2
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i32, i32* %19, align 4
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i32* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 -1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i32 %32, i32* %30, align 4
  %35 = icmp eq i32* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i32* [ %30, %29 ], [ %0, %34 ]
  store i32 %28, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i32* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 4
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i32* [ %410, %408 ], [ %40, %39 ]
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i32* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i32* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i32 %44, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %43, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i32 %49, i32* %47, align 4
  %57 = icmp eq i32* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i32, i32* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %63, i32* %64)
  %65 = getelementptr inbounds i32, i32* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i32* %366 to i64
  %68 = icmp eq i32* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i32, i32* %4, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i32* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i32* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i32* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i32, i32* %4, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i32* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i32* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i32, i32* %90, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %90, i64 1
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !6

98:                                               ; preds = %89, %77
  %99 = phi i32* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i32* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 28
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i32, i32* %4, i64 %103
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i32, i32* %368, i64 %108
  %110 = getelementptr i32, i32* %366, i64 %108
  %111 = icmp ult i32* %368, %110
  %112 = icmp ult i32* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 9223372036854775800
  %116 = getelementptr i32, i32* %366, i64 %115
  %117 = getelementptr i32, i32* %368, i64 %115
  %118 = add nsw i64 %115, -8
  %119 = lshr exact i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 24
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i32, i32* %366, i64 %126
  %129 = getelementptr i32, i32* %368, i64 %126
  %130 = bitcast i32* %128 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !8
  %132 = getelementptr i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !8
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !11, !noalias !8
  %136 = getelementptr i32, i32* %129, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !11, !noalias !8
  %138 = or i64 %126, 8
  %139 = getelementptr i32, i32* %366, i64 %138
  %140 = getelementptr i32, i32* %368, i64 %138
  %141 = bitcast i32* %139 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !8
  %143 = getelementptr i32, i32* %139, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !8
  %146 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !11, !noalias !8
  %147 = getelementptr i32, i32* %140, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !11, !noalias !8
  %149 = or i64 %126, 16
  %150 = getelementptr i32, i32* %366, i64 %149
  %151 = getelementptr i32, i32* %368, i64 %149
  %152 = bitcast i32* %150 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !8
  %154 = getelementptr i32, i32* %150, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !8
  %157 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !11, !noalias !8
  %158 = getelementptr i32, i32* %151, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !11, !noalias !8
  %160 = or i64 %126, 24
  %161 = getelementptr i32, i32* %366, i64 %160
  %162 = getelementptr i32, i32* %368, i64 %160
  %163 = bitcast i32* %161 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4, !alias.scope !8
  %165 = getelementptr i32, i32* %161, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !8
  %168 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %168, align 4, !alias.scope !11, !noalias !8
  %169 = getelementptr i32, i32* %162, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 4, !alias.scope !11, !noalias !8
  %171 = add i64 %126, 32
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !13

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i32, i32* %366, i64 %178
  %181 = getelementptr i32, i32* %368, i64 %178
  %182 = bitcast i32* %180 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4, !alias.scope !8
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !8
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !alias.scope !11, !noalias !8
  %188 = getelementptr i32, i32* %181, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4, !alias.scope !11, !noalias !8
  %190 = add i64 %178, 8
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !15

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i32* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i32* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i32* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i32* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i32* %196 to i64
  %202 = icmp eq i32* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i32, i32* %4, i64 %204
  %206 = ptrtoint i32* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 8
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i32, i32* %4, i64 %212
  %214 = ptrtoint i32* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr i32, i32* %196, i64 %217
  %220 = icmp ult i32* %198, %219
  %221 = icmp ult i32* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 9223372036854775800
  %225 = getelementptr i32, i32* %196, i64 %224
  %226 = getelementptr i32, i32* %198, i64 %224
  %227 = add nsw i64 %224, -8
  %228 = lshr exact i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 24
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i32, i32* %196, i64 %235
  %238 = getelementptr i32, i32* %198, i64 %235
  %239 = bitcast i32* %237 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !16
  %241 = getelementptr i32, i32* %237, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !16
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %244, align 4, !alias.scope !19, !noalias !16
  %245 = getelementptr i32, i32* %238, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %246, align 4, !alias.scope !19, !noalias !16
  %247 = or i64 %235, 8
  %248 = getelementptr i32, i32* %196, i64 %247
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = bitcast i32* %248 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !16
  %252 = getelementptr i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !16
  %255 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %255, align 4, !alias.scope !19, !noalias !16
  %256 = getelementptr i32, i32* %249, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %257, align 4, !alias.scope !19, !noalias !16
  %258 = or i64 %235, 16
  %259 = getelementptr i32, i32* %196, i64 %258
  %260 = getelementptr i32, i32* %198, i64 %258
  %261 = bitcast i32* %259 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !16
  %263 = getelementptr i32, i32* %259, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !16
  %266 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %266, align 4, !alias.scope !19, !noalias !16
  %267 = getelementptr i32, i32* %260, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %268, align 4, !alias.scope !19, !noalias !16
  %269 = or i64 %235, 24
  %270 = getelementptr i32, i32* %196, i64 %269
  %271 = getelementptr i32, i32* %198, i64 %269
  %272 = bitcast i32* %270 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !16
  %274 = getelementptr i32, i32* %270, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !16
  %277 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %277, align 4, !alias.scope !19, !noalias !16
  %278 = getelementptr i32, i32* %271, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %279, align 4, !alias.scope !19, !noalias !16
  %280 = add i64 %235, 32
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !21

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i32, i32* %196, i64 %287
  %290 = getelementptr i32, i32* %198, i64 %287
  %291 = bitcast i32* %289 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !16
  %293 = getelementptr i32, i32* %289, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !16
  %296 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %296, align 4, !alias.scope !19, !noalias !16
  %297 = getelementptr i32, i32* %290, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %298, align 4, !alias.scope !19, !noalias !16
  %299 = add i64 %287, 8
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !22

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i32* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i32* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i32* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i32, i32* %4, i64 %308
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 2
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i32* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i32* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i32, i32* %317, align 4
  store i32 %320, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %317, i64 1
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !23

325:                                              ; preds = %316, %304
  %326 = phi i32* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i32* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 28
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i32* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i32* [ %355, %329 ], [ %327, %325 ]
  %332 = load i32, i32* %330, align 4
  store i32 %332, i32* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 1
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = load i32, i32* %333, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds i32, i32* %330, i64 2
  %337 = getelementptr inbounds i32, i32* %331, i64 2
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds i32, i32* %330, i64 3
  %340 = getelementptr inbounds i32, i32* %331, i64 3
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds i32, i32* %330, i64 4
  %343 = getelementptr inbounds i32, i32* %331, i64 4
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds i32, i32* %330, i64 5
  %346 = getelementptr inbounds i32, i32* %331, i64 5
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 6
  %349 = getelementptr inbounds i32, i32* %331, i64 6
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %330, i64 7
  %352 = getelementptr inbounds i32, i32* %331, i64 7
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds i32, i32* %330, i64 8
  %355 = getelementptr inbounds i32, i32* %331, i64 8
  %356 = icmp eq i32* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !24

357:                                              ; preds = %195
  %358 = load i32, i32* %197, align 4
  %359 = load i32, i32* %196, align 4
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i32 %358, i32* %198, align 4
  %362 = getelementptr inbounds i32, i32* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i32 %359, i32* %198, align 4
  %364 = getelementptr inbounds i32, i32* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i32* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i32* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i32, i32* %198, i64 1
  %369 = icmp eq i32* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i32* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i32* [ %396, %370 ], [ %100, %98 ]
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = getelementptr inbounds i32, i32* %372, i64 1
  %376 = load i32, i32* %374, align 4
  store i32 %376, i32* %375, align 4
  %377 = getelementptr inbounds i32, i32* %371, i64 2
  %378 = getelementptr inbounds i32, i32* %372, i64 2
  %379 = load i32, i32* %377, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %371, i64 3
  %381 = getelementptr inbounds i32, i32* %372, i64 3
  %382 = load i32, i32* %380, align 4
  store i32 %382, i32* %381, align 4
  %383 = getelementptr inbounds i32, i32* %371, i64 4
  %384 = getelementptr inbounds i32, i32* %372, i64 4
  %385 = load i32, i32* %383, align 4
  store i32 %385, i32* %384, align 4
  %386 = getelementptr inbounds i32, i32* %371, i64 5
  %387 = getelementptr inbounds i32, i32* %372, i64 5
  %388 = load i32, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %389 = getelementptr inbounds i32, i32* %371, i64 6
  %390 = getelementptr inbounds i32, i32* %372, i64 6
  %391 = load i32, i32* %389, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds i32, i32* %371, i64 7
  %393 = getelementptr inbounds i32, i32* %372, i64 7
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds i32, i32* %371, i64 8
  %396 = getelementptr inbounds i32, i32* %372, i64 8
  %397 = icmp eq i32* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !25

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %399, i32* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %0, i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i32* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i32* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i32, i32* %402, i64 -1
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i32 %404, i32* %402, align 4
  %407 = icmp eq i32* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i32* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i32 %54, i32* %409, align 4
  %410 = getelementptr inbounds i32, i32* %43, i64 2
  %411 = icmp eq i32* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  %14 = getelementptr inbounds i32, i32* %4, i64 1
  %15 = load i32, i32* %0, align 4
  store i32 %15, i32* %14, align 4
  br label %390

16:                                               ; preds = %8
  store i32 %11, i32* %4, align 4
  %17 = getelementptr inbounds i32, i32* %4, i64 1
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i32* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %0, align 4
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 1
  %26 = icmp eq i32* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i32 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i32* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i32* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %29, align 4
  %33 = icmp slt i32 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i32 %28, i32* %31, align 4
  %35 = icmp eq i32* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i32* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i32, i32* %37, i64 -1
  %39 = load i32, i32* %29, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i32 %40, i32* %37, align 4
  %43 = icmp eq i32* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i32* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %45, align 4
  br label %48

47:                                               ; preds = %27
  store i32 %32, i32* %31, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = icmp eq i32* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %31, align 4
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %55, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %54, i32* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i32, i32* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %55, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %56, i32* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i32* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i32* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i32* %60 to i64
  %63 = icmp eq i32* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i32, i32* %1, i64 -1
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i32, i32* %1, i64 -1
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %61, i64 %76
  %78 = getelementptr i32, i32* %60, i64 %76
  %79 = icmp ult i32* %61, %78
  %80 = icmp ult i32* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 9223372036854775800
  %84 = getelementptr i32, i32* %61, i64 %83
  %85 = getelementptr i32, i32* %60, i64 %83
  %86 = add nsw i64 %83, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i32, i32* %61, i64 %94
  %97 = getelementptr i32, i32* %60, i64 %94
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !26
  %100 = getelementptr i32, i32* %97, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !26
  %103 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4, !alias.scope !29, !noalias !26
  %104 = getelementptr i32, i32* %96, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !29, !noalias !26
  %106 = or i64 %94, 8
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = getelementptr i32, i32* %60, i64 %106
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !26
  %111 = getelementptr i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !26
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !29, !noalias !26
  %115 = getelementptr i32, i32* %107, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !29, !noalias !26
  %117 = or i64 %94, 16
  %118 = getelementptr i32, i32* %61, i64 %117
  %119 = getelementptr i32, i32* %60, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !26
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !26
  %125 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !29, !noalias !26
  %126 = getelementptr i32, i32* %118, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !29, !noalias !26
  %128 = or i64 %94, 24
  %129 = getelementptr i32, i32* %61, i64 %128
  %130 = getelementptr i32, i32* %60, i64 %128
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !26
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !26
  %136 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !29, !noalias !26
  %137 = getelementptr i32, i32* %129, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !29, !noalias !26
  %139 = add i64 %94, 32
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !31

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i32, i32* %61, i64 %146
  %149 = getelementptr i32, i32* %60, i64 %146
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !26
  %152 = getelementptr i32, i32* %149, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !26
  %155 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %155, align 4, !alias.scope !29, !noalias !26
  %156 = getelementptr i32, i32* %148, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4, !alias.scope !29, !noalias !26
  %158 = add i64 %146, 8
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !32

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i32* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i32* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i32* %165 to i64
  %167 = getelementptr i32, i32* %1, i64 -1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i32* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i32* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 1
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !33

183:                                              ; preds = %174, %163
  %184 = phi i32* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i32* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 28
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !34

215:                                              ; preds = %53, %385
  %216 = phi i32* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i32* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i32* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i32* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i32* %217 to i64
  %222 = icmp eq i32* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i32, i32* %0, i64 %224
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i32, i32* %0, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i32, i32* %216, i64 %237
  %239 = getelementptr i32, i32* %217, i64 %237
  %240 = icmp ult i32* %216, %239
  %241 = icmp ult i32* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 9223372036854775800
  %245 = getelementptr i32, i32* %216, i64 %244
  %246 = getelementptr i32, i32* %217, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %216, i64 %255
  %258 = getelementptr i32, i32* %217, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !35
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !35
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !38, !noalias !35
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !38, !noalias !35
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %216, i64 %267
  %269 = getelementptr i32, i32* %217, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !35
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !35
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !38, !noalias !35
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !38, !noalias !35
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %216, i64 %278
  %280 = getelementptr i32, i32* %217, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !35
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !35
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !38, !noalias !35
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !38, !noalias !35
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %216, i64 %289
  %291 = getelementptr i32, i32* %217, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !35
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !35
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !38, !noalias !35
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !38, !noalias !35
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !40

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %216, i64 %307
  %310 = getelementptr i32, i32* %217, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !35
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !35
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !38, !noalias !35
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !38, !noalias !35
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !41

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i32* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i32* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i32* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i32, i32* %0, i64 %328
  %330 = ptrtoint i32* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i32* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i32* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = getelementptr inbounds i32, i32* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !42

345:                                              ; preds = %336, %324
  %346 = phi i32* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i32* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 28
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i32* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i32* [ %374, %349 ], [ %347, %345 ]
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %351, i64 1
  %354 = getelementptr inbounds i32, i32* %350, i64 1
  %355 = load i32, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 2
  %357 = getelementptr inbounds i32, i32* %350, i64 2
  %358 = load i32, i32* %356, align 4
  store i32 %358, i32* %357, align 4
  %359 = getelementptr inbounds i32, i32* %351, i64 3
  %360 = getelementptr inbounds i32, i32* %350, i64 3
  %361 = load i32, i32* %359, align 4
  store i32 %361, i32* %360, align 4
  %362 = getelementptr inbounds i32, i32* %351, i64 4
  %363 = getelementptr inbounds i32, i32* %350, i64 4
  %364 = load i32, i32* %362, align 4
  store i32 %364, i32* %363, align 4
  %365 = getelementptr inbounds i32, i32* %351, i64 5
  %366 = getelementptr inbounds i32, i32* %350, i64 5
  %367 = load i32, i32* %365, align 4
  store i32 %367, i32* %366, align 4
  %368 = getelementptr inbounds i32, i32* %351, i64 6
  %369 = getelementptr inbounds i32, i32* %350, i64 6
  %370 = load i32, i32* %368, align 4
  store i32 %370, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %351, i64 7
  %372 = getelementptr inbounds i32, i32* %350, i64 7
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %351, i64 8
  %375 = getelementptr inbounds i32, i32* %350, i64 8
  %376 = icmp eq i32* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !43

377:                                              ; preds = %215
  %378 = load i32, i32* %218, align 4
  %379 = load i32, i32* %217, align 4
  %380 = icmp slt i32 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i32 %378, i32* %216, align 4
  %382 = getelementptr inbounds i32, i32* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i32 %379, i32* %216, align 4
  %384 = getelementptr inbounds i32, i32* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i32* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i32* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i32, i32* %216, i64 1
  %389 = icmp eq i32* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32*, i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i64, i32*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i32* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i32* %1 to i64
  %13 = ptrtoint i32* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i32* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i32*
  %27 = load i32, i32* %26, align 4
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i32*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i32*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i32, i32* %31, i64 -1
  %38 = bitcast i32* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 8
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i32* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i32* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr i32, i32* %31, i64 -1
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i32* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i32* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = getelementptr inbounds i32, i32* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !44

65:                                               ; preds = %56, %45
  %66 = phi i32* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i32* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i32* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 28
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i32, i32* %31, i64 -1
  %72 = bitcast i32* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i32, i32* %6, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr i32, i32* %29, i64 %77
  %81 = icmp ugt i32* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 9223372036854775800
  %86 = getelementptr i32, i32* %6, i64 %85
  %87 = getelementptr i32, i32* %29, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %6, i64 %96
  %99 = getelementptr i32, i32* %29, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !45
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !45
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !48, !noalias !45
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !48, !noalias !45
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %6, i64 %108
  %110 = getelementptr i32, i32* %29, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !45
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !45
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !48, !noalias !45
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !48, !noalias !45
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %6, i64 %119
  %121 = getelementptr i32, i32* %29, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !45
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !45
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !48, !noalias !45
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !48, !noalias !45
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %6, i64 %130
  %132 = getelementptr i32, i32* %29, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !45
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !45
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !48, !noalias !45
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !48, !noalias !45
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !50

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %6, i64 %148
  %151 = getelementptr i32, i32* %29, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !45
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !45
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !48, !noalias !45
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !48, !noalias !45
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !51

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i32* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i32, i32* %15, i64 -1
  %169 = bitcast i32* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 8
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i32* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i32* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i32* %178 to i64
  %180 = getelementptr i32, i32* %15, i64 -1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i32* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i32* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %188, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !52

196:                                              ; preds = %187, %176
  %197 = phi i32* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i32* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i32* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 28
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i32, i32* %15, i64 -1
  %203 = bitcast i32* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i32, i32* %6, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr i32, i32* %31, i64 %208
  %212 = icmp ugt i32* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 9223372036854775800
  %217 = getelementptr i32, i32* %6, i64 %216
  %218 = getelementptr i32, i32* %31, i64 %216
  %219 = add nsw i64 %216, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 24
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i32, i32* %6, i64 %227
  %230 = getelementptr i32, i32* %31, i64 %227
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !53
  %233 = getelementptr i32, i32* %230, i64 4
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !53
  %236 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %236, align 4, !alias.scope !56, !noalias !53
  %237 = getelementptr i32, i32* %229, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !56, !noalias !53
  %239 = or i64 %227, 8
  %240 = getelementptr i32, i32* %6, i64 %239
  %241 = getelementptr i32, i32* %31, i64 %239
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !53
  %244 = getelementptr i32, i32* %241, i64 4
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !53
  %247 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %247, align 4, !alias.scope !56, !noalias !53
  %248 = getelementptr i32, i32* %240, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %249, align 4, !alias.scope !56, !noalias !53
  %250 = or i64 %227, 16
  %251 = getelementptr i32, i32* %6, i64 %250
  %252 = getelementptr i32, i32* %31, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !53
  %255 = getelementptr i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !53
  %258 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !56, !noalias !53
  %259 = getelementptr i32, i32* %251, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !56, !noalias !53
  %261 = or i64 %227, 24
  %262 = getelementptr i32, i32* %6, i64 %261
  %263 = getelementptr i32, i32* %31, i64 %261
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !53
  %266 = getelementptr i32, i32* %263, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !53
  %269 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !56, !noalias !53
  %270 = getelementptr i32, i32* %262, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4, !alias.scope !56, !noalias !53
  %272 = add i64 %227, 32
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !58

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i32, i32* %6, i64 %279
  %282 = getelementptr i32, i32* %31, i64 %279
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !53
  %285 = getelementptr i32, i32* %282, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !53
  %288 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %288, align 4, !alias.scope !56, !noalias !53
  %289 = getelementptr i32, i32* %281, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %290, align 4, !alias.scope !56, !noalias !53
  %291 = add i64 %279, 8
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !59

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i32* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i32* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i32* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i32* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i32* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i32* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i32* %297 to i64
  %306 = ptrtoint i32* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i32* %301 to i8*
  %311 = bitcast i32* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %307, i1 false) #11
  br label %887

312:                                              ; preds = %299
  %313 = load i32, i32* %302, align 4
  %314 = load i32, i32* %300, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i32 %313, i32* %301, align 4
  %317 = getelementptr inbounds i32, i32* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i32 %314, i32* %301, align 4
  %319 = getelementptr inbounds i32, i32* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i32* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i32* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i32, i32* %301, i64 1
  %324 = icmp eq i32* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i32* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i32* [ %350, %325 ], [ %68, %65 ]
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %327, i64 1
  %330 = getelementptr inbounds i32, i32* %326, i64 1
  %331 = load i32, i32* %329, align 4
  store i32 %331, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 2
  %333 = getelementptr inbounds i32, i32* %326, i64 2
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds i32, i32* %327, i64 3
  %336 = getelementptr inbounds i32, i32* %326, i64 3
  %337 = load i32, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %327, i64 4
  %339 = getelementptr inbounds i32, i32* %326, i64 4
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds i32, i32* %327, i64 5
  %342 = getelementptr inbounds i32, i32* %326, i64 5
  %343 = load i32, i32* %341, align 4
  store i32 %343, i32* %342, align 4
  %344 = getelementptr inbounds i32, i32* %327, i64 6
  %345 = getelementptr inbounds i32, i32* %326, i64 6
  %346 = load i32, i32* %344, align 4
  store i32 %346, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %327, i64 7
  %348 = getelementptr inbounds i32, i32* %326, i64 7
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %327, i64 8
  %351 = getelementptr inbounds i32, i32* %326, i64 8
  %352 = icmp eq i32* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !60

353:                                              ; preds = %196, %520, %294
  %354 = phi i32* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i32* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i32* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i32* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i32* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i32* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i32, i32* %358, i64 -1
  %363 = ptrtoint i32* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 2
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 8
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i32, i32* %358, i64 -1
  %370 = ptrtoint i32* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 2
  %373 = xor i64 %372, -1
  %374 = getelementptr i32, i32* %357, i64 %373
  %375 = getelementptr i32, i32* %358, i64 %373
  %376 = icmp ult i32* %374, %358
  %377 = icmp ult i32* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 9223372036854775800
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i32, i32* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i32, i32* %357, i64 %383
  %385 = add nsw i64 %380, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i32, i32* %358, i64 -1
  %393 = getelementptr i32, i32* %357, i64 -1
  %394 = getelementptr i32, i32* %358, i64 -1
  %395 = getelementptr i32, i32* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i32, i32* %392, i64 %399
  %402 = getelementptr inbounds i32, i32* %401, i64 -3
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !61
  %405 = getelementptr inbounds i32, i32* %401, i64 -4
  %406 = getelementptr inbounds i32, i32* %405, i64 -3
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !61
  %409 = getelementptr inbounds i32, i32* %393, i64 %400
  %410 = getelementptr inbounds i32, i32* %409, i64 -3
  %411 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %411, align 4, !alias.scope !64, !noalias !61
  %412 = getelementptr inbounds i32, i32* %409, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %414, align 4, !alias.scope !64, !noalias !61
  %415 = sub nuw nsw i64 -8, %397
  %416 = sub nuw nsw i64 -8, %397
  %417 = getelementptr inbounds i32, i32* %394, i64 %415
  %418 = getelementptr inbounds i32, i32* %417, i64 -3
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !61
  %421 = getelementptr inbounds i32, i32* %417, i64 -4
  %422 = getelementptr inbounds i32, i32* %421, i64 -3
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !61
  %425 = getelementptr inbounds i32, i32* %395, i64 %416
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %427, align 4, !alias.scope !64, !noalias !61
  %428 = getelementptr inbounds i32, i32* %425, i64 -4
  %429 = getelementptr inbounds i32, i32* %428, i64 -3
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %430, align 4, !alias.scope !64, !noalias !61
  %431 = add i64 %397, 16
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !66

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -16, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i32, i32* %358, i64 -1
  %441 = getelementptr i32, i32* %357, i64 -1
  %442 = getelementptr inbounds i32, i32* %440, i64 %437
  %443 = getelementptr inbounds i32, i32* %442, i64 -3
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !61
  %446 = getelementptr inbounds i32, i32* %442, i64 -4
  %447 = getelementptr inbounds i32, i32* %446, i64 -3
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !61
  %450 = getelementptr inbounds i32, i32* %441, i64 %437
  %451 = getelementptr inbounds i32, i32* %450, i64 -3
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %452, align 4, !alias.scope !64, !noalias !61
  %453 = getelementptr inbounds i32, i32* %450, i64 -4
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %455, align 4, !alias.scope !64, !noalias !61
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i32* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i32* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i32, i32* %459, i64 -1
  %462 = ptrtoint i32* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i32* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i32* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i32, i32* %469, i64 -1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds i32, i32* %470, i64 -1
  store i32 %473, i32* %474, align 4
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !67

477:                                              ; preds = %468, %458
  %478 = phi i32* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i32* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 28
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i32* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i32* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i32, i32* %482, i64 -1
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds i32, i32* %483, i64 -1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds i32, i32* %482, i64 -2
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %483, i64 -2
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds i32, i32* %482, i64 -3
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds i32, i32* %483, i64 -3
  store i32 %491, i32* %492, align 4
  %493 = getelementptr inbounds i32, i32* %482, i64 -4
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %483, i64 -4
  store i32 %494, i32* %495, align 4
  %496 = getelementptr inbounds i32, i32* %482, i64 -5
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %483, i64 -5
  store i32 %497, i32* %498, align 4
  %499 = getelementptr inbounds i32, i32* %482, i64 -6
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds i32, i32* %483, i64 -6
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds i32, i32* %482, i64 -7
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %483, i64 -7
  store i32 %503, i32* %504, align 4
  %505 = getelementptr inbounds i32, i32* %482, i64 -8
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %483, i64 -8
  store i32 %506, i32* %507, align 4
  %508 = icmp eq i32* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !68

509:                                              ; preds = %356
  %510 = getelementptr inbounds i32, i32* %359, i64 -1
  %511 = getelementptr inbounds i32, i32* %358, i64 -1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %510, align 4
  %514 = icmp slt i32 %512, %513
  %515 = getelementptr inbounds i32, i32* %357, i64 -1
  %516 = select i1 %514, i32 %513, i32 %512
  %517 = select i1 %514, i32* %510, i32* %359
  %518 = select i1 %514, i32* %358, i32* %511
  store i32 %516, i32* %515, align 4
  %519 = icmp eq i32* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i32* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i32* [ %545, %520 ], [ %199, %196 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !69

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = icmp slt i32 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i32, i32* %551, i64 1
  %556 = ptrtoint i32* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i32*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i32, i32* %26, i64 %563
  %565 = ptrtoint i32* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 2
  %570 = load i32, i32* %564, align 4
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i32* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = icmp slt i32 %570, %576
  %578 = getelementptr inbounds i32, i32* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i32* %572, i32* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i32* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i32* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 2
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i32*
  %593 = inttoptr i64 %550 to i32*
  store i32 %27, i32* %593, align 4
  store i32 %552, i32* %592, align 4
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i32, i32* %560, i64 %595
  %597 = ptrtoint i32* %596 to i64
  %598 = ptrtoint i32* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 2
  %603 = load i32, i32* %596, align 4
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i32* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i32, i32* %605, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = icmp slt i32 %609, %603
  %611 = getelementptr inbounds i32, i32* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i32* %611, i32* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i32* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i32* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 2
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i32*
  %630 = inttoptr i64 %624 to i32*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i32* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i32* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i32, i32* %629, i64 1
  %638 = icmp eq i32* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i32, i32* %629, align 4
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 2
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 %641, i1 false) #11
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i32, i32* %629, i64 %642
  store i32 %640, i32* %646, align 4
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i32, i32* %26, i64 1
  %649 = icmp eq i32* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i32, i32* %630, i64 -1
  %652 = load i32, i32* %651, align 4
  %653 = ptrtoint i32* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 2
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i32, i32* %630, i64 %658
  %660 = bitcast i32* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %631, i64 %654, i1 false) #11
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i32* [ %659, %656 ], [ %630, %650 ]
  store i32 %652, i32* %629, align 4
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 2
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 2
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i32, i32* %629, align 4
  store i32 %27, i32* %629, align 4
  store i32 %670, i32* %26, align 4
  %671 = getelementptr inbounds i32, i32* %629, i64 1
  %672 = getelementptr inbounds i32, i32* %26, i64 1
  %673 = icmp eq i32* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i32, i32* %26, i64 -2
  %676 = bitcast i32* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 2
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 8
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i32, i32* %629, i64 2
  %685 = getelementptr i32, i32* %26, i64 -2
  %686 = bitcast i32* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 2
  %691 = getelementptr i32, i32* %684, i64 %690
  %692 = getelementptr i32, i32* %26, i64 2
  %693 = getelementptr i32, i32* %692, i64 %690
  %694 = icmp ult i32* %671, %693
  %695 = icmp ult i32* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 9223372036854775800
  %699 = getelementptr i32, i32* %672, i64 %698
  %700 = getelementptr i32, i32* %671, i64 %698
  %701 = add nsw i64 %698, -8
  %702 = lshr exact i64 %701, 3
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i32, i32* %672, i64 %709
  %712 = getelementptr i32, i32* %671, i64 %709
  %713 = bitcast i32* %711 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !70
  %715 = getelementptr i32, i32* %711, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !70
  %718 = bitcast i32* %712 to <4 x i32>*
  %719 = load <4 x i32>, <4 x i32>* %718, align 4, !alias.scope !73, !noalias !70
  %720 = getelementptr i32, i32* %712, i64 4
  %721 = bitcast i32* %720 to <4 x i32>*
  %722 = load <4 x i32>, <4 x i32>* %721, align 4, !alias.scope !73, !noalias !70
  %723 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %723, align 4, !alias.scope !73, !noalias !70
  %724 = bitcast i32* %720 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %724, align 4, !alias.scope !73, !noalias !70
  %725 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %719, <4 x i32>* %725, align 4, !alias.scope !70
  %726 = bitcast i32* %715 to <4 x i32>*
  store <4 x i32> %722, <4 x i32>* %726, align 4, !alias.scope !70
  %727 = or i64 %709, 8
  %728 = getelementptr i32, i32* %672, i64 %727
  %729 = getelementptr i32, i32* %671, i64 %727
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !70
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !70
  %735 = bitcast i32* %729 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4, !alias.scope !73, !noalias !70
  %737 = getelementptr i32, i32* %729, i64 4
  %738 = bitcast i32* %737 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !73, !noalias !70
  %740 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %740, align 4, !alias.scope !73, !noalias !70
  %741 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %741, align 4, !alias.scope !73, !noalias !70
  %742 = bitcast i32* %728 to <4 x i32>*
  store <4 x i32> %736, <4 x i32>* %742, align 4, !alias.scope !70
  %743 = bitcast i32* %732 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !70
  %744 = add i64 %709, 16
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !75

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i32, i32* %672, i64 %748
  %752 = getelementptr i32, i32* %671, i64 %748
  %753 = bitcast i32* %751 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !70
  %755 = getelementptr i32, i32* %751, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  %757 = load <4 x i32>, <4 x i32>* %756, align 4, !alias.scope !70
  %758 = bitcast i32* %752 to <4 x i32>*
  %759 = load <4 x i32>, <4 x i32>* %758, align 4, !alias.scope !73, !noalias !70
  %760 = getelementptr i32, i32* %752, i64 4
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !73, !noalias !70
  %763 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %763, align 4, !alias.scope !73, !noalias !70
  %764 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %757, <4 x i32>* %764, align 4, !alias.scope !73, !noalias !70
  %765 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %759, <4 x i32>* %765, align 4, !alias.scope !70
  %766 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !70
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i32* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i32* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i32* %771 to i64
  %773 = getelementptr i32, i32* %26, i64 -1
  %774 = ptrtoint i32* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 2
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i32* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i32* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i32, i32* %781, align 4
  %785 = load i32, i32* %782, align 4
  store i32 %784, i32* %782, align 4
  store i32 %785, i32* %781, align 4
  %786 = getelementptr inbounds i32, i32* %782, i64 1
  %787 = getelementptr inbounds i32, i32* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !76

790:                                              ; preds = %780, %769
  %791 = phi i32* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i32* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 12
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i32* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i32* [ %811, %794 ], [ %792, %790 ]
  %797 = load i32, i32* %795, align 4
  %798 = load i32, i32* %796, align 4
  store i32 %797, i32* %796, align 4
  store i32 %798, i32* %795, align 4
  %799 = getelementptr inbounds i32, i32* %796, i64 1
  %800 = getelementptr inbounds i32, i32* %795, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %799, align 4
  store i32 %801, i32* %799, align 4
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds i32, i32* %796, i64 2
  %804 = getelementptr inbounds i32, i32* %795, i64 2
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %803, align 4
  store i32 %805, i32* %803, align 4
  store i32 %806, i32* %804, align 4
  %807 = getelementptr inbounds i32, i32* %796, i64 3
  %808 = getelementptr inbounds i32, i32* %795, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %807, align 4
  store i32 %809, i32* %807, align 4
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds i32, i32* %796, i64 4
  %812 = getelementptr inbounds i32, i32* %795, i64 4
  %813 = icmp eq i32* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !77

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i32, i32* %629, i64 %815
  %823 = shl nsw i64 %815, 2
  %824 = add i64 %823, -4
  %825 = and i64 %824, 4
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i32, i32* %822, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = getelementptr inbounds i32, i32* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i32* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i32* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i32* %833 to i64
  %835 = load i32, i32* %833, align 4
  store i32 %835, i32* %832, align 4
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 2
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i32, i32* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i32, i32* %629, i64 %840
  %842 = select i1 %838, i32* %839, i32* %841
  %843 = icmp eq i32* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i32 %829, i32* %833, align 4
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i32* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i32, i32* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i32* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i32, i32* %851, i64 -1
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i32* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i32* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i32* %857 to i64
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %856, align 4
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 2
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i32, i32* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i32, i32* %629, i64 %864
  %866 = select i1 %862, i32* %863, i32* %865
  %867 = icmp eq i32* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i32 %853, i32* %857, align 4
  %869 = getelementptr inbounds i32, i32* %851, i64 -2
  %870 = load i32, i32* %869, align 4
  %871 = getelementptr inbounds i32, i32* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i32* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i32* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %560, i32* %629, i32* %873, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i32* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %873, i32* %630, i32* %15, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i32* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i32* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i32* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i32* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i32* %890 to i64
  %892 = load i32, i32* %890, align 4
  store i32 %892, i32* %889, align 4
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 2
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i32, i32* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i32, i32* %629, i64 %897
  %899 = select i1 %895, i32* %896, i32* %898
  %900 = icmp eq i32* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i32 %870, i32* %890, align 4
  %902 = icmp eq i32* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN35WebApplicationShortcutsMenuItemInfoC1ERKS_(%struct.WebApplicationShortcutsMenuItemInfo*, %struct.WebApplicationShortcutsMenuItemInfo* dereferenceable(216)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN35WebApplicationShortcutsMenuItemInfoD1Ev(%struct.WebApplicationShortcutsMenuItemInfo*) unnamed_addr #3

declare void @_ZN4apps14UrlHandlerInfoC1ERKS0_(%"struct.apps::UrlHandlerInfo"*, %"struct.apps::UrlHandlerInfo"* dereferenceable(136)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4apps14UrlHandlerInfoD1Ev(%"struct.apps::UrlHandlerInfo"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN7web_app12_GLOBAL__N_136GetDownloadedShortcutsMenuIconsSizesERKNSt3__16vectorI11IconBitmapsNS1_9allocatorIS3_EEEE: argument 0"}
!5 = distinct !{!5, !"_ZN7web_app12_GLOBAL__N_136GetDownloadedShortcutsMenuIconsSizesERKNSt3__16vectorI11IconBitmapsNS1_9allocatorIS3_EEEE"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !7}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !14}
!22 = distinct !{!22, !7}
!23 = distinct !{!23, !7}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !14}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !7}
!33 = distinct !{!33, !7}
!34 = distinct !{!34, !14}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !7}
!42 = distinct !{!42, !7}
!43 = distinct !{!43, !14}
!44 = distinct !{!44, !7}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !14}
!51 = distinct !{!51, !7}
!52 = distinct !{!52, !7}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !14}
!59 = distinct !{!59, !7}
!60 = distinct !{!60, !14}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !14}
!67 = distinct !{!67, !7}
!68 = distinct !{!68, !14}
!69 = distinct !{!69, !14}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !14}
!76 = distinct !{!76, !7}
!77 = distinct !{!77, !14}
