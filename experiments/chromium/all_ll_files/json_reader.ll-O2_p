; ModuleID = '../../base/json/json_reader.cc'
source_filename = "../../base/json/json_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::JSONReader::ValueWithError" = type { %"class.absl::optional", %"class.std::__1::basic_string", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::internal::JSONParser" = type <{ i32, [4 x i8], i64, %"class.base::BasicStringPiece", i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.base::BasicStringPiece" = type { i8*, i64 }

@_ZN4base10JSONReader14ValueWithErrorC1Ev = hidden unnamed_addr alias void (%"struct.base::JSONReader::ValueWithError"*), void (%"struct.base::JSONReader::ValueWithError"*)* @_ZN4base10JSONReader14ValueWithErrorC2Ev
@_ZN4base10JSONReader14ValueWithErrorC1EOS1_ = hidden unnamed_addr alias void (%"struct.base::JSONReader::ValueWithError"*, %"struct.base::JSONReader::ValueWithError"*), void (%"struct.base::JSONReader::ValueWithError"*, %"struct.base::JSONReader::ValueWithError"*)* @_ZN4base10JSONReader14ValueWithErrorC2EOS1_
@_ZN4base10JSONReader14ValueWithErrorD1Ev = hidden unnamed_addr alias void (%"struct.base::JSONReader::ValueWithError"*), void (%"struct.base::JSONReader::ValueWithError"*)* @_ZN4base10JSONReader14ValueWithErrorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base10JSONReader14ValueWithErrorC2Ev(%"struct.base::JSONReader::ValueWithError"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base10JSONReader14ValueWithErrorC2EOS1_(%"struct.base::JSONReader::ValueWithError"*, %"struct.base::JSONReader::ValueWithError"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false) #5
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %9, %"class.base::Value"* dereferenceable(32) %8) #5
  store i8 1, i8* %3, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %1, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #5
  %15 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %1, i64 0, i32 2
  %17 = bitcast i32* %16 to i64*
  %18 = bitcast i32* %15 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base10JSONReader14ValueWithErrorD2Ev(%"struct.base::JSONReader::ValueWithError"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #6
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %15) #5
  store i8 0, i8* %11, align 8
  br label %16

16:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.base::JSONReader::ValueWithError"* @_ZN4base10JSONReader14ValueWithErroraSEOS1_(%"struct.base::JSONReader::ValueWithError"* returned, %"struct.base::JSONReader::ValueWithError"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* %11, %"class.base::Value"* dereferenceable(32) %7) #5
  br label %21

14:                                               ; preds = %6
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %11, %"class.base::Value"* dereferenceable(32) %7) #5
  store i8 1, i8* %8, align 8
  br label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %20) #5
  store i8 0, i8* %16, align 8
  br label %21

21:                                               ; preds = %12, %14, %15, %19
  %22 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %1, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #6
  br label %31

31:                                               ; preds = %21, %28
  %32 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #5
  %34 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 0, i8* %35, align 1
  store i8 0, i8* %33, align 1
  %36 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %1, i64 0, i32 2
  %38 = bitcast i32* %37 to i64*
  %39 = bitcast i32* %36 to i64*
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  ret %"struct.base::JSONReader::ValueWithError"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(%"class.absl::optional"* noalias sret, i8*, i64, i32, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::internal::JSONParser", align 8
  %7 = bitcast %"class.base::internal::JSONParser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 72, i1 false)
  call void @_ZN4base8internal10JSONParserC1Eim(%"class.base::internal::JSONParser"* nonnull %6, i32 %3, i64 %4) #5
  call void @_ZN4base8internal10JSONParser5ParseENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional"* sret %0, %"class.base::internal::JSONParser"* nonnull %6, i8* %1, i64 %2) #5
  call void @_ZN4base8internal10JSONParserD1Ev(%"class.base::internal::JSONParser"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8internal10JSONParserC1Eim(%"class.base::internal::JSONParser"*, i32, i64) unnamed_addr #2

declare void @_ZN4base8internal10JSONParser5ParseENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional"* sret, %"class.base::internal::JSONParser"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal10JSONParserD1Ev(%"class.base::internal::JSONParser"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZN4base10JSONReader14ReadDeprecatedENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(i8*, i64, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::JSONParser", align 8
  %6 = alloca %"class.absl::optional", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  %9 = bitcast %"class.base::internal::JSONParser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #5, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 72, i1 false) #5, !noalias !3
  call void @_ZN4base8internal10JSONParserC1Eim(%"class.base::internal::JSONParser"* nonnull %5, i32 %2, i64 %3) #5, !noalias !3
  call void @_ZN4base8internal10JSONParser5ParseENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional"* nonnull sret %6, %"class.base::internal::JSONParser"* nonnull %5, i8* %0, i64 %1) #5
  call void @_ZN4base8internal10JSONParserD1Ev(%"class.base::internal::JSONParser"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #5, !noalias !3
  %10 = load i8, i8* %8, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %7, %"class.base::Value"* dereferenceable(32) %13) #5
  %14 = call %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"* nonnull %7) #5
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #5
  %15 = load i8, i8* %8, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %18) #5
  store i8 0, i8* %8, align 8
  br label %19

19:                                               ; preds = %4, %12, %17
  %20 = phi %"class.base::Value"* [ %14, %12 ], [ %14, %17 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #5
  ret %"class.base::Value"* %20
}

declare %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base10JSONReader27ReadAndReturnValueWithErrorENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"struct.base::JSONReader::ValueWithError"* noalias sret, i8*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::JSONParser", align 8
  %6 = alloca %"class.absl::optional", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.base::JSONReader::ValueWithError"* %0 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  store i8 0, i8* %8, align 8
  %10 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 64, i1 false) #5
  %12 = bitcast %"class.base::internal::JSONParser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 72, i1 false)
  call void @_ZN4base8internal10JSONParserC1Eim(%"class.base::internal::JSONParser"* nonnull %5, i32 %3, i64 200) #5
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #5
  call void @_ZN4base8internal10JSONParser5ParseENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional"* nonnull sret %6, %"class.base::internal::JSONParser"* nonnull %5, i8* %1, i64 %2) #5
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #5
  br label %27

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %18, %"class.base::Value"* dereferenceable(32) %19) #5
  store i8 1, i8* %8, align 8
  %20 = load i8, i8* %13, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #5
  br label %43

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %24) #5
  %25 = load i8, i8* %8, align 8, !range !2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %43

27:                                               ; preds = %16, %23
  %28 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #5
  call void @_ZNK4base8internal10JSONParser15GetErrorMessageEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.base::internal::JSONParser"* nonnull %5) #5
  %29 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #6
  br label %37

37:                                               ; preds = %34, %27
  %38 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %28, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #5
  %39 = call i32 @_ZNK4base8internal10JSONParser10error_lineEv(%"class.base::internal::JSONParser"* nonnull %5) #5
  %40 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 2
  store i32 %39, i32* %40, align 8
  %41 = call i32 @_ZNK4base8internal10JSONParser12error_columnEv(%"class.base::internal::JSONParser"* nonnull %5) #5
  %42 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %0, i64 0, i32 3
  store i32 %41, i32* %42, align 4
  br label %43

43:                                               ; preds = %22, %23, %37
  call void @_ZN4base8internal10JSONParserD1Ev(%"class.base::internal::JSONParser"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #5
  ret void
}

declare void @_ZNK4base8internal10JSONParser15GetErrorMessageEv(%"class.std::__1::basic_string"* sret, %"class.base::internal::JSONParser"*) local_unnamed_addr #2

declare i32 @_ZNK4base8internal10JSONParser10error_lineEv(%"class.base::internal::JSONParser"*) local_unnamed_addr #2

declare i32 @_ZNK4base8internal10JSONParser12error_columnEv(%"class.base::internal::JSONParser"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim: argument 0"}
!5 = distinct !{!5, !"_ZN4base10JSONReader4ReadENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim"}
