; ModuleID = '../../third_party/skia/src/gpu/effects/GrConvexPolyEffect.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/GrConvexPolyEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRGBA4f = type { float, float, float, float }
%class.GrConvexPolyEffect = type { %class.GrFragmentProcessor.base, i32, i32, [24 x float], [4 x i8] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.17, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.17 = type { %class.SkAlignedSTStorage.18, %class.SkTArray.19 }
%class.SkAlignedSTStorage.18 = type { [8 x i8] }
%class.SkTArray.19 = type { %"class.std::__1::unique_ptr.20"*, i64 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.17, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrGLConvexPolyEffect = type <{ %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, [24 x float], [4 x i8] }>
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.1 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrGLSLFragmentProcessor* }
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.6, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.15], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkSTArray.6 = type { %class.SkAlignedSTStorage.7, %class.SkTArray.8 }
%class.SkAlignedSTStorage.7 = type { [16 x i8] }
%class.SkTArray.8 = type { %"class.std::__1::unique_ptr.9"*, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.15 = type { %class.SkAlignedSTStorage.16, %class.SkTArray }
%class.SkAlignedSTStorage.16 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%"class.SkSL::dsl::DSLVar" = type <{ %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLType", i32, [4 x i8], %"class.std::__1::unique_ptr.9", %"class.SkSL::Variable"*, i8*, i8*, %"class.SkSL::dsl::DSLExpression", i8, i8, [6 x i8] }>
%"class.SkSL::dsl::DSLModifiers" = type { %"struct.SkSL::Modifiers" }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::dsl::DSLType" = type <{ %"class.SkSL::Type"*, i8, [7 x i8] }>
%"class.SkSL::Type" = type opaque
%"class.SkSL::Variable" = type opaque
%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type opaque
%"class.SkSL::dsl::DSLStatement" = type { %"class.std::__1::unique_ptr.9" }
%"class.SkSL::dsl::DSLPossibleExpression" = type { %"class.std::__1::unique_ptr.26" }
%"class.SkSL::dsl::PositionInfo" = type <{ i8*, i32, [4 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkPath = type <{ %class.sk_sp.33, i32, %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36", i8, i8 }>
%class.sk_sp.33 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.34, %class.SkTDArray.35, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.34 = type { i8*, i32, i32 }
%class.SkTDArray.35 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.41 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.36" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.41 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.42", [3 x i8] }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i8 }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.46*, i32, i32 }
%class.SkTArray.46 = type { i32*, i64 }
%class.SkTArray.55 = type { %"class.SkSL::dsl::DSLExpression"*, i64 }

$_ZN20GrGLConvexPolyEffectD0Ev = comdat any

$_ZNK18GrConvexPolyEffect4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN4SkSL3dsl7DSLType9ConstructIJNS0_13DSLExpressionEEEES3_S1_DpOT_ = comdat any

$_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_ = comdat any

$_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [10 x i8] c"edgeArray\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/effects/GrConvexPolyEffect.cpp\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"edge\00", align 1
@_ZL17SK_PMColor4fWHITE = internal constant %struct.SkRGBA4f { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@_ZL23SK_PMColor4fTRANSPARENT = internal constant %struct.SkRGBA4f zeroinitializer, align 4
@_ZTV18GrConvexPolyEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrConvexPolyEffect*)* @_ZN18GrConvexPolyEffectD2Ev to i8*), i8* bitcast (void (%class.GrConvexPolyEffect*)* @_ZN18GrConvexPolyEffectD0Ev to i8*), i8* bitcast (i8* (%class.GrConvexPolyEffect*)* @_ZNK18GrConvexPolyEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrConvexPolyEffect*)* @_ZNK18GrConvexPolyEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrConvexPolyEffect*)* @_ZNK18GrConvexPolyEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrConvexPolyEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK18GrConvexPolyEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrConvexPolyEffect*, %class.GrFragmentProcessor*)* @_ZNK18GrConvexPolyEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV20GrGLConvexPolyEffect = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLConvexPolyEffect*)* @_ZN20GrGLConvexPolyEffectD0Ev to i8*), i8* bitcast (void (%class.GrGLConvexPolyEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN20GrGLConvexPolyEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLConvexPolyEffect*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN20GrGLConvexPolyEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"ConvexPoly\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@switch.table._ZN18GrConvexPolyEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE14GrClipEdgeTypeRK6SkPath = private unnamed_addr constant [4 x i32] [i32 2, i32 3, i32 0, i32 1], align 4

@_ZN18GrConvexPolyEffectD1Ev = hidden unnamed_addr alias void (%class.GrConvexPolyEffect*), void (%class.GrConvexPolyEffect*)* @_ZN18GrConvexPolyEffectD2Ev
@_ZN18GrConvexPolyEffectC1ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE14GrClipEdgeTypeiPKf = hidden unnamed_addr alias void (%class.GrConvexPolyEffect*, %class.GrFragmentProcessor*, i32, i32, float*), void (%class.GrConvexPolyEffect*, %class.GrFragmentProcessor*, i32, i32, float*)* @_ZN18GrConvexPolyEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE14GrClipEdgeTypeiPKf
@_ZN18GrConvexPolyEffectC1ERKS_ = hidden unnamed_addr alias void (%class.GrConvexPolyEffect*, %class.GrConvexPolyEffect*), void (%class.GrConvexPolyEffect*, %class.GrConvexPolyEffect*)* @_ZN18GrConvexPolyEffectC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLConvexPolyEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLConvexPolyEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %4 = alloca %"class.SkSL::dsl::DSLModifiers", align 8
  %5 = alloca %"class.SkSL::dsl::DSLType", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %10 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %11 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %12 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %13 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %14 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %15 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %16 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %17 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %18 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %19 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %20 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %21 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %22 = alloca %"class.SkSL::dsl::PositionInfo", align 8
  %23 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %24 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %25 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %26 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %27 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %28 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %29 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %30 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %31 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %32 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %33 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %34 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %35 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %36 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %37 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %38 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %39 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %40 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %41 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %42 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %43 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %44 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %45 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %46 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %47 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %48 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %49 = bitcast %class.GrFragmentProcessor** %48 to %class.GrConvexPolyEffect**
  %50 = load %class.GrConvexPolyEffect*, %class.GrConvexPolyEffect** %49, align 8
  %51 = getelementptr inbounds %class.GrGLConvexPolyEffect, %class.GrGLConvexPolyEffect* %0, i64 0, i32 0
  tail call void @_ZN4SkSL3dsl22StartFragmentProcessorEP23GrGLSLFragmentProcessorPNS1_8EmitArgsE(%class.GrGLSLFragmentProcessor* %51, %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1) #12
  %52 = bitcast %"class.SkSL::dsl::DSLVar"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %52) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 152, i1 false)
  %53 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %4, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast i32* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 -1, i64 40, i1 false) #12
  %56 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %4, i64 0, i32 0, i32 0, i32 11
  %57 = bitcast [4 x i8]* %56 to i32*
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %4, i64 0, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %4, i64 0, i32 0, i32 0, i32 12, i32 1
  %60 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %4, i64 0, i32 0, i32 1
  %61 = bitcast i64* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #12
  store i32 8, i32* %60, align 8
  %62 = bitcast %"class.SkSL::dsl::DSLType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #12
  %63 = getelementptr inbounds %"class.SkSL::dsl::DSLType", %"class.SkSL::dsl::DSLType"* %5, i64 0, i32 0
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %63, align 8
  %64 = getelementptr inbounds %"class.SkSL::dsl::DSLType", %"class.SkSL::dsl::DSLType"* %5, i64 0, i32 1
  store i8 6, i8* %64, align 8
  %65 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %50, i64 0, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = call { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl5ArrayERKNS0_7DSLTypeEi(%"class.SkSL::dsl::DSLType"* nonnull dereferenceable(16) %5, i32 %66) #12
  %68 = extractvalue { %"class.SkSL::Type"*, i8 } %67, 0
  %69 = extractvalue { %"class.SkSL::Type"*, i8 } %67, 1
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #12
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_12DSLModifiersENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %3, %"class.SkSL::dsl::DSLModifiers"* nonnull byval(%"class.SkSL::dsl::DSLModifiers") align 8 %4, %"class.SkSL::Type"* %68, i8 %69, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #12
  call void @_ZN4SkSL3dsl13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %3, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 46) #12
  %70 = call i32 @_ZN4SkSL3dsl16VarUniformHandleERKNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %3) #12
  %71 = getelementptr inbounds %class.GrGLConvexPolyEffect, %class.GrGLConvexPolyEffect* %0, i64 0, i32 1, i32 0
  store i32 %70, i32* %71, align 8
  %72 = bitcast %"class.SkSL::dsl::DSLVar"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %72) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 152, i1 false)
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %8, i32 1) #12
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %7, %"class.SkSL::Type"* null, i8 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %8) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #12
  call void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %9, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %7, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 49) #12
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %9) #12
  %73 = bitcast %"class.SkSL::dsl::DSLVar"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %73) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 152, i1 false)
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %11) #12
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %10, %"class.SkSL::Type"* null, i8 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %11) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %11) #12
  call void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %12, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %10, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 51) #12
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %12) #12
  %74 = load i32, i32* %65, align 8
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %2
  %77 = bitcast %"class.SkSL::dsl::DSLExpression"* %17 to i8*
  %78 = bitcast %"class.SkSL::dsl::DSLExpression"* %19 to i8*
  %79 = bitcast %"class.SkSL::dsl::DSLVar"* %21 to i8*
  %80 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %22, i64 0, i32 0
  %81 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %22, i64 0, i32 1
  %82 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %50, i64 0, i32 1
  br label %88

83:                                               ; preds = %95, %2
  %84 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %50, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = or i32 %85, 1
  %87 = icmp eq i32 %86, 3
  br i1 %87, label %102, label %103

88:                                               ; preds = %76, %95
  %89 = phi i32 [ 0, %76 ], [ %99, %95 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %17, i32 %89) #12
  call void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %16, %"class.SkSL::dsl::DSLVar"* nonnull %3, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %17) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %15, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 53) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #12
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %79) #12
  call void @_ZN4SkSL3dsl12sk_FragCoordEv(%"class.SkSL::dsl::DSLVar"* nonnull sret %21) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1EONS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %20, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %21) #12
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i8** %80, align 8
  store i32 53, i32* %81, align 8
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_S3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %19, %"class.SkSL::dsl::DSLExpression"* nonnull %20, i8 signext 0, i8 signext 1, i8 signext 5, %"class.SkSL::dsl::PositionInfo"* nonnull byval(%"class.SkSL::dsl::PositionInfo") align 8 %22) #12
  call void @_ZN4SkSL3dsl7DSLType9ConstructIJNS0_13DSLExpressionEEEES3_S1_DpOT_(%"class.SkSL::dsl::DSLExpression"* nonnull sret %18, %"class.SkSL::Type"* null, i8 6, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %19) #12
  call void @_ZN4SkSL3dsl3DotENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %14, %"class.SkSL::dsl::DSLExpression"* nonnull %15, %"class.SkSL::dsl::DSLExpression"* nonnull %18, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 53) #12
  call void @_ZN4SkSL3dsl6DSLVaraSENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %13, %"class.SkSL::dsl::DSLVar"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* nonnull %14) #12
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %13) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %14) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %18) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %19) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %20) #12
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %79) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %15) #12
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %16) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #12
  %90 = load i32, i32* %82, align 4
  %91 = and i32 %90, -3
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %88
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %25, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %10) #12
  call void @_ZN4SkSL3dsl8SaturateENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %24, %"class.SkSL::dsl::DSLExpression"* nonnull %25, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 55) #12
  call void @_ZN4SkSL3dsl6DSLVaraSENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %23, %"class.SkSL::dsl::DSLVar"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* nonnull %24) #12
  br label %95

94:                                               ; preds = %88
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %30, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %10) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC2Ef(%"class.SkSL::dsl::DSLExpression"* nonnull %31, float 5.000000e-01) #12
  call void @_ZN4SkSL3dslgeENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %29, %"class.SkSL::dsl::DSLExpression"* nonnull %30, %"class.SkSL::dsl::DSLExpression"* nonnull %31) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %28, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %29, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 57) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC2Ef(%"class.SkSL::dsl::DSLExpression"* nonnull %32, float 1.000000e+00) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC2Ef(%"class.SkSL::dsl::DSLExpression"* nonnull %33, float 0.000000e+00) #12
  call void @_ZN4SkSL3dsl6SelectENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %27, %"class.SkSL::dsl::DSLExpression"* nonnull %28, %"class.SkSL::dsl::DSLExpression"* nonnull %32, %"class.SkSL::dsl::DSLExpression"* nonnull %33, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 57) #12
  call void @_ZN4SkSL3dsl6DSLVaraSENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %26, %"class.SkSL::dsl::DSLVar"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* nonnull %27) #12
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %26) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %27) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %33) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %32) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %28) #12
  br label %95

95:                                               ; preds = %94, %93
  %96 = phi %"class.SkSL::dsl::DSLPossibleExpression"* [ %29, %94 ], [ %23, %93 ]
  %97 = phi %"class.SkSL::dsl::DSLExpression"* [ %31, %94 ], [ %24, %93 ]
  %98 = phi %"class.SkSL::dsl::DSLExpression"* [ %30, %94 ], [ %25, %93 ]
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %96) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %97) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %98) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %35, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %10) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %36, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %7) #12
  call void @_ZN4SkSL3dslmLENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %34, %"class.SkSL::dsl::DSLExpression"* nonnull %36, %"class.SkSL::dsl::DSLExpression"* nonnull %35) #12
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %34) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %36) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %35) #12
  %99 = add nuw nsw i32 %89, 1
  %100 = load i32, i32* %65, align 8
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %88, label %83

102:                                              ; preds = %83
  call void @_ZN4SkSL3dsl13DSLExpressionC2Ef(%"class.SkSL::dsl::DSLExpression"* nonnull %40, float 1.000000e+00) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %41, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %7) #12
  call void @_ZN4SkSL3dslmiENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %39, %"class.SkSL::dsl::DSLExpression"* nonnull %40, %"class.SkSL::dsl::DSLExpression"* nonnull %41) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %38, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %39, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 63) #12
  call void @_ZN4SkSL3dsl6DSLVaraSENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %37, %"class.SkSL::dsl::DSLVar"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %38) #12
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %37) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %38) #12
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %39) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %41) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %40) #12
  br label %103

103:                                              ; preds = %102, %83
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %46) #12
  call void @_ZN4SkSL3dsl11SampleChildEiNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %45, i32 0, %"class.SkSL::dsl::DSLExpression"* nonnull %46) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %47, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %7) #12
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %44, %"class.SkSL::dsl::DSLExpression"* nonnull %45, %"class.SkSL::dsl::DSLExpression"* nonnull %47) #12
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %43, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %44, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 66) #12
  call void @_ZN4SkSL3dsl6ReturnENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %42, %"class.SkSL::dsl::DSLExpression"* nonnull %43, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 66) #12
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %42) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %43) #12
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %44) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %47) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %45) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %46) #12
  call void @_ZN4SkSL3dsl20EndFragmentProcessorEv() #12
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %73) #12
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %72) #12
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %52) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4SkSL3dsl22StartFragmentProcessorEP23GrGLSLFragmentProcessorPNS1_8EmitArgsE(%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl5ArrayERKNS0_7DSLTypeEi(%"class.SkSL::dsl::DSLType"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #2

declare void @_ZN4SkSL3dsl6DSLVarC1ENS0_12DSLModifiersENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLModifiers"* byval(%"class.SkSL::dsl::DSLModifiers") align 8, %"class.SkSL::Type"*, i8, i8*, %"class.SkSL::dsl::DSLExpression"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4SkSL3dsl13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152), i8*, i32) local_unnamed_addr #2

declare i32 @_ZN4SkSL3dsl16VarUniformHandleERKNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"*, i32) unnamed_addr #2

declare void @_ZN4SkSL3dsl6DSLVarC1ENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"*, %"class.SkSL::Type"*, i8, i8*, %"class.SkSL::dsl::DSLExpression"*) unnamed_addr #2

declare void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* sret, %"class.SkSL::dsl::DSLVar"* dereferenceable(152), i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"*) unnamed_addr #3

declare void @_ZN4SkSL3dsl3DotENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32) unnamed_addr #2

declare void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_S3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8 signext, i8 signext, %"class.SkSL::dsl::PositionInfo"* byval(%"class.SkSL::dsl::PositionInfo") align 8) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl12sk_FragCoordEv(%"class.SkSL::dsl::DSLVar"* sret) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1EONS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"* dereferenceable(152)) unnamed_addr #2

declare void @_ZN4SkSL3dsl6DSLVaraSENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"*) unnamed_addr #3

declare void @_ZN4SkSL3dsl8SaturateENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"* dereferenceable(152)) unnamed_addr #2

declare void @_ZN4SkSL3dsl6SelectENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dslgeENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dslmLENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dslmiENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl6ReturnENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl11SampleChildEiNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLExpression"* sret, i32, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl20EndFragmentProcessorEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLConvexPolyEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLConvexPolyEffect* nocapture, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.GrFragmentProcessor* %2 to %class.GrConvexPolyEffect*
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %6 = bitcast %class.GrFragmentProcessor* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = mul nsw i32 %7, 3
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 2
  %11 = getelementptr inbounds %class.GrGLConvexPolyEffect, %class.GrGLConvexPolyEffect* %0, i64 0, i32 2, i64 0
  %12 = bitcast float* %11 to i8*
  %13 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %4, i64 0, i32 3, i64 0
  %14 = bitcast float* %13 to i8*
  %15 = tail call i32 @bcmp(i8* %12, i8* %14, i64 %10)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.GrGLConvexPolyEffect, %class.GrGLConvexPolyEffect* %0, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %21 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %21, i64 13
  %23 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %22, align 8
  tail call void %23(%class.GrGLSLProgramDataManager* %1, i32 %19, i32 %7, float* %13) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %14, i64 %10, i1 false)
  br label %24

24:                                               ; preds = %3, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %class.GrFragmentProcessor* } @_ZN18GrConvexPolyEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE14GrClipEdgeTypeRK6SkPath(%class.GrFragmentProcessor*, i32, %class.SkPath* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %4 = alloca [24 x float], align 16
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca %"class.SkPath::Iter", align 8
  %7 = alloca <2 x float>, align 8
  %8 = bitcast <2 x float>* %7 to %struct.SkPoint*
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 0, i32 0
  %10 = load %class.SkPathRef*, %class.SkPathRef** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 15
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %199

14:                                               ; preds = %3
  %15 = tail call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %2) #12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %199

17:                                               ; preds = %14
  %18 = tail call i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16) %2) #12
  %19 = icmp eq i32 %18, 2
  br i1 %19, label %20, label %27

20:                                               ; preds = %17
  %21 = or i32 %1, 1
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = tail call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor12ModulateRGBAENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor* %0, %struct.SkRGBA4f* nonnull dereferenceable(16) @_ZL17SK_PMColor4fWHITE) #12
  br label %199

25:                                               ; preds = %20
  %26 = tail call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor12ModulateRGBAENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor* %0, %struct.SkRGBA4f* nonnull dereferenceable(16) @_ZL23SK_PMColor4fTRANSPARENT) #12
  br label %199

27:                                               ; preds = %17
  %28 = bitcast [24 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %28) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -1, i64 96, i1 false)
  %29 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #12
  %30 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %31 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0, i32 0
  %32 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  %33 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1, i32 0
  %34 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1, i32 1
  %35 = bitcast %"class.SkPath::Iter"* %6 to i8*
  %36 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %35) #12
  %37 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %6, i64 0, i32 4, i32 0
  %38 = bitcast %"class.SkPath::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 32, i1 false)
  %39 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %6, i64 0, i32 6
  %40 = bitcast float* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 -1, i64 16, i1 false)
  %41 = bitcast i8* %39 to i64*
  store i64 -6148914691236517206, i64* %41, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %6, %class.SkPath* dereferenceable(16) %2, i1 zeroext true) #12
  %42 = bitcast <2 x float>* %7 to i8*
  %43 = getelementptr inbounds <2 x float>, <2 x float>* %7, i64 0, i64 0
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  %45 = icmp eq i32 %18, 1
  %46 = bitcast <2 x float>* %7 to i32*
  br label %47

47:                                               ; preds = %94, %27
  %48 = phi i32 [ %107, %94 ], [ 0, %27 ]
  %49 = icmp ugt i32 %48, 7
  br label %50

50:                                               ; preds = %52, %47
  %51 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %6, %struct.SkPoint* nonnull %30) #12
  switch i32 %51, label %196 [
    i32 6, label %108
    i32 0, label %52
    i32 5, label %52
    i32 1, label %53
  ]

52:                                               ; preds = %50, %50, %61
  br label %50

53:                                               ; preds = %50
  br i1 %49, label %196, label %54

54:                                               ; preds = %53
  %55 = load float, float* %31, align 16
  %56 = load float, float* %33, align 8
  %57 = fcmp une float %55, %56
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = load float, float* %34, align 4
  %60 = load float, float* %32, align 4
  br label %65

61:                                               ; preds = %54
  %62 = load float, float* %32, align 4
  %63 = load float, float* %34, align 4
  %64 = fcmp une float %62, %63
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %58
  %66 = phi float [ %60, %58 ], [ %62, %61 ]
  %67 = phi float [ %59, %58 ], [ %63, %61 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #12
  %68 = fsub float %56, %55
  %69 = insertelement <2 x float> undef, float %68, i32 0
  %70 = fsub float %67, %66
  %71 = insertelement <2 x float> %69, float %70, i32 1
  store <2 x float> %71, <2 x float>* %7, align 8
  %72 = call zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint* nonnull %8) #12
  %73 = load float, float* %44, align 4
  br i1 %45, label %74, label %83

74:                                               ; preds = %65
  %75 = mul nsw i32 %48, 3
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds [24 x float], [24 x float]* %4, i64 0, i64 %76
  store float %73, float* %77, align 4
  %78 = load float, float* %43, align 8
  %79 = fsub float -0.000000e+00, %78
  %80 = add nuw nsw i32 %75, 1
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds [24 x float], [24 x float]* %4, i64 0, i64 %81
  store float %79, float* %82, align 4
  br label %94

83:                                               ; preds = %65
  %84 = fsub float -0.000000e+00, %73
  %85 = mul nsw i32 %48, 3
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds [24 x float], [24 x float]* %4, i64 0, i64 %86
  store float %84, float* %87, align 4
  %88 = load i32, i32* %46, align 8
  %89 = add nuw nsw i32 %85, 1
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds [24 x float], [24 x float]* %4, i64 0, i64 %90
  %92 = bitcast float* %91 to i32*
  store i32 %88, i32* %92, align 4
  %93 = bitcast i32 %88 to float
  br label %94

94:                                               ; preds = %83, %74
  %95 = phi i32 [ %85, %83 ], [ %75, %74 ]
  %96 = phi float [ %93, %83 ], [ %79, %74 ]
  %97 = phi float [ %84, %83 ], [ %73, %74 ]
  %98 = load float, float* %33, align 8
  %99 = fmul float %97, %98
  %100 = load float, float* %34, align 4
  %101 = fmul float %96, %100
  %102 = fadd float %99, %101
  %103 = fsub float -0.000000e+00, %102
  %104 = add nsw i32 %95, 2
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [24 x float], [24 x float]* %4, i64 0, i64 %105
  store float %103, float* %106, align 4
  %107 = add nuw nsw i32 %48, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #12
  br label %47

108:                                              ; preds = %50
  %109 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 4
  %110 = load i8, i8* %109, align 2
  %111 = and i8 %110, 2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %108
  %114 = icmp ult i32 %1, 4
  br i1 %114, label %116, label %115

115:                                              ; preds = %113
  call void @llvm.trap() #12
  unreachable

116:                                              ; preds = %113
  %117 = sext i32 %1 to i64
  %118 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN18GrConvexPolyEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE14GrClipEdgeTypeRK6SkPath, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  br label %120

120:                                              ; preds = %116, %108
  %121 = phi i32 [ %1, %108 ], [ %119, %116 ]
  %122 = add nsw i32 %48, -1
  %123 = icmp ugt i32 %122, 7
  br i1 %123, label %196, label %124

124:                                              ; preds = %120
  %125 = call i8* @_ZN11GrProcessornwEm(i64 168) #12
  %126 = bitcast i8* %125 to %class.GrConvexPolyEffect*
  %127 = bitcast i8* %125 to %class.GrFragmentProcessor*
  %128 = icmp eq %class.GrFragmentProcessor* %0, null
  br i1 %128, label %133, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = and i32 %131, 1
  br label %133

133:                                              ; preds = %129, %124
  %134 = phi i32 [ %132, %129 ], [ 1, %124 ]
  %135 = bitcast i8* %125 to i32 (...)***
  %136 = getelementptr inbounds i8, i8* %125, i64 8
  %137 = bitcast i8* %136 to i32*
  store i32 36, i32* %137, align 8
  %138 = getelementptr inbounds i8, i8* %125, i64 12
  %139 = bitcast i8* %138 to i32*
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds i8, i8* %125, i64 24
  %141 = getelementptr inbounds i8, i8* %125, i64 16
  %142 = getelementptr inbounds i8, i8* %125, i64 32
  %143 = bitcast i8* %142 to i64*
  %144 = bitcast i8* %140 to i8**
  store i8* %141, i8** %144, align 8
  store i64 8589934592, i64* %143, align 8
  %145 = getelementptr inbounds i8, i8* %125, i64 40
  %146 = bitcast i8* %145 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %146, align 8
  %147 = getelementptr inbounds i8, i8* %125, i64 48
  %148 = bitcast i8* %147 to i32*
  store i32 %134, i32* %148, align 8
  %149 = getelementptr inbounds i8, i8* %125, i64 52
  %150 = bitcast i8* %149 to i32*
  store i32 0, i32* %150, align 4
  %151 = getelementptr inbounds i8, i8* %125, i64 56
  store i8 0, i8* %151, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18GrConvexPolyEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %152 = getelementptr inbounds i8, i8* %125, i64 60
  %153 = bitcast i8* %152 to i32*
  store i32 %121, i32* %153, align 4
  %154 = getelementptr inbounds i8, i8* %125, i64 64
  %155 = bitcast i8* %154 to i32*
  store i32 %48, i32* %155, align 8
  %156 = getelementptr inbounds i8, i8* %125, i64 68
  %157 = mul nsw i32 %48, 3
  %158 = zext i32 %157 to i64
  %159 = shl nuw nsw i64 %158, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %156, i8* nonnull align 16 %28, i64 %159, i1 false) #12
  %160 = zext i32 %48 to i64
  %161 = and i64 %160, 1
  %162 = icmp eq i32 %48, 1
  br i1 %162, label %188, label %163

163:                                              ; preds = %133
  %164 = sub nsw i64 %160, %161
  br label %165

165:                                              ; preds = %165, %163
  %166 = phi i64 [ 0, %163 ], [ %181, %165 ]
  %167 = phi i64 [ %164, %163 ], [ %182, %165 ]
  %168 = mul i64 %166, 3
  %169 = add i64 %168, 2
  %170 = and i64 %169, 4294967294
  %171 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %126, i64 0, i32 3, i64 %170
  %172 = load float, float* %171, align 4
  %173 = fadd float %172, 5.000000e-01
  store float %173, float* %171, align 4
  %174 = or i64 %166, 1
  %175 = mul i64 %174, 3
  %176 = add i64 %175, 2
  %177 = and i64 %176, 4294967295
  %178 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %126, i64 0, i32 3, i64 %177
  %179 = load float, float* %178, align 4
  %180 = fadd float %179, 5.000000e-01
  store float %180, float* %178, align 4
  %181 = add nuw nsw i64 %166, 2
  %182 = add i64 %167, -2
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %165

184:                                              ; preds = %165
  %185 = mul i64 %181, 3
  %186 = add i64 %185, 2
  %187 = and i64 %186, 4294967294
  br label %188

188:                                              ; preds = %184, %133
  %189 = phi i64 [ 2, %133 ], [ %187, %184 ]
  %190 = icmp eq i64 %161, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %126, i64 0, i32 3, i64 %189
  %193 = load float, float* %192, align 4
  %194 = fadd float %193, 5.000000e-01
  store float %194, float* %192, align 4
  br label %195

195:                                              ; preds = %188, %191
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %127, %class.GrFragmentProcessor* %0, i64 1) #12
  br label %196

196:                                              ; preds = %50, %53, %195, %120
  %197 = phi i8 [ 1, %195 ], [ 0, %120 ], [ 0, %53 ], [ 0, %50 ]
  %198 = phi %class.GrFragmentProcessor* [ %127, %195 ], [ %0, %120 ], [ %0, %53 ], [ %0, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %28) #12
  br label %199

199:                                              ; preds = %14, %3, %196, %25, %23
  %200 = phi i8 [ 1, %23 ], [ 1, %25 ], [ %197, %196 ], [ 0, %3 ], [ 0, %14 ]
  %201 = phi %class.GrFragmentProcessor* [ %24, %23 ], [ %26, %25 ], [ %198, %196 ], [ %0, %3 ], [ %0, %14 ]
  %202 = insertvalue { i8, %class.GrFragmentProcessor* } undef, i8 %200, 0
  %203 = insertvalue { i8, %class.GrFragmentProcessor* } %202, %class.GrFragmentProcessor* %201, 1
  ret { i8, %class.GrFragmentProcessor* } %203
}

declare i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor12ModulateRGBAENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkPoint9normalizeEv(%struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrConvexPolyEffectD2Ev(%class.GrConvexPolyEffect* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.19, %class.SkTArray.19* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #12
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.19* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #12
  br label %34

34:                                               ; preds = %10, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrConvexPolyEffectD0Ev(%class.GrConvexPolyEffect*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.19, %class.SkTArray.19* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #12
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.19* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #12
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrConvexPolyEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18GrConvexPolyEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrConvexPolyEffect* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.GrProcessor, %class.GrProcessor* %4, i64 4
  %6 = bitcast %class.GrProcessor* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 3
  %9 = getelementptr inbounds %class.GrProcessor, %class.GrProcessor* %4, i64 3, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %8, %10
  %12 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %13 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %13, i64 2
  %15 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %14, align 8
  tail call void %15(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK18GrConvexPolyEffect17onMakeProgramImplEv(%class.GrConvexPolyEffect* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 144) #13
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV20GrGLConvexPolyEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %2, i64 44
  %15 = bitcast i8* %14 to <4 x float>*
  store <4 x float> <float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000>, <4 x float>* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 60
  %17 = bitcast i8* %16 to <4 x float>*
  store <4 x float> <float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000>, <4 x float>* %17, align 4
  %18 = getelementptr inbounds i8, i8* %2, i64 76
  %19 = bitcast i8* %18 to float*
  store float 0x7FF8000000000000, float* %19, align 4
  %20 = getelementptr inbounds i8, i8* %2, i64 80
  %21 = bitcast i8* %20 to float*
  store float 0x7FF8000000000000, float* %21, align 4
  %22 = getelementptr inbounds i8, i8* %2, i64 84
  %23 = bitcast i8* %22 to <4 x float>*
  store <4 x float> <float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000>, <4 x float>* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 100
  %25 = bitcast i8* %24 to <4 x float>*
  store <4 x float> <float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000>, <4 x float>* %25, align 4
  %26 = getelementptr inbounds i8, i8* %2, i64 116
  %27 = bitcast i8* %26 to <4 x float>*
  store <4 x float> <float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000, float 0x7FF8000000000000>, <4 x float>* %27, align 4
  %28 = getelementptr inbounds i8, i8* %2, i64 132
  %29 = bitcast i8* %28 to float*
  store float 0x7FF8000000000000, float* %29, align 4
  %30 = getelementptr inbounds i8, i8* %2, i64 136
  %31 = bitcast i8* %30 to float*
  store float 0x7FF8000000000000, float* %31, align 4
  %32 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrConvexPolyEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE14GrClipEdgeTypeiPKf(%class.GrConvexPolyEffect*, %class.GrFragmentProcessor*, i32, i32, float* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = bitcast %class.GrConvexPolyEffect* %0 to %class.GrFragmentProcessor*
  %7 = icmp eq %class.GrFragmentProcessor* %1, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  br label %12

12:                                               ; preds = %5, %8
  %13 = phi i32 [ %11, %8 ], [ 1, %5 ]
  %14 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 36, i32* %15, align 8
  %16 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %20 = bitcast %class.SkTArray.19* %17 to i8**
  store i8* %18, i8** %20, align 8
  store i64 8589934592, i64* %19, align 8
  %21 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %21, align 8
  %22 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 3
  store i32 %13, i32* %22, align 8
  %23 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18GrConvexPolyEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %25 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 1
  store i32 %2, i32* %25, align 4
  %26 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 2
  store i32 %3, i32* %26, align 8
  %27 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 3
  %28 = bitcast [24 x float]* %27 to i8*
  %29 = bitcast float* %4 to i8*
  %30 = mul nsw i32 %3, 3
  %31 = sext i32 %30 to i64
  %32 = shl nsw i64 %31, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 %32, i1 false)
  %33 = icmp sgt i32 %3, 0
  br i1 %33, label %34, label %51

34:                                               ; preds = %12
  %35 = zext i32 %3 to i64
  %36 = and i64 %35, 1
  %37 = icmp eq i32 %3, 1
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = sub nsw i64 %35, %36
  br label %52

40:                                               ; preds = %52
  %41 = mul i64 %68, 3
  %42 = add i64 %41, 2
  %43 = and i64 %42, 4294967294
  br label %44

44:                                               ; preds = %40, %34
  %45 = phi i64 [ 2, %34 ], [ %43, %40 ]
  %46 = icmp eq i64 %36, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 3, i64 %45
  %49 = load float, float* %48, align 4
  %50 = fadd float %49, 5.000000e-01
  store float %50, float* %48, align 4
  br label %51

51:                                               ; preds = %47, %44, %12
  tail call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %6, %class.GrFragmentProcessor* %1, i64 1) #12
  ret void

52:                                               ; preds = %52, %38
  %53 = phi i64 [ 0, %38 ], [ %68, %52 ]
  %54 = phi i64 [ %39, %38 ], [ %69, %52 ]
  %55 = mul i64 %53, 3
  %56 = add i64 %55, 2
  %57 = and i64 %56, 4294967294
  %58 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 3, i64 %57
  %59 = load float, float* %58, align 4
  %60 = fadd float %59, 5.000000e-01
  store float %60, float* %58, align 4
  %61 = or i64 %53, 1
  %62 = mul i64 %61, 3
  %63 = add i64 %62, 2
  %64 = and i64 %63, 4294967295
  %65 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 3, i64 %64
  %66 = load float, float* %65, align 4
  %67 = fadd float %66, 5.000000e-01
  store float %67, float* %65, align 4
  %68 = add nuw nsw i64 %53, 2
  %69 = add i64 %54, -2
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %40, label %52
}

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18GrConvexPolyEffectC2ERKS_(%class.GrConvexPolyEffect*, %class.GrConvexPolyEffect* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrConvexPolyEffect* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrConvexPolyEffect* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 36, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.19* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18GrConvexPolyEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %1, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #12
  %25 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 3, i64 0
  %26 = bitcast float* %25 to i8*
  %27 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %1, i64 0, i32 3, i64 0
  %28 = bitcast float* %27 to i8*
  %29 = load i32, i32* %23, align 8
  %30 = mul nsw i32 %29, 3
  %31 = sext i32 %30 to i64
  %32 = shl nsw i64 %31, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %28, i64 %32, i1 false)
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK18GrConvexPolyEffect5cloneEv(%class.GrConvexPolyEffect*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 168) #12
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrConvexPolyEffect* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 36, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18GrConvexPolyEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds i8, i8* %2, i64 64
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %30, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #12
  %33 = getelementptr inbounds i8, i8* %2, i64 68
  %34 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 3, i64 0
  %35 = bitcast float* %34 to i8*
  %36 = load i32, i32* %31, align 8
  %37 = mul nsw i32 %36, 3
  %38 = sext i32 %37 to i64
  %39 = shl nsw i64 %38, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %35, i64 %39, i1 false) #12
  ret %class.GrFragmentProcessor* %3
}

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK18GrConvexPolyEffect9onIsEqualERK19GrFragmentProcessor(%class.GrConvexPolyEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #5 align 2 {
  %3 = bitcast %class.GrFragmentProcessor* %1 to %class.GrConvexPolyEffect*
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %5 = bitcast [4 x i8]* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %27

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %12 = bitcast %class.GrFragmentProcessor* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %27

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %3, i64 0, i32 3, i64 0
  %19 = bitcast float* %18 to i8*
  %20 = getelementptr inbounds %class.GrConvexPolyEffect, %class.GrConvexPolyEffect* %0, i64 0, i32 3, i64 0
  %21 = bitcast float* %20 to i8*
  %22 = mul nsw i32 %13, 3
  %23 = sext i32 %22 to i64
  %24 = shl nsw i64 %23, 2
  %25 = tail call i32 @bcmp(i8* %19, i8* %21, i64 %24)
  %26 = icmp eq i32 %25, 0
  br label %27

27:                                               ; preds = %17, %10, %2
  %28 = phi i1 [ false, %10 ], [ false, %2 ], [ %26, %17 ]
  ret i1 %28
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrGLConvexPolyEffectD0Ev(%class.GrGLConvexPolyEffect*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLConvexPolyEffect, %class.GrGLConvexPolyEffect* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #12
  %3 = bitcast %class.GrGLConvexPolyEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK18GrConvexPolyEffect4nameEv(%class.GrConvexPolyEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i64 0, i64 0)) #14
  unreachable
}

declare void @_ZN4SkSL3dsl13DSLExpressionC2Ef(%"class.SkSL::dsl::DSLExpression"*, float) unnamed_addr #2

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.20"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #12
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #12
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #12
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.1* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #12
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #12
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #12
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLType9ConstructIJNS0_13DSLExpressionEEEES3_S1_DpOT_(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::Type"*, i8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkTArray.55, align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = alloca %class.SkTArray.55, align 8
  %8 = bitcast %class.SkTArray.55* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %5, i64 0, i32 0
  %10 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %5, i64 0, i32 1
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %9, align 8
  store i64 1, i64* %10, align 8
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.55* nonnull %5, i32 1, i32 0) #12
  %11 = load i64, i64* %10, align 8
  %12 = shl i64 %11, 32
  %13 = and i64 %12, 4294967296
  %14 = and i64 %11, -4294967297
  %15 = or i64 %13, %14
  store i64 %15, i64* %10, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #12
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.55* nonnull %5, i32 1, i32 1) #12
  %16 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %9, align 8
  %17 = load i64, i64* %10, align 8
  %18 = lshr i64 %17, 1
  %19 = and i64 %18, 2147483647
  %20 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %16, i64 %19
  %21 = add i64 %17, 2
  %22 = and i64 %21, 4294967294
  %23 = and i64 %17, -4294967295
  %24 = or i64 %22, %23
  store i64 %24, i64* %10, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %20, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %6) #12
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #12
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_(%class.SkTArray.55* nonnull %7, %class.SkTArray.55* nonnull dereferenceable(16) %5)
  call void @_ZN4SkSL3dsl7DSLType9ConstructES1_8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::Type"* %1, i8 %2, %class.SkTArray.55* nonnull %7) #12
  %25 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %7, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %4
  %30 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %7, i64 0, i32 0
  br label %35

31:                                               ; preds = %35, %4
  %32 = phi i64 [ %26, %4 ], [ %40, %35 ]
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %47, label %44

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %39, %35 ]
  %37 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %30, align 8
  %38 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %37, i64 %36
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %38) #12
  %39 = add nuw nsw i64 %36, 1
  %40 = load i64, i64* %25, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = icmp ult i64 %39, %42
  br i1 %43, label %35, label %31

44:                                               ; preds = %31
  %45 = bitcast %class.SkTArray.55* %7 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @_Z7sk_freePv(i8* %46) #12
  br label %47

47:                                               ; preds = %31, %44
  %48 = load i64, i64* %10, align 8
  %49 = and i64 %48, 4294967294
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %55, %47
  %52 = phi i64 [ %48, %47 ], [ %60, %55 ]
  %53 = and i64 %52, 1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %67, label %64

55:                                               ; preds = %47, %55
  %56 = phi i64 [ %59, %55 ], [ 0, %47 ]
  %57 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %9, align 8
  %58 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %57, i64 %56
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %58) #12
  %59 = add nuw nsw i64 %56, 1
  %60 = load i64, i64* %10, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %55, label %51

64:                                               ; preds = %51
  %65 = bitcast %class.SkTArray.55* %5 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @_Z7sk_freePv(i8* %66) #12
  br label %67

67:                                               ; preds = %51, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4SkSL3dsl7DSLType9ConstructES1_8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::Type"*, i8, %class.SkTArray.55*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_(%class.SkTArray.55*, %class.SkTArray.55* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray.55* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray.55* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %8, align 8
  br label %77

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %0, i64 0, i32 0
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %48 = bitcast %class.SkTArray.55* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %69, %60 ]
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = bitcast i8* %63 to %"class.SkSL::dsl::DSLExpression"*
  %65 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %59, align 8
  %66 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %65, i64 %61
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %64, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %66) #12
  %67 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %59, align 8
  %68 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %67, i64 %61
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %68) #12
  %69 = add nuw nsw i64 %61, 1
  %70 = load i64, i64* %3, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %60, label %74

74:                                               ; preds = %60, %50
  %75 = phi i64 [ %55, %50 ], [ %70, %60 ]
  %76 = and i64 %75, -4294967295
  br label %77

77:                                               ; preds = %74, %7
  %78 = phi i64 [ %76, %74 ], [ 1, %7 ]
  store i64 %78, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.55*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.55, %class.SkTArray.55* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %"class.SkSL::dsl::DSLExpression"*
  %55 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %49, align 8
  %56 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %55, i64 %51
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %54, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %56) #12
  %57 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %49, align 8
  %58 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %57, i64 %51
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %58) #12
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.55* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #12
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
